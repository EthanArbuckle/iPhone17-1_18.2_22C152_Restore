uint64_t awd::metrics::protobuf_ShutdownFile_Location_2eproto(awd::metrics *this)
{
  uint64_t result;
  uint64_t (*v2)(void);
  uint64_t vars8;

  if (awd::metrics::LocationServicesState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationServicesState::default_instance_ + 8))(awd::metrics::LocationServicesState::default_instance_);
  }
  if (awd::metrics::LocationServicesApproval::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationServicesApproval::default_instance_ + 8))(awd::metrics::LocationServicesApproval::default_instance_);
  }
  if (awd::metrics::LocationUpdateSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationUpdateSession::default_instance_ + 8))(awd::metrics::LocationUpdateSession::default_instance_);
  }
  if (awd::metrics::LocationMonitorSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMonitorSession::default_instance_ + 8))(awd::metrics::LocationMonitorSession::default_instance_);
  }
  if (awd::metrics::LocationMonitorTrigger::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMonitorTrigger::default_instance_ + 8))(awd::metrics::LocationMonitorTrigger::default_instance_);
  }
  if (awd::metrics::LocationNetworkQueries::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationNetworkQueries::default_instance_ + 8))(awd::metrics::LocationNetworkQueries::default_instance_);
  }
  if (awd::metrics::LocationWifiUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationWifiUsage::default_instance_ + 8))(awd::metrics::LocationWifiUsage::default_instance_);
  }
  if (awd::metrics::LocationEmergencySession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationEmergencySession::default_instance_ + 8))(awd::metrics::LocationEmergencySession::default_instance_);
  }
  if (awd::metrics::LocationEmergencySessionStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationEmergencySessionStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationEmergencySessionStatistics::default_instance_);
  if (awd::metrics::LocationMapMatching::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMapMatching::default_instance_ + 8))(awd::metrics::LocationMapMatching::default_instance_);
  }
  if (awd::metrics::LocationRealTimeHarvest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationRealTimeHarvest::default_instance_ + 8))(awd::metrics::LocationRealTimeHarvest::default_instance_);
  }
  if (awd::metrics::LocationSecondaryDeviceRequest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationSecondaryDeviceRequest::default_instance_ + 8))(awd::metrics::LocationSecondaryDeviceRequest::default_instance_);
  }
  if (awd::metrics::CompassSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::CompassSession::default_instance_ + 8))(awd::metrics::CompassSession::default_instance_);
  }
  if (awd::metrics::CompassSession_Rotation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::CompassSession_Rotation::default_instance_ + 8))(awd::metrics::CompassSession_Rotation::default_instance_);
  }
  if (awd::metrics::LocationCompassSaturations::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationCompassSaturations::default_instance_ + 8))(awd::metrics::LocationCompassSaturations::default_instance_);
  }
  if (awd::metrics::MotionState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionState::default_instance_ + 8))(awd::metrics::MotionState::default_instance_);
  }
  if (awd::metrics::MotionTrigger::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionTrigger::default_instance_ + 8))(awd::metrics::MotionTrigger::default_instance_);
  }
  if (awd::metrics::MotionGyroMiniCal::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionGyroMiniCal::default_instance_ + 8))(awd::metrics::MotionGyroMiniCal::default_instance_);
  }
  if (awd::metrics::MotionDropDetection::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionDropDetection::default_instance_ + 8))(awd::metrics::MotionDropDetection::default_instance_);
  }
  if (awd::metrics::MotionPedometerCalibration::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionPedometerCalibration::default_instance_ + 8))(awd::metrics::MotionPedometerCalibration::default_instance_);
  }
  if (awd::metrics::MotionGyroBiasEstimation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionGyroBiasEstimation::default_instance_ + 8))(awd::metrics::MotionGyroBiasEstimation::default_instance_);
  }
  if (awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_ + 8))(awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_);
  }
  if (awd::metrics::MotionFitnessSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessSession::default_instance_ + 8))(awd::metrics::MotionFitnessSession::default_instance_);
  }
  if (awd::metrics::MotionFitnessAllDay::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessAllDay::default_instance_ + 8))(awd::metrics::MotionFitnessAllDay::default_instance_);
  }
  if (awd::metrics::MotionPressureTemperature::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionPressureTemperature::default_instance_ + 8))(awd::metrics::MotionPressureTemperature::default_instance_);
  }
  if (awd::metrics::MotionElevationAllDay::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionElevationAllDay::default_instance_ + 8))(awd::metrics::MotionElevationAllDay::default_instance_);
  }
  if (awd::metrics::MotionPressureStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionPressureStats::default_instance_ + 8))(awd::metrics::MotionPressureStats::default_instance_);
  }
  if (awd::metrics::MotionNoGPSRunAllDay::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionNoGPSRunAllDay::default_instance_ + 8))(awd::metrics::MotionNoGPSRunAllDay::default_instance_);
  }
  if (awd::metrics::MotionFitnessDaily::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessDaily::default_instance_ + 8))(awd::metrics::MotionFitnessDaily::default_instance_);
  }
  if (awd::metrics::MotionFitnessPedometer::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessPedometer::default_instance_ + 8))(awd::metrics::MotionFitnessPedometer::default_instance_);
  }
  if (awd::metrics::MotionFitnessStrideCalibration::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessStrideCalibration::default_instance_ + 8))(awd::metrics::MotionFitnessStrideCalibration::default_instance_);
  }
  if (awd::metrics::MotionFitnessAccelSampleRate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionFitnessAccelSampleRate::default_instance_ + 8))(awd::metrics::MotionFitnessAccelSampleRate::default_instance_);
  }
  if (awd::metrics::MotionBarometerCalibration::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionBarometerCalibration::default_instance_ + 8))(awd::metrics::MotionBarometerCalibration::default_instance_);
  }
  if (awd::metrics::MotionGyroDaily::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionGyroDaily::default_instance_ + 8))(awd::metrics::MotionGyroDaily::default_instance_);
  }
  if (awd::metrics::MotionSOSEvent::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::MotionSOSEvent::default_instance_ + 8))(awd::metrics::MotionSOSEvent::default_instance_);
  }
  if (awd::metrics::LocationBatteryState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationBatteryState::default_instance_ + 8))(awd::metrics::LocationBatteryState::default_instance_);
  }
  if (awd::metrics::LocationNavigationSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationNavigationSession::default_instance_ + 8))(awd::metrics::LocationNavigationSession::default_instance_);
  }
  if (awd::metrics::LocationMainHarvesterMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMainHarvesterMetrics::default_instance_ + 8))(awd::metrics::LocationMainHarvesterMetrics::default_instance_);
  }
  if (awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_ + 8))(awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_);
  }
  if (awd::metrics::LocationSubHarvesterMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationSubHarvesterMetrics::default_instance_ + 8))(awd::metrics::LocationSubHarvesterMetrics::default_instance_);
  }
  if (awd::metrics::LocationBeaconMonitorSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationBeaconMonitorSession::default_instance_ + 8))(awd::metrics::LocationBeaconMonitorSession::default_instance_);
  }
  if (awd::metrics::LocationBeaconMonitorTrigger::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationBeaconMonitorTrigger::default_instance_ + 8))(awd::metrics::LocationBeaconMonitorTrigger::default_instance_);
  }
  if (awd::metrics::LocationBeaconRangingSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationBeaconRangingSession::default_instance_ + 8))(awd::metrics::LocationBeaconRangingSession::default_instance_);
  }
  if (awd::metrics::LocationGPSSessionStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics::default_instance_ + 8))(awd::metrics::LocationGPSSessionStatistics::default_instance_);
  }
  if (awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_);
  if (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_
  }
                                    + 8))(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_);
  if (awd::metrics::LocationCellTileUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationCellTileUsage::default_instance_ + 8))(awd::metrics::LocationCellTileUsage::default_instance_);
  }
  if (awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ + 8))(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_);
  }
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_
  }
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_
  }
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_);
  if (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
  }
                                    + 8))(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_);
  if (awd::metrics::LocationVisibilityAssertion::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationVisibilityAssertion::default_instance_ + 8))(awd::metrics::LocationVisibilityAssertion::default_instance_);
  }
  if (awd::metrics::LocationPhoneNumberAvailability::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPhoneNumberAvailability::default_instance_ + 8))(awd::metrics::LocationPhoneNumberAvailability::default_instance_);
  }
  if (awd::metrics::LocationMobileAssetStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMobileAssetStatistics::default_instance_ + 8))(awd::metrics::LocationMobileAssetStatistics::default_instance_);
  }
  if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_
  }
                                    + 8))(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_);
  if (awd::metrics::LocationEmergencyPOIStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationEmergencyPOIStatistics::default_instance_ + 8))(awd::metrics::LocationEmergencyPOIStatistics::default_instance_);
  }
  if (awd::metrics::LocationAccessory::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory::default_instance_ + 8))(awd::metrics::LocationAccessory::default_instance_);
  }
  if (awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_);
  if (awd::metrics::LocationAccessory_Statistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_Statistics::default_instance_ + 8))(awd::metrics::LocationAccessory_Statistics::default_instance_);
  }
  if (awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PerformanceStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_PerformanceStats::default_instance_);
  if (awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_);
  if (awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_MessageHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_MessageHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_MessageHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_MessageStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_MessageStats::default_instance_ + 8))(awd::metrics::LocationAccessory_MessageStats::default_instance_);
  }
  if (awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_);
  if (awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_);
  if (awd::metrics::LocationAccessory_PASCDStats::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ + 8))(awd::metrics::LocationAccessory_PASCDStats::default_instance_);
  }
  if (awd::metrics::LocationAccessory_Coordinate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationAccessory_Coordinate::default_instance_ + 8))(awd::metrics::LocationAccessory_Coordinate::default_instance_);
  }
  result = awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  if (awd::metrics::BaroAltitudeCalibrationInfo::default_instance_)
  {
    v2 = *(uint64_t (**)(void))(*(void *)awd::metrics::BaroAltitudeCalibrationInfo::default_instance_ + 8);
    return v2();
  }
  return result;
}

void awd::metrics::protobuf_AddDesc_Location_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((awd::metrics::protobuf_AddDesc_Location_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/Location.pb.cc", a4);
    operator new();
  }
}

uint64_t awd::metrics::LocationServicesState::LocationServicesState(uint64_t this)
{
  *(void *)this = &unk_26D7BA360;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BA360;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::LocationServicesApproval(uint64_t this)
{
  *(void *)this = &unk_26D7BA3D8;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = v1;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_26D7BA3D8;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = v1;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

double awd::metrics::LocationUpdateSession::LocationUpdateSession(awd::metrics::LocationUpdateSession *this)
{
  *(void *)this = &unk_26D7BA450;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = v1;
  *((void *)this + 13) = v1;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = v1;
  *((unsigned char *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

{
  uint64_t v1;
  double result;

  *(void *)this = &unk_26D7BA450;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = v1;
  *((void *)this + 13) = v1;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = v1;
  *((unsigned char *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

void *awd::metrics::LocationMonitorSession::LocationMonitorSession(void *this)
{
  *this = &unk_26D7BA4C8;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[5] = 0;
  this[6] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &unk_26D7BA4C8;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[5] = 0;
  this[6] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::LocationMonitorTrigger(uint64_t this)
{
  *(void *)this = &unk_26D7BA540;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 64) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 31) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_26D7BA540;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 64) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 31) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  return this;
}

double awd::metrics::LocationNetworkQueries::LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this)
{
  *(void *)this = &unk_26D7BA5B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BA5B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

uint64_t awd::metrics::LocationWifiUsage::LocationWifiUsage(uint64_t this)
{
  *(void *)this = &unk_26D7BA630;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_26D7BA630;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 40) = 0;
  return this;
}

void *awd::metrics::LocationEmergencySession::LocationEmergencySession(void *this)
{
  *this = &unk_26D7BA6A8;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &unk_26D7BA6A8;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

double awd::metrics::LocationEmergencySessionStatistics::LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this)
{
  *((_DWORD *)this + 117) = 0;
  *(void *)this = &unk_26D7BA720;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((void *)this + 35) = v1;
  *((void *)this + 36) = v1;
  *((void *)this + 51) = v1;
  *((void *)this + 52) = 0;
  *((void *)this + 53) = v1;
  *((void *)this + 59) = 0;
  *((void *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *((_DWORD *)this + 117) = 0;
  *(void *)this = &unk_26D7BA720;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((void *)this + 35) = v1;
  *((void *)this + 36) = v1;
  *((void *)this + 51) = v1;
  *((void *)this + 52) = 0;
  *((void *)this + 53) = v1;
  *((void *)this + 59) = 0;
  *((void *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMapMatching::LocationMapMatching(uint64_t this)
{
  *(void *)this = &unk_26D7BA798;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BA798;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationRealTimeHarvest::LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this)
{
  *(void *)this = &unk_26D7BA810;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BA810;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationSecondaryDeviceRequest::LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  *(void *)this = &unk_26D7BA888;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BA888;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::CompassSession::CompassSession(awd::metrics::CompassSession *this)
{
  *(void *)this = &unk_26D7BA978;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0xFFFFFFFF00000000;
  *((void *)this + 18) = 0;
  *(void *)((char *)this + 212) = 0;
  *(void *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((unsigned char *)this + 200) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BA978;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0xFFFFFFFF00000000;
  *((void *)this + 18) = 0;
  *(void *)((char *)this + 212) = 0;
  *(void *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((unsigned char *)this + 200) = 0;
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::CompassSession_Rotation(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BA900;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BA900;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationCompassSaturations::LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this)
{
  *(void *)this = &unk_26D7BA9F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BA9F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

uint64_t awd::metrics::MotionState::MotionState(uint64_t this)
{
  *(void *)this = &unk_26D7BAA68;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 24) = 0;
  *(unsigned char *)(this + 28) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BAA68;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 24) = 0;
  *(unsigned char *)(this + 28) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::MotionTrigger::MotionTrigger(uint64_t this)
{
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)this = &unk_26D7BAAE0;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 64) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)this = &unk_26D7BAAE0;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 64) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  return this;
}

void *awd::metrics::MotionGyroMiniCal::MotionGyroMiniCal(void *this)
{
  *this = &unk_26D7BAB58;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_26D7BAB58;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::MotionDropDetection::MotionDropDetection(awd::metrics::MotionDropDetection *this)
{
  *(void *)this = &unk_26D7BABD0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BABD0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double awd::metrics::MotionPedometerCalibration::MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this)
{
  *(void *)this = &unk_26D7BAC48;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BAC48;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double awd::metrics::MotionGyroBiasEstimation::MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this)
{
  *(void *)this = &unk_26D7BAD38;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BAD38;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double awd::metrics::MotionGyroBiasEstimation_EndCount::MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  *(void *)this = &unk_26D7BACC0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BACC0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double awd::metrics::MotionFitnessSession::MotionFitnessSession(awd::metrics::MotionFitnessSession *this)
{
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(void *)this = &unk_26D7BADB0;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 52) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = 0;
  *((void *)this + 3) = v1;
  *(void *)((char *)this + 460) = 0;
  *(void *)((char *)this + 452) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(void *)this = &unk_26D7BADB0;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 52) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = 0;
  *((void *)this + 3) = v1;
  *(void *)((char *)this + 460) = 0;
  *(void *)((char *)this + 452) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

awd::metrics::MotionFitnessAllDay *awd::metrics::MotionFitnessAllDay::MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this)
{
  *(void *)this = &unk_26D7BAE28;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  return this;
}

{
  *(void *)this = &unk_26D7BAE28;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  return this;
}

double awd::metrics::MotionPressureTemperature::MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this)
{
  *(void *)this = &unk_26D7BAEA0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BAEA0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

double awd::metrics::MotionElevationAllDay::MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this)
{
  *(void *)this = &unk_26D7BAF18;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 35) = 0;
  *((void *)this + 36) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(void *)&double result = 255;
  *((void *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((void *)this + 41) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BAF18;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 35) = 0;
  *((void *)this + 36) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(void *)&double result = 255;
  *((void *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((void *)this + 41) = 0;
  return result;
}

double awd::metrics::MotionPressureStats::MotionPressureStats(awd::metrics::MotionPressureStats *this)
{
  *(void *)this = &unk_26D7BAF90;
  *((void *)this + 19) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BAF90;
  *((void *)this + 19) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  return result;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::MotionNoGPSRunAllDay(uint64_t this)
{
  *(void *)this = &unk_26D7BB008;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BB008;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::MotionFitnessDaily::MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this)
{
  *(void *)this = &unk_26D7BB080;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 3) = v1;
  *((void *)this + 12) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  double result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *(void *)this = &unk_26D7BB080;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 3) = v1;
  *((void *)this + 12) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  double result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

double awd::metrics::MotionFitnessPedometer::MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this)
{
  *(void *)this = &unk_26D7BB0F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BB0F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double awd::metrics::MotionFitnessStrideCalibration::MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this)
{
  *(void *)this = &unk_26D7BB170;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BB170;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void *awd::metrics::MotionFitnessAccelSampleRate::MotionFitnessAccelSampleRate(void *this)
{
  *this = &unk_26D7BB1E8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_26D7BB1E8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::MotionBarometerCalibration::MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this)
{
  *(void *)this = &unk_26D7BB260;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BB260;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t awd::metrics::MotionGyroDaily::MotionGyroDaily(uint64_t this)
{
  *(void *)this = &unk_26D7BB2D8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BB2D8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double awd::metrics::MotionSOSEvent::MotionSOSEvent(awd::metrics::MotionSOSEvent *this)
{
  *(void *)this = &unk_26D7BB350;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BB350;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

uint64_t awd::metrics::LocationBatteryState::LocationBatteryState(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB3C8;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB3C8;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationNavigationSession::LocationNavigationSession(awd::metrics::LocationNavigationSession *this)
{
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB440;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB440;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationMainHarvesterMetrics::LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this)
{
  *(void *)this = &unk_26D7BB4B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BB4B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::LocationSubHarvesterUploadAttempt(uint64_t this)
{
  *(void *)this = &unk_26D7BB530;
  *(unsigned char *)(this + 8) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 12) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BB530;
  *(unsigned char *)(this + 8) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 12) = 0;
  return this;
}

double awd::metrics::LocationSubHarvesterMetrics::LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this)
{
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB5A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 11) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB5A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 11) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double awd::metrics::LocationBeaconMonitorSession::LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this)
{
  *(void *)this = &unk_26D7BB620;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v1;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

{
  uint64_t v1;
  double result;

  *(void *)this = &unk_26D7BB620;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v1;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

void *awd::metrics::LocationBeaconMonitorTrigger::LocationBeaconMonitorTrigger(void *this)
{
  *this = &unk_26D7BB698;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = MEMORY[0x263F8C740];
  this[3] = v1;
  this[5] = 0;
  this[6] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &unk_26D7BB698;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = MEMORY[0x263F8C740];
  this[3] = v1;
  this[5] = 0;
  this[6] = 0;
  this[4] = 0;
  return this;
}

void *awd::metrics::LocationBeaconRangingSession::LocationBeaconRangingSession(void *this)
{
  *this = &unk_26D7BB710;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[6] = 0;
  this[7] = 0;
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &unk_26D7BB710;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[6] = 0;
  this[7] = 0;
  this[4] = 0;
  this[5] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::LocationGPSSessionStatistics_UncertaintyRangeData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB788;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB788;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::LocationGPSSessionStatistics_SatelliteCNORangeData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB800;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB800;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::LocationGPSSessionStatistics_SatelliteCountRangeData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB878;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB878;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::LocationGPSSessionStatistics_MotionActivityData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB8F0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB8F0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::LocationGPSSessionStatistics_SignalEnvironmentData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB968;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB968;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::LocationGPSSessionStatistics_MountedStateData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB9E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BB9E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::LocationGPSSessionStatistics_MovingStateData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBA58;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBA58;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::LocationGPSSessionStatistics_PowerStateData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBAD0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBAD0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_ChecksumData::LocationGPSSessionStatistics_ChecksumData(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *this = &unk_26D7BBB48;
  this[1] = v1;
  this[2] = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *this = &unk_26D7BBB48;
  this[1] = v1;
  this[2] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::LocationGPSSessionStatistics_DeviceOrientationData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBBC0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBBC0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::LocationGPSSessionStatistics_PowerMeasurementData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBC38;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBC38;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::LocationGPSSessionStatistics_ChargerTypeData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBCB0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBCB0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::LocationGPSSessionStatistics_ThermalLevelData(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBD28;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBD28;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  *(void *)this = &unk_26D7BBDA0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BBDA0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

void *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(void *this)
{
  *this = &unk_26D7BBE18;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_26D7BBE18;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::LocationGPSSessionStatistics_NSForceOffReason(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBE90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBE90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::LocationGPSSessionStatistics_NSOnOffState(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBF08;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBF08;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::LocationGPSSessionStatistics_JammingMetricBucket(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BBF80;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BBF80;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::LocationGPSSessionStatistics_JammingMetricDataPerSignal(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBFF8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BBFF8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationCellTileUsage::LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this)
{
  *(void *)this = &unk_26D7BC0E8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BC0E8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

void *awd::metrics::LocationGnssSWRecoveryStatistics::LocationGnssSWRecoveryStatistics(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *this = &unk_26D7BC2C8;
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *this = &unk_26D7BC2C8;
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC160;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC160;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(uint64_t this)
{
  *(void *)this = &unk_26D7BC1D8;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BC1D8;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC250;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC250;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::LocationVisibilityAssertion(uint64_t this)
{
  *(void *)this = &unk_26D7BC340;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_26D7BC340;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::LocationPhoneNumberAvailability(uint64_t this)
{
  *(void *)this = &unk_26D7BC3B8;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 29) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_26D7BC3B8;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 29) = 0;
  return this;
}

double awd::metrics::LocationMobileAssetStatistics::LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this)
{
  *(void *)this = &unk_26D7BC4A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BC4A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::LocationMobileAssetStatistics_CarrierSettingsStatus(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC430;
  *(void *)(this + 8) = v1;
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC430;
  *(void *)(this + 8) = v1;
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

double awd::metrics::LocationEmergencyPOIStatistics::LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC520;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

{
  uint64_t v1;
  double result;

  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC520;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

void *awd::metrics::LocationAccessory_ChargingTypeHistogram::LocationAccessory_ChargingTypeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC598;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC598;
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::LocationAccessory_DeviceChargingStats(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC610;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC610;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double awd::metrics::LocationAccessory_Statistics::LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this)
{
  *(void *)this = &unk_26D7BC688;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BC688;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void *awd::metrics::LocationAccessory_PerfRangeHistogram::LocationAccessory_PerfRangeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC700;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC700;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::LocationAccessory_PerformanceStats(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC778;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(void *)(this + 80) = 0;
  *(void *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC778;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(void *)(this + 80) = 0;
  *(void *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

void *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::LocationAccessory_SpeedPerfRangeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC7F0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC7F0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::LocationAccessory_SpeedPerformanceStats(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC868;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BC868;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

void *awd::metrics::LocationAccessory_LatencyRangeHistogram::LocationAccessory_LatencyRangeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC8E0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BC8E0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::LocationAccessory_MessageHistogram(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC958;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC958;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double awd::metrics::LocationAccessory_MessageStats::LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this)
{
  *(void *)this = &unk_26D7BC9D0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BC9D0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

void *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::LocationAccessory_NMEAScreeningLocTypeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCA48;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCA48;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::LocationAccessory_LocationAppRunningTime(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BCAC0;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BCAC0;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

void *awd::metrics::LocationAccessory_NavDynamicsHistogram::LocationAccessory_NavDynamicsHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCB38;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCB38;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::LocationAccessory_PASCDRavenUsageStats(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BCBB0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(void *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BCBB0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(void *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

void *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::LocationAccessory_PASCDTransmissionHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCC28;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCC28;
  return this;
}

void *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::LocationAccessory_PASCDSampleSizeHistogram(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCCA0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BCCA0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::LocationAccessory_PASCDStats(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BCD18;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BCD18;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

void *awd::metrics::LocationAccessory_Coordinate::LocationAccessory_Coordinate(void *this)
{
  *this = &unk_26D7BCD90;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_26D7BCD90;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double awd::metrics::BaroAltitudeCalibrationInfo::BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  *(void *)this = &unk_26D7BCE80;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BCE80;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void *awd::metrics::CompassSession::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  if (awd::metrics::CompassSession_Rotation::default_instance_)
  {
    this[7] = awd::metrics::CompassSession_Rotation::default_instance_;
LABEL_4:
    v1[8] = v2;
LABEL_5:
    v1[9] = v2;
LABEL_6:
    v1[10] = v2;
LABEL_7:
    v1[11] = v2;
    goto LABEL_8;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[7] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2) {
    goto LABEL_4;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[8] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2) {
    goto LABEL_5;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[9] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2) {
    goto LABEL_6;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[10] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (v2) {
    goto LABEL_7;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  v1[11] = awd::metrics::CompassSession_Rotation::default_instance_;
  if (!v2)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v2 = awd::metrics::CompassSession_Rotation::default_instance_;
  }
LABEL_8:
  v1[12] = v2;
  return this;
}

void awd::metrics::MotionGyroBiasEstimation::InitAsDefaultInstance(awd::metrics::MotionGyroBiasEstimation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  if (awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
  {
    *((void *)this + 2) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  }
  else
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    *((void *)this + 2) = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    if (!v5)
    {
      awd::metrics::protobuf_AddDesc_Location_2eproto(v6, v7, v8, v9);
      uint64_t v5 = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
    }
  }
  *((void *)this + 3) = v5;
}

void awd::metrics::LocationGPSSessionStatistics::InitAsDefaultInstance(awd::metrics::LocationGPSSessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  }
  *((void *)this + 114) = v5;
  uint64_t v6 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v6 = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  }
  *((void *)this + 134) = v6;
}

void awd::metrics::LocationGnssSWRecoveryStatistics::InitAsDefaultInstance(awd::metrics::LocationGnssSWRecoveryStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  }
  *((void *)this + 3) = v5;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::InitAsDefaultInstance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  }
  *((void *)this + 4) = v5;
}

void *awd::metrics::LocationMobileAssetStatistics::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_)
  {
    this[9] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
LABEL_4:
    v1[10] = v2;
LABEL_5:
    v1[11] = v2;
    goto LABEL_6;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[9] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (v2) {
    goto LABEL_4;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[10] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (v2) {
    goto LABEL_5;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  v1[11] = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (!v2)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v2 = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  }
LABEL_6:
  v1[12] = v2;
  return this;
}

void *awd::metrics::LocationAccessory::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (awd::metrics::LocationAccessory_PerformanceStats::default_instance_)
  {
    this[10] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
LABEL_4:
    v1[11] = v2;
LABEL_5:
    v1[12] = v2;
    goto LABEL_6;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[10] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (v2) {
    goto LABEL_4;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[11] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (v2) {
    goto LABEL_5;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  v1[12] = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (!v2)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v2 = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  }
LABEL_6:
  v1[13] = v2;
  uint64_t v3 = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v3 = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  }
  v1[14] = v3;
  uint64_t v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (awd::metrics::LocationAccessory_MessageStats::default_instance_)
  {
    v1[16] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
LABEL_11:
    v1[17] = v4;
    goto LABEL_12;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  v1[16] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (v4) {
    goto LABEL_11;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
  uint64_t v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  v1[17] = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (!v4)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v4 = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  }
LABEL_12:
  v1[18] = v4;
  uint64_t v5 = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDStats::default_instance_)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v5 = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  }
  v1[19] = v5;
  uint64_t v6 = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  if (!awd::metrics::LocationAccessory_Coordinate::default_instance_)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v6 = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  }
  v1[20] = v6;
  uint64_t v7 = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  if (!awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v7 = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  }
  v1[34] = v7;
  uint64_t v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    v1[35] = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  else
  {
    this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
    uint64_t v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    v1[35] = awd::metrics::LocationAccessory_Statistics::default_instance_;
    if (!v8)
    {
      this = (void *)awd::metrics::protobuf_AddDesc_Location_2eproto((awd::metrics *)this);
      uint64_t v8 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    }
  }
  v1[36] = v8;
  return this;
}

void awd::metrics::LocationAccessory_PerformanceStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_PerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  *((void *)this + 10) = v5;
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  *((void *)this + 7) = v5;
}

void awd::metrics::LocationAccessory_MessageStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_MessageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    *((void *)this + 2) = awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  else
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    *((void *)this + 2) = awd::metrics::LocationAccessory_Statistics::default_instance_;
    if (!v5)
    {
      awd::metrics::protobuf_AddDesc_Location_2eproto(v6, v7, v8, v9);
      uint64_t v5 = awd::metrics::LocationAccessory_Statistics::default_instance_;
    }
  }
  *((void *)this + 6) = v5;
}

void awd::metrics::LocationAccessory_PASCDStats::InitAsDefaultInstance(awd::metrics::LocationAccessory_PASCDStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  }
  *((void *)this + 7) = v5;
}

BOOL awd::metrics::LocationAuthorizationState_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationSubHarvesterIdentifier_IsValid(awd::metrics *this)
{
  return this < 0xE;
}

uint64_t awd::metrics::LocationServicesState::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(unsigned char *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

awd::metrics::LocationServicesState *awd::metrics::LocationServicesState::LocationServicesState(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BA360;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v3;
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 7) = 0;
  awd::metrics::LocationServicesState::MergeFrom(this, a2);
  return this;
}

void sub_2249076E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesState::MergeFrom(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    uint64_t v8 = (std::string *)*((void *)this + 2);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_14:
    char v9 = *((unsigned char *)a2 + 24);
    *((_DWORD *)this + 9) |= 4u;
    *((unsigned char *)this + 24) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 8u;
    *((_DWORD *)this + 7) = v5;
  }
}

void sub_224907834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesState::~LocationServicesState(awd::metrics::LocationServicesState *this)
{
  *(void *)this = &unk_26D7BA360;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA360;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA360;
  awd::metrics::LocationServicesState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationServicesState::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

void __clang_call_terminate(void *a1)
{
}

uint64_t awd::metrics::LocationServicesState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationServicesState::default_instance(awd::metrics::LocationServicesState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationServicesState::default_instance_;
  if (!awd::metrics::LocationServicesState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationServicesState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationServicesState::New(awd::metrics::LocationServicesState *this)
{
}

uint64_t awd::metrics::LocationServicesState::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 36);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 24) = 0;
    *(_DWORD *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesState::MergePartialFromCodedStream(awd::metrics::LocationServicesState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_24:
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_27:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v16 = v22;
          v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          v17 = v12 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((unsigned char *)this + 24) = v16 != 0;
        int v13 = *((_DWORD *)this + 9) | 4;
        *((_DWORD *)this + 9) = v13;
        if ((unint64_t)v17 >= v9 || *v17 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_35:
        *((_DWORD *)this + 9) = v13 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v18 >= v14 || *v18 != 32) {
          continue;
        }
        v15 = v18 + 1;
        *((void *)a2 + 1) = v15;
LABEL_41:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v19 = v23;
          v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v15;
          v20 = (unsigned __int8 *)(v15 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 7) = v19;
        *((_DWORD *)this + 9) |= 8u;
        if (v20 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v13 = *((_DWORD *)this + 9);
        goto LABEL_35;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_41;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationServicesState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned int *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationServicesState::ByteSize(awd::metrics::LocationServicesState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if (*((unsigned char *)this + 36))
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v4 = *((void *)this + 2);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v2 = *((_DWORD *)this + 9);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    LODWORD(v3) = v3 + v9 + v5 + 1;
    goto LABEL_16;
  }
  LODWORD(v3) = 0;
  if ((*((unsigned char *)this + 36) & 2) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
  }
LABEL_26:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationServicesState::CheckTypeAndMergeFrom(awd::metrics::LocationServicesState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationServicesState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationServicesState::CopyFrom(awd::metrics::LocationServicesState *this, const awd::metrics::LocationServicesState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationServicesState *))(*(void *)this + 32))(this);
    awd::metrics::LocationServicesState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationServicesState::IsInitialized(awd::metrics::LocationServicesState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationServicesState::Swap(uint64_t this, awd::metrics::LocationServicesState *a2)
{
  if (a2 != (awd::metrics::LocationServicesState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LOBYTE(v2) = *(unsigned char *)(this + 24);
    *(unsigned char *)(this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

void *awd::metrics::LocationServicesState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationServicesState");
}

uint64_t awd::metrics::LocationServicesApproval::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(unsigned char *)(this + 32) = 0;
  *(void *)(this + 24) = v1;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 36) = 0;
  return this;
}

awd::metrics::LocationServicesApproval *awd::metrics::LocationServicesApproval::LocationServicesApproval(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  *(void *)this = &unk_26D7BA3D8;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((unsigned char *)this + 32) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = v3;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 9) = 0;
  awd::metrics::LocationServicesApproval::MergeFrom(this, a2);
  return this;
}

void sub_22490816C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesApproval::MergeFrom(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 44))
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 11) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 11);
  }
  char v6 = (std::string *)MEMORY[0x263F8C740];
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
LABEL_15:
    char v10 = *((unsigned char *)a2 + 32);
    *((_DWORD *)this + 11) |= 4u;
    *((unsigned char *)this + 32) = v10;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  unint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 11) |= 2u;
  int v9 = (std::string *)*((void *)this + 2);
  if (v9 == v6) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 11);
  if ((v4 & 4) != 0) {
    goto LABEL_15;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    goto LABEL_9;
  }
LABEL_16:
  int v11 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 11) |= 8u;
  v12 = (std::string *)*((void *)this + 3);
  if (v12 == v6) {
    operator new();
  }
  std::string::operator=(v12, v11);
  if ((*((_DWORD *)a2 + 11) & 0x10) != 0)
  {
LABEL_10:
    int v7 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 9) = v7;
  }
}

void sub_224908308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationServicesApproval::~LocationServicesApproval(awd::metrics::LocationServicesApproval *this)
{
  *(void *)this = &unk_26D7BA3D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA3D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA3D8;
  awd::metrics::LocationServicesApproval::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationServicesApproval::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::default_instance(awd::metrics::LocationServicesApproval *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationServicesApproval::default_instance_;
  if (!awd::metrics::LocationServicesApproval::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationServicesApproval::default_instance_;
  }
  return result;
}

void awd::metrics::LocationServicesApproval::New(awd::metrics::LocationServicesApproval *this)
{
}

uint64_t awd::metrics::LocationServicesApproval::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 44);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    uint64_t v2 = MEMORY[0x263F8C740];
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 32) = 0;
    if ((*(unsigned char *)(this + 44) & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationServicesApproval::MergePartialFromCodedStream(awd::metrics::LocationServicesApproval *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unsigned int *)((char *)this + 36);
  uint64_t v6 = MEMORY[0x263F8C740];
  while (2)
  {
    int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *uint64_t v4 = *v11;
          v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_26:
          int v13 = *((_DWORD *)this + 11) | 1;
          *((_DWORD *)this + 11) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        int v13 = *((_DWORD *)this + 11);
LABEL_29:
        *((_DWORD *)this + 11) = v13 | 2;
        if (*((void *)this + 2) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v14 || *v19 != 24) {
          continue;
        }
        v15 = v19 + 1;
        *((void *)a2 + 1) = v15;
LABEL_35:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v20 = v25;
          v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v20 = *v15;
          v21 = v15 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((unsigned char *)this + 32) = v20 != 0;
        int v16 = *((_DWORD *)this + 11) | 4;
        *((_DWORD *)this + 11) = v16;
        if ((unint64_t)v21 >= v14 || *v21 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_43:
        *((_DWORD *)this + 11) = v16 | 8;
        if (*((void *)this + 3) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v22 >= v17 || *v22 != 40) {
          continue;
        }
        v18 = v22 + 1;
        *((void *)a2 + 1) = v18;
LABEL_49:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v18;
          unsigned int v23 = (unsigned __int8 *)(v18 + 1);
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if (v23 != (unsigned __int8 *)v17 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        int v16 = *((_DWORD *)this + 11);
        goto LABEL_43;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationServicesApproval::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 44) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(unsigned int *)(v5 + 36);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationServicesApproval::ByteSize(awd::metrics::LocationServicesApproval *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_34;
  }
  if ((*((unsigned char *)this + 44) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v4 = *((void *)this + 2);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v2 = *((_DWORD *)this + 11);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    LODWORD(v3) = v3 + v9 + v5 + 1;
    goto LABEL_16;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  int v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v10 = *((void *)this + 3);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v2 = *((_DWORD *)this + 11);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    uint64_t v3 = (v3 + v15 + v11 + 1);
  }
  if ((v2 & 0x10) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v16 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_34:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationServicesApproval::CheckTypeAndMergeFrom(awd::metrics::LocationServicesApproval *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationServicesApproval::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationServicesApproval::CopyFrom(awd::metrics::LocationServicesApproval *this, const awd::metrics::LocationServicesApproval *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationServicesApproval *))(*(void *)this + 32))(this);
    awd::metrics::LocationServicesApproval::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationServicesApproval::IsInitialized(awd::metrics::LocationServicesApproval *this)
{
  return 1;
}

uint64_t awd::metrics::LocationServicesApproval::Swap(uint64_t this, awd::metrics::LocationServicesApproval *a2)
{
  if (a2 != (awd::metrics::LocationServicesApproval *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LOBYTE(v2) = *(unsigned char *)(this + 32);
    *(unsigned char *)(this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v2;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

void *awd::metrics::LocationServicesApproval::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationServicesApproval");
}

double awd::metrics::LocationUpdateSession::SharedCtor(awd::metrics::LocationUpdateSession *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *((void *)this + 12) = v1;
  *((void *)this + 13) = v1;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = v1;
  *((unsigned char *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  return result;
}

awd::metrics::LocationUpdateSession *awd::metrics::LocationUpdateSession::LocationUpdateSession(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  *((void *)this + 10) = 0;
  *(void *)this = &unk_26D7BA450;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = v3;
  *((void *)this + 13) = v3;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = v3;
  *((unsigned char *)this + 128) = 0;
  *((_DWORD *)this + 33) = 0;
  *((_DWORD *)this + 34) = 0;
  awd::metrics::LocationUpdateSession::MergeFrom(this, a2);
  return this;
}

void sub_224908DF8(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x22A61A810](*v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationUpdateSession::MergeFrom(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  int v4 = *((_DWORD *)a2 + 22);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 80, *((_DWORD *)this + 22) + v4);
    memcpy((void *)(*((void *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *((_DWORD *)this + 34) |= 1u;
    *((void *)this + 1) = v10;
    unsigned int v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_48;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v11 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 34) |= 2u;
  char v12 = (std::string *)*((void *)this + 2);
  if (v12 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v12, v11);
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v13 = *((void *)a2 + 3);
  *((_DWORD *)this + 34) |= 4u;
  *((void *)this + 3) = v13;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v14 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 34) |= 8u;
  *((_DWORD *)this + 8) = v14;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_51:
    char v16 = *((unsigned char *)a2 + 40);
    *((_DWORD *)this + 34) |= 0x20u;
    *((unsigned char *)this + 40) = v16;
    unsigned int v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_50:
  int v15 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 34) |= 0x10u;
  *((_DWORD *)this + 9) = v15;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_52:
  char v17 = *((unsigned char *)a2 + 41);
  *((_DWORD *)this + 34) |= 0x40u;
  *((unsigned char *)this + 41) = v17;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    char v6 = *((unsigned char *)a2 + 42);
    *((_DWORD *)this + 34) |= 0x80u;
    *((unsigned char *)this + 42) = v6;
    unsigned int v5 = *((_DWORD *)a2 + 34);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v5 & 0x100) != 0)
  {
    char v18 = *((unsigned char *)a2 + 43);
    *((_DWORD *)this + 34) |= 0x100u;
    *((unsigned char *)this + 43) = v18;
    unsigned int v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_56;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  int v19 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 34) |= 0x200u;
  *((_DWORD *)this + 11) = v19;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v20 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 34) |= 0x400u;
  *((_DWORD *)this + 12) = v20;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v21 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 34) |= 0x800u;
  *((_DWORD *)this + 13) = v21;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_59;
  }
LABEL_58:
  char v22 = *((unsigned char *)a2 + 60);
  *((_DWORD *)this + 34) |= 0x1000u;
  *((unsigned char *)this + 60) = v22;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v23 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 34) |= 0x2000u;
  *((_DWORD *)this + 14) = v23;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_60:
  char v24 = *((unsigned char *)a2 + 61);
  *((_DWORD *)this + 34) |= 0x4000u;
  *((unsigned char *)this + 61) = v24;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x8000) != 0)
  {
LABEL_24:
    char v7 = *((unsigned char *)a2 + 62);
    *((_DWORD *)this + 34) |= 0x8000u;
    *((unsigned char *)this + 62) = v7;
    unsigned int v5 = *((_DWORD *)a2 + 34);
  }
LABEL_25:
  if ((v5 & 0xFF0000) == 0) {
    goto LABEL_34;
  }
  if ((v5 & 0x10000) != 0)
  {
    char v25 = *((unsigned char *)a2 + 63);
    *((_DWORD *)this + 34) |= 0x10000u;
    *((unsigned char *)this + 63) = v25;
    unsigned int v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x20000) == 0)
    {
LABEL_28:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_64;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  int v26 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 34) |= 0x20000u;
  *((_DWORD *)this + 16) = v26;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x40000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v27 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 34) |= 0x40000u;
  *((_DWORD *)this + 17) = v27;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x80000) == 0)
  {
LABEL_30:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v28 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 34) |= 0x80000u;
  *((_DWORD *)this + 18) = v28;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x100000) == 0)
  {
LABEL_31:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v29 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 34) |= 0x100000u;
  *((_DWORD *)this + 19) = v29;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x200000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_67:
  int v30 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 34) |= 0x200000u;
  *((_DWORD *)this + 28) = v30;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x400000) != 0)
  {
LABEL_33:
    char v8 = *((unsigned char *)a2 + 116);
    *((_DWORD *)this + 34) |= 0x400000u;
    *((unsigned char *)this + 116) = v8;
    unsigned int v5 = *((_DWORD *)a2 + 34);
  }
LABEL_34:
  if (!HIBYTE(v5)) {
    return;
  }
  if ((v5 & 0x1000000) != 0)
  {
    v31 = (const std::string *)*((void *)a2 + 12);
    *((_DWORD *)this + 34) |= 0x1000000u;
    v32 = (std::string *)*((void *)this + 12);
    if (v32 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v32, v31);
    unsigned int v5 = *((_DWORD *)a2 + 34);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_37:
      if ((v5 & 0x4000000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_75;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_37;
  }
  v33 = (const std::string *)*((void *)a2 + 13);
  *((_DWORD *)this + 34) |= 0x2000000u;
  v34 = (std::string *)*((void *)this + 13);
  if (v34 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v34, v33);
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_78;
  }
LABEL_75:
  v35 = (const std::string *)*((void *)a2 + 15);
  *((_DWORD *)this + 34) |= 0x4000000u;
  v36 = (std::string *)*((void *)this + 15);
  if (v36 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v36, v35);
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v37 = *((unsigned char *)a2 + 117);
  *((_DWORD *)this + 34) |= 0x8000000u;
  *((unsigned char *)this + 117) = v37;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_80;
  }
LABEL_79:
  char v38 = *((unsigned char *)a2 + 118);
  *((_DWORD *)this + 34) |= 0x10000000u;
  *((unsigned char *)this + 118) = v38;
  unsigned int v5 = *((_DWORD *)a2 + 34);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x40000000) == 0) {
      return;
    }
    goto LABEL_42;
  }
LABEL_80:
  char v39 = *((unsigned char *)a2 + 119);
  *((_DWORD *)this + 34) |= 0x20000000u;
  *((unsigned char *)this + 119) = v39;
  if ((*((_DWORD *)a2 + 34) & 0x40000000) == 0) {
    return;
  }
LABEL_42:
  char v9 = *((unsigned char *)a2 + 128);
  *((_DWORD *)this + 34) |= 0x40000000u;
  *((unsigned char *)this + 128) = v9;
}

void sub_2249093B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationUpdateSession::~LocationUpdateSession(awd::metrics::LocationUpdateSession *this)
{
  *(void *)this = &unk_26D7BA450;
  awd::metrics::LocationUpdateSession::SharedDtor(this);
  uint64_t v2 = *((void *)this + 10);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationUpdateSession::~LocationUpdateSession(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationUpdateSession::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[12];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x22A61A830](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[13];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x22A61A830](v7, 0x1012C40EC159624);
  }
  uint64_t v9 = v1[15];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 132) = a2;
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::default_instance(awd::metrics::LocationUpdateSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationUpdateSession::default_instance_;
  if (!awd::metrics::LocationUpdateSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationUpdateSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationUpdateSession::New(awd::metrics::LocationUpdateSession *this)
{
}

uint64_t awd::metrics::LocationUpdateSession::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 136);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(_DWORD *)(this + 39) = 0;
    unsigned int v1 = *(_DWORD *)(this + 136);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 51) = 0;
    *(void *)(this + 43) = 0;
    *(_DWORD *)(this + 59) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 112) = 0;
    *(unsigned char *)(this + 116) = 0;
    *(void *)(this + 71) = 0;
    *(void *)(this + 63) = 0;
    *(unsigned char *)(this + 79) = 0;
  }
  if (HIBYTE(v1))
  {
    if ((v1 & 0x1000000) != 0)
    {
      uint64_t v3 = *(void *)(this + 96);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 139) & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 104);
      if (v4 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 139) & 4) != 0)
    {
      uint64_t v5 = *(void *)(this + 120);
      if (v5 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(_WORD *)(this + 117) = 0;
    *(unsigned char *)(this + 119) = 0;
    *(unsigned char *)(this + 128) = 0;
  }
  *(_DWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 136) = 0;
  return this;
}

uint64_t awd::metrics::LocationUpdateSession::MergePartialFromCodedStream(awd::metrics::LocationUpdateSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 80;
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  char v6 = (unint64_t *)((char *)this + 24);
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          char v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v11;
          char v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 34) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          uint64_t v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_84;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_84:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v6 = *v13;
          v42 = v13 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 34) |= 4u;
        if ((unint64_t)v42 >= v10 || *v42 != 24) {
          continue;
        }
        int v14 = v42 + 1;
        *((void *)a2 + 1) = v14;
LABEL_92:
        v107[0] = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v43 = v107[0];
          v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v43 = *v14;
          v44 = v14 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 8) = v43;
        *((_DWORD *)this + 34) |= 8u;
        if ((unint64_t)v44 >= v10 || *v44 != 32) {
          continue;
        }
        int v15 = v44 + 1;
        *((void *)a2 + 1) = v15;
LABEL_100:
        v107[0] = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v45 = v107[0];
          v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v15;
          v46 = v15 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((unsigned char *)this + 40) = v45 != 0;
        *((_DWORD *)this + 34) |= 0x20u;
        if ((unint64_t)v46 >= v10 || *v46 != 40) {
          continue;
        }
        char v16 = v46 + 1;
        *((void *)a2 + 1) = v16;
LABEL_108:
        v107[0] = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v47 = v107[0];
          v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v47 = *v16;
          v48 = v16 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((unsigned char *)this + 41) = v47 != 0;
        *((_DWORD *)this + 34) |= 0x40u;
        if ((unint64_t)v48 >= v10 || *v48 != 48) {
          continue;
        }
        char v17 = v48 + 1;
        *((void *)a2 + 1) = v17;
LABEL_116:
        v107[0] = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v49 = v107[0];
          v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v17;
          v50 = v17 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((unsigned char *)this + 42) = v49 != 0;
        *((_DWORD *)this + 34) |= 0x80u;
        if ((unint64_t)v50 >= v10 || *v50 != 56) {
          continue;
        }
        char v18 = v50 + 1;
        *((void *)a2 + 1) = v18;
LABEL_124:
        v107[0] = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v51 = v107[0];
          v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v51 = *v18;
          v52 = v18 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((unsigned char *)this + 43) = v51 != 0;
        *((_DWORD *)this + 34) |= 0x100u;
        if ((unint64_t)v52 >= v10 || *v52 != 64) {
          continue;
        }
        int v19 = v52 + 1;
        *((void *)a2 + 1) = v19;
LABEL_132:
        v107[0] = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v53 = v107[0];
          v54 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v53 = *v19;
          v54 = v19 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 11) = v53;
        *((_DWORD *)this + 34) |= 0x200u;
        if ((unint64_t)v54 >= v10 || *v54 != 72) {
          continue;
        }
        int v20 = v54 + 1;
        *((void *)a2 + 1) = v20;
LABEL_140:
        v107[0] = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v55 = v107[0];
          v56 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v55 = *v20;
          v56 = v20 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 12) = v55;
        int v21 = *((_DWORD *)this + 34) | 0x400;
        *((_DWORD *)this + 34) = v21;
        if ((unint64_t)v56 >= v10 || *v56 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 1;
LABEL_148:
        *((_DWORD *)this + 34) = v21 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        v57 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        if ((unint64_t)v57 >= v22 || *v57 != 96) {
          continue;
        }
        int v23 = v57 + 1;
        *((void *)a2 + 1) = v23;
LABEL_154:
        v107[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v58 = v107[0];
          v59 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v58 = *v23;
          v59 = v23 + 1;
          *((void *)a2 + 1) = v59;
        }
        *((_DWORD *)this + 9) = v58;
        *((_DWORD *)this + 34) |= 0x10u;
        if ((unint64_t)v59 >= v22 || *v59 != 104) {
          continue;
        }
        char v24 = v59 + 1;
        *((void *)a2 + 1) = v24;
LABEL_162:
        v107[0] = 0;
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v60 = v107[0];
          v61 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v60 = *v24;
          v61 = v24 + 1;
          *((void *)a2 + 1) = v61;
        }
        *((_DWORD *)this + 13) = v60;
        *((_DWORD *)this + 34) |= 0x800u;
        if ((unint64_t)v61 >= v22 || *v61 != 112) {
          continue;
        }
        char v25 = v61 + 1;
        *((void *)a2 + 1) = v25;
LABEL_170:
        v107[0] = 0;
        if ((unint64_t)v25 >= v22 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v62 = v107[0];
          v63 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v62 = *v25;
          v63 = v25 + 1;
          *((void *)a2 + 1) = v63;
        }
        *((unsigned char *)this + 60) = v62 != 0;
        *((_DWORD *)this + 34) |= 0x1000u;
        if ((unint64_t)v63 >= v22 || *v63 != 120) {
          continue;
        }
        int v26 = v63 + 1;
        *((void *)a2 + 1) = v26;
LABEL_178:
        v107[0] = 0;
        if ((unint64_t)v26 >= v22 || (char)*v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v64 = v107[0];
          v65 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v64 = *v26;
          v65 = v26 + 1;
          *((void *)a2 + 1) = v65;
        }
        *((_DWORD *)this + 14) = v64;
        *((_DWORD *)this + 34) |= 0x2000u;
        if ((int)v22 - (int)v65 < 2 || *v65 != 128 || v65[1] != 1) {
          continue;
        }
        int v27 = v65 + 2;
        *((void *)a2 + 1) = v27;
LABEL_187:
        v107[0] = 0;
        if ((unint64_t)v27 >= v22 || (char)*v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v66 = v107[0];
          v67 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v66 = *v27;
          v67 = v27 + 1;
          *((void *)a2 + 1) = v67;
        }
        *((unsigned char *)this + 61) = v66 != 0;
        *((_DWORD *)this + 34) |= 0x4000u;
        if ((int)v22 - (int)v67 < 2 || *v67 != 136 || v67[1] != 1) {
          continue;
        }
        int v28 = v67 + 2;
        *((void *)a2 + 1) = v28;
LABEL_196:
        v107[0] = 0;
        if ((unint64_t)v28 >= v22 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v68 = v107[0];
          v69 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v68 = *v28;
          v69 = v28 + 1;
          *((void *)a2 + 1) = v69;
        }
        *((unsigned char *)this + 62) = v68 != 0;
        *((_DWORD *)this + 34) |= 0x8000u;
        if ((int)v22 - (int)v69 < 2 || *v69 != 144 || v69[1] != 1) {
          continue;
        }
        int v29 = v69 + 2;
        *((void *)a2 + 1) = v29;
LABEL_205:
        v107[0] = 0;
        if ((unint64_t)v29 >= v22 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v70 = v107[0];
          v71 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v70 = *v29;
          v71 = v29 + 1;
          *((void *)a2 + 1) = v71;
        }
        *((unsigned char *)this + 63) = v70 != 0;
        *((_DWORD *)this + 34) |= 0x10000u;
        if ((int)v22 - (int)v71 < 2 || *v71 != 152 || v71[1] != 1) {
          continue;
        }
        int v30 = v71 + 2;
        *((void *)a2 + 1) = v30;
LABEL_214:
        v107[0] = 0;
        if ((unint64_t)v30 >= v22 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v72 = v107[0];
          v73 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v72 = *v30;
          v73 = v30 + 1;
          *((void *)a2 + 1) = v73;
        }
        *((_DWORD *)this + 16) = v72;
        *((_DWORD *)this + 34) |= 0x20000u;
        if ((int)v22 - (int)v73 < 2 || *v73 != 160 || v73[1] != 1) {
          continue;
        }
        v31 = v73 + 2;
        *((void *)a2 + 1) = v31;
LABEL_223:
        v107[0] = 0;
        if ((unint64_t)v31 >= v22 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v74 = v107[0];
          v75 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v74 = *v31;
          v75 = v31 + 1;
          *((void *)a2 + 1) = v75;
        }
        *((_DWORD *)this + 17) = v74;
        *((_DWORD *)this + 34) |= 0x40000u;
        if ((int)v22 - (int)v75 < 2 || *v75 != 168 || v75[1] != 1) {
          continue;
        }
        v32 = v75 + 2;
        *((void *)a2 + 1) = v32;
LABEL_232:
        v107[0] = 0;
        if ((unint64_t)v32 >= v22 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v76 = v107[0];
          v77 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v76 = *v32;
          v77 = v32 + 1;
          *((void *)a2 + 1) = v77;
        }
        *((_DWORD *)this + 18) = v76;
        *((_DWORD *)this + 34) |= 0x80000u;
        if ((int)v22 - (int)v77 < 2 || *v77 != 176 || v77[1] != 1) {
          continue;
        }
        v33 = v77 + 2;
        *((void *)a2 + 1) = v33;
LABEL_241:
        v107[0] = 0;
        if ((unint64_t)v33 >= v22 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v78 = v107[0];
          v79 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v78 = *v33;
          v79 = v33 + 1;
          *((void *)a2 + 1) = v79;
        }
        *((_DWORD *)this + 19) = v78;
        *((_DWORD *)this + 34) |= 0x100000u;
        if ((int)v22 - (int)v79 < 2 || *v79 != 184 || v79[1] != 1) {
          continue;
        }
        v34 = v79 + 2;
        *((void *)a2 + 1) = v34;
LABEL_250:
        v107[0] = 0;
        if ((unint64_t)v34 >= v22 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v80 = v107[0];
          v81 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v80 = *v34;
          v81 = v34 + 1;
          *((void *)a2 + 1) = v81;
        }
        *((_DWORD *)this + 28) = v80;
        *((_DWORD *)this + 34) |= 0x200000u;
        if ((int)v22 - (int)v81 < 2 || *v81 != 192 || v81[1] != 1) {
          continue;
        }
        v35 = v81 + 2;
        *((void *)a2 + 1) = v35;
LABEL_259:
        v107[0] = 0;
        if ((unint64_t)v35 >= v22 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
          if (!result) {
            return result;
          }
          unsigned int v82 = v107[0];
          v83 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v82 = *v35;
          v83 = v35 + 1;
          *((void *)a2 + 1) = v83;
        }
        *((unsigned char *)this + 116) = v82 != 0;
        *((_DWORD *)this + 34) |= 0x400000u;
        if ((int)v22 - (int)v83 >= 2 && *v83 == 200 && v83[1] == 1) {
          goto LABEL_267;
        }
        continue;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_92;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_100;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v16 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_108;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v17 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_116;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v18 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_124;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_132;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_140;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_73;
        }
        int v21 = *((_DWORD *)this + 34);
        goto LABEL_148;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_154;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v24 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_162;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v25 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_170;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v26 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_178;
      case 0x10u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v27 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_187;
      case 0x11u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v28 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_196;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v29 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_205;
      case 0x13u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_214;
      case 0x14u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_223;
      case 0x15u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_232;
      case 0x16u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_241;
      case 0x17u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v34 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_250;
      case 0x18u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v35 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_259;
      case 0x19u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            v83 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v22 = *((void *)a2 + 2);
            if ((int)v22 - (int)v83 <= 1) {
              goto LABEL_2;
            }
            int v94 = *v83;
            if (v94 == 210) {
              break;
            }
            if (v94 != 200 || v83[1] != 1) {
              goto LABEL_2;
            }
LABEL_267:
            v36 = (char *)(v83 + 2);
            *((void *)a2 + 1) = v36;
LABEL_268:
            v107[0] = 0;
            if ((unint64_t)v36 >= v22 || *v36 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
              if (!result) {
                return result;
              }
              unsigned int v84 = v107[0];
            }
            else
            {
              unsigned int v84 = *v36;
              *((void *)a2 + 1) = v36 + 1;
            }
            int v85 = *((_DWORD *)this + 22);
            if (v85 == *((_DWORD *)this + 23))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v4, v85 + 1);
              int v85 = *((_DWORD *)this + 22);
            }
            uint64_t v86 = *((void *)this + 10);
            *((_DWORD *)this + 22) = v85 + 1;
            *(_DWORD *)(v86 + 4 * v85) = v84;
            int v87 = *((_DWORD *)this + 23) - *((_DWORD *)this + 22);
            if (v87 >= 1)
            {
              int v88 = v87 + 1;
              do
              {
                v89 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v90 = *((void *)a2 + 2);
                if ((int)v90 - (int)v89 < 2 || *v89 != 200 || v89[1] != 1) {
                  break;
                }
                *((void *)a2 + 1) = v89 + 2;
                v107[0] = 0;
                if ((unint64_t)(v89 + 2) >= v90 || (char)v89[2] < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                  if (!result) {
                    return result;
                  }
                  unsigned int v91 = v107[0];
                }
                else
                {
                  unsigned int v91 = v89[2];
                  *((void *)a2 + 1) = v89 + 3;
                }
                int v92 = *((_DWORD *)this + 22);
                if (v92 >= *((_DWORD *)this + 23))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v107);
                  int v92 = *((_DWORD *)this + 22);
                }
                uint64_t v93 = *((void *)this + 10);
                *((_DWORD *)this + 22) = v92 + 1;
                *(_DWORD *)(v93 + 4 * v92) = v91;
                --v88;
              }
              while (v88 > 1);
            }
          }
          if (v83[1] == 1)
          {
            *((void *)a2 + 1) = v83 + 2;
LABEL_295:
            *((_DWORD *)this + 34) |= 0x1000000u;
            if (*((void *)this + 12) == MEMORY[0x263F8C740]) {
              operator new();
            }
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            v95 = (unsigned __int8 *)*((void *)a2 + 1);
            if (*((_DWORD *)a2 + 4) - (int)v95 >= 2 && *v95 == 218 && v95[1] == 1)
            {
              *((void *)a2 + 1) = v95 + 2;
LABEL_302:
              *((_DWORD *)this + 34) |= 0x2000000u;
              if (*((void *)this + 13) == MEMORY[0x263F8C740]) {
                operator new();
              }
              uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
              if (!result) {
                return result;
              }
              v96 = (unsigned __int8 *)*((void *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v96 >= 2 && *v96 == 226 && v96[1] == 1)
              {
                *((void *)a2 + 1) = v96 + 2;
LABEL_309:
                *((_DWORD *)this + 34) |= 0x4000000u;
                if (*((void *)this + 15) == MEMORY[0x263F8C740]) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!result) {
                  return result;
                }
                v97 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v37 = *((void *)a2 + 2);
                if ((int)v37 - (int)v97 >= 2 && *v97 == 232 && v97[1] == 1)
                {
                  char v38 = v97 + 2;
                  *((void *)a2 + 1) = v38;
LABEL_316:
                  v107[0] = 0;
                  if ((unint64_t)v38 >= v37 || (char)*v38 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                    if (!result) {
                      return result;
                    }
                    unsigned int v98 = v107[0];
                    v99 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v37 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v98 = *v38;
                    v99 = v38 + 1;
                    *((void *)a2 + 1) = v99;
                  }
                  *((unsigned char *)this + 117) = v98 != 0;
                  *((_DWORD *)this + 34) |= 0x8000000u;
                  if ((int)v37 - (int)v99 >= 2 && *v99 == 240 && v99[1] == 1)
                  {
                    char v39 = v99 + 2;
                    *((void *)a2 + 1) = v39;
LABEL_325:
                    v107[0] = 0;
                    if ((unint64_t)v39 >= v37 || (char)*v39 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                      if (!result) {
                        return result;
                      }
                      unsigned int v100 = v107[0];
                      v101 = (unsigned __int8 *)*((void *)a2 + 1);
                      unint64_t v37 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v100 = *v39;
                      v101 = v39 + 1;
                      *((void *)a2 + 1) = v101;
                    }
                    *((unsigned char *)this + 118) = v100 != 0;
                    *((_DWORD *)this + 34) |= 0x10000000u;
                    if ((int)v37 - (int)v101 >= 2 && *v101 == 248 && v101[1] == 1)
                    {
                      v40 = v101 + 2;
                      *((void *)a2 + 1) = v40;
LABEL_334:
                      v107[0] = 0;
                      if ((unint64_t)v40 >= v37 || (char)*v40 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                        if (!result) {
                          return result;
                        }
                        unsigned int v102 = v107[0];
                        v103 = (unsigned __int8 *)*((void *)a2 + 1);
                        unint64_t v37 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unsigned int v102 = *v40;
                        v103 = v40 + 1;
                        *((void *)a2 + 1) = v103;
                      }
                      *((unsigned char *)this + 119) = v102 != 0;
                      *((_DWORD *)this + 34) |= 0x20000000u;
                      if ((int)v37 - (int)v103 >= 2 && *v103 == 128 && v103[1] == 2)
                      {
                        v41 = (char *)(v103 + 2);
                        *((void *)a2 + 1) = v41;
LABEL_343:
                        v107[0] = 0;
                        if ((unint64_t)v41 >= v37 || *v41 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                          if (!result) {
                            return result;
                          }
                          unsigned int v104 = v107[0];
                          v105 = (unsigned __int8 *)*((void *)a2 + 1);
                          unint64_t v37 = *((void *)a2 + 2);
                        }
                        else
                        {
                          unsigned int v104 = *v41;
                          v105 = (unsigned __int8 *)(v41 + 1);
                          *((void *)a2 + 1) = v105;
                        }
                        *((unsigned char *)this + 128) = v104 != 0;
                        *((_DWORD *)this + 34) |= 0x40000000u;
                        if (v105 == (unsigned __int8 *)v37
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v36 = (char *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
          goto LABEL_268;
        }
LABEL_73:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0x1Au:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_295;
        }
        goto LABEL_73;
      case 0x1Bu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_302;
        }
        goto LABEL_73;
      case 0x1Cu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_309;
        }
        goto LABEL_73;
      case 0x1Du:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v38 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        goto LABEL_316;
      case 0x1Eu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        char v39 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        goto LABEL_325;
      case 0x1Fu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v40 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        goto LABEL_334;
      case 0x20u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        v41 = (char *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        goto LABEL_343;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_73;
    }
  }
}

void sub_22490AA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v10 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v10 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v11 = 0;
      char v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v7 = v11;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v8 = *(_DWORD *)(a2 + 8);
      if (v8 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a2, v8 + 1);
        int v8 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::LocationUpdateSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 136);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 136);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x80) == 0)
  {
LABEL_7:
    if ((v6 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x200) == 0)
  {
LABEL_9:
    if ((v6 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x400) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 61), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 62), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned __int8 *)(v5 + 63), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 136);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 136) & 0x400000) != 0) {
LABEL_24:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned __int8 *)(v5 + 116), (uint64_t)a2, a4);
LABEL_25:
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(*(void *)(v5 + 80) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 88));
  }
  int v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x1000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v8 = *(_DWORD *)(v5 + 136);
    if ((v8 & 0x2000000) == 0)
    {
LABEL_30:
      if ((v8 & 0x4000000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_61;
    }
  }
  else if ((v8 & 0x2000000) == 0)
  {
    goto LABEL_30;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_31:
    if ((v8 & 0x8000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_32:
    if ((v8 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned __int8 *)(v5 + 117), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x20000000) == 0) {
      goto LABEL_34;
    }
LABEL_64:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 119), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 136) & 0x40000000) == 0) {
      return this;
    }
    goto LABEL_65;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 118), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 136);
  if ((v8 & 0x20000000) != 0) {
    goto LABEL_64;
  }
LABEL_34:
  if ((v8 & 0x40000000) == 0) {
    return this;
  }
LABEL_65:
  uint64_t v9 = *(unsigned __int8 *)(v5 + 128);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v9, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationUpdateSession::ByteSize(awd::metrics::LocationUpdateSession *this)
{
  unsigned int v2 = *((_DWORD *)this + 34);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_40;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 34);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    unsigned int v2 = *((_DWORD *)this + 34);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_21:
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v12 = 1;
    }
    v3 += v12 + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 3))
      + 1;
  unsigned int v2 = *((_DWORD *)this + 34);
  if ((v2 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v14 = 1;
    }
    v3 += v14 + 1;
  }
LABEL_33:
  int v15 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    int v15 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v15 += 2;
  }
  if ((v2 & 0x80) != 0) {
    int v4 = v15 + 2;
  }
  else {
    int v4 = v15;
  }
LABEL_40:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_79;
  }
  if ((v2 & 0x100) != 0) {
    v4 += 2;
  }
  if ((v2 & 0x200) == 0)
  {
    if ((v2 & 0x400) == 0) {
      goto LABEL_45;
    }
LABEL_53:
    char v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v19 = 1;
    }
    v4 += v19 + 1;
    if ((v2 & 0x800) == 0) {
      goto LABEL_65;
    }
    goto LABEL_59;
  }
  char v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = *((_DWORD *)this + 34);
  }
  else
  {
    int v17 = 1;
  }
  v4 += v17 + 1;
  if ((v2 & 0x400) != 0) {
    goto LABEL_53;
  }
LABEL_45:
  if ((v2 & 0x800) != 0)
  {
LABEL_59:
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v21 = 1;
    }
    v4 += v21 + 1;
  }
LABEL_65:
  if ((v2 & 0x1000) != 0) {
    v4 += 2;
  }
  if ((v2 & 0x2000) != 0)
  {
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v23 = 1;
    }
    v4 += v23 + 1;
  }
  int v24 = v4 + 3;
  if ((v2 & 0x4000) == 0) {
    int v24 = v4;
  }
  if ((v2 & 0x8000) != 0) {
    int v4 = v24 + 3;
  }
  else {
    int v4 = v24;
  }
LABEL_79:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_120;
  }
  if ((v2 & 0x10000) != 0) {
    v4 += 3;
  }
  if ((v2 & 0x20000) != 0)
  {
    char v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v25 & 0x80000000) != 0)
    {
      int v26 = 10;
    }
    else if (v25 >= 0x80)
    {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v26 = 1;
    }
    v4 += v26 + 2;
    if ((v2 & 0x40000) == 0)
    {
LABEL_84:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_85;
      }
      goto LABEL_100;
    }
  }
  else if ((v2 & 0x40000) == 0)
  {
    goto LABEL_84;
  }
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v27 & 0x80000000) != 0)
  {
    int v28 = 10;
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    unsigned int v2 = *((_DWORD *)this + 34);
  }
  else
  {
    int v28 = 1;
  }
  v4 += v28 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_85:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_106;
  }
LABEL_100:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if ((v29 & 0x80000000) != 0)
  {
    int v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    unsigned int v2 = *((_DWORD *)this + 34);
  }
  else
  {
    int v30 = 1;
  }
  v4 += v30 + 2;
  if ((v2 & 0x100000) == 0)
  {
LABEL_86:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_112;
  }
LABEL_106:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v31 & 0x80000000) != 0)
  {
    int v32 = 12;
  }
  else if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31) + 2;
    unsigned int v2 = *((_DWORD *)this + 34);
  }
  else
  {
    int v32 = 3;
  }
  v4 += v32;
  if ((v2 & 0x200000) != 0)
  {
LABEL_112:
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
    if ((v33 & 0x80000000) != 0)
    {
      int v34 = 12;
    }
    else if (v33 >= 0x80)
    {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33) + 2;
      unsigned int v2 = *((_DWORD *)this + 34);
    }
    else
    {
      int v34 = 3;
    }
    v4 += v34;
  }
LABEL_118:
  if ((v2 & 0x400000) != 0) {
    v4 += 3;
  }
LABEL_120:
  if (!HIBYTE(v2)) {
    goto LABEL_161;
  }
  if ((v2 & 0x1000000) == 0)
  {
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_123;
    }
LABEL_134:
    uint64_t v41 = *((void *)this + 13);
    int v42 = *(unsigned __int8 *)(v41 + 23);
    char v43 = v42;
    uint64_t v44 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      unint64_t v45 = *(unsigned __int8 *)(v41 + 23);
    }
    else {
      unint64_t v45 = v44;
    }
    if (v45 >= 0x80)
    {
      int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v45);
      int v42 = *(unsigned __int8 *)(v41 + 23);
      uint64_t v44 = *(void *)(v41 + 8);
      unsigned int v2 = *((_DWORD *)this + 34);
      char v43 = *(unsigned char *)(v41 + 23);
    }
    else
    {
      int v46 = 1;
    }
    if (v43 < 0) {
      int v42 = v44;
    }
    v4 += v46 + v42 + 2;
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_143;
  }
  uint64_t v35 = *((void *)this + 12);
  int v36 = *(unsigned __int8 *)(v35 + 23);
  char v37 = v36;
  uint64_t v38 = *(void *)(v35 + 8);
  if ((v36 & 0x80u) == 0) {
    unint64_t v39 = *(unsigned __int8 *)(v35 + 23);
  }
  else {
    unint64_t v39 = v38;
  }
  if (v39 >= 0x80)
  {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39);
    int v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v38 = *(void *)(v35 + 8);
    unsigned int v2 = *((_DWORD *)this + 34);
    char v37 = *(unsigned char *)(v35 + 23);
  }
  else
  {
    int v40 = 1;
  }
  if (v37 < 0) {
    int v36 = v38;
  }
  v4 += v40 + v36 + 2;
  if ((v2 & 0x2000000) != 0) {
    goto LABEL_134;
  }
LABEL_123:
  if ((v2 & 0x4000000) != 0)
  {
LABEL_143:
    uint64_t v47 = *((void *)this + 15);
    int v48 = *(unsigned __int8 *)(v47 + 23);
    char v49 = v48;
    uint64_t v50 = *(void *)(v47 + 8);
    if ((v48 & 0x80u) == 0) {
      unint64_t v51 = *(unsigned __int8 *)(v47 + 23);
    }
    else {
      unint64_t v51 = v50;
    }
    if (v51 >= 0x80)
    {
      int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v51);
      int v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v50 = *(void *)(v47 + 8);
      unsigned int v2 = *((_DWORD *)this + 34);
      char v49 = *(unsigned char *)(v47 + 23);
    }
    else
    {
      int v52 = 1;
    }
    if (v49 < 0) {
      int v48 = v50;
    }
    v4 += v52 + v48 + 2;
  }
LABEL_152:
  int v53 = v4 + 3;
  if ((v2 & 0x8000000) == 0) {
    int v53 = v4;
  }
  if ((v2 & 0x10000000) != 0) {
    v53 += 3;
  }
  if ((v2 & 0x20000000) != 0) {
    v53 += 3;
  }
  if ((v2 & 0x40000000) != 0) {
    int v4 = v53 + 3;
  }
  else {
    int v4 = v53;
  }
LABEL_161:
  int v54 = *((_DWORD *)this + 22);
  if (v54 < 1)
  {
    int v56 = 0;
  }
  else
  {
    uint64_t v55 = 0;
    int v56 = 0;
    do
    {
      v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 10)
                                                                                             + 4 * v55);
      if ((v57 & 0x80000000) != 0)
      {
        int v58 = 10;
      }
      else if (v57 >= 0x80)
      {
        int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
        int v54 = *((_DWORD *)this + 22);
      }
      else
      {
        int v58 = 1;
      }
      v56 += v58;
      ++v55;
    }
    while (v55 < v54);
  }
  uint64_t result = (v56 + v4 + 2 * v54);
  *((_DWORD *)this + 33) = result;
  return result;
}

void awd::metrics::LocationUpdateSession::CheckTypeAndMergeFrom(awd::metrics::LocationUpdateSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationUpdateSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationUpdateSession::CopyFrom(awd::metrics::LocationUpdateSession *this, const awd::metrics::LocationUpdateSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationUpdateSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationUpdateSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationUpdateSession::IsInitialized(awd::metrics::LocationUpdateSession *this)
{
  return 1;
}

double awd::metrics::LocationUpdateSession::Swap(awd::metrics::LocationUpdateSession *this, awd::metrics::LocationUpdateSession *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 40);
    *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 41);
    *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
    *((unsigned char *)a2 + 41) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 42);
    *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
    *((unsigned char *)a2 + 42) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 43);
    *((unsigned char *)this + 43) = *((unsigned char *)a2 + 43);
    *((unsigned char *)a2 + 43) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 60);
    *((unsigned char *)this + 60) = *((unsigned char *)a2 + 60);
    *((unsigned char *)a2 + 60) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 61);
    *((unsigned char *)this + 61) = *((unsigned char *)a2 + 61);
    *((unsigned char *)a2 + 61) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 62);
    *((unsigned char *)this + 62) = *((unsigned char *)a2 + 62);
    *((unsigned char *)a2 + 62) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 63);
    *((unsigned char *)this + 63) = *((unsigned char *)a2 + 63);
    *((unsigned char *)a2 + 63) = v5;
    LODWORD(v5) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    LODWORD(v5) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LODWORD(v5) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    LODWORD(v5) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v5;
    LODWORD(v5) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 116);
    *((unsigned char *)this + 116) = *((unsigned char *)a2 + 116);
    *((unsigned char *)a2 + 116) = v5;
    uint64_t v6 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    double result = *((double *)a2 + 11);
    *((void *)a2 + 10) = v6;
    uint64_t v8 = *((void *)this + 11);
    *((double *)this + 11) = result;
    *((void *)a2 + 11) = v8;
    uint64_t v9 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v9;
    uint64_t v10 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v10;
    uint64_t v11 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 117);
    *((unsigned char *)this + 117) = *((unsigned char *)a2 + 117);
    *((unsigned char *)a2 + 117) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 118);
    *((unsigned char *)this + 118) = *((unsigned char *)a2 + 118);
    *((unsigned char *)a2 + 118) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 119);
    *((unsigned char *)this + 119) = *((unsigned char *)a2 + 119);
    *((unsigned char *)a2 + 119) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 128);
    *((unsigned char *)this + 128) = *((unsigned char *)a2 + 128);
    *((unsigned char *)a2 + 128) = v11;
    LODWORD(v11) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v11;
    LODWORD(v11) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v11;
  }
  return result;
}

void *awd::metrics::LocationUpdateSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationUpdateSession");
}

void *awd::metrics::LocationMonitorSession::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[5] = 0;
  this[6] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationMonitorSession *awd::metrics::LocationMonitorSession::LocationMonitorSession(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  *(void *)this = &unk_26D7BA4C8;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  awd::metrics::LocationMonitorSession::MergeFrom(this, a2);
  return this;
}

void sub_22490B8AC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorSession::MergeFrom(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 13) |= 2u;
  uint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 13) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *((unsigned char *)a2 + 44);
    *((_DWORD *)this + 13) |= 0x80u;
    *((unsigned char *)this + 44) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v15 = *((unsigned char *)a2 + 45);
    *((_DWORD *)this + 13) |= 0x100u;
    *((unsigned char *)this + 45) = v15;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v16 = *((unsigned char *)a2 + 46);
  *((_DWORD *)this + 13) |= 0x200u;
  *((unsigned char *)this + 46) = v16;
  if ((*((_DWORD *)a2 + 13) & 0x400) == 0) {
    return;
  }
LABEL_17:
  char v6 = *((unsigned char *)a2 + 47);
  *((_DWORD *)this + 13) |= 0x400u;
  *((unsigned char *)this + 47) = v6;
}

void sub_22490BAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorSession::~LocationMonitorSession(awd::metrics::LocationMonitorSession *this)
{
  *(void *)this = &unk_26D7BA4C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA4C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA4C8;
  awd::metrics::LocationMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMonitorSession::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::default_instance(awd::metrics::LocationMonitorSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMonitorSession::default_instance_;
  if (!awd::metrics::LocationMonitorSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMonitorSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMonitorSession::New(awd::metrics::LocationMonitorSession *this)
{
}

uint64_t awd::metrics::LocationMonitorSession::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(void *)(this + 37) = 0;
    int v1 = *(_DWORD *)(this + 52);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(this + 45) = 0;
    *(unsigned char *)(this + 47) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorSession::MergePartialFromCodedStream(awd::metrics::LocationMonitorSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    char v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_38:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_41:
        unsigned int v43 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v23 = v43;
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v23 = *v12;
          int v24 = v12 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v24 >= v9 || *v24 != 24) {
          continue;
        }
        int v13 = v24 + 1;
        *((void *)a2 + 1) = v13;
LABEL_49:
        unsigned int v43 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v25 = v43;
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v13;
          int v26 = v13 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 9) = v25;
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v26 >= v9 || *v26 != 32) {
          continue;
        }
        int v14 = v26 + 1;
        *((void *)a2 + 1) = v14;
LABEL_57:
        unsigned int v43 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v27 = v43;
          int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v14;
          int v28 = v14 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((unsigned char *)this + 44) = v27 != 0;
        int v15 = *((_DWORD *)this + 13) | 0x80;
        *((_DWORD *)this + 13) = v15;
        if ((unint64_t)v28 >= v9 || *v28 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_65:
        *((_DWORD *)this + 13) = v15 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v16 || *v29 != 48) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)a2 + 1) = v17;
LABEL_71:
        unsigned int v43 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v30 = v43;
          v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v17;
          v31 = v17 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 7) = v30;
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v31 >= v16 || *v31 != 56) {
          continue;
        }
        char v18 = v31 + 1;
        *((void *)a2 + 1) = v18;
LABEL_79:
        unsigned int v43 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v32 = v43;
          v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v32 = *v18;
          v33 = v18 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 8) = v32;
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v33 >= v16 || *v33 != 64) {
          continue;
        }
        int v19 = v33 + 1;
        *((void *)a2 + 1) = v19;
LABEL_87:
        unsigned int v43 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v34 = v43;
          uint64_t v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v34 = *v19;
          uint64_t v35 = v19 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 10) = v34;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v35 >= v16 || *v35 != 72) {
          continue;
        }
        int v20 = v35 + 1;
        *((void *)a2 + 1) = v20;
LABEL_95:
        unsigned int v43 = 0;
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v36 = v43;
          char v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v36 = *v20;
          char v37 = v20 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((unsigned char *)this + 45) = v36 != 0;
        *((_DWORD *)this + 13) |= 0x100u;
        if ((unint64_t)v37 >= v16 || *v37 != 80) {
          continue;
        }
        int v21 = v37 + 1;
        *((void *)a2 + 1) = v21;
LABEL_103:
        unsigned int v43 = 0;
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v38 = v43;
          unint64_t v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v38 = *v21;
          unint64_t v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((unsigned char *)this + 46) = v38 != 0;
        *((_DWORD *)this + 13) |= 0x200u;
        if ((unint64_t)v39 >= v16 || *v39 != 88) {
          continue;
        }
        unint64_t v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_111:
        unsigned int v43 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v40 = v43;
          uint64_t v41 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v40 = *v22;
          uint64_t v41 = (unsigned __int8 *)(v22 + 1);
          *((void *)a2 + 1) = v41;
        }
        *((unsigned char *)this + 47) = v40 != 0;
        *((_DWORD *)this + 13) |= 0x400u;
        if (v41 != (unsigned __int8 *)v16 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_49;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_57;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_32;
        }
        int v15 = *((_DWORD *)this + 13);
        goto LABEL_65;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_71;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        char v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_79;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_87;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_95;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xBu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_111;
      default:
        int v8 = TagFallback & 7;
LABEL_32:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMonitorSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 47);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMonitorSession::ByteSize(awd::metrics::LocationMonitorSession *this)
{
  int v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    unsigned int v4 = 0;
    goto LABEL_54;
  }
  if (v2)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v2 = *((_DWORD *)this + 13);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v12 = 2;
    }
    v3 += v12;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v14 = 2;
  }
  v3 += v14;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v16 = 2;
  }
  v3 += v16;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_40:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v18 = 2;
  }
  v3 += v18;
  if ((v2 & 0x40) != 0)
  {
LABEL_46:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v19 & 0x80000000) != 0)
    {
      int v20 = 11;
    }
    else if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v20 = 2;
    }
    v3 += v20;
  }
LABEL_52:
  unsigned int v4 = v3 + 2;
  if ((v2 & 0x80) == 0) {
    unsigned int v4 = v3;
  }
LABEL_54:
  unsigned int v21 = v4 + 2;
  if ((v2 & 0x100) == 0) {
    unsigned int v21 = v4;
  }
  if ((v2 & 0x200) != 0) {
    v21 += 2;
  }
  if ((v2 & 0x400) != 0) {
    v21 += 2;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v21;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

void awd::metrics::LocationMonitorSession::CheckTypeAndMergeFrom(awd::metrics::LocationMonitorSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMonitorSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMonitorSession::CopyFrom(awd::metrics::LocationMonitorSession *this, const awd::metrics::LocationMonitorSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMonitorSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationMonitorSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMonitorSession::IsInitialized(awd::metrics::LocationMonitorSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMonitorSession::Swap(uint64_t this, awd::metrics::LocationMonitorSession *a2)
{
  if (a2 != (awd::metrics::LocationMonitorSession *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 44);
    *(unsigned char *)(this + 44) = *((unsigned char *)a2 + 44);
    *((unsigned char *)a2 + 44) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 45);
    *(unsigned char *)(this + 45) = *((unsigned char *)a2 + 45);
    *((unsigned char *)a2 + 45) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 46);
    *(unsigned char *)(this + 46) = *((unsigned char *)a2 + 46);
    *((unsigned char *)a2 + 46) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 47);
    *(unsigned char *)(this + 47) = *((unsigned char *)a2 + 47);
    *((unsigned char *)a2 + 47) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

void *awd::metrics::LocationMonitorSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMonitorSession");
}

uint64_t awd::metrics::LocationMonitorTrigger::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 64) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 31) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  return this;
}

awd::metrics::LocationMonitorTrigger *awd::metrics::LocationMonitorTrigger::LocationMonitorTrigger(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  *(void *)this = &unk_26D7BA540;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  *(void *)((char *)this + 31) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  awd::metrics::LocationMonitorTrigger::MergeFrom(this, a2);
  return this;
}

void sub_22490C9EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorTrigger::MergeFrom(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 16) |= 2u;
  unint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    char v13 = *((unsigned char *)a2 + 36);
    *((_DWORD *)this + 16) |= 0x20u;
    *((unsigned char *)this + 36) = v13;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  char v14 = *((unsigned char *)a2 + 37);
  *((_DWORD *)this + 16) |= 0x40u;
  *((unsigned char *)this + 37) = v14;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *((unsigned char *)a2 + 38);
    *((_DWORD *)this + 16) |= 0x80u;
    *((unsigned char *)this + 38) = v5;
    int v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 10) = v15;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 11) = v16;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v17 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 12) = v17;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      return;
    }
    goto LABEL_19;
  }
LABEL_34:
  int v18 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 13) = v18;
  if ((*((_DWORD *)a2 + 16) & 0x1000) == 0) {
    return;
  }
LABEL_19:
  int v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x1000u;
  *((_DWORD *)this + 14) = v6;
}

void sub_22490CC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMonitorTrigger::~LocationMonitorTrigger(awd::metrics::LocationMonitorTrigger *this)
{
  *(void *)this = &unk_26D7BA540;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA540;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA540;
  awd::metrics::LocationMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMonitorTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::default_instance(awd::metrics::LocationMonitorTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMonitorTrigger::default_instance_;
  if (!awd::metrics::LocationMonitorTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMonitorTrigger::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMonitorTrigger::New(awd::metrics::LocationMonitorTrigger *this)
{
}

uint64_t awd::metrics::LocationMonitorTrigger::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 31) = 0;
    *(void *)(this + 24) = 0;
    int v1 = *(_DWORD *)(this + 64);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(_DWORD *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t awd::metrics::LocationMonitorTrigger::MergePartialFromCodedStream(awd::metrics::LocationMonitorTrigger *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  char v5 = (unsigned int *)((char *)this + 56);
  uint64_t v6 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_42:
          int v13 = *((_DWORD *)this + 16) | 1;
          *((_DWORD *)this + 16) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_45;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_36;
        }
        int v13 = *((_DWORD *)this + 16);
LABEL_45:
        *((_DWORD *)this + 16) = v13 | 2;
        if (*((void *)this + 2) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v14 || *v26 != 24) {
          continue;
        }
        int v15 = v26 + 1;
        *((void *)a2 + 1) = v15;
LABEL_51:
        unsigned int v49 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v27 = v49;
          int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v15;
          int v28 = v15 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 6) = v27;
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v28 >= v14 || *v28 != 32) {
          continue;
        }
        int v16 = v28 + 1;
        *((void *)a2 + 1) = v16;
LABEL_59:
        unsigned int v49 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v29 = v49;
          unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v29 = *v16;
          unsigned int v30 = v16 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 7) = v29;
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40) {
          continue;
        }
        int v17 = v30 + 1;
        *((void *)a2 + 1) = v17;
LABEL_67:
        unsigned int v49 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v31 = v49;
          unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v17;
          unsigned int v32 = v17 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 8) = v31;
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v32 >= v14 || *v32 != 48) {
          continue;
        }
        int v18 = v32 + 1;
        *((void *)a2 + 1) = v18;
LABEL_75:
        unsigned int v49 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v33 = v49;
          unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v18;
          unsigned int v34 = v18 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((unsigned char *)this + 36) = v33 != 0;
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v34 >= v14 || *v34 != 56) {
          continue;
        }
        int v19 = v34 + 1;
        *((void *)a2 + 1) = v19;
LABEL_83:
        unsigned int v49 = 0;
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v35 = v49;
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v19;
          unsigned int v36 = v19 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((unsigned char *)this + 37) = v35 != 0;
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v36 >= v14 || *v36 != 64) {
          continue;
        }
        int v20 = v36 + 1;
        *((void *)a2 + 1) = v20;
LABEL_91:
        unsigned int v49 = 0;
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v37 = v49;
          unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v37 = *v20;
          unsigned int v38 = v20 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((unsigned char *)this + 38) = v37 != 0;
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v38 >= v14 || *v38 != 80) {
          continue;
        }
        unsigned int v21 = v38 + 1;
        *((void *)a2 + 1) = v21;
LABEL_99:
        unsigned int v49 = 0;
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v39 = v49;
          unsigned int v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v39 = *v21;
          unsigned int v40 = v21 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 10) = v39;
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v40 >= v14 || *v40 != 88) {
          continue;
        }
        unint64_t v22 = v40 + 1;
        *((void *)a2 + 1) = v22;
LABEL_107:
        unsigned int v49 = 0;
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v41 = v49;
          int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v41 = *v22;
          int v42 = v22 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 11) = v41;
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v42 >= v14 || *v42 != 96) {
          continue;
        }
        unsigned int v23 = v42 + 1;
        *((void *)a2 + 1) = v23;
LABEL_115:
        unsigned int v49 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v43 = v49;
          uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v43 = *v23;
          uint64_t v44 = v23 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 12) = v43;
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v44 >= v14 || *v44 != 104) {
          continue;
        }
        int v24 = v44 + 1;
        *((void *)a2 + 1) = v24;
LABEL_123:
        unsigned int v49 = 0;
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49);
          if (!result) {
            return result;
          }
          unsigned int v45 = v49;
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v24;
          int v46 = v24 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 13) = v45;
        *((_DWORD *)this + 16) |= 0x800u;
        if ((unint64_t)v46 >= v14 || *v46 != 112) {
          continue;
        }
        unsigned int v25 = v46 + 1;
        *((void *)a2 + 1) = v25;
LABEL_131:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v47 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *char v5 = *v25;
          uint64_t v47 = (unsigned __int8 *)(v25 + 1);
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 16) |= 0x1000u;
        if (v47 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_51;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_59;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_67;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_75;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_83;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_91;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_99;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_115;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_123;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v25 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_131;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMonitorTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x1000) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return this;
  }
LABEL_27:
  uint64_t v7 = *(unsigned int *)(v5 + 56);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMonitorTrigger::ByteSize(awd::metrics::LocationMonitorTrigger *this)
{
  int v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_45;
  }
  if (v2)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v2 = *((_DWORD *)this + 16);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_26:
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v14 = 1;
    }
    v3 += v14 + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 10;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v12 = 1;
  }
  v3 += v12 + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v16 = 2;
    }
    v3 += v16;
  }
LABEL_38:
  unsigned int v17 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v17 += 2;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v17 + 2;
  }
  else {
    uint64_t v4 = v17;
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_80;
  }
  if ((v2 & 0x100) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v4 = (v19 + v4);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_64;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v20 & 0x80000000) != 0)
  {
    int v21 = 11;
  }
  else if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v4 = (v21 + v4);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_70;
  }
LABEL_64:
  unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v22 & 0x80000000) != 0)
  {
    int v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v4 = (v23 + v4);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_76;
  }
LABEL_70:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 11;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v4 = (v25 + v4);
  if ((v2 & 0x1000) != 0)
  {
LABEL_76:
    int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v26 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    }
    else {
      int v27 = 2;
    }
    uint64_t v4 = (v27 + v4);
  }
LABEL_80:
  *((_DWORD *)this + 15) = v4;
  return v4;
}

void awd::metrics::LocationMonitorTrigger::CheckTypeAndMergeFrom(awd::metrics::LocationMonitorTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMonitorTrigger::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMonitorTrigger::CopyFrom(awd::metrics::LocationMonitorTrigger *this, const awd::metrics::LocationMonitorTrigger *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMonitorTrigger *))(*(void *)this + 32))(this);
    awd::metrics::LocationMonitorTrigger::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMonitorTrigger::IsInitialized(awd::metrics::LocationMonitorTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMonitorTrigger::Swap(uint64_t this, awd::metrics::LocationMonitorTrigger *a2)
{
  if (a2 != (awd::metrics::LocationMonitorTrigger *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 36);
    *(unsigned char *)(this + 36) = *((unsigned char *)a2 + 36);
    *((unsigned char *)a2 + 36) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 37);
    *(unsigned char *)(this + 37) = *((unsigned char *)a2 + 37);
    *((unsigned char *)a2 + 37) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 38);
    *(unsigned char *)(this + 38) = *((unsigned char *)a2 + 38);
    *((unsigned char *)a2 + 38) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

void *awd::metrics::LocationMonitorTrigger::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMonitorTrigger");
}

double awd::metrics::LocationNetworkQueries::SharedCtor(awd::metrics::LocationNetworkQueries *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

awd::metrics::LocationNetworkQueries *awd::metrics::LocationNetworkQueries::LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  *(void *)this = &unk_26D7BA5B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 9) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  awd::metrics::LocationNetworkQueries::MergeFrom(this, a2);
  return this;
}

void sub_22490DD5C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNetworkQueries::MergeFrom(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *((_DWORD *)a2 + 19);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 19) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 19) |= 2u;
  unint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 19) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 19) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_29:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 19) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    int v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_28:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 19) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_30:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 19) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 19) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 19);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 19) |= 0x100u;
    *((_DWORD *)this + 12) = v15;
    int v4 = *((_DWORD *)a2 + 19);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 19) |= 0x200u;
  *((_DWORD *)this + 13) = v16;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v17 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 19) |= 0x400u;
  *((_DWORD *)this + 14) = v17;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v18 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 19) |= 0x800u;
  *((_DWORD *)this + 15) = v18;
  int v4 = *((_DWORD *)a2 + 19);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_36:
  int v19 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 19) |= 0x1000u;
  *((_DWORD *)this + 16) = v19;
  if ((*((_DWORD *)a2 + 19) & 0x2000) == 0) {
    return;
  }
LABEL_20:
  int v6 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 19) |= 0x2000u;
  *((_DWORD *)this + 17) = v6;
}

void sub_22490DFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNetworkQueries::~LocationNetworkQueries(awd::metrics::LocationNetworkQueries *this)
{
  *(void *)this = &unk_26D7BA5B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA5B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA5B8;
  awd::metrics::LocationNetworkQueries::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationNetworkQueries::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::default_instance(awd::metrics::LocationNetworkQueries *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationNetworkQueries::default_instance_;
  if (!awd::metrics::LocationNetworkQueries::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationNetworkQueries::default_instance_;
  }
  return result;
}

void awd::metrics::LocationNetworkQueries::New(awd::metrics::LocationNetworkQueries *this)
{
}

uint64_t awd::metrics::LocationNetworkQueries::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 76);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
    int v1 = *(_DWORD *)(this + 76);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(void *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t awd::metrics::LocationNetworkQueries::MergePartialFromCodedStream(awd::metrics::LocationNetworkQueries *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_44:
          int v12 = *((_DWORD *)this + 19) | 1;
          *((_DWORD *)this + 19) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_47;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_38;
        }
        int v12 = *((_DWORD *)this + 19);
LABEL_47:
        *((_DWORD *)this + 19) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v13 || *v26 != 24) {
          continue;
        }
        int v14 = v26 + 1;
        *((void *)a2 + 1) = v14;
LABEL_53:
        unsigned int v52 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v27 = v52;
          int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v14;
          int v28 = v14 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 6) = v27;
        *((_DWORD *)this + 19) |= 4u;
        if ((unint64_t)v28 >= v13 || *v28 != 32) {
          continue;
        }
        int v15 = v28 + 1;
        *((void *)a2 + 1) = v15;
LABEL_61:
        unsigned int v52 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v29 = v52;
          unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v29 = *v15;
          unsigned int v30 = v15 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 7) = v29;
        *((_DWORD *)this + 19) |= 8u;
        if ((unint64_t)v30 >= v13 || *v30 != 40) {
          continue;
        }
        int v16 = v30 + 1;
        *((void *)a2 + 1) = v16;
LABEL_69:
        unsigned int v52 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v31 = v52;
          unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v16;
          unsigned int v32 = v16 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 8) = v31;
        *((_DWORD *)this + 19) |= 0x10u;
        if ((unint64_t)v32 >= v13 || *v32 != 48) {
          continue;
        }
        int v17 = v32 + 1;
        *((void *)a2 + 1) = v17;
LABEL_77:
        unsigned int v52 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v33 = v52;
          unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v17;
          unsigned int v34 = v17 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 9) = v33;
        *((_DWORD *)this + 19) |= 0x20u;
        if ((unint64_t)v34 >= v13 || *v34 != 56) {
          continue;
        }
        int v18 = v34 + 1;
        *((void *)a2 + 1) = v18;
LABEL_85:
        unsigned int v52 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v35 = v52;
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v18;
          unsigned int v36 = v18 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 10) = v35;
        *((_DWORD *)this + 19) |= 0x40u;
        if ((unint64_t)v36 >= v13 || *v36 != 64) {
          continue;
        }
        int v19 = v36 + 1;
        *((void *)a2 + 1) = v19;
LABEL_93:
        unsigned int v52 = 0;
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v37 = v52;
          unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v37 = *v19;
          unsigned int v38 = v19 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 11) = v37;
        *((_DWORD *)this + 19) |= 0x80u;
        if ((unint64_t)v38 >= v13 || *v38 != 72) {
          continue;
        }
        int v20 = v38 + 1;
        *((void *)a2 + 1) = v20;
LABEL_101:
        unsigned int v52 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v39 = v52;
          unsigned int v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v39 = *v20;
          unsigned int v40 = v20 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 12) = v39;
        *((_DWORD *)this + 19) |= 0x100u;
        if ((unint64_t)v40 >= v13 || *v40 != 80) {
          continue;
        }
        int v21 = v40 + 1;
        *((void *)a2 + 1) = v21;
LABEL_109:
        unsigned int v52 = 0;
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v41 = v52;
          int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v41 = *v21;
          int v42 = v21 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 13) = v41;
        *((_DWORD *)this + 19) |= 0x200u;
        if ((unint64_t)v42 >= v13 || *v42 != 88) {
          continue;
        }
        unint64_t v22 = v42 + 1;
        *((void *)a2 + 1) = v22;
LABEL_117:
        unsigned int v52 = 0;
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v43 = v52;
          uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v43 = *v22;
          uint64_t v44 = v22 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 14) = v43;
        *((_DWORD *)this + 19) |= 0x400u;
        if ((unint64_t)v44 >= v13 || *v44 != 96) {
          continue;
        }
        int v23 = v44 + 1;
        *((void *)a2 + 1) = v23;
LABEL_125:
        unsigned int v52 = 0;
        if ((unint64_t)v23 >= v13 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v45 = v52;
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v23;
          int v46 = v23 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 15) = v45;
        *((_DWORD *)this + 19) |= 0x800u;
        if ((unint64_t)v46 >= v13 || *v46 != 104) {
          continue;
        }
        int v24 = v46 + 1;
        *((void *)a2 + 1) = v24;
LABEL_133:
        unsigned int v52 = 0;
        if ((unint64_t)v24 >= v13 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v47 = v52;
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v47 = *v24;
          int v48 = v24 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 16) = v47;
        *((_DWORD *)this + 19) |= 0x1000u;
        if ((unint64_t)v48 >= v13 || *v48 != 112) {
          continue;
        }
        int v25 = v48 + 1;
        *((void *)a2 + 1) = v25;
LABEL_141:
        unsigned int v52 = 0;
        if ((unint64_t)v25 >= v13 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v49 = v52;
          uint64_t v50 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v25;
          uint64_t v50 = (unsigned __int8 *)(v25 + 1);
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 17) = v49;
        *((_DWORD *)this + 19) |= 0x2000u;
        if (v50 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_53;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_61;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_69;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_77;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_85;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_93;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_101;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_109;
      case 0xBu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_117;
      case 0xCu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_125;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_133;
      case 0xEu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_141;
      default:
        int v8 = TagFallback & 7;
LABEL_38:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationNetworkQueries::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 76);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[19];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[19];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[14], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[16], (uint64_t)a2, a4);
    if ((v5[19] & 0x2000) == 0) {
      return this;
    }
    goto LABEL_29;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[15], (uint64_t)a2, a4);
  unsigned int v6 = v5[19];
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return this;
  }
LABEL_29:
  uint64_t v7 = v5[17];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationNetworkQueries::ByteSize(awd::metrics::LocationNetworkQueries *this)
{
  int v2 = *((_DWORD *)this + 19);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_59;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 19);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 19);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      int v2 = *((_DWORD *)this + 19);
    }
    else
    {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_35:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_41:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_53;
  }
LABEL_47:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v19 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      int v2 = *((_DWORD *)this + 19);
    }
    else
    {
      int v21 = 1;
    }
    uint64_t v3 = (v3 + v21 + 1);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_103;
  }
  if ((v2 & 0x100) != 0)
  {
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 11;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
      int v2 = *((_DWORD *)this + 19);
    }
    else
    {
      int v23 = 2;
    }
    uint64_t v3 = (v23 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_79;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 11;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v3 = (v25 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_85;
  }
LABEL_79:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_64:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_91;
  }
LABEL_85:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v28 & 0x80000000) != 0)
  {
    int v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_65:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_97;
  }
LABEL_91:
  unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v30 & 0x80000000) != 0)
  {
    int v31 = 11;
  }
  else if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v31 = 2;
  }
  uint64_t v3 = (v31 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_97:
    unsigned int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v32 & 0x80000000) != 0)
    {
      int v33 = 11;
    }
    else if (v32 >= 0x80)
    {
      int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    }
    else
    {
      int v33 = 2;
    }
    uint64_t v3 = (v33 + v3);
  }
LABEL_103:
  *((_DWORD *)this + 18) = v3;
  return v3;
}

void awd::metrics::LocationNetworkQueries::CheckTypeAndMergeFrom(awd::metrics::LocationNetworkQueries *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationNetworkQueries::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationNetworkQueries::CopyFrom(awd::metrics::LocationNetworkQueries *this, const awd::metrics::LocationNetworkQueries *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationNetworkQueries *))(*(void *)this + 32))(this);
    awd::metrics::LocationNetworkQueries::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationNetworkQueries::IsInitialized(awd::metrics::LocationNetworkQueries *this)
{
  return 1;
}

uint64_t awd::metrics::LocationNetworkQueries::Swap(uint64_t this, awd::metrics::LocationNetworkQueries *a2)
{
  if (a2 != (awd::metrics::LocationNetworkQueries *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
  }
  return this;
}

void *awd::metrics::LocationNetworkQueries::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationNetworkQueries");
}

uint64_t awd::metrics::LocationWifiUsage::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationWifiUsage *awd::metrics::LocationWifiUsage::LocationWifiUsage(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  *(void *)this = &unk_26D7BA630;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 5) = 0;
  awd::metrics::LocationWifiUsage::MergeFrom(this, a2);
  return this;
}

void sub_22490F228(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiUsage::MergeFrom(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    unint64_t v8 = (std::string *)*((void *)this + 2);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 12) |= 8u;
    *((_DWORD *)this + 7) = v10;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_DWORD *)this + 8) = v11;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_20:
    int v12 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 12) |= 0x20u;
    *((_DWORD *)this + 9) = v12;
    if ((*((_DWORD *)a2 + 12) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x40u;
    *((_DWORD *)this + 10) = v5;
  }
}

void sub_22490F3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiUsage::~LocationWifiUsage(awd::metrics::LocationWifiUsage *this)
{
  *(void *)this = &unk_26D7BA630;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA630;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA630;
  awd::metrics::LocationWifiUsage::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationWifiUsage::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::default_instance(awd::metrics::LocationWifiUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationWifiUsage::default_instance_;
  if (!awd::metrics::LocationWifiUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationWifiUsage::New(awd::metrics::LocationWifiUsage *this)
{
}

uint64_t awd::metrics::LocationWifiUsage::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 48);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(_DWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiUsage::MergePartialFromCodedStream(awd::metrics::LocationWifiUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_30:
          int v12 = *((_DWORD *)this + 12) | 1;
          *((_DWORD *)this + 12) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_33;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_24;
        }
        int v12 = *((_DWORD *)this + 12);
LABEL_33:
        *((_DWORD *)this + 12) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v13 || *v19 != 24) {
          continue;
        }
        int v14 = v19 + 1;
        *((void *)a2 + 1) = v14;
LABEL_39:
        unsigned int v31 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!result) {
            return result;
          }
          unsigned int v20 = v31;
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          int v21 = v14 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 6) = v20;
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32) {
          continue;
        }
        int v15 = v21 + 1;
        *((void *)a2 + 1) = v15;
LABEL_47:
        unsigned int v31 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!result) {
            return result;
          }
          unsigned int v22 = v31;
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          int v23 = v15 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 7) = v22;
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v23 >= v13 || *v23 != 40) {
          continue;
        }
        int v16 = v23 + 1;
        *((void *)a2 + 1) = v16;
LABEL_55:
        unsigned int v31 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!result) {
            return result;
          }
          unsigned int v24 = v31;
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          int v25 = v16 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 8) = v24;
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v25 >= v13 || *v25 != 48) {
          continue;
        }
        int v17 = v25 + 1;
        *((void *)a2 + 1) = v17;
LABEL_63:
        unsigned int v31 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!result) {
            return result;
          }
          unsigned int v26 = v31;
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          int v27 = v17 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 9) = v26;
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v27 >= v13 || *v27 != 56) {
          continue;
        }
        int v18 = v27 + 1;
        *((void *)a2 + 1) = v18;
LABEL_71:
        unsigned int v31 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!result) {
            return result;
          }
          unsigned int v28 = v31;
          int v29 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v18;
          int v29 = (unsigned __int8 *)(v18 + 1);
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 10) = v28;
        *((_DWORD *)this + 12) |= 0x40u;
        if (v29 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_39;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_47;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_55;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_63;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_71;
      default:
        int v8 = TagFallback & 7;
LABEL_24:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationWifiUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[9], (uint64_t)a2, a4);
    if ((v5[12] & 0x40) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_15:
  uint64_t v7 = v5[10];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationWifiUsage::ByteSize(awd::metrics::LocationWifiUsage *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_52;
  }
  if (*((unsigned char *)this + 48))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 12);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_40:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_46:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_52:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationWifiUsage::CheckTypeAndMergeFrom(awd::metrics::LocationWifiUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationWifiUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiUsage::CopyFrom(awd::metrics::LocationWifiUsage *this, const awd::metrics::LocationWifiUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationWifiUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiUsage::IsInitialized(awd::metrics::LocationWifiUsage *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiUsage::Swap(uint64_t this, awd::metrics::LocationWifiUsage *a2)
{
  if (a2 != (awd::metrics::LocationWifiUsage *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return this;
}

void *awd::metrics::LocationWifiUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiUsage");
}

void *awd::metrics::LocationEmergencySession::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[4] = 0;
  this[5] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationEmergencySession *awd::metrics::LocationEmergencySession::LocationEmergencySession(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BA6A8;
  *((void *)this + 1) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  awd::metrics::LocationEmergencySession::MergeFrom(this, a2);
  return this;
}

void sub_22490FFA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySession::MergeFrom(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 44))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    unint64_t v8 = (std::string *)*((void *)this + 2);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 7) = v10;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_18:
    int v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 8) = v11;
    if ((*((_DWORD *)a2 + 11) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_224910134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySession::~LocationEmergencySession(awd::metrics::LocationEmergencySession *this)
{
  *(void *)this = &unk_26D7BA6A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA6A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA6A8;
  awd::metrics::LocationEmergencySession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationEmergencySession::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::default_instance(awd::metrics::LocationEmergencySession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationEmergencySession::default_instance_;
  if (!awd::metrics::LocationEmergencySession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencySession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationEmergencySession::New(awd::metrics::LocationEmergencySession *this)
{
}

uint64_t awd::metrics::LocationEmergencySession::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 44);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencySession::MergePartialFromCodedStream(awd::metrics::LocationEmergencySession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_28:
          int v12 = *((_DWORD *)this + 11) | 1;
          *((_DWORD *)this + 11) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *((_DWORD *)this + 11);
LABEL_31:
        *((_DWORD *)this + 11) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        int v14 = v18 + 1;
        *((void *)a2 + 1) = v14;
LABEL_37:
        unsigned int v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v19 = v28;
          unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = v14 + 1;
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 6) = v19;
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v20 >= v13 || *v20 != 32) {
          continue;
        }
        int v15 = v20 + 1;
        *((void *)a2 + 1) = v15;
LABEL_45:
        unsigned int v28 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28;
          unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v21 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 7) = v21;
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)a2 + 1) = v16;
LABEL_53:
        unsigned int v28 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v23 = v28;
          unsigned int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          unsigned int v24 = v16 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 8) = v23;
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v24 >= v13 || *v24 != 48) {
          continue;
        }
        int v17 = v24 + 1;
        *((void *)a2 + 1) = v17;
LABEL_61:
        unsigned int v28 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v25 = v28;
          unsigned int v26 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          unsigned int v26 = (unsigned __int8 *)(v17 + 1);
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 9) = v25;
        *((_DWORD *)this + 11) |= 0x20u;
        if (v26 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_45;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_53;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_61;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationEmergencySession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
    if ((v5[11] & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationEmergencySession::ByteSize(awd::metrics::LocationEmergencySession *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_45;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 11);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 11);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 11);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x20) != 0)
  {
LABEL_39:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_45:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationEmergencySession::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencySession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationEmergencySession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencySession::CopyFrom(awd::metrics::LocationEmergencySession *this, const awd::metrics::LocationEmergencySession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencySession *))(*(void *)this + 32))(this);
    awd::metrics::LocationEmergencySession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencySession::IsInitialized(awd::metrics::LocationEmergencySession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationEmergencySession::Swap(uint64_t this, awd::metrics::LocationEmergencySession *a2)
{
  if (a2 != (awd::metrics::LocationEmergencySession *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return this;
}

void *awd::metrics::LocationEmergencySession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencySession");
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionMethod_IsValid(awd::metrics *this)
{
  return this < 0xB;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(awd::metrics *this)
{
  return this < 0xA;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionProtocol_IsValid(awd::metrics *this)
{
  return this < 9;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_RadioAccessTechnology_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PositionReport_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_SessionErrorCode_IsValid(awd::metrics *this)
{
  return this < 0x24;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_HELOUsage_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_TandemCapability_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_PhoneNumberAvailability_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(awd::metrics *this)
{
  return this < 3;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics_GnssSignalEnvironmentType_IsValid(awd::metrics *this)
{
  return (this < 8) & (0xDFu >> (char)this);
}

BOOL awd::metrics::LocationEmergencySessionStatistics_AbortCauseType_IsValid(awd::metrics *this)
{
  return this < 0xC;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_DiscardedPosMsgType_IsValid(awd::metrics *this)
{
  return this < 8;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CallMode_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_CallTriggerType_IsValid(awd::metrics *this)
{
  return this < 9;
}

BOOL awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(awd::metrics *this)
{
  return this < 4;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SharedCtor(awd::metrics::LocationEmergencySessionStatistics *this)
{
  *(_OWORD *)((char *)this + 24) = 0u;
  uint64_t result = (uint64_t)this + 24;
  *(_DWORD *)(result + 444) = 0;
  uint64_t v2 = MEMORY[0x263F8C740];
  *(void *)(result - 16) = 0;
  *(void *)(result - 8) = v2;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 160) = 0u;
  *(_OWORD *)(result + 176) = 0u;
  *(_OWORD *)(result + 192) = 0u;
  *(_OWORD *)(result + 208) = 0u;
  *(_OWORD *)(result + 224) = 0u;
  *(_OWORD *)(result + 240) = 0u;
  *(void *)(result + 256) = v2;
  *(void *)(result + 264) = v2;
  *(_OWORD *)(result + 272) = 0u;
  *(_OWORD *)(result + 288) = 0u;
  *(_OWORD *)(result + 304) = 0u;
  *(_DWORD *)(result + 319) = 0;
  *(_OWORD *)(result + 368) = 0u;
  *(_OWORD *)(result + 340) = 0u;
  *(_OWORD *)(result + 356) = 0u;
  *(_OWORD *)(result + 324) = 0u;
  *(void *)(result + 384) = v2;
  *(void *)(result + 392) = 0;
  *(void *)(result + 400) = v2;
  *(void *)(result + 448) = 0;
  *(void *)(result + 456) = 0;
  *(_DWORD *)(result + 440) = 0;
  *(_OWORD *)(result + 424) = 0u;
  *(_OWORD *)(result + 408) = 0u;
  return result;
}

awd::metrics::LocationEmergencySessionStatistics *awd::metrics::LocationEmergencySessionStatistics::LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  *((_DWORD *)this + 117) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BA720;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v3;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *((void *)this + 35) = v3;
  *((void *)this + 36) = v3;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_DWORD *)((char *)this + 343) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 364) = 0u;
  *(_OWORD *)((char *)this + 380) = 0u;
  *(_OWORD *)((char *)this + 348) = 0u;
  *((void *)this + 51) = v3;
  *((void *)this + 52) = 0;
  *((void *)this + 53) = v3;
  *((void *)this + 59) = 0;
  *((void *)this + 60) = 0;
  *((_DWORD *)this + 116) = 0;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224910E50(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySessionStatistics::MergeFrom(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v126);
  }
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 118) |= 1u;
      *((void *)this + 1) = v5;
      unsigned int v4 = *((_DWORD *)a2 + 118);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    char v6 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 118) |= 2u;
    uint64_t v7 = (std::string *)*((void *)this + 2);
    if (v7 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v7, v6);
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v8 = *((void *)a2 + 3);
    *((_DWORD *)this + 118) |= 4u;
    *((void *)this + 3) = v8;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v9 = *((void *)a2 + 4);
    *((_DWORD *)this + 118) |= 8u;
    *((void *)this + 4) = v9;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v10 = *((void *)a2 + 5);
    *((_DWORD *)this + 118) |= 0x10u;
    *((void *)this + 5) = v10;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v11 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 118) |= 0x20u;
    *((_DWORD *)this + 12) = v11;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_24;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v12 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 118) |= 0x40u;
    *((_DWORD *)this + 13) = v12;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x80) == 0) {
      goto LABEL_24;
    }
LABEL_22:
    unsigned int v13 = *((_DWORD *)a2 + 14);
    if (v13 >= 0xB) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 118) |= 0x80u;
    *((_DWORD *)this + 14) = v13;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
LABEL_24:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_40;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v14 = *((_DWORD *)a2 + 15);
    if (v14 >= 0xA) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 118) |= 0x100u;
    *((_DWORD *)this + 15) = v14;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v15 = *((_DWORD *)a2 + 16);
    if (v15 >= 9) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 118) |= 0x200u;
    *((_DWORD *)this + 16) = v15;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x400) != 0)
  {
    unsigned int v16 = *((_DWORD *)a2 + 17);
    if (v16 >= 0xD) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 118) |= 0x400u;
    *((_DWORD *)this + 17) = v16;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x800) != 0)
  {
    int v30 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 118) |= 0x800u;
    *((_DWORD *)this + 18) = v30;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x1000) == 0)
    {
LABEL_36:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_95;
    }
  }
  else if ((v4 & 0x1000) == 0)
  {
    goto LABEL_36;
  }
  int v31 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 118) |= 0x1000u;
  *((_DWORD *)this + 19) = v31;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x2000) == 0)
  {
LABEL_37:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_96;
  }
LABEL_95:
  int v32 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 118) |= 0x2000u;
  *((_DWORD *)this + 20) = v32;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x4000) == 0)
  {
LABEL_38:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_96:
  int v33 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 118) |= 0x4000u;
  *((_DWORD *)this + 21) = v33;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x8000) != 0)
  {
LABEL_39:
    uint64_t v17 = *((void *)a2 + 11);
    *((_DWORD *)this + 118) |= 0x8000u;
    *((void *)this + 11) = v17;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
LABEL_40:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_61;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t v18 = *((void *)a2 + 12);
    *((_DWORD *)this + 118) |= 0x10000u;
    *((void *)this + 12) = v18;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x20000) != 0)
  {
    unsigned int v19 = *((_DWORD *)a2 + 26);
    if (v19 >= 4) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 118) |= 0x20000u;
    *((_DWORD *)this + 26) = v19;
    unsigned int v4 = *((_DWORD *)a2 + 118);
  }
  if ((v4 & 0x40000) != 0)
  {
    int v20 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 118) |= 0x40000u;
    *((_DWORD *)this + 27) = v20;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x80000) == 0)
    {
LABEL_48:
      if ((v4 & 0x100000) == 0) {
        goto LABEL_49;
      }
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x80000) == 0)
  {
    goto LABEL_48;
  }
  int v21 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 118) |= 0x80000u;
  *((_DWORD *)this + 28) = v21;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x100000) == 0)
  {
LABEL_49:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_57;
  }
LABEL_55:
  unsigned int v22 = *((_DWORD *)a2 + 29);
  if (v22 >= 0x24) {
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 118) |= 0x100000u;
  *((_DWORD *)this + 29) = v22;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x200000) == 0)
  {
LABEL_50:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_58;
  }
LABEL_57:
  char v23 = *((unsigned char *)a2 + 132);
  *((_DWORD *)this + 118) |= 0x200000u;
  *((unsigned char *)this + 132) = v23;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x400000) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
LABEL_58:
  char v24 = *((unsigned char *)a2 + 133);
  *((_DWORD *)this + 118) |= 0x400000u;
  *((unsigned char *)this + 133) = v24;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x800000) == 0) {
    goto LABEL_61;
  }
LABEL_59:
  unsigned int v25 = *((_DWORD *)a2 + 32);
  if (v25 >= 3) {
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 118) |= 0x800000u;
  *((_DWORD *)this + 32) = v25;
  unsigned int v4 = *((_DWORD *)a2 + 118);
LABEL_61:
  if (!HIBYTE(v4)) {
    goto LABEL_70;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t v60 = *((void *)a2 + 15);
    *((_DWORD *)this + 118) |= 0x1000000u;
    *((void *)this + 15) = v60;
    unsigned int v4 = *((_DWORD *)a2 + 118);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_64:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_154;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_64;
  }
  uint64_t v61 = *((void *)a2 + 17);
  *((_DWORD *)this + 118) |= 0x2000000u;
  *((void *)this + 17) = v61;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_155;
  }
LABEL_154:
  int v62 = *((_DWORD *)a2 + 36);
  *((_DWORD *)this + 118) |= 0x4000000u;
  *((_DWORD *)this + 36) = v62;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_66:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_156;
  }
LABEL_155:
  int v63 = *((_DWORD *)a2 + 37);
  *((_DWORD *)this + 118) |= 0x8000000u;
  *((_DWORD *)this + 37) = v63;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v64 = *((unsigned char *)a2 + 134);
  *((_DWORD *)this + 118) |= 0x10000000u;
  *((unsigned char *)this + 134) = v64;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_69;
    }
LABEL_158:
    char v66 = *((unsigned char *)a2 + 164);
    *((_DWORD *)this + 118) |= 0x40000000u;
    *((unsigned char *)this + 164) = v66;
    if ((*((_DWORD *)a2 + 118) & 0x80000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_159;
  }
LABEL_157:
  char v65 = *((unsigned char *)a2 + 135);
  *((_DWORD *)this + 118) |= 0x20000000u;
  *((unsigned char *)this + 135) = v65;
  unsigned int v4 = *((_DWORD *)a2 + 118);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_158;
  }
LABEL_69:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_70;
  }
LABEL_159:
  uint64_t v67 = *((void *)a2 + 19);
  *((_DWORD *)this + 118) |= 0x80000000;
  *((void *)this + 19) = v67;
LABEL_70:
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if (!(_BYTE)v26) {
    goto LABEL_83;
  }
  if (v26)
  {
    char v27 = *((unsigned char *)a2 + 165);
    *((_DWORD *)this + 119) |= 1u;
    *((unsigned char *)this + 165) = v27;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 2) != 0)
  {
    unsigned int v28 = *((_DWORD *)a2 + 40);
    if (v28 >= 5) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 119) |= 2u;
    *((_DWORD *)this + 40) = v28;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 4) != 0)
  {
    int v42 = *((_DWORD *)a2 + 42);
    *((_DWORD *)this + 119) |= 4u;
    *((_DWORD *)this + 42) = v42;
    unsigned int v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 8) == 0)
    {
LABEL_78:
      if ((v26 & 0x10) == 0) {
        goto LABEL_79;
      }
      goto LABEL_119;
    }
  }
  else if ((v26 & 8) == 0)
  {
    goto LABEL_78;
  }
  char v43 = *((unsigned char *)a2 + 166);
  *((_DWORD *)this + 119) |= 8u;
  *((unsigned char *)this + 166) = v43;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x10) == 0)
  {
LABEL_79:
    if ((v26 & 0x20) == 0) {
      goto LABEL_80;
    }
    goto LABEL_120;
  }
LABEL_119:
  char v44 = *((unsigned char *)a2 + 167);
  *((_DWORD *)this + 119) |= 0x10u;
  *((unsigned char *)this + 167) = v44;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x20) == 0)
  {
LABEL_80:
    if ((v26 & 0x40) == 0) {
      goto LABEL_81;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v45 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 119) |= 0x20u;
  *((_DWORD *)this + 43) = v45;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x40) == 0)
  {
LABEL_81:
    if ((v26 & 0x80) == 0) {
      goto LABEL_83;
    }
    goto LABEL_82;
  }
LABEL_121:
  int v46 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 119) |= 0x40u;
  *((_DWORD *)this + 44) = v46;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x80) != 0)
  {
LABEL_82:
    int v29 = *((_DWORD *)a2 + 45);
    *((_DWORD *)this + 119) |= 0x80u;
    *((_DWORD *)this + 45) = v29;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
LABEL_83:
  if ((v26 & 0xFF00) == 0) {
    goto LABEL_107;
  }
  if ((v26 & 0x100) != 0)
  {
    char v34 = *((unsigned char *)a2 + 212);
    *((_DWORD *)this + 119) |= 0x100u;
    *((unsigned char *)this + 212) = v34;
    unsigned int v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x200) == 0)
    {
LABEL_86:
      if ((v26 & 0x400) == 0) {
        goto LABEL_87;
      }
      goto LABEL_100;
    }
  }
  else if ((v26 & 0x200) == 0)
  {
    goto LABEL_86;
  }
  int v35 = *((_DWORD *)a2 + 46);
  *((_DWORD *)this + 119) |= 0x200u;
  *((_DWORD *)this + 46) = v35;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x400) == 0)
  {
LABEL_87:
    if ((v26 & 0x800) == 0) {
      goto LABEL_88;
    }
    goto LABEL_101;
  }
LABEL_100:
  int v36 = *((_DWORD *)a2 + 47);
  *((_DWORD *)this + 119) |= 0x400u;
  *((_DWORD *)this + 47) = v36;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x800) == 0)
  {
LABEL_88:
    if ((v26 & 0x1000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v37 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 119) |= 0x800u;
  *((_DWORD *)this + 48) = v37;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x1000) == 0)
  {
LABEL_89:
    if ((v26 & 0x2000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v38 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 119) |= 0x1000u;
  *((_DWORD *)this + 49) = v38;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x2000) == 0)
  {
LABEL_90:
    if ((v26 & 0x4000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_104;
  }
LABEL_103:
  int v39 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 119) |= 0x2000u;
  *((_DWORD *)this + 50) = v39;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x4000) == 0)
  {
LABEL_91:
    if ((v26 & 0x8000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_105;
  }
LABEL_104:
  int v40 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 119) |= 0x4000u;
  *((_DWORD *)this + 51) = v40;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x8000) == 0) {
    goto LABEL_107;
  }
LABEL_105:
  unsigned int v41 = *((_DWORD *)a2 + 52);
  if (v41 >= 5) {
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 119) |= 0x8000u;
  *((_DWORD *)this + 52) = v41;
  unsigned int v26 = *((_DWORD *)a2 + 119);
LABEL_107:
  if ((v26 & 0xFF0000) == 0) {
    goto LABEL_132;
  }
  if ((v26 & 0x10000) != 0)
  {
    char v47 = *((unsigned char *)a2 + 213);
    *((_DWORD *)this + 119) |= 0x10000u;
    *((unsigned char *)this + 213) = v47;
    unsigned int v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x20000) == 0)
    {
LABEL_110:
      if ((v26 & 0x40000) == 0) {
        goto LABEL_111;
      }
      goto LABEL_125;
    }
  }
  else if ((v26 & 0x20000) == 0)
  {
    goto LABEL_110;
  }
  char v48 = *((unsigned char *)a2 + 214);
  *((_DWORD *)this + 119) |= 0x20000u;
  *((unsigned char *)this + 214) = v48;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x40000) == 0)
  {
LABEL_111:
    if ((v26 & 0x80000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t v49 = *((void *)a2 + 27);
  *((_DWORD *)this + 119) |= 0x40000u;
  *((void *)this + 27) = v49;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x80000) == 0)
  {
LABEL_112:
    if ((v26 & 0x100000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t v50 = *((void *)a2 + 28);
  *((_DWORD *)this + 119) |= 0x80000u;
  *((void *)this + 28) = v50;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x100000) == 0)
  {
LABEL_113:
    if ((v26 & 0x200000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t v51 = *((void *)a2 + 29);
  *((_DWORD *)this + 119) |= 0x100000u;
  *((void *)this + 29) = v51;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x200000) == 0)
  {
LABEL_114:
    if ((v26 & 0x400000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v52 = *((void *)a2 + 30);
  *((_DWORD *)this + 119) |= 0x200000u;
  *((void *)this + 30) = v52;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x400000) == 0)
  {
LABEL_115:
    if ((v26 & 0x800000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v53 = *((void *)a2 + 31);
  *((_DWORD *)this + 119) |= 0x400000u;
  *((void *)this + 31) = v53;
  unsigned int v26 = *((_DWORD *)a2 + 119);
  if ((v26 & 0x800000) == 0) {
    goto LABEL_132;
  }
LABEL_130:
  unsigned int v54 = *((_DWORD *)a2 + 64);
  if (v54 >= 3) {
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 119) |= 0x800000u;
  *((_DWORD *)this + 64) = v54;
  unsigned int v26 = *((_DWORD *)a2 + 119);
LABEL_132:
  if (!HIBYTE(v26)) {
    goto LABEL_167;
  }
  if ((v26 & 0x1000000) != 0)
  {
    unsigned int v55 = *((_DWORD *)a2 + 65);
    if (v55 >= 5 && v55 - 6 >= 2) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 119) |= 0x1000000u;
    *((_DWORD *)this + 65) = v55;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x2000000) != 0)
  {
    char v56 = *((unsigned char *)a2 + 215);
    *((_DWORD *)this + 119) |= 0x2000000u;
    *((unsigned char *)this + 215) = v56;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x4000000) != 0)
  {
    unsigned int v57 = *((_DWORD *)a2 + 66);
    if (v57 >= 0xC) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 119) |= 0x4000000u;
    *((_DWORD *)this + 66) = v57;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x8000000) != 0)
  {
    unsigned int v58 = *((_DWORD *)a2 + 67);
    if (v58 >= 0xA) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 119) |= 0x8000000u;
    *((_DWORD *)this + 67) = v58;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x10000000) != 0)
  {
    unsigned int v59 = *((_DWORD *)a2 + 68);
    if (v59 >= 3) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 119) |= 0x10000000u;
    *((_DWORD *)this + 68) = v59;
    unsigned int v26 = *((_DWORD *)a2 + 119);
  }
  if ((v26 & 0x20000000) != 0)
  {
    int v68 = *((_DWORD *)a2 + 69);
    *((_DWORD *)this + 119) |= 0x20000000u;
    *((_DWORD *)this + 69) = v68;
    unsigned int v26 = *((_DWORD *)a2 + 119);
    if ((v26 & 0x40000000) == 0)
    {
LABEL_150:
      if ((v26 & 0x80000000) == 0) {
        goto LABEL_167;
      }
      goto LABEL_164;
    }
  }
  else if ((v26 & 0x40000000) == 0)
  {
    goto LABEL_150;
  }
  v69 = (const std::string *)*((void *)a2 + 35);
  *((_DWORD *)this + 119) |= 0x40000000u;
  unsigned int v70 = (std::string *)*((void *)this + 35);
  if (v70 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v70, v69);
  if ((*((_DWORD *)a2 + 119) & 0x80000000) != 0)
  {
LABEL_164:
    v71 = (const std::string *)*((void *)a2 + 36);
    *((_DWORD *)this + 119) |= 0x80000000;
    unsigned int v72 = (std::string *)*((void *)this + 36);
    if (v72 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v72, v71);
  }
LABEL_167:
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if (!(_BYTE)v73) {
    goto LABEL_177;
  }
  if (v73)
  {
    int v97 = *((_DWORD *)a2 + 74);
    *((_DWORD *)this + 120) |= 1u;
    *((_DWORD *)this + 74) = v97;
    unsigned int v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 2) == 0)
    {
LABEL_170:
      if ((v73 & 4) == 0) {
        goto LABEL_171;
      }
      goto LABEL_260;
    }
  }
  else if ((v73 & 2) == 0)
  {
    goto LABEL_170;
  }
  int v98 = *((_DWORD *)a2 + 75);
  *((_DWORD *)this + 120) |= 2u;
  *((_DWORD *)this + 75) = v98;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 4) == 0)
  {
LABEL_171:
    if ((v73 & 8) == 0) {
      goto LABEL_172;
    }
    goto LABEL_261;
  }
LABEL_260:
  char v99 = *((unsigned char *)a2 + 304);
  *((_DWORD *)this + 120) |= 4u;
  *((unsigned char *)this + 304) = v99;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 8) == 0)
  {
LABEL_172:
    if ((v73 & 0x10) == 0) {
      goto LABEL_173;
    }
    goto LABEL_262;
  }
LABEL_261:
  char v100 = *((unsigned char *)a2 + 305);
  *((_DWORD *)this + 120) |= 8u;
  *((unsigned char *)this + 305) = v100;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x10) == 0)
  {
LABEL_173:
    if ((v73 & 0x20) == 0) {
      goto LABEL_174;
    }
    goto LABEL_263;
  }
LABEL_262:
  char v101 = *((unsigned char *)a2 + 306);
  *((_DWORD *)this + 120) |= 0x10u;
  *((unsigned char *)this + 306) = v101;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x20) == 0)
  {
LABEL_174:
    if ((v73 & 0x40) == 0) {
      goto LABEL_175;
    }
    goto LABEL_264;
  }
LABEL_263:
  int v102 = *((_DWORD *)a2 + 77);
  *((_DWORD *)this + 120) |= 0x20u;
  *((_DWORD *)this + 77) = v102;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x40) == 0)
  {
LABEL_175:
    if ((v73 & 0x80) == 0) {
      goto LABEL_177;
    }
    goto LABEL_176;
  }
LABEL_264:
  int v103 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 120) |= 0x40u;
  *((_DWORD *)this + 78) = v103;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x80) != 0)
  {
LABEL_176:
    int v74 = *((_DWORD *)a2 + 79);
    *((_DWORD *)this + 120) |= 0x80u;
    *((_DWORD *)this + 79) = v74;
    unsigned int v73 = *((_DWORD *)a2 + 120);
  }
LABEL_177:
  if ((v73 & 0xFF00) == 0) {
    goto LABEL_187;
  }
  if ((v73 & 0x100) != 0)
  {
    int v104 = *((_DWORD *)a2 + 80);
    *((_DWORD *)this + 120) |= 0x100u;
    *((_DWORD *)this + 80) = v104;
    unsigned int v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 0x200) == 0)
    {
LABEL_180:
      if ((v73 & 0x400) == 0) {
        goto LABEL_181;
      }
      goto LABEL_268;
    }
  }
  else if ((v73 & 0x200) == 0)
  {
    goto LABEL_180;
  }
  int v105 = *((_DWORD *)a2 + 81);
  *((_DWORD *)this + 120) |= 0x200u;
  *((_DWORD *)this + 81) = v105;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x400) == 0)
  {
LABEL_181:
    if ((v73 & 0x800) == 0) {
      goto LABEL_182;
    }
    goto LABEL_269;
  }
LABEL_268:
  char v106 = *((unsigned char *)a2 + 307);
  *((_DWORD *)this + 120) |= 0x400u;
  *((unsigned char *)this + 307) = v106;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x800) == 0)
  {
LABEL_182:
    if ((v73 & 0x1000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_270;
  }
LABEL_269:
  char v107 = *((unsigned char *)a2 + 328);
  *((_DWORD *)this + 120) |= 0x800u;
  *((unsigned char *)this + 328) = v107;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x1000) == 0)
  {
LABEL_183:
    if ((v73 & 0x2000) == 0) {
      goto LABEL_184;
    }
    goto LABEL_271;
  }
LABEL_270:
  char v108 = *((unsigned char *)a2 + 329);
  *((_DWORD *)this + 120) |= 0x1000u;
  *((unsigned char *)this + 329) = v108;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x2000) == 0)
  {
LABEL_184:
    if ((v73 & 0x4000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_272;
  }
LABEL_271:
  char v109 = *((unsigned char *)a2 + 330);
  *((_DWORD *)this + 120) |= 0x2000u;
  *((unsigned char *)this + 330) = v109;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x4000) == 0)
  {
LABEL_185:
    if ((v73 & 0x8000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_186;
  }
LABEL_272:
  char v110 = *((unsigned char *)a2 + 331);
  *((_DWORD *)this + 120) |= 0x4000u;
  *((unsigned char *)this + 331) = v110;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x8000) != 0)
  {
LABEL_186:
    int v75 = *((_DWORD *)a2 + 83);
    *((_DWORD *)this + 120) |= 0x8000u;
    *((_DWORD *)this + 83) = v75;
    unsigned int v73 = *((_DWORD *)a2 + 120);
  }
LABEL_187:
  if ((v73 & 0xFF0000) == 0) {
    goto LABEL_201;
  }
  if ((v73 & 0x10000) != 0)
  {
    int v76 = *((_DWORD *)a2 + 84);
    *((_DWORD *)this + 120) |= 0x10000u;
    *((_DWORD *)this + 84) = v76;
    unsigned int v73 = *((_DWORD *)a2 + 120);
  }
  if ((v73 & 0x20000) != 0)
  {
    unsigned int v77 = *((_DWORD *)a2 + 85);
    if (v77 >= 8) {
      awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
    }
    *((_DWORD *)this + 120) |= 0x20000u;
    *((_DWORD *)this + 85) = v77;
    unsigned int v73 = *((_DWORD *)a2 + 120);
  }
  if ((v73 & 0x40000) != 0)
  {
    char v111 = *((unsigned char *)a2 + 344);
    *((_DWORD *)this + 120) |= 0x40000u;
    *((unsigned char *)this + 344) = v111;
    unsigned int v73 = *((_DWORD *)a2 + 120);
    if ((v73 & 0x80000) == 0)
    {
LABEL_195:
      if ((v73 & 0x100000) == 0) {
        goto LABEL_196;
      }
      goto LABEL_276;
    }
  }
  else if ((v73 & 0x80000) == 0)
  {
    goto LABEL_195;
  }
  char v112 = *((unsigned char *)a2 + 345);
  *((_DWORD *)this + 120) |= 0x80000u;
  *((unsigned char *)this + 345) = v112;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x100000) == 0)
  {
LABEL_196:
    if ((v73 & 0x200000) == 0) {
      goto LABEL_197;
    }
    goto LABEL_277;
  }
LABEL_276:
  char v113 = *((unsigned char *)a2 + 346);
  *((_DWORD *)this + 120) |= 0x100000u;
  *((unsigned char *)this + 346) = v113;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x200000) == 0)
  {
LABEL_197:
    if ((v73 & 0x400000) == 0) {
      goto LABEL_199;
    }
    goto LABEL_198;
  }
LABEL_277:
  unsigned int v114 = *((_DWORD *)a2 + 87);
  if (v114 >= 3) {
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 120) |= 0x200000u;
  *((_DWORD *)this + 87) = v114;
  unsigned int v73 = *((_DWORD *)a2 + 120);
  if ((v73 & 0x400000) == 0) {
    goto LABEL_199;
  }
LABEL_198:
  int v78 = *((_DWORD *)a2 + 88);
  *((_DWORD *)this + 120) |= 0x400000u;
  *((_DWORD *)this + 88) = v78;
  unsigned int v73 = *((_DWORD *)a2 + 120);
LABEL_199:
  if ((v73 & 0x800000) != 0)
  {
    int v79 = *((_DWORD *)a2 + 89);
    *((_DWORD *)this + 120) |= 0x800000u;
    *((_DWORD *)this + 89) = v79;
    unsigned int v73 = *((_DWORD *)a2 + 120);
  }
LABEL_201:
  if (HIBYTE(v73))
  {
    if ((v73 & 0x1000000) != 0)
    {
      int v80 = *((_DWORD *)a2 + 90);
      *((_DWORD *)this + 120) |= 0x1000000u;
      *((_DWORD *)this + 90) = v80;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x2000000) != 0)
    {
      unsigned int v81 = *((_DWORD *)a2 + 91);
      if (v81 >= 9) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x2000000u;
      *((_DWORD *)this + 91) = v81;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x4000000) != 0)
    {
      unsigned int v82 = *((_DWORD *)a2 + 92);
      if (v82 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x4000000u;
      *((_DWORD *)this + 92) = v82;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x8000000) != 0)
    {
      unsigned int v83 = *((_DWORD *)a2 + 93);
      if (v83 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x8000000u;
      *((_DWORD *)this + 93) = v83;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x10000000) != 0)
    {
      unsigned int v84 = *((_DWORD *)a2 + 94);
      if (v84 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x10000000u;
      *((_DWORD *)this + 94) = v84;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x20000000) != 0)
    {
      unsigned int v85 = *((_DWORD *)a2 + 95);
      if (v85 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x20000000u;
      *((_DWORD *)this + 95) = v85;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x40000000) != 0)
    {
      unsigned int v86 = *((_DWORD *)a2 + 96);
      if (v86 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x40000000u;
      *((_DWORD *)this + 96) = v86;
      unsigned int v73 = *((_DWORD *)a2 + 120);
    }
    if ((v73 & 0x80000000) != 0)
    {
      unsigned int v87 = *((_DWORD *)a2 + 97);
      if (v87 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 120) |= 0x80000000;
      *((_DWORD *)this + 97) = v87;
    }
  }
  int v88 = *((_DWORD *)a2 + 121);
  if ((_BYTE)v88)
  {
    if (v88)
    {
      unsigned int v89 = *((_DWORD *)a2 + 98);
      if (v89 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 121) |= 1u;
      *((_DWORD *)this + 98) = v89;
      int v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 2) != 0)
    {
      unsigned int v90 = *((_DWORD *)a2 + 99);
      if (v90 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 121) |= 2u;
      *((_DWORD *)this + 99) = v90;
      int v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 4) != 0)
    {
      unsigned int v91 = *((_DWORD *)a2 + 100);
      if (v91 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 121) |= 4u;
      *((_DWORD *)this + 100) = v91;
      int v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 8) != 0)
    {
      unsigned int v92 = *((_DWORD *)a2 + 101);
      if (v92 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 121) |= 8u;
      *((_DWORD *)this + 101) = v92;
      int v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 0x10) != 0)
    {
      unsigned int v93 = *((_DWORD *)a2 + 104);
      if (v93 >= 4) {
        awd::metrics::LocationEmergencySessionStatistics::MergeFrom();
      }
      *((_DWORD *)this + 121) |= 0x10u;
      *((_DWORD *)this + 104) = v93;
      int v88 = *((_DWORD *)a2 + 121);
    }
    if ((v88 & 0x20) != 0)
    {
      v122 = (const std::string *)*((void *)a2 + 51);
      *((_DWORD *)this + 121) |= 0x20u;
      v123 = (std::string *)*((void *)this + 51);
      if (v123 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v123, v122);
      int v88 = *((_DWORD *)a2 + 121);
      if ((v88 & 0x40) == 0)
      {
LABEL_243:
        if ((v88 & 0x80) == 0) {
          goto LABEL_245;
        }
        goto LABEL_244;
      }
    }
    else if ((v88 & 0x40) == 0)
    {
      goto LABEL_243;
    }
    v124 = (const std::string *)*((void *)a2 + 53);
    *((_DWORD *)this + 121) |= 0x40u;
    v125 = (std::string *)*((void *)this + 53);
    if (v125 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v125, v124);
    int v88 = *((_DWORD *)a2 + 121);
    if ((v88 & 0x80) != 0)
    {
LABEL_244:
      int v94 = *((_DWORD *)a2 + 105);
      *((_DWORD *)this + 121) |= 0x80u;
      *((_DWORD *)this + 105) = v94;
      int v88 = *((_DWORD *)a2 + 121);
    }
  }
LABEL_245:
  if ((v88 & 0xFF00) == 0) {
    goto LABEL_255;
  }
  if ((v88 & 0x100) != 0)
  {
    int v115 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 121) |= 0x100u;
    *((_DWORD *)this + 108) = v115;
    int v88 = *((_DWORD *)a2 + 121);
    if ((v88 & 0x200) == 0)
    {
LABEL_248:
      if ((v88 & 0x400) == 0) {
        goto LABEL_249;
      }
      goto LABEL_282;
    }
  }
  else if ((v88 & 0x200) == 0)
  {
    goto LABEL_248;
  }
  int v116 = *((_DWORD *)a2 + 109);
  *((_DWORD *)this + 121) |= 0x200u;
  *((_DWORD *)this + 109) = v116;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x400) == 0)
  {
LABEL_249:
    if ((v88 & 0x800) == 0) {
      goto LABEL_250;
    }
    goto LABEL_283;
  }
LABEL_282:
  int v117 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 121) |= 0x400u;
  *((_DWORD *)this + 110) = v117;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x800) == 0)
  {
LABEL_250:
    if ((v88 & 0x1000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_284;
  }
LABEL_283:
  int v118 = *((_DWORD *)a2 + 111);
  *((_DWORD *)this + 121) |= 0x800u;
  *((_DWORD *)this + 111) = v118;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x1000) == 0)
  {
LABEL_251:
    if ((v88 & 0x2000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_285;
  }
LABEL_284:
  int v119 = *((_DWORD *)a2 + 112);
  *((_DWORD *)this + 121) |= 0x1000u;
  *((_DWORD *)this + 112) = v119;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x2000) == 0)
  {
LABEL_252:
    if ((v88 & 0x4000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_286;
  }
LABEL_285:
  int v120 = *((_DWORD *)a2 + 113);
  *((_DWORD *)this + 121) |= 0x2000u;
  *((_DWORD *)this + 113) = v120;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x4000) == 0)
  {
LABEL_253:
    if ((v88 & 0x8000) == 0) {
      goto LABEL_255;
    }
    goto LABEL_254;
  }
LABEL_286:
  int v121 = *((_DWORD *)a2 + 114);
  *((_DWORD *)this + 121) |= 0x4000u;
  *((_DWORD *)this + 114) = v121;
  int v88 = *((_DWORD *)a2 + 121);
  if ((v88 & 0x8000) != 0)
  {
LABEL_254:
    int v95 = *((_DWORD *)a2 + 115);
    *((_DWORD *)this + 121) |= 0x8000u;
    *((_DWORD *)this + 115) = v95;
    int v88 = *((_DWORD *)a2 + 121);
  }
LABEL_255:
  if ((v88 & 0x10000) != 0)
  {
    int v96 = *((_DWORD *)a2 + 116);
    *((_DWORD *)this + 121) |= 0x10000u;
    *((_DWORD *)this + 116) = v96;
  }
}

void sub_224911F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencySessionStatistics::~LocationEmergencySessionStatistics(awd::metrics::LocationEmergencySessionStatistics *this)
{
  *(void *)this = &unk_26D7BA720;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA720;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA720;
  awd::metrics::LocationEmergencySessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationEmergencySessionStatistics::SharedDtor(void *this)
{
  char v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[35];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x22A61A830](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[36];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x22A61A830](v7, 0x1012C40EC159624);
  }
  uint64_t v9 = v1[51];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (void *)MEMORY[0x22A61A830](v9, 0x1012C40EC159624);
  }
  uint64_t v11 = v1[53];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 468) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::default_instance(awd::metrics::LocationEmergencySessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationEmergencySessionStatistics::default_instance_;
  if (!awd::metrics::LocationEmergencySessionStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencySessionStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationEmergencySessionStatistics::New(awd::metrics::LocationEmergencySessionStatistics *this)
{
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 472);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    unsigned int v1 = *(_DWORD *)(this + 472);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 92) = 0;
    *(_OWORD *)(this + 76) = 0u;
    *(_OWORD *)(this + 60) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_WORD *)(this + 132) = 0;
    *(_DWORD *)(this + 128) = 0;
    *(void *)(this + 104) = 0;
    *(void *)(this + 112) = 0;
    *(void *)(this + 96) = 0;
  }
  if (HIBYTE(v1))
  {
    *(void *)(this + 120) = 0;
    *(unsigned char *)(this + 164) = 0;
    *(void *)(this + 134) = 0;
    *(void *)(this + 150) = 0;
    *(void *)(this + 142) = 0;
    *(_WORD *)(this + 158) = 0;
  }
  unsigned int v3 = *(_DWORD *)(this + 476);
  if ((_BYTE)v3)
  {
    *(_DWORD *)(this + 160) = 0;
    *(void *)(this + 173) = 0;
    *(void *)(this + 165) = 0;
    *(_DWORD *)(this + 180) = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(void *)(this + 184) = 0;
    *(void *)(this + 192) = 0;
    *(void *)(this + 205) = 0;
    *(void *)(this + 200) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_WORD *)(this + 213) = 0;
    *(_OWORD *)(this + 216) = 0u;
    *(_OWORD *)(this + 232) = 0u;
    *(_OWORD *)(this + 244) = 0u;
  }
  if (HIBYTE(v3))
  {
    *(unsigned char *)(this + 215) = 0;
    *(_DWORD *)(this + 276) = 0;
    *(void *)(this + 268) = 0;
    *(void *)(this + 260) = 0;
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t v4 = *(void *)(this + 280);
      if (v4 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_DWORD *)(this + 476) & 0x80000000) != 0)
    {
      uint64_t v8 = *(void *)(this + 288);
      if (v8 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
  }
  unsigned int v5 = *(_DWORD *)(this + 480);
  if ((_BYTE)v5)
  {
    *(_DWORD *)(this + 308) = 0;
    *(void *)(this + 312) = 0;
    *(void *)(this + 296) = 0;
    *(_DWORD *)(this + 303) = 0;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 307) = 0;
    *(void *)(this + 320) = 0;
    *(void *)(this + 328) = 0;
  }
  if ((v5 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 348) = 0;
    *(void *)(this + 352) = 0;
    *(void *)(this + 336) = 0;
    *(_DWORD *)(this + 343) = 0;
  }
  if (HIBYTE(v5))
  {
    *(_OWORD *)(this + 360) = 0u;
    *(_OWORD *)(this + 376) = 0u;
  }
  int v6 = *(_DWORD *)(this + 484);
  if ((_BYTE)v6)
  {
    *(_DWORD *)(this + 416) = 0;
    *(void *)(this + 392) = 0;
    *(void *)(this + 400) = 0;
    if ((v6 & 0x20) != 0)
    {
      uint64_t v7 = *(void *)(this + 408);
      if (v7 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 484) & 0x40) != 0)
    {
      uint64_t v9 = *(void *)(this + 424);
      if (v9 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v9 + 23) < 0)
        {
          **(unsigned char **)uint64_t v9 = 0;
          *(void *)(v9 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v9 = 0;
          *(unsigned char *)(v9 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 420) = 0;
    int v6 = *(_DWORD *)(this + 484);
  }
  if ((v6 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 432) = 0u;
    *(_OWORD *)(this + 448) = 0u;
  }
  if ((v6 & 0xFF0000) != 0) {
    *(_DWORD *)(this + 464) = 0;
  }
  *(void *)(this + 472) = 0;
  *(void *)(this + 480) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::MergePartialFromCodedStream(awd::metrics::LocationEmergencySessionStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)a2 + 8);
  unsigned int v5 = (unint64_t *)((char *)a2 + 16);
  int v6 = (unsigned int *)((char *)this + 52);
  uint64_t v7 = (unint64_t *)((char *)this + 88);
  v347 = (unsigned int *)((char *)this + 168);
  v348 = (unint64_t *)((char *)this + 152);
  v345 = (unsigned int *)((char *)this + 184);
  v346 = (unsigned int *)((char *)this + 180);
  uint64_t v8 = (unsigned int *)((char *)this + 296);
  uint64_t v9 = (unsigned int *)((char *)this + 300);
  v343 = (unint64_t *)((char *)this + 8);
  v344 = (unsigned int *)((char *)this + 320);
  uint64_t v10 = (unsigned int *)((char *)this + 324);
  uint64_t v11 = (unsigned int *)((char *)this + 352);
  while (2)
  {
    int v12 = (char *)*v4;
    if (*v4 >= *v5 || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v15 = (char *)*v4;
        unint64_t v16 = *v5;
        if (*v4 >= *v5 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v343);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*v4;
          unint64_t v16 = *v5;
        }
        else
        {
          unint64_t *v343 = *v15;
          uint64_t v17 = v15 + 1;
          *uint64_t v4 = (unint64_t)v17;
        }
        int v18 = *((_DWORD *)this + 118) | 1;
        *((_DWORD *)this + 118) = v18;
        if ((unint64_t)v17 < v16 && *v17 == 18)
        {
          *uint64_t v4 = (unint64_t)(v17 + 1);
          goto LABEL_1045;
        }
        continue;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_301;
        }
        int v18 = *((_DWORD *)this + 118);
LABEL_1045:
        *((_DWORD *)this + 118) = v18 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        v306 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v306 != 25) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v306 + 1);
LABEL_1051:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 4u;
        v307 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v307 != 33) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v307 + 1);
LABEL_1055:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 8u;
        v308 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v308 != 41) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v308 + 1);
LABEL_1059:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 0x10u;
        v309 = (unsigned char *)*v4;
        unint64_t v20 = *v5;
        if (*v4 >= *v5 || *v309 != 48) {
          continue;
        }
        unsigned int v19 = v309 + 1;
        *uint64_t v4 = (unint64_t)v19;
LABEL_1063:
        v349[0] = 0;
        if ((unint64_t)v19 >= v20 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v310 = v349[0];
          v311 = (unsigned char *)*v4;
          unint64_t v20 = *v5;
        }
        else
        {
          unsigned int v310 = *v19;
          v311 = v19 + 1;
          *uint64_t v4 = (unint64_t)v311;
        }
        *((_DWORD *)this + 12) = v310;
        *((_DWORD *)this + 118) |= 0x20u;
        if ((unint64_t)v311 >= v20 || *v311 != 56) {
          continue;
        }
        int v21 = v311 + 1;
        *uint64_t v4 = (unint64_t)v21;
LABEL_1071:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v312 = (unsigned char *)*v4;
          unint64_t v20 = *v5;
        }
        else
        {
          unsigned int *v6 = *v21;
          v312 = v21 + 1;
          *uint64_t v4 = (unint64_t)v312;
        }
        *((_DWORD *)this + 118) |= 0x40u;
        if ((unint64_t)v312 >= v20 || *v312 != 64) {
          continue;
        }
        unsigned int v22 = v312 + 1;
        *uint64_t v4 = (unint64_t)v22;
LABEL_1079:
        v349[0] = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v313 = v349[0];
        }
        else
        {
          unsigned int v313 = *v22;
          *uint64_t v4 = (unint64_t)(v22 + 1);
        }
        if (v313 <= 0xA)
        {
          *((_DWORD *)this + 118) |= 0x80u;
          *((_DWORD *)this + 14) = v313;
        }
        v314 = (unsigned char *)*v4;
        unint64_t v24 = *v5;
        if (*v4 >= *v5 || *v314 != 72) {
          continue;
        }
        char v23 = v314 + 1;
        *uint64_t v4 = (unint64_t)v23;
LABEL_1089:
        v349[0] = 0;
        if ((unint64_t)v23 >= v24 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v315 = v349[0];
        }
        else
        {
          unsigned int v315 = *v23;
          *uint64_t v4 = (unint64_t)(v23 + 1);
        }
        if (v315 <= 9)
        {
          *((_DWORD *)this + 118) |= 0x100u;
          *((_DWORD *)this + 15) = v315;
        }
        v316 = (unsigned char *)*v4;
        unint64_t v26 = *v5;
        if (*v4 >= *v5 || *v316 != 80) {
          continue;
        }
        unsigned int v25 = v316 + 1;
        *uint64_t v4 = (unint64_t)v25;
LABEL_1099:
        v349[0] = 0;
        if ((unint64_t)v25 >= v26 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v317 = v349[0];
        }
        else
        {
          unsigned int v317 = *v25;
          *uint64_t v4 = (unint64_t)(v25 + 1);
        }
        if (v317 <= 8)
        {
          *((_DWORD *)this + 118) |= 0x200u;
          *((_DWORD *)this + 16) = v317;
        }
        v318 = (unsigned char *)*v4;
        unint64_t v28 = *v5;
        if (*v4 >= *v5 || *v318 != 88) {
          continue;
        }
        char v27 = v318 + 1;
        *uint64_t v4 = (unint64_t)v27;
LABEL_1109:
        v349[0] = 0;
        if ((unint64_t)v27 >= v28 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v319 = v349[0];
        }
        else
        {
          unsigned int v319 = *v27;
          *uint64_t v4 = (unint64_t)(v27 + 1);
        }
        if (v319 <= 0xC)
        {
          *((_DWORD *)this + 118) |= 0x400u;
          *((_DWORD *)this + 17) = v319;
        }
        v320 = (unsigned char *)*v4;
        unint64_t v30 = *v5;
        if (*v4 >= *v5 || *v320 != 104) {
          continue;
        }
        int v29 = v320 + 1;
        *uint64_t v4 = (unint64_t)v29;
LABEL_1119:
        v349[0] = 0;
        if ((unint64_t)v29 >= v30 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v321 = v349[0];
          v322 = (unsigned char *)*v4;
          unint64_t v30 = *v5;
        }
        else
        {
          unsigned int v321 = *v29;
          v322 = v29 + 1;
          *uint64_t v4 = (unint64_t)v322;
        }
        *((_DWORD *)this + 18) = v321;
        *((_DWORD *)this + 118) |= 0x800u;
        if ((unint64_t)v322 >= v30 || *v322 != 112) {
          continue;
        }
        int v31 = v322 + 1;
        *uint64_t v4 = (unint64_t)v31;
LABEL_1127:
        v349[0] = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v323 = v349[0];
          v324 = (unsigned char *)*v4;
          unint64_t v30 = *v5;
        }
        else
        {
          unsigned int v323 = *v31;
          v324 = v31 + 1;
          *uint64_t v4 = (unint64_t)v324;
        }
        *((_DWORD *)this + 19) = v323;
        *((_DWORD *)this + 118) |= 0x1000u;
        if ((unint64_t)v324 >= v30 || *v324 != 120) {
          continue;
        }
        int v32 = v324 + 1;
        *uint64_t v4 = (unint64_t)v32;
LABEL_1135:
        v349[0] = 0;
        if ((unint64_t)v32 >= v30 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v325 = v349[0];
          unint64_t v30 = *v5;
          v326 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v325 = *v32;
          v326 = v32 + 1;
          *uint64_t v4 = (unint64_t)v326;
        }
        *((_DWORD *)this + 20) = v325;
        *((_DWORD *)this + 118) |= 0x2000u;
        if ((int)v30 - (int)v326 < 2 || *v326 != 128 || v326[1] != 1) {
          continue;
        }
        int v33 = v326 + 2;
        *uint64_t v4 = (unint64_t)v33;
LABEL_1144:
        v349[0] = 0;
        if ((unint64_t)v33 >= v30 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v327 = v349[0];
          unint64_t v30 = *v5;
          v328 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v327 = *v33;
          v328 = v33 + 1;
          *uint64_t v4 = (unint64_t)v328;
        }
        *((_DWORD *)this + 21) = v327;
        *((_DWORD *)this + 118) |= 0x4000u;
        if ((int)v30 - (int)v328 < 2 || *v328 != 136 || v328[1] != 1) {
          continue;
        }
        char v34 = v328 + 2;
        *uint64_t v4 = (unint64_t)v34;
LABEL_1153:
        if ((unint64_t)v34 >= v30 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unint64_t v30 = *v5;
          v329 = (unsigned __int8 *)*v4;
        }
        else
        {
          *uint64_t v7 = *v34;
          v329 = v34 + 1;
          *uint64_t v4 = (unint64_t)v329;
        }
        *((_DWORD *)this + 118) |= 0x8000u;
        if ((int)v30 - (int)v329 < 2 || *v329 != 145 || v329[1] != 1) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v329 + 2);
LABEL_1162:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 0x10000u;
        unint64_t v36 = *v5;
        v330 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v330 != 152 || v330[1] != 1) {
          continue;
        }
        int v35 = (char *)(v330 + 2);
        *uint64_t v4 = (unint64_t)v35;
LABEL_1167:
        v349[0] = 0;
        if ((unint64_t)v35 >= v36 || *v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v331 = v349[0];
        }
        else
        {
          unsigned int v331 = *v35;
          *uint64_t v4 = (unint64_t)(v35 + 1);
        }
        if (v331 <= 3)
        {
          *((_DWORD *)this + 118) |= 0x20000u;
          *((_DWORD *)this + 26) = v331;
        }
        v332 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v332 != 165 || v332[1] != 1) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v332 + 2);
LABEL_1178:
        v349[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v349) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 27) = v349[0];
        *((_DWORD *)this + 118) |= 0x40000u;
        v333 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v333 != 173 || v333[1] != 1) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v333 + 2);
LABEL_1183:
        v349[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v349) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 28) = v349[0];
        *((_DWORD *)this + 118) |= 0x80000u;
        unint64_t v38 = *v5;
        v334 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v334 != 176 || v334[1] != 1) {
          continue;
        }
        int v37 = (char *)(v334 + 2);
        *uint64_t v4 = (unint64_t)v37;
LABEL_1188:
        v349[0] = 0;
        if ((unint64_t)v37 >= v38 || *v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v335 = v349[0];
        }
        else
        {
          unsigned int v335 = *v37;
          *uint64_t v4 = (unint64_t)(v37 + 1);
        }
        if (v335 <= 0x23)
        {
          *((_DWORD *)this + 118) |= 0x100000u;
          *((_DWORD *)this + 29) = v335;
        }
        unint64_t v40 = *v5;
        v336 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v336 != 184 || v336[1] != 1) {
          continue;
        }
        int v39 = v336 + 2;
        *uint64_t v4 = (unint64_t)v39;
LABEL_1199:
        v349[0] = 0;
        if ((unint64_t)v39 >= v40 || (char)*v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v337 = v349[0];
          unint64_t v40 = *v5;
          v338 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v337 = *v39;
          v338 = v39 + 1;
          *uint64_t v4 = (unint64_t)v338;
        }
        *((unsigned char *)this + 132) = v337 != 0;
        *((_DWORD *)this + 118) |= 0x200000u;
        if ((int)v40 - (int)v338 < 2 || *v338 != 192 || v338[1] != 1) {
          continue;
        }
        unsigned int v41 = v338 + 2;
        *uint64_t v4 = (unint64_t)v41;
LABEL_1208:
        v349[0] = 0;
        if ((unint64_t)v41 >= v40 || (char)*v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v339 = v349[0];
          unint64_t v40 = *v5;
          v340 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v339 = *v41;
          v340 = v41 + 1;
          *uint64_t v4 = (unint64_t)v340;
        }
        *((unsigned char *)this + 133) = v339 != 0;
        *((_DWORD *)this + 118) |= 0x400000u;
        if ((int)v40 - (int)v340 < 2 || *v340 != 200 || v340[1] != 1) {
          continue;
        }
        int v42 = (char *)(v340 + 2);
        *uint64_t v4 = (unint64_t)v42;
LABEL_1217:
        v349[0] = 0;
        if ((unint64_t)v42 >= v40 || *v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v341 = v349[0];
        }
        else
        {
          unsigned int v341 = *v42;
          *uint64_t v4 = (unint64_t)(v42 + 1);
        }
        if (v341 <= 2)
        {
          *((_DWORD *)this + 118) |= 0x800000u;
          *((_DWORD *)this + 32) = v341;
        }
        v342 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v342 != 209 || v342[1] != 1) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v342 + 2);
LABEL_60:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 15) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 0x1000000u;
        char v43 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v43 != 217 || v43[1] != 1) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v43 + 2);
LABEL_66:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 17) = *(void *)v349;
        }
        *((_DWORD *)this + 118) |= 0x2000000u;
        unint64_t v44 = *v5;
        int v45 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v45 != 224 || v45[1] != 1) {
          continue;
        }
        int v46 = v45 + 2;
        *uint64_t v4 = (unint64_t)v46;
LABEL_73:
        v349[0] = 0;
        if ((unint64_t)v46 >= v44 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v47 = v349[0];
          unint64_t v44 = *v5;
          char v48 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v47 = *v46;
          char v48 = v46 + 1;
          *uint64_t v4 = (unint64_t)v48;
        }
        *((_DWORD *)this + 36) = v47;
        *((_DWORD *)this + 118) |= 0x4000000u;
        if ((int)v44 - (int)v48 < 2 || *v48 != 232 || v48[1] != 1) {
          continue;
        }
        uint64_t v49 = v48 + 2;
        *uint64_t v4 = (unint64_t)v49;
LABEL_322:
        v349[0] = 0;
        if ((unint64_t)v49 >= v44 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v166 = v349[0];
          unint64_t v44 = *v5;
          v167 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v166 = *v49;
          v167 = v49 + 1;
          *uint64_t v4 = (unint64_t)v167;
        }
        *((_DWORD *)this + 37) = v166;
        *((_DWORD *)this + 118) |= 0x8000000u;
        if ((int)v44 - (int)v167 < 2 || *v167 != 240 || v167[1] != 1) {
          continue;
        }
        uint64_t v50 = v167 + 2;
        *uint64_t v4 = (unint64_t)v50;
LABEL_363:
        v349[0] = 0;
        if ((unint64_t)v50 >= v44 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v175 = v349[0];
          unint64_t v44 = *v5;
          v176 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v175 = *v50;
          v176 = v50 + 1;
          *uint64_t v4 = (unint64_t)v176;
        }
        *((unsigned char *)this + 134) = v175 != 0;
        *((_DWORD *)this + 118) |= 0x10000000u;
        if ((int)v44 - (int)v176 < 2 || *v176 != 248 || v176[1] != 1) {
          continue;
        }
        uint64_t v51 = v176 + 2;
        *uint64_t v4 = (unint64_t)v51;
LABEL_399:
        v349[0] = 0;
        if ((unint64_t)v51 >= v44 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v182 = v349[0];
          unint64_t v44 = *v5;
          v183 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v182 = *v51;
          v183 = v51 + 1;
          *uint64_t v4 = (unint64_t)v183;
        }
        *((unsigned char *)this + 135) = v182 != 0;
        *((_DWORD *)this + 118) |= 0x20000000u;
        if ((int)v44 - (int)v183 < 2 || *v183 != 128 || v183[1] != 2) {
          continue;
        }
        uint64_t v52 = v183 + 2;
        *uint64_t v4 = (unint64_t)v52;
LABEL_437:
        v349[0] = 0;
        if ((unint64_t)v52 >= v44 || (char)*v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v190 = v349[0];
          unint64_t v44 = *v5;
          v191 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v190 = *v52;
          v191 = v52 + 1;
          *uint64_t v4 = (unint64_t)v191;
        }
        *((unsigned char *)this + 164) = v190 != 0;
        *((_DWORD *)this + 118) |= 0x40000000u;
        if ((int)v44 - (int)v191 < 2 || *v191 != 136 || v191[1] != 2) {
          continue;
        }
        uint64_t v53 = v191 + 2;
        *uint64_t v4 = (unint64_t)v53;
LABEL_475:
        if ((unint64_t)v53 >= v44 || (char)*v53 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v348);
          if (!result) {
            return result;
          }
          unint64_t v44 = *v5;
          v198 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v348 = *v53;
          v198 = v53 + 1;
          *uint64_t v4 = (unint64_t)v198;
        }
        *((_DWORD *)this + 118) |= 0x80000000;
        if ((int)v44 - (int)v198 < 2 || *v198 != 144 || v198[1] != 2) {
          continue;
        }
        unsigned int v54 = v198 + 2;
        *uint64_t v4 = (unint64_t)v54;
LABEL_513:
        v349[0] = 0;
        if ((unint64_t)v54 >= v44 || (char)*v54 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v206 = v349[0];
          unint64_t v44 = *v5;
          v207 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v206 = *v54;
          v207 = v54 + 1;
          *uint64_t v4 = (unint64_t)v207;
        }
        *((unsigned char *)this + 165) = v206 != 0;
        *((_DWORD *)this + 119) |= 1u;
        if ((int)v44 - (int)v207 < 2 || *v207 != 152 || v207[1] != 2) {
          continue;
        }
        unsigned int v55 = (char *)(v207 + 2);
        *uint64_t v4 = (unint64_t)v55;
LABEL_546:
        v349[0] = 0;
        if ((unint64_t)v55 >= v44 || *v55 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v212 = v349[0];
        }
        else
        {
          unsigned int v212 = *v55;
          *uint64_t v4 = (unint64_t)(v55 + 1);
        }
        if (v212 <= 4)
        {
          *((_DWORD *)this + 119) |= 2u;
          *((_DWORD *)this + 40) = v212;
        }
        unint64_t v57 = *v5;
        v217 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v217 != 160 || v217[1] != 2) {
          continue;
        }
        char v56 = v217 + 2;
        *uint64_t v4 = (unint64_t)v56;
LABEL_575:
        if ((unint64_t)v56 >= v57 || (char)*v56 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v347);
          if (!result) {
            return result;
          }
          unint64_t v57 = *v5;
          v218 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v347 = *v56;
          v218 = v56 + 1;
          *uint64_t v4 = (unint64_t)v218;
        }
        *((_DWORD *)this + 119) |= 4u;
        if ((int)v57 - (int)v218 < 2 || *v218 != 168 || v218[1] != 2) {
          continue;
        }
        unsigned int v58 = v218 + 2;
        *uint64_t v4 = (unint64_t)v58;
LABEL_602:
        v349[0] = 0;
        if ((unint64_t)v58 >= v57 || (char)*v58 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v222 = v349[0];
          unint64_t v57 = *v5;
          v223 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v222 = *v58;
          v223 = v58 + 1;
          *uint64_t v4 = (unint64_t)v223;
        }
        *((unsigned char *)this + 166) = v222 != 0;
        *((_DWORD *)this + 119) |= 8u;
        if ((int)v57 - (int)v223 < 2 || *v223 != 176 || v223[1] != 2) {
          continue;
        }
        unsigned int v59 = v223 + 2;
        *uint64_t v4 = (unint64_t)v59;
LABEL_629:
        v349[0] = 0;
        if ((unint64_t)v59 >= v57 || (char)*v59 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v227 = v349[0];
          unint64_t v57 = *v5;
          v228 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v227 = *v59;
          v228 = v59 + 1;
          *uint64_t v4 = (unint64_t)v228;
        }
        *((unsigned char *)this + 167) = v227 != 0;
        *((_DWORD *)this + 119) |= 0x10u;
        if ((int)v57 - (int)v228 < 2 || *v228 != 184 || v228[1] != 2) {
          continue;
        }
        uint64_t v60 = v228 + 2;
        *uint64_t v4 = (unint64_t)v60;
LABEL_653:
        v349[0] = 0;
        if ((unint64_t)v60 >= v57 || (char)*v60 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v231 = v349[0];
          unint64_t v57 = *v5;
          v232 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v231 = *v60;
          v232 = v60 + 1;
          *uint64_t v4 = (unint64_t)v232;
        }
        *((_DWORD *)this + 43) = v231;
        *((_DWORD *)this + 119) |= 0x20u;
        if ((int)v57 - (int)v232 < 2 || *v232 != 192 || v232[1] != 2) {
          continue;
        }
        uint64_t v61 = v232 + 2;
        *uint64_t v4 = (unint64_t)v61;
LABEL_671:
        v349[0] = 0;
        if ((unint64_t)v61 >= v57 || (char)*v61 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v235 = v349[0];
          unint64_t v57 = *v5;
          v236 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v235 = *v61;
          v236 = v61 + 1;
          *uint64_t v4 = (unint64_t)v236;
        }
        *((_DWORD *)this + 44) = v235;
        *((_DWORD *)this + 119) |= 0x40u;
        if ((int)v57 - (int)v236 < 2 || *v236 != 200 || v236[1] != 2) {
          continue;
        }
        int v62 = v236 + 2;
        *uint64_t v4 = (unint64_t)v62;
LABEL_689:
        if ((unint64_t)v62 >= v57 || (char)*v62 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v346);
          if (!result) {
            return result;
          }
          unint64_t v57 = *v5;
          v239 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v346 = *v62;
          v239 = v62 + 1;
          *uint64_t v4 = (unint64_t)v239;
        }
        *((_DWORD *)this + 119) |= 0x80u;
        if ((int)v57 - (int)v239 < 2 || *v239 != 208 || v239[1] != 2) {
          continue;
        }
        int v63 = v239 + 2;
        *uint64_t v4 = (unint64_t)v63;
LABEL_707:
        v349[0] = 0;
        if ((unint64_t)v63 >= v57 || (char)*v63 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v242 = v349[0];
          unint64_t v57 = *v5;
          v243 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v242 = *v63;
          v243 = v63 + 1;
          *uint64_t v4 = (unint64_t)v243;
        }
        *((unsigned char *)this + 212) = v242 != 0;
        *((_DWORD *)this + 119) |= 0x100u;
        if ((int)v57 - (int)v243 < 2 || *v243 != 216 || v243[1] != 2) {
          continue;
        }
        char v64 = v243 + 2;
        *uint64_t v4 = (unint64_t)v64;
LABEL_725:
        if ((unint64_t)v64 >= v57 || (char)*v64 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v345);
          if (!result) {
            return result;
          }
          unint64_t v57 = *v5;
          v246 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v345 = *v64;
          v246 = v64 + 1;
          *uint64_t v4 = (unint64_t)v246;
        }
        *((_DWORD *)this + 119) |= 0x200u;
        if ((int)v57 - (int)v246 < 2 || *v246 != 224 || v246[1] != 2) {
          continue;
        }
        char v65 = v246 + 2;
        *uint64_t v4 = (unint64_t)v65;
LABEL_743:
        v349[0] = 0;
        if ((unint64_t)v65 >= v57 || (char)*v65 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v249 = v349[0];
          unint64_t v57 = *v5;
          v250 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v249 = *v65;
          v250 = v65 + 1;
          *uint64_t v4 = (unint64_t)v250;
        }
        *((_DWORD *)this + 47) = v249;
        *((_DWORD *)this + 119) |= 0x400u;
        if ((int)v57 - (int)v250 < 2 || *v250 != 232 || v250[1] != 2) {
          continue;
        }
        char v66 = v250 + 2;
        *uint64_t v4 = (unint64_t)v66;
LABEL_761:
        v349[0] = 0;
        if ((unint64_t)v66 >= v57 || (char)*v66 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v253 = v349[0];
          unint64_t v57 = *v5;
          v254 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v253 = *v66;
          v254 = v66 + 1;
          *uint64_t v4 = (unint64_t)v254;
        }
        *((_DWORD *)this + 48) = v253;
        *((_DWORD *)this + 119) |= 0x800u;
        if ((int)v57 - (int)v254 < 2 || *v254 != 240 || v254[1] != 2) {
          continue;
        }
        uint64_t v67 = v254 + 2;
        *uint64_t v4 = (unint64_t)v67;
LABEL_779:
        v349[0] = 0;
        if ((unint64_t)v67 >= v57 || (char)*v67 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v256 = v349[0];
          unint64_t v57 = *v5;
          v257 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v256 = *v67;
          v257 = v67 + 1;
          *uint64_t v4 = (unint64_t)v257;
        }
        *((_DWORD *)this + 49) = v256;
        *((_DWORD *)this + 119) |= 0x1000u;
        if ((int)v57 - (int)v257 < 2 || *v257 != 248 || v257[1] != 2) {
          continue;
        }
        int v68 = v257 + 2;
        *uint64_t v4 = (unint64_t)v68;
LABEL_799:
        v349[0] = 0;
        if ((unint64_t)v68 >= v57 || (char)*v68 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v261 = v349[0];
          unint64_t v57 = *v5;
          v262 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v261 = *v68;
          v262 = v68 + 1;
          *uint64_t v4 = (unint64_t)v262;
        }
        *((_DWORD *)this + 50) = v261;
        *((_DWORD *)this + 119) |= 0x2000u;
        if ((int)v57 - (int)v262 < 2 || *v262 != 128 || v262[1] != 3) {
          continue;
        }
        v69 = v262 + 2;
        *uint64_t v4 = (unint64_t)v69;
LABEL_817:
        v349[0] = 0;
        if ((unint64_t)v69 >= v57 || (char)*v69 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v265 = v349[0];
          unint64_t v57 = *v5;
          v266 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v265 = *v69;
          v266 = v69 + 1;
          *uint64_t v4 = (unint64_t)v266;
        }
        *((_DWORD *)this + 51) = v265;
        *((_DWORD *)this + 119) |= 0x4000u;
        if ((int)v57 - (int)v266 < 2 || *v266 != 136 || v266[1] != 3) {
          continue;
        }
        unsigned int v70 = (char *)(v266 + 2);
        *uint64_t v4 = (unint64_t)v70;
LABEL_835:
        v349[0] = 0;
        if ((unint64_t)v70 >= v57 || *v70 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v269 = v349[0];
        }
        else
        {
          unsigned int v269 = *v70;
          *uint64_t v4 = (unint64_t)(v70 + 1);
        }
        if (v269 <= 4)
        {
          *((_DWORD *)this + 119) |= 0x8000u;
          *((_DWORD *)this + 52) = v269;
        }
        unint64_t v72 = *v5;
        v271 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v271 != 144 || v271[1] != 3) {
          continue;
        }
        v71 = v271 + 2;
        *uint64_t v4 = (unint64_t)v71;
LABEL_855:
        v349[0] = 0;
        if ((unint64_t)v71 >= v72 || (char)*v71 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v272 = v349[0];
          unint64_t v72 = *v5;
          v273 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v272 = *v71;
          v273 = v71 + 1;
          *uint64_t v4 = (unint64_t)v273;
        }
        *((unsigned char *)this + 213) = v272 != 0;
        *((_DWORD *)this + 119) |= 0x10000u;
        if ((int)v72 - (int)v273 < 2 || *v273 != 152 || v273[1] != 3) {
          continue;
        }
        unsigned int v73 = v273 + 2;
        *uint64_t v4 = (unint64_t)v73;
LABEL_875:
        v349[0] = 0;
        if ((unint64_t)v73 >= v72 || (char)*v73 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          unsigned int v276 = v349[0];
          unint64_t v72 = *v5;
          v277 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v276 = *v73;
          v277 = v73 + 1;
          *uint64_t v4 = (unint64_t)v277;
        }
        *((unsigned char *)this + 214) = v276 != 0;
        *((_DWORD *)this + 119) |= 0x20000u;
        if ((int)v72 - (int)v277 < 2 || *v277 != 161 || v277[1] != 3) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v277 + 2);
LABEL_123:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 27) = *(void *)v349;
        }
        *((_DWORD *)this + 119) |= 0x40000u;
        int v74 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v74 != 169 || v74[1] != 3) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v74 + 2);
LABEL_129:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 28) = *(void *)v349;
        }
        *((_DWORD *)this + 119) |= 0x80000u;
        int v75 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v75 != 177 || v75[1] != 3) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v75 + 2);
LABEL_135:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 29) = *(void *)v349;
        }
        *((_DWORD *)this + 119) |= 0x100000u;
        int v76 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v76 != 185 || v76[1] != 3) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v76 + 2);
LABEL_141:
        *(void *)v349 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349) & 1) == 0)return 0; {
        *((void *)this + 30) = *(void *)v349;
        }
        *((_DWORD *)this + 119) |= 0x200000u;
        unsigned int v77 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v77 != 193 || v77[1] != 3) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v77 + 2);
LABEL_147:
        *(void *)v349 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v349))
        {
          *((void *)this + 31) = *(void *)v349;
          *((_DWORD *)this + 119) |= 0x400000u;
          unint64_t v78 = *v5;
          int v79 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) >= 2 && *v79 == 200 && v79[1] == 3)
          {
            int v80 = (char *)(v79 + 2);
            *uint64_t v4 = (unint64_t)v80;
LABEL_154:
            v349[0] = 0;
            if ((unint64_t)v80 >= v78 || *v80 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
              if (!result) {
                return result;
              }
              unsigned int v81 = v349[0];
            }
            else
            {
              unsigned int v81 = *v80;
              *uint64_t v4 = (unint64_t)(v80 + 1);
            }
            if (v81 <= 2)
            {
              *((_DWORD *)this + 119) |= 0x800000u;
              *((_DWORD *)this + 64) = v81;
            }
            unint64_t v83 = *v5;
            v164 = (unsigned __int8 *)*v4;
            if ((int)(*v5 - *v4) >= 2 && *v164 == 208 && v164[1] == 3)
            {
              unsigned int v82 = (char *)(v164 + 2);
              *uint64_t v4 = (unint64_t)v82;
LABEL_313:
              v349[0] = 0;
              if ((unint64_t)v82 >= v83 || *v82 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                if (!result) {
                  return result;
                }
                unsigned int v165 = v349[0];
              }
              else
              {
                unsigned int v165 = *v82;
                *uint64_t v4 = (unint64_t)(v82 + 1);
              }
              if (v165 <= 7 && v165 != 5) {
                awd::metrics::LocationEmergencySessionStatistics::set_envtype((uint64_t)this, v165);
              }
              unint64_t v85 = *v5;
              v172 = (unsigned __int8 *)*v4;
              if ((int)(*v5 - *v4) >= 2 && *v172 == 216 && v172[1] == 3)
              {
                unsigned int v84 = v172 + 2;
                *uint64_t v4 = (unint64_t)v84;
LABEL_354:
                v349[0] = 0;
                if ((unint64_t)v84 >= v85 || (char)*v84 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                  if (!result) {
                    return result;
                  }
                  unsigned int v173 = v349[0];
                  unint64_t v85 = *v5;
                  v174 = (unsigned __int8 *)*v4;
                }
                else
                {
                  unsigned int v173 = *v84;
                  v174 = v84 + 1;
                  *uint64_t v4 = (unint64_t)v174;
                }
                *((unsigned char *)this + 215) = v173 != 0;
                *((_DWORD *)this + 119) |= 0x2000000u;
                if ((int)v85 - (int)v174 >= 2 && *v174 == 224 && v174[1] == 3)
                {
                  unsigned int v86 = (char *)(v174 + 2);
                  *uint64_t v4 = (unint64_t)v86;
LABEL_390:
                  v349[0] = 0;
                  if ((unint64_t)v86 >= v85 || *v86 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                    if (!result) {
                      return result;
                    }
                    unsigned int v181 = v349[0];
                  }
                  else
                  {
                    unsigned int v181 = *v86;
                    *uint64_t v4 = (unint64_t)(v86 + 1);
                  }
                  if (v181 <= 0xB)
                  {
                    *((_DWORD *)this + 119) |= 0x4000000u;
                    *((_DWORD *)this + 66) = v181;
                  }
                  unint64_t v88 = *v5;
                  v188 = (unsigned __int8 *)*v4;
                  if ((int)(*v5 - *v4) >= 2 && *v188 == 232 && v188[1] == 3)
                  {
                    unsigned int v87 = (char *)(v188 + 2);
                    *uint64_t v4 = (unint64_t)v87;
LABEL_428:
                    v349[0] = 0;
                    if ((unint64_t)v87 >= v88 || *v87 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                      if (!result) {
                        return result;
                      }
                      unsigned int v189 = v349[0];
                    }
                    else
                    {
                      unsigned int v189 = *v87;
                      *uint64_t v4 = (unint64_t)(v87 + 1);
                    }
                    if (v189 <= 9)
                    {
                      *((_DWORD *)this + 119) |= 0x8000000u;
                      *((_DWORD *)this + 67) = v189;
                    }
                    unint64_t v90 = *v5;
                    v196 = (unsigned __int8 *)*v4;
                    if ((int)(*v5 - *v4) >= 2 && *v196 == 240 && v196[1] == 3)
                    {
                      unsigned int v89 = (char *)(v196 + 2);
                      *uint64_t v4 = (unint64_t)v89;
LABEL_466:
                      v349[0] = 0;
                      if ((unint64_t)v89 >= v90 || *v89 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                        if (!result) {
                          return result;
                        }
                        unsigned int v197 = v349[0];
                      }
                      else
                      {
                        unsigned int v197 = *v89;
                        *uint64_t v4 = (unint64_t)(v89 + 1);
                      }
                      if (v197 <= 2)
                      {
                        *((_DWORD *)this + 119) |= 0x10000000u;
                        *((_DWORD *)this + 68) = v197;
                      }
                      unint64_t v92 = *v5;
                      v203 = (unsigned __int8 *)*v4;
                      if ((int)(*v5 - *v4) >= 2 && *v203 == 248 && v203[1] == 3)
                      {
                        unsigned int v91 = v203 + 2;
                        *uint64_t v4 = (unint64_t)v91;
LABEL_504:
                        v349[0] = 0;
                        if ((unint64_t)v91 >= v92 || (char)*v91 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                          if (!result) {
                            return result;
                          }
                          unsigned int v204 = v349[0];
                          unint64_t v92 = *v5;
                          v205 = (unsigned __int8 *)*v4;
                        }
                        else
                        {
                          unsigned int v204 = *v91;
                          v205 = v91 + 1;
                          *uint64_t v4 = (unint64_t)v205;
                        }
                        *((_DWORD *)this + 69) = v204;
                        int v93 = *((_DWORD *)this + 119) | 0x20000000;
                        *((_DWORD *)this + 119) = v93;
                        if ((int)v92 - (int)v205 >= 2 && *v205 == 130 && v205[1] == 4)
                        {
                          *uint64_t v4 = (unint64_t)(v205 + 2);
LABEL_171:
                          *((_DWORD *)this + 119) = v93 | 0x40000000;
                          if (*((void *)this + 35) == MEMORY[0x263F8C740]) {
                            operator new();
                          }
                          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                          if (!result) {
                            return result;
                          }
                          int v95 = (unsigned __int8 *)*v4;
                          if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v95 == 138 && v95[1] == 4)
                          {
                            *uint64_t v4 = (unint64_t)(v95 + 2);
LABEL_179:
                            *((_DWORD *)this + 119) |= 0x80000000;
                            if (*((void *)this + 36) == MEMORY[0x263F8C740]) {
                              operator new();
                            }
                            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                            if (!result) {
                              return result;
                            }
                            unint64_t v96 = *v5;
                            int v97 = (unsigned __int8 *)*v4;
                            if ((int)(*v5 - *v4) >= 2 && *v97 == 144 && v97[1] == 4)
                            {
                              int v98 = v97 + 2;
                              *uint64_t v4 = (unint64_t)v98;
LABEL_188:
                              if ((unint64_t)v98 >= v96 || (char)*v98 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                                if (!result) {
                                  return result;
                                }
                                unint64_t v96 = *v5;
                                char v99 = (unsigned __int8 *)*v4;
                              }
                              else
                              {
                                *uint64_t v8 = *v98;
                                char v99 = v98 + 1;
                                *uint64_t v4 = (unint64_t)v99;
                              }
                              *((_DWORD *)this + 120) |= 1u;
                              if ((int)v96 - (int)v99 >= 2 && *v99 == 152 && v99[1] == 4)
                              {
                                char v100 = v99 + 2;
                                *uint64_t v4 = (unint64_t)v100;
LABEL_331:
                                if ((unint64_t)v100 >= v96 || (char)*v100 < 0)
                                {
                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                                  if (!result) {
                                    return result;
                                  }
                                  unint64_t v96 = *v5;
                                  v168 = (unsigned __int8 *)*v4;
                                }
                                else
                                {
                                  unsigned int *v9 = *v100;
                                  v168 = v100 + 1;
                                  *uint64_t v4 = (unint64_t)v168;
                                }
                                *((_DWORD *)this + 120) |= 2u;
                                if ((int)v96 - (int)v168 >= 2 && *v168 == 160 && v168[1] == 4)
                                {
                                  char v101 = v168 + 2;
                                  *uint64_t v4 = (unint64_t)v101;
LABEL_372:
                                  v349[0] = 0;
                                  if ((unint64_t)v101 >= v96 || (char)*v101 < 0)
                                  {
                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                    if (!result) {
                                      return result;
                                    }
                                    unsigned int v177 = v349[0];
                                    unint64_t v96 = *v5;
                                    v178 = (unsigned __int8 *)*v4;
                                  }
                                  else
                                  {
                                    unsigned int v177 = *v101;
                                    v178 = v101 + 1;
                                    *uint64_t v4 = (unint64_t)v178;
                                  }
                                  *((unsigned char *)this + 304) = v177 != 0;
                                  *((_DWORD *)this + 120) |= 4u;
                                  if ((int)v96 - (int)v178 >= 2 && *v178 == 168 && v178[1] == 4)
                                  {
                                    int v102 = v178 + 2;
                                    *uint64_t v4 = (unint64_t)v102;
LABEL_408:
                                    v349[0] = 0;
                                    if ((unint64_t)v102 >= v96 || (char)*v102 < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                      if (!result) {
                                        return result;
                                      }
                                      unsigned int v184 = v349[0];
                                      unint64_t v96 = *v5;
                                      v185 = (unsigned __int8 *)*v4;
                                    }
                                    else
                                    {
                                      unsigned int v184 = *v102;
                                      v185 = v102 + 1;
                                      *uint64_t v4 = (unint64_t)v185;
                                    }
                                    *((unsigned char *)this + 305) = v184 != 0;
                                    *((_DWORD *)this + 120) |= 8u;
                                    if ((int)v96 - (int)v185 >= 2 && *v185 == 176 && v185[1] == 4)
                                    {
                                      int v103 = v185 + 2;
                                      *uint64_t v4 = (unint64_t)v103;
LABEL_446:
                                      v349[0] = 0;
                                      if ((unint64_t)v103 >= v96 || (char)*v103 < 0)
                                      {
                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                        if (!result) {
                                          return result;
                                        }
                                        unsigned int v192 = v349[0];
                                        unint64_t v96 = *v5;
                                        v193 = (unsigned __int8 *)*v4;
                                      }
                                      else
                                      {
                                        unsigned int v192 = *v103;
                                        v193 = v103 + 1;
                                        *uint64_t v4 = (unint64_t)v193;
                                      }
                                      *((unsigned char *)this + 306) = v192 != 0;
                                      *((_DWORD *)this + 120) |= 0x10u;
                                      if ((int)v96 - (int)v193 >= 2 && *v193 == 184 && v193[1] == 4)
                                      {
                                        int v104 = v193 + 2;
                                        *uint64_t v4 = (unint64_t)v104;
LABEL_484:
                                        v349[0] = 0;
                                        if ((unint64_t)v104 >= v96 || (char)*v104 < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                          if (!result) {
                                            return result;
                                          }
                                          unsigned int v199 = v349[0];
                                          unint64_t v96 = *v5;
                                          v200 = (unsigned __int8 *)*v4;
                                        }
                                        else
                                        {
                                          unsigned int v199 = *v104;
                                          v200 = v104 + 1;
                                          *uint64_t v4 = (unint64_t)v200;
                                        }
                                        *((_DWORD *)this + 77) = v199;
                                        *((_DWORD *)this + 120) |= 0x20u;
                                        if ((int)v96 - (int)v200 >= 2 && *v200 == 192 && v200[1] == 4)
                                        {
                                          int v105 = v200 + 2;
                                          *uint64_t v4 = (unint64_t)v105;
LABEL_522:
                                          v349[0] = 0;
                                          if ((unint64_t)v105 >= v96 || (char)*v105 < 0)
                                          {
                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                            if (!result) {
                                              return result;
                                            }
                                            unsigned int v208 = v349[0];
                                            unint64_t v96 = *v5;
                                            v209 = (unsigned __int8 *)*v4;
                                          }
                                          else
                                          {
                                            unsigned int v208 = *v105;
                                            v209 = v105 + 1;
                                            *uint64_t v4 = (unint64_t)v209;
                                          }
                                          *((_DWORD *)this + 78) = v208;
                                          *((_DWORD *)this + 120) |= 0x40u;
                                          if ((int)v96 - (int)v209 >= 2 && *v209 == 200 && v209[1] == 4)
                                          {
                                            char v106 = v209 + 2;
                                            *uint64_t v4 = (unint64_t)v106;
LABEL_555:
                                            v349[0] = 0;
                                            if ((unint64_t)v106 >= v96 || (char)*v106 < 0)
                                            {
                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                              if (!result) {
                                                return result;
                                              }
                                              unsigned int v213 = v349[0];
                                              unint64_t v96 = *v5;
                                              v214 = (unsigned __int8 *)*v4;
                                            }
                                            else
                                            {
                                              unsigned int v213 = *v106;
                                              v214 = v106 + 1;
                                              *uint64_t v4 = (unint64_t)v214;
                                            }
                                            *((_DWORD *)this + 79) = v213;
                                            *((_DWORD *)this + 120) |= 0x80u;
                                            if ((int)v96 - (int)v214 >= 2 && *v214 == 208 && v214[1] == 4)
                                            {
                                              char v107 = v214 + 2;
                                              *uint64_t v4 = (unint64_t)v107;
LABEL_584:
                                              if ((unint64_t)v107 >= v96 || (char)*v107 < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v344);
                                                if (!result) {
                                                  return result;
                                                }
                                                unint64_t v96 = *v5;
                                                v219 = (unsigned __int8 *)*v4;
                                              }
                                              else
                                              {
                                                unsigned int *v344 = *v107;
                                                v219 = v107 + 1;
                                                *uint64_t v4 = (unint64_t)v219;
                                              }
                                              *((_DWORD *)this + 120) |= 0x100u;
                                              if ((int)v96 - (int)v219 >= 2 && *v219 == 216 && v219[1] == 4)
                                              {
                                                char v108 = v219 + 2;
                                                *uint64_t v4 = (unint64_t)v108;
LABEL_611:
                                                if ((unint64_t)v108 >= v96 || (char)*v108 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  unint64_t v96 = *v5;
                                                  v224 = (unsigned __int8 *)*v4;
                                                }
                                                else
                                                {
                                                  unsigned int *v10 = *v108;
                                                  v224 = v108 + 1;
                                                  *uint64_t v4 = (unint64_t)v224;
                                                }
                                                *((_DWORD *)this + 120) |= 0x200u;
                                                if ((int)v96 - (int)v224 >= 2 && *v224 == 224 && v224[1] == 4)
                                                {
                                                  char v109 = v224 + 2;
                                                  *uint64_t v4 = (unint64_t)v109;
LABEL_638:
                                                  v349[0] = 0;
                                                  if ((unint64_t)v109 >= v96 || (char)*v109 < 0)
                                                  {
                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                    if (!result) {
                                                      return result;
                                                    }
                                                    unsigned int v229 = v349[0];
                                                    unint64_t v96 = *v5;
                                                    v230 = (unsigned __int8 *)*v4;
                                                  }
                                                  else
                                                  {
                                                    unsigned int v229 = *v109;
                                                    v230 = v109 + 1;
                                                    *uint64_t v4 = (unint64_t)v230;
                                                  }
                                                  *((unsigned char *)this + 307) = v229 != 0;
                                                  *((_DWORD *)this + 120) |= 0x400u;
                                                  if ((int)v96 - (int)v230 >= 2 && *v230 == 232 && v230[1] == 4)
                                                  {
                                                    char v110 = v230 + 2;
                                                    *uint64_t v4 = (unint64_t)v110;
LABEL_662:
                                                    v349[0] = 0;
                                                    if ((unint64_t)v110 >= v96 || (char)*v110 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                      if (!result) {
                                                        return result;
                                                      }
                                                      unsigned int v233 = v349[0];
                                                      unint64_t v96 = *v5;
                                                      v234 = (unsigned __int8 *)*v4;
                                                    }
                                                    else
                                                    {
                                                      unsigned int v233 = *v110;
                                                      v234 = v110 + 1;
                                                      *uint64_t v4 = (unint64_t)v234;
                                                    }
                                                    *((unsigned char *)this + 328) = v233 != 0;
                                                    *((_DWORD *)this + 120) |= 0x800u;
                                                    if ((int)v96 - (int)v234 >= 2 && *v234 == 240 && v234[1] == 4)
                                                    {
                                                      char v111 = v234 + 2;
                                                      *uint64_t v4 = (unint64_t)v111;
LABEL_680:
                                                      v349[0] = 0;
                                                      if ((unint64_t)v111 >= v96 || (char)*v111 < 0)
                                                      {
                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                        if (!result) {
                                                          return result;
                                                        }
                                                        unsigned int v237 = v349[0];
                                                        unint64_t v96 = *v5;
                                                        v238 = (unsigned __int8 *)*v4;
                                                      }
                                                      else
                                                      {
                                                        unsigned int v237 = *v111;
                                                        v238 = v111 + 1;
                                                        *uint64_t v4 = (unint64_t)v238;
                                                      }
                                                      *((unsigned char *)this + 329) = v237 != 0;
                                                      *((_DWORD *)this + 120) |= 0x1000u;
                                                      if ((int)v96 - (int)v238 >= 2 && *v238 == 248 && v238[1] == 4)
                                                      {
                                                        char v112 = v238 + 2;
                                                        *uint64_t v4 = (unint64_t)v112;
LABEL_698:
                                                        v349[0] = 0;
                                                        if ((unint64_t)v112 >= v96 || (char)*v112 < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                          if (!result) {
                                                            return result;
                                                          }
                                                          unsigned int v240 = v349[0];
                                                          unint64_t v96 = *v5;
                                                          v241 = (unsigned __int8 *)*v4;
                                                        }
                                                        else
                                                        {
                                                          unsigned int v240 = *v112;
                                                          v241 = v112 + 1;
                                                          *uint64_t v4 = (unint64_t)v241;
                                                        }
                                                        *((unsigned char *)this + 330) = v240 != 0;
                                                        *((_DWORD *)this + 120) |= 0x2000u;
                                                        if ((int)v96 - (int)v241 >= 2 && *v241 == 128 && v241[1] == 5)
                                                        {
                                                          char v113 = v241 + 2;
                                                          *uint64_t v4 = (unint64_t)v113;
LABEL_716:
                                                          v349[0] = 0;
                                                          if ((unint64_t)v113 >= v96 || (char)*v113 < 0)
                                                          {
                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                            if (!result) {
                                                              return result;
                                                            }
                                                            unsigned int v244 = v349[0];
                                                            unint64_t v96 = *v5;
                                                            v245 = (unsigned __int8 *)*v4;
                                                          }
                                                          else
                                                          {
                                                            unsigned int v244 = *v113;
                                                            v245 = v113 + 1;
                                                            *uint64_t v4 = (unint64_t)v245;
                                                          }
                                                          *((unsigned char *)this + 331) = v244 != 0;
                                                          *((_DWORD *)this + 120) |= 0x4000u;
                                                          if ((int)v96 - (int)v245 >= 2 && *v245 == 136 && v245[1] == 5)
                                                          {
                                                            unsigned int v114 = v245 + 2;
                                                            *uint64_t v4 = (unint64_t)v114;
LABEL_734:
                                                            v349[0] = 0;
                                                            if ((unint64_t)v114 >= v96 || (char)*v114 < 0)
                                                            {
                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                              if (!result) {
                                                                return result;
                                                              }
                                                              unsigned int v247 = v349[0];
                                                              unint64_t v96 = *v5;
                                                              v248 = (unsigned __int8 *)*v4;
                                                            }
                                                            else
                                                            {
                                                              unsigned int v247 = *v114;
                                                              v248 = v114 + 1;
                                                              *uint64_t v4 = (unint64_t)v248;
                                                            }
                                                            *((_DWORD *)this + 83) = v247;
                                                            *((_DWORD *)this + 120) |= 0x8000u;
                                                            if ((int)v96 - (int)v248 >= 2
                                                              && *v248 == 144
                                                              && v248[1] == 5)
                                                            {
                                                              int v115 = v248 + 2;
                                                              *uint64_t v4 = (unint64_t)v115;
LABEL_752:
                                                              v349[0] = 0;
                                                              if ((unint64_t)v115 >= v96 || (char)*v115 < 0)
                                                              {
                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                if (!result) {
                                                                  return result;
                                                                }
                                                                unsigned int v251 = v349[0];
                                                                unint64_t v96 = *v5;
                                                                v252 = (unsigned __int8 *)*v4;
                                                              }
                                                              else
                                                              {
                                                                unsigned int v251 = *v115;
                                                                v252 = v115 + 1;
                                                                *uint64_t v4 = (unint64_t)v252;
                                                              }
                                                              *((_DWORD *)this + 84) = v251;
                                                              *((_DWORD *)this + 120) |= 0x10000u;
                                                              if ((int)v96 - (int)v252 >= 2
                                                                && *v252 == 152
                                                                && v252[1] == 5)
                                                              {
                                                                int v116 = (char *)(v252 + 2);
                                                                *uint64_t v4 = (unint64_t)v116;
LABEL_770:
                                                                v349[0] = 0;
                                                                if ((unint64_t)v116 >= v96 || *v116 < 0)
                                                                {
                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                  if (!result) {
                                                                    return result;
                                                                  }
                                                                  unsigned int v255 = v349[0];
                                                                }
                                                                else
                                                                {
                                                                  unsigned int v255 = *v116;
                                                                  *uint64_t v4 = (unint64_t)(v116 + 1);
                                                                }
                                                                if (v255 <= 7)
                                                                {
                                                                  *((_DWORD *)this + 120) |= 0x20000u;
                                                                  *((_DWORD *)this + 85) = v255;
                                                                }
                                                                unint64_t v118 = *v5;
                                                                v258 = (unsigned __int8 *)*v4;
                                                                if ((int)(*v5 - *v4) >= 2
                                                                  && *v258 == 160
                                                                  && v258[1] == 5)
                                                                {
                                                                  int v117 = v258 + 2;
                                                                  *uint64_t v4 = (unint64_t)v117;
LABEL_790:
                                                                  v349[0] = 0;
                                                                  if ((unint64_t)v117 >= v118 || (char)*v117 < 0)
                                                                  {
                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                    if (!result) {
                                                                      return result;
                                                                    }
                                                                    unsigned int v259 = v349[0];
                                                                    unint64_t v118 = *v5;
                                                                    v260 = (unsigned __int8 *)*v4;
                                                                  }
                                                                  else
                                                                  {
                                                                    unsigned int v259 = *v117;
                                                                    v260 = v117 + 1;
                                                                    *uint64_t v4 = (unint64_t)v260;
                                                                  }
                                                                  *((unsigned char *)this + 344) = v259 != 0;
                                                                  *((_DWORD *)this + 120) |= 0x40000u;
                                                                  if ((int)v118 - (int)v260 >= 2
                                                                    && *v260 == 168
                                                                    && v260[1] == 5)
                                                                  {
                                                                    int v119 = v260 + 2;
                                                                    *uint64_t v4 = (unint64_t)v119;
LABEL_808:
                                                                    v349[0] = 0;
                                                                    if ((unint64_t)v119 >= v118
                                                                      || (char)*v119 < 0)
                                                                    {
                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                      if (!result) {
                                                                        return result;
                                                                      }
                                                                      unsigned int v263 = v349[0];
                                                                      unint64_t v118 = *v5;
                                                                      v264 = (unsigned __int8 *)*v4;
                                                                    }
                                                                    else
                                                                    {
                                                                      unsigned int v263 = *v119;
                                                                      v264 = v119 + 1;
                                                                      *uint64_t v4 = (unint64_t)v264;
                                                                    }
                                                                    *((unsigned char *)this + 345) = v263 != 0;
                                                                    *((_DWORD *)this + 120) |= 0x80000u;
                                                                    if ((int)v118 - (int)v264 >= 2
                                                                      && *v264 == 176
                                                                      && v264[1] == 5)
                                                                    {
                                                                      int v120 = v264 + 2;
                                                                      *uint64_t v4 = (unint64_t)v120;
LABEL_826:
                                                                      v349[0] = 0;
                                                                      if ((unint64_t)v120 >= v118
                                                                        || (char)*v120 < 0)
                                                                      {
                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                        if (!result) {
                                                                          return result;
                                                                        }
                                                                        unsigned int v267 = v349[0];
                                                                        unint64_t v118 = *v5;
                                                                        v268 = (unsigned __int8 *)*v4;
                                                                      }
                                                                      else
                                                                      {
                                                                        unsigned int v267 = *v120;
                                                                        v268 = v120 + 1;
                                                                        *uint64_t v4 = (unint64_t)v268;
                                                                      }
                                                                      *((unsigned char *)this + 346) = v267 != 0;
                                                                      *((_DWORD *)this + 120) |= 0x100000u;
                                                                      if ((int)v118 - (int)v268 >= 2
                                                                        && *v268 == 184
                                                                        && v268[1] == 5)
                                                                      {
                                                                        int v121 = (char *)(v268 + 2);
                                                                        *uint64_t v4 = (unint64_t)v121;
LABEL_844:
                                                                        v349[0] = 0;
                                                                        if ((unint64_t)v121 >= v118 || *v121 < 0)
                                                                        {
                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                          if (!result) {
                                                                            return result;
                                                                          }
                                                                          unsigned int v270 = v349[0];
                                                                        }
                                                                        else
                                                                        {
                                                                          unsigned int v270 = *v121;
                                                                          *uint64_t v4 = (unint64_t)(v121 + 1);
                                                                        }
                                                                        if (v270 <= 2)
                                                                        {
                                                                          *((_DWORD *)this + 120) |= 0x200000u;
                                                                          *((_DWORD *)this + 87) = v270;
                                                                        }
                                                                        unint64_t v123 = *v5;
                                                                        v274 = (unsigned __int8 *)*v4;
                                                                        if ((int)(*v5 - *v4) >= 2
                                                                          && *v274 == 192
                                                                          && v274[1] == 5)
                                                                        {
                                                                          v122 = v274 + 2;
                                                                          *uint64_t v4 = (unint64_t)v122;
LABEL_866:
                                                                          if ((unint64_t)v122 >= v123
                                                                            || (char)*v122 < 0)
                                                                          {
                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
                                                                            if (!result) {
                                                                              return result;
                                                                            }
                                                                            unint64_t v123 = *v5;
                                                                            v275 = (unsigned __int8 *)*v4;
                                                                          }
                                                                          else
                                                                          {
                                                                            unsigned int *v11 = *v122;
                                                                            v275 = v122 + 1;
                                                                            *uint64_t v4 = (unint64_t)v275;
                                                                          }
                                                                          *((_DWORD *)this + 120) |= 0x400000u;
                                                                          if ((int)v123 - (int)v275 >= 2
                                                                            && *v275 == 200
                                                                            && v275[1] == 5)
                                                                          {
                                                                            v124 = v275 + 2;
                                                                            *uint64_t v4 = (unint64_t)v124;
LABEL_884:
                                                                            v349[0] = 0;
                                                                            if ((unint64_t)v124 >= v123
                                                                              || (char)*v124 < 0)
                                                                            {
                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                              if (!result) {
                                                                                return result;
                                                                              }
                                                                              unsigned int v278 = v349[0];
                                                                              unint64_t v123 = *v5;
                                                                              v279 = (unsigned __int8 *)*v4;
                                                                            }
                                                                            else
                                                                            {
                                                                              unsigned int v278 = *v124;
                                                                              v279 = v124 + 1;
                                                                              *uint64_t v4 = (unint64_t)v279;
                                                                            }
                                                                            *((_DWORD *)this + 89) = v278;
                                                                            *((_DWORD *)this + 120) |= 0x800000u;
                                                                            if ((int)v123 - (int)v279 >= 2
                                                                              && *v279 == 208
                                                                              && v279[1] == 5)
                                                                            {
                                                                              v125 = v279 + 2;
                                                                              *uint64_t v4 = (unint64_t)v125;
LABEL_899:
                                                                              v349[0] = 0;
                                                                              if ((unint64_t)v125 >= v123
                                                                                || (char)*v125 < 0)
                                                                              {
                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                if (!result) {
                                                                                  return result;
                                                                                }
                                                                                unsigned int v280 = v349[0];
                                                                                unint64_t v123 = *v5;
                                                                                v281 = (unsigned __int8 *)*v4;
                                                                              }
                                                                              else
                                                                              {
                                                                                unsigned int v280 = *v125;
                                                                                v281 = v125 + 1;
                                                                                *uint64_t v4 = (unint64_t)v281;
                                                                              }
                                                                              *((_DWORD *)this + 90) = v280;
                                                                              *((_DWORD *)this + 120) |= 0x1000000u;
                                                                              if ((int)v123 - (int)v281 >= 2
                                                                                && *v281 == 216
                                                                                && v281[1] == 5)
                                                                              {
                                                                                v126 = (char *)(v281 + 2);
                                                                                *uint64_t v4 = (unint64_t)v126;
LABEL_908:
                                                                                v349[0] = 0;
                                                                                if ((unint64_t)v126 >= v123
                                                                                  || *v126 < 0)
                                                                                {
                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                  if (!result) {
                                                                                    return result;
                                                                                  }
                                                                                  unsigned int v282 = v349[0];
                                                                                }
                                                                                else
                                                                                {
                                                                                  unsigned int v282 = *v126;
                                                                                  *uint64_t v4 = (unint64_t)(v126 + 1);
                                                                                }
                                                                                if (v282 <= 8)
                                                                                {
                                                                                  *((_DWORD *)this + 120) |= 0x2000000u;
                                                                                  *((_DWORD *)this + 91) = v282;
                                                                                }
                                                                                unint64_t v128 = *v5;
                                                                                v283 = (unsigned __int8 *)*v4;
                                                                                if ((int)(*v5 - *v4) >= 2
                                                                                  && *v283 == 224
                                                                                  && v283[1] == 5)
                                                                                {
                                                                                  v127 = (char *)(v283 + 2);
                                                                                  *uint64_t v4 = (unint64_t)v127;
LABEL_919:
                                                                                  v349[0] = 0;
                                                                                  if ((unint64_t)v127 >= v128
                                                                                    || *v127 < 0)
                                                                                  {
                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                    if (!result) {
                                                                                      return result;
                                                                                    }
                                                                                    unsigned int v284 = v349[0];
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    unsigned int v284 = *v127;
                                                                                    *uint64_t v4 = (unint64_t)(v127 + 1);
                                                                                  }
                                                                                  if (v284 <= 3)
                                                                                  {
                                                                                    *((_DWORD *)this + 120) |= 0x4000000u;
                                                                                    *((_DWORD *)this + 92) = v284;
                                                                                  }
                                                                                  unint64_t v130 = *v5;
                                                                                  v285 = (unsigned __int8 *)*v4;
                                                                                  if ((int)(*v5 - *v4) >= 2
                                                                                    && *v285 == 232
                                                                                    && v285[1] == 5)
                                                                                  {
                                                                                    v129 = (char *)(v285 + 2);
                                                                                    *uint64_t v4 = (unint64_t)v129;
LABEL_930:
                                                                                    v349[0] = 0;
                                                                                    if ((unint64_t)v129 >= v130
                                                                                      || *v129 < 0)
                                                                                    {
                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                      if (!result) {
                                                                                        return result;
                                                                                      }
                                                                                      unsigned int v286 = v349[0];
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      unsigned int v286 = *v129;
                                                                                      *uint64_t v4 = (unint64_t)(v129 + 1);
                                                                                    }
                                                                                    if (v286 <= 3)
                                                                                    {
                                                                                      *((_DWORD *)this + 120) |= 0x8000000u;
                                                                                      *((_DWORD *)this + 93) = v286;
                                                                                    }
                                                                                    unint64_t v132 = *v5;
                                                                                    v287 = (unsigned __int8 *)*v4;
                                                                                    if ((int)(*v5 - *v4) >= 2
                                                                                      && *v287 == 240
                                                                                      && v287[1] == 5)
                                                                                    {
                                                                                      v131 = (char *)(v287 + 2);
                                                                                      *uint64_t v4 = (unint64_t)v131;
LABEL_941:
                                                                                      v349[0] = 0;
                                                                                      if ((unint64_t)v131 >= v132
                                                                                        || *v131 < 0)
                                                                                      {
                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                        if (!result) {
                                                                                          return result;
                                                                                        }
                                                                                        unsigned int v288 = v349[0];
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        unsigned int v288 = *v131;
                                                                                        *uint64_t v4 = (unint64_t)(v131 + 1);
                                                                                      }
                                                                                      if (v288 <= 3)
                                                                                      {
                                                                                        *((_DWORD *)this + 120) |= 0x10000000u;
                                                                                        *((_DWORD *)this + 94) = v288;
                                                                                      }
                                                                                      unint64_t v134 = *v5;
                                                                                      v289 = (unsigned __int8 *)*v4;
                                                                                      if ((int)(*v5 - *v4) >= 2
                                                                                        && *v289 == 248
                                                                                        && v289[1] == 5)
                                                                                      {
                                                                                        v133 = (char *)(v289 + 2);
                                                                                        *uint64_t v4 = (unint64_t)v133;
LABEL_952:
                                                                                        v349[0] = 0;
                                                                                        if ((unint64_t)v133 >= v134
                                                                                          || *v133 < 0)
                                                                                        {
                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                          if (!result) {
                                                                                            return result;
                                                                                          }
                                                                                          unsigned int v290 = v349[0];
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          unsigned int v290 = *v133;
                                                                                          *uint64_t v4 = (unint64_t)(v133 + 1);
                                                                                        }
                                                                                        if (v290 <= 3)
                                                                                        {
                                                                                          *((_DWORD *)this + 120) |= 0x20000000u;
                                                                                          *((_DWORD *)this + 95) = v290;
                                                                                        }
                                                                                        unint64_t v136 = *v5;
                                                                                        v291 = (unsigned __int8 *)*v4;
                                                                                        if ((int)(*v5 - *v4) >= 2
                                                                                          && *v291 == 128
                                                                                          && v291[1] == 6)
                                                                                        {
                                                                                          v135 = (char *)(v291 + 2);
                                                                                          *uint64_t v4 = (unint64_t)v135;
LABEL_963:
                                                                                          v349[0] = 0;
                                                                                          if ((unint64_t)v135 >= v136
                                                                                            || *v135 < 0)
                                                                                          {
                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                            if (!result) {
                                                                                              return result;
                                                                                            }
                                                                                            unsigned int v292 = v349[0];
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            unsigned int v292 = *v135;
                                                                                            *uint64_t v4 = (unint64_t)(v135 + 1);
                                                                                          }
                                                                                          if (v292 <= 3)
                                                                                          {
                                                                                            *((_DWORD *)this + 120) |= 0x40000000u;
                                                                                            *((_DWORD *)this + 96) = v292;
                                                                                          }
                                                                                          unint64_t v138 = *v5;
                                                                                          v293 = (unsigned __int8 *)*v4;
                                                                                          if ((int)(*v5 - *v4) >= 2
                                                                                            && *v293 == 136
                                                                                            && v293[1] == 6)
                                                                                          {
                                                                                            v137 = (char *)(v293 + 2);
                                                                                            *uint64_t v4 = (unint64_t)v137;
LABEL_974:
                                                                                            v349[0] = 0;
                                                                                            if ((unint64_t)v137 >= v138
                                                                                              || *v137 < 0)
                                                                                            {
                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                              if (!result) {
                                                                                                return result;
                                                                                              }
                                                                                              unsigned int v294 = v349[0];
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              unsigned int v294 = *v137;
                                                                                              *uint64_t v4 = (unint64_t)(v137 + 1);
                                                                                            }
                                                                                            if (v294 <= 3)
                                                                                            {
                                                                                              *((_DWORD *)this + 120) |= 0x80000000;
                                                                                              *((_DWORD *)this + 97) = v294;
                                                                                            }
                                                                                            unint64_t v140 = *v5;
                                                                                            v295 = (unsigned __int8 *)*v4;
                                                                                            if ((int)(*v5 - *v4) >= 2
                                                                                              && *v295 == 144
                                                                                              && v295[1] == 6)
                                                                                            {
                                                                                              v139 = (char *)(v295 + 2);
                                                                                              *uint64_t v4 = (unint64_t)v139;
LABEL_985:
                                                                                              v349[0] = 0;
                                                                                              if ((unint64_t)v139 >= v140
                                                                                                || *v139 < 0)
                                                                                              {
                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                if (!result) {
                                                                                                  return result;
                                                                                                }
                                                                                                unsigned int v296 = v349[0];
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                unsigned int v296 = *v139;
                                                                                                *uint64_t v4 = (unint64_t)(v139 + 1);
                                                                                              }
                                                                                              if (v296 <= 3)
                                                                                              {
                                                                                                *((_DWORD *)this + 121) |= 1u;
                                                                                                *((_DWORD *)this + 98) = v296;
                                                                                              }
                                                                                              unint64_t v142 = *v5;
                                                                                              v297 = (unsigned __int8 *)*v4;
                                                                                              if ((int)(*v5 - *v4) >= 2
                                                                                                && *v297 == 152
                                                                                                && v297[1] == 6)
                                                                                              {
                                                                                                v141 = (char *)(v297 + 2);
                                                                                                *uint64_t v4 = (unint64_t)v141;
LABEL_996:
                                                                                                v349[0] = 0;
                                                                                                if ((unint64_t)v141 >= v142 || *v141 < 0)
                                                                                                {
                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                  if (!result) {
                                                                                                    return result;
                                                                                                  }
                                                                                                  unsigned int v298 = v349[0];
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  unsigned int v298 = *v141;
                                                                                                  *uint64_t v4 = (unint64_t)(v141 + 1);
                                                                                                }
                                                                                                if (v298 <= 3)
                                                                                                {
                                                                                                  *((_DWORD *)this + 121) |= 2u;
                                                                                                  *((_DWORD *)this + 99) = v298;
                                                                                                }
                                                                                                unint64_t v144 = *v5;
                                                                                                v299 = (unsigned __int8 *)*v4;
                                                                                                if ((int)(*v5 - *v4) >= 2 && *v299 == 160 && v299[1] == 6)
                                                                                                {
                                                                                                  v143 = (char *)(v299 + 2);
                                                                                                  *uint64_t v4 = (unint64_t)v143;
LABEL_1007:
                                                                                                  v349[0] = 0;
                                                                                                  if ((unint64_t)v143 >= v144 || *v143 < 0)
                                                                                                  {
                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                    if (!result) {
                                                                                                      return result;
                                                                                                    }
                                                                                                    unsigned int v300 = v349[0];
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    unsigned int v300 = *v143;
                                                                                                    *uint64_t v4 = (unint64_t)(v143 + 1);
                                                                                                  }
                                                                                                  if (v300 <= 3)
                                                                                                  {
                                                                                                    *((_DWORD *)this + 121) |= 4u;
                                                                                                    *((_DWORD *)this + 100) = v300;
                                                                                                  }
                                                                                                  unint64_t v146 = *v5;
                                                                                                  v301 = (unsigned __int8 *)*v4;
                                                                                                  if ((int)(*v5 - *v4) >= 2 && *v301 == 168 && v301[1] == 6)
                                                                                                  {
                                                                                                    v145 = (char *)(v301 + 2);
                                                                                                    *uint64_t v4 = (unint64_t)v145;
LABEL_1018:
                                                                                                    v349[0] = 0;
                                                                                                    if ((unint64_t)v145 >= v146 || *v145 < 0)
                                                                                                    {
                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                      if (!result) {
                                                                                                        return result;
                                                                                                      }
                                                                                                      unsigned int v302 = v349[0];
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      unsigned int v302 = *v145;
                                                                                                      *uint64_t v4 = (unint64_t)(v145 + 1);
                                                                                                    }
                                                                                                    if (v302 <= 3)
                                                                                                    {
                                                                                                      *((_DWORD *)this + 121) |= 8u;
                                                                                                      *((_DWORD *)this + 101) = v302;
                                                                                                    }
                                                                                                    unint64_t v148 = *v5;
                                                                                                    v303 = (unsigned __int8 *)*v4;
                                                                                                    if ((int)(*v5 - *v4) >= 2 && *v303 == 176 && v303[1] == 6)
                                                                                                    {
                                                                                                      v147 = (char *)(v303 + 2);
                                                                                                      *uint64_t v4 = (unint64_t)v147;
LABEL_1029:
                                                                                                      v349[0] = 0;
                                                                                                      if ((unint64_t)v147 >= v148 || *v147 < 0)
                                                                                                      {
                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                        if (!result) {
                                                                                                          return result;
                                                                                                        }
                                                                                                        unsigned int v304 = v349[0];
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        unsigned int v304 = *v147;
                                                                                                        *uint64_t v4 = (unint64_t)(v147 + 1);
                                                                                                      }
                                                                                                      if (v304 <= 3)
                                                                                                      {
                                                                                                        *((_DWORD *)this + 121) |= 0x10u;
                                                                                                        *((_DWORD *)this + 104) = v304;
                                                                                                      }
                                                                                                      v305 = (unsigned __int8 *)*v4;
                                                                                                      if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v305 == 186 && v305[1] == 6)
                                                                                                      {
                                                                                                        *uint64_t v4 = (unint64_t)(v305 + 2);
LABEL_264:
                                                                                                        *((_DWORD *)this + 121) |= 0x20u;
                                                                                                        if (*((void *)this + 51) == MEMORY[0x263F8C740]) {
                                                                                                          operator new();
                                                                                                        }
                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                                                                                                        if (!result) {
                                                                                                          return result;
                                                                                                        }
                                                                                                        v149 = (unsigned __int8 *)*v4;
                                                                                                        if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v149 == 194 && v149[1] == 6)
                                                                                                        {
                                                                                                          *uint64_t v4 = (unint64_t)(v149 + 2);
LABEL_272:
                                                                                                          *((_DWORD *)this + 121) |= 0x40u;
                                                                                                          if (*((void *)this + 53) == MEMORY[0x263F8C740]) {
                                                                                                            operator new();
                                                                                                          }
                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                                                                                                          if (!result) {
                                                                                                            return result;
                                                                                                          }
                                                                                                          unint64_t v150 = *v5;
                                                                                                          v151 = (unsigned __int8 *)*v4;
                                                                                                          if ((int)(*v5 - *v4) >= 2 && *v151 == 200 && v151[1] == 6)
                                                                                                          {
                                                                                                            v152 = v151 + 2;
                                                                                                            *uint64_t v4 = (unint64_t)v152;
LABEL_281:
                                                                                                            v349[0] = 0;
                                                                                                            if ((unint64_t)v152 >= v150 || (char)*v152 < 0)
                                                                                                            {
                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                              if (!result) {
                                                                                                                return result;
                                                                                                              }
                                                                                                              unsigned int v153 = v349[0];
                                                                                                              unint64_t v150 = *v5;
                                                                                                              v154 = (unsigned __int8 *)*v4;
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              unsigned int v153 = *v152;
                                                                                                              v154 = v152 + 1;
                                                                                                              *uint64_t v4 = (unint64_t)v154;
                                                                                                            }
                                                                                                            *((_DWORD *)this + 105) = v153;
                                                                                                            *((_DWORD *)this + 121) |= 0x80u;
                                                                                                            if ((int)v150 - (int)v154 >= 2 && *v154 == 208 && v154[1] == 6)
                                                                                                            {
                                                                                                              v155 = v154 + 2;
                                                                                                              *uint64_t v4 = (unint64_t)v155;
LABEL_340:
                                                                                                              v349[0] = 0;
                                                                                                              if ((unint64_t)v155 >= v150 || (char)*v155 < 0)
                                                                                                              {
                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                if (!result) {
                                                                                                                  return result;
                                                                                                                }
                                                                                                                unsigned int v169 = v349[0];
                                                                                                                unint64_t v150 = *v5;
                                                                                                                v170 = (unsigned __int8 *)*v4;
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                unsigned int v169 = *v155;
                                                                                                                v170 = v155 + 1;
                                                                                                                *uint64_t v4 = (unint64_t)v170;
                                                                                                              }
                                                                                                              *((_DWORD *)this + 108) = v169;
                                                                                                              *((_DWORD *)this + 121) |= 0x100u;
                                                                                                              if ((int)v150 - (int)v170 >= 2 && *v170 == 216 && v170[1] == 6)
                                                                                                              {
                                                                                                                v156 = v170 + 2;
                                                                                                                *uint64_t v4 = (unint64_t)v156;
LABEL_381:
                                                                                                                v349[0] = 0;
                                                                                                                if ((unint64_t)v156 >= v150 || (char)*v156 < 0)
                                                                                                                {
                                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                  if (!result) {
                                                                                                                    return result;
                                                                                                                  }
                                                                                                                  unsigned int v179 = v349[0];
                                                                                                                  unint64_t v150 = *v5;
                                                                                                                  v180 = (unsigned __int8 *)*v4;
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  unsigned int v179 = *v156;
                                                                                                                  v180 = v156 + 1;
                                                                                                                  *uint64_t v4 = (unint64_t)v180;
                                                                                                                }
                                                                                                                *((_DWORD *)this + 109) = v179;
                                                                                                                *((_DWORD *)this + 121) |= 0x200u;
                                                                                                                if ((int)v150 - (int)v180 >= 2 && *v180 == 224 && v180[1] == 6)
                                                                                                                {
                                                                                                                  v157 = v180 + 2;
                                                                                                                  *uint64_t v4 = (unint64_t)v157;
LABEL_417:
                                                                                                                  v349[0] = 0;
                                                                                                                  if ((unint64_t)v157 >= v150 || (char)*v157 < 0)
                                                                                                                  {
                                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                    if (!result) {
                                                                                                                      return result;
                                                                                                                    }
                                                                                                                    unsigned int v186 = v349[0];
                                                                                                                    unint64_t v150 = *v5;
                                                                                                                    v187 = (unsigned __int8 *)*v4;
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    unsigned int v186 = *v157;
                                                                                                                    v187 = v157 + 1;
                                                                                                                    *uint64_t v4 = (unint64_t)v187;
                                                                                                                  }
                                                                                                                  *((_DWORD *)this + 110) = v186;
                                                                                                                  *((_DWORD *)this + 121) |= 0x400u;
                                                                                                                  if ((int)v150 - (int)v187 >= 2 && *v187 == 232 && v187[1] == 6)
                                                                                                                  {
                                                                                                                    v158 = v187 + 2;
                                                                                                                    *uint64_t v4 = (unint64_t)v158;
LABEL_455:
                                                                                                                    v349[0] = 0;
                                                                                                                    if ((unint64_t)v158 >= v150 || (char)*v158 < 0)
                                                                                                                    {
                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                      if (!result) {
                                                                                                                        return result;
                                                                                                                      }
                                                                                                                      unsigned int v194 = v349[0];
                                                                                                                      unint64_t v150 = *v5;
                                                                                                                      v195 = (unsigned __int8 *)*v4;
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      unsigned int v194 = *v158;
                                                                                                                      v195 = v158 + 1;
                                                                                                                      *uint64_t v4 = (unint64_t)v195;
                                                                                                                    }
                                                                                                                    *((_DWORD *)this + 111) = v194;
                                                                                                                    *((_DWORD *)this + 121) |= 0x800u;
                                                                                                                    if ((int)v150 - (int)v195 >= 2 && *v195 == 240 && v195[1] == 6)
                                                                                                                    {
                                                                                                                      v159 = v195 + 2;
                                                                                                                      *uint64_t v4 = (unint64_t)v159;
LABEL_493:
                                                                                                                      v349[0] = 0;
                                                                                                                      if ((unint64_t)v159 >= v150 || (char)*v159 < 0)
                                                                                                                      {
                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                        if (!result) {
                                                                                                                          return result;
                                                                                                                        }
                                                                                                                        unsigned int v201 = v349[0];
                                                                                                                        unint64_t v150 = *v5;
                                                                                                                        v202 = (unsigned __int8 *)*v4;
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        unsigned int v201 = *v159;
                                                                                                                        v202 = v159 + 1;
                                                                                                                        *uint64_t v4 = (unint64_t)v202;
                                                                                                                      }
                                                                                                                      *((_DWORD *)this + 112) = v201;
                                                                                                                      *((_DWORD *)this + 121) |= 0x1000u;
                                                                                                                      if ((int)v150 - (int)v202 >= 2 && *v202 == 248 && v202[1] == 6)
                                                                                                                      {
                                                                                                                        v160 = v202 + 2;
                                                                                                                        *uint64_t v4 = (unint64_t)v160;
LABEL_531:
                                                                                                                        v349[0] = 0;
                                                                                                                        if ((unint64_t)v160 >= v150 || (char)*v160 < 0)
                                                                                                                        {
                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                          if (!result) {
                                                                                                                            return result;
                                                                                                                          }
                                                                                                                          unsigned int v210 = v349[0];
                                                                                                                          unint64_t v150 = *v5;
                                                                                                                          v211 = (unsigned __int8 *)*v4;
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          unsigned int v210 = *v160;
                                                                                                                          v211 = v160 + 1;
                                                                                                                          *uint64_t v4 = (unint64_t)v211;
                                                                                                                        }
                                                                                                                        *((_DWORD *)this + 113) = v210;
                                                                                                                        *((_DWORD *)this + 121) |= 0x2000u;
                                                                                                                        if ((int)v150 - (int)v211 >= 2 && *v211 == 128 && v211[1] == 7)
                                                                                                                        {
                                                                                                                          v161 = v211 + 2;
                                                                                                                          *uint64_t v4 = (unint64_t)v161;
LABEL_564:
                                                                                                                          v349[0] = 0;
                                                                                                                          if ((unint64_t)v161 >= v150 || (char)*v161 < 0)
                                                                                                                          {
                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                            if (!result) {
                                                                                                                              return result;
                                                                                                                            }
                                                                                                                            unsigned int v215 = v349[0];
                                                                                                                            unint64_t v150 = *v5;
                                                                                                                            v216 = (unsigned __int8 *)*v4;
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            unsigned int v215 = *v161;
                                                                                                                            v216 = v161 + 1;
                                                                                                                            *uint64_t v4 = (unint64_t)v216;
                                                                                                                          }
                                                                                                                          *((_DWORD *)this + 114) = v215;
                                                                                                                          *((_DWORD *)this + 121) |= 0x4000u;
                                                                                                                          if ((int)v150 - (int)v216 >= 2 && *v216 == 136 && v216[1] == 7)
                                                                                                                          {
                                                                                                                            v162 = v216 + 2;
                                                                                                                            *uint64_t v4 = (unint64_t)v162;
LABEL_593:
                                                                                                                            v349[0] = 0;
                                                                                                                            if ((unint64_t)v162 >= v150 || (char)*v162 < 0)
                                                                                                                            {
                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                              if (!result) {
                                                                                                                                return result;
                                                                                                                              }
                                                                                                                              unsigned int v220 = v349[0];
                                                                                                                              unint64_t v150 = *v5;
                                                                                                                              v221 = (unsigned __int8 *)*v4;
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              unsigned int v220 = *v162;
                                                                                                                              v221 = v162 + 1;
                                                                                                                              *uint64_t v4 = (unint64_t)v221;
                                                                                                                            }
                                                                                                                            *((_DWORD *)this + 115) = v220;
                                                                                                                            *((_DWORD *)this + 121) |= 0x8000u;
                                                                                                                            if ((int)v150 - (int)v221 >= 2 && *v221 == 144 && v221[1] == 7)
                                                                                                                            {
                                                                                                                              v163 = (char *)(v221 + 2);
                                                                                                                              *uint64_t v4 = (unint64_t)v163;
LABEL_620:
                                                                                                                              v349[0] = 0;
                                                                                                                              if ((unint64_t)v163 >= v150 || *v163 < 0)
                                                                                                                              {
                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
                                                                                                                                if (!result) {
                                                                                                                                  return result;
                                                                                                                                }
                                                                                                                                unsigned int v225 = v349[0];
                                                                                                                                v226 = (unsigned __int8 *)*v4;
                                                                                                                                unint64_t v150 = *v5;
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                unsigned int v225 = *v163;
                                                                                                                                v226 = (unsigned __int8 *)(v163 + 1);
                                                                                                                                *uint64_t v4 = (unint64_t)v226;
                                                                                                                              }
                                                                                                                              *((_DWORD *)this + 116) = v225;
                                                                                                                              *((_DWORD *)this + 121) |= 0x10000u;
                                                                                                                              if (v226 == (unsigned __int8 *)v150 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                                                                                                                              {
                                                                                                                                *((_DWORD *)a2 + 8) = 0;
                                                                                                                                uint64_t result = 1;
                                                                                                                                *((unsigned char *)a2 + 36) = 1;
                                                                                                                                return result;
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_1051;
        }
        goto LABEL_301;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_1055;
        }
        goto LABEL_301;
      case 5u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_1059;
        }
        goto LABEL_301;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v19 = (char *)*v4;
        unint64_t v20 = *v5;
        goto LABEL_1063;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v21 = (char *)*v4;
        unint64_t v20 = *v5;
        goto LABEL_1071;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v22 = (char *)*v4;
        unint64_t v20 = *v5;
        goto LABEL_1079;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v23 = (char *)*v4;
        unint64_t v24 = *v5;
        goto LABEL_1089;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v25 = (char *)*v4;
        unint64_t v26 = *v5;
        goto LABEL_1099;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v27 = (char *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_1109;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v29 = (char *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_1119;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v31 = (char *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_1127;
      case 0xFu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v32 = (unsigned __int8 *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_1135;
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v33 = (unsigned __int8 *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_1144;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v34 = (unsigned __int8 *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_1153;
      case 0x12u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_1162;
        }
        goto LABEL_301;
      case 0x13u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v35 = (char *)*v4;
        unint64_t v36 = *v5;
        goto LABEL_1167;
      case 0x14u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_1178;
        }
        goto LABEL_301;
      case 0x15u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_1183;
        }
        goto LABEL_301;
      case 0x16u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v37 = (char *)*v4;
        unint64_t v38 = *v5;
        goto LABEL_1188;
      case 0x17u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v39 = (unsigned __int8 *)*v4;
        unint64_t v40 = *v5;
        goto LABEL_1199;
      case 0x18u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v41 = (unsigned __int8 *)*v4;
        unint64_t v40 = *v5;
        goto LABEL_1208;
      case 0x19u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v42 = (char *)*v4;
        unint64_t v40 = *v5;
        goto LABEL_1217;
      case 0x1Au:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_60;
        }
        goto LABEL_301;
      case 0x1Bu:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_66;
        }
        goto LABEL_301;
      case 0x1Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v46 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_73;
      case 0x1Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v49 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_322;
      case 0x1Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v50 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_363;
      case 0x1Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v51 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_399;
      case 0x20u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v52 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_437;
      case 0x21u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v53 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_475;
      case 0x22u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v54 = (unsigned __int8 *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_513;
      case 0x23u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v55 = (char *)*v4;
        unint64_t v44 = *v5;
        goto LABEL_546;
      case 0x24u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v56 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_575;
      case 0x25u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v58 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_602;
      case 0x26u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v59 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_629;
      case 0x27u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v60 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_653;
      case 0x28u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v61 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_671;
      case 0x29u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v62 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_689;
      case 0x2Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v63 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_707;
      case 0x2Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v64 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_725;
      case 0x2Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v65 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_743;
      case 0x2Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v66 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_761;
      case 0x2Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        uint64_t v67 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_779;
      case 0x2Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v68 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_799;
      case 0x30u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v69 = (unsigned __int8 *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_817;
      case 0x31u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v70 = (char *)*v4;
        unint64_t v57 = *v5;
        goto LABEL_835;
      case 0x32u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v71 = (unsigned __int8 *)*v4;
        unint64_t v72 = *v5;
        goto LABEL_855;
      case 0x33u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v73 = (unsigned __int8 *)*v4;
        unint64_t v72 = *v5;
        goto LABEL_875;
      case 0x34u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_123;
        }
        goto LABEL_301;
      case 0x35u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_129;
        }
        goto LABEL_301;
      case 0x36u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_135;
        }
        goto LABEL_301;
      case 0x37u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_141;
        }
        goto LABEL_301;
      case 0x38u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_147;
        }
        goto LABEL_301;
      case 0x39u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v80 = (char *)*v4;
        unint64_t v78 = *v5;
        goto LABEL_154;
      case 0x3Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v82 = (char *)*v4;
        unint64_t v83 = *v5;
        goto LABEL_313;
      case 0x3Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v84 = (unsigned __int8 *)*v4;
        unint64_t v85 = *v5;
        goto LABEL_354;
      case 0x3Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v86 = (char *)*v4;
        unint64_t v85 = *v5;
        goto LABEL_390;
      case 0x3Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v87 = (char *)*v4;
        unint64_t v88 = *v5;
        goto LABEL_428;
      case 0x3Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v89 = (char *)*v4;
        unint64_t v90 = *v5;
        goto LABEL_466;
      case 0x3Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v91 = (unsigned __int8 *)*v4;
        unint64_t v92 = *v5;
        goto LABEL_504;
      case 0x40u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_301;
        }
        int v93 = *((_DWORD *)this + 119);
        goto LABEL_171;
      case 0x41u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_179;
        }
        goto LABEL_301;
      case 0x42u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v98 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_188;
      case 0x43u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v100 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_331;
      case 0x44u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v101 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_372;
      case 0x45u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v102 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_408;
      case 0x46u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v103 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_446;
      case 0x47u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v104 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_484;
      case 0x48u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v105 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_522;
      case 0x49u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v106 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_555;
      case 0x4Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v107 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_584;
      case 0x4Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v108 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_611;
      case 0x4Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v109 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_638;
      case 0x4Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v110 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_662;
      case 0x4Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v111 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_680;
      case 0x4Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v112 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_698;
      case 0x50u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        char v113 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_716;
      case 0x51u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        unsigned int v114 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_734;
      case 0x52u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v115 = (unsigned __int8 *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_752;
      case 0x53u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v116 = (char *)*v4;
        unint64_t v96 = *v5;
        goto LABEL_770;
      case 0x54u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v117 = (unsigned __int8 *)*v4;
        unint64_t v118 = *v5;
        goto LABEL_790;
      case 0x55u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v119 = (unsigned __int8 *)*v4;
        unint64_t v118 = *v5;
        goto LABEL_808;
      case 0x56u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v120 = (unsigned __int8 *)*v4;
        unint64_t v118 = *v5;
        goto LABEL_826;
      case 0x57u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        int v121 = (char *)*v4;
        unint64_t v118 = *v5;
        goto LABEL_844;
      case 0x58u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v122 = (unsigned __int8 *)*v4;
        unint64_t v123 = *v5;
        goto LABEL_866;
      case 0x59u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v124 = (unsigned __int8 *)*v4;
        unint64_t v123 = *v5;
        goto LABEL_884;
      case 0x5Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v125 = (unsigned __int8 *)*v4;
        unint64_t v123 = *v5;
        goto LABEL_899;
      case 0x5Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v126 = (char *)*v4;
        unint64_t v123 = *v5;
        goto LABEL_908;
      case 0x5Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v127 = (char *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_919;
      case 0x5Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v129 = (char *)*v4;
        unint64_t v130 = *v5;
        goto LABEL_930;
      case 0x5Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v131 = (char *)*v4;
        unint64_t v132 = *v5;
        goto LABEL_941;
      case 0x5Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v133 = (char *)*v4;
        unint64_t v134 = *v5;
        goto LABEL_952;
      case 0x60u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v135 = (char *)*v4;
        unint64_t v136 = *v5;
        goto LABEL_963;
      case 0x61u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v137 = (char *)*v4;
        unint64_t v138 = *v5;
        goto LABEL_974;
      case 0x62u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v139 = (char *)*v4;
        unint64_t v140 = *v5;
        goto LABEL_985;
      case 0x63u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v141 = (char *)*v4;
        unint64_t v142 = *v5;
        goto LABEL_996;
      case 0x64u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v143 = (char *)*v4;
        unint64_t v144 = *v5;
        goto LABEL_1007;
      case 0x65u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v145 = (char *)*v4;
        unint64_t v146 = *v5;
        goto LABEL_1018;
      case 0x66u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v147 = (char *)*v4;
        unint64_t v148 = *v5;
        goto LABEL_1029;
      case 0x67u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_264;
        }
        goto LABEL_301;
      case 0x68u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_272;
        }
        goto LABEL_301;
      case 0x69u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v152 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_281;
      case 0x6Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v155 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_340;
      case 0x6Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v156 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_381;
      case 0x6Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v157 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_417;
      case 0x6Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v158 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_455;
      case 0x6Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v159 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_493;
      case 0x6Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v160 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_531;
      case 0x70u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v161 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_564;
      case 0x71u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v162 = (unsigned __int8 *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_593;
      case 0x72u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_301;
        }
        v163 = (char *)*v4;
        unint64_t v150 = *v5;
        goto LABEL_620;
      default:
        int v14 = TagFallback & 7;
LABEL_301:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::set_envtype(uint64_t result, unsigned int a2)
{
  if (a2 >= 5 && a2 - 6 >= 2) {
    awd::metrics::LocationEmergencySessionStatistics::set_envtype();
  }
  *(_DWORD *)(result + 476) |= 0x1000000u;
  *(_DWORD *)(result + 260) = a2;
  return result;
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 472);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 472);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_117;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(void *)(v5 + 88), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(float *)(v5 + 108), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(float *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned __int8 *)(v5 + 132), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned __int8 *)(v5 + 133), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 136), a3);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 144), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_143;
  }
LABEL_142:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 148), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_144;
  }
LABEL_143:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 134), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_145:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 164), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 472) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_146;
  }
LABEL_144:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 135), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 472);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_145;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_146:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(void *)(v5 + 152), (uint64_t)a2, a4);
LABEL_33:
  int v7 = *(_DWORD *)(v5 + 476);
  if (v7)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned __int8 *)(v5 + 165), (uint64_t)a2, a4);
    int v7 = *(_DWORD *)(v5 + 476);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_149;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned __int8 *)(v5 + 166), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_152;
  }
LABEL_151:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned __int8 *)(v5 + 167), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_153;
  }
LABEL_152:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_154;
  }
LABEL_153:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 176), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_155;
  }
LABEL_154:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 180), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_156;
  }
LABEL_155:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 212), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_157;
  }
LABEL_156:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_158;
  }
LABEL_157:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_159;
  }
LABEL_158:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x1000) == 0)
  {
LABEL_46:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_160;
  }
LABEL_159:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x2000) == 0)
  {
LABEL_47:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_161;
  }
LABEL_160:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x4000) == 0)
  {
LABEL_48:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_162;
  }
LABEL_161:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x8000) == 0)
  {
LABEL_49:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_163;
  }
LABEL_162:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10000) == 0)
  {
LABEL_50:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_164;
  }
LABEL_163:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned __int8 *)(v5 + 213), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20000) == 0)
  {
LABEL_51:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_165;
  }
LABEL_164:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned __int8 *)(v5 + 214), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40000) == 0)
  {
LABEL_52:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_166;
  }
LABEL_165:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, (uint64_t)a2, *(double *)(v5 + 216), a3);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x80000) == 0)
  {
LABEL_53:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_167;
  }
LABEL_166:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(double *)(v5 + 224), a3);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x100000) == 0)
  {
LABEL_54:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_168;
  }
LABEL_167:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, (uint64_t)a2, *(double *)(v5 + 232), a3);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x200000) == 0)
  {
LABEL_55:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_169;
  }
LABEL_168:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, (uint64_t)a2, *(double *)(v5 + 240), a3);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x400000) == 0)
  {
LABEL_56:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_170;
  }
LABEL_169:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, (uint64_t)a2, *(double *)(v5 + 248), a3);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x800000) == 0)
  {
LABEL_57:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_171;
  }
LABEL_170:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_172;
  }
LABEL_171:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_173;
  }
LABEL_172:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned __int8 *)(v5 + 215), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_174;
  }
LABEL_173:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_175;
  }
LABEL_174:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_176;
  }
LABEL_175:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_64;
    }
LABEL_177:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 476) & 0x80000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_178;
  }
LABEL_176:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(v5 + 276), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 476);
  if ((v7 & 0x40000000) != 0) {
    goto LABEL_177;
  }
LABEL_64:
  if ((v7 & 0x80000000) == 0) {
    goto LABEL_65;
  }
LABEL_178:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
LABEL_65:
  int v8 = *(_DWORD *)(v5 + 480);
  if (v8)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 480);
    if ((v8 & 2) == 0)
    {
LABEL_67:
      if ((v8 & 4) == 0) {
        goto LABEL_68;
      }
      goto LABEL_181;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_67;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 4) == 0)
  {
LABEL_68:
    if ((v8 & 8) == 0) {
      goto LABEL_69;
    }
    goto LABEL_182;
  }
LABEL_181:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned __int8 *)(v5 + 304), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 8) == 0)
  {
LABEL_69:
    if ((v8 & 0x10) == 0) {
      goto LABEL_70;
    }
    goto LABEL_183;
  }
LABEL_182:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned __int8 *)(v5 + 305), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10) == 0)
  {
LABEL_70:
    if ((v8 & 0x20) == 0) {
      goto LABEL_71;
    }
    goto LABEL_184;
  }
LABEL_183:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned __int8 *)(v5 + 306), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20) == 0)
  {
LABEL_71:
    if ((v8 & 0x40) == 0) {
      goto LABEL_72;
    }
    goto LABEL_185;
  }
LABEL_184:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 308), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40) == 0)
  {
LABEL_72:
    if ((v8 & 0x80) == 0) {
      goto LABEL_73;
    }
    goto LABEL_186;
  }
LABEL_185:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x80) == 0)
  {
LABEL_73:
    if ((v8 & 0x100) == 0) {
      goto LABEL_74;
    }
    goto LABEL_187;
  }
LABEL_186:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x100) == 0)
  {
LABEL_74:
    if ((v8 & 0x200) == 0) {
      goto LABEL_75;
    }
    goto LABEL_188;
  }
LABEL_187:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 320), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x200) == 0)
  {
LABEL_75:
    if ((v8 & 0x400) == 0) {
      goto LABEL_76;
    }
    goto LABEL_189;
  }
LABEL_188:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x400) == 0)
  {
LABEL_76:
    if ((v8 & 0x800) == 0) {
      goto LABEL_77;
    }
    goto LABEL_190;
  }
LABEL_189:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned __int8 *)(v5 + 307), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x800) == 0)
  {
LABEL_77:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_191;
  }
LABEL_190:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned __int8 *)(v5 + 328), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x1000) == 0)
  {
LABEL_78:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_192;
  }
LABEL_191:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned __int8 *)(v5 + 329), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x2000) == 0)
  {
LABEL_79:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_193;
  }
LABEL_192:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned __int8 *)(v5 + 330), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x4000) == 0)
  {
LABEL_80:
    if ((v8 & 0x8000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_194;
  }
LABEL_193:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned __int8 *)(v5 + 331), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x8000) == 0)
  {
LABEL_81:
    if ((v8 & 0x10000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_195;
  }
LABEL_194:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 332), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10000) == 0)
  {
LABEL_82:
    if ((v8 & 0x20000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_196;
  }
LABEL_195:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 336), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20000) == 0)
  {
LABEL_83:
    if ((v8 & 0x40000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_197;
  }
LABEL_196:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 340), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40000) == 0)
  {
LABEL_84:
    if ((v8 & 0x80000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_198;
  }
LABEL_197:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 344), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x80000) == 0)
  {
LABEL_85:
    if ((v8 & 0x100000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_199;
  }
LABEL_198:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned __int8 *)(v5 + 345), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x100000) == 0)
  {
LABEL_86:
    if ((v8 & 0x200000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_200;
  }
LABEL_199:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned __int8 *)(v5 + 346), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x200000) == 0)
  {
LABEL_87:
    if ((v8 & 0x400000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_201;
  }
LABEL_200:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x400000) == 0)
  {
LABEL_88:
    if ((v8 & 0x800000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_202;
  }
LABEL_201:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x800000) == 0)
  {
LABEL_89:
    if ((v8 & 0x1000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_203;
  }
LABEL_202:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 356), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x1000000) == 0)
  {
LABEL_90:
    if ((v8 & 0x2000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_204;
  }
LABEL_203:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 360), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x2000000) == 0)
  {
LABEL_91:
    if ((v8 & 0x4000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_205;
  }
LABEL_204:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x4000000) == 0)
  {
LABEL_92:
    if ((v8 & 0x8000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_206;
  }
LABEL_205:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 368), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x8000000) == 0)
  {
LABEL_93:
    if ((v8 & 0x10000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_207;
  }
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 372), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x10000000) == 0)
  {
LABEL_94:
    if ((v8 & 0x20000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_208;
  }
LABEL_207:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x20000000) == 0)
  {
LABEL_95:
    if ((v8 & 0x40000000) == 0) {
      goto LABEL_96;
    }
LABEL_209:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 480) & 0x80000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_210;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 380), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 480);
  if ((v8 & 0x40000000) != 0) {
    goto LABEL_209;
  }
LABEL_96:
  if ((v8 & 0x80000000) == 0) {
    goto LABEL_97;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
LABEL_97:
  int v9 = *(_DWORD *)(v5 + 484);
  if (v9)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 392), (uint64_t)a2, a4);
    int v9 = *(_DWORD *)(v5 + 484);
    if ((v9 & 2) == 0)
    {
LABEL_99:
      if ((v9 & 4) == 0) {
        goto LABEL_100;
      }
      goto LABEL_213;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_99;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 396), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 4) == 0)
  {
LABEL_100:
    if ((v9 & 8) == 0) {
      goto LABEL_101;
    }
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 400), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 8) == 0)
  {
LABEL_101:
    if ((v9 & 0x10) == 0) {
      goto LABEL_102;
    }
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 404), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x10) == 0)
  {
LABEL_102:
    if ((v9 & 0x20) == 0) {
      goto LABEL_103;
    }
    goto LABEL_216;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x20) == 0)
  {
LABEL_103:
    if ((v9 & 0x40) == 0) {
      goto LABEL_104;
    }
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x40) == 0)
  {
LABEL_104:
    if ((v9 & 0x80) == 0) {
      goto LABEL_105;
    }
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x80) == 0)
  {
LABEL_105:
    if ((v9 & 0x100) == 0) {
      goto LABEL_106;
    }
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x100) == 0)
  {
LABEL_106:
    if ((v9 & 0x200) == 0) {
      goto LABEL_107;
    }
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x200) == 0)
  {
LABEL_107:
    if ((v9 & 0x400) == 0) {
      goto LABEL_108;
    }
    goto LABEL_221;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x400) == 0)
  {
LABEL_108:
    if ((v9 & 0x800) == 0) {
      goto LABEL_109;
    }
    goto LABEL_222;
  }
LABEL_221:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x800) == 0)
  {
LABEL_109:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_223;
  }
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(unsigned int *)(v5 + 444), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x1000) == 0)
  {
LABEL_110:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_224;
  }
LABEL_223:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(unsigned int *)(v5 + 448), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x2000) == 0)
  {
LABEL_111:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_225;
  }
LABEL_224:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(unsigned int *)(v5 + 452), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x4000) == 0)
  {
LABEL_112:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_113;
    }
LABEL_226:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(unsigned int *)(v5 + 460), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 484) & 0x10000) == 0) {
      return this;
    }
    goto LABEL_227;
  }
LABEL_225:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(unsigned int *)(v5 + 456), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 484);
  if ((v9 & 0x8000) != 0) {
    goto LABEL_226;
  }
LABEL_113:
  if ((v9 & 0x10000) == 0) {
    return this;
  }
LABEL_227:
  uint64_t v10 = *(unsigned int *)(v5 + 464);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, v10, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::ByteSize(awd::metrics::LocationEmergencySessionStatistics *this)
{
  unsigned int v2 = *((_DWORD *)this + 118);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if (v2)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 118);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    unsigned int v2 = *((_DWORD *)this + 118);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  unsigned int v11 = v3 + 9;
  if ((v2 & 4) == 0) {
    unsigned int v11 = v3;
  }
  if ((v2 & 8) != 0) {
    v11 += 9;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t v4 = v11 + 9;
  }
  else {
    uint64_t v4 = v11;
  }
  if ((v2 & 0x20) != 0)
  {
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      unsigned int v2 = *((_DWORD *)this + 118);
    }
    else
    {
      int v13 = 1;
    }
    uint64_t v4 = (v4 + v13 + 1);
    if ((v2 & 0x40) == 0)
    {
LABEL_25:
      if ((v2 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_25;
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v4 = (v4 + v15 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_37:
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 10;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      unsigned int v2 = *((_DWORD *)this + 118);
    }
    else
    {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v17 + 1);
  }
LABEL_43:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_53;
  }
  if ((v2 & 0x100) != 0)
  {
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *((_DWORD *)this + 118);
    }
    else
    {
      int v21 = 1;
    }
    uint64_t v4 = (v4 + v21 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_46:
      if ((v2 & 0x400) == 0) {
        goto LABEL_47;
      }
      goto LABEL_97;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_46;
  }
  unint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v27 = 1;
  }
  uint64_t v4 = (v4 + v27 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_47:
    if ((v2 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_115;
  }
LABEL_97:
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v31 & 0x80000000) != 0)
  {
    int v32 = 10;
  }
  else if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v32 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_48:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_121;
  }
LABEL_115:
  int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if ((v37 & 0x80000000) != 0)
  {
    int v38 = 10;
  }
  else if (v37 >= 0x80)
  {
    int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v38 = 1;
  }
  uint64_t v4 = (v4 + v38 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_49:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_127;
  }
LABEL_121:
  int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v39 & 0x80000000) != 0)
  {
    int v40 = 10;
  }
  else if (v39 >= 0x80)
  {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v40 = 1;
  }
  uint64_t v4 = (v4 + v40 + 1);
  if ((v2 & 0x2000) == 0)
  {
LABEL_50:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_133;
  }
LABEL_127:
  unsigned int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if ((v41 & 0x80000000) != 0)
  {
    int v42 = 10;
  }
  else if (v41 >= 0x80)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v42 = 1;
  }
  uint64_t v4 = (v4 + v42 + 1);
  if ((v2 & 0x4000) == 0)
  {
LABEL_51:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_133:
  char v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v43 & 0x80000000) != 0)
  {
    int v44 = 10;
  }
  else if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    unsigned int v2 = *((_DWORD *)this + 118);
  }
  else
  {
    int v44 = 1;
  }
  uint64_t v4 = (v4 + v44 + 2);
  if ((v2 & 0x8000) != 0)
  {
LABEL_52:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 11))
       + 2;
    unsigned int v2 = *((_DWORD *)this + 118);
  }
LABEL_53:
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0) {
      LODWORD(v4) = v4 + 10;
    }
    if ((v2 & 0x20000) != 0)
    {
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
      if ((v18 & 0x80000000) != 0)
      {
        int v19 = 10;
      }
      else if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        unsigned int v2 = *((_DWORD *)this + 118);
      }
      else
      {
        int v19 = 1;
      }
      LODWORD(v4) = v4 + v19 + 2;
    }
    unsigned int v22 = v4 + 6;
    if ((v2 & 0x40000) == 0) {
      unsigned int v22 = v4;
    }
    if ((v2 & 0x80000) != 0) {
      unsigned int v23 = v22 + 6;
    }
    else {
      unsigned int v23 = v22;
    }
    if ((v2 & 0x100000) != 0)
    {
      unint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        unsigned int v2 = *((_DWORD *)this + 118);
      }
      else
      {
        int v25 = 1;
      }
      v23 += v25 + 2;
    }
    unsigned int v28 = v23 + 3;
    if ((v2 & 0x200000) == 0) {
      unsigned int v28 = v23;
    }
    if ((v2 & 0x400000) != 0) {
      uint64_t v4 = v28 + 3;
    }
    else {
      uint64_t v4 = v28;
    }
    if ((v2 & 0x800000) != 0)
    {
      int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
      if ((v29 & 0x80000000) != 0)
      {
        int v30 = 10;
      }
      else if (v29 >= 0x80)
      {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
        unsigned int v2 = *((_DWORD *)this + 118);
      }
      else
      {
        int v30 = 1;
      }
      uint64_t v4 = (v4 + v30 + 2);
    }
  }
  if (HIBYTE(v2))
  {
    unsigned int v33 = v4 + 10;
    if ((v2 & 0x1000000) == 0) {
      unsigned int v33 = v4;
    }
    if ((v2 & 0x2000000) != 0) {
      unsigned int v34 = v33 + 10;
    }
    else {
      unsigned int v34 = v33;
    }
    if ((v2 & 0x4000000) != 0)
    {
      int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 36);
      if ((v35 & 0x80000000) != 0)
      {
        int v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
        unsigned int v2 = *((_DWORD *)this + 118);
      }
      else
      {
        int v36 = 1;
      }
      v34 += v36 + 2;
    }
    if ((v2 & 0x8000000) != 0)
    {
      int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 37);
      if ((v45 & 0x80000000) != 0)
      {
        int v46 = 10;
      }
      else if (v45 >= 0x80)
      {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
        unsigned int v2 = *((_DWORD *)this + 118);
      }
      else
      {
        int v46 = 1;
      }
      v34 += v46 + 2;
    }
    unsigned int v47 = v34 + 3;
    if ((v2 & 0x10000000) == 0) {
      unsigned int v47 = v34;
    }
    if ((v2 & 0x20000000) != 0) {
      v47 += 3;
    }
    if ((v2 & 0x40000000) != 0) {
      uint64_t v4 = v47 + 3;
    }
    else {
      uint64_t v4 = v47;
    }
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = v4
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 19))
         + 2;
  }
  unsigned int v48 = *((_DWORD *)this + 119);
  if ((_BYTE)v48)
  {
    if (v48) {
      LODWORD(v4) = v4 + 3;
    }
    if ((v48 & 2) != 0)
    {
      uint64_t v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v49 & 0x80000000) != 0)
      {
        int v50 = 10;
      }
      else if (v49 >= 0x80)
      {
        int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
        unsigned int v48 = *((_DWORD *)this + 119);
      }
      else
      {
        int v50 = 1;
      }
      LODWORD(v4) = v4 + v50 + 2;
    }
    if ((v48 & 4) != 0)
    {
      uint64_t v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
      if (v51 >= 0x80)
      {
        int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
        unsigned int v48 = *((_DWORD *)this + 119);
      }
      else
      {
        int v52 = 1;
      }
      LODWORD(v4) = v4 + v52 + 2;
    }
    unsigned int v53 = v4 + 3;
    if ((v48 & 8) == 0) {
      unsigned int v53 = v4;
    }
    if ((v48 & 0x10) != 0) {
      uint64_t v4 = v53 + 3;
    }
    else {
      uint64_t v4 = v53;
    }
    if ((v48 & 0x20) != 0)
    {
      unsigned int v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
      if ((v54 & 0x80000000) != 0)
      {
        int v55 = 10;
      }
      else if (v54 >= 0x80)
      {
        int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
        unsigned int v48 = *((_DWORD *)this + 119);
      }
      else
      {
        int v55 = 1;
      }
      uint64_t v4 = (v4 + v55 + 2);
      if ((v48 & 0x40) == 0)
      {
LABEL_181:
        if ((v48 & 0x80) == 0) {
          goto LABEL_199;
        }
        goto LABEL_195;
      }
    }
    else if ((v48 & 0x40) == 0)
    {
      goto LABEL_181;
    }
    char v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if ((v56 & 0x80000000) != 0)
    {
      int v57 = 10;
    }
    else if (v56 >= 0x80)
    {
      int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v57 = 1;
    }
    uint64_t v4 = (v4 + v57 + 2);
    if ((v48 & 0x80) != 0)
    {
LABEL_195:
      unsigned int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 45);
      if (v58 >= 0x80)
      {
        int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
        unsigned int v48 = *((_DWORD *)this + 119);
      }
      else
      {
        int v59 = 1;
      }
      uint64_t v4 = (v4 + v59 + 2);
    }
  }
LABEL_199:
  if ((v48 & 0xFF00) == 0) {
    goto LABEL_251;
  }
  if ((v48 & 0x100) != 0) {
    uint64_t v4 = (v4 + 3);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v48 & 0x200) != 0)
  {
    uint64_t v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if (v60 >= 0x80)
    {
      int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v61 = 1;
    }
    uint64_t v4 = (v4 + v61 + 2);
    if ((v48 & 0x400) == 0)
    {
LABEL_205:
      if ((v48 & 0x800) == 0) {
        goto LABEL_206;
      }
      goto LABEL_221;
    }
  }
  else if ((v48 & 0x400) == 0)
  {
    goto LABEL_205;
  }
  int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
  if ((v62 & 0x80000000) != 0)
  {
    int v63 = 10;
  }
  else if (v62 >= 0x80)
  {
    int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v63 = 1;
  }
  uint64_t v4 = (v4 + v63 + 2);
  if ((v48 & 0x800) == 0)
  {
LABEL_206:
    if ((v48 & 0x1000) == 0) {
      goto LABEL_207;
    }
    goto LABEL_227;
  }
LABEL_221:
  char v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if ((v64 & 0x80000000) != 0)
  {
    int v65 = 10;
  }
  else if (v64 >= 0x80)
  {
    int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v65 = 1;
  }
  uint64_t v4 = (v4 + v65 + 2);
  if ((v48 & 0x1000) == 0)
  {
LABEL_207:
    if ((v48 & 0x2000) == 0) {
      goto LABEL_208;
    }
    goto LABEL_233;
  }
LABEL_227:
  char v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
  if ((v66 & 0x80000000) != 0)
  {
    int v67 = 10;
  }
  else if (v66 >= 0x80)
  {
    int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v67 = 1;
  }
  uint64_t v4 = (v4 + v67 + 2);
  if ((v48 & 0x2000) == 0)
  {
LABEL_208:
    if ((v48 & 0x4000) == 0) {
      goto LABEL_209;
    }
    goto LABEL_239;
  }
LABEL_233:
  int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if ((v68 & 0x80000000) != 0)
  {
    int v69 = 10;
  }
  else if (v68 >= 0x80)
  {
    int v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v69 = 1;
  }
  uint64_t v4 = (v4 + v69 + 2);
  if ((v48 & 0x4000) == 0)
  {
LABEL_209:
    if ((v48 & 0x8000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_245;
  }
LABEL_239:
  unsigned int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if ((v70 & 0x80000000) != 0)
  {
    int v71 = 10;
  }
  else if (v70 >= 0x80)
  {
    int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v71 = 1;
  }
  uint64_t v4 = (v4 + v71 + 2);
  if ((v48 & 0x8000) != 0)
  {
LABEL_245:
    unint64_t v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 52);
    if ((v72 & 0x80000000) != 0)
    {
      int v73 = 10;
    }
    else if (v72 >= 0x80)
    {
      int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v73 = 1;
    }
    uint64_t v4 = (v4 + v73 + 2);
  }
LABEL_251:
  if ((v48 & 0xFF0000) != 0)
  {
    unsigned int v74 = v4 + 3;
    if ((v48 & 0x10000) == 0) {
      unsigned int v74 = v4;
    }
    if ((v48 & 0x20000) != 0) {
      v74 += 3;
    }
    if ((v48 & 0x40000) != 0) {
      v74 += 10;
    }
    if ((v48 & 0x80000) != 0) {
      v74 += 10;
    }
    if ((v48 & 0x100000) != 0) {
      v74 += 10;
    }
    if ((v48 & 0x200000) != 0) {
      v74 += 10;
    }
    if ((v48 & 0x400000) != 0) {
      uint64_t v4 = v74 + 10;
    }
    else {
      uint64_t v4 = v74;
    }
    if ((v48 & 0x800000) != 0)
    {
      int v75 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 64);
      if ((v75 & 0x80000000) != 0)
      {
        int v76 = 10;
      }
      else if (v75 >= 0x80)
      {
        int v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v75);
        unsigned int v48 = *((_DWORD *)this + 119);
      }
      else
      {
        int v76 = 1;
      }
      uint64_t v4 = (v4 + v76 + 2);
    }
  }
  if (!HIBYTE(v48)) {
    goto LABEL_334;
  }
  if ((v48 & 0x1000000) != 0)
  {
    unsigned int v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 65);
    if ((v77 & 0x80000000) != 0)
    {
      int v78 = 10;
    }
    else if (v77 >= 0x80)
    {
      int v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v77);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v78 = 1;
    }
    LODWORD(v4) = v4 + v78 + 2;
  }
  if ((v48 & 0x2000000) != 0) {
    uint64_t v4 = (v4 + 3);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v48 & 0x4000000) != 0)
  {
    int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 66);
    if ((v79 & 0x80000000) != 0)
    {
      int v80 = 10;
    }
    else if (v79 >= 0x80)
    {
      int v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v80 = 1;
    }
    uint64_t v4 = (v4 + v80 + 2);
    if ((v48 & 0x8000000) == 0)
    {
LABEL_287:
      if ((v48 & 0x10000000) == 0) {
        goto LABEL_288;
      }
      goto LABEL_304;
    }
  }
  else if ((v48 & 0x8000000) == 0)
  {
    goto LABEL_287;
  }
  unsigned int v81 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 67);
  if ((v81 & 0x80000000) != 0)
  {
    int v82 = 10;
  }
  else if (v81 >= 0x80)
  {
    int v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v81);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v82 = 1;
  }
  uint64_t v4 = (v4 + v82 + 2);
  if ((v48 & 0x10000000) == 0)
  {
LABEL_288:
    if ((v48 & 0x20000000) == 0) {
      goto LABEL_289;
    }
LABEL_310:
    unint64_t v85 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 69);
    if ((v85 & 0x80000000) != 0)
    {
      int v86 = 10;
    }
    else if (v85 >= 0x80)
    {
      int v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v85);
      unsigned int v48 = *((_DWORD *)this + 119);
    }
    else
    {
      int v86 = 1;
    }
    uint64_t v4 = (v4 + v86 + 2);
    if ((v48 & 0x40000000) == 0)
    {
LABEL_290:
      if ((v48 & 0x80000000) == 0) {
        goto LABEL_334;
      }
      goto LABEL_325;
    }
    goto LABEL_316;
  }
LABEL_304:
  unint64_t v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 68);
  if ((v83 & 0x80000000) != 0)
  {
    int v84 = 10;
  }
  else if (v83 >= 0x80)
  {
    int v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83);
    unsigned int v48 = *((_DWORD *)this + 119);
  }
  else
  {
    int v84 = 1;
  }
  uint64_t v4 = (v4 + v84 + 2);
  if ((v48 & 0x20000000) != 0) {
    goto LABEL_310;
  }
LABEL_289:
  if ((v48 & 0x40000000) == 0) {
    goto LABEL_290;
  }
LABEL_316:
  uint64_t v87 = *((void *)this + 35);
  int v88 = *(unsigned __int8 *)(v87 + 23);
  char v89 = v88;
  uint64_t v90 = *(void *)(v87 + 8);
  if ((v88 & 0x80u) == 0) {
    unint64_t v91 = *(unsigned __int8 *)(v87 + 23);
  }
  else {
    unint64_t v91 = v90;
  }
  if (v91 >= 0x80)
  {
    int v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v91);
    int v88 = *(unsigned __int8 *)(v87 + 23);
    uint64_t v90 = *(void *)(v87 + 8);
    unsigned int v48 = *((_DWORD *)this + 119);
    char v89 = *(unsigned char *)(v87 + 23);
  }
  else
  {
    int v92 = 1;
  }
  if (v89 < 0) {
    int v88 = v90;
  }
  uint64_t v4 = (v4 + v92 + v88 + 2);
  if ((v48 & 0x80000000) != 0)
  {
LABEL_325:
    uint64_t v93 = *((void *)this + 36);
    int v94 = *(unsigned __int8 *)(v93 + 23);
    char v95 = v94;
    uint64_t v96 = *(void *)(v93 + 8);
    if ((v94 & 0x80u) == 0) {
      unint64_t v97 = *(unsigned __int8 *)(v93 + 23);
    }
    else {
      unint64_t v97 = v96;
    }
    if (v97 >= 0x80)
    {
      int v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v97);
      int v94 = *(unsigned __int8 *)(v93 + 23);
      uint64_t v96 = *(void *)(v93 + 8);
      char v95 = *(unsigned char *)(v93 + 23);
    }
    else
    {
      int v98 = 1;
    }
    if (v95 < 0) {
      int v94 = v96;
    }
    uint64_t v4 = (v4 + v98 + v94 + 2);
  }
LABEL_334:
  unsigned int v99 = *((_DWORD *)this + 120);
  if (!(_BYTE)v99) {
    goto LABEL_374;
  }
  if (v99)
  {
    char v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
    if (v100 >= 0x80)
    {
      int v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v101 = 1;
    }
    LODWORD(v4) = v4 + v101 + 2;
  }
  if ((v99 & 2) != 0)
  {
    int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v102 >= 0x80)
    {
      int v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v103 = 1;
    }
    LODWORD(v4) = v4 + v103 + 2;
  }
  unsigned int v104 = v4 + 3;
  if ((v99 & 4) == 0) {
    unsigned int v104 = v4;
  }
  if ((v99 & 8) != 0) {
    v104 += 3;
  }
  if ((v99 & 0x10) != 0) {
    uint64_t v4 = v104 + 3;
  }
  else {
    uint64_t v4 = v104;
  }
  if ((v99 & 0x20) != 0)
  {
    int v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 77);
    if ((v105 & 0x80000000) != 0)
    {
      int v106 = 10;
    }
    else if (v105 >= 0x80)
    {
      int v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v106 = 1;
    }
    uint64_t v4 = (v4 + v106 + 2);
    if ((v99 & 0x40) == 0)
    {
LABEL_354:
      if ((v99 & 0x80) == 0) {
        goto LABEL_374;
      }
      goto LABEL_368;
    }
  }
  else if ((v99 & 0x40) == 0)
  {
    goto LABEL_354;
  }
  char v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 78);
  if ((v107 & 0x80000000) != 0)
  {
    int v108 = 10;
  }
  else if (v107 >= 0x80)
  {
    int v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v108 = 1;
  }
  uint64_t v4 = (v4 + v108 + 2);
  if ((v99 & 0x80) != 0)
  {
LABEL_368:
    char v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 79);
    if ((v109 & 0x80000000) != 0)
    {
      int v110 = 10;
    }
    else if (v109 >= 0x80)
    {
      int v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v110 = 1;
    }
    uint64_t v4 = (v4 + v110 + 2);
  }
LABEL_374:
  if ((v99 & 0xFF00) != 0)
  {
    if ((v99 & 0x100) != 0)
    {
      char v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
      if (v111 >= 0x80)
      {
        int v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v112 = 1;
      }
      LODWORD(v4) = v4 + v112 + 2;
    }
    if ((v99 & 0x200) != 0)
    {
      char v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
      if (v113 >= 0x80)
      {
        int v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v114 = 1;
      }
      LODWORD(v4) = v4 + v114 + 2;
    }
    unsigned int v115 = v4 + 3;
    if ((v99 & 0x400) == 0) {
      unsigned int v115 = v4;
    }
    if ((v99 & 0x800) != 0) {
      v115 += 3;
    }
    if ((v99 & 0x1000) != 0) {
      v115 += 3;
    }
    if ((v99 & 0x2000) != 0) {
      v115 += 3;
    }
    if ((v99 & 0x4000) != 0) {
      uint64_t v4 = v115 + 3;
    }
    else {
      uint64_t v4 = v115;
    }
    if ((v99 & 0x8000) != 0)
    {
      int v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 83);
      if ((v116 & 0x80000000) != 0)
      {
        int v117 = 10;
      }
      else if (v116 >= 0x80)
      {
        int v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v117 = 1;
      }
      uint64_t v4 = (v4 + v117 + 2);
    }
  }
  if ((v99 & 0xFF0000) != 0)
  {
    if ((v99 & 0x10000) != 0)
    {
      unint64_t v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 84);
      if ((v118 & 0x80000000) != 0)
      {
        int v119 = 10;
      }
      else if (v118 >= 0x80)
      {
        int v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v119 = 1;
      }
      LODWORD(v4) = v4 + v119 + 2;
    }
    if ((v99 & 0x20000) != 0)
    {
      int v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 85);
      if ((v120 & 0x80000000) != 0)
      {
        int v121 = 10;
      }
      else if (v120 >= 0x80)
      {
        int v121 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v121 = 1;
      }
      LODWORD(v4) = v4 + v121 + 2;
    }
    unsigned int v122 = v4 + 3;
    if ((v99 & 0x40000) == 0) {
      unsigned int v122 = v4;
    }
    if ((v99 & 0x80000) != 0) {
      v122 += 3;
    }
    if ((v99 & 0x100000) != 0) {
      uint64_t v4 = v122 + 3;
    }
    else {
      uint64_t v4 = v122;
    }
    if ((v99 & 0x200000) != 0)
    {
      unint64_t v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 87);
      if ((v123 & 0x80000000) != 0)
      {
        int v124 = 10;
      }
      else if (v123 >= 0x80)
      {
        int v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v124 = 1;
      }
      uint64_t v4 = (v4 + v124 + 2);
      if ((v99 & 0x400000) == 0)
      {
LABEL_427:
        if ((v99 & 0x800000) == 0) {
          goto LABEL_445;
        }
        goto LABEL_439;
      }
    }
    else if ((v99 & 0x400000) == 0)
    {
      goto LABEL_427;
    }
    v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 88);
    if (v125 >= 0x80)
    {
      int v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v126 = 1;
    }
    uint64_t v4 = (v4 + v126 + 2);
    if ((v99 & 0x800000) != 0)
    {
LABEL_439:
      v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 89);
      if ((v127 & 0x80000000) != 0)
      {
        int v128 = 10;
      }
      else if (v127 >= 0x80)
      {
        int v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
        unsigned int v99 = *((_DWORD *)this + 120);
      }
      else
      {
        int v128 = 1;
      }
      uint64_t v4 = (v4 + v128 + 2);
    }
  }
LABEL_445:
  if (!HIBYTE(v99)) {
    goto LABEL_503;
  }
  if ((v99 & 0x1000000) != 0)
  {
    v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 90);
    if ((v129 & 0x80000000) != 0)
    {
      int v130 = 10;
    }
    else if (v129 >= 0x80)
    {
      int v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      unsigned int v99 = *((_DWORD *)this + 120);
    }
    else
    {
      int v130 = 1;
    }
    uint64_t v4 = (v4 + v130 + 2);
    if ((v99 & 0x2000000) == 0)
    {
LABEL_448:
      if ((v99 & 0x4000000) == 0) {
        goto LABEL_449;
      }
      goto LABEL_467;
    }
  }
  else if ((v99 & 0x2000000) == 0)
  {
    goto LABEL_448;
  }
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 91);
  if ((v131 & 0x80000000) != 0)
  {
    int v132 = 10;
  }
  else if (v131 >= 0x80)
  {
    int v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v132 = 1;
  }
  uint64_t v4 = (v4 + v132 + 2);
  if ((v99 & 0x4000000) == 0)
  {
LABEL_449:
    if ((v99 & 0x8000000) == 0) {
      goto LABEL_450;
    }
    goto LABEL_473;
  }
LABEL_467:
  v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 92);
  if ((v133 & 0x80000000) != 0)
  {
    int v134 = 10;
  }
  else if (v133 >= 0x80)
  {
    int v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v134 = 1;
  }
  uint64_t v4 = (v4 + v134 + 2);
  if ((v99 & 0x8000000) == 0)
  {
LABEL_450:
    if ((v99 & 0x10000000) == 0) {
      goto LABEL_451;
    }
    goto LABEL_479;
  }
LABEL_473:
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 93);
  if ((v135 & 0x80000000) != 0)
  {
    int v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    int v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v136 = 1;
  }
  uint64_t v4 = (v4 + v136 + 2);
  if ((v99 & 0x10000000) == 0)
  {
LABEL_451:
    if ((v99 & 0x20000000) == 0) {
      goto LABEL_452;
    }
    goto LABEL_485;
  }
LABEL_479:
  v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 94);
  if ((v137 & 0x80000000) != 0)
  {
    int v138 = 10;
  }
  else if (v137 >= 0x80)
  {
    int v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v138 = 1;
  }
  uint64_t v4 = (v4 + v138 + 2);
  if ((v99 & 0x20000000) == 0)
  {
LABEL_452:
    if ((v99 & 0x40000000) == 0) {
      goto LABEL_453;
    }
    goto LABEL_491;
  }
LABEL_485:
  v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 95);
  if ((v139 & 0x80000000) != 0)
  {
    int v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    int v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v140 = 1;
  }
  uint64_t v4 = (v4 + v140 + 2);
  if ((v99 & 0x40000000) == 0)
  {
LABEL_453:
    if ((v99 & 0x80000000) == 0) {
      goto LABEL_503;
    }
    goto LABEL_497;
  }
LABEL_491:
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 96);
  if ((v141 & 0x80000000) != 0)
  {
    int v142 = 10;
  }
  else if (v141 >= 0x80)
  {
    int v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
    unsigned int v99 = *((_DWORD *)this + 120);
  }
  else
  {
    int v142 = 1;
  }
  uint64_t v4 = (v4 + v142 + 2);
  if ((v99 & 0x80000000) != 0)
  {
LABEL_497:
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 97);
    if ((v143 & 0x80000000) != 0)
    {
      int v144 = 10;
    }
    else if (v143 >= 0x80)
    {
      int v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
    }
    else
    {
      int v144 = 1;
    }
    uint64_t v4 = (v4 + v144 + 2);
  }
LABEL_503:
  int v145 = *((_DWORD *)this + 121);
  if (!(_BYTE)v145) {
    goto LABEL_567;
  }
  if (v145)
  {
    unint64_t v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 98);
    if ((v146 & 0x80000000) != 0)
    {
      int v147 = 10;
    }
    else if (v146 >= 0x80)
    {
      int v147 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v146);
      int v145 = *((_DWORD *)this + 121);
    }
    else
    {
      int v147 = 1;
    }
    uint64_t v4 = (v4 + v147 + 2);
    if ((v145 & 2) == 0)
    {
LABEL_506:
      if ((v145 & 4) == 0) {
        goto LABEL_507;
      }
      goto LABEL_525;
    }
  }
  else if ((v145 & 2) == 0)
  {
    goto LABEL_506;
  }
  unint64_t v148 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 99);
  if ((v148 & 0x80000000) != 0)
  {
    int v149 = 10;
  }
  else if (v148 >= 0x80)
  {
    int v149 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v148);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v149 = 1;
  }
  uint64_t v4 = (v4 + v149 + 2);
  if ((v145 & 4) == 0)
  {
LABEL_507:
    if ((v145 & 8) == 0) {
      goto LABEL_508;
    }
    goto LABEL_531;
  }
LABEL_525:
  unint64_t v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 100);
  if ((v150 & 0x80000000) != 0)
  {
    int v151 = 10;
  }
  else if (v150 >= 0x80)
  {
    int v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v150);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v151 = 1;
  }
  uint64_t v4 = (v4 + v151 + 2);
  if ((v145 & 8) == 0)
  {
LABEL_508:
    if ((v145 & 0x10) == 0) {
      goto LABEL_509;
    }
    goto LABEL_537;
  }
LABEL_531:
  v152 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 101);
  if ((v152 & 0x80000000) != 0)
  {
    int v153 = 10;
  }
  else if (v152 >= 0x80)
  {
    int v153 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v152);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v153 = 1;
  }
  uint64_t v4 = (v4 + v153 + 2);
  if ((v145 & 0x10) == 0)
  {
LABEL_509:
    if ((v145 & 0x20) == 0) {
      goto LABEL_510;
    }
    goto LABEL_543;
  }
LABEL_537:
  v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 104);
  if ((v154 & 0x80000000) != 0)
  {
    int v155 = 10;
  }
  else if (v154 >= 0x80)
  {
    int v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v155 = 1;
  }
  uint64_t v4 = (v4 + v155 + 2);
  if ((v145 & 0x20) == 0)
  {
LABEL_510:
    if ((v145 & 0x40) == 0) {
      goto LABEL_511;
    }
    goto LABEL_552;
  }
LABEL_543:
  uint64_t v156 = *((void *)this + 51);
  int v157 = *(unsigned __int8 *)(v156 + 23);
  char v158 = v157;
  uint64_t v159 = *(void *)(v156 + 8);
  if ((v157 & 0x80u) == 0) {
    unint64_t v160 = *(unsigned __int8 *)(v156 + 23);
  }
  else {
    unint64_t v160 = v159;
  }
  if (v160 >= 0x80)
  {
    int v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v160);
    int v157 = *(unsigned __int8 *)(v156 + 23);
    uint64_t v159 = *(void *)(v156 + 8);
    int v145 = *((_DWORD *)this + 121);
    char v158 = *(unsigned char *)(v156 + 23);
  }
  else
  {
    int v161 = 1;
  }
  if (v158 < 0) {
    int v157 = v159;
  }
  uint64_t v4 = (v4 + v161 + v157 + 2);
  if ((v145 & 0x40) == 0)
  {
LABEL_511:
    if ((v145 & 0x80) == 0) {
      goto LABEL_567;
    }
    goto LABEL_561;
  }
LABEL_552:
  uint64_t v162 = *((void *)this + 53);
  int v163 = *(unsigned __int8 *)(v162 + 23);
  char v164 = v163;
  uint64_t v165 = *(void *)(v162 + 8);
  if ((v163 & 0x80u) == 0) {
    unint64_t v166 = *(unsigned __int8 *)(v162 + 23);
  }
  else {
    unint64_t v166 = v165;
  }
  if (v166 >= 0x80)
  {
    int v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v166);
    int v163 = *(unsigned __int8 *)(v162 + 23);
    uint64_t v165 = *(void *)(v162 + 8);
    int v145 = *((_DWORD *)this + 121);
    char v164 = *(unsigned char *)(v162 + 23);
  }
  else
  {
    int v167 = 1;
  }
  if (v164 < 0) {
    int v163 = v165;
  }
  uint64_t v4 = (v4 + v167 + v163 + 2);
  if ((v145 & 0x80) != 0)
  {
LABEL_561:
    v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 105);
    if ((v168 & 0x80000000) != 0)
    {
      int v169 = 10;
    }
    else if (v168 >= 0x80)
    {
      int v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
      int v145 = *((_DWORD *)this + 121);
    }
    else
    {
      int v169 = 1;
    }
    uint64_t v4 = (v4 + v169 + 2);
  }
LABEL_567:
  if ((v145 & 0xFF00) == 0) {
    goto LABEL_576;
  }
  if ((v145 & 0x100) != 0)
  {
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v170 & 0x80000000) != 0)
    {
      int v171 = 10;
    }
    else if (v170 >= 0x80)
    {
      int v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v170);
      int v145 = *((_DWORD *)this + 121);
    }
    else
    {
      int v171 = 1;
    }
    uint64_t v4 = (v4 + v171 + 2);
    if ((v145 & 0x200) == 0)
    {
LABEL_570:
      if ((v145 & 0x400) == 0) {
        goto LABEL_571;
      }
      goto LABEL_590;
    }
  }
  else if ((v145 & 0x200) == 0)
  {
    goto LABEL_570;
  }
  v172 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
  if ((v172 & 0x80000000) != 0)
  {
    int v173 = 10;
  }
  else if (v172 >= 0x80)
  {
    int v173 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v172);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v173 = 1;
  }
  uint64_t v4 = (v4 + v173 + 2);
  if ((v145 & 0x400) == 0)
  {
LABEL_571:
    if ((v145 & 0x800) == 0) {
      goto LABEL_572;
    }
    goto LABEL_596;
  }
LABEL_590:
  v174 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 110);
  if ((v174 & 0x80000000) != 0)
  {
    int v175 = 10;
  }
  else if (v174 >= 0x80)
  {
    int v175 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v174);
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v175 = 1;
  }
  uint64_t v4 = (v4 + v175 + 2);
  if ((v145 & 0x800) == 0)
  {
LABEL_572:
    if ((v145 & 0x1000) == 0) {
      goto LABEL_573;
    }
    goto LABEL_602;
  }
LABEL_596:
  v176 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 111);
  if ((v176 & 0x80000000) != 0)
  {
    int v177 = 12;
  }
  else if (v176 >= 0x80)
  {
    int v177 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v176) + 2;
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v177 = 3;
  }
  uint64_t v4 = (v177 + v4);
  if ((v145 & 0x1000) == 0)
  {
LABEL_573:
    if ((v145 & 0x2000) == 0) {
      goto LABEL_574;
    }
    goto LABEL_608;
  }
LABEL_602:
  v178 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 112);
  if ((v178 & 0x80000000) != 0)
  {
    int v179 = 12;
  }
  else if (v178 >= 0x80)
  {
    int v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v178) + 2;
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v179 = 3;
  }
  uint64_t v4 = (v179 + v4);
  if ((v145 & 0x2000) == 0)
  {
LABEL_574:
    if ((v145 & 0x4000) == 0) {
      goto LABEL_575;
    }
    goto LABEL_614;
  }
LABEL_608:
  v180 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 113);
  if ((v180 & 0x80000000) != 0)
  {
    int v181 = 12;
  }
  else if (v180 >= 0x80)
  {
    int v181 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v180) + 2;
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v181 = 3;
  }
  uint64_t v4 = (v181 + v4);
  if ((v145 & 0x4000) == 0)
  {
LABEL_575:
    if ((v145 & 0x8000) == 0) {
      goto LABEL_576;
    }
    goto LABEL_620;
  }
LABEL_614:
  unsigned int v182 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 114);
  if ((v182 & 0x80000000) != 0)
  {
    int v183 = 12;
  }
  else if (v182 >= 0x80)
  {
    int v183 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v182) + 2;
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v183 = 3;
  }
  uint64_t v4 = (v183 + v4);
  if ((v145 & 0x8000) == 0)
  {
LABEL_576:
    if ((v145 & 0x10000) == 0) {
      goto LABEL_632;
    }
    goto LABEL_626;
  }
LABEL_620:
  unsigned int v184 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 115);
  if ((v184 & 0x80000000) != 0)
  {
    int v185 = 12;
  }
  else if (v184 >= 0x80)
  {
    int v185 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v184) + 2;
    int v145 = *((_DWORD *)this + 121);
  }
  else
  {
    int v185 = 3;
  }
  uint64_t v4 = (v185 + v4);
  if ((v145 & 0x10000) != 0)
  {
LABEL_626:
    unsigned int v186 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 116);
    if ((v186 & 0x80000000) != 0)
    {
      int v187 = 12;
    }
    else if (v186 >= 0x80)
    {
      int v187 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v186) + 2;
    }
    else
    {
      int v187 = 3;
    }
    uint64_t v4 = (v187 + v4);
  }
LABEL_632:
  *((_DWORD *)this + 117) = v4;
  return v4;
}

void awd::metrics::LocationEmergencySessionStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencySessionStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencySessionStatistics::CopyFrom(awd::metrics::LocationEmergencySessionStatistics *this, const awd::metrics::LocationEmergencySessionStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencySessionStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationEmergencySessionStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::IsInitialized(awd::metrics::LocationEmergencySessionStatistics *this)
{
  return 1;
}

double awd::metrics::LocationEmergencySessionStatistics::Swap(awd::metrics::LocationEmergencySessionStatistics *this, awd::metrics::LocationEmergencySessionStatistics *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    uint64_t v8 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v8;
    uint64_t v9 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v9;
    LODWORD(v8) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v8;
    LODWORD(v9) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v9;
    LODWORD(v9) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v9;
    LODWORD(v8) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v8;
    LOBYTE(v8) = *((unsigned char *)this + 132);
    *((unsigned char *)this + 132) = *((unsigned char *)a2 + 132);
    *((unsigned char *)a2 + 132) = v8;
    LOBYTE(v8) = *((unsigned char *)this + 133);
    *((unsigned char *)this + 133) = *((unsigned char *)a2 + 133);
    *((unsigned char *)a2 + 133) = v8;
    LODWORD(v8) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v8;
    uint64_t v10 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v10;
    uint64_t v11 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v11;
    LODWORD(v8) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v8;
    LODWORD(v8) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v8;
    LOBYTE(v8) = *((unsigned char *)this + 134);
    *((unsigned char *)this + 134) = *((unsigned char *)a2 + 134);
    *((unsigned char *)a2 + 134) = v8;
    LOBYTE(v8) = *((unsigned char *)this + 135);
    *((unsigned char *)this + 135) = *((unsigned char *)a2 + 135);
    *((unsigned char *)a2 + 135) = v8;
    LOBYTE(v8) = *((unsigned char *)this + 164);
    *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
    *((unsigned char *)a2 + 164) = v8;
    uint64_t v12 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 165);
    *((unsigned char *)this + 165) = *((unsigned char *)a2 + 165);
    *((unsigned char *)a2 + 165) = v12;
    LODWORD(v12) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v12;
    LODWORD(v12) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 166);
    *((unsigned char *)this + 166) = *((unsigned char *)a2 + 166);
    *((unsigned char *)a2 + 166) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 167);
    *((unsigned char *)this + 167) = *((unsigned char *)a2 + 167);
    *((unsigned char *)a2 + 167) = v12;
    LODWORD(v12) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v12;
    LODWORD(v12) = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v12;
    LODWORD(v12) = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 212);
    *((unsigned char *)this + 212) = *((unsigned char *)a2 + 212);
    *((unsigned char *)a2 + 212) = v12;
    LODWORD(v12) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v12;
    LODWORD(v12) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v12;
    LODWORD(v12) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v12;
    LODWORD(v12) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v12;
    LODWORD(v12) = *((_DWORD *)this + 50);
    *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v12;
    LODWORD(v12) = *((_DWORD *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v12;
    LODWORD(v12) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 213);
    *((unsigned char *)this + 213) = *((unsigned char *)a2 + 213);
    *((unsigned char *)a2 + 213) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 214);
    *((unsigned char *)this + 214) = *((unsigned char *)a2 + 214);
    *((unsigned char *)a2 + 214) = v12;
    uint64_t v13 = *((void *)this + 27);
    *((void *)this + 27) = *((void *)a2 + 27);
    *((void *)a2 + 27) = v13;
    uint64_t v14 = *((void *)this + 28);
    *((void *)this + 28) = *((void *)a2 + 28);
    *((void *)a2 + 28) = v14;
    uint64_t v15 = *((void *)this + 29);
    *((void *)this + 29) = *((void *)a2 + 29);
    *((void *)a2 + 29) = v15;
    uint64_t v16 = *((void *)this + 30);
    *((void *)this + 30) = *((void *)a2 + 30);
    *((void *)a2 + 30) = v16;
    double result = *((double *)this + 31);
    *((void *)this + 31) = *((void *)a2 + 31);
    *((double *)a2 + 31) = result;
    LODWORD(v12) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v12;
    LODWORD(v12) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v12;
    LOBYTE(v12) = *((unsigned char *)this + 215);
    *((unsigned char *)this + 215) = *((unsigned char *)a2 + 215);
    *((unsigned char *)a2 + 215) = v12;
    LODWORD(v12) = *((_DWORD *)this + 66);
    *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v12;
    LODWORD(v12) = *((_DWORD *)this + 67);
    *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v12;
    LODWORD(v12) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v12;
    LODWORD(v12) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v12;
    uint64_t v18 = *((void *)this + 35);
    *((void *)this + 35) = *((void *)a2 + 35);
    *((void *)a2 + 35) = v18;
    uint64_t v19 = *((void *)this + 36);
    *((void *)this + 36) = *((void *)a2 + 36);
    *((void *)a2 + 36) = v19;
    LODWORD(v19) = *((_DWORD *)this + 74);
    *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v19;
    LODWORD(v19) = *((_DWORD *)this + 75);
    *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 304);
    *((unsigned char *)this + 304) = *((unsigned char *)a2 + 304);
    *((unsigned char *)a2 + 304) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 305);
    *((unsigned char *)this + 305) = *((unsigned char *)a2 + 305);
    *((unsigned char *)a2 + 305) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 306);
    *((unsigned char *)this + 306) = *((unsigned char *)a2 + 306);
    *((unsigned char *)a2 + 306) = v19;
    LODWORD(v19) = *((_DWORD *)this + 77);
    *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
    *((_DWORD *)a2 + 77) = v19;
    LODWORD(v19) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v19;
    LODWORD(v19) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v19;
    LODWORD(v19) = *((_DWORD *)this + 80);
    *((_DWORD *)this + 80) = *((_DWORD *)a2 + 80);
    *((_DWORD *)a2 + 80) = v19;
    LODWORD(v19) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 307);
    *((unsigned char *)this + 307) = *((unsigned char *)a2 + 307);
    *((unsigned char *)a2 + 307) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 328);
    *((unsigned char *)this + 328) = *((unsigned char *)a2 + 328);
    *((unsigned char *)a2 + 328) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 329);
    *((unsigned char *)this + 329) = *((unsigned char *)a2 + 329);
    *((unsigned char *)a2 + 329) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 330);
    *((unsigned char *)this + 330) = *((unsigned char *)a2 + 330);
    *((unsigned char *)a2 + 330) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 331);
    *((unsigned char *)this + 331) = *((unsigned char *)a2 + 331);
    *((unsigned char *)a2 + 331) = v19;
    LODWORD(v19) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v19;
    LODWORD(v19) = *((_DWORD *)this + 84);
    *((_DWORD *)this + 84) = *((_DWORD *)a2 + 84);
    *((_DWORD *)a2 + 84) = v19;
    LODWORD(v19) = *((_DWORD *)this + 85);
    *((_DWORD *)this + 85) = *((_DWORD *)a2 + 85);
    *((_DWORD *)a2 + 85) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 344);
    *((unsigned char *)this + 344) = *((unsigned char *)a2 + 344);
    *((unsigned char *)a2 + 344) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 345);
    *((unsigned char *)this + 345) = *((unsigned char *)a2 + 345);
    *((unsigned char *)a2 + 345) = v19;
    LOBYTE(v19) = *((unsigned char *)this + 346);
    *((unsigned char *)this + 346) = *((unsigned char *)a2 + 346);
    *((unsigned char *)a2 + 346) = v19;
    LODWORD(v19) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v19;
    LODWORD(v19) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v19;
    LODWORD(v19) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v19;
    LODWORD(v19) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v19;
    LODWORD(v19) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v19;
    LODWORD(v19) = *((_DWORD *)this + 92);
    *((_DWORD *)this + 92) = *((_DWORD *)a2 + 92);
    *((_DWORD *)a2 + 92) = v19;
    LODWORD(v19) = *((_DWORD *)this + 93);
    *((_DWORD *)this + 93) = *((_DWORD *)a2 + 93);
    *((_DWORD *)a2 + 93) = v19;
    LODWORD(v19) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v19;
    LODWORD(v19) = *((_DWORD *)this + 95);
    *((_DWORD *)this + 95) = *((_DWORD *)a2 + 95);
    *((_DWORD *)a2 + 95) = v19;
    LODWORD(v19) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v19;
    LODWORD(v19) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v19;
    LODWORD(v19) = *((_DWORD *)this + 98);
    *((_DWORD *)this + 98) = *((_DWORD *)a2 + 98);
    *((_DWORD *)a2 + 98) = v19;
    LODWORD(v19) = *((_DWORD *)this + 99);
    *((_DWORD *)this + 99) = *((_DWORD *)a2 + 99);
    *((_DWORD *)a2 + 99) = v19;
    LODWORD(v19) = *((_DWORD *)this + 100);
    *((_DWORD *)this + 100) = *((_DWORD *)a2 + 100);
    *((_DWORD *)a2 + 100) = v19;
    LODWORD(v19) = *((_DWORD *)this + 101);
    *((_DWORD *)this + 101) = *((_DWORD *)a2 + 101);
    *((_DWORD *)a2 + 101) = v19;
    LODWORD(v19) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v19;
    uint64_t v20 = *((void *)this + 51);
    *((void *)this + 51) = *((void *)a2 + 51);
    *((void *)a2 + 51) = v20;
    uint64_t v21 = *((void *)this + 53);
    *((void *)this + 53) = *((void *)a2 + 53);
    *((void *)a2 + 53) = v21;
    LODWORD(v21) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v21;
    LODWORD(v21) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v21;
    LODWORD(v21) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v21;
    LODWORD(v21) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v21;
    LODWORD(v21) = *((_DWORD *)this + 111);
    *((_DWORD *)this + 111) = *((_DWORD *)a2 + 111);
    *((_DWORD *)a2 + 111) = v21;
    LODWORD(v21) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v21;
    LODWORD(v21) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v21;
    LODWORD(v21) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v21;
    LODWORD(v21) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v21;
    LODWORD(v21) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v21;
    LODWORD(v21) = *((_DWORD *)this + 118);
    *((_DWORD *)this + 118) = *((_DWORD *)a2 + 118);
    *((_DWORD *)a2 + 118) = v21;
    LODWORD(v21) = *((_DWORD *)this + 119);
    *((_DWORD *)this + 119) = *((_DWORD *)a2 + 119);
    *((_DWORD *)a2 + 119) = v21;
    LODWORD(v21) = *((_DWORD *)this + 120);
    *((_DWORD *)this + 120) = *((_DWORD *)a2 + 120);
    *((_DWORD *)a2 + 120) = v21;
    LODWORD(v21) = *((_DWORD *)this + 121);
    *((_DWORD *)this + 121) = *((_DWORD *)a2 + 121);
    *((_DWORD *)a2 + 121) = v21;
    LODWORD(v21) = *((_DWORD *)this + 117);
    *((_DWORD *)this + 117) = *((_DWORD *)a2 + 117);
    *((_DWORD *)a2 + 117) = v21;
  }
  return result;
}

void *awd::metrics::LocationEmergencySessionStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencySessionStatistics");
}

uint64_t awd::metrics::LocationMapMatching::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationMapMatching *awd::metrics::LocationMapMatching::LocationMapMatching(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  *(void *)this = &unk_26D7BA798;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationMapMatching::MergeFrom(this, a2);
  return this;
}

void sub_224918FE0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMapMatching::MergeFrom(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    uint64_t v8 = (std::string *)*((void *)this + 2);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_16:
    int v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 7) = v10;
    if ((*((_DWORD *)a2 + 10) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 8) = v5;
  }
}

void sub_22491914C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMapMatching::~LocationMapMatching(awd::metrics::LocationMapMatching *this)
{
  *(void *)this = &unk_26D7BA798;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA798;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA798;
  awd::metrics::LocationMapMatching::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMapMatching::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMapMatching::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMapMatching::default_instance(awd::metrics::LocationMapMatching *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMapMatching::default_instance_;
  if (!awd::metrics::LocationMapMatching::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMapMatching::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMapMatching::New(awd::metrics::LocationMapMatching *this)
{
}

uint64_t awd::metrics::LocationMapMatching::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 40);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMapMatching::MergePartialFromCodedStream(awd::metrics::LocationMapMatching *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_26:
          int v12 = *((_DWORD *)this + 10) | 1;
          *((_DWORD *)this + 10) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        int v12 = *((_DWORD *)this + 10);
LABEL_29:
        *((_DWORD *)this + 10) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v17 >= v13 || *v17 != 24) {
          continue;
        }
        uint64_t v14 = v17 + 1;
        *((void *)a2 + 1) = v14;
LABEL_35:
        unsigned int v27 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
          if (!result) {
            return result;
          }
          unsigned int v18 = v27;
          uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          uint64_t v19 = v14 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v13 || *v19 != 32) {
          continue;
        }
        uint64_t v15 = v19 + 1;
        *((void *)a2 + 1) = v15;
LABEL_43:
        unsigned int v26 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26;
          uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v20 = *v15;
          uint64_t v21 = v15 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v21 >= v13 || *v21 != 40) {
          continue;
        }
        uint64_t v16 = v21 + 1;
        *((void *)a2 + 1) = v16;
LABEL_51:
        unsigned int v25 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v16;
          unsigned int v23 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 8) = v22;
        *((_DWORD *)this + 10) |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_43;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_51;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMapMatching::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
    if ((v5[10] & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = v5[8];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMapMatching::ByteSize(awd::metrics::LocationMapMatching *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_38;
  }
  if (*((unsigned char *)this + 40))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 10);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      int v15 = 2;
    }
    uint64_t v3 = (v15 + v3);
  }
LABEL_38:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMapMatching::CheckTypeAndMergeFrom(awd::metrics::LocationMapMatching *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMapMatching::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMapMatching::CopyFrom(awd::metrics::LocationMapMatching *this, const awd::metrics::LocationMapMatching *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMapMatching *))(*(void *)this + 32))(this);
    awd::metrics::LocationMapMatching::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMapMatching::IsInitialized(awd::metrics::LocationMapMatching *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMapMatching::Swap(uint64_t this, awd::metrics::LocationMapMatching *a2)
{
  if (a2 != (awd::metrics::LocationMapMatching *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
  }
  return this;
}

void *awd::metrics::LocationMapMatching::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMapMatching");
}

double awd::metrics::LocationRealTimeHarvest::SharedCtor(awd::metrics::LocationRealTimeHarvest *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationRealTimeHarvest *awd::metrics::LocationRealTimeHarvest::LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  *(void *)this = &unk_26D7BA810;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationRealTimeHarvest::MergeFrom(this, a2);
  return this;
}

void sub_224919B58(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationRealTimeHarvest::MergeFrom(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((void *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v8 = *((void *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((void *)this + 3) = v8;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    uint64_t v9 = *((void *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((void *)this + 4) = v9;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0) {
      return;
    }
LABEL_9:
    uint64_t v5 = *((void *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((void *)this + 5) = v5;
  }
}

void sub_224919C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationRealTimeHarvest::~LocationRealTimeHarvest(awd::metrics::LocationRealTimeHarvest *this)
{
  *(void *)this = &unk_26D7BA810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BA810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA810;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationRealTimeHarvest::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationRealTimeHarvest::default_instance(awd::metrics::LocationRealTimeHarvest *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationRealTimeHarvest::default_instance_;
  if (!awd::metrics::LocationRealTimeHarvest::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationRealTimeHarvest::default_instance_;
  }
  return result;
}

void awd::metrics::LocationRealTimeHarvest::New(awd::metrics::LocationRealTimeHarvest *this)
{
}

uint64_t awd::metrics::LocationRealTimeHarvest::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 52))
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationRealTimeHarvest::MergePartialFromCodedStream(awd::metrics::LocationRealTimeHarvest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 32);
  uint64_t v6 = (unint64_t *)((char *)this + 40);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_26:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_29:
        unint64_t v24 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v24);
          if (!result) {
            return result;
          }
          unint64_t v17 = v24;
          unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((void *)this + 2) = v17;
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v18 >= v10 || *v18 != 24) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)a2 + 1) = v14;
LABEL_37:
        unint64_t v24 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v24);
          if (!result) {
            return result;
          }
          unint64_t v19 = v24;
          unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v19 = *v14;
          unsigned int v20 = v14 + 1;
          *((void *)a2 + 1) = v20;
        }
        *((void *)this + 3) = v19;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v20 >= v10 || *v20 != 32) {
          continue;
        }
        int v15 = v20 + 1;
        *((void *)a2 + 1) = v15;
LABEL_45:
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v15;
          uint64_t v21 = v15 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v21 >= v10 || *v21 != 40) {
          continue;
        }
        uint64_t v16 = v21 + 1;
        *((void *)a2 + 1) = v16;
LABEL_53:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v6 = *v16;
          unsigned int v22 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (v22 != (unsigned __int8 *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_45;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_53;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationRealTimeHarvest::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationRealTimeHarvest::ByteSize(awd::metrics::LocationRealTimeHarvest *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (*((unsigned char *)this + 52))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 52) & 2) != 0)
  {
LABEL_7:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    int v2 = *((_DWORD *)this + 13);
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_14:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_10:
  if ((v2 & 0x10) != 0) {
LABEL_11:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 5))
       + 1;
LABEL_12:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationRealTimeHarvest::CheckTypeAndMergeFrom(awd::metrics::LocationRealTimeHarvest *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationRealTimeHarvest::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationRealTimeHarvest::CopyFrom(awd::metrics::LocationRealTimeHarvest *this, const awd::metrics::LocationRealTimeHarvest *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationRealTimeHarvest *))(*(void *)this + 32))(this);
    awd::metrics::LocationRealTimeHarvest::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationRealTimeHarvest::IsInitialized(awd::metrics::LocationRealTimeHarvest *this)
{
  return 1;
}

uint64_t awd::metrics::LocationRealTimeHarvest::Swap(uint64_t this, awd::metrics::LocationRealTimeHarvest *a2)
{
  if (a2 != (awd::metrics::LocationRealTimeHarvest *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v6;
  }
  return this;
}

void *awd::metrics::LocationRealTimeHarvest::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationRealTimeHarvest");
}

double awd::metrics::LocationSecondaryDeviceRequest::SharedCtor(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationSecondaryDeviceRequest *awd::metrics::LocationSecondaryDeviceRequest::LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  *(void *)this = &unk_26D7BA888;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, a2);
  return this;
}

void sub_22491A4D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 13) |= 2u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 13) |= 4u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  int v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x100u;
    *((_DWORD *)this + 11) = v6;
  }
}

void sub_22491A678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSecondaryDeviceRequest::~LocationSecondaryDeviceRequest(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  *(void *)this = &unk_26D7BA888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BA888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA888;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::default_instance(awd::metrics::LocationSecondaryDeviceRequest *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationSecondaryDeviceRequest::default_instance_;
  if (!awd::metrics::LocationSecondaryDeviceRequest::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSecondaryDeviceRequest::default_instance_;
  }
  return result;
}

void awd::metrics::LocationSecondaryDeviceRequest::New(awd::metrics::LocationSecondaryDeviceRequest *this)
{
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::MergePartialFromCodedStream(awd::metrics::LocationSecondaryDeviceRequest *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v35 = (unint64_t *)((char *)this + 8);
  int v4 = (unsigned int *)((char *)this + 16);
  int v5 = (unsigned int *)((char *)this + 20);
  int v6 = (unsigned int *)((char *)this + 24);
  uint64_t v7 = (unsigned int *)((char *)this + 28);
  int v8 = (unsigned int *)((char *)this + 32);
  int v9 = (unsigned int *)((char *)this + 36);
  int v10 = (unsigned int *)((char *)this + 40);
  int v11 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v35 = *v16;
          unint64_t v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_34:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            unsigned int v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v35);
        if (result)
        {
          unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_37:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v18;
          unsigned int v26 = v18 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v26 >= v15 || *v26 != 24) {
          continue;
        }
        unint64_t v19 = v26 + 1;
        *((void *)a2 + 1) = v19;
LABEL_45:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v19;
          unsigned int v27 = v19 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v27 >= v15 || *v27 != 32) {
          continue;
        }
        unsigned int v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v20;
          unsigned int v28 = v20 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v28 >= v15 || *v28 != 40) {
          continue;
        }
        uint64_t v21 = v28 + 1;
        *((void *)a2 + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v21;
          int v29 = v21 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v29 >= v15 || *v29 != 48) {
          continue;
        }
        unsigned int v22 = v29 + 1;
        *((void *)a2 + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v22;
          int v30 = v22 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v30 >= v15 || *v30 != 56) {
          continue;
        }
        unsigned int v23 = v30 + 1;
        *((void *)a2 + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v23;
          int v31 = v23 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v31 >= v15 || *v31 != 64) {
          continue;
        }
        unint64_t v24 = v31 + 1;
        *((void *)a2 + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v24;
          int v32 = v24 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if ((unint64_t)v32 >= v15 || *v32 != 72) {
          continue;
        }
        unsigned int v25 = v32 + 1;
        *((void *)a2 + 1) = v25;
LABEL_93:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v11 = *v25;
          unsigned int v33 = (unsigned __int8 *)(v25 + 1);
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 13) |= 0x100u;
        if (v33 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_45;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_69;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_77;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_85;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_93;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
    if ((v5[13] & 0x100) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v7 = v5[11];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::ByteSize(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  int v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_36:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_44:
    unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_48:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationSecondaryDeviceRequest::CheckTypeAndMergeFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSecondaryDeviceRequest::CopyFrom(awd::metrics::LocationSecondaryDeviceRequest *this, const awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSecondaryDeviceRequest *))(*(void *)this + 32))(this);
    awd::metrics::LocationSecondaryDeviceRequest::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::IsInitialized(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::Swap(uint64_t this, awd::metrics::LocationSecondaryDeviceRequest *a2)
{
  if (a2 != (awd::metrics::LocationSecondaryDeviceRequest *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

void *awd::metrics::LocationSecondaryDeviceRequest::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSecondaryDeviceRequest");
}

BOOL awd::metrics::CompassSession_CalibrationLevel_IsValid(awd::metrics *this)
{
  return (this + 1) < 8;
}

BOOL awd::metrics::CompassSession_CoverState_IsValid(awd::metrics *this)
{
  return this < 3;
}

uint64_t awd::metrics::CompassSession_Rotation::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::CompassSession_Rotation *awd::metrics::CompassSession_Rotation::CompassSession_Rotation(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BA900;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::CompassSession_Rotation::MergeFrom(this, a2);
  return this;
}

void sub_22491B274(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::CompassSession_Rotation::MergeFrom(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 24))
    {
      float result = *((float *)a2 + 2);
      *((_DWORD *)this + 6) |= 1u;
      *((float *)this + 2) = result;
      int v5 = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *((float *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((float *)this + 3) = result;
    if ((*((_DWORD *)a2 + 6) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *((float *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((float *)this + 4) = result;
  }
  return result;
}

void sub_22491B35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession_Rotation::~CompassSession_Rotation(awd::metrics::CompassSession_Rotation *this)
{
  *(void *)this = &unk_26D7BA900;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BA900;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA900;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::CompassSession_Rotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::CompassSession_Rotation::default_instance(awd::metrics::CompassSession_Rotation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::CompassSession_Rotation::default_instance_;
  if (!awd::metrics::CompassSession_Rotation::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::CompassSession_Rotation::default_instance_;
  }
  return result;
}

void awd::metrics::CompassSession_Rotation::New(awd::metrics::CompassSession_Rotation *this)
{
}

uint64_t awd::metrics::CompassSession_Rotation::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(awd::metrics::CompassSession_Rotation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_27;
        }
        unsigned int v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 2) = v13;
        *((_DWORD *)this + 6) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 21)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0) {
            return 0;
          }
          *((_DWORD *)this + 3) = v12;
          *((_DWORD *)this + 6) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 29)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 5) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unsigned int v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((_DWORD *)this + 4) = v11;
    *((_DWORD *)this + 6) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 24);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v4 + 12), a3);
    if ((*(_DWORD *)(v4 + 24) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 24);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  float v6 = *(float *)(v4 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t awd::metrics::CompassSession_Rotation::ByteSize(awd::metrics::CompassSession_Rotation *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 24);
  if (*((unsigned char *)this + 24))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

float awd::metrics::CompassSession_Rotation::CheckTypeAndMergeFrom(awd::metrics::CompassSession_Rotation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::CompassSession_Rotation::MergeFrom(this, lpsrc);
}

float awd::metrics::CompassSession_Rotation::CopyFrom(awd::metrics::CompassSession_Rotation *this, const awd::metrics::CompassSession_Rotation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::CompassSession_Rotation *))(*(void *)this + 32))(this);
    return awd::metrics::CompassSession_Rotation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::CompassSession_Rotation::IsInitialized(awd::metrics::CompassSession_Rotation *this)
{
  return 1;
}

float awd::metrics::CompassSession_Rotation::Swap(awd::metrics::CompassSession_Rotation *this, awd::metrics::CompassSession_Rotation *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    float result = *((float *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((float *)a2 + 4) = result;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    int v6 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return result;
}

void *awd::metrics::CompassSession_Rotation::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.CompassSession.Rotation");
}

double awd::metrics::CompassSession::SharedCtor(awd::metrics::CompassSession *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0xFFFFFFFF00000000;
  *((void *)this + 18) = 0;
  *(void *)((char *)this + 212) = 0;
  *(void *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((unsigned char *)this + 200) = 0;
  return result;
}

awd::metrics::CompassSession *awd::metrics::CompassSession::CompassSession(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  *(void *)this = &unk_26D7BA978;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0xFFFFFFFF00000000;
  *((void *)this + 18) = 0;
  *(void *)((char *)this + 212) = 0;
  *(void *)((char *)this + 204) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *((unsigned char *)this + 200) = 0;
  awd::metrics::CompassSession::MergeFrom(this, a2);
  return this;
}

void sub_22491B9F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession::MergeFrom(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
  }
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v13 = *((void *)a2 + 1);
    *((_DWORD *)this + 53) |= 1u;
    *((void *)this + 1) = v13;
    unsigned int v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_61;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v14 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 53) |= 2u;
  int v15 = (std::string *)*((void *)this + 2);
  if (v15 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v15, v14);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v16 = *((void *)a2 + 3);
  *((_DWORD *)this + 53) |= 4u;
  *((void *)this + 3) = v16;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v17 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 53) |= 8u;
  *((_DWORD *)this + 8) = v17;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_64:
    int v19 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 53) |= 0x20u;
    *((_DWORD *)this + 10) = v19;
    unsigned int v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_63:
  int v18 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 53) |= 0x10u;
  *((_DWORD *)this + 9) = v18;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x20) != 0) {
    goto LABEL_64;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_65:
  int v20 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 53) |= 0x40u;
  *((_DWORD *)this + 11) = v20;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 53) |= 0x80u;
    *((_DWORD *)this + 12) = v5;
    unsigned int v4 = *((_DWORD *)a2 + 53);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v21 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 53) |= 0x100u;
    *((_DWORD *)this + 13) = v21;
    unsigned int v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_73;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  *((_DWORD *)this + 53) |= 0x200u;
  unsigned int v22 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 7);
  if (!v22) {
    operator new();
  }
  unsigned int v23 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 7);
  if (!v23) {
    unsigned int v23 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 56);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v22, v23);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_78;
  }
LABEL_73:
  *((_DWORD *)this + 53) |= 0x400u;
  unint64_t v24 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 8);
  if (!v24) {
    operator new();
  }
  unsigned int v25 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 8);
  if (!v25) {
    unsigned int v25 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 64);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v24, v25);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)this + 53) |= 0x800u;
  unsigned int v26 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 9);
  if (!v26) {
    operator new();
  }
  unsigned int v27 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 9);
  if (!v27) {
    unsigned int v27 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 72);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v26, v27);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)this + 53) |= 0x1000u;
  unsigned int v28 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 10);
  if (!v28) {
    operator new();
  }
  int v29 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 10);
  if (!v29) {
    int v29 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 80);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v28, v29);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_93;
  }
LABEL_88:
  *((_DWORD *)this + 53) |= 0x2000u;
  int v30 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 11);
  if (!v30) {
    operator new();
  }
  int v31 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 11);
  if (!v31) {
    int v31 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 88);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v30, v31);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_93:
  *((_DWORD *)this + 53) |= 0x4000u;
  int v32 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 12);
  if (!v32) {
    operator new();
  }
  unsigned int v33 = (const awd::metrics::CompassSession_Rotation *)*((void *)a2 + 12);
  if (!v33) {
    unsigned int v33 = *(const awd::metrics::CompassSession_Rotation **)(awd::metrics::CompassSession::default_instance_ + 96);
  }
  awd::metrics::CompassSession_Rotation::MergeFrom(v32, v33);
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *((_DWORD *)a2 + 26);
    *((_DWORD *)this + 53) |= 0x8000u;
    *((_DWORD *)this + 26) = v6;
    unsigned int v4 = *((_DWORD *)a2 + 53);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v34 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 53) |= 0x10000u;
    *((_DWORD *)this + 27) = v34;
    unsigned int v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_101;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v35 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 53) |= 0x20000u;
  *((_DWORD *)this + 28) = v35;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v36 = *((_DWORD *)a2 + 29);
  *((_DWORD *)this + 53) |= 0x40000u;
  *((_DWORD *)this + 29) = v36;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v37 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 53) |= 0x80000u;
  *((_DWORD *)this + 30) = v37;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_104;
  }
LABEL_103:
  int v38 = *((_DWORD *)a2 + 31);
  *((_DWORD *)this + 53) |= 0x100000u;
  *((_DWORD *)this + 31) = v38;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_105;
  }
LABEL_104:
  int v39 = *((_DWORD *)a2 + 34);
  *((_DWORD *)this + 53) |= 0x200000u;
  *((_DWORD *)this + 34) = v39;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_105:
  uint64_t v40 = *((void *)a2 + 16);
  *((_DWORD *)this + 53) |= 0x400000u;
  *((void *)this + 16) = v40;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    uint64_t v7 = *((void *)a2 + 18);
    *((_DWORD *)this + 53) |= 0x800000u;
    *((void *)this + 18) = v7;
    unsigned int v4 = *((_DWORD *)a2 + 53);
  }
LABEL_33:
  if (!HIBYTE(v4)) {
    goto LABEL_44;
  }
  if ((v4 & 0x1000000) != 0)
  {
    int v8 = *((_DWORD *)a2 + 35);
    if ((v8 + 1) >= 8) {
      awd::metrics::CompassSession::MergeFrom();
    }
    *((_DWORD *)this + 53) |= 0x1000000u;
    *((_DWORD *)this + 35) = v8;
    unsigned int v4 = *((_DWORD *)a2 + 53);
  }
  if ((v4 & 0x2000000) != 0)
  {
    int v45 = *((_DWORD *)a2 + 38);
    *((_DWORD *)this + 53) |= 0x2000000u;
    *((_DWORD *)this + 38) = v45;
    unsigned int v4 = *((_DWORD *)a2 + 53);
    if ((v4 & 0x4000000) == 0)
    {
LABEL_39:
      if ((v4 & 0x8000000) == 0) {
        goto LABEL_40;
      }
      goto LABEL_114;
    }
  }
  else if ((v4 & 0x4000000) == 0)
  {
    goto LABEL_39;
  }
  int v46 = *((_DWORD *)a2 + 39);
  *((_DWORD *)this + 53) |= 0x4000000u;
  *((_DWORD *)this + 39) = v46;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_115;
  }
LABEL_114:
  int v47 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 53) |= 0x8000000u;
  *((_DWORD *)this + 40) = v47;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_116;
  }
LABEL_115:
  int v48 = *((_DWORD *)a2 + 41);
  *((_DWORD *)this + 53) |= 0x10000000u;
  *((_DWORD *)this + 41) = v48;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_42:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_43;
    }
LABEL_117:
    int v50 = *((_DWORD *)a2 + 43);
    *((_DWORD *)this + 53) |= 0x40000000u;
    *((_DWORD *)this + 43) = v50;
    if ((*((_DWORD *)a2 + 53) & 0x80000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_118;
  }
LABEL_116:
  int v49 = *((_DWORD *)a2 + 42);
  *((_DWORD *)this + 53) |= 0x20000000u;
  *((_DWORD *)this + 42) = v49;
  unsigned int v4 = *((_DWORD *)a2 + 53);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_117;
  }
LABEL_43:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_44;
  }
LABEL_118:
  int v51 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 53) |= 0x80000000;
  *((_DWORD *)this + 44) = v51;
LABEL_44:
  LOBYTE(v9) = *((unsigned char *)a2 + 216);
  if (!(_BYTE)v9) {
    return;
  }
  if (*((unsigned char *)a2 + 216))
  {
    int v10 = *((_DWORD *)a2 + 45);
    *((_DWORD *)this + 54) |= 1u;
    *((_DWORD *)this + 45) = v10;
    int v9 = *((_DWORD *)a2 + 54);
  }
  if ((v9 & 2) != 0)
  {
    unsigned int v11 = *((_DWORD *)a2 + 46);
    if (v11 >= 3) {
      awd::metrics::CompassSession::MergeFrom();
    }
    *((_DWORD *)this + 54) |= 2u;
    *((_DWORD *)this + 46) = v11;
    int v9 = *((_DWORD *)a2 + 54);
  }
  if ((v9 & 4) != 0)
  {
    int v41 = *((_DWORD *)a2 + 47);
    *((_DWORD *)this + 54) |= 4u;
    *((_DWORD *)this + 47) = v41;
    int v9 = *((_DWORD *)a2 + 54);
    if ((v9 & 8) == 0)
    {
LABEL_52:
      if ((v9 & 0x10) == 0) {
        goto LABEL_53;
      }
      goto LABEL_109;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_52;
  }
  int v42 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 54) |= 8u;
  *((_DWORD *)this + 48) = v42;
  int v9 = *((_DWORD *)a2 + 54);
  if ((v9 & 0x10) == 0)
  {
LABEL_53:
    if ((v9 & 0x20) == 0) {
      goto LABEL_54;
    }
    goto LABEL_110;
  }
LABEL_109:
  int v43 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 54) |= 0x10u;
  *((_DWORD *)this + 49) = v43;
  int v9 = *((_DWORD *)a2 + 54);
  if ((v9 & 0x20) == 0)
  {
LABEL_54:
    if ((v9 & 0x40) == 0) {
      return;
    }
    goto LABEL_55;
  }
LABEL_110:
  char v44 = *((unsigned char *)a2 + 200);
  *((_DWORD *)this + 54) |= 0x20u;
  *((unsigned char *)this + 200) = v44;
  if ((*((_DWORD *)a2 + 54) & 0x40) != 0)
  {
LABEL_55:
    int v12 = *((_DWORD *)a2 + 51);
    *((_DWORD *)this + 54) |= 0x40u;
    *((_DWORD *)this + 51) = v12;
  }
}

void sub_22491C1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::CompassSession::~CompassSession(awd::metrics::CompassSession *this)
{
  *(void *)this = &unk_26D7BA978;
  awd::metrics::CompassSession::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA978;
  awd::metrics::CompassSession::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA978;
  awd::metrics::CompassSession::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::CompassSession::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  if ((void *)awd::metrics::CompassSession::default_instance_ != v1)
  {
    uint64_t v4 = v1[7];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[8];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[9];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[10];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[11];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    this = (void *)v1[12];
    if (this)
    {
      int v9 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v9();
    }
  }
  return this;
}

uint64_t awd::metrics::CompassSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 208) = a2;
  return this;
}

uint64_t awd::metrics::CompassSession::default_instance(awd::metrics::CompassSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::CompassSession::default_instance_;
  if (!awd::metrics::CompassSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::CompassSession::default_instance_;
  }
  return result;
}

void awd::metrics::CompassSession::New(awd::metrics::CompassSession *this)
{
}

uint64_t awd::metrics::CompassSession::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 212);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(void *)(this + 40) = 0;
    unsigned int v1 = *(_DWORD *)(this + 212);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    if ((v1 & 0x200) != 0)
    {
      uint64_t v3 = *(void *)(this + 56);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x400) != 0)
    {
      uint64_t v4 = *(void *)(this + 64);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x800) != 0)
    {
      uint64_t v5 = *(void *)(this + 72);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x1000) != 0)
    {
      uint64_t v6 = *(void *)(this + 80);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 24))
        {
          *(void *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(this + 88);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 24))
        {
          *(void *)(v7 + 8) = 0;
          *(_DWORD *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    if ((v1 & 0x4000) != 0)
    {
      uint64_t v8 = *(void *)(this + 96);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 24))
        {
          *(void *)(v8 + 8) = 0;
          *(_DWORD *)(v8 + 16) = 0;
        }
        *(_DWORD *)(v8 + 24) = 0;
        unsigned int v1 = *(_DWORD *)(this + 212);
      }
    }
    *(_DWORD *)(this + 104) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(this + 144) = 0;
    *(_OWORD *)(this + 108) = 0u;
    *(_OWORD *)(this + 124) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_DWORD *)(this + 140) = -1;
    *(void *)(this + 160) = 0;
    *(void *)(this + 168) = 0;
    *(void *)(this + 152) = 0;
    *(_DWORD *)(this + 176) = 0;
  }
  if (*(unsigned char *)(this + 216))
  {
    *(_DWORD *)(this + 204) = 0;
    *(void *)(this + 188) = 0;
    *(void *)(this + 180) = 0;
    *(void *)(this + 193) = 0;
  }
  *(void *)(this + 212) = 0;
  return this;
}

uint64_t awd::metrics::CompassSession::MergePartialFromCodedStream(awd::metrics::CompassSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 24);
  uint64_t v5 = (unint64_t *)((char *)this + 128);
  v135 = (unsigned int *)((char *)this + 152);
  int v136 = (unint64_t *)((char *)this + 144);
  v133 = (unsigned int *)((char *)this + 160);
  int v134 = (unsigned int *)((char *)this + 156);
  int v132 = (unsigned int *)((char *)this + 164);
  int v130 = (unint64_t *)((char *)this + 8);
  v131 = (unsigned int *)((char *)this + 168);
  uint64_t v6 = (unsigned int *)((char *)this + 172);
  uint64_t v7 = (unsigned int *)((char *)this + 176);
  uint64_t v8 = (unsigned int *)((char *)this + 192);
  int v9 = (unsigned int *)((char *)this + 196);
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v130);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v130 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 53) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
          goto LABEL_152;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_152:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v55 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v16;
          int v55 = v16 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 53) |= 4u;
        if ((unint64_t)v55 >= v13 || *v55 != 56) {
          continue;
        }
        int v17 = v55 + 1;
        *((void *)a2 + 1) = v17;
LABEL_160:
        unsigned int v137 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v56 = v137;
          int v57 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v56 = *v17;
          int v57 = v17 + 1;
          *((void *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 8) = v56;
        *((_DWORD *)this + 53) |= 8u;
        if ((unint64_t)v57 >= v13 || *v57 != 64) {
          continue;
        }
        int v18 = v57 + 1;
        *((void *)a2 + 1) = v18;
LABEL_168:
        unsigned int v137 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v58 = v137;
          int v59 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v58 = *v18;
          int v59 = v18 + 1;
          *((void *)a2 + 1) = v59;
        }
        *((_DWORD *)this + 10) = v58;
        int v19 = *((_DWORD *)this + 53) | 0x20;
        *((_DWORD *)this + 53) = v19;
        if ((unint64_t)v59 >= v13 || *v59 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v59 + 1;
LABEL_176:
        *((_DWORD *)this + 53) = v19 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v60 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v60 >= v20 || *v60 != 80) {
          continue;
        }
        int v21 = v60 + 1;
        *((void *)a2 + 1) = v21;
LABEL_182:
        unsigned int v137 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v61 = v137;
          int v62 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v61 = *v21;
          int v62 = v21 + 1;
          *((void *)a2 + 1) = v62;
        }
        *((_DWORD *)this + 9) = v61;
        *((_DWORD *)this + 53) |= 0x10u;
        if ((unint64_t)v62 >= v20 || *v62 != 88) {
          continue;
        }
        unsigned int v22 = v62 + 1;
        *((void *)a2 + 1) = v22;
LABEL_190:
        unsigned int v137 = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v63 = v137;
          char v64 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v63 = *v22;
          char v64 = v22 + 1;
          *((void *)a2 + 1) = v64;
        }
        *((_DWORD *)this + 11) = v63;
        *((_DWORD *)this + 53) |= 0x40u;
        if ((unint64_t)v64 >= v20 || *v64 != 96) {
          continue;
        }
        unsigned int v23 = v64 + 1;
        *((void *)a2 + 1) = v23;
LABEL_198:
        unsigned int v137 = 0;
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v65 = v137;
          char v66 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v65 = *v23;
          char v66 = v23 + 1;
          *((void *)a2 + 1) = v66;
        }
        *((_DWORD *)this + 12) = v65;
        *((_DWORD *)this + 53) |= 0x80u;
        if ((unint64_t)v66 >= v20 || *v66 != 104) {
          continue;
        }
        unint64_t v24 = v66 + 1;
        *((void *)a2 + 1) = v24;
LABEL_206:
        unsigned int v137 = 0;
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v67 = v137;
          int v68 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v67 = *v24;
          int v68 = v24 + 1;
          *((void *)a2 + 1) = v68;
        }
        *((_DWORD *)this + 13) = v67;
        int v25 = *((_DWORD *)this + 53) | 0x100;
        *((_DWORD *)this + 53) = v25;
        if ((unint64_t)v68 >= v20 || *v68 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 1;
LABEL_214:
        *((_DWORD *)this + 53) = v25 | 0x200;
        int v69 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 7);
        if (!v69) {
          operator new();
        }
        unsigned int v137 = 0;
        unsigned int v70 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v70 >= *((void *)a2 + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v70;
          *((void *)a2 + 1) = v70 + 1;
        }
        int v71 = *((_DWORD *)a2 + 14);
        int v72 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v71 + 1;
        if (v71 >= v72) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v69, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v73 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v73, 1);
        int v75 = v73 - 1;
        if (v75 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v75;
        }
        int v76 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v76 >= *((void *)a2 + 2) || *v76 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v76 + 1;
LABEL_228:
        *((_DWORD *)this + 53) |= 0x400u;
        unsigned int v77 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 8);
        if (!v77) {
          operator new();
        }
        unsigned int v137 = 0;
        int v78 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v78 >= *((void *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v78;
          *((void *)a2 + 1) = v78 + 1;
        }
        int v79 = *((_DWORD *)a2 + 14);
        int v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v77, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v81 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v81, 1);
        int v82 = v81 - 1;
        if (v82 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v82;
        }
        unint64_t v83 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v83 <= 1 || *v83 != 130 || v83[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v83 + 2;
LABEL_243:
        *((_DWORD *)this + 53) |= 0x800u;
        int v84 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 9);
        if (!v84) {
          operator new();
        }
        unsigned int v137 = 0;
        unint64_t v85 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v85 >= *((void *)a2 + 2) || *v85 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v85;
          *((void *)a2 + 1) = v85 + 1;
        }
        int v86 = *((_DWORD *)a2 + 14);
        int v87 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v86 + 1;
        if (v86 >= v87) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v84, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v88 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v88, 1);
        int v89 = v88 - 1;
        if (v89 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v89;
        }
        uint64_t v90 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 <= 1 || *v90 != 138 || v90[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v90 + 2;
LABEL_258:
        *((_DWORD *)this + 53) |= 0x1000u;
        unint64_t v91 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 10);
        if (!v91) {
          operator new();
        }
        unsigned int v137 = 0;
        int v92 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v92 >= *((void *)a2 + 2) || *v92 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v92;
          *((void *)a2 + 1) = v92 + 1;
        }
        int v93 = *((_DWORD *)a2 + 14);
        int v94 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v93 + 1;
        if (v93 >= v94) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v91, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v95 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v96;
        }
        unint64_t v97 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v97 <= 1 || *v97 != 146 || v97[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v97 + 2;
LABEL_273:
        *((_DWORD *)this + 53) |= 0x2000u;
        int v98 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 11);
        if (!v98) {
          operator new();
        }
        unsigned int v137 = 0;
        unsigned int v99 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v99 >= *((void *)a2 + 2) || *v99 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v99;
          *((void *)a2 + 1) = v99 + 1;
        }
        int v100 = *((_DWORD *)a2 + 14);
        int v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v98, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v102 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v102, 1);
        int v103 = v102 - 1;
        if (v103 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v103;
        }
        unsigned int v104 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v104 <= 1 || *v104 != 154 || v104[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v104 + 2;
LABEL_288:
        *((_DWORD *)this + 53) |= 0x4000u;
        int v105 = (awd::metrics::CompassSession_Rotation *)*((void *)this + 12);
        if (!v105) {
          operator new();
        }
        unsigned int v137 = 0;
        int v106 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v106 >= *((void *)a2 + 2) || *v106 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137))return 0; {
        }
          }
        else
        {
          unsigned int v137 = *v106;
          *((void *)a2 + 1) = v106 + 1;
        }
        int v107 = *((_DWORD *)a2 + 14);
        int v108 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v107 + 1;
        if (v107 >= v108) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::CompassSession_Rotation::MergePartialFromCodedStream(v105, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v109 = *((_DWORD *)a2 + 14);
        BOOL v74 = __OFSUB__(v109, 1);
        int v110 = v109 - 1;
        if (v110 < 0 == v74) {
          *((_DWORD *)a2 + 14) = v110;
        }
        char v111 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v111 <= 1 || *v111 != 165 || v111[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v111 + 2;
LABEL_303:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 26) = v137;
        *((_DWORD *)this + 53) |= 0x8000u;
        int v112 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v112 < 2 || *v112 != 173 || v112[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v112 + 2;
LABEL_308:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 27) = v137;
        *((_DWORD *)this + 53) |= 0x10000u;
        char v113 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v113 < 2 || *v113 != 181 || v113[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v113 + 2;
LABEL_313:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 28) = v137;
        *((_DWORD *)this + 53) |= 0x20000u;
        int v114 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v114 < 2 || *v114 != 189 || v114[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v114 + 2;
LABEL_318:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 29) = v137;
        *((_DWORD *)this + 53) |= 0x40000u;
        unsigned int v115 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v115 < 2 || *v115 != 197 || v115[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v115 + 2;
LABEL_323:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 30) = v137;
        *((_DWORD *)this + 53) |= 0x80000u;
        int v116 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v116 < 2 || *v116 != 205 || v116[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v116 + 2;
LABEL_328:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 31) = v137;
        *((_DWORD *)this + 53) |= 0x100000u;
        int v117 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v117 < 2 || *v117 != 213 || v117[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v117 + 2;
LABEL_333:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 34) = v137;
        *((_DWORD *)this + 53) |= 0x200000u;
        unint64_t v118 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        if ((int)v26 - (int)v118 < 2 || *v118 != 216 || v118[1] != 1) {
          continue;
        }
        unsigned int v27 = v118 + 2;
        *((void *)a2 + 1) = v27;
LABEL_338:
        if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v119 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v27;
          int v119 = v27 + 1;
          *((void *)a2 + 1) = v119;
        }
        *((_DWORD *)this + 53) |= 0x400000u;
        if ((int)v26 - (int)v119 < 2 || *v119 != 224 || v119[1] != 1) {
          continue;
        }
        unsigned int v28 = v119 + 2;
        *((void *)a2 + 1) = v28;
LABEL_347:
        if ((unint64_t)v28 >= v26 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v136);
          if (!result) {
            return result;
          }
          int v120 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *int v136 = *v28;
          int v120 = v28 + 1;
          *((void *)a2 + 1) = v120;
        }
        *((_DWORD *)this + 53) |= 0x800000u;
        if ((int)v26 - (int)v120 < 2 || *v120 != 232 || v120[1] != 1) {
          continue;
        }
        int v29 = (char *)(v120 + 2);
        *((void *)a2 + 1) = v29;
LABEL_356:
        unsigned int v137 = 0;
        if ((unint64_t)v29 >= v26 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v121 = v137;
        }
        else
        {
          unsigned int v121 = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        if (v121 + 1 <= 7)
        {
          *((_DWORD *)this + 53) |= 0x1000000u;
          *((_DWORD *)this + 35) = v121;
        }
        unsigned int v122 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        if ((int)v30 - (int)v122 < 2 || *v122 != 240 || v122[1] != 1) {
          continue;
        }
        int v31 = v122 + 2;
        *((void *)a2 + 1) = v31;
LABEL_367:
        if ((unint64_t)v31 >= v30 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v135);
          if (!result) {
            return result;
          }
          unint64_t v123 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v135 = *v31;
          unint64_t v123 = v31 + 1;
          *((void *)a2 + 1) = v123;
        }
        *((_DWORD *)this + 53) |= 0x2000000u;
        if ((int)v30 - (int)v123 < 2 || *v123 != 248 || v123[1] != 1) {
          continue;
        }
        int v32 = v123 + 2;
        *((void *)a2 + 1) = v32;
LABEL_376:
        if ((unint64_t)v32 >= v30 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v134);
          if (!result) {
            return result;
          }
          int v124 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          *int v134 = *v32;
          int v124 = v32 + 1;
          *((void *)a2 + 1) = v124;
        }
        *((_DWORD *)this + 53) |= 0x4000000u;
        if ((int)v30 - (int)v124 < 2 || *v124 != 128 || v124[1] != 2) {
          continue;
        }
        unsigned int v33 = v124 + 2;
        *((void *)a2 + 1) = v33;
LABEL_385:
        if ((unint64_t)v33 >= v30 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v133);
          if (!result) {
            return result;
          }
          v125 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v133 = *v33;
          v125 = v33 + 1;
          *((void *)a2 + 1) = v125;
        }
        *((_DWORD *)this + 53) |= 0x8000000u;
        if ((int)v30 - (int)v125 < 2 || *v125 != 136 || v125[1] != 2) {
          continue;
        }
        int v34 = v125 + 2;
        *((void *)a2 + 1) = v34;
LABEL_394:
        if ((unint64_t)v34 >= v30 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v132);
          if (!result) {
            return result;
          }
          int v126 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          *int v132 = *v34;
          int v126 = v34 + 1;
          *((void *)a2 + 1) = v126;
        }
        *((_DWORD *)this + 53) |= 0x10000000u;
        if ((int)v30 - (int)v126 < 2 || *v126 != 144 || v126[1] != 2) {
          continue;
        }
        int v35 = v126 + 2;
        *((void *)a2 + 1) = v35;
LABEL_403:
        if ((unint64_t)v35 >= v30 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v131);
          if (!result) {
            return result;
          }
          v127 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v131 = *v35;
          v127 = v35 + 1;
          *((void *)a2 + 1) = v127;
        }
        *((_DWORD *)this + 53) |= 0x20000000u;
        if ((int)v30 - (int)v127 < 2 || *v127 != 152 || v127[1] != 2) {
          continue;
        }
        int v36 = v127 + 2;
        *((void *)a2 + 1) = v36;
LABEL_412:
        if ((unint64_t)v36 >= v30 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v128 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v36;
          int v128 = v36 + 1;
          *((void *)a2 + 1) = v128;
        }
        *((_DWORD *)this + 53) |= 0x40000000u;
        if ((int)v30 - (int)v128 < 2 || *v128 != 160 || v128[1] != 2) {
          continue;
        }
        int v37 = v128 + 2;
        *((void *)a2 + 1) = v37;
LABEL_421:
        if ((unint64_t)v37 >= v30 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          v129 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v37;
          v129 = v37 + 1;
          *((void *)a2 + 1) = v129;
        }
        *((_DWORD *)this + 53) |= 0x80000000;
        if ((int)v30 - (int)v129 < 2 || *v129 != 173 || v129[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v129 + 2;
LABEL_76:
        unsigned int v137 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 45) = v137;
        *((_DWORD *)this + 54) |= 1u;
        int v39 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v38 = *((void *)a2 + 2);
        if ((int)v38 - (int)v39 < 2 || *v39 != 176 || v39[1] != 2) {
          continue;
        }
        uint64_t v40 = (char *)(v39 + 2);
        *((void *)a2 + 1) = v40;
LABEL_83:
        unsigned int v137 = 0;
        if ((unint64_t)v40 >= v38 || *v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v41 = v137;
        }
        else
        {
          unsigned int v41 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        if (v41 <= 2)
        {
          *((_DWORD *)this + 54) |= 2u;
          *((_DWORD *)this + 46) = v41;
        }
        int v48 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v42 = *((void *)a2 + 2);
        if ((int)v42 - (int)v48 < 2 || *v48 != 184 || v48[1] != 2) {
          continue;
        }
        int v43 = v48 + 2;
        *((void *)a2 + 1) = v43;
LABEL_111:
        unsigned int v137 = 0;
        if ((unint64_t)v43 >= v42 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v49 = v137;
          int v50 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v42 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v43;
          int v50 = v43 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 47) = v49;
        *((_DWORD *)this + 54) |= 4u;
        if ((int)v42 - (int)v50 < 2 || *v50 != 192 || v50[1] != 2) {
          continue;
        }
        char v44 = v50 + 2;
        *((void *)a2 + 1) = v44;
LABEL_120:
        if ((unint64_t)v44 >= v42 || (char)*v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v51 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v42 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v44;
          int v51 = v44 + 1;
          *((void *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 54) |= 8u;
        if ((int)v42 - (int)v51 < 2 || *v51 != 200 || v51[1] != 2) {
          continue;
        }
        int v45 = v51 + 2;
        *((void *)a2 + 1) = v45;
LABEL_129:
        if ((unint64_t)v45 >= v42 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v52 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v42 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v45;
          int v52 = v45 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 54) |= 0x10u;
        if ((int)v42 - (int)v52 < 2 || *v52 != 208 || v52[1] != 2) {
          continue;
        }
        int v46 = v52 + 2;
        *((void *)a2 + 1) = v46;
LABEL_138:
        unsigned int v137 = 0;
        if ((unint64_t)v46 >= v42 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v137);
          if (!result) {
            return result;
          }
          unsigned int v53 = v137;
          unsigned int v54 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v42 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v53 = *v46;
          unsigned int v54 = v46 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((unsigned char *)this + 200) = v53 != 0;
        *((_DWORD *)this + 54) |= 0x20u;
        if ((int)v42 - (int)v54 < 2 || *v54 != 221 || v54[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v54 + 2;
LABEL_95:
        unsigned int v137 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v137))
        {
          *((_DWORD *)this + 51) = v137;
          *((_DWORD *)this + 54) |= 0x40u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_160;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_168;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_100;
        }
        int v19 = *((_DWORD *)this + 53);
        goto LABEL_176;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_182;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_190;
      case 0xCu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_198;
      case 0xDu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_206;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_100;
        }
        int v25 = *((_DWORD *)this + 53);
        goto LABEL_214;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_228;
        }
        goto LABEL_100;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_243;
        }
        goto LABEL_100;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_258;
        }
        goto LABEL_100;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_273;
        }
        goto LABEL_100;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_288;
        }
        goto LABEL_100;
      case 0x14u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_303;
        }
        goto LABEL_100;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_308;
        }
        goto LABEL_100;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_313;
        }
        goto LABEL_100;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_318;
        }
        goto LABEL_100;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_323;
        }
        goto LABEL_100;
      case 0x19u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_328;
        }
        goto LABEL_100;
      case 0x1Au:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_333;
        }
        goto LABEL_100;
      case 0x1Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unsigned int v27 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_338;
      case 0x1Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unsigned int v28 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_347;
      case 0x1Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_356;
      case 0x1Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_367;
      case 0x1Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_376;
      case 0x20u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        unsigned int v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_385;
      case 0x21u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v34 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_394;
      case 0x22u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v35 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_403;
      case 0x23u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v36 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_412;
      case 0x24u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v37 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_421;
      case 0x25u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_76;
        }
        goto LABEL_100;
      case 0x26u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        uint64_t v40 = (char *)*((void *)a2 + 1);
        unint64_t v38 = *((void *)a2 + 2);
        goto LABEL_83;
      case 0x27u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v43 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v42 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0x28u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        char v44 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v42 = *((void *)a2 + 2);
        goto LABEL_120;
      case 0x29u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v45 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v42 = *((void *)a2 + 2);
        goto LABEL_129;
      case 0x2Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_100;
        }
        int v46 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v42 = *((void *)a2 + 2);
        goto LABEL_138;
      case 0x2Bu:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_95;
        }
        goto LABEL_100;
      default:
        int v12 = TagFallback & 7;
LABEL_100:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::CompassSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 212);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 212);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_50:
  uint64_t v8 = *(void *)(v5 + 56);
  if (!v8) {
    uint64_t v8 = *(void *)(awd::metrics::CompassSession::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_53:
  uint64_t v9 = *(void *)(v5 + 64);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::CompassSession::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v10 = *(void *)(v5 + 72);
  if (!v10) {
    uint64_t v10 = *(void *)(awd::metrics::CompassSession::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v11 = *(void *)(v5 + 80);
  if (!v11) {
    uint64_t v11 = *(void *)(awd::metrics::CompassSession::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v12 = *(void *)(v5 + 88);
  if (!v12) {
    uint64_t v12 = *(void *)(awd::metrics::CompassSession::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_68;
  }
LABEL_65:
  uint64_t v13 = *(void *)(v5 + 96);
  if (!v13) {
    uint64_t v13 = *(void *)(awd::metrics::CompassSession::default_instance_ + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(float *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(float *)(v5 + 108), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(float *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_72;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(float *)(v5 + 116), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_73;
  }
LABEL_72:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(float *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_74;
  }
LABEL_73:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(float *)(v5 + 124), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_75;
  }
LABEL_74:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(float *)(v5 + 136), a3);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_76;
  }
LABEL_75:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(void *)(v5 + 128), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_77;
  }
LABEL_76:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(void *)(v5 + 144), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_78;
  }
LABEL_77:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_79;
  }
LABEL_78:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(v5 + 152), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_80;
  }
LABEL_79:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(v5 + 156), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_81;
  }
LABEL_80:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_82;
  }
LABEL_81:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_83:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 212) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_84;
  }
LABEL_82:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 212);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_83;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_84:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 176), (uint64_t)a2, a4);
LABEL_33:
  int v7 = *(_DWORD *)(v5 + 216);
  if (v7)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, (uint64_t)a2, *(float *)(v5 + 180), a3);
    int v7 = *(_DWORD *)(v5 + 216);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_87;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
LABEL_90:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 200), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 216) & 0x40) == 0) {
      return this;
    }
    goto LABEL_91;
  }
LABEL_89:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 216);
  if ((v7 & 0x20) != 0) {
    goto LABEL_90;
  }
LABEL_39:
  if ((v7 & 0x40) == 0) {
    return this;
  }
LABEL_91:
  float v14 = *(float *)(v5 + 204);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (uint64_t)a2, v14, a3);
}

uint64_t awd::metrics::CompassSession::ByteSize(awd::metrics::CompassSession *this)
{
  unsigned int v2 = *((_DWORD *)this + 53);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_54;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 53);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    unsigned int v2 = *((_DWORD *)this + 53);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 53);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 10;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_36:
  float v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      unsigned int v2 = *((_DWORD *)this + 53);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v19 + 1);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_126;
  }
  if ((v2 & 0x100) != 0)
  {
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *((_DWORD *)this + 53);
    }
    else
    {
      int v21 = 1;
    }
    LODWORD(v3) = v3 + v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_57:
      if ((v2 & 0x400) == 0) {
        goto LABEL_58;
      }
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  uint64_t v22 = *((void *)this + 7);
  if (!v22) {
    uint64_t v22 = *(void *)(awd::metrics::CompassSession::default_instance_ + 56);
  }
  int v23 = *(unsigned __int8 *)(v22 + 24);
  if (*(unsigned char *)(v22 + 24))
  {
    int v24 = (v23 << 31 >> 31) & 5;
    if ((v23 & 2) != 0) {
      v24 += 5;
    }
    if ((v23 & 4) != 0) {
      int v23 = v24 + 5;
    }
    else {
      int v23 = v24;
    }
  }
  *(_DWORD *)(v22 + 20) = v23;
  LODWORD(v3) = v3 + v23 + 2;
  unsigned int v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x400) == 0)
  {
LABEL_58:
    if ((v2 & 0x800) == 0) {
      goto LABEL_59;
    }
    goto LABEL_87;
  }
LABEL_78:
  uint64_t v25 = *((void *)this + 8);
  if (!v25) {
    uint64_t v25 = *(void *)(awd::metrics::CompassSession::default_instance_ + 64);
  }
  int v26 = *(unsigned __int8 *)(v25 + 24);
  if (*(unsigned char *)(v25 + 24))
  {
    int v27 = (v26 << 31 >> 31) & 5;
    if ((v26 & 2) != 0) {
      v27 += 5;
    }
    if ((v26 & 4) != 0) {
      int v26 = v27 + 5;
    }
    else {
      int v26 = v27;
    }
  }
  *(_DWORD *)(v25 + 20) = v26;
  LODWORD(v3) = v3 + v26 + 2;
  unsigned int v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x800) == 0)
  {
LABEL_59:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_96;
  }
LABEL_87:
  uint64_t v28 = *((void *)this + 9);
  if (!v28) {
    uint64_t v28 = *(void *)(awd::metrics::CompassSession::default_instance_ + 72);
  }
  int v29 = *(unsigned __int8 *)(v28 + 24);
  if (*(unsigned char *)(v28 + 24))
  {
    int v30 = (v29 << 31 >> 31) & 5;
    if ((v29 & 2) != 0) {
      v30 += 5;
    }
    if ((v29 & 4) != 0) {
      int v29 = v30 + 5;
    }
    else {
      int v29 = v30;
    }
  }
  *(_DWORD *)(v28 + 20) = v29;
  LODWORD(v3) = v3 + v29 + 3;
  unsigned int v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x1000) == 0)
  {
LABEL_60:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_61;
    }
LABEL_105:
    uint64_t v34 = *((void *)this + 11);
    if (!v34) {
      uint64_t v34 = *(void *)(awd::metrics::CompassSession::default_instance_ + 88);
    }
    int v35 = *(unsigned __int8 *)(v34 + 24);
    if (*(unsigned char *)(v34 + 24))
    {
      int v36 = (v35 << 31 >> 31) & 5;
      if ((v35 & 2) != 0) {
        v36 += 5;
      }
      if ((v35 & 4) != 0) {
        int v35 = v36 + 5;
      }
      else {
        int v35 = v36;
      }
    }
    *(_DWORD *)(v34 + 20) = v35;
    LODWORD(v3) = v3 + v35 + 3;
    unsigned int v2 = *((_DWORD *)this + 53);
    if ((v2 & 0x4000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_114;
  }
LABEL_96:
  uint64_t v31 = *((void *)this + 10);
  if (!v31) {
    uint64_t v31 = *(void *)(awd::metrics::CompassSession::default_instance_ + 80);
  }
  int v32 = *(unsigned __int8 *)(v31 + 24);
  if (*(unsigned char *)(v31 + 24))
  {
    int v33 = (v32 << 31 >> 31) & 5;
    if ((v32 & 2) != 0) {
      v33 += 5;
    }
    if ((v32 & 4) != 0) {
      int v32 = v33 + 5;
    }
    else {
      int v32 = v33;
    }
  }
  *(_DWORD *)(v31 + 20) = v32;
  LODWORD(v3) = v3 + v32 + 3;
  unsigned int v2 = *((_DWORD *)this + 53);
  if ((v2 & 0x2000) != 0) {
    goto LABEL_105;
  }
LABEL_61:
  if ((v2 & 0x4000) != 0)
  {
LABEL_114:
    uint64_t v37 = *((void *)this + 12);
    if (!v37) {
      uint64_t v37 = *(void *)(awd::metrics::CompassSession::default_instance_ + 96);
    }
    int v38 = *(unsigned __int8 *)(v37 + 24);
    if (*(unsigned char *)(v37 + 24))
    {
      int v39 = (v38 << 31 >> 31) & 5;
      if ((v38 & 2) != 0) {
        v39 += 5;
      }
      if ((v38 & 4) != 0) {
        int v38 = v39 + 5;
      }
      else {
        int v38 = v39;
      }
    }
    *(_DWORD *)(v37 + 20) = v38;
    LODWORD(v3) = v3 + v38 + 3;
    unsigned int v2 = *((_DWORD *)this + 53);
  }
LABEL_123:
  if ((v2 & 0x8000) != 0) {
    uint64_t v3 = (v3 + 6);
  }
  else {
    uint64_t v3 = v3;
  }
LABEL_126:
  if ((v2 & 0xFF0000) != 0)
  {
    unsigned int v40 = v3 + 6;
    if ((v2 & 0x10000) == 0) {
      unsigned int v40 = v3;
    }
    if ((v2 & 0x20000) != 0) {
      v40 += 6;
    }
    if ((v2 & 0x40000) != 0) {
      v40 += 6;
    }
    if ((v2 & 0x80000) != 0) {
      v40 += 6;
    }
    if ((v2 & 0x100000) != 0) {
      v40 += 6;
    }
    if ((v2 & 0x200000) != 0) {
      uint64_t v3 = v40 + 6;
    }
    else {
      uint64_t v3 = v40;
    }
    if ((v2 & 0x400000) != 0)
    {
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 16))
         + 2;
      unsigned int v2 = *((_DWORD *)this + 53);
    }
    if ((v2 & 0x800000) != 0)
    {
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 18))
         + 2;
      unsigned int v2 = *((_DWORD *)this + 53);
    }
  }
  if (!HIBYTE(v2)) {
    goto LABEL_188;
  }
  if ((v2 & 0x1000000) != 0)
  {
    unsigned int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
    if ((v41 & 0x80000000) != 0)
    {
      int v42 = 10;
    }
    else if (v41 >= 0x80)
    {
      int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
      unsigned int v2 = *((_DWORD *)this + 53);
    }
    else
    {
      int v42 = 1;
    }
    uint64_t v3 = (v3 + v42 + 2);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_147:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_148;
      }
      goto LABEL_164;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_147;
  }
  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
  if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v44 = 1;
  }
  uint64_t v3 = (v3 + v44 + 2);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_148:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_168;
  }
LABEL_164:
  int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 39);
  if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v46 = 1;
  }
  uint64_t v3 = (v3 + v46 + 2);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_149:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_150;
    }
    goto LABEL_172;
  }
LABEL_168:
  int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
  if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v48 = 1;
  }
  uint64_t v3 = (v3 + v48 + 2);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_150:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_151;
    }
LABEL_176:
    int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v51 >= 0x80)
    {
      int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51) + 2;
      unsigned int v2 = *((_DWORD *)this + 53);
    }
    else
    {
      int v52 = 3;
    }
    uint64_t v3 = (v52 + v3);
    if ((v2 & 0x40000000) == 0)
    {
LABEL_152:
      if ((v2 & 0x80000000) == 0) {
        goto LABEL_188;
      }
      goto LABEL_184;
    }
    goto LABEL_180;
  }
LABEL_172:
  unsigned int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 41);
  if (v49 >= 0x80)
  {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v50 = 1;
  }
  uint64_t v3 = (v3 + v50 + 2);
  if ((v2 & 0x20000000) != 0) {
    goto LABEL_176;
  }
LABEL_151:
  if ((v2 & 0x40000000) == 0) {
    goto LABEL_152;
  }
LABEL_180:
  unsigned int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
  if (v53 >= 0x80)
  {
    int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53) + 2;
    unsigned int v2 = *((_DWORD *)this + 53);
  }
  else
  {
    int v54 = 3;
  }
  uint64_t v3 = (v54 + v3);
  if ((v2 & 0x80000000) != 0)
  {
LABEL_184:
    int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if (v55 >= 0x80) {
      int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55) + 2;
    }
    else {
      int v56 = 3;
    }
    uint64_t v3 = (v56 + v3);
  }
LABEL_188:
  LOBYTE(v57) = *((unsigned char *)this + 216);
  if (!(_BYTE)v57) {
    goto LABEL_221;
  }
  if (*((unsigned char *)this + 216)) {
    LODWORD(v3) = v3 + 6;
  }
  if ((*((unsigned char *)this + 216) & 2) != 0)
  {
    unsigned int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if ((v58 & 0x80000000) != 0)
    {
      int v59 = 12;
    }
    else if (v58 >= 0x80)
    {
      int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58) + 2;
      int v57 = *((_DWORD *)this + 54);
    }
    else
    {
      int v59 = 3;
    }
    LODWORD(v3) = v59 + v3;
    if ((v57 & 4) == 0)
    {
LABEL_193:
      if ((v57 & 8) == 0) {
        goto LABEL_194;
      }
      goto LABEL_208;
    }
  }
  else if ((*((unsigned char *)this + 216) & 4) == 0)
  {
    goto LABEL_193;
  }
  uint64_t v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
  if ((v60 & 0x80000000) != 0)
  {
    int v61 = 12;
  }
  else if (v60 >= 0x80)
  {
    int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60) + 2;
    int v57 = *((_DWORD *)this + 54);
  }
  else
  {
    int v61 = 3;
  }
  LODWORD(v3) = v61 + v3;
  if ((v57 & 8) == 0)
  {
LABEL_194:
    if ((v57 & 0x10) == 0) {
      goto LABEL_216;
    }
    goto LABEL_212;
  }
LABEL_208:
  int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if (v62 >= 0x80)
  {
    int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62) + 2;
    int v57 = *((_DWORD *)this + 54);
  }
  else
  {
    int v63 = 3;
  }
  LODWORD(v3) = v63 + v3;
  if ((v57 & 0x10) != 0)
  {
LABEL_212:
    char v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
    if (v64 >= 0x80)
    {
      int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64) + 2;
      int v57 = *((_DWORD *)this + 54);
    }
    else
    {
      int v65 = 3;
    }
    LODWORD(v3) = v65 + v3;
  }
LABEL_216:
  unsigned int v66 = v3 + 3;
  if ((v57 & 0x20) == 0) {
    unsigned int v66 = v3;
  }
  if ((v57 & 0x40) != 0) {
    uint64_t v3 = v66 + 6;
  }
  else {
    uint64_t v3 = v66;
  }
LABEL_221:
  *((_DWORD *)this + 52) = v3;
  return v3;
}

void awd::metrics::CompassSession::CheckTypeAndMergeFrom(awd::metrics::CompassSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::CompassSession::MergeFrom(this, lpsrc);
}

void awd::metrics::CompassSession::CopyFrom(awd::metrics::CompassSession *this, const awd::metrics::CompassSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::CompassSession *))(*(void *)this + 32))(this);
    awd::metrics::CompassSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::CompassSession::IsInitialized(awd::metrics::CompassSession *this)
{
  return 1;
}

float awd::metrics::CompassSession::Swap(awd::metrics::CompassSession *this, awd::metrics::CompassSession *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    uint64_t v6 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v6;
    uint64_t v7 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v7;
    uint64_t v8 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v8;
    uint64_t v9 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v9;
    uint64_t v10 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v10;
    uint64_t v11 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v11;
    int v12 = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v12;
    int v13 = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v13;
    int v14 = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v14;
    int v15 = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v15;
    int v16 = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v16;
    int v17 = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v17;
    int v18 = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v18;
    uint64_t v19 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v19;
    uint64_t v20 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v20;
    LODWORD(v20) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v20;
    LODWORD(v20) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v20;
    LODWORD(v20) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v20;
    LODWORD(v20) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v20;
    LODWORD(v20) = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v20;
    LODWORD(v20) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v20;
    LODWORD(v20) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v20;
    LODWORD(v20) = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v20;
    int v21 = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v21;
    LODWORD(v20) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v20;
    LODWORD(v20) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v20;
    LODWORD(v20) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v20;
    LODWORD(v20) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v20;
    LOBYTE(v20) = *((unsigned char *)this + 200);
    *((unsigned char *)this + 200) = *((unsigned char *)a2 + 200);
    *((unsigned char *)a2 + 200) = v20;
    float result = *((float *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((float *)a2 + 51) = result;
    LODWORD(v20) = *((_DWORD *)this + 53);
    *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v20;
    LODWORD(v20) = *((_DWORD *)this + 54);
    *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
    *((_DWORD *)a2 + 54) = v20;
    LODWORD(v20) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v20;
  }
  return result;
}

void *awd::metrics::CompassSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.CompassSession");
}

double awd::metrics::LocationCompassSaturations::SharedCtor(awd::metrics::LocationCompassSaturations *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationCompassSaturations *awd::metrics::LocationCompassSaturations::LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  *(void *)this = &unk_26D7BA9F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  awd::metrics::LocationCompassSaturations::MergeFrom(this, a2);
  return this;
}

void sub_22491F004(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCompassSaturations::MergeFrom(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *((void *)a2 + 2);
  *((_DWORD *)this + 15) |= 2u;
  *((void *)this + 2) = v8;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v9 = *((void *)a2 + 3);
  *((_DWORD *)this + 15) |= 4u;
  *((void *)this + 3) = v9;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 8) = v10;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    int v12 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 10) = v12;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  int v11 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 9) = v11;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  int v13 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 11) = v13;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 12) = v5;
    int v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 15) |= 0x100u;
    *((_DWORD *)this + 13) = v6;
  }
}

void sub_22491F1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCompassSaturations::~LocationCompassSaturations(awd::metrics::LocationCompassSaturations *this)
{
  *(void *)this = &unk_26D7BA9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BA9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BA9F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationCompassSaturations::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationCompassSaturations::default_instance(awd::metrics::LocationCompassSaturations *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationCompassSaturations::default_instance_;
  if (!awd::metrics::LocationCompassSaturations::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationCompassSaturations::default_instance_;
  }
  return result;
}

void awd::metrics::LocationCompassSaturations::New(awd::metrics::LocationCompassSaturations *this)
{
}

uint64_t awd::metrics::LocationCompassSaturations::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 36) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 52) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationCompassSaturations::MergePartialFromCodedStream(awd::metrics::LocationCompassSaturations *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unint64_t *)((char *)this + 16);
  int v6 = (unint64_t *)((char *)this + 24);
  uint64_t v7 = (unsigned int *)((char *)this + 52);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v12;
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 15) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_37:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v14;
          int v23 = v14 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v23 >= v11 || *v23 != 24) {
          continue;
        }
        int v15 = v23 + 1;
        *((void *)a2 + 1) = v15;
LABEL_45:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v6 = *v15;
          int v24 = v15 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v24 >= v11 || *v24 != 32) {
          continue;
        }
        int v16 = v24 + 1;
        *((void *)a2 + 1) = v16;
LABEL_53:
        unsigned int v35 = 0;
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v25 = v35;
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v16;
          int v26 = v16 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 8) = v25;
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v26 >= v11 || *v26 != 40) {
          continue;
        }
        int v17 = v26 + 1;
        *((void *)a2 + 1) = v17;
LABEL_61:
        unsigned int v35 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v27 = v35;
          uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v17;
          uint64_t v28 = v17 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 9) = v27;
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v28 >= v11 || *v28 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_69:
        unsigned int v35 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v35))
        {
          *((_DWORD *)this + 10) = v35;
          *((_DWORD *)this + 15) |= 0x20u;
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
          if ((unint64_t)v29 < v18 && *v29 == 56)
          {
            uint64_t v19 = v29 + 1;
            *((void *)a2 + 1) = v19;
LABEL_73:
            unsigned int v35 = 0;
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
              if (!result) {
                return result;
              }
              unsigned int v30 = v35;
              uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v18 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v30 = *v19;
              uint64_t v31 = v19 + 1;
              *((void *)a2 + 1) = v31;
            }
            *((_DWORD *)this + 11) = v30;
            *((_DWORD *)this + 15) |= 0x40u;
            if ((unint64_t)v31 < v18 && *v31 == 64)
            {
              uint64_t v20 = v31 + 1;
              *((void *)a2 + 1) = v20;
LABEL_81:
              unsigned int v35 = 0;
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
                if (!result) {
                  return result;
                }
                unsigned int v32 = v35;
                int v33 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v18 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v32 = *v20;
                int v33 = v20 + 1;
                *((void *)a2 + 1) = v33;
              }
              *((_DWORD *)this + 12) = v32;
              *((_DWORD *)this + 15) |= 0x80u;
              if ((unint64_t)v33 < v18 && *v33 == 72)
              {
                int v21 = v33 + 1;
                *((void *)a2 + 1) = v21;
LABEL_89:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                  if (!result) {
                    return result;
                  }
                  uint64_t v34 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v18 = *((void *)a2 + 2);
                }
                else
                {
                  *uint64_t v7 = *v21;
                  uint64_t v34 = (unsigned __int8 *)(v21 + 1);
                  *((void *)a2 + 1) = v34;
                }
                *((_DWORD *)this + 15) |= 0x100u;
                if (v34 == (unsigned __int8 *)v18
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_45;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_53;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_61;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_69;
        }
        goto LABEL_28;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_73;
      case 8u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_81;
      case 9u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_89;
      default:
        int v10 = TagFallback & 7;
LABEL_28:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationCompassSaturations::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x100) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v7 = *(unsigned int *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationCompassSaturations::ByteSize(awd::metrics::LocationCompassSaturations *this)
{
  int v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }
  if (v2)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  LODWORD(v3) = 0;
  if ((v2 & 2) != 0)
  {
LABEL_8:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_9:
  if ((v2 & 4) != 0)
  {
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 3))
                + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v5 = 2;
  }
  LODWORD(v3) = v5 + v3;
  if ((v2 & 0x10) != 0)
  {
LABEL_20:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v7 = 2;
    }
    LODWORD(v3) = v7 + v3;
  }
LABEL_26:
  if ((v2 & 0x20) != 0) {
    uint64_t v3 = (v3 + 5);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
    if ((v2 & 0x80) == 0)
    {
LABEL_31:
      if ((v2 & 0x100) == 0) {
        goto LABEL_49;
      }
      goto LABEL_45;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_31;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_45:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else {
      int v13 = 2;
    }
    uint64_t v3 = (v13 + v3);
  }
LABEL_49:
  *((_DWORD *)this + 14) = v3;
  return v3;
}

void awd::metrics::LocationCompassSaturations::CheckTypeAndMergeFrom(awd::metrics::LocationCompassSaturations *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationCompassSaturations::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationCompassSaturations::CopyFrom(awd::metrics::LocationCompassSaturations *this, const awd::metrics::LocationCompassSaturations *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationCompassSaturations *))(*(void *)this + 32))(this);
    awd::metrics::LocationCompassSaturations::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationCompassSaturations::IsInitialized(awd::metrics::LocationCompassSaturations *this)
{
  return 1;
}

float awd::metrics::LocationCompassSaturations::Swap(awd::metrics::LocationCompassSaturations *this, awd::metrics::LocationCompassSaturations *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    float result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v4) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
    LODWORD(v4) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LODWORD(v4) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
  }
  return result;
}

void *awd::metrics::LocationCompassSaturations::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationCompassSaturations");
}

uint64_t awd::metrics::MotionState::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 24) = 0;
  *(unsigned char *)(this + 28) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

awd::metrics::MotionState *awd::metrics::MotionState::MotionState(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BAA68;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v3;
  *((_DWORD *)this + 6) = 0;
  *((unsigned char *)this + 28) = 0;
  *((void *)this + 4) = 0;
  awd::metrics::MotionState::MergeFrom(this, a2);
  return this;
}

void sub_22491FD8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionState::MergeFrom(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    uint64_t v8 = (std::string *)*((void *)this + 2);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_14:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 9) |= 4u;
    *((_DWORD *)this + 6) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *((unsigned char *)a2 + 28);
    *((_DWORD *)this + 9) |= 8u;
    *((unsigned char *)this + 28) = v5;
  }
}

void sub_22491FED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionState::~MotionState(awd::metrics::MotionState *this)
{
  *(void *)this = &unk_26D7BAA68;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BAA68;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BAA68;
  awd::metrics::MotionState::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionState::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::MotionState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionState::default_instance(awd::metrics::MotionState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionState::default_instance_;
  if (!awd::metrics::MotionState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionState::default_instance_;
  }
  return result;
}

void awd::metrics::MotionState::New(awd::metrics::MotionState *this)
{
}

uint64_t awd::metrics::MotionState::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 36);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 24) = 0;
    *(unsigned char *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionState::MergePartialFromCodedStream(awd::metrics::MotionState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
LABEL_24:
          int v12 = *((_DWORD *)this + 9) | 1;
          *((_DWORD *)this + 9) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *((_DWORD *)this + 9);
LABEL_27:
        *((_DWORD *)this + 9) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v13 || *v16 != 24) {
          continue;
        }
        int v14 = v16 + 1;
        *((void *)a2 + 1) = v14;
LABEL_33:
        unsigned int v23 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v17 = v23;
          unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v14;
          unint64_t v18 = v14 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 6) = v17;
        *((_DWORD *)this + 9) |= 4u;
        if ((unint64_t)v18 >= v13 || *v18 != 32) {
          continue;
        }
        int v15 = v18 + 1;
        *((void *)a2 + 1) = v15;
LABEL_41:
        unsigned int v22 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          uint64_t v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v15;
          uint64_t v20 = (unsigned __int8 *)(v15 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((unsigned char *)this + 28) = v19 != 0;
        *((_DWORD *)this + 9) |= 8u;
        if (v20 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_33;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_41;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionState::ByteSize(awd::metrics::MotionState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_26;
  }
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v5 = *((void *)this + 2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v2 = *((_DWORD *)this + 9);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    v3 += v10 + v6 + 1;
    goto LABEL_16;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  int v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v12 = 2;
    }
    v3 += v12;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_26:
  *((_DWORD *)this + 8) = result;
  return result;
}

void awd::metrics::MotionState::CheckTypeAndMergeFrom(awd::metrics::MotionState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionState::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionState::CopyFrom(awd::metrics::MotionState *this, const awd::metrics::MotionState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionState *))(*(void *)this + 32))(this);
    awd::metrics::MotionState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionState::IsInitialized(awd::metrics::MotionState *this)
{
  return 1;
}

uint64_t awd::metrics::MotionState::Swap(uint64_t this, awd::metrics::MotionState *a2)
{
  if (a2 != (awd::metrics::MotionState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 28);
    *(unsigned char *)(this + 28) = *((unsigned char *)a2 + 28);
    *((unsigned char *)a2 + 28) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

void *awd::metrics::MotionState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionState");
}

void *awd::metrics::MotionTrigger::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[8] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::MotionTrigger *awd::metrics::MotionTrigger::MotionTrigger(awd::metrics::MotionTrigger *this, const awd::metrics::MotionTrigger *a2)
{
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BAAE0;
  *((void *)this + 1) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v3;
  awd::metrics::MotionTrigger::MergeFrom(this, a2);
  return this;
}

void sub_22492080C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::MergeFrom(awd::metrics::MotionTrigger *this, const awd::metrics::MotionTrigger *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionTrigger *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const std::string **)(*((void *)a2 + 5) + 8 * v5);
      int v7 = *((_DWORD *)this + 13);
      uint64_t v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          uint64_t result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionTrigger *)((char *)this + 40));
          int v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        int v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(result);
        uint64_t v11 = *((void *)this + 5);
        uint64_t v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }
      else
      {
        uint64_t v9 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        int v10 = *(std::string **)(v9 + 8 * v8);
      }
      uint64_t result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  LOBYTE(v13) = *((unsigned char *)a2 + 68);
  if ((_BYTE)v13)
  {
    if (*((unsigned char *)a2 + 68))
    {
      uint64_t v15 = *((void *)a2 + 1);
      *((_DWORD *)this + 17) |= 1u;
      *((void *)this + 1) = v15;
      int v13 = *((_DWORD *)a2 + 17);
      if ((v13 & 2) == 0)
      {
LABEL_14:
        if ((v13 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_23;
      }
    }
    else if ((*((unsigned char *)a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v16 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    unsigned int v17 = (std::string *)*((void *)this + 2);
    if (v17 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    uint64_t result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v17, v16);
    int v13 = *((_DWORD *)a2 + 17);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 8) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v18 = *((void *)a2 + 3);
    *((_DWORD *)this + 17) |= 4u;
    *((void *)this + 3) = v18;
    int v13 = *((_DWORD *)a2 + 17);
    if ((v13 & 8) == 0)
    {
LABEL_16:
      if ((v13 & 0x10) == 0) {
        return result;
      }
      goto LABEL_17;
    }
LABEL_24:
    int v19 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 17) |= 8u;
    *((_DWORD *)this + 8) = v19;
    if ((*((_DWORD *)a2 + 17) & 0x10) == 0) {
      return result;
    }
LABEL_17:
    int v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 17) |= 0x10u;
    *((_DWORD *)this + 9) = v14;
  }
  return result;
}

void sub_224920A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionTrigger::~MotionTrigger(awd::metrics::MotionTrigger *this)
{
  *(void *)this = &unk_26D7BAAE0;
  uint64_t v2 = (int *)((char *)this + 40);
  awd::metrics::MotionTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionTrigger::~MotionTrigger(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::MotionTrigger::default_instance(awd::metrics::MotionTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionTrigger::default_instance_;
  if (!awd::metrics::MotionTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionTrigger::default_instance_;
  }
  return result;
}

void awd::metrics::MotionTrigger::New(awd::metrics::MotionTrigger *this)
{
}

uint64_t awd::metrics::MotionTrigger::Clear(awd::metrics::MotionTrigger *this)
{
  char v2 = *((unsigned char *)this + 68);
  if (v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t awd::metrics::MotionTrigger::MergePartialFromCodedStream(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = (unint64_t *)(this + 8);
  uint64_t v5 = (unint64_t *)(this + 24);
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 40);
  uint64_t v7 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!this) {
        return 1;
      }
    }
    else
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)a2 + 8) = v9;
      *((void *)a2 + 1) = v8 + 1;
      if (!v9) {
        return 1;
      }
    }
    switch(v9 >> 3)
    {
      case 1u:
        int v10 = v9 & 7;
        if ((v9 & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *uint64_t v4 = *v12;
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
LABEL_27:
          int v14 = *(_DWORD *)(v3 + 68) | 1;
          *(_DWORD *)(v3 + 68) = v14;
          if ((unint64_t)v13 < v11 && *v13 == 18)
          {
            *((void *)a2 + 1) = v13 + 1;
            goto LABEL_30;
          }
          continue;
        }
        this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (this)
        {
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_27;
        }
        break;
      case 2u:
        int v10 = v9 & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        int v14 = *(_DWORD *)(v3 + 68);
LABEL_30:
        *(_DWORD *)(v3 + 68) = v14 | 2;
        if (*(void *)(v3 + 16) == v7) {
          operator new();
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!this) {
          return this;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v15 || *v19 != 24) {
          continue;
        }
        int v16 = v19 + 1;
        *((void *)a2 + 1) = v16;
LABEL_36:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!this) {
            return this;
          }
          uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v16;
          uint64_t v20 = v16 + 1;
          *((void *)a2 + 1) = v20;
        }
        *(_DWORD *)(v3 + 68) |= 4u;
        if ((unint64_t)v20 >= v15 || *v20 != 32) {
          continue;
        }
        unsigned int v17 = v20 + 1;
        *((void *)a2 + 1) = v17;
LABEL_44:
        unsigned int v32 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!this) {
            return this;
          }
          unsigned int v21 = v32;
          unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v21 = *v17;
          unsigned int v22 = v17 + 1;
          *((void *)a2 + 1) = v22;
        }
        *(_DWORD *)(v3 + 32) = v21;
        *(_DWORD *)(v3 + 68) |= 8u;
        if ((unint64_t)v22 >= v15 || *v22 != 40) {
          continue;
        }
        uint64_t v18 = v22 + 1;
        *((void *)a2 + 1) = v18;
LABEL_52:
        unsigned int v31 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!this) {
            return this;
          }
          unsigned int v23 = v31;
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v23 = *v18;
          int v24 = v18 + 1;
          *((void *)a2 + 1) = v24;
        }
        *(_DWORD *)(v3 + 36) = v23;
        *(_DWORD *)(v3 + 68) |= 0x10u;
        if ((unint64_t)v24 >= v15 || *v24 != 50) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v24 + 1;
LABEL_60:
          int v25 = *(_DWORD *)(v3 + 52);
          int v26 = *(_DWORD *)(v3 + 48);
          if (v26 >= v25)
          {
            if (v25 == *(_DWORD *)(v3 + 56))
            {
              this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v25 = *(_DWORD *)(v3 + 52);
            }
            *(_DWORD *)(v3 + 52) = v25 + 1;
            uint64_t v27 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)this);
            uint64_t v28 = *(void *)(v3 + 40);
            uint64_t v29 = *(int *)(v3 + 48);
            *(_DWORD *)(v3 + 48) = v29 + 1;
            *(void *)(v28 + 8 * v29) = v27;
          }
          else
          {
            *(_DWORD *)(v3 + 48) = v26 + 1;
          }
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!this) {
            return this;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unsigned int v30 = (unsigned char *)*((void *)a2 + 2);
        }
        while (v24 < v30 && *v24 == 50);
        if (v24 != v30 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        this = 1;
        *((unsigned char *)a2 + 36) = 1;
        return this;
      case 3u:
        int v10 = v9 & 7;
        if ((v9 & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_36;
      case 4u:
        int v10 = v9 & 7;
        if ((v9 & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_44;
      case 5u:
        int v10 = v9 & 7;
        if ((v9 & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_52;
      case 6u:
        int v10 = v9 & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        goto LABEL_60;
      default:
        int v10 = v9 & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, v9);
        if (this) {
          continue;
        }
        return 0;
    }
    return this;
  }
}

uint64_t awd::metrics::MotionTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
LABEL_7:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v7;
    }
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::ByteSize(awd::metrics::MotionTrigger *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 68);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_33;
  }
  if (*((unsigned char *)this + 68))
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 68) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 17);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    int v2 = *((_DWORD *)this + 17);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v11 = 2;
  }
  v3 += v11;
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      int v13 = 2;
    }
    v3 += v13;
  }
LABEL_33:
  int v14 = *((_DWORD *)this + 12);
  uint64_t v15 = (v14 + v3);
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i < v14; ++i)
    {
      uint64_t v17 = *(void *)(*((void *)this + 5) + 8 * i);
      int v18 = *(unsigned __int8 *)(v17 + 23);
      char v19 = v18;
      uint64_t v20 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
      }
      else {
        unint64_t v21 = v20;
      }
      if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
        int v18 = *(unsigned __int8 *)(v17 + 23);
        uint64_t v20 = *(void *)(v17 + 8);
        int v14 = *((_DWORD *)this + 12);
        char v19 = *(unsigned char *)(v17 + 23);
      }
      else
      {
        int v22 = 1;
      }
      if (v19 < 0) {
        int v18 = v20;
      }
      uint64_t v15 = (v22 + v15 + v18);
    }
  }
  *((_DWORD *)this + 16) = v15;
  return v15;
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::CheckTypeAndMergeFrom(awd::metrics::MotionTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionTrigger::MergeFrom(this, lpsrc);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionTrigger::CopyFrom(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this, const awd::metrics::MotionTrigger *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *))(*(void *)this + 32))(this);
    return awd::metrics::MotionTrigger::MergeFrom(v4, a2);
  }
  return this;
}

uint64_t awd::metrics::MotionTrigger::IsInitialized(awd::metrics::MotionTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::MotionTrigger::Swap(uint64_t this, awd::metrics::MotionTrigger *a2)
{
  if (a2 != (awd::metrics::MotionTrigger *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    uint64_t v5 = *(void *)(this + 16);
    uint64_t v6 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    uint64_t v7 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v8 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(v3 + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    int v9 = *(_DWORD *)(v3 + 64);
    *(_DWORD *)(v3 + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
  }
  return this;
}

void *awd::metrics::MotionTrigger::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionTrigger");
}

void *awd::metrics::MotionGyroMiniCal::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::MotionGyroMiniCal *awd::metrics::MotionGyroMiniCal::MotionGyroMiniCal(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  *(void *)this = &unk_26D7BAB58;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::MotionGyroMiniCal::MergeFrom(this, a2);
  return this;
}

void sub_224921544(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroMiniCal::MergeFrom(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((void *)this + 2) = v6;
    }
  }
}

void sub_224921604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroMiniCal::~MotionGyroMiniCal(awd::metrics::MotionGyroMiniCal *this)
{
  *(void *)this = &unk_26D7BAB58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BAB58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BAB58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionGyroMiniCal::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::default_instance(awd::metrics::MotionGyroMiniCal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionGyroMiniCal::default_instance_;
  if (!awd::metrics::MotionGyroMiniCal::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroMiniCal::default_instance_;
  }
  return result;
}

void awd::metrics::MotionGyroMiniCal::New(awd::metrics::MotionGyroMiniCal *this)
{
}

uint64_t awd::metrics::MotionGyroMiniCal::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::MergePartialFromCodedStream(awd::metrics::MotionGyroMiniCal *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!result) {
          return result;
        }
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        *int v4 = *v11;
        uint64_t v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 7) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v10;
          int v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 7) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::MotionGyroMiniCal::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::MotionGyroMiniCal::ByteSize(awd::metrics::MotionGyroMiniCal *this)
{
  if (*((unsigned char *)this + 28))
  {
    if ((*((unsigned char *)this + 28) & 1) == 0)
    {
      uint64_t v2 = 0;
      if ((*((unsigned char *)this + 28) & 2) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    uint64_t v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    if ((*((_DWORD *)this + 7) & 2) != 0) {
LABEL_7:
    }
      uint64_t v2 = v2
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
         + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
LABEL_8:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

void awd::metrics::MotionGyroMiniCal::CheckTypeAndMergeFrom(awd::metrics::MotionGyroMiniCal *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionGyroMiniCal::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroMiniCal::CopyFrom(awd::metrics::MotionGyroMiniCal *this, const awd::metrics::MotionGyroMiniCal *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroMiniCal *))(*(void *)this + 32))(this);
    awd::metrics::MotionGyroMiniCal::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroMiniCal::IsInitialized(awd::metrics::MotionGyroMiniCal *this)
{
  return 1;
}

uint64_t awd::metrics::MotionGyroMiniCal::Swap(uint64_t this, awd::metrics::MotionGyroMiniCal *a2)
{
  if (a2 != (awd::metrics::MotionGyroMiniCal *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return this;
}

void *awd::metrics::MotionGyroMiniCal::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroMiniCal");
}

double awd::metrics::MotionDropDetection::SharedCtor(awd::metrics::MotionDropDetection *this)
{
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionDropDetection *awd::metrics::MotionDropDetection::MotionDropDetection(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  *(void *)this = &unk_26D7BABD0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::MotionDropDetection::MergeFrom(this, a2);
  return this;
}

void sub_224921BB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionDropDetection::MergeFrom(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((void *)this + 2) = v7;
    int v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    float result = *((float *)a2 + 6);
    *((_DWORD *)this + 10) |= 4u;
    *((float *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    float result = *((float *)a2 + 7);
    *((_DWORD *)this + 10) |= 8u;
    *((float *)this + 7) = result;
    if ((*((_DWORD *)a2 + 10) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    float result = *((float *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x10u;
    *((float *)this + 8) = result;
  }
  return result;
}

void sub_224921CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionDropDetection::~MotionDropDetection(awd::metrics::MotionDropDetection *this)
{
  *(void *)this = &unk_26D7BABD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BABD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BABD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionDropDetection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::MotionDropDetection::default_instance(awd::metrics::MotionDropDetection *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionDropDetection::default_instance_;
  if (!awd::metrics::MotionDropDetection::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionDropDetection::default_instance_;
  }
  return result;
}

void awd::metrics::MotionDropDetection::New(awd::metrics::MotionDropDetection *this)
{
}

uint64_t awd::metrics::MotionDropDetection::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::MotionDropDetection::MergePartialFromCodedStream(awd::metrics::MotionDropDetection *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unint64_t *)((char *)this + 16);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_20;
        }
LABEL_29:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v21;
        *((_DWORD *)this + 10) |= 4u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_33:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 10) |= 8u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_37:
        unsigned int v19 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19))
        {
          *((_DWORD *)this + 8) = v19;
          *((_DWORD *)this + 10) |= 0x10u;
          uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
          if ((unint64_t)v17 < v12 && *v17 == 40)
          {
            int v13 = v17 + 1;
            *((void *)a2 + 1) = v13;
LABEL_41:
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
              if (!result) {
                return result;
              }
              int v18 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v12 = *((void *)a2 + 2);
            }
            else
            {
              *int v5 = *v13;
              int v18 = (unsigned __int8 *)(v13 + 1);
              *((void *)a2 + 1) = v18;
            }
            *((_DWORD *)this + 10) |= 2u;
            if (v18 == (unsigned __int8 *)v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_33;
        }
        goto LABEL_20;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_37;
        }
        goto LABEL_20;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_41;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::MotionDropDetection::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 40) & 2) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 2) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionDropDetection::ByteSize(awd::metrics::MotionDropDetection *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  int v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
    int v2 = *((_DWORD *)this + 10);
  }
LABEL_8:
  unsigned int v5 = v3 + 5;
  if ((v2 & 4) == 0) {
    unsigned int v5 = v3;
  }
  if ((v2 & 8) != 0) {
    v5 += 5;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v5 + 5;
  }
  else {
    uint64_t result = v5;
  }
LABEL_15:
  *((_DWORD *)this + 9) = result;
  return result;
}

float awd::metrics::MotionDropDetection::CheckTypeAndMergeFrom(awd::metrics::MotionDropDetection *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionDropDetection::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionDropDetection::CopyFrom(awd::metrics::MotionDropDetection *this, const awd::metrics::MotionDropDetection *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionDropDetection *))(*(void *)this + 32))(this);
    return awd::metrics::MotionDropDetection::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionDropDetection::IsInitialized(awd::metrics::MotionDropDetection *this)
{
  return 1;
}

float awd::metrics::MotionDropDetection::Swap(awd::metrics::MotionDropDetection *this, awd::metrics::MotionDropDetection *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    float result = *((float *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((float *)a2 + 8) = result;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return result;
}

void *awd::metrics::MotionDropDetection::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionDropDetection");
}

double awd::metrics::MotionPedometerCalibration::SharedCtor(awd::metrics::MotionPedometerCalibration *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionPedometerCalibration *awd::metrics::MotionPedometerCalibration::MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  *(void *)this = &unk_26D7BAC48;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  awd::metrics::MotionPedometerCalibration::MergeFrom(this, a2);
  return this;
}

void sub_224922498(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionPedometerCalibration::MergeFrom(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    float result = *((float *)a2 + 5);
    *((_DWORD *)this + 12) |= 4u;
    *((float *)this + 5) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    float result = *((float *)a2 + 6);
    *((_DWORD *)this + 12) |= 8u;
    *((float *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    float result = *((float *)a2 + 7);
    *((_DWORD *)this + 12) |= 0x10u;
    *((float *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    float result = *((float *)a2 + 8);
    *((_DWORD *)this + 12) |= 0x20u;
    *((float *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        return result;
      }
      goto LABEL_12;
    }
LABEL_20:
    float result = *((float *)a2 + 9);
    *((_DWORD *)this + 12) |= 0x40u;
    *((float *)this + 9) = result;
    if ((*((_DWORD *)a2 + 12) & 0x80) == 0) {
      return result;
    }
LABEL_12:
    float result = *((float *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x80u;
    *((float *)this + 10) = result;
  }
  return result;
}

void sub_224922620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPedometerCalibration::~MotionPedometerCalibration(awd::metrics::MotionPedometerCalibration *this)
{
  *(void *)this = &unk_26D7BAC48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BAC48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BAC48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionPedometerCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::MotionPedometerCalibration::default_instance(awd::metrics::MotionPedometerCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionPedometerCalibration::default_instance_;
  if (!awd::metrics::MotionPedometerCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPedometerCalibration::default_instance_;
  }
  return result;
}

void awd::metrics::MotionPedometerCalibration::New(awd::metrics::MotionPedometerCalibration *this)
{
}

uint64_t awd::metrics::MotionPedometerCalibration::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::MotionPedometerCalibration::MergePartialFromCodedStream(awd::metrics::MotionPedometerCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 16);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          unint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_34;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_34:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v12;
          int v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v14 >= v9 || *v14 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_42:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v20;
        *((_DWORD *)this + 12) |= 4u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_46:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v20;
        *((_DWORD *)this + 12) |= 8u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_50:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v20;
        *((_DWORD *)this + 12) |= 0x10u;
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_54:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v20;
        *((_DWORD *)this + 12) |= 0x20u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_58:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 9) = v20;
        *((_DWORD *)this + 12) |= 0x40u;
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_62:
        unsigned int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v20))
        {
          *((_DWORD *)this + 10) = v20;
          *((_DWORD *)this + 12) |= 0x80u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_42;
        }
        goto LABEL_26;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_46;
        }
        goto LABEL_26;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_50;
        }
        goto LABEL_26;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_54;
        }
        goto LABEL_26;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_58;
        }
        goto LABEL_26;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_26;
        }
        goto LABEL_62;
      default:
        int v8 = TagFallback & 7;
LABEL_26:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::MotionPedometerCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 36), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  float v7 = *(float *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, v7, a3);
}

uint64_t awd::metrics::MotionPedometerCalibration::ByteSize(awd::metrics::MotionPedometerCalibration *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v6 = 2;
    }
    v3 += v6;
    goto LABEL_11;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_11:
  unsigned int v7 = v3 + 5;
  if ((v2 & 4) == 0) {
    unsigned int v7 = v3;
  }
  if ((v2 & 8) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x10) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x20) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x40) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v7 + 5;
  }
  else {
    uint64_t result = v7;
  }
LABEL_24:
  *((_DWORD *)this + 11) = result;
  return result;
}

float awd::metrics::MotionPedometerCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionPedometerCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionPedometerCalibration::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionPedometerCalibration::CopyFrom(awd::metrics::MotionPedometerCalibration *this, const awd::metrics::MotionPedometerCalibration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionPedometerCalibration *))(*(void *)this + 32))(this);
    return awd::metrics::MotionPedometerCalibration::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionPedometerCalibration::IsInitialized(awd::metrics::MotionPedometerCalibration *this)
{
  return 1;
}

float awd::metrics::MotionPedometerCalibration::Swap(awd::metrics::MotionPedometerCalibration *this, awd::metrics::MotionPedometerCalibration *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    int v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    int v7 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
    float result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

void *awd::metrics::MotionPedometerCalibration::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPedometerCalibration");
}

double awd::metrics::MotionGyroBiasEstimation_EndCount::SharedCtor(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionGyroBiasEstimation_EndCount *awd::metrics::MotionGyroBiasEstimation_EndCount::MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  *(void *)this = &unk_26D7BACC0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, a2);
  return this;
}

void sub_224922F98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 9) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 9) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 9) |= 4u;
    *((_DWORD *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 9) |= 8u;
    *((_DWORD *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_16:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 9) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    if ((*((_DWORD *)a2 + 9) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x20u;
    *((_DWORD *)this + 7) = v5;
  }
}

void sub_2249230E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::~MotionGyroBiasEstimation_EndCount(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  *(void *)this = &unk_26D7BACC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BACC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BACC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance(awd::metrics::MotionGyroBiasEstimation_EndCount *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  if (!awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroBiasEstimation_EndCount::default_instance_;
  }
  return result;
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::New(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream(awd::metrics::MotionGyroBiasEstimation_EndCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 12);
  int v6 = (unsigned int *)((char *)this + 16);
  int v7 = (unsigned int *)((char *)this + 20);
  int v8 = (unsigned int *)((char *)this + 24);
  int v9 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *int v4 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
LABEL_28:
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (result)
        {
          uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_31:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v16;
          unsigned int v21 = v16 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v21 >= v13 || *v21 != 24) {
          continue;
        }
        uint64_t v17 = v21 + 1;
        *((void *)a2 + 1) = v17;
LABEL_39:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v17;
          int v22 = v17 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 9) |= 4u;
        if ((unint64_t)v22 >= v13 || *v22 != 32) {
          continue;
        }
        int v18 = v22 + 1;
        *((void *)a2 + 1) = v18;
LABEL_47:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v18;
          unsigned int v23 = v18 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 9) |= 8u;
        if ((unint64_t)v23 >= v13 || *v23 != 40) {
          continue;
        }
        unsigned int v19 = v23 + 1;
        *((void *)a2 + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v19;
          int v24 = v19 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 9) |= 0x10u;
        if ((unint64_t)v24 >= v13 || *v24 != 48) {
          continue;
        }
        unsigned int v20 = v24 + 1;
        *((void *)a2 + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v25 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v20;
          int v25 = (unsigned __int8 *)(v20 + 1);
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 9) |= 0x20u;
        if (v25 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_39;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_47;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_55;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_63;
      default:
        int v12 = TagFallback & 7;
LABEL_22:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *awd::metrics::MotionGyroBiasEstimation_EndCount::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  unsigned int v6 = this[9];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
    if ((v5[9] & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[9];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = v5[7];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_35;
  }
  if (*((unsigned char *)this + 36))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 9);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v3 = (v10 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v3 = (v12 + v3);
  if ((v2 & 0x20) != 0)
  {
LABEL_31:
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if (v13 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    }
    else {
      int v14 = 2;
    }
    uint64_t v3 = (v14 + v3);
  }
LABEL_35:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CheckTypeAndMergeFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CopyFrom(awd::metrics::MotionGyroBiasEstimation_EndCount *this, const awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroBiasEstimation_EndCount *))(*(void *)this + 32))(this);
    awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::IsInitialized(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  return 1;
}

awd::metrics::MotionGyroBiasEstimation_EndCount *awd::metrics::MotionGyroBiasEstimation_EndCount::Swap(awd::metrics::MotionGyroBiasEstimation_EndCount *this, awd::metrics::MotionGyroBiasEstimation_EndCount *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v8;
    int v9 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v9;
  }
  return this;
}

void *awd::metrics::MotionGyroBiasEstimation_EndCount::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroBiasEstimation.EndCount");
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 52) = 0;
  *(void *)(this + 68) = 0;
  *(void *)(this + 60) = 0;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

awd::metrics::MotionGyroBiasEstimation *awd::metrics::MotionGyroBiasEstimation::MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  *(void *)this = &unk_26D7BAD38;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, a2);
  return this;
}

void sub_224923A68(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 4);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation::MergeFrom(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *((_DWORD *)a2 + 10);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 32, *((_DWORD *)this + 10) + v4);
    memcpy((void *)(*((void *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  int v5 = *((_DWORD *)a2 + 19);
  if (!(_BYTE)v5) {
    goto LABEL_14;
  }
  if (v5)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *((_DWORD *)this + 19) |= 1u;
    *((void *)this + 1) = v8;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  *((_DWORD *)this + 19) |= 2u;
  int v9 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 2);
  if (!v9) {
    operator new();
  }
  int v10 = (const awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)a2 + 2);
  if (!v10) {
    int v10 = *(const awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
  }
                                                                    + 16);
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(v9, v10);
  int v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 19) |= 4u;
  int v11 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 3);
  if (!v11) {
    operator new();
  }
  int v12 = (const awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)a2 + 3);
  if (!v12) {
    int v12 = *(const awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
  }
                                                                    + 24);
  awd::metrics::MotionGyroBiasEstimation_EndCount::MergeFrom(v11, v12);
  int v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x10) == 0)
  {
LABEL_10:
    if ((v5 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    int v14 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 19) |= 0x20u;
    *((_DWORD *)this + 14) = v14;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x40) == 0)
    {
LABEL_12:
      if ((v5 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_28:
  int v13 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 19) |= 0x10u;
  *((_DWORD *)this + 13) = v13;
  int v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v5 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_30:
  int v15 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 19) |= 0x40u;
  *((_DWORD *)this + 15) = v15;
  int v5 = *((_DWORD *)a2 + 19);
  if ((v5 & 0x80) != 0)
  {
LABEL_13:
    int v6 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 19) |= 0x80u;
    *((_DWORD *)this + 16) = v6;
    int v5 = *((_DWORD *)a2 + 19);
  }
LABEL_14:
  if ((v5 & 0x100) != 0)
  {
    int v7 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 19) |= 0x100u;
    *((_DWORD *)this + 17) = v7;
  }
}

void sub_224923D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroBiasEstimation::~MotionGyroBiasEstimation(awd::metrics::MotionGyroBiasEstimation *this)
{
  *(void *)this = &unk_26D7BAD38;
  awd::metrics::MotionGyroBiasEstimation::SharedDtor(this);
  uint64_t v2 = *((void *)this + 4);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionGyroBiasEstimation::~MotionGyroBiasEstimation(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::MotionGyroBiasEstimation::SharedDtor(void *this)
{
  if ((void *)awd::metrics::MotionGyroBiasEstimation::default_instance_ != this)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (void *)v1[3];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v3();
    }
  }
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::default_instance(awd::metrics::MotionGyroBiasEstimation *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionGyroBiasEstimation::default_instance_;
  if (!awd::metrics::MotionGyroBiasEstimation::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroBiasEstimation::default_instance_;
  }
  return result;
}

void awd::metrics::MotionGyroBiasEstimation::New(awd::metrics::MotionGyroBiasEstimation *this)
{
}

uint64_t awd::metrics::MotionGyroBiasEstimation::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 76);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 76);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 76);
      }
    }
    *(void *)(this + 60) = 0;
    *(void *)(this + 52) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 68) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroBiasEstimation::MergePartialFromCodedStream(awd::metrics::MotionGyroBiasEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 32;
  int v5 = (unint64_t *)((char *)this + 8);
  int v6 = (unsigned int *)((char *)this + 52);
  int v7 = (unsigned int *)((char *)this + 56);
  uint64_t v8 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v13;
          int v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
        }
        int v15 = *((_DWORD *)this + 19) | 1;
        *((_DWORD *)this + 19) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((void *)a2 + 1) = v14 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_29;
        }
        int v15 = *((_DWORD *)this + 19);
LABEL_40:
        *((_DWORD *)this + 19) = v15 | 2;
        int v25 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 2);
        if (!v25) {
          operator new();
        }
        unsigned int v53 = 0;
        int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream(v25, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v30 = __OFSUB__(v29, 1);
        int v31 = v29 - 1;
        if (v31 < 0 == v30) {
          *((_DWORD *)a2 + 14) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_54:
        *((_DWORD *)this + 19) |= 4u;
        int v33 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 3);
        if (!v33) {
          operator new();
        }
        unsigned int v53 = 0;
        uint64_t v34 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v34;
          *((void *)a2 + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)a2 + 14);
        int v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::MotionGyroBiasEstimation_EndCount::MergePartialFromCodedStream(v33, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v30 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v30) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v39 >= v17 || *v39 != 34) {
          continue;
        }
        int v16 = v39 + 1;
        *((void *)a2 + 1) = v16;
        goto LABEL_68;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_54;
        }
        goto LABEL_29;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x22u, a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
LABEL_82:
          int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
          if ((unint64_t)v44 < v18 && *v44 == 40)
          {
            unsigned int v19 = v44 + 1;
            *((void *)a2 + 1) = v19;
LABEL_85:
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
              if (!result) {
                return result;
              }
              int v45 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v18 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int *v6 = *v19;
              int v45 = v19 + 1;
              *((void *)a2 + 1) = v45;
            }
            *((_DWORD *)this + 19) |= 0x10u;
            if ((unint64_t)v45 < v18 && *v45 == 48)
            {
              unsigned int v20 = v45 + 1;
              *((void *)a2 + 1) = v20;
LABEL_93:
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                if (!result) {
                  return result;
                }
                int v46 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v18 = *((void *)a2 + 2);
              }
              else
              {
                *int v7 = *v20;
                int v46 = v20 + 1;
                *((void *)a2 + 1) = v46;
              }
              *((_DWORD *)this + 19) |= 0x20u;
              if ((unint64_t)v46 < v18 && *v46 == 56)
              {
                unsigned int v21 = v46 + 1;
                *((void *)a2 + 1) = v21;
LABEL_101:
                if ((unint64_t)v21 >= v18 || *v21 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                  if (!result) {
                    return result;
                  }
                  int v47 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v18 = *((void *)a2 + 2);
                }
                else
                {
                  *uint64_t v8 = *v21;
                  int v47 = v21 + 1;
                  *((void *)a2 + 1) = v47;
                }
                *((_DWORD *)this + 19) |= 0x40u;
                if ((unint64_t)v47 < v18 && *v47 == 64)
                {
                  int v22 = v47 + 1;
                  *((void *)a2 + 1) = v22;
LABEL_109:
                  unsigned int v53 = 0;
                  if ((unint64_t)v22 >= v18 || *v22 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                    if (!result) {
                      return result;
                    }
                    unsigned int v48 = v53;
                    unsigned int v49 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v18 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v48 = *v22;
                    unsigned int v49 = v22 + 1;
                    *((void *)a2 + 1) = v49;
                  }
                  *((_DWORD *)this + 16) = v48;
                  *((_DWORD *)this + 19) |= 0x80u;
                  if ((unint64_t)v49 < v18 && *v49 == 72)
                  {
                    unsigned int v23 = v49 + 1;
                    *((void *)a2 + 1) = v23;
LABEL_117:
                    unsigned int v53 = 0;
                    if ((unint64_t)v23 >= v18 || *v23 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53);
                      if (!result) {
                        return result;
                      }
                      unsigned int v50 = v53;
                      int v51 = (unsigned __int8 *)*((void *)a2 + 1);
                      unint64_t v18 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v50 = *v23;
                      int v51 = (unsigned __int8 *)(v23 + 1);
                      *((void *)a2 + 1) = v51;
                    }
                    *((_DWORD *)this + 17) = v50;
                    *((_DWORD *)this + 19) |= 0x100u;
                    if (v51 == (unsigned __int8 *)v18
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        if (v11 != 2)
        {
LABEL_29:
          if (v11 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
LABEL_68:
        unsigned int v53 = 0;
        if ((unint64_t)v16 < v17 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v53 = *v16;
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_72;
        }
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53))
        {
LABEL_72:
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v52 = 0;
            unsigned int v40 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
            }
              }
            else
            {
              unsigned int v52 = *v40;
              *((void *)a2 + 1) = v40 + 1;
            }
            int v41 = *((_DWORD *)this + 10);
            if (v41 == *((_DWORD *)this + 11))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v4, v41 + 1);
              int v41 = *((_DWORD *)this + 10);
            }
            unsigned int v42 = v52;
            uint64_t v43 = *((void *)this + 4);
            *((_DWORD *)this + 10) = v41 + 1;
            *(_DWORD *)(v43 + 4 * v41) = v42;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          goto LABEL_82;
        }
        return 0;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_85;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_93;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_101;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_109;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_117;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_29;
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a4)
{
  unsigned int v21 = 0;
  int v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v21 = *v7;
    *((void *)this + 1) = v7 + 1;
  }
  int v9 = *(_DWORD *)(a4 + 8);
  if (v9 == *(_DWORD *)(a4 + 12))
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(a4, v9 + 1);
    int v9 = *(_DWORD *)(a4 + 8);
  }
  unsigned int v10 = v21;
  uint64_t v11 = *(void *)a4;
  *(_DWORD *)(a4 + 8) = v9 + 1;
  *(_DWORD *)(v11 + 4 * v9) = v10;
  int v12 = *(_DWORD *)(a4 + 12) - *(_DWORD *)(a4 + 8);
  if (v12 >= 1)
  {
    int v13 = v12 + 1;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        unint64_t v17 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((int)v14 - (int)v17 < 2 || (a2 & 0x7F | 0x80) != *v17 || v17[1] != (a2 >> 7)) {
          return 1;
        }
        int v16 = (char *)(v17 + 2);
      }
      else
      {
        int v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != a2) {
          return 1;
        }
        int v16 = (char *)(v15 + 1);
      }
      *((void *)this + 1) = v16;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v21 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v18 = *(_DWORD *)(a4 + 8);
      if (v18 >= *(_DWORD *)(a4 + 12))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
        int v18 = *(_DWORD *)(a4 + 8);
      }
      unsigned int v19 = v21;
      uint64_t v20 = *(void *)a4;
      *(_DWORD *)(a4 + 8) = v18 + 1;
      *(_DWORD *)(v20 + 4 * v18) = v19;
      --v13;
    }
    while (v13 > 1);
  }
  return 1;
}

void sub_2249248B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionGyroBiasEstimation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 76);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::MotionGyroBiasEstimation::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 4) != 0)
  {
LABEL_9:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(awd::metrics::MotionGyroBiasEstimation::default_instance_ + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
LABEL_12:
  if (*(int *)(v5 + 40) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 40) >= 1)
    {
      uint64_t v9 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v9;
      }
      while (v9 < *(int *)(v5 + 40));
    }
  }
  int v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x10) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
    int v10 = *(_DWORD *)(v5 + 76);
    if ((v10 & 0x20) == 0)
    {
LABEL_18:
      if ((v10 & 0x40) == 0) {
        goto LABEL_19;
      }
      goto LABEL_24;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_18;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x40) == 0)
  {
LABEL_19:
    if ((v10 & 0x80) == 0) {
      goto LABEL_20;
    }
LABEL_25:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 76) & 0x100) == 0) {
      return this;
    }
    goto LABEL_26;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 76);
  if ((v10 & 0x80) != 0) {
    goto LABEL_25;
  }
LABEL_20:
  if ((v10 & 0x100) == 0) {
    return this;
  }
LABEL_26:
  uint64_t v11 = *(unsigned int *)(v5 + 68);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v11, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionGyroBiasEstimation::ByteSize(awd::metrics::MotionGyroBiasEstimation *this)
{
  int v2 = *((_DWORD *)this + 19);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 19);
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 2);
  if (!v4) {
    int v4 = *(awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
  }
                                                             + 16);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  v3 += v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 19);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (awd::metrics::MotionGyroBiasEstimation_EndCount *)*((void *)this + 3);
    if (!v8) {
      uint64_t v8 = *(awd::metrics::MotionGyroBiasEstimation_EndCount **)(awd::metrics::MotionGyroBiasEstimation::default_instance_
    }
                                                               + 24);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::MotionGyroBiasEstimation_EndCount::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 19);
    if ((v2 & 0x10) == 0)
    {
LABEL_16:
      if ((v2 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_31:
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x80) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_39:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 19);
  }
  else
  {
    int v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x100) != 0)
  {
LABEL_45:
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    }
    else
    {
      int v21 = 2;
    }
    v3 += v21;
  }
LABEL_51:
  int v22 = *((_DWORD *)this + 10);
  if (v22 < 1)
  {
    LODWORD(v24) = 0;
  }
  else
  {
    uint64_t v23 = 0;
    LODWORD(v24) = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 4)
                                                                                             + 4 * v23);
      if (v25 >= 0x80)
      {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
        int v22 = *((_DWORD *)this + 10);
      }
      else
      {
        int v26 = 1;
      }
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v26 + v24);
      ++v23;
    }
    while (v23 < v22);
    if ((int)v24 > 0)
    {
      if (v24 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
      }
      else {
        int v27 = 2;
      }
      v3 += v27;
    }
  }
  *((_DWORD *)this + 12) = v24;
  uint64_t result = (v3 + v24);
  *((_DWORD *)this + 18) = result;
  return result;
}

void awd::metrics::MotionGyroBiasEstimation::CheckTypeAndMergeFrom(awd::metrics::MotionGyroBiasEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroBiasEstimation::CopyFrom(awd::metrics::MotionGyroBiasEstimation *this, const awd::metrics::MotionGyroBiasEstimation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroBiasEstimation *))(*(void *)this + 32))(this);
    awd::metrics::MotionGyroBiasEstimation::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroBiasEstimation::IsInitialized(awd::metrics::MotionGyroBiasEstimation *this)
{
  return 1;
}

double awd::metrics::MotionGyroBiasEstimation::Swap(awd::metrics::MotionGyroBiasEstimation *this, awd::metrics::MotionGyroBiasEstimation *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    double result = *((double *)a2 + 5);
    *((void *)a2 + 4) = v6;
    uint64_t v8 = *((void *)this + 5);
    *((double *)this + 5) = result;
    *((void *)a2 + 5) = v8;
    LODWORD(v6) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    LODWORD(v6) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v6;
    LODWORD(v6) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v6;
    LODWORD(v6) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    LODWORD(v6) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
    LODWORD(v6) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v6;
    LODWORD(v6) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
  }
  return result;
}

void *awd::metrics::MotionGyroBiasEstimation::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroBiasEstimation");
}

BOOL awd::metrics::MotionFitnessSession_WorkoutType_IsValid(awd::metrics *this)
{
  return this < 0x19;
}

BOOL awd::metrics::MotionFitnessSession_HRSource_IsValid(awd::metrics *this)
{
  return this < 2;
}

BOOL awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(awd::metrics *this)
{
  return this < 5;
}

double awd::metrics::MotionFitnessSession::SharedCtor(awd::metrics::MotionFitnessSession *this)
{
  *((_DWORD *)this + 112) = 0;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 52) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = 0;
  *((void *)this + 3) = v1;
  *(void *)((char *)this + 460) = 0;
  *(void *)((char *)this + 452) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  return result;
}

awd::metrics::MotionFitnessSession *awd::metrics::MotionFitnessSession::MotionFitnessSession(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 112) = 0;
  *(void *)this = &unk_26D7BADB0;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 52) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 2) = 0;
  *((void *)this + 3) = v3;
  *(void *)((char *)this + 460) = 0;
  *(void *)((char *)this + 452) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_OWORD *)((char *)this + 53) = 0u;
  *(_OWORD *)((char *)this + 69) = 0u;
  *(_OWORD *)((char *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 101) = 0u;
  *(_OWORD *)((char *)this + 117) = 0u;
  *(_OWORD *)((char *)this + 133) = 0u;
  *(_OWORD *)((char *)this + 149) = 0u;
  *(_OWORD *)((char *)this + 165) = 0u;
  *(_OWORD *)((char *)this + 181) = 0u;
  *(_OWORD *)((char *)this + 197) = 0u;
  *(_OWORD *)((char *)this + 213) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *(_OWORD *)((char *)this + 365) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  awd::metrics::MotionFitnessSession::MergeFrom(this, a2);
  return this;
}

void sub_2249250B8(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x22A61A810](*v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessSession::MergeFrom(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v116);
  }
  int v4 = *((_DWORD *)a2 + 62);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 240, *((_DWORD *)this + 62) + v4);
    memcpy((void *)(*((void *)this + 30) + 4 * *((int *)this + 62)), *((const void **)a2 + 30), 4 * *((int *)a2 + 62));
    *((_DWORD *)this + 62) += *((_DWORD *)a2 + 62);
  }
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if (!(_BYTE)v5) {
    goto LABEL_18;
  }
  if (v5)
  {
    uint64_t v6 = *((void *)a2 + 1);
    *((_DWORD *)this + 113) |= 1u;
    *((void *)this + 1) = v6;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 2) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 4);
    if (v7 >= 0x19) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 2u;
    *((_DWORD *)this + 4) = v7;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 4) != 0)
  {
    char v27 = *((unsigned char *)a2 + 52);
    *((_DWORD *)this + 113) |= 4u;
    *((unsigned char *)this + 52) = v27;
    unsigned int v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 8) == 0)
    {
LABEL_13:
      if ((v5 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_142;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v28 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 113) |= 8u;
  int v29 = (std::string *)*((void *)this + 3);
  if (v29 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v29, v28);
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_143:
    int v31 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 113) |= 0x20u;
    *((_DWORD *)this + 8) = v31;
    unsigned int v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x40) == 0)
    {
LABEL_16:
      if ((v5 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_144;
  }
LABEL_142:
  int v30 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 113) |= 0x10u;
  *((_DWORD *)this + 5) = v30;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x20) != 0) {
    goto LABEL_143;
  }
LABEL_15:
  if ((v5 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_144:
  int v32 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 113) |= 0x40u;
  *((_DWORD *)this + 9) = v32;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x80) != 0)
  {
LABEL_17:
    int v8 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 113) |= 0x80u;
    *((_DWORD *)this + 10) = v8;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
LABEL_18:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_36;
  }
  if ((v5 & 0x100) != 0)
  {
    char v9 = *((unsigned char *)a2 + 53);
    *((_DWORD *)this + 113) |= 0x100u;
    *((unsigned char *)this + 53) = v9;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x200) != 0)
  {
    unsigned int v10 = *((_DWORD *)a2 + 11);
    if (v10 >= 2) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 0x200u;
    *((_DWORD *)this + 11) = v10;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x400) != 0)
  {
    int v11 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 113) |= 0x400u;
    *((_DWORD *)this + 12) = v11;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x800) != 0)
  {
    unsigned int v12 = *((_DWORD *)a2 + 14);
    if (v12 >= 5) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 0x800u;
    *((_DWORD *)this + 14) = v12;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x1000) != 0)
  {
    unsigned int v13 = *((_DWORD *)a2 + 15);
    if (v13 >= 5) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 0x1000u;
    *((_DWORD *)this + 15) = v13;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x2000) != 0)
  {
    int v33 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 113) |= 0x2000u;
    *((_DWORD *)this + 16) = v33;
    unsigned int v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x4000) == 0)
    {
LABEL_34:
      if ((v5 & 0x8000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }
  }
  else if ((v5 & 0x4000) == 0)
  {
    goto LABEL_34;
  }
  int v34 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 113) |= 0x4000u;
  *((_DWORD *)this + 17) = v34;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x8000) != 0)
  {
LABEL_35:
    char v14 = *((unsigned char *)a2 + 54);
    *((_DWORD *)this + 113) |= 0x8000u;
    *((unsigned char *)this + 54) = v14;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
LABEL_36:
  if ((v5 & 0xFF0000) == 0) {
    goto LABEL_51;
  }
  if ((v5 & 0x10000) != 0)
  {
    char v15 = *((unsigned char *)a2 + 55);
    *((_DWORD *)this + 113) |= 0x10000u;
    *((unsigned char *)this + 55) = v15;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x20000) != 0)
  {
    unsigned int v16 = *((_DWORD *)a2 + 18);
    if (v16 >= 5) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 0x20000u;
    *((_DWORD *)this + 18) = v16;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x40000) != 0)
  {
    unsigned int v17 = *((_DWORD *)a2 + 19);
    if (v17 >= 5) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 113) |= 0x40000u;
    *((_DWORD *)this + 19) = v17;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
  if ((v5 & 0x80000) != 0)
  {
    int v77 = *((_DWORD *)a2 + 20);
    *((_DWORD *)this + 113) |= 0x80000u;
    *((_DWORD *)this + 20) = v77;
    unsigned int v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x100000) == 0)
    {
LABEL_47:
      if ((v5 & 0x200000) == 0) {
        goto LABEL_48;
      }
      goto LABEL_199;
    }
  }
  else if ((v5 & 0x100000) == 0)
  {
    goto LABEL_47;
  }
  int v78 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 113) |= 0x100000u;
  *((_DWORD *)this + 21) = v78;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x200000) == 0)
  {
LABEL_48:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_200;
  }
LABEL_199:
  int v79 = *((_DWORD *)a2 + 22);
  *((_DWORD *)this + 113) |= 0x200000u;
  *((_DWORD *)this + 22) = v79;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x400000) == 0)
  {
LABEL_49:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_200:
  int v80 = *((_DWORD *)a2 + 23);
  *((_DWORD *)this + 113) |= 0x400000u;
  *((_DWORD *)this + 23) = v80;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x800000) != 0)
  {
LABEL_50:
    int v18 = *((_DWORD *)a2 + 24);
    *((_DWORD *)this + 113) |= 0x800000u;
    *((_DWORD *)this + 24) = v18;
    unsigned int v5 = *((_DWORD *)a2 + 113);
  }
LABEL_51:
  if (!HIBYTE(v5)) {
    goto LABEL_60;
  }
  if ((v5 & 0x1000000) != 0)
  {
    int v81 = *((_DWORD *)a2 + 25);
    *((_DWORD *)this + 113) |= 0x1000000u;
    *((_DWORD *)this + 25) = v81;
    unsigned int v5 = *((_DWORD *)a2 + 113);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v5 & 0x4000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_204;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  int v82 = *((_DWORD *)a2 + 26);
  *((_DWORD *)this + 113) |= 0x2000000u;
  *((_DWORD *)this + 26) = v82;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_205;
  }
LABEL_204:
  int v83 = *((_DWORD *)a2 + 27);
  *((_DWORD *)this + 113) |= 0x4000000u;
  *((_DWORD *)this + 27) = v83;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_206;
  }
LABEL_205:
  int v84 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 113) |= 0x8000000u;
  *((_DWORD *)this + 28) = v84;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_57:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_207;
  }
LABEL_206:
  int v85 = *((_DWORD *)a2 + 29);
  *((_DWORD *)this + 113) |= 0x10000000u;
  *((_DWORD *)this + 29) = v85;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_59;
    }
LABEL_208:
    int v87 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 113) |= 0x40000000u;
    *((_DWORD *)this + 31) = v87;
    if ((*((_DWORD *)a2 + 113) & 0x80000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_209;
  }
LABEL_207:
  int v86 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 113) |= 0x20000000u;
  *((_DWORD *)this + 30) = v86;
  unsigned int v5 = *((_DWORD *)a2 + 113);
  if ((v5 & 0x40000000) != 0) {
    goto LABEL_208;
  }
LABEL_59:
  if ((v5 & 0x80000000) == 0) {
    goto LABEL_60;
  }
LABEL_209:
  int v88 = *((_DWORD *)a2 + 32);
  *((_DWORD *)this + 113) |= 0x80000000;
  *((_DWORD *)this + 32) = v88;
LABEL_60:
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if (!(_BYTE)v19) {
    goto LABEL_70;
  }
  if (v19)
  {
    int v35 = *((_DWORD *)a2 + 33);
    *((_DWORD *)this + 114) |= 1u;
    *((_DWORD *)this + 33) = v35;
    unsigned int v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 2) == 0)
    {
LABEL_63:
      if ((v19 & 4) == 0) {
        goto LABEL_64;
      }
      goto LABEL_151;
    }
  }
  else if ((v19 & 2) == 0)
  {
    goto LABEL_63;
  }
  int v36 = *((_DWORD *)a2 + 34);
  *((_DWORD *)this + 114) |= 2u;
  *((_DWORD *)this + 34) = v36;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 4) == 0)
  {
LABEL_64:
    if ((v19 & 8) == 0) {
      goto LABEL_65;
    }
    goto LABEL_152;
  }
LABEL_151:
  int v37 = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 114) |= 4u;
  *((_DWORD *)this + 35) = v37;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 8) == 0)
  {
LABEL_65:
    if ((v19 & 0x10) == 0) {
      goto LABEL_66;
    }
    goto LABEL_153;
  }
LABEL_152:
  int v38 = *((_DWORD *)a2 + 36);
  *((_DWORD *)this + 114) |= 8u;
  *((_DWORD *)this + 36) = v38;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x10) == 0)
  {
LABEL_66:
    if ((v19 & 0x20) == 0) {
      goto LABEL_67;
    }
    goto LABEL_154;
  }
LABEL_153:
  int v39 = *((_DWORD *)a2 + 37);
  *((_DWORD *)this + 114) |= 0x10u;
  *((_DWORD *)this + 37) = v39;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x20) == 0)
  {
LABEL_67:
    if ((v19 & 0x40) == 0) {
      goto LABEL_68;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v40 = *((unsigned char *)a2 + 224);
  *((_DWORD *)this + 114) |= 0x20u;
  *((unsigned char *)this + 224) = v40;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x40) == 0)
  {
LABEL_68:
    if ((v19 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_155:
  int v41 = *((_DWORD *)a2 + 38);
  *((_DWORD *)this + 114) |= 0x40u;
  *((_DWORD *)this + 38) = v41;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x80) != 0)
  {
LABEL_69:
    int v20 = *((_DWORD *)a2 + 39);
    *((_DWORD *)this + 114) |= 0x80u;
    *((_DWORD *)this + 39) = v20;
    unsigned int v19 = *((_DWORD *)a2 + 114);
  }
LABEL_70:
  if ((v19 & 0xFF00) == 0) {
    goto LABEL_80;
  }
  if ((v19 & 0x100) != 0)
  {
    int v42 = *((_DWORD *)a2 + 40);
    *((_DWORD *)this + 114) |= 0x100u;
    *((_DWORD *)this + 40) = v42;
    unsigned int v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x200) == 0)
    {
LABEL_73:
      if ((v19 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_159;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  char v43 = *((unsigned char *)a2 + 225);
  *((_DWORD *)this + 114) |= 0x200u;
  *((unsigned char *)this + 225) = v43;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x400) == 0)
  {
LABEL_74:
    if ((v19 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v44 = *((_DWORD *)a2 + 41);
  *((_DWORD *)this + 114) |= 0x400u;
  *((_DWORD *)this + 41) = v44;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x800) == 0)
  {
LABEL_75:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_161;
  }
LABEL_160:
  int v45 = *((_DWORD *)a2 + 42);
  *((_DWORD *)this + 114) |= 0x800u;
  *((_DWORD *)this + 42) = v45;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x1000) == 0)
  {
LABEL_76:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_162;
  }
LABEL_161:
  int v46 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 114) |= 0x1000u;
  *((_DWORD *)this + 43) = v46;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x2000) == 0)
  {
LABEL_77:
    if ((v19 & 0x4000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_163;
  }
LABEL_162:
  int v47 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 114) |= 0x2000u;
  *((_DWORD *)this + 44) = v47;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x4000) == 0)
  {
LABEL_78:
    if ((v19 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_79;
  }
LABEL_163:
  int v48 = *((_DWORD *)a2 + 45);
  *((_DWORD *)this + 114) |= 0x4000u;
  *((_DWORD *)this + 45) = v48;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x8000) != 0)
  {
LABEL_79:
    int v21 = *((_DWORD *)a2 + 46);
    *((_DWORD *)this + 114) |= 0x8000u;
    *((_DWORD *)this + 46) = v21;
    unsigned int v19 = *((_DWORD *)a2 + 114);
  }
LABEL_80:
  if ((v19 & 0xFF0000) == 0) {
    goto LABEL_90;
  }
  if ((v19 & 0x10000) != 0)
  {
    int v49 = *((_DWORD *)a2 + 47);
    *((_DWORD *)this + 114) |= 0x10000u;
    *((_DWORD *)this + 47) = v49;
    unsigned int v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x20000) == 0)
    {
LABEL_83:
      if ((v19 & 0x40000) == 0) {
        goto LABEL_84;
      }
      goto LABEL_167;
    }
  }
  else if ((v19 & 0x20000) == 0)
  {
    goto LABEL_83;
  }
  int v50 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 114) |= 0x20000u;
  *((_DWORD *)this + 48) = v50;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x40000) == 0)
  {
LABEL_84:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_168;
  }
LABEL_167:
  int v51 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 114) |= 0x40000u;
  *((_DWORD *)this + 49) = v51;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x80000) == 0)
  {
LABEL_85:
    if ((v19 & 0x100000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_169;
  }
LABEL_168:
  int v52 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 114) |= 0x80000u;
  *((_DWORD *)this + 50) = v52;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x100000) == 0)
  {
LABEL_86:
    if ((v19 & 0x200000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_170;
  }
LABEL_169:
  int v53 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 114) |= 0x100000u;
  *((_DWORD *)this + 51) = v53;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x200000) == 0)
  {
LABEL_87:
    if ((v19 & 0x400000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_171;
  }
LABEL_170:
  int v54 = *((_DWORD *)a2 + 52);
  *((_DWORD *)this + 114) |= 0x200000u;
  *((_DWORD *)this + 52) = v54;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x400000) == 0)
  {
LABEL_88:
    if ((v19 & 0x800000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_171:
  int v55 = *((_DWORD *)a2 + 53);
  *((_DWORD *)this + 114) |= 0x400000u;
  *((_DWORD *)this + 53) = v55;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x800000) != 0)
  {
LABEL_89:
    int v22 = *((_DWORD *)a2 + 54);
    *((_DWORD *)this + 114) |= 0x800000u;
    *((_DWORD *)this + 54) = v22;
    unsigned int v19 = *((_DWORD *)a2 + 114);
  }
LABEL_90:
  if (!HIBYTE(v19)) {
    goto LABEL_98;
  }
  if ((v19 & 0x1000000) != 0)
  {
    int v89 = *((_DWORD *)a2 + 55);
    *((_DWORD *)this + 114) |= 0x1000000u;
    *((_DWORD *)this + 55) = v89;
    unsigned int v19 = *((_DWORD *)a2 + 114);
    if ((v19 & 0x2000000) == 0)
    {
LABEL_93:
      if ((v19 & 0x4000000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_212;
    }
  }
  else if ((v19 & 0x2000000) == 0)
  {
    goto LABEL_93;
  }
  char v90 = *((unsigned char *)a2 + 226);
  *((_DWORD *)this + 114) |= 0x2000000u;
  *((unsigned char *)this + 226) = v90;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x4000000) == 0)
  {
LABEL_94:
    if ((v19 & 0x8000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_213;
  }
LABEL_212:
  int v91 = *((_DWORD *)a2 + 57);
  *((_DWORD *)this + 114) |= 0x4000000u;
  *((_DWORD *)this + 57) = v91;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x8000000) == 0)
  {
LABEL_95:
    if ((v19 & 0x10000000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_214;
  }
LABEL_213:
  int v92 = *((_DWORD *)a2 + 58);
  *((_DWORD *)this + 114) |= 0x8000000u;
  *((_DWORD *)this + 58) = v92;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x10000000) == 0)
  {
LABEL_96:
    if ((v19 & 0x20000000) == 0) {
      goto LABEL_97;
    }
LABEL_215:
    int v94 = *((_DWORD *)a2 + 64);
    *((_DWORD *)this + 114) |= 0x20000000u;
    *((_DWORD *)this + 64) = v94;
    if ((*((_DWORD *)a2 + 114) & 0x80000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_216;
  }
LABEL_214:
  int v93 = *((_DWORD *)a2 + 59);
  *((_DWORD *)this + 114) |= 0x10000000u;
  *((_DWORD *)this + 59) = v93;
  unsigned int v19 = *((_DWORD *)a2 + 114);
  if ((v19 & 0x20000000) != 0) {
    goto LABEL_215;
  }
LABEL_97:
  if ((v19 & 0x80000000) == 0) {
    goto LABEL_98;
  }
LABEL_216:
  uint64_t v95 = *((void *)a2 + 33);
  *((_DWORD *)this + 114) |= 0x80000000;
  *((void *)this + 33) = v95;
LABEL_98:
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if (!(_BYTE)v23) {
    goto LABEL_108;
  }
  if (v23)
  {
    int v56 = *((_DWORD *)a2 + 65);
    *((_DWORD *)this + 115) |= 1u;
    *((_DWORD *)this + 65) = v56;
    unsigned int v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 2) == 0)
    {
LABEL_101:
      if ((v23 & 4) == 0) {
        goto LABEL_102;
      }
      goto LABEL_175;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_101;
  }
  int v57 = *((_DWORD *)a2 + 68);
  *((_DWORD *)this + 115) |= 2u;
  *((_DWORD *)this + 68) = v57;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 4) == 0)
  {
LABEL_102:
    if ((v23 & 8) == 0) {
      goto LABEL_103;
    }
    goto LABEL_176;
  }
LABEL_175:
  int v58 = *((_DWORD *)a2 + 69);
  *((_DWORD *)this + 115) |= 4u;
  *((_DWORD *)this + 69) = v58;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 8) == 0)
  {
LABEL_103:
    if ((v23 & 0x10) == 0) {
      goto LABEL_104;
    }
    goto LABEL_177;
  }
LABEL_176:
  int v59 = *((_DWORD *)a2 + 70);
  *((_DWORD *)this + 115) |= 8u;
  *((_DWORD *)this + 70) = v59;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x10) == 0)
  {
LABEL_104:
    if ((v23 & 0x20) == 0) {
      goto LABEL_105;
    }
    goto LABEL_178;
  }
LABEL_177:
  int v60 = *((_DWORD *)a2 + 71);
  *((_DWORD *)this + 115) |= 0x10u;
  *((_DWORD *)this + 71) = v60;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x20) == 0)
  {
LABEL_105:
    if ((v23 & 0x40) == 0) {
      goto LABEL_106;
    }
    goto LABEL_179;
  }
LABEL_178:
  int v61 = *((_DWORD *)a2 + 72);
  *((_DWORD *)this + 115) |= 0x20u;
  *((_DWORD *)this + 72) = v61;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40) == 0)
  {
LABEL_106:
    if ((v23 & 0x80) == 0) {
      goto LABEL_108;
    }
    goto LABEL_107;
  }
LABEL_179:
  int v62 = *((_DWORD *)a2 + 73);
  *((_DWORD *)this + 115) |= 0x40u;
  *((_DWORD *)this + 73) = v62;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x80) != 0)
  {
LABEL_107:
    int v24 = *((_DWORD *)a2 + 74);
    *((_DWORD *)this + 115) |= 0x80u;
    *((_DWORD *)this + 74) = v24;
    unsigned int v23 = *((_DWORD *)a2 + 115);
  }
LABEL_108:
  if ((v23 & 0xFF00) == 0) {
    goto LABEL_118;
  }
  if ((v23 & 0x100) != 0)
  {
    int v63 = *((_DWORD *)a2 + 75);
    *((_DWORD *)this + 115) |= 0x100u;
    *((_DWORD *)this + 75) = v63;
    unsigned int v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x200) == 0)
    {
LABEL_111:
      if ((v23 & 0x400) == 0) {
        goto LABEL_112;
      }
      goto LABEL_183;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_111;
  }
  int v64 = *((_DWORD *)a2 + 76);
  *((_DWORD *)this + 115) |= 0x200u;
  *((_DWORD *)this + 76) = v64;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x400) == 0)
  {
LABEL_112:
    if ((v23 & 0x800) == 0) {
      goto LABEL_113;
    }
    goto LABEL_184;
  }
LABEL_183:
  int v65 = *((_DWORD *)a2 + 77);
  *((_DWORD *)this + 115) |= 0x400u;
  *((_DWORD *)this + 77) = v65;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x800) == 0)
  {
LABEL_113:
    if ((v23 & 0x1000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_185;
  }
LABEL_184:
  int v66 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 115) |= 0x800u;
  *((_DWORD *)this + 78) = v66;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x1000) == 0)
  {
LABEL_114:
    if ((v23 & 0x2000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_186;
  }
LABEL_185:
  int v67 = *((_DWORD *)a2 + 79);
  *((_DWORD *)this + 115) |= 0x1000u;
  *((_DWORD *)this + 79) = v67;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x2000) == 0)
  {
LABEL_115:
    if ((v23 & 0x4000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v68 = *((_DWORD *)a2 + 80);
  *((_DWORD *)this + 115) |= 0x2000u;
  *((_DWORD *)this + 80) = v68;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x4000) == 0)
  {
LABEL_116:
    if ((v23 & 0x8000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
LABEL_187:
  int v69 = *((_DWORD *)a2 + 81);
  *((_DWORD *)this + 115) |= 0x4000u;
  *((_DWORD *)this + 81) = v69;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x8000) != 0)
  {
LABEL_117:
    int v25 = *((_DWORD *)a2 + 82);
    *((_DWORD *)this + 115) |= 0x8000u;
    *((_DWORD *)this + 82) = v25;
    unsigned int v23 = *((_DWORD *)a2 + 115);
  }
LABEL_118:
  if ((v23 & 0xFF0000) == 0) {
    goto LABEL_128;
  }
  if ((v23 & 0x10000) != 0)
  {
    int v70 = *((_DWORD *)a2 + 83);
    *((_DWORD *)this + 115) |= 0x10000u;
    *((_DWORD *)this + 83) = v70;
    unsigned int v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x20000) == 0)
    {
LABEL_121:
      if ((v23 & 0x40000) == 0) {
        goto LABEL_122;
      }
      goto LABEL_191;
    }
  }
  else if ((v23 & 0x20000) == 0)
  {
    goto LABEL_121;
  }
  int v71 = *((_DWORD *)a2 + 84);
  *((_DWORD *)this + 115) |= 0x20000u;
  *((_DWORD *)this + 84) = v71;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40000) == 0)
  {
LABEL_122:
    if ((v23 & 0x80000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_192;
  }
LABEL_191:
  int v72 = *((_DWORD *)a2 + 85);
  *((_DWORD *)this + 115) |= 0x40000u;
  *((_DWORD *)this + 85) = v72;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x80000) == 0)
  {
LABEL_123:
    if ((v23 & 0x100000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_193;
  }
LABEL_192:
  int v73 = *((_DWORD *)a2 + 86);
  *((_DWORD *)this + 115) |= 0x80000u;
  *((_DWORD *)this + 86) = v73;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x100000) == 0)
  {
LABEL_124:
    if ((v23 & 0x200000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_194;
  }
LABEL_193:
  int v74 = *((_DWORD *)a2 + 87);
  *((_DWORD *)this + 115) |= 0x100000u;
  *((_DWORD *)this + 87) = v74;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x200000) == 0)
  {
LABEL_125:
    if ((v23 & 0x400000) == 0) {
      goto LABEL_126;
    }
    goto LABEL_195;
  }
LABEL_194:
  int v75 = *((_DWORD *)a2 + 88);
  *((_DWORD *)this + 115) |= 0x200000u;
  *((_DWORD *)this + 88) = v75;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x400000) == 0)
  {
LABEL_126:
    if ((v23 & 0x800000) == 0) {
      goto LABEL_128;
    }
    goto LABEL_127;
  }
LABEL_195:
  int v76 = *((_DWORD *)a2 + 89);
  *((_DWORD *)this + 115) |= 0x400000u;
  *((_DWORD *)this + 89) = v76;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x800000) != 0)
  {
LABEL_127:
    int v26 = *((_DWORD *)a2 + 90);
    *((_DWORD *)this + 115) |= 0x800000u;
    *((_DWORD *)this + 90) = v26;
    unsigned int v23 = *((_DWORD *)a2 + 115);
  }
LABEL_128:
  if (!HIBYTE(v23)) {
    goto LABEL_227;
  }
  if ((v23 & 0x1000000) != 0)
  {
    int v96 = *((_DWORD *)a2 + 91);
    *((_DWORD *)this + 115) |= 0x1000000u;
    *((_DWORD *)this + 91) = v96;
    unsigned int v23 = *((_DWORD *)a2 + 115);
    if ((v23 & 0x2000000) == 0)
    {
LABEL_131:
      if ((v23 & 0x4000000) == 0) {
        goto LABEL_132;
      }
      goto LABEL_219;
    }
  }
  else if ((v23 & 0x2000000) == 0)
  {
    goto LABEL_131;
  }
  int v97 = *((_DWORD *)a2 + 92);
  *((_DWORD *)this + 115) |= 0x2000000u;
  *((_DWORD *)this + 92) = v97;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x4000000) == 0)
  {
LABEL_132:
    if ((v23 & 0x8000000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_220;
  }
LABEL_219:
  int v98 = *((_DWORD *)a2 + 93);
  *((_DWORD *)this + 115) |= 0x4000000u;
  *((_DWORD *)this + 93) = v98;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x8000000) == 0)
  {
LABEL_133:
    if ((v23 & 0x10000000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_221;
  }
LABEL_220:
  int v99 = *((_DWORD *)a2 + 94);
  *((_DWORD *)this + 115) |= 0x8000000u;
  *((_DWORD *)this + 94) = v99;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x10000000) == 0)
  {
LABEL_134:
    if ((v23 & 0x20000000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_222;
  }
LABEL_221:
  char v100 = *((unsigned char *)a2 + 227);
  *((_DWORD *)this + 115) |= 0x10000000u;
  *((unsigned char *)this + 227) = v100;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x20000000) == 0)
  {
LABEL_135:
    if ((v23 & 0x40000000) == 0) {
      goto LABEL_136;
    }
    goto LABEL_223;
  }
LABEL_222:
  char v101 = *((unsigned char *)a2 + 380);
  *((_DWORD *)this + 115) |= 0x20000000u;
  *((unsigned char *)this + 380) = v101;
  unsigned int v23 = *((_DWORD *)a2 + 115);
  if ((v23 & 0x40000000) == 0)
  {
LABEL_136:
    if ((v23 & 0x80000000) == 0) {
      goto LABEL_227;
    }
    goto LABEL_225;
  }
LABEL_223:
  unsigned int v102 = *((_DWORD *)a2 + 96);
  if (v102 >= 0x19) {
    awd::metrics::MotionFitnessSession::MergeFrom();
  }
  *((_DWORD *)this + 115) |= 0x40000000u;
  *((_DWORD *)this + 96) = v102;
  if ((*((_DWORD *)a2 + 115) & 0x80000000) != 0)
  {
LABEL_225:
    unsigned int v103 = *((_DWORD *)a2 + 97);
    if (v103 >= 0x19) {
      awd::metrics::MotionFitnessSession::MergeFrom();
    }
    *((_DWORD *)this + 115) |= 0x80000000;
    *((_DWORD *)this + 97) = v103;
  }
LABEL_227:
  int v104 = *((_DWORD *)a2 + 116);
  if (!(_BYTE)v104) {
    goto LABEL_237;
  }
  if (v104)
  {
    uint64_t v107 = *((void *)a2 + 49);
    *((_DWORD *)this + 116) |= 1u;
    *((void *)this + 49) = v107;
    int v104 = *((_DWORD *)a2 + 116);
    if ((v104 & 2) == 0)
    {
LABEL_230:
      if ((v104 & 4) == 0) {
        goto LABEL_231;
      }
      goto LABEL_245;
    }
  }
  else if ((v104 & 2) == 0)
  {
    goto LABEL_230;
  }
  uint64_t v108 = *((void *)a2 + 50);
  *((_DWORD *)this + 116) |= 2u;
  *((void *)this + 50) = v108;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 4) == 0)
  {
LABEL_231:
    if ((v104 & 8) == 0) {
      goto LABEL_232;
    }
    goto LABEL_246;
  }
LABEL_245:
  uint64_t v109 = *((void *)a2 + 51);
  *((_DWORD *)this + 116) |= 4u;
  *((void *)this + 51) = v109;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 8) == 0)
  {
LABEL_232:
    if ((v104 & 0x10) == 0) {
      goto LABEL_233;
    }
    goto LABEL_247;
  }
LABEL_246:
  int v110 = *((_DWORD *)a2 + 104);
  *((_DWORD *)this + 116) |= 8u;
  *((_DWORD *)this + 104) = v110;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x10) == 0)
  {
LABEL_233:
    if ((v104 & 0x20) == 0) {
      goto LABEL_234;
    }
    goto LABEL_248;
  }
LABEL_247:
  int v111 = *((_DWORD *)a2 + 105);
  *((_DWORD *)this + 116) |= 0x10u;
  *((_DWORD *)this + 105) = v111;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x20) == 0)
  {
LABEL_234:
    if ((v104 & 0x40) == 0) {
      goto LABEL_235;
    }
    goto LABEL_249;
  }
LABEL_248:
  int v112 = *((_DWORD *)a2 + 106);
  *((_DWORD *)this + 116) |= 0x20u;
  *((_DWORD *)this + 106) = v112;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x40) == 0)
  {
LABEL_235:
    if ((v104 & 0x80) == 0) {
      goto LABEL_237;
    }
    goto LABEL_236;
  }
LABEL_249:
  int v113 = *((_DWORD *)a2 + 107);
  *((_DWORD *)this + 116) |= 0x40u;
  *((_DWORD *)this + 107) = v113;
  int v104 = *((_DWORD *)a2 + 116);
  if ((v104 & 0x80) != 0)
  {
LABEL_236:
    int v105 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 116) |= 0x80u;
    *((_DWORD *)this + 108) = v105;
    int v104 = *((_DWORD *)a2 + 116);
  }
LABEL_237:
  if ((v104 & 0xFF00) == 0) {
    return;
  }
  if ((v104 & 0x100) != 0)
  {
    int v114 = *((_DWORD *)a2 + 109);
    *((_DWORD *)this + 116) |= 0x100u;
    *((_DWORD *)this + 109) = v114;
    int v104 = *((_DWORD *)a2 + 116);
    if ((v104 & 0x200) == 0)
    {
LABEL_240:
      if ((v104 & 0x400) == 0) {
        return;
      }
      goto LABEL_241;
    }
  }
  else if ((v104 & 0x200) == 0)
  {
    goto LABEL_240;
  }
  int v115 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 116) |= 0x200u;
  *((_DWORD *)this + 110) = v115;
  if ((*((_DWORD *)a2 + 116) & 0x400) != 0)
  {
LABEL_241:
    int v106 = *((_DWORD *)a2 + 111);
    *((_DWORD *)this + 116) |= 0x400u;
    *((_DWORD *)this + 111) = v106;
  }
}

void sub_224925FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessSession::~MotionFitnessSession(awd::metrics::MotionFitnessSession *this)
{
  *(void *)this = &unk_26D7BADB0;
  awd::metrics::MotionFitnessSession::SharedDtor((uint64_t)this);
  uint64_t v2 = *((void *)this + 30);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionFitnessSession::~MotionFitnessSession(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionFitnessSession::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 24);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 448) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::default_instance(awd::metrics::MotionFitnessSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessSession::default_instance_;
  if (!awd::metrics::MotionFitnessSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessSession::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessSession::New(awd::metrics::MotionFitnessSession *this)
{
}

uint64_t awd::metrics::MotionFitnessSession::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 452);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
    *(unsigned char *)(this + 52) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(this + 24);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 20) = 0;
    *(void *)(this + 32) = 0;
    *(_DWORD *)(this + 40) = 0;
    unsigned int v1 = *(_DWORD *)(this + 452);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(this + 53) = 0;
    *(_DWORD *)(this + 44) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(void *)(this + 64) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(unsigned char *)(this + 55) = 0;
    *(void *)(this + 80) = 0;
    *(void *)(this + 88) = 0;
    *(void *)(this + 72) = 0;
    *(_DWORD *)(this + 96) = 0;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(this + 116) = 0u;
    *(_OWORD *)(this + 100) = 0u;
  }
  unsigned int v3 = *(_DWORD *)(this + 456);
  if ((_BYTE)v3)
  {
    *(unsigned char *)(this + 224) = 0;
    *(void *)(this + 132) = 0;
    *(void *)(this + 148) = 0;
    *(void *)(this + 140) = 0;
    *(_DWORD *)(this + 156) = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 225) = 0;
    *(void *)(this + 168) = 0;
    *(void *)(this + 176) = 0;
    *(void *)(this + 160) = 0;
    *(_DWORD *)(this + 184) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 204) = 0u;
    *(_OWORD *)(this + 188) = 0u;
  }
  if (HIBYTE(v3))
  {
    *(_DWORD *)(this + 220) = 0;
    *(unsigned char *)(this + 226) = 0;
    *(void *)(this + 232) = 0;
    *(_DWORD *)(this + 228) = 0;
    *(_DWORD *)(this + 256) = 0;
    *(void *)(this + 264) = 0;
  }
  unsigned int v4 = *(_DWORD *)(this + 460);
  if ((_BYTE)v4)
  {
    *(_DWORD *)(this + 260) = 0;
    *(void *)(this + 280) = 0;
    *(void *)(this + 288) = 0;
    *(void *)(this + 272) = 0;
    *(_DWORD *)(this + 296) = 0;
  }
  if ((v4 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 300) = 0u;
    *(_OWORD *)(this + 316) = 0u;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 332) = 0u;
    *(_OWORD *)(this + 348) = 0u;
  }
  if (HIBYTE(v4))
  {
    *(unsigned char *)(this + 227) = 0;
    *(void *)(this + 384) = 0;
    *(unsigned char *)(this + 380) = 0;
    *(void *)(this + 372) = 0;
    *(void *)(this + 364) = 0;
  }
  int v5 = *(_DWORD *)(this + 464);
  if ((_BYTE)v5)
  {
    *(_OWORD *)(this + 420) = 0u;
    *(_OWORD *)(this + 392) = 0u;
    *(_OWORD *)(this + 408) = 0u;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 436) = 0;
    *(void *)(this + 440) = 0;
  }
  *(_DWORD *)(this + 248) = 0;
  *(void *)(this + 452) = 0;
  *(void *)(this + 460) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessSession::MergePartialFromCodedStream(awd::metrics::MotionFitnessSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int v4 = (unint64_t *)((char *)a2 + 8);
  int v5 = (unint64_t *)((char *)a2 + 16);
  uint64_t v6 = (char *)this + 240;
  unsigned int v7 = (unint64_t *)((char *)this + 8);
  int v8 = (unsigned int *)((char *)this + 20);
  char v9 = (unsigned int *)((char *)this + 32);
  unsigned int v10 = (unsigned int *)((char *)this + 40);
  int v11 = (unsigned int *)((char *)this + 48);
  v348 = (unsigned int *)((char *)this + 68);
  v349 = (unsigned int *)((char *)this + 64);
  v333 = (unsigned int *)((char *)this + 80);
  v329 = (unsigned int *)((char *)this + 84);
  unsigned int v321 = (unsigned int *)((char *)this + 92);
  unsigned int v317 = (unsigned int *)((char *)this + 96);
  v314 = (unsigned int *)((char *)this + 104);
  unsigned int v315 = (unsigned int *)((char *)this + 100);
  v312 = (unsigned int *)((char *)this + 112);
  unsigned int v313 = (unsigned int *)((char *)this + 108);
  unsigned int v310 = (unsigned int *)((char *)this + 120);
  v311 = (unsigned int *)((char *)this + 116);
  v346 = (unsigned int *)((char *)this + 128);
  v347 = (unsigned int *)((char *)this + 140);
  v342 = (unsigned int *)((char *)this + 144);
  v338 = (unsigned int *)((char *)this + 148);
  unsigned int v331 = (unsigned int *)((char *)this + 152);
  unsigned int v327 = (unsigned int *)((char *)this + 156);
  v324 = (unsigned int *)((char *)this + 160);
  v308 = (unsigned int *)((char *)this + 168);
  v309 = (unsigned int *)((char *)this + 164);
  v307 = (unsigned int *)((char *)this + 172);
  v345 = (unsigned int *)((char *)this + 180);
  unsigned int v341 = (unsigned int *)((char *)this + 184);
  unsigned int v337 = (unsigned int *)((char *)this + 188);
  v334 = (unsigned int *)((char *)this + 192);
  v330 = (unsigned int *)((char *)this + 196);
  v326 = (unsigned int *)((char *)this + 200);
  unsigned int v323 = (unsigned int *)((char *)this + 204);
  unsigned int v319 = (unsigned int *)((char *)this + 208);
  v305 = (unsigned int *)((char *)this + 216);
  v306 = (unsigned int *)((char *)this + 212);
  v303 = (unsigned int *)((char *)this + 228);
  unsigned int v304 = (unsigned int *)((char *)this + 220);
  v301 = (unsigned int *)((char *)this + 236);
  unsigned int v302 = (unsigned int *)((char *)this + 232);
  unsigned int v300 = (unsigned int *)((char *)this + 256);
  v343 = (unsigned int *)((char *)this + 260);
  unsigned int v339 = (unsigned int *)((char *)this + 272);
  unsigned int v335 = (unsigned int *)((char *)this + 276);
  v332 = (unsigned int *)((char *)this + 280);
  v328 = (unsigned int *)((char *)this + 284);
  unsigned int v325 = (unsigned int *)((char *)this + 288);
  v320 = (unsigned int *)((char *)this + 292);
  v316 = (unsigned int *)((char *)this + 296);
  unsigned int v298 = (unsigned int *)((char *)this + 304);
  v299 = (unsigned int *)((char *)this + 300);
  unsigned int v296 = (unsigned int *)((char *)this + 320);
  v297 = (unsigned int *)((char *)this + 312);
  unsigned int v294 = (unsigned int *)((char *)this + 332);
  v295 = (unsigned int *)((char *)this + 328);
  unsigned int v292 = (unsigned int *)((char *)this + 340);
  v293 = (unsigned int *)((char *)this + 336);
  unsigned int v290 = (unsigned int *)((char *)this + 348);
  v291 = (unsigned int *)((char *)this + 344);
  unsigned int v288 = (unsigned int *)((char *)this + 356);
  v289 = (unsigned int *)((char *)this + 352);
  unsigned int v286 = (unsigned int *)((char *)this + 364);
  v287 = (unsigned int *)((char *)this + 360);
  unsigned int v284 = (unsigned int *)((char *)this + 372);
  v285 = (unsigned int *)((char *)this + 368);
  v283 = (unsigned int *)((char *)this + 376);
  v344 = (unsigned int *)((char *)this + 416);
  v340 = (unsigned int *)((char *)this + 420);
  v336 = (unsigned int *)((char *)this + 424);
  v322 = (unsigned int *)((char *)this + 440);
  v318 = (unsigned int *)((char *)this + 444);
LABEL_2:
  while (2)
  {
    unsigned int v12 = (char *)*v4;
    if (*v4 >= *v5 || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v15 = (char *)*v4;
        unint64_t v16 = *v5;
        if (*v4 >= *v5 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v17 = (unsigned char *)*v4;
          unint64_t v16 = *v5;
        }
        else
        {
          *unsigned int v7 = *v15;
          unsigned int v17 = v15 + 1;
          *unsigned int v4 = (unint64_t)v17;
        }
        *((_DWORD *)this + 113) |= 1u;
        if ((unint64_t)v17 < v16 && *v17 == 16)
        {
          int v18 = v17 + 1;
          *unsigned int v4 = (unint64_t)v18;
          goto LABEL_582;
        }
        continue;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v18 = (char *)*v4;
        unint64_t v16 = *v5;
LABEL_582:
        v351[0] = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v181 = v351[0];
        }
        else
        {
          unsigned int v181 = *v18;
          *unsigned int v4 = (unint64_t)(v18 + 1);
        }
        if (v181 <= 0x18)
        {
          *((_DWORD *)this + 113) |= 2u;
          *((_DWORD *)this + 4) = v181;
        }
        unsigned int v182 = (unsigned char *)*v4;
        unint64_t v20 = *v5;
        if (*v4 >= *v5 || *v182 != 24) {
          continue;
        }
        unsigned int v19 = v182 + 1;
        *unsigned int v4 = (unint64_t)v19;
LABEL_592:
        v351[0] = 0;
        if ((unint64_t)v19 >= v20 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v183 = v351[0];
          unsigned int v184 = (unsigned char *)*v4;
          unint64_t v20 = *v5;
        }
        else
        {
          unsigned int v183 = *v19;
          unsigned int v184 = v19 + 1;
          *unsigned int v4 = (unint64_t)v184;
        }
        *((unsigned char *)this + 52) = v183 != 0;
        int v21 = *((_DWORD *)this + 113) | 4;
        *((_DWORD *)this + 113) = v21;
        if ((unint64_t)v184 >= v20 || *v184 != 34) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v184 + 1);
LABEL_600:
        *((_DWORD *)this + 113) = v21 | 8;
        if (*((void *)this + 3) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v185 = (unsigned char *)*v4;
        unint64_t v23 = *v5;
        if (*v4 >= *v5 || *v185 != 40) {
          continue;
        }
        int v22 = v185 + 1;
        *unsigned int v4 = (unint64_t)v22;
LABEL_606:
        if ((unint64_t)v22 >= v23 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          unsigned int v186 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          *int v8 = *v22;
          unsigned int v186 = v22 + 1;
          *unsigned int v4 = (unint64_t)v186;
        }
        *((_DWORD *)this + 113) |= 0x10u;
        if ((unint64_t)v186 >= v23 || *v186 != 48) {
          continue;
        }
        int v24 = v186 + 1;
        *unsigned int v4 = (unint64_t)v24;
LABEL_614:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v187 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          unsigned int *v9 = *v24;
          int v187 = v24 + 1;
          *unsigned int v4 = (unint64_t)v187;
        }
        *((_DWORD *)this + 113) |= 0x20u;
        if ((unint64_t)v187 >= v23 || *v187 != 56) {
          continue;
        }
        int v25 = v187 + 1;
        *unsigned int v4 = (unint64_t)v25;
LABEL_622:
        v351[0] = 0;
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v188 = v351[0];
          unsigned int v189 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          unsigned int v188 = *v25;
          unsigned int v189 = v25 + 1;
          *unsigned int v4 = (unint64_t)v189;
        }
        *((_DWORD *)this + 9) = v188;
        *((_DWORD *)this + 113) |= 0x40u;
        if ((unint64_t)v189 >= v23 || *v189 != 64) {
          continue;
        }
        int v26 = v189 + 1;
        *unsigned int v4 = (unint64_t)v26;
LABEL_630:
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          unsigned int v190 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          unsigned int *v10 = *v26;
          unsigned int v190 = v26 + 1;
          *unsigned int v4 = (unint64_t)v190;
        }
        *((_DWORD *)this + 113) |= 0x80u;
        if ((unint64_t)v190 >= v23 || *v190 != 72) {
          continue;
        }
        char v27 = v190 + 1;
        *unsigned int v4 = (unint64_t)v27;
LABEL_638:
        v351[0] = 0;
        if ((unint64_t)v27 >= v23 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v191 = v351[0];
          unsigned int v192 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          unsigned int v191 = *v27;
          unsigned int v192 = v27 + 1;
          *unsigned int v4 = (unint64_t)v192;
        }
        *((unsigned char *)this + 53) = v191 != 0;
        *((_DWORD *)this + 113) |= 0x100u;
        if ((unint64_t)v192 >= v23 || *v192 != 80) {
          continue;
        }
        int v28 = v192 + 1;
        *unsigned int v4 = (unint64_t)v28;
LABEL_646:
        v351[0] = 0;
        if ((unint64_t)v28 >= v23 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v193 = v351[0];
        }
        else
        {
          unsigned int v193 = *v28;
          *unsigned int v4 = (unint64_t)(v28 + 1);
        }
        if (v193 <= 1)
        {
          *((_DWORD *)this + 113) |= 0x200u;
          *((_DWORD *)this + 11) = v193;
        }
        unsigned int v194 = (unsigned char *)*v4;
        unint64_t v30 = *v5;
        if (*v4 >= *v5 || *v194 != 88) {
          continue;
        }
        int v29 = v194 + 1;
        *unsigned int v4 = (unint64_t)v29;
LABEL_656:
        if ((unint64_t)v29 >= v30 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          v195 = (unsigned char *)*v4;
          unint64_t v30 = *v5;
        }
        else
        {
          unsigned int *v11 = *v29;
          v195 = v29 + 1;
          *unsigned int v4 = (unint64_t)v195;
        }
        *((_DWORD *)this + 113) |= 0x400u;
        if ((unint64_t)v195 >= v30 || *v195 != 96) {
          continue;
        }
        int v31 = v195 + 1;
        *unsigned int v4 = (unint64_t)v31;
LABEL_664:
        v351[0] = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v196 = v351[0];
        }
        else
        {
          unsigned int v196 = *v31;
          *unsigned int v4 = (unint64_t)(v31 + 1);
        }
        if (v196 <= 4)
        {
          *((_DWORD *)this + 113) |= 0x800u;
          *((_DWORD *)this + 14) = v196;
        }
        unsigned int v197 = (unsigned char *)*v4;
        unint64_t v33 = *v5;
        if (*v4 >= *v5 || *v197 != 104) {
          continue;
        }
        int v32 = v197 + 1;
        *unsigned int v4 = (unint64_t)v32;
LABEL_674:
        v351[0] = 0;
        if ((unint64_t)v32 >= v33 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v198 = v351[0];
        }
        else
        {
          unsigned int v198 = *v32;
          *unsigned int v4 = (unint64_t)(v32 + 1);
        }
        if (v198 <= 4)
        {
          *((_DWORD *)this + 113) |= 0x1000u;
          *((_DWORD *)this + 15) = v198;
        }
        unsigned int v199 = (unsigned char *)*v4;
        unint64_t v35 = *v5;
        if (*v4 >= *v5 || *v199 != 112) {
          continue;
        }
        int v34 = v199 + 1;
        *unsigned int v4 = (unint64_t)v34;
LABEL_684:
        if ((unint64_t)v34 >= v35 || *v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v349);
          if (!result) {
            return result;
          }
          v200 = (unsigned char *)*v4;
          unint64_t v35 = *v5;
        }
        else
        {
          unsigned int *v349 = *v34;
          v200 = v34 + 1;
          *unsigned int v4 = (unint64_t)v200;
        }
        *((_DWORD *)this + 113) |= 0x2000u;
        if ((unint64_t)v200 >= v35 || *v200 != 120) {
          continue;
        }
        int v36 = v200 + 1;
        *unsigned int v4 = (unint64_t)v36;
LABEL_692:
        if ((unint64_t)v36 >= v35 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v348);
          if (!result) {
            return result;
          }
          unint64_t v35 = *v5;
          unsigned int v201 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v348 = *v36;
          unsigned int v201 = v36 + 1;
          *unsigned int v4 = (unint64_t)v201;
        }
        *((_DWORD *)this + 113) |= 0x4000u;
        if ((int)v35 - (int)v201 < 2 || *v201 != 128 || v201[1] != 1) {
          continue;
        }
        int v37 = v201 + 2;
        *unsigned int v4 = (unint64_t)v37;
LABEL_701:
        v351[0] = 0;
        if ((unint64_t)v37 >= v35 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v202 = v351[0];
          unint64_t v35 = *v5;
          v203 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v202 = *v37;
          v203 = v37 + 1;
          *unsigned int v4 = (unint64_t)v203;
        }
        *((unsigned char *)this + 54) = v202 != 0;
        *((_DWORD *)this + 113) |= 0x8000u;
        if ((int)v35 - (int)v203 < 2 || *v203 != 136 || v203[1] != 1) {
          continue;
        }
        int v38 = v203 + 2;
        *unsigned int v4 = (unint64_t)v38;
LABEL_710:
        v351[0] = 0;
        if ((unint64_t)v38 >= v35 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v204 = v351[0];
          unint64_t v35 = *v5;
          v205 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v204 = *v38;
          v205 = v38 + 1;
          *unsigned int v4 = (unint64_t)v205;
        }
        *((unsigned char *)this + 55) = v204 != 0;
        *((_DWORD *)this + 113) |= 0x10000u;
        if ((int)v35 - (int)v205 < 2 || *v205 != 144 || v205[1] != 1) {
          continue;
        }
        int v39 = (char *)(v205 + 2);
        *unsigned int v4 = (unint64_t)v39;
LABEL_719:
        v351[0] = 0;
        if ((unint64_t)v39 >= v35 || *v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v206 = v351[0];
        }
        else
        {
          unsigned int v206 = *v39;
          *unsigned int v4 = (unint64_t)(v39 + 1);
        }
        if (v206 <= 4)
        {
          *((_DWORD *)this + 113) |= 0x20000u;
          *((_DWORD *)this + 18) = v206;
        }
        unint64_t v41 = *v5;
        v207 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v207 != 152 || v207[1] != 1) {
          continue;
        }
        char v40 = (char *)(v207 + 2);
        *unsigned int v4 = (unint64_t)v40;
LABEL_730:
        v351[0] = 0;
        if ((unint64_t)v40 >= v41 || *v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v208 = v351[0];
        }
        else
        {
          unsigned int v208 = *v40;
          *unsigned int v4 = (unint64_t)(v40 + 1);
        }
        if (v208 <= 4)
        {
          *((_DWORD *)this + 113) |= 0x40000u;
          *((_DWORD *)this + 19) = v208;
        }
        unint64_t v43 = *v5;
        v209 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v209 != 160 || v209[1] != 1) {
          continue;
        }
        int v42 = v209 + 2;
        *unsigned int v4 = (unint64_t)v42;
LABEL_741:
        if ((unint64_t)v42 >= v43 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v333);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          unsigned int v210 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v333 = *v42;
          unsigned int v210 = v42 + 1;
          *unsigned int v4 = (unint64_t)v210;
        }
        *((_DWORD *)this + 113) |= 0x80000u;
        if ((int)v43 - (int)v210 < 2 || *v210 != 168 || v210[1] != 1) {
          continue;
        }
        int v44 = v210 + 2;
        *unsigned int v4 = (unint64_t)v44;
LABEL_750:
        if ((unint64_t)v44 >= v43 || (char)*v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v329);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v211 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v329 = *v44;
          v211 = v44 + 1;
          *unsigned int v4 = (unint64_t)v211;
        }
        *((_DWORD *)this + 113) |= 0x100000u;
        if ((int)v43 - (int)v211 < 2 || *v211 != 176 || v211[1] != 1) {
          continue;
        }
        int v45 = v211 + 2;
        *unsigned int v4 = (unint64_t)v45;
LABEL_759:
        v351[0] = 0;
        if ((unint64_t)v45 >= v43 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v212 = v351[0];
          unint64_t v43 = *v5;
          unsigned int v213 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v212 = *v45;
          unsigned int v213 = v45 + 1;
          *unsigned int v4 = (unint64_t)v213;
        }
        *((_DWORD *)this + 22) = v212;
        *((_DWORD *)this + 113) |= 0x200000u;
        if ((int)v43 - (int)v213 < 2 || *v213 != 184 || v213[1] != 1) {
          continue;
        }
        int v46 = v213 + 2;
        *unsigned int v4 = (unint64_t)v46;
LABEL_768:
        if ((unint64_t)v46 >= v43 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v321);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v214 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v321 = *v46;
          v214 = v46 + 1;
          *unsigned int v4 = (unint64_t)v214;
        }
        *((_DWORD *)this + 113) |= 0x400000u;
        if ((int)v43 - (int)v214 < 2 || *v214 != 192 || v214[1] != 1) {
          continue;
        }
        int v47 = v214 + 2;
        *unsigned int v4 = (unint64_t)v47;
LABEL_777:
        if ((unint64_t)v47 >= v43 || (char)*v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v317);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          unsigned int v215 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v317 = *v47;
          unsigned int v215 = v47 + 1;
          *unsigned int v4 = (unint64_t)v215;
        }
        *((_DWORD *)this + 113) |= 0x800000u;
        if ((int)v43 - (int)v215 < 2 || *v215 != 200 || v215[1] != 1) {
          continue;
        }
        int v48 = v215 + 2;
        *unsigned int v4 = (unint64_t)v48;
LABEL_786:
        if ((unint64_t)v48 >= v43 || (char)*v48 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v315);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v216 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v315 = *v48;
          v216 = v48 + 1;
          *unsigned int v4 = (unint64_t)v216;
        }
        *((_DWORD *)this + 113) |= 0x1000000u;
        if ((int)v43 - (int)v216 < 2 || *v216 != 208 || v216[1] != 1) {
          continue;
        }
        int v49 = v216 + 2;
        *unsigned int v4 = (unint64_t)v49;
LABEL_795:
        if ((unint64_t)v49 >= v43 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v314);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v217 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v314 = *v49;
          v217 = v49 + 1;
          *unsigned int v4 = (unint64_t)v217;
        }
        *((_DWORD *)this + 113) |= 0x2000000u;
        if ((int)v43 - (int)v217 < 2 || *v217 != 216 || v217[1] != 1) {
          continue;
        }
        int v50 = v217 + 2;
        *unsigned int v4 = (unint64_t)v50;
LABEL_804:
        if ((unint64_t)v50 >= v43 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v313);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v218 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v313 = *v50;
          v218 = v50 + 1;
          *unsigned int v4 = (unint64_t)v218;
        }
        *((_DWORD *)this + 113) |= 0x4000000u;
        if ((int)v43 - (int)v218 < 2 || *v218 != 224 || v218[1] != 1) {
          continue;
        }
        int v51 = v218 + 2;
        *unsigned int v4 = (unint64_t)v51;
LABEL_813:
        if ((unint64_t)v51 >= v43 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v312);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v219 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v312 = *v51;
          v219 = v51 + 1;
          *unsigned int v4 = (unint64_t)v219;
        }
        *((_DWORD *)this + 113) |= 0x8000000u;
        if ((int)v43 - (int)v219 < 2 || *v219 != 232 || v219[1] != 1) {
          continue;
        }
        int v52 = v219 + 2;
        *unsigned int v4 = (unint64_t)v52;
LABEL_822:
        if ((unint64_t)v52 >= v43 || (char)*v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v311);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          unsigned int v220 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v311 = *v52;
          unsigned int v220 = v52 + 1;
          *unsigned int v4 = (unint64_t)v220;
        }
        *((_DWORD *)this + 113) |= 0x10000000u;
        if ((int)v43 - (int)v220 < 2 || *v220 != 240 || v220[1] != 1) {
          continue;
        }
        int v53 = v220 + 2;
        *unsigned int v4 = (unint64_t)v53;
LABEL_831:
        if ((unint64_t)v53 >= v43 || (char)*v53 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v310);
          if (!result) {
            return result;
          }
          unint64_t v43 = *v5;
          v221 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v310 = *v53;
          v221 = v53 + 1;
          *unsigned int v4 = (unint64_t)v221;
        }
        *((_DWORD *)this + 113) |= 0x20000000u;
        if ((int)v43 - (int)v221 < 2 || *v221 != 253 || v221[1] != 1) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v221 + 2);
LABEL_71:
        v351[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v351) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 31) = v351[0];
        *((_DWORD *)this + 113) |= 0x40000000u;
        unint64_t v54 = *v5;
        int v55 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v55 != 128 || v55[1] != 2) {
          continue;
        }
        int v56 = v55 + 2;
        *unsigned int v4 = (unint64_t)v56;
LABEL_78:
        if ((unint64_t)v56 >= v54 || (char)*v56 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v346);
          if (!result) {
            return result;
          }
          unint64_t v54 = *v5;
          int v57 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v346 = *v56;
          int v57 = v56 + 1;
          *unsigned int v4 = (unint64_t)v57;
        }
        *((_DWORD *)this + 113) |= 0x80000000;
        if ((int)v54 - (int)v57 < 2 || *v57 != 141 || v57[1] != 2) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v57 + 2);
LABEL_258:
        v351[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v351) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 33) = v351[0];
        *((_DWORD *)this + 114) |= 1u;
        int v140 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v140 != 149 || v140[1] != 2) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v140 + 2);
LABEL_263:
        v351[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v351) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 34) = v351[0];
        *((_DWORD *)this + 114) |= 2u;
        unint64_t v59 = *v5;
        v141 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v141 != 152 || v141[1] != 2) {
          continue;
        }
        int v58 = v141 + 2;
        *unsigned int v4 = (unint64_t)v58;
LABEL_268:
        if ((unint64_t)v58 >= v59 || (char)*v58 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v347);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          int v142 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v347 = *v58;
          int v142 = v58 + 1;
          *unsigned int v4 = (unint64_t)v142;
        }
        *((_DWORD *)this + 114) |= 4u;
        if ((int)v59 - (int)v142 < 2 || *v142 != 160 || v142[1] != 2) {
          continue;
        }
        int v60 = v142 + 2;
        *unsigned int v4 = (unint64_t)v60;
LABEL_277:
        if ((unint64_t)v60 >= v59 || (char)*v60 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v342);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          v143 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v342 = *v60;
          v143 = v60 + 1;
          *unsigned int v4 = (unint64_t)v143;
        }
        *((_DWORD *)this + 114) |= 8u;
        if ((int)v59 - (int)v143 < 2 || *v143 != 168 || v143[1] != 2) {
          continue;
        }
        int v61 = v143 + 2;
        *unsigned int v4 = (unint64_t)v61;
LABEL_304:
        if ((unint64_t)v61 >= v59 || (char)*v61 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v338);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          unint64_t v146 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v338 = *v61;
          unint64_t v146 = v61 + 1;
          *unsigned int v4 = (unint64_t)v146;
        }
        *((_DWORD *)this + 114) |= 0x10u;
        if ((int)v59 - (int)v146 < 2 || *v146 != 176 || v146[1] != 2) {
          continue;
        }
        int v62 = v146 + 2;
        *unsigned int v4 = (unint64_t)v62;
LABEL_331:
        v351[0] = 0;
        if ((unint64_t)v62 >= v59 || (char)*v62 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v149 = v351[0];
          unint64_t v59 = *v5;
          unint64_t v150 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v149 = *v62;
          unint64_t v150 = v62 + 1;
          *unsigned int v4 = (unint64_t)v150;
        }
        *((unsigned char *)this + 224) = v149 != 0;
        *((_DWORD *)this + 114) |= 0x20u;
        if ((int)v59 - (int)v150 < 2 || *v150 != 184 || v150[1] != 2) {
          continue;
        }
        int v63 = v150 + 2;
        *unsigned int v4 = (unint64_t)v63;
LABEL_358:
        if ((unint64_t)v63 >= v59 || (char)*v63 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v331);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          v154 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v331 = *v63;
          v154 = v63 + 1;
          *unsigned int v4 = (unint64_t)v154;
        }
        *((_DWORD *)this + 114) |= 0x40u;
        if ((int)v59 - (int)v154 < 2 || *v154 != 192 || v154[1] != 2) {
          continue;
        }
        int v64 = v154 + 2;
        *unsigned int v4 = (unint64_t)v64;
LABEL_385:
        if ((unint64_t)v64 >= v59 || (char)*v64 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v327);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          char v158 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v327 = *v64;
          char v158 = v64 + 1;
          *unsigned int v4 = (unint64_t)v158;
        }
        *((_DWORD *)this + 114) |= 0x80u;
        if ((int)v59 - (int)v158 < 2 || *v158 != 200 || v158[1] != 2) {
          continue;
        }
        int v65 = v158 + 2;
        *unsigned int v4 = (unint64_t)v65;
LABEL_412:
        if ((unint64_t)v65 >= v59 || (char)*v65 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v324);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          uint64_t v162 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v324 = *v65;
          uint64_t v162 = v65 + 1;
          *unsigned int v4 = (unint64_t)v162;
        }
        *((_DWORD *)this + 114) |= 0x100u;
        if ((int)v59 - (int)v162 < 2 || *v162 != 208 || v162[1] != 2) {
          continue;
        }
        int v66 = v162 + 2;
        *unsigned int v4 = (unint64_t)v66;
LABEL_439:
        v351[0] = 0;
        if ((unint64_t)v66 >= v59 || (char)*v66 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v165 = v351[0];
          unint64_t v59 = *v5;
          unint64_t v166 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v165 = *v66;
          unint64_t v166 = v66 + 1;
          *unsigned int v4 = (unint64_t)v166;
        }
        *((unsigned char *)this + 225) = v165 != 0;
        *((_DWORD *)this + 114) |= 0x200u;
        if ((int)v59 - (int)v166 < 2 || *v166 != 216 || v166[1] != 2) {
          continue;
        }
        int v67 = v166 + 2;
        *unsigned int v4 = (unint64_t)v67;
LABEL_466:
        if ((unint64_t)v67 >= v59 || (char)*v67 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v309);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          int v169 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v309 = *v67;
          int v169 = v67 + 1;
          *unsigned int v4 = (unint64_t)v169;
        }
        *((_DWORD *)this + 114) |= 0x400u;
        if ((int)v59 - (int)v169 < 2 || *v169 != 224 || v169[1] != 2) {
          continue;
        }
        int v68 = v169 + 2;
        *unsigned int v4 = (unint64_t)v68;
LABEL_490:
        if ((unint64_t)v68 >= v59 || (char)*v68 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v308);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          int v171 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v308 = *v68;
          int v171 = v68 + 1;
          *unsigned int v4 = (unint64_t)v171;
        }
        *((_DWORD *)this + 114) |= 0x800u;
        if ((int)v59 - (int)v171 < 2 || *v171 != 232 || v171[1] != 2) {
          continue;
        }
        int v69 = v171 + 2;
        *unsigned int v4 = (unint64_t)v69;
LABEL_508:
        if ((unint64_t)v69 >= v59 || (char)*v69 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v307);
          if (!result) {
            return result;
          }
          unint64_t v59 = *v5;
          int v173 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v307 = *v69;
          int v173 = v69 + 1;
          *unsigned int v4 = (unint64_t)v173;
        }
        *((_DWORD *)this + 114) |= 0x1000u;
        if ((int)v59 - (int)v173 < 2 || *v173 != 245 || v173[1] != 2) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v173 + 2);
LABEL_108:
        v351[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v351) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 44) = v351[0];
        *((_DWORD *)this + 114) |= 0x2000u;
        unint64_t v70 = *v5;
        int v71 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) >= 2 && *v71 == 248 && v71[1] == 2)
        {
          int v72 = v71 + 2;
          *unsigned int v4 = (unint64_t)v72;
LABEL_115:
          if ((unint64_t)v72 >= v70 || (char)*v72 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v345);
            if (!result) {
              return result;
            }
            unint64_t v70 = *v5;
            int v73 = (unsigned __int8 *)*v4;
          }
          else
          {
            unsigned int *v345 = *v72;
            int v73 = v72 + 1;
            *unsigned int v4 = (unint64_t)v73;
          }
          *((_DWORD *)this + 114) |= 0x4000u;
          if ((int)v70 - (int)v73 >= 2 && *v73 == 128 && v73[1] == 3)
          {
            int v74 = v73 + 2;
            *unsigned int v4 = (unint64_t)v74;
LABEL_286:
            if ((unint64_t)v74 >= v70 || (char)*v74 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v341);
              if (!result) {
                return result;
              }
              unint64_t v70 = *v5;
              int v144 = (unsigned __int8 *)*v4;
            }
            else
            {
              *unsigned int v341 = *v74;
              int v144 = v74 + 1;
              *unsigned int v4 = (unint64_t)v144;
            }
            *((_DWORD *)this + 114) |= 0x8000u;
            if ((int)v70 - (int)v144 >= 2 && *v144 == 136 && v144[1] == 3)
            {
              int v75 = v144 + 2;
              *unsigned int v4 = (unint64_t)v75;
LABEL_313:
              if ((unint64_t)v75 >= v70 || (char)*v75 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v337);
                if (!result) {
                  return result;
                }
                unint64_t v70 = *v5;
                int v147 = (unsigned __int8 *)*v4;
              }
              else
              {
                *unsigned int v337 = *v75;
                int v147 = v75 + 1;
                *unsigned int v4 = (unint64_t)v147;
              }
              *((_DWORD *)this + 114) |= 0x10000u;
              if ((int)v70 - (int)v147 >= 2 && *v147 == 144 && v147[1] == 3)
              {
                int v76 = v147 + 2;
                *unsigned int v4 = (unint64_t)v76;
LABEL_340:
                if ((unint64_t)v76 >= v70 || (char)*v76 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v334);
                  if (!result) {
                    return result;
                  }
                  unint64_t v70 = *v5;
                  int v151 = (unsigned __int8 *)*v4;
                }
                else
                {
                  unsigned int *v334 = *v76;
                  int v151 = v76 + 1;
                  *unsigned int v4 = (unint64_t)v151;
                }
                *((_DWORD *)this + 114) |= 0x20000u;
                if ((int)v70 - (int)v151 >= 2 && *v151 == 152 && v151[1] == 3)
                {
                  int v77 = v151 + 2;
                  *unsigned int v4 = (unint64_t)v77;
LABEL_367:
                  if ((unint64_t)v77 >= v70 || (char)*v77 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v330);
                    if (!result) {
                      return result;
                    }
                    unint64_t v70 = *v5;
                    int v155 = (unsigned __int8 *)*v4;
                  }
                  else
                  {
                    unsigned int *v330 = *v77;
                    int v155 = v77 + 1;
                    *unsigned int v4 = (unint64_t)v155;
                  }
                  *((_DWORD *)this + 114) |= 0x40000u;
                  if ((int)v70 - (int)v155 >= 2 && *v155 == 160 && v155[1] == 3)
                  {
                    int v78 = v155 + 2;
                    *unsigned int v4 = (unint64_t)v78;
LABEL_394:
                    if ((unint64_t)v78 >= v70 || (char)*v78 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v326);
                      if (!result) {
                        return result;
                      }
                      unint64_t v70 = *v5;
                      uint64_t v159 = (unsigned __int8 *)*v4;
                    }
                    else
                    {
                      unsigned int *v326 = *v78;
                      uint64_t v159 = v78 + 1;
                      *unsigned int v4 = (unint64_t)v159;
                    }
                    *((_DWORD *)this + 114) |= 0x80000u;
                    if ((int)v70 - (int)v159 >= 2 && *v159 == 168 && v159[1] == 3)
                    {
                      int v79 = v159 + 2;
                      *unsigned int v4 = (unint64_t)v79;
LABEL_421:
                      if ((unint64_t)v79 >= v70 || (char)*v79 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v323);
                        if (!result) {
                          return result;
                        }
                        unint64_t v70 = *v5;
                        int v163 = (unsigned __int8 *)*v4;
                      }
                      else
                      {
                        *unsigned int v323 = *v79;
                        int v163 = v79 + 1;
                        *unsigned int v4 = (unint64_t)v163;
                      }
                      *((_DWORD *)this + 114) |= 0x100000u;
                      if ((int)v70 - (int)v163 >= 2 && *v163 == 176 && v163[1] == 3)
                      {
                        int v80 = v163 + 2;
                        *unsigned int v4 = (unint64_t)v80;
LABEL_448:
                        if ((unint64_t)v80 >= v70 || (char)*v80 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v319);
                          if (!result) {
                            return result;
                          }
                          unint64_t v70 = *v5;
                          int v167 = (unsigned __int8 *)*v4;
                        }
                        else
                        {
                          *unsigned int v319 = *v80;
                          int v167 = v80 + 1;
                          *unsigned int v4 = (unint64_t)v167;
                        }
                        *((_DWORD *)this + 114) |= 0x200000u;
                        if ((int)v70 - (int)v167 >= 2 && *v167 == 184 && v167[1] == 3)
                        {
                          int v81 = v167 + 2;
                          *unsigned int v4 = (unint64_t)v81;
LABEL_475:
                          if ((unint64_t)v81 >= v70 || (char)*v81 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v306);
                            if (!result) {
                              return result;
                            }
                            unint64_t v70 = *v5;
                            v170 = (unsigned __int8 *)*v4;
                          }
                          else
                          {
                            unsigned int *v306 = *v81;
                            v170 = v81 + 1;
                            *unsigned int v4 = (unint64_t)v170;
                          }
                          *((_DWORD *)this + 114) |= 0x400000u;
                          if ((int)v70 - (int)v170 >= 2 && *v170 == 192 && v170[1] == 3)
                          {
                            int v82 = v170 + 2;
                            *unsigned int v4 = (unint64_t)v82;
LABEL_499:
                            if ((unint64_t)v82 >= v70 || (char)*v82 < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v305);
                              if (!result) {
                                return result;
                              }
                              unint64_t v70 = *v5;
                              v172 = (unsigned __int8 *)*v4;
                            }
                            else
                            {
                              unsigned int *v305 = *v82;
                              v172 = v82 + 1;
                              *unsigned int v4 = (unint64_t)v172;
                            }
                            *((_DWORD *)this + 114) |= 0x800000u;
                            if ((int)v70 - (int)v172 >= 2 && *v172 == 200 && v172[1] == 3)
                            {
                              int v83 = v172 + 2;
                              *unsigned int v4 = (unint64_t)v83;
LABEL_517:
                              if ((unint64_t)v83 >= v70 || (char)*v83 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v304);
                                if (!result) {
                                  return result;
                                }
                                unint64_t v70 = *v5;
                                v174 = (unsigned __int8 *)*v4;
                              }
                              else
                              {
                                *unsigned int v304 = *v83;
                                v174 = v83 + 1;
                                *unsigned int v4 = (unint64_t)v174;
                              }
                              *((_DWORD *)this + 114) |= 0x1000000u;
                              if ((int)v70 - (int)v174 >= 2 && *v174 == 208 && v174[1] == 3)
                              {
                                int v84 = v174 + 2;
                                *unsigned int v4 = (unint64_t)v84;
LABEL_532:
                                v351[0] = 0;
                                if ((unint64_t)v84 >= v70 || (char)*v84 < 0)
                                {
                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
                                  if (!result) {
                                    return result;
                                  }
                                  unsigned int v175 = v351[0];
                                  unint64_t v70 = *v5;
                                  v176 = (unsigned __int8 *)*v4;
                                }
                                else
                                {
                                  unsigned int v175 = *v84;
                                  v176 = v84 + 1;
                                  *unsigned int v4 = (unint64_t)v176;
                                }
                                *((unsigned char *)this + 226) = v175 != 0;
                                *((_DWORD *)this + 114) |= 0x2000000u;
                                if ((int)v70 - (int)v176 >= 2 && *v176 == 216 && v176[1] == 3)
                                {
                                  int v85 = v176 + 2;
                                  *unsigned int v4 = (unint64_t)v85;
LABEL_541:
                                  if ((unint64_t)v85 >= v70 || (char)*v85 < 0)
                                  {
                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v303);
                                    if (!result) {
                                      return result;
                                    }
                                    unint64_t v70 = *v5;
                                    int v177 = (unsigned __int8 *)*v4;
                                  }
                                  else
                                  {
                                    unsigned int *v303 = *v85;
                                    int v177 = v85 + 1;
                                    *unsigned int v4 = (unint64_t)v177;
                                  }
                                  *((_DWORD *)this + 114) |= 0x4000000u;
                                  if ((int)v70 - (int)v177 >= 2 && *v177 == 224 && v177[1] == 3)
                                  {
                                    int v86 = v177 + 2;
                                    *unsigned int v4 = (unint64_t)v86;
LABEL_550:
                                    if ((unint64_t)v86 >= v70 || (char)*v86 < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v302);
                                      if (!result) {
                                        return result;
                                      }
                                      unint64_t v70 = *v5;
                                      v178 = (unsigned __int8 *)*v4;
                                    }
                                    else
                                    {
                                      *unsigned int v302 = *v86;
                                      v178 = v86 + 1;
                                      *unsigned int v4 = (unint64_t)v178;
                                    }
                                    *((_DWORD *)this + 114) |= 0x8000000u;
                                    if ((int)v70 - (int)v178 >= 2 && *v178 == 232 && v178[1] == 3)
                                    {
                                      int v87 = v178 + 2;
                                      *unsigned int v4 = (unint64_t)v87;
LABEL_559:
                                      if ((unint64_t)v87 >= v70 || (char)*v87 < 0)
                                      {
                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v301);
                                        if (!result) {
                                          return result;
                                        }
                                        unint64_t v70 = *v5;
                                        int v179 = (unsigned __int8 *)*v4;
                                      }
                                      else
                                      {
                                        unsigned int *v301 = *v87;
                                        int v179 = v87 + 1;
                                        *unsigned int v4 = (unint64_t)v179;
                                      }
                                      *((_DWORD *)this + 114) |= 0x10000000u;
                                      if ((int)v70 - (int)v179 >= 2 && *v179 == 240 && v179[1] == 3)
                                      {
                                        int v88 = v179 + 2;
                                        *unsigned int v4 = (unint64_t)v88;
LABEL_568:
                                        if ((unint64_t)v88 >= v70 || (char)*v88 < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v300);
                                          if (!result) {
                                            return result;
                                          }
                                          unint64_t v70 = *v5;
                                          v180 = (unsigned __int8 *)*v4;
                                        }
                                        else
                                        {
                                          *unsigned int v300 = *v88;
                                          v180 = v88 + 1;
                                          *unsigned int v4 = (unint64_t)v180;
                                        }
                                        *((_DWORD *)this + 114) |= 0x20000000u;
                                        if ((int)v70 - (int)v180 >= 2 && *v180 == 248 && v180[1] == 3) {
                                          goto LABEL_840;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        continue;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v19 = (char *)*v4;
        unint64_t v20 = *v5;
        goto LABEL_592;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_247;
        }
        int v21 = *((_DWORD *)this + 113);
        goto LABEL_600;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v22 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_606;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v24 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_614;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v25 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_622;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v26 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_630;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v27 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_638;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v28 = (char *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_646;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v29 = (char *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_656;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v31 = (char *)*v4;
        unint64_t v30 = *v5;
        goto LABEL_664;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v32 = (char *)*v4;
        unint64_t v33 = *v5;
        goto LABEL_674;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v34 = (char *)*v4;
        unint64_t v35 = *v5;
        goto LABEL_684;
      case 0xFu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v36 = (unsigned __int8 *)*v4;
        unint64_t v35 = *v5;
        goto LABEL_692;
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v37 = (unsigned __int8 *)*v4;
        unint64_t v35 = *v5;
        goto LABEL_701;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v38 = (unsigned __int8 *)*v4;
        unint64_t v35 = *v5;
        goto LABEL_710;
      case 0x12u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v39 = (char *)*v4;
        unint64_t v35 = *v5;
        goto LABEL_719;
      case 0x13u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v40 = (char *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_730;
      case 0x14u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v42 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_741;
      case 0x15u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v44 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_750;
      case 0x16u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v45 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_759;
      case 0x17u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v46 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_768;
      case 0x18u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v47 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_777;
      case 0x19u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v48 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_786;
      case 0x1Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v49 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_795;
      case 0x1Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v50 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_804;
      case 0x1Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v51 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_813;
      case 0x1Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v52 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_822;
      case 0x1Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v53 = (unsigned __int8 *)*v4;
        unint64_t v43 = *v5;
        goto LABEL_831;
      case 0x1Fu:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_71;
        }
        goto LABEL_247;
      case 0x20u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v56 = (unsigned __int8 *)*v4;
        unint64_t v54 = *v5;
        goto LABEL_78;
      case 0x21u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_258;
        }
        goto LABEL_247;
      case 0x22u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_263;
        }
        goto LABEL_247;
      case 0x23u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v58 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_268;
      case 0x24u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v60 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_277;
      case 0x25u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v61 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_304;
      case 0x26u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v62 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_331;
      case 0x27u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v63 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_358;
      case 0x28u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v64 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_385;
      case 0x29u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v65 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_412;
      case 0x2Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v66 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_439;
      case 0x2Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v67 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_466;
      case 0x2Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v68 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_490;
      case 0x2Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v69 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_508;
      case 0x2Eu:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_108;
        }
        goto LABEL_247;
      case 0x2Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v72 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_115;
      case 0x30u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v74 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_286;
      case 0x31u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v75 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_313;
      case 0x32u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v76 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_340;
      case 0x33u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v77 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_367;
      case 0x34u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v78 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_394;
      case 0x35u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v79 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_421;
      case 0x36u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v80 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_448;
      case 0x37u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v81 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_475;
      case 0x38u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v82 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_499;
      case 0x39u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v83 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_517;
      case 0x3Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v84 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_532;
      case 0x3Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v85 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_541;
      case 0x3Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v86 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_550;
      case 0x3Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v87 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_559;
      case 0x3Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v88 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_568;
      case 0x3Fu:
        int v14 = TagFallback & 7;
        if (v14 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v89 = (char *)*v4;
            unint64_t v70 = *v5;
            goto LABEL_841;
          }
LABEL_247:
          if (v14 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          unint64_t v70 = *v5;
          v180 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) < 2) {
            goto LABEL_2;
          }
          int v236 = *v180;
          if (v236 == 128) {
            break;
          }
          if (v236 != 248 || v180[1] != 3) {
            goto LABEL_2;
          }
LABEL_840:
          int v89 = (char *)(v180 + 2);
          *unsigned int v4 = (unint64_t)v89;
LABEL_841:
          unsigned int v282 = v8;
          unsigned int v222 = v9;
          v223 = v11;
          v224 = v10;
          unsigned int v225 = v7;
          unsigned int v350 = 0;
          if ((unint64_t)v89 >= v70 || *v89 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v350))return 0; {
          }
            }
          else
          {
            unsigned int v350 = *v89;
            *unsigned int v4 = (unint64_t)(v89 + 1);
          }
          int v226 = *((_DWORD *)this + 62);
          if (v226 == *((_DWORD *)this + 63))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v6, v226 + 1);
            int v226 = *((_DWORD *)this + 62);
          }
          unsigned int v227 = v350;
          uint64_t v228 = *((void *)this + 30);
          *((_DWORD *)this + 62) = v226 + 1;
          *(_DWORD *)(v228 + 4 * v226) = v227;
          int v229 = *((_DWORD *)this + 63) - *((_DWORD *)this + 62);
          if (v229 >= 1)
          {
            int v230 = v229 + 1;
            do
            {
              unint64_t v231 = *v5;
              v232 = (unsigned __int8 *)*v4;
              if ((int)(*v5 - *v4) < 2 || *v232 != 248 || v232[1] != 3) {
                break;
              }
              *unsigned int v4 = (unint64_t)(v232 + 2);
              if ((unint64_t)(v232 + 2) >= v231 || (char)v232[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v350))return 0; {
              }
                }
              else
              {
                unsigned int v350 = v232[2];
                *unsigned int v4 = (unint64_t)(v232 + 3);
              }
              int v233 = *((_DWORD *)this + 62);
              if (v233 >= *((_DWORD *)this + 63))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v351);
                int v233 = *((_DWORD *)this + 62);
              }
              unsigned int v234 = v350;
              uint64_t v235 = *((void *)this + 30);
              *((_DWORD *)this + 62) = v233 + 1;
              *(_DWORD *)(v235 + 4 * v233) = v234;
              --v230;
            }
            while (v230 > 1);
          }
          unsigned int v7 = v225;
          unsigned int v10 = v224;
          int v11 = v223;
          char v9 = v222;
          int v8 = v282;
        }
        if (v180[1] != 4) {
          continue;
        }
        char v90 = v180 + 2;
        *unsigned int v4 = (unint64_t)v90;
LABEL_867:
        *(void *)v351 = 0;
        if ((unint64_t)v90 >= v70 || (char)*v90 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v351);
          if (!result) {
            return result;
          }
          uint64_t v237 = *(void *)v351;
          unint64_t v70 = *v5;
          v238 = (unsigned __int8 *)*v4;
        }
        else
        {
          uint64_t v237 = *v90;
          v238 = v90 + 1;
          *unsigned int v4 = (unint64_t)v238;
        }
        *((void *)this + 33) = v237;
        *((_DWORD *)this + 114) |= 0x80000000;
        if ((int)v70 - (int)v238 < 2 || *v238 != 136 || v238[1] != 4) {
          continue;
        }
        int v91 = v238 + 2;
        *unsigned int v4 = (unint64_t)v91;
LABEL_876:
        if ((unint64_t)v91 >= v70 || (char)*v91 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v343);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v239 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v343 = *v91;
          v239 = v91 + 1;
          *unsigned int v4 = (unint64_t)v239;
        }
        *((_DWORD *)this + 115) |= 1u;
        if ((int)v70 - (int)v239 < 2 || *v239 != 144 || v239[1] != 4) {
          continue;
        }
        int v92 = v239 + 2;
        *unsigned int v4 = (unint64_t)v92;
LABEL_885:
        if ((unint64_t)v92 >= v70 || (char)*v92 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v339);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v240 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v339 = *v92;
          unsigned int v240 = v92 + 1;
          *unsigned int v4 = (unint64_t)v240;
        }
        *((_DWORD *)this + 115) |= 2u;
        if ((int)v70 - (int)v240 < 2 || *v240 != 152 || v240[1] != 4) {
          continue;
        }
        int v93 = v240 + 2;
        *unsigned int v4 = (unint64_t)v93;
LABEL_894:
        if ((unint64_t)v93 >= v70 || (char)*v93 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v335);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v241 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v335 = *v93;
          v241 = v93 + 1;
          *unsigned int v4 = (unint64_t)v241;
        }
        *((_DWORD *)this + 115) |= 4u;
        if ((int)v70 - (int)v241 < 2 || *v241 != 160 || v241[1] != 4) {
          continue;
        }
        int v94 = v241 + 2;
        *unsigned int v4 = (unint64_t)v94;
LABEL_903:
        if ((unint64_t)v94 >= v70 || (char)*v94 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v332);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v242 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v332 = *v94;
          unsigned int v242 = v94 + 1;
          *unsigned int v4 = (unint64_t)v242;
        }
        *((_DWORD *)this + 115) |= 8u;
        if ((int)v70 - (int)v242 < 2 || *v242 != 168 || v242[1] != 4) {
          continue;
        }
        uint64_t v95 = v242 + 2;
        *unsigned int v4 = (unint64_t)v95;
LABEL_912:
        if ((unint64_t)v95 >= v70 || (char)*v95 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v328);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v243 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v328 = *v95;
          v243 = v95 + 1;
          *unsigned int v4 = (unint64_t)v243;
        }
        *((_DWORD *)this + 115) |= 0x10u;
        if ((int)v70 - (int)v243 < 2 || *v243 != 176 || v243[1] != 4) {
          continue;
        }
        int v96 = v243 + 2;
        *unsigned int v4 = (unint64_t)v96;
LABEL_921:
        if ((unint64_t)v96 >= v70 || (char)*v96 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v325);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v244 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v325 = *v96;
          unsigned int v244 = v96 + 1;
          *unsigned int v4 = (unint64_t)v244;
        }
        *((_DWORD *)this + 115) |= 0x20u;
        if ((int)v70 - (int)v244 < 2 || *v244 != 184 || v244[1] != 4) {
          continue;
        }
        int v97 = v244 + 2;
        *unsigned int v4 = (unint64_t)v97;
LABEL_930:
        if ((unint64_t)v97 >= v70 || (char)*v97 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v320);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v245 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v320 = *v97;
          v245 = v97 + 1;
          *unsigned int v4 = (unint64_t)v245;
        }
        *((_DWORD *)this + 115) |= 0x40u;
        if ((int)v70 - (int)v245 < 2 || *v245 != 192 || v245[1] != 4) {
          continue;
        }
        int v98 = v245 + 2;
        *unsigned int v4 = (unint64_t)v98;
LABEL_939:
        if ((unint64_t)v98 >= v70 || (char)*v98 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v316);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v246 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v316 = *v98;
          v246 = v98 + 1;
          *unsigned int v4 = (unint64_t)v246;
        }
        *((_DWORD *)this + 115) |= 0x80u;
        if ((int)v70 - (int)v246 < 2 || *v246 != 200 || v246[1] != 4) {
          continue;
        }
        int v99 = v246 + 2;
        *unsigned int v4 = (unint64_t)v99;
LABEL_948:
        if ((unint64_t)v99 >= v70 || (char)*v99 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v299);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v247 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v299 = *v99;
          unsigned int v247 = v99 + 1;
          *unsigned int v4 = (unint64_t)v247;
        }
        *((_DWORD *)this + 115) |= 0x100u;
        if ((int)v70 - (int)v247 < 2 || *v247 != 208 || v247[1] != 4) {
          continue;
        }
        char v100 = v247 + 2;
        *unsigned int v4 = (unint64_t)v100;
LABEL_957:
        if ((unint64_t)v100 >= v70 || (char)*v100 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v298);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v248 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v298 = *v100;
          v248 = v100 + 1;
          *unsigned int v4 = (unint64_t)v248;
        }
        *((_DWORD *)this + 115) |= 0x200u;
        if ((int)v70 - (int)v248 < 2 || *v248 != 216 || v248[1] != 4) {
          continue;
        }
        char v101 = v248 + 2;
        *unsigned int v4 = (unint64_t)v101;
LABEL_966:
        v351[0] = 0;
        if ((unint64_t)v101 >= v70 || (char)*v101 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v249 = v351[0];
          unint64_t v70 = *v5;
          v250 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v249 = *v101;
          v250 = v101 + 1;
          *unsigned int v4 = (unint64_t)v250;
        }
        *((_DWORD *)this + 77) = v249;
        *((_DWORD *)this + 115) |= 0x400u;
        if ((int)v70 - (int)v250 < 2 || *v250 != 224 || v250[1] != 4) {
          continue;
        }
        unsigned int v102 = v250 + 2;
        *unsigned int v4 = (unint64_t)v102;
LABEL_975:
        if ((unint64_t)v102 >= v70 || (char)*v102 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v297);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v251 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v297 = *v102;
          unsigned int v251 = v102 + 1;
          *unsigned int v4 = (unint64_t)v251;
        }
        *((_DWORD *)this + 115) |= 0x800u;
        if ((int)v70 - (int)v251 < 2 || *v251 != 232 || v251[1] != 4) {
          continue;
        }
        unsigned int v103 = v251 + 2;
        *unsigned int v4 = (unint64_t)v103;
LABEL_984:
        v351[0] = 0;
        if ((unint64_t)v103 >= v70 || (char)*v103 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v252 = v351[0];
          unint64_t v70 = *v5;
          unsigned int v253 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v252 = *v103;
          unsigned int v253 = v103 + 1;
          *unsigned int v4 = (unint64_t)v253;
        }
        *((_DWORD *)this + 79) = v252;
        *((_DWORD *)this + 115) |= 0x1000u;
        if ((int)v70 - (int)v253 < 2 || *v253 != 240 || v253[1] != 4) {
          continue;
        }
        int v104 = v253 + 2;
        *unsigned int v4 = (unint64_t)v104;
LABEL_993:
        if ((unint64_t)v104 >= v70 || (char)*v104 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v296);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v254 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v296 = *v104;
          v254 = v104 + 1;
          *unsigned int v4 = (unint64_t)v254;
        }
        *((_DWORD *)this + 115) |= 0x2000u;
        if ((int)v70 - (int)v254 < 2 || *v254 != 248 || v254[1] != 4) {
          continue;
        }
        int v105 = v254 + 2;
        *unsigned int v4 = (unint64_t)v105;
LABEL_1002:
        v351[0] = 0;
        if ((unint64_t)v105 >= v70 || (char)*v105 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v255 = v351[0];
          unint64_t v70 = *v5;
          unsigned int v256 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v255 = *v105;
          unsigned int v256 = v105 + 1;
          *unsigned int v4 = (unint64_t)v256;
        }
        *((_DWORD *)this + 81) = v255;
        *((_DWORD *)this + 115) |= 0x4000u;
        if ((int)v70 - (int)v256 < 2 || *v256 != 128 || v256[1] != 5) {
          continue;
        }
        int v106 = v256 + 2;
        *unsigned int v4 = (unint64_t)v106;
LABEL_1011:
        if ((unint64_t)v106 >= v70 || (char)*v106 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v295);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v257 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v295 = *v106;
          v257 = v106 + 1;
          *unsigned int v4 = (unint64_t)v257;
        }
        *((_DWORD *)this + 115) |= 0x8000u;
        if ((int)v70 - (int)v257 < 2 || *v257 != 136 || v257[1] != 5) {
          continue;
        }
        uint64_t v107 = v257 + 2;
        *unsigned int v4 = (unint64_t)v107;
LABEL_1020:
        if ((unint64_t)v107 >= v70 || (char)*v107 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v294);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v258 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v294 = *v107;
          v258 = v107 + 1;
          *unsigned int v4 = (unint64_t)v258;
        }
        *((_DWORD *)this + 115) |= 0x10000u;
        if ((int)v70 - (int)v258 < 2 || *v258 != 144 || v258[1] != 5) {
          continue;
        }
        uint64_t v108 = v258 + 2;
        *unsigned int v4 = (unint64_t)v108;
LABEL_1029:
        if ((unint64_t)v108 >= v70 || (char)*v108 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v293);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v259 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v293 = *v108;
          unsigned int v259 = v108 + 1;
          *unsigned int v4 = (unint64_t)v259;
        }
        *((_DWORD *)this + 115) |= 0x20000u;
        if ((int)v70 - (int)v259 < 2 || *v259 != 152 || v259[1] != 5) {
          continue;
        }
        uint64_t v109 = v259 + 2;
        *unsigned int v4 = (unint64_t)v109;
LABEL_1038:
        if ((unint64_t)v109 >= v70 || (char)*v109 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v292);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v260 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v292 = *v109;
          v260 = v109 + 1;
          *unsigned int v4 = (unint64_t)v260;
        }
        *((_DWORD *)this + 115) |= 0x40000u;
        if ((int)v70 - (int)v260 < 2 || *v260 != 160 || v260[1] != 5) {
          continue;
        }
        int v110 = v260 + 2;
        *unsigned int v4 = (unint64_t)v110;
LABEL_1047:
        if ((unint64_t)v110 >= v70 || (char)*v110 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v291);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          unsigned int v261 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v291 = *v110;
          unsigned int v261 = v110 + 1;
          *unsigned int v4 = (unint64_t)v261;
        }
        *((_DWORD *)this + 115) |= 0x80000u;
        if ((int)v70 - (int)v261 < 2 || *v261 != 168 || v261[1] != 5) {
          continue;
        }
        int v111 = v261 + 2;
        *unsigned int v4 = (unint64_t)v111;
LABEL_1056:
        if ((unint64_t)v111 >= v70 || (char)*v111 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v290);
          if (!result) {
            return result;
          }
          v262 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v290 = *v111;
          v262 = v111 + 1;
          *unsigned int v4 = (unint64_t)v262;
        }
        *((_DWORD *)this + 115) |= 0x100000u;
        unint64_t v113 = *v5;
        if ((int)(*v5 - v262) < 2 || *v262 != 176 || v262[1] != 5) {
          continue;
        }
        int v112 = v262 + 2;
        *unsigned int v4 = (unint64_t)v112;
LABEL_1065:
        if ((unint64_t)v112 >= v113 || (char)*v112 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v289);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          unsigned int v263 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v289 = *v112;
          unsigned int v263 = v112 + 1;
          *unsigned int v4 = (unint64_t)v263;
        }
        *((_DWORD *)this + 115) |= 0x200000u;
        if ((int)v113 - (int)v263 < 2 || *v263 != 184 || v263[1] != 5) {
          continue;
        }
        int v114 = v263 + 2;
        *unsigned int v4 = (unint64_t)v114;
LABEL_1074:
        if ((unint64_t)v114 >= v113 || (char)*v114 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v288);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          v264 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v288 = *v114;
          v264 = v114 + 1;
          *unsigned int v4 = (unint64_t)v264;
        }
        *((_DWORD *)this + 115) |= 0x400000u;
        if ((int)v113 - (int)v264 < 2 || *v264 != 192 || v264[1] != 5) {
          continue;
        }
        int v115 = v264 + 2;
        *unsigned int v4 = (unint64_t)v115;
LABEL_1083:
        if ((unint64_t)v115 >= v113 || (char)*v115 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v287);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          unsigned int v265 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v287 = *v115;
          unsigned int v265 = v115 + 1;
          *unsigned int v4 = (unint64_t)v265;
        }
        *((_DWORD *)this + 115) |= 0x800000u;
        if ((int)v113 - (int)v265 < 2 || *v265 != 200 || v265[1] != 5) {
          continue;
        }
        int v116 = v265 + 2;
        *unsigned int v4 = (unint64_t)v116;
LABEL_1092:
        if ((unint64_t)v116 >= v113 || (char)*v116 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v286);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          v266 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v286 = *v116;
          v266 = v116 + 1;
          *unsigned int v4 = (unint64_t)v266;
        }
        *((_DWORD *)this + 115) |= 0x1000000u;
        if ((int)v113 - (int)v266 < 2 || *v266 != 208 || v266[1] != 5) {
          continue;
        }
        int v117 = v266 + 2;
        *unsigned int v4 = (unint64_t)v117;
LABEL_1101:
        if ((unint64_t)v117 >= v113 || (char)*v117 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v285);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          unsigned int v267 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v285 = *v117;
          unsigned int v267 = v117 + 1;
          *unsigned int v4 = (unint64_t)v267;
        }
        *((_DWORD *)this + 115) |= 0x2000000u;
        if ((int)v113 - (int)v267 < 2 || *v267 != 216 || v267[1] != 5) {
          continue;
        }
        unint64_t v118 = v267 + 2;
        *unsigned int v4 = (unint64_t)v118;
LABEL_1110:
        if ((unint64_t)v118 >= v113 || (char)*v118 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v284);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          v268 = (unsigned __int8 *)*v4;
        }
        else
        {
          *unsigned int v284 = *v118;
          v268 = v118 + 1;
          *unsigned int v4 = (unint64_t)v268;
        }
        *((_DWORD *)this + 115) |= 0x4000000u;
        if ((int)v113 - (int)v268 < 2 || *v268 != 224 || v268[1] != 5) {
          continue;
        }
        int v119 = v268 + 2;
        *unsigned int v4 = (unint64_t)v119;
LABEL_1119:
        if ((unint64_t)v119 >= v113 || (char)*v119 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v283);
          if (!result) {
            return result;
          }
          unint64_t v113 = *v5;
          unsigned int v269 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v283 = *v119;
          unsigned int v269 = v119 + 1;
          *unsigned int v4 = (unint64_t)v269;
        }
        *((_DWORD *)this + 115) |= 0x8000000u;
        if ((int)v113 - (int)v269 < 2 || *v269 != 232 || v269[1] != 5) {
          continue;
        }
        int v120 = v269 + 2;
        *unsigned int v4 = (unint64_t)v120;
LABEL_1128:
        v351[0] = 0;
        if ((unint64_t)v120 >= v113 || (char)*v120 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v270 = v351[0];
          unint64_t v113 = *v5;
          v271 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v270 = *v120;
          v271 = v120 + 1;
          *unsigned int v4 = (unint64_t)v271;
        }
        *((unsigned char *)this + 227) = v270 != 0;
        *((_DWORD *)this + 115) |= 0x10000000u;
        if ((int)v113 - (int)v271 < 2 || *v271 != 240 || v271[1] != 5) {
          continue;
        }
        unsigned int v121 = v271 + 2;
        *unsigned int v4 = (unint64_t)v121;
LABEL_1137:
        v351[0] = 0;
        if ((unint64_t)v121 >= v113 || (char)*v121 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v272 = v351[0];
          unint64_t v113 = *v5;
          v273 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v272 = *v121;
          v273 = v121 + 1;
          *unsigned int v4 = (unint64_t)v273;
        }
        *((unsigned char *)this + 380) = v272 != 0;
        *((_DWORD *)this + 115) |= 0x20000000u;
        if ((int)v113 - (int)v273 < 2 || *v273 != 248 || v273[1] != 5) {
          continue;
        }
        unsigned int v122 = (char *)(v273 + 2);
        *unsigned int v4 = (unint64_t)v122;
LABEL_1146:
        v351[0] = 0;
        if ((unint64_t)v122 >= v113 || *v122 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v274 = v351[0];
        }
        else
        {
          unsigned int v274 = *v122;
          *unsigned int v4 = (unint64_t)(v122 + 1);
        }
        if (v274 <= 0x18)
        {
          *((_DWORD *)this + 115) |= 0x40000000u;
          *((_DWORD *)this + 96) = v274;
        }
        unint64_t v124 = *v5;
        v275 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v275 != 128 || v275[1] != 6) {
          continue;
        }
        unint64_t v123 = (char *)(v275 + 2);
        *unsigned int v4 = (unint64_t)v123;
LABEL_1157:
        v351[0] = 0;
        if ((unint64_t)v123 >= v124 || *v123 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
          if (!result) {
            return result;
          }
          unsigned int v276 = v351[0];
        }
        else
        {
          unsigned int v276 = *v123;
          *unsigned int v4 = (unint64_t)(v123 + 1);
        }
        if (v276 <= 0x18)
        {
          *((_DWORD *)this + 115) |= 0x80000000;
          *((_DWORD *)this + 97) = v276;
        }
        unint64_t v126 = *v5;
        v277 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v277 != 136 || v277[1] != 6) {
          continue;
        }
        v125 = v277 + 2;
        *unsigned int v4 = (unint64_t)v125;
LABEL_1168:
        *(void *)v351 = 0;
        if ((unint64_t)v125 >= v126 || (char)*v125 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v351);
          if (!result) {
            return result;
          }
          uint64_t v278 = *(void *)v351;
          unint64_t v126 = *v5;
          v279 = (unsigned __int8 *)*v4;
        }
        else
        {
          uint64_t v278 = *v125;
          v279 = v125 + 1;
          *unsigned int v4 = (unint64_t)v279;
        }
        *((void *)this + 49) = v278;
        *((_DWORD *)this + 116) |= 1u;
        if ((int)v126 - (int)v279 < 2 || *v279 != 144 || v279[1] != 6) {
          continue;
        }
        v127 = v279 + 2;
        *unsigned int v4 = (unint64_t)v127;
LABEL_1177:
        *(void *)v351 = 0;
        if ((unint64_t)v127 >= v126 || (char)*v127 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v351);
          if (!result) {
            return result;
          }
          uint64_t v280 = *(void *)v351;
          unint64_t v126 = *v5;
          v281 = (unsigned __int8 *)*v4;
        }
        else
        {
          uint64_t v280 = *v127;
          v281 = v127 + 1;
          *unsigned int v4 = (unint64_t)v281;
        }
        *((void *)this + 50) = v280;
        *((_DWORD *)this + 116) |= 2u;
        if ((int)v126 - (int)v281 < 2 || *v281 != 153 || v281[1] != 6) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v281 + 2);
LABEL_222:
        *(void *)v351 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v351))
        {
          *((void *)this + 51) = *(void *)v351;
          *((_DWORD *)this + 116) |= 4u;
          unint64_t v128 = *v5;
          v129 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) >= 2 && *v129 == 160 && v129[1] == 6)
          {
            int v130 = v129 + 2;
            *unsigned int v4 = (unint64_t)v130;
LABEL_229:
            if ((unint64_t)v130 >= v128 || (char)*v130 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v344);
              if (!result) {
                return result;
              }
              unint64_t v128 = *v5;
              v131 = (unsigned __int8 *)*v4;
            }
            else
            {
              unsigned int *v344 = *v130;
              v131 = v130 + 1;
              *unsigned int v4 = (unint64_t)v131;
            }
            *((_DWORD *)this + 116) |= 8u;
            if ((int)v128 - (int)v131 >= 2 && *v131 == 168 && v131[1] == 6)
            {
              int v132 = v131 + 2;
              *unsigned int v4 = (unint64_t)v132;
LABEL_295:
              if ((unint64_t)v132 >= v128 || (char)*v132 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v340);
                if (!result) {
                  return result;
                }
                unint64_t v128 = *v5;
                int v145 = (unsigned __int8 *)*v4;
              }
              else
              {
                unsigned int *v340 = *v132;
                int v145 = v132 + 1;
                *unsigned int v4 = (unint64_t)v145;
              }
              *((_DWORD *)this + 116) |= 0x10u;
              if ((int)v128 - (int)v145 >= 2 && *v145 == 176 && v145[1] == 6)
              {
                v133 = v145 + 2;
                *unsigned int v4 = (unint64_t)v133;
LABEL_322:
                if ((unint64_t)v133 >= v128 || (char)*v133 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v336);
                  if (!result) {
                    return result;
                  }
                  unint64_t v128 = *v5;
                  unint64_t v148 = (unsigned __int8 *)*v4;
                }
                else
                {
                  unsigned int *v336 = *v133;
                  unint64_t v148 = v133 + 1;
                  *unsigned int v4 = (unint64_t)v148;
                }
                *((_DWORD *)this + 116) |= 0x20u;
                if ((int)v128 - (int)v148 >= 2 && *v148 == 184 && v148[1] == 6)
                {
                  int v134 = v148 + 2;
                  *unsigned int v4 = (unint64_t)v134;
LABEL_349:
                  v351[0] = 0;
                  if ((unint64_t)v134 >= v128 || (char)*v134 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
                    if (!result) {
                      return result;
                    }
                    unsigned int v152 = v351[0];
                    unint64_t v128 = *v5;
                    int v153 = (unsigned __int8 *)*v4;
                  }
                  else
                  {
                    unsigned int v152 = *v134;
                    int v153 = v134 + 1;
                    *unsigned int v4 = (unint64_t)v153;
                  }
                  *((_DWORD *)this + 107) = v152;
                  *((_DWORD *)this + 116) |= 0x40u;
                  if ((int)v128 - (int)v153 >= 2 && *v153 == 192 && v153[1] == 6)
                  {
                    v135 = v153 + 2;
                    *unsigned int v4 = (unint64_t)v135;
LABEL_376:
                    v351[0] = 0;
                    if ((unint64_t)v135 >= v128 || (char)*v135 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
                      if (!result) {
                        return result;
                      }
                      unsigned int v156 = v351[0];
                      unint64_t v128 = *v5;
                      int v157 = (unsigned __int8 *)*v4;
                    }
                    else
                    {
                      unsigned int v156 = *v135;
                      int v157 = v135 + 1;
                      *unsigned int v4 = (unint64_t)v157;
                    }
                    *((_DWORD *)this + 108) = v156;
                    *((_DWORD *)this + 116) |= 0x80u;
                    if ((int)v128 - (int)v157 >= 2 && *v157 == 200 && v157[1] == 6)
                    {
                      int v136 = v157 + 2;
                      *unsigned int v4 = (unint64_t)v136;
LABEL_403:
                      v351[0] = 0;
                      if ((unint64_t)v136 >= v128 || (char)*v136 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v351);
                        if (!result) {
                          return result;
                        }
                        unsigned int v160 = v351[0];
                        unint64_t v128 = *v5;
                        int v161 = (unsigned __int8 *)*v4;
                      }
                      else
                      {
                        unsigned int v160 = *v136;
                        int v161 = v136 + 1;
                        *unsigned int v4 = (unint64_t)v161;
                      }
                      *((_DWORD *)this + 109) = v160;
                      *((_DWORD *)this + 116) |= 0x100u;
                      if ((int)v128 - (int)v161 >= 2 && *v161 == 208 && v161[1] == 6)
                      {
                        unsigned int v137 = v161 + 2;
                        *unsigned int v4 = (unint64_t)v137;
LABEL_430:
                        if ((unint64_t)v137 >= v128 || (char)*v137 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v322);
                          if (!result) {
                            return result;
                          }
                          unint64_t v128 = *v5;
                          char v164 = (unsigned __int8 *)*v4;
                        }
                        else
                        {
                          unsigned int *v322 = *v137;
                          char v164 = v137 + 1;
                          *unsigned int v4 = (unint64_t)v164;
                        }
                        *((_DWORD *)this + 116) |= 0x200u;
                        if ((int)v128 - (int)v164 >= 2 && *v164 == 216 && v164[1] == 6)
                        {
                          int v138 = (char *)(v164 + 2);
                          *unsigned int v4 = (unint64_t)v138;
LABEL_457:
                          if ((unint64_t)v138 >= v128 || *v138 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v318);
                            if (!result) {
                              return result;
                            }
                            v168 = (unsigned __int8 *)*v4;
                            unint64_t v128 = *v5;
                          }
                          else
                          {
                            unsigned int *v318 = *v138;
                            v168 = (unsigned __int8 *)(v138 + 1);
                            *unsigned int v4 = (unint64_t)v168;
                          }
                          *((_DWORD *)this + 116) |= 0x400u;
                          if (v168 == (unsigned __int8 *)v128
                            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                          {
                            *((_DWORD *)a2 + 8) = 0;
                            uint64_t result = 1;
                            *((unsigned char *)a2 + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 0x40u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v90 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_867;
      case 0x41u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v91 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_876;
      case 0x42u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v92 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_885;
      case 0x43u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v93 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_894;
      case 0x44u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v94 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_903;
      case 0x45u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        uint64_t v95 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_912;
      case 0x46u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v96 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_921;
      case 0x47u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v97 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_930;
      case 0x48u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v98 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_939;
      case 0x49u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v99 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_948;
      case 0x4Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v100 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_957;
      case 0x4Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        char v101 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_966;
      case 0x4Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v102 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_975;
      case 0x4Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v103 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_984;
      case 0x4Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v104 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_993;
      case 0x4Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v105 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1002;
      case 0x50u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v106 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1011;
      case 0x51u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        uint64_t v107 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1020;
      case 0x52u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        uint64_t v108 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1029;
      case 0x53u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        uint64_t v109 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1038;
      case 0x54u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v110 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1047;
      case 0x55u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v111 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1056;
      case 0x56u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v112 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1065;
      case 0x57u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v114 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1074;
      case 0x58u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v115 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1083;
      case 0x59u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v116 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1092;
      case 0x5Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v117 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1101;
      case 0x5Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unint64_t v118 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1110;
      case 0x5Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v119 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1119;
      case 0x5Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v120 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1128;
      case 0x5Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v121 = (unsigned __int8 *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1137;
      case 0x5Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v122 = (char *)*v4;
        unint64_t v113 = *v5;
        goto LABEL_1146;
      case 0x60u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unint64_t v123 = (char *)*v4;
        unint64_t v124 = *v5;
        goto LABEL_1157;
      case 0x61u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        v125 = (unsigned __int8 *)*v4;
        unint64_t v126 = *v5;
        goto LABEL_1168;
      case 0x62u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        v127 = (unsigned __int8 *)*v4;
        unint64_t v126 = *v5;
        goto LABEL_1177;
      case 0x63u:
        int v14 = TagFallback & 7;
        if (v14 == 1) {
          goto LABEL_222;
        }
        goto LABEL_247;
      case 0x64u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v130 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_229;
      case 0x65u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v132 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_295;
      case 0x66u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        v133 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_322;
      case 0x67u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v134 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_349;
      case 0x68u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        v135 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_376;
      case 0x69u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v136 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_403;
      case 0x6Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        unsigned int v137 = (unsigned __int8 *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_430;
      case 0x6Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_247;
        }
        int v138 = (char *)*v4;
        unint64_t v128 = *v5;
        goto LABEL_457;
      default:
        int v14 = TagFallback & 7;
        goto LABEL_247;
    }
  }
}

void sub_22492A1FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 136));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v11 = 0;
  unsigned int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v11 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v10 = 0;
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v10 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v7 = *(_DWORD *)(a2 + 8);
      if (v7 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v7 + 1);
        int v7 = *(_DWORD *)(a2 + 8);
      }
      unsigned int v8 = v10;
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v7 + 1;
      *(_DWORD *)(v9 + 4 * v7) = v8;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::MotionFitnessSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 452);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 452);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_115;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 53), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 54), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 55), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 92), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(unsigned int *)(v5 + 104), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(unsigned int *)(v5 + 108), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_143:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (uint64_t)a2, *(float *)(v5 + 124), a3);
    if ((*(_DWORD *)(v5 + 452) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_144;
  }
LABEL_142:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 452);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_143;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_144:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
LABEL_33:
  int v7 = *(_DWORD *)(v5 + 456);
  if (v7)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (uint64_t)a2, *(float *)(v5 + 132), a3);
    int v7 = *(_DWORD *)(v5 + 456);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_147;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, (uint64_t)a2, *(float *)(v5 + 136), a3);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_148;
  }
LABEL_147:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_149;
  }
LABEL_148:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 144), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 148), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned __int8 *)(v5 + 224), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_152;
  }
LABEL_151:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 152), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_153;
  }
LABEL_152:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 156), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_154;
  }
LABEL_153:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_155;
  }
LABEL_154:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned __int8 *)(v5 + 225), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_156;
  }
LABEL_155:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_157;
  }
LABEL_156:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x1000) == 0)
  {
LABEL_46:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_158;
  }
LABEL_157:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x2000) == 0)
  {
LABEL_47:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_159;
  }
LABEL_158:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, (uint64_t)a2, *(float *)(v5 + 176), a3);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x4000) == 0)
  {
LABEL_48:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_160;
  }
LABEL_159:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 180), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x8000) == 0)
  {
LABEL_49:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_161;
  }
LABEL_160:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10000) == 0)
  {
LABEL_50:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_162;
  }
LABEL_161:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x20000) == 0)
  {
LABEL_51:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_163;
  }
LABEL_162:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x40000) == 0)
  {
LABEL_52:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_164;
  }
LABEL_163:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x80000) == 0)
  {
LABEL_53:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_165;
  }
LABEL_164:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x100000) == 0)
  {
LABEL_54:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_166;
  }
LABEL_165:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x200000) == 0)
  {
LABEL_55:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_167;
  }
LABEL_166:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x400000) == 0)
  {
LABEL_56:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_168;
  }
LABEL_167:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 212), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x800000) == 0)
  {
LABEL_57:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_169;
  }
LABEL_168:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned int *)(v5 + 216), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_170;
  }
LABEL_169:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 220), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_171;
  }
LABEL_170:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned __int8 *)(v5 + 226), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_172;
  }
LABEL_171:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned int *)(v5 + 228), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_173;
  }
LABEL_172:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 456);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_173:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 236), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 456) & 0x20000000) != 0) {
LABEL_63:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
LABEL_64:
  if (*(int *)(v5 + 248) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(*(void *)(v5 + 240) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 248));
  }
  if ((*(_DWORD *)(v5 + 456) & 0x80000000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(void *)(v5 + 264), (uint64_t)a2, a4);
  }
  int v9 = *(_DWORD *)(v5 + 460);
  if (v9)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
    int v9 = *(_DWORD *)(v5 + 460);
    if ((v9 & 2) == 0)
    {
LABEL_71:
      if ((v9 & 4) == 0) {
        goto LABEL_72;
      }
      goto LABEL_177;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_71;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 4) == 0)
  {
LABEL_72:
    if ((v9 & 8) == 0) {
      goto LABEL_73;
    }
    goto LABEL_178;
  }
LABEL_177:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 276), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 8) == 0)
  {
LABEL_73:
    if ((v9 & 0x10) == 0) {
      goto LABEL_74;
    }
    goto LABEL_179;
  }
LABEL_178:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned int *)(v5 + 280), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10) == 0)
  {
LABEL_74:
    if ((v9 & 0x20) == 0) {
      goto LABEL_75;
    }
    goto LABEL_180;
  }
LABEL_179:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned int *)(v5 + 284), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20) == 0)
  {
LABEL_75:
    if ((v9 & 0x40) == 0) {
      goto LABEL_76;
    }
    goto LABEL_181;
  }
LABEL_180:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(v5 + 288), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40) == 0)
  {
LABEL_76:
    if ((v9 & 0x80) == 0) {
      goto LABEL_77;
    }
    goto LABEL_182;
  }
LABEL_181:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 292), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x80) == 0)
  {
LABEL_77:
    if ((v9 & 0x100) == 0) {
      goto LABEL_78;
    }
    goto LABEL_183;
  }
LABEL_182:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x100) == 0)
  {
LABEL_78:
    if ((v9 & 0x200) == 0) {
      goto LABEL_79;
    }
    goto LABEL_184;
  }
LABEL_183:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x200) == 0)
  {
LABEL_79:
    if ((v9 & 0x400) == 0) {
      goto LABEL_80;
    }
    goto LABEL_185;
  }
LABEL_184:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 304), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x400) == 0)
  {
LABEL_80:
    if ((v9 & 0x800) == 0) {
      goto LABEL_81;
    }
    goto LABEL_186;
  }
LABEL_185:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 308), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x800) == 0)
  {
LABEL_81:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_187;
  }
LABEL_186:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x1000) == 0)
  {
LABEL_82:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_188;
  }
LABEL_187:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x2000) == 0)
  {
LABEL_83:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_189;
  }
LABEL_188:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned int *)(v5 + 320), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x4000) == 0)
  {
LABEL_84:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_190;
  }
LABEL_189:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x8000) == 0)
  {
LABEL_85:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_191;
  }
LABEL_190:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 328), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10000) == 0)
  {
LABEL_86:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_192;
  }
LABEL_191:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 332), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20000) == 0)
  {
LABEL_87:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_193;
  }
LABEL_192:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 336), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40000) == 0)
  {
LABEL_88:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_194;
  }
LABEL_193:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 340), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x80000) == 0)
  {
LABEL_89:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_195;
  }
LABEL_194:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned int *)(v5 + 344), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x100000) == 0)
  {
LABEL_90:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_196;
  }
LABEL_195:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x200000) == 0)
  {
LABEL_91:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_197;
  }
LABEL_196:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x400000) == 0)
  {
LABEL_92:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_198;
  }
LABEL_197:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 356), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x800000) == 0)
  {
LABEL_93:
    if ((v9 & 0x1000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_199;
  }
LABEL_198:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(unsigned int *)(v5 + 360), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x1000000) == 0)
  {
LABEL_94:
    if ((v9 & 0x2000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_200;
  }
LABEL_199:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x2000000) == 0)
  {
LABEL_95:
    if ((v9 & 0x4000000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_201;
  }
LABEL_200:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 368), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_96:
    if ((v9 & 0x8000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_202;
  }
LABEL_201:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 372), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_97:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_203;
  }
LABEL_202:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_98:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_204;
  }
LABEL_203:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned __int8 *)(v5 + 227), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_99:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_100;
    }
LABEL_205:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 460) & 0x80000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_206;
  }
LABEL_204:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned __int8 *)(v5 + 380), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 460);
  if ((v9 & 0x40000000) != 0) {
    goto LABEL_205;
  }
LABEL_100:
  if ((v9 & 0x80000000) == 0) {
    goto LABEL_101;
  }
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
LABEL_101:
  int v10 = *(_DWORD *)(v5 + 464);
  if (v10)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(void *)(v5 + 392), (uint64_t)a2, a4);
    int v10 = *(_DWORD *)(v5 + 464);
    if ((v10 & 2) == 0)
    {
LABEL_103:
      if ((v10 & 4) == 0) {
        goto LABEL_104;
      }
      goto LABEL_209;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_103;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(void *)(v5 + 400), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 4) == 0)
  {
LABEL_104:
    if ((v10 & 8) == 0) {
      goto LABEL_105;
    }
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, (uint64_t)a2, *(double *)(v5 + 408), a3);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 8) == 0)
  {
LABEL_105:
    if ((v10 & 0x10) == 0) {
      goto LABEL_106;
    }
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x10) == 0)
  {
LABEL_106:
    if ((v10 & 0x20) == 0) {
      goto LABEL_107;
    }
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x20) == 0)
  {
LABEL_107:
    if ((v10 & 0x40) == 0) {
      goto LABEL_108;
    }
    goto LABEL_213;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 424), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x40) == 0)
  {
LABEL_108:
    if ((v10 & 0x80) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(unsigned int *)(v5 + 428), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x80) == 0)
  {
LABEL_109:
    if ((v10 & 0x100) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x100) == 0)
  {
LABEL_110:
    if ((v10 & 0x200) == 0) {
      goto LABEL_111;
    }
LABEL_216:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 464) & 0x400) == 0) {
      return this;
    }
    goto LABEL_217;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 464);
  if ((v10 & 0x200) != 0) {
    goto LABEL_216;
  }
LABEL_111:
  if ((v10 & 0x400) == 0) {
    return this;
  }
LABEL_217:
  uint64_t v11 = *(unsigned int *)(v5 + 444);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, v11, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionFitnessSession::ByteSize(awd::metrics::MotionFitnessSession *this)
{
  unsigned int v2 = *((_DWORD *)this + 113);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_48;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 113);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v5 = 1;
  }
  v3 += v5 + 1;
LABEL_13:
  if ((v2 & 4) != 0) {
    v3 += 2;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v6 = *((void *)this + 3);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      unsigned int v2 = *((_DWORD *)this + 113);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 1;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    v3 += v11 + v7 + 1;
    if ((v2 & 0x10) == 0)
    {
LABEL_17:
      if ((v2 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_17;
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v13 = 1;
  }
  v3 += v13 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
LABEL_38:
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_44:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v19 = 1;
    }
    v3 += v19 + 1;
  }
LABEL_48:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_90;
  }
  if ((v2 & 0x100) != 0) {
    v3 += 2;
  }
  if ((v2 & 0x200) != 0)
  {
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x400) == 0)
    {
LABEL_53:
      if ((v2 & 0x800) == 0) {
        goto LABEL_54;
      }
      goto LABEL_68;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_53;
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v23 = 1;
  }
  v3 += v23 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_54:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_74;
  }
LABEL_68:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v25 = 1;
  }
  v3 += v25 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_55:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_80;
  }
LABEL_74:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v27 = 1;
  }
  v3 += v27 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_56:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
LABEL_80:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v29 = 1;
  }
  v3 += v29 + 1;
  if ((v2 & 0x4000) != 0)
  {
LABEL_84:
    unint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v30 >= 0x80)
    {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v31 = 1;
    }
    v3 += v31 + 1;
  }
LABEL_88:
  if ((v2 & 0x8000) != 0) {
    v3 += 3;
  }
LABEL_90:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_135;
  }
  if ((v2 & 0x10000) != 0) {
    v3 += 3;
  }
  if ((v2 & 0x20000) != 0)
  {
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v32 & 0x80000000) != 0)
    {
      int v33 = 10;
    }
    else if (v32 >= 0x80)
    {
      int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v33 = 1;
    }
    v3 += v33 + 2;
    if ((v2 & 0x40000) == 0)
    {
LABEL_95:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_96;
      }
      goto LABEL_113;
    }
  }
  else if ((v2 & 0x40000) == 0)
  {
    goto LABEL_95;
  }
  int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if ((v34 & 0x80000000) != 0)
  {
    int v35 = 10;
  }
  else if (v34 >= 0x80)
  {
    int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v35 = 1;
  }
  v3 += v35 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_96:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_117;
  }
LABEL_113:
  int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v36 >= 0x80)
  {
    int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v37 = 1;
  }
  v3 += v37 + 2;
  if ((v2 & 0x100000) == 0)
  {
LABEL_97:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_121;
  }
LABEL_117:
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if (v38 >= 0x80)
  {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v39 = 1;
  }
  v3 += v39 + 2;
  if ((v2 & 0x200000) == 0)
  {
LABEL_98:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_127;
  }
LABEL_121:
  char v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  if ((v40 & 0x80000000) != 0)
  {
    int v41 = 10;
  }
  else if (v40 >= 0x80)
  {
    int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v41 = 1;
  }
  v3 += v41 + 2;
  if ((v2 & 0x400000) == 0)
  {
LABEL_99:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_131;
  }
LABEL_127:
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
  if (v42 >= 0x80)
  {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v43 = 1;
  }
  v3 += v43 + 2;
  if ((v2 & 0x800000) != 0)
  {
LABEL_131:
    int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
    if (v44 >= 0x80)
    {
      int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v45 = 1;
    }
    v3 += v45 + 2;
  }
LABEL_135:
  if (!HIBYTE(v2)) {
    goto LABEL_174;
  }
  if ((v2 & 0x1000000) != 0)
  {
    int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
    if (v46 >= 0x80)
    {
      int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v47 = 1;
    }
    v3 += v47 + 2;
    if ((v2 & 0x2000000) == 0)
    {
LABEL_138:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_139;
      }
      goto LABEL_151;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_138;
  }
  int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
  if (v48 >= 0x80)
  {
    int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v49 = 1;
  }
  v3 += v49 + 2;
  if ((v2 & 0x4000000) == 0)
  {
LABEL_139:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_155;
  }
LABEL_151:
  int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 27);
  if (v50 >= 0x80)
  {
    int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v51 = 1;
  }
  v3 += v51 + 2;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_140:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_141;
    }
LABEL_159:
    unint64_t v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
    if (v54 >= 0x80)
    {
      int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v55 = 1;
    }
    v3 += v55 + 2;
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_163;
  }
LABEL_155:
  int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
  if (v52 >= 0x80)
  {
    int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
    unsigned int v2 = *((_DWORD *)this + 113);
  }
  else
  {
    int v53 = 1;
  }
  v3 += v53 + 2;
  if ((v2 & 0x10000000) != 0) {
    goto LABEL_159;
  }
LABEL_141:
  if ((v2 & 0x20000000) != 0)
  {
LABEL_163:
    int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    if (v56 >= 0x80)
    {
      int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
      unsigned int v2 = *((_DWORD *)this + 113);
    }
    else
    {
      int v57 = 1;
    }
    v3 += v57 + 2;
  }
LABEL_167:
  if ((v2 & 0x40000000) != 0) {
    v3 += 6;
  }
  if ((v2 & 0x80000000) != 0)
  {
    int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
    if (v58 >= 0x80) {
      int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
    }
    else {
      int v59 = 1;
    }
    v3 += v59 + 2;
  }
LABEL_174:
  unsigned int v60 = *((_DWORD *)this + 114);
  if (!(_BYTE)v60) {
    goto LABEL_208;
  }
  int v61 = v3 + 6;
  if ((v60 & 1) == 0) {
    int v61 = v3;
  }
  if ((v60 & 2) != 0) {
    int v3 = v61 + 6;
  }
  else {
    int v3 = v61;
  }
  if ((v60 & 4) == 0)
  {
    if ((v60 & 8) == 0) {
      goto LABEL_182;
    }
LABEL_188:
    int v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 36);
    if (v64 >= 0x80)
    {
      int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v65 = 1;
    }
    v3 += v65 + 2;
    if ((v60 & 0x10) == 0) {
      goto LABEL_196;
    }
    goto LABEL_192;
  }
  int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
  if (v62 >= 0x80)
  {
    int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v63 = 1;
  }
  v3 += v63 + 2;
  if ((v60 & 8) != 0) {
    goto LABEL_188;
  }
LABEL_182:
  if ((v60 & 0x10) != 0)
  {
LABEL_192:
    int v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 37);
    if (v66 >= 0x80)
    {
      int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v67 = 1;
    }
    v3 += v67 + 2;
  }
LABEL_196:
  if ((v60 & 0x20) != 0) {
    v3 += 3;
  }
  if ((v60 & 0x40) != 0)
  {
    int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
    if (v68 >= 0x80)
    {
      int v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v69 = 1;
    }
    v3 += v69 + 2;
  }
  if ((v60 & 0x80) != 0)
  {
    unint64_t v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 39);
    if (v70 >= 0x80)
    {
      int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v71 = 1;
    }
    v3 += v71 + 2;
  }
LABEL_208:
  if ((v60 & 0xFF00) == 0) {
    goto LABEL_244;
  }
  if ((v60 & 0x100) != 0)
  {
    int v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
    if (v72 >= 0x80)
    {
      int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v73 = 1;
    }
    v3 += v73 + 2;
  }
  if ((v60 & 0x200) != 0) {
    v3 += 3;
  }
  if ((v60 & 0x400) == 0)
  {
    if ((v60 & 0x800) == 0) {
      goto LABEL_218;
    }
LABEL_224:
    int v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v76 >= 0x80)
    {
      int v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v77 = 1;
    }
    v3 += v77 + 2;
    if ((v60 & 0x1000) == 0) {
      goto LABEL_232;
    }
    goto LABEL_228;
  }
  int v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 41);
  if (v74 >= 0x80)
  {
    int v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v75 = 1;
  }
  v3 += v75 + 2;
  if ((v60 & 0x800) != 0) {
    goto LABEL_224;
  }
LABEL_218:
  if ((v60 & 0x1000) != 0)
  {
LABEL_228:
    int v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
    if (v78 >= 0x80)
    {
      int v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v79 = 1;
    }
    v3 += v79 + 2;
  }
LABEL_232:
  if ((v60 & 0x2000) != 0) {
    v3 += 6;
  }
  if ((v60 & 0x4000) != 0)
  {
    int v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 45);
    if (v80 >= 0x80)
    {
      int v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v81 = 1;
    }
    v3 += v81 + 2;
  }
  if ((v60 & 0x8000) != 0)
  {
    int v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 46);
    if (v82 >= 0x80)
    {
      int v83 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v83 = 1;
    }
    v3 += v83 + 2;
  }
LABEL_244:
  if ((v60 & 0xFF0000) == 0) {
    goto LABEL_286;
  }
  if ((v60 & 0x10000) != 0)
  {
    int v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 47);
    if (v84 >= 0x80)
    {
      int v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v85 = 1;
    }
    v3 += v85 + 2;
    if ((v60 & 0x20000) == 0)
    {
LABEL_247:
      if ((v60 & 0x40000) == 0) {
        goto LABEL_248;
      }
      goto LABEL_262;
    }
  }
  else if ((v60 & 0x20000) == 0)
  {
    goto LABEL_247;
  }
  int v86 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 48);
  if (v86 >= 0x80)
  {
    int v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v86);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v87 = 1;
  }
  v3 += v87 + 2;
  if ((v60 & 0x40000) == 0)
  {
LABEL_248:
    if ((v60 & 0x80000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_266;
  }
LABEL_262:
  int v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 49);
  if (v88 >= 0x80)
  {
    int v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v89 = 1;
  }
  v3 += v89 + 2;
  if ((v60 & 0x80000) == 0)
  {
LABEL_249:
    if ((v60 & 0x100000) == 0) {
      goto LABEL_250;
    }
    goto LABEL_270;
  }
LABEL_266:
  char v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if (v90 >= 0x80)
  {
    int v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v91 = 1;
  }
  v3 += v91 + 2;
  if ((v60 & 0x100000) == 0)
  {
LABEL_250:
    if ((v60 & 0x200000) == 0) {
      goto LABEL_251;
    }
    goto LABEL_274;
  }
LABEL_270:
  int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if (v92 >= 0x80)
  {
    int v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v93 = 1;
  }
  v3 += v93 + 2;
  if ((v60 & 0x200000) == 0)
  {
LABEL_251:
    if ((v60 & 0x400000) == 0) {
      goto LABEL_252;
    }
    goto LABEL_278;
  }
LABEL_274:
  int v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 52);
  if (v94 >= 0x80)
  {
    int v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v95 = 1;
  }
  v3 += v95 + 2;
  if ((v60 & 0x400000) == 0)
  {
LABEL_252:
    if ((v60 & 0x800000) == 0) {
      goto LABEL_286;
    }
    goto LABEL_282;
  }
LABEL_278:
  int v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 53);
  if (v96 >= 0x80)
  {
    int v97 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v97 = 1;
  }
  v3 += v97 + 2;
  if ((v60 & 0x800000) != 0)
  {
LABEL_282:
    int v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 54);
    if (v98 >= 0x80)
    {
      int v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v99 = 1;
    }
    v3 += v99 + 2;
  }
LABEL_286:
  if (!HIBYTE(v60)) {
    goto LABEL_299;
  }
  if ((v60 & 0x1000000) != 0)
  {
    char v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 55);
    if (v100 >= 0x80)
    {
      int v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v101 = 1;
    }
    v3 += v101 + 2;
  }
  if ((v60 & 0x2000000) != 0) {
    v3 += 3;
  }
  if ((v60 & 0x4000000) != 0)
  {
    int v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 57);
    if (v105 >= 0x80)
    {
      int v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      unsigned int v60 = *((_DWORD *)this + 114);
    }
    else
    {
      int v106 = 1;
    }
    v3 += v106 + 2;
    if ((v60 & 0x8000000) == 0)
    {
LABEL_296:
      if ((v60 & 0x10000000) == 0) {
        goto LABEL_297;
      }
      goto LABEL_370;
    }
  }
  else if ((v60 & 0x8000000) == 0)
  {
    goto LABEL_296;
  }
  v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
  if (v127 >= 0x80)
  {
    int v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v128 = 1;
  }
  v3 += v128 + 2;
  if ((v60 & 0x10000000) == 0)
  {
LABEL_297:
    if ((v60 & 0x20000000) == 0) {
      goto LABEL_298;
    }
    goto LABEL_374;
  }
LABEL_370:
  v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 59);
  if (v129 >= 0x80)
  {
    int v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v130 = 1;
  }
  v3 += v130 + 2;
  if ((v60 & 0x20000000) == 0)
  {
LABEL_298:
    if ((v60 & 0x80000000) == 0) {
      goto LABEL_299;
    }
    goto LABEL_378;
  }
LABEL_374:
  v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 64);
  if (v131 >= 0x80)
  {
    int v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    unsigned int v60 = *((_DWORD *)this + 114);
  }
  else
  {
    int v132 = 1;
  }
  v3 += v132 + 2;
  if ((v60 & 0x80000000) != 0) {
LABEL_378:
  }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 33))
        + 2;
LABEL_299:
  unsigned int v102 = *((_DWORD *)this + 115);
  if (!(_BYTE)v102) {
    goto LABEL_343;
  }
  if (v102)
  {
    unsigned int v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 65);
    if (v103 >= 0x80)
    {
      int v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v103);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v104 = 1;
    }
    v3 += v104 + 2;
    if ((v102 & 2) == 0)
    {
LABEL_302:
      if ((v102 & 4) == 0) {
        goto LABEL_303;
      }
      goto LABEL_319;
    }
  }
  else if ((v102 & 2) == 0)
  {
    goto LABEL_302;
  }
  uint64_t v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 68);
  if (v107 >= 0x80)
  {
    int v108 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v108 = 1;
  }
  v3 += v108 + 2;
  if ((v102 & 4) == 0)
  {
LABEL_303:
    if ((v102 & 8) == 0) {
      goto LABEL_304;
    }
    goto LABEL_323;
  }
LABEL_319:
  uint64_t v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 69);
  if (v109 >= 0x80)
  {
    int v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v110 = 1;
  }
  v3 += v110 + 2;
  if ((v102 & 8) == 0)
  {
LABEL_304:
    if ((v102 & 0x10) == 0) {
      goto LABEL_305;
    }
    goto LABEL_327;
  }
LABEL_323:
  int v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 70);
  if (v111 >= 0x80)
  {
    int v112 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v112 = 1;
  }
  v3 += v112 + 2;
  if ((v102 & 0x10) == 0)
  {
LABEL_305:
    if ((v102 & 0x20) == 0) {
      goto LABEL_306;
    }
    goto LABEL_331;
  }
LABEL_327:
  unint64_t v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 71);
  if (v113 >= 0x80)
  {
    int v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v114 = 1;
  }
  v3 += v114 + 2;
  if ((v102 & 0x20) == 0)
  {
LABEL_306:
    if ((v102 & 0x40) == 0) {
      goto LABEL_307;
    }
    goto LABEL_335;
  }
LABEL_331:
  int v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 72);
  if (v115 >= 0x80)
  {
    int v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v116 = 1;
  }
  v3 += v116 + 2;
  if ((v102 & 0x40) == 0)
  {
LABEL_307:
    if ((v102 & 0x80) == 0) {
      goto LABEL_343;
    }
    goto LABEL_339;
  }
LABEL_335:
  int v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 73);
  if (v117 >= 0x80)
  {
    int v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v118 = 1;
  }
  v3 += v118 + 2;
  if ((v102 & 0x80) != 0)
  {
LABEL_339:
    int v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
    if (v119 >= 0x80)
    {
      int v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v119);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v120 = 1;
    }
    v3 += v120 + 2;
  }
LABEL_343:
  if ((v102 & 0xFF00) == 0) {
    goto LABEL_406;
  }
  if ((v102 & 0x100) != 0)
  {
    unsigned int v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v121 >= 0x80)
    {
      int v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v122 = 1;
    }
    v3 += v122 + 2;
    if ((v102 & 0x200) == 0)
    {
LABEL_346:
      if ((v102 & 0x400) == 0) {
        goto LABEL_347;
      }
      goto LABEL_361;
    }
  }
  else if ((v102 & 0x200) == 0)
  {
    goto LABEL_346;
  }
  unint64_t v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 76);
  if (v123 >= 0x80)
  {
    int v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v124 = 1;
  }
  v3 += v124 + 2;
  if ((v102 & 0x400) == 0)
  {
LABEL_347:
    if ((v102 & 0x800) == 0) {
      goto LABEL_348;
    }
    goto LABEL_382;
  }
LABEL_361:
  v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 77);
  if ((v125 & 0x80000000) != 0)
  {
    int v126 = 10;
  }
  else if (v125 >= 0x80)
  {
    int v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v126 = 1;
  }
  v3 += v126 + 2;
  if ((v102 & 0x800) == 0)
  {
LABEL_348:
    if ((v102 & 0x1000) == 0) {
      goto LABEL_349;
    }
    goto LABEL_386;
  }
LABEL_382:
  v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 78);
  if (v133 >= 0x80)
  {
    int v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v134 = 1;
  }
  v3 += v134 + 2;
  if ((v102 & 0x1000) == 0)
  {
LABEL_349:
    if ((v102 & 0x2000) == 0) {
      goto LABEL_350;
    }
    goto LABEL_392;
  }
LABEL_386:
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 79);
  if ((v135 & 0x80000000) != 0)
  {
    int v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    int v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v136 = 1;
  }
  v3 += v136 + 2;
  if ((v102 & 0x2000) == 0)
  {
LABEL_350:
    if ((v102 & 0x4000) == 0) {
      goto LABEL_351;
    }
    goto LABEL_396;
  }
LABEL_392:
  unsigned int v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
  if (v137 >= 0x80)
  {
    int v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v138 = 1;
  }
  v3 += v138 + 2;
  if ((v102 & 0x4000) == 0)
  {
LABEL_351:
    if ((v102 & 0x8000) == 0) {
      goto LABEL_406;
    }
    goto LABEL_402;
  }
LABEL_396:
  v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
  if ((v139 & 0x80000000) != 0)
  {
    int v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    int v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v140 = 1;
  }
  v3 += v140 + 2;
  if ((v102 & 0x8000) != 0)
  {
LABEL_402:
    v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 82);
    if (v141 >= 0x80)
    {
      int v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v142 = 1;
    }
    v3 += v142 + 2;
  }
LABEL_406:
  if ((v102 & 0xFF0000) == 0) {
    goto LABEL_448;
  }
  if ((v102 & 0x10000) != 0)
  {
    v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 83);
    if (v143 >= 0x80)
    {
      int v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v144 = 1;
    }
    v3 += v144 + 2;
    if ((v102 & 0x20000) == 0)
    {
LABEL_409:
      if ((v102 & 0x40000) == 0) {
        goto LABEL_410;
      }
      goto LABEL_424;
    }
  }
  else if ((v102 & 0x20000) == 0)
  {
    goto LABEL_409;
  }
  int v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 84);
  if (v145 >= 0x80)
  {
    int v146 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v146 = 1;
  }
  v3 += v146 + 2;
  if ((v102 & 0x40000) == 0)
  {
LABEL_410:
    if ((v102 & 0x80000) == 0) {
      goto LABEL_411;
    }
    goto LABEL_428;
  }
LABEL_424:
  int v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 85);
  if (v147 >= 0x80)
  {
    int v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v148 = 1;
  }
  v3 += v148 + 2;
  if ((v102 & 0x80000) == 0)
  {
LABEL_411:
    if ((v102 & 0x100000) == 0) {
      goto LABEL_412;
    }
    goto LABEL_432;
  }
LABEL_428:
  unsigned int v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 86);
  if (v149 >= 0x80)
  {
    int v150 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v150 = 1;
  }
  v3 += v150 + 2;
  if ((v102 & 0x100000) == 0)
  {
LABEL_412:
    if ((v102 & 0x200000) == 0) {
      goto LABEL_413;
    }
    goto LABEL_436;
  }
LABEL_432:
  int v151 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 87);
  if (v151 >= 0x80)
  {
    int v152 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v151);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v152 = 1;
  }
  v3 += v152 + 2;
  if ((v102 & 0x200000) == 0)
  {
LABEL_413:
    if ((v102 & 0x400000) == 0) {
      goto LABEL_414;
    }
    goto LABEL_440;
  }
LABEL_436:
  int v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 88);
  if (v153 >= 0x80)
  {
    int v154 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v154 = 1;
  }
  v3 += v154 + 2;
  if ((v102 & 0x400000) == 0)
  {
LABEL_414:
    if ((v102 & 0x800000) == 0) {
      goto LABEL_448;
    }
    goto LABEL_444;
  }
LABEL_440:
  int v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 89);
  if (v155 >= 0x80)
  {
    int v156 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v156 = 1;
  }
  v3 += v156 + 2;
  if ((v102 & 0x800000) != 0)
  {
LABEL_444:
    int v157 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 90);
    if (v157 >= 0x80)
    {
      int v158 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v157);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v158 = 1;
    }
    v3 += v158 + 2;
  }
LABEL_448:
  if (!HIBYTE(v102)) {
    goto LABEL_489;
  }
  if ((v102 & 0x1000000) != 0)
  {
    uint64_t v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 91);
    if (v159 >= 0x80)
    {
      int v160 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v159);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v160 = 1;
    }
    v3 += v160 + 2;
    if ((v102 & 0x2000000) == 0)
    {
LABEL_451:
      if ((v102 & 0x4000000) == 0) {
        goto LABEL_452;
      }
LABEL_462:
      int v163 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 93);
      if (v163 >= 0x80)
      {
        int v164 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v163);
        unsigned int v102 = *((_DWORD *)this + 115);
      }
      else
      {
        int v164 = 1;
      }
      v3 += v164 + 2;
      if ((v102 & 0x8000000) == 0) {
        goto LABEL_470;
      }
      goto LABEL_466;
    }
  }
  else if ((v102 & 0x2000000) == 0)
  {
    goto LABEL_451;
  }
  int v161 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 92);
  if (v161 >= 0x80)
  {
    int v162 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v161);
    unsigned int v102 = *((_DWORD *)this + 115);
  }
  else
  {
    int v162 = 1;
  }
  v3 += v162 + 2;
  if ((v102 & 0x4000000) != 0) {
    goto LABEL_462;
  }
LABEL_452:
  if ((v102 & 0x8000000) != 0)
  {
LABEL_466:
    unsigned int v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 94);
    if (v165 >= 0x80)
    {
      int v166 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v166 = 1;
    }
    v3 += v166 + 2;
  }
LABEL_470:
  int v167 = v3 + 3;
  if ((v102 & 0x10000000) == 0) {
    int v167 = v3;
  }
  if ((v102 & 0x20000000) != 0) {
    int v3 = v167 + 3;
  }
  else {
    int v3 = v167;
  }
  if ((v102 & 0x40000000) != 0)
  {
    v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 96);
    if ((v168 & 0x80000000) != 0)
    {
      int v169 = 10;
    }
    else if (v168 >= 0x80)
    {
      int v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
      unsigned int v102 = *((_DWORD *)this + 115);
    }
    else
    {
      int v169 = 1;
    }
    v3 += v169 + 2;
  }
  if ((v102 & 0x80000000) != 0)
  {
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 97);
    if ((v170 & 0x80000000) != 0)
    {
      int v171 = 10;
    }
    else if (v170 >= 0x80)
    {
      int v171 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v170);
    }
    else
    {
      int v171 = 1;
    }
    v3 += v171 + 2;
  }
LABEL_489:
  int v172 = *((_DWORD *)this + 116);
  if (!(_BYTE)v172) {
    goto LABEL_526;
  }
  if (v172)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 49))
        + 2;
    int v172 = *((_DWORD *)this + 116);
  }
  if ((v172 & 2) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 50))
        + 2;
    int v172 = *((_DWORD *)this + 116);
  }
  if ((v172 & 4) != 0) {
    v3 += 10;
  }
  if ((v172 & 8) != 0)
  {
    int v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 104);
    if (v173 >= 0x80)
    {
      int v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
      int v172 = *((_DWORD *)this + 116);
    }
    else
    {
      int v174 = 1;
    }
    v3 += v174 + 2;
    if ((v172 & 0x10) == 0)
    {
LABEL_498:
      if ((v172 & 0x20) == 0) {
        goto LABEL_499;
      }
      goto LABEL_510;
    }
  }
  else if ((v172 & 0x10) == 0)
  {
    goto LABEL_498;
  }
  unsigned int v175 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 105);
  if (v175 >= 0x80)
  {
    int v176 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v175);
    int v172 = *((_DWORD *)this + 116);
  }
  else
  {
    int v176 = 1;
  }
  v3 += v176 + 2;
  if ((v172 & 0x20) == 0)
  {
LABEL_499:
    if ((v172 & 0x40) == 0) {
      goto LABEL_500;
    }
    goto LABEL_514;
  }
LABEL_510:
  int v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 106);
  if (v177 >= 0x80)
  {
    int v178 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177) + 2;
    int v172 = *((_DWORD *)this + 116);
  }
  else
  {
    int v178 = 3;
  }
  v3 += v178;
  if ((v172 & 0x40) == 0)
  {
LABEL_500:
    if ((v172 & 0x80) == 0) {
      goto LABEL_526;
    }
    goto LABEL_520;
  }
LABEL_514:
  int v179 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 107);
  if ((v179 & 0x80000000) != 0)
  {
    int v180 = 12;
  }
  else if (v179 >= 0x80)
  {
    int v180 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v179) + 2;
    int v172 = *((_DWORD *)this + 116);
  }
  else
  {
    int v180 = 3;
  }
  v3 += v180;
  if ((v172 & 0x80) != 0)
  {
LABEL_520:
    unsigned int v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v181 & 0x80000000) != 0)
    {
      int v182 = 12;
    }
    else if (v181 >= 0x80)
    {
      int v182 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181) + 2;
      int v172 = *((_DWORD *)this + 116);
    }
    else
    {
      int v182 = 3;
    }
    v3 += v182;
  }
LABEL_526:
  if ((v172 & 0xFF00) == 0) {
    goto LABEL_545;
  }
  if ((v172 & 0x100) != 0)
  {
    unsigned int v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
    if ((v183 & 0x80000000) != 0)
    {
      int v184 = 12;
    }
    else if (v183 >= 0x80)
    {
      int v184 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183) + 2;
      int v172 = *((_DWORD *)this + 116);
    }
    else
    {
      int v184 = 3;
    }
    v3 += v184;
    if ((v172 & 0x200) == 0)
    {
LABEL_529:
      if ((v172 & 0x400) == 0) {
        goto LABEL_545;
      }
      goto LABEL_541;
    }
  }
  else if ((v172 & 0x200) == 0)
  {
    goto LABEL_529;
  }
  int v185 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 110);
  if (v185 >= 0x80)
  {
    int v186 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v185) + 2;
    int v172 = *((_DWORD *)this + 116);
  }
  else
  {
    int v186 = 3;
  }
  v3 += v186;
  if ((v172 & 0x400) != 0)
  {
LABEL_541:
    int v187 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 111);
    if (v187 >= 0x80) {
      int v188 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v187) + 2;
    }
    else {
      int v188 = 3;
    }
    v3 += v188;
  }
LABEL_545:
  int v189 = *((_DWORD *)this + 62);
  if (v189 < 1)
  {
    int v191 = 0;
  }
  else
  {
    uint64_t v190 = 0;
    int v191 = 0;
    do
    {
      unsigned int v192 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 30)
                                                                                              + 4 * v190);
      if (v192 >= 0x80)
      {
        int v193 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v192);
        int v189 = *((_DWORD *)this + 62);
      }
      else
      {
        int v193 = 1;
      }
      v191 += v193;
      ++v190;
    }
    while (v190 < v189);
  }
  uint64_t result = (v191 + v3 + 2 * v189);
  *((_DWORD *)this + 112) = result;
  return result;
}

void awd::metrics::MotionFitnessSession::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionFitnessSession::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessSession::CopyFrom(awd::metrics::MotionFitnessSession *this, const awd::metrics::MotionFitnessSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessSession *))(*(void *)this + 32))(this);
    awd::metrics::MotionFitnessSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessSession::IsInitialized(awd::metrics::MotionFitnessSession *this)
{
  return 1;
}

double awd::metrics::MotionFitnessSession::Swap(awd::metrics::MotionFitnessSession *this, awd::metrics::MotionFitnessSession *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 52);
    *((unsigned char *)this + 52) = *((unsigned char *)a2 + 52);
    *((unsigned char *)a2 + 52) = v2;
    uint64_t v3 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    LODWORD(v3) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 53);
    *((unsigned char *)this + 53) = *((unsigned char *)a2 + 53);
    *((unsigned char *)a2 + 53) = v3;
    LODWORD(v3) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    LODWORD(v3) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v3;
    LODWORD(v3) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v3;
    LODWORD(v3) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v3;
    LODWORD(v3) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 54);
    *((unsigned char *)this + 54) = *((unsigned char *)a2 + 54);
    *((unsigned char *)a2 + 54) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 55);
    *((unsigned char *)this + 55) = *((unsigned char *)a2 + 55);
    *((unsigned char *)a2 + 55) = v3;
    LODWORD(v3) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v3;
    LODWORD(v3) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v3;
    LODWORD(v3) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v3;
    LODWORD(v3) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v3;
    LODWORD(v3) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v3;
    LODWORD(v3) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v3;
    LODWORD(v3) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v3;
    LODWORD(v3) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v3;
    LODWORD(v3) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v3;
    LODWORD(v3) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v3;
    LODWORD(v3) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v3;
    LODWORD(v3) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v3;
    int v4 = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v4;
    LODWORD(v3) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v3;
    int v5 = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v5;
    int v6 = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v6;
    LODWORD(v3) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v3;
    LODWORD(v3) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v3;
    LODWORD(v3) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 224);
    *((unsigned char *)this + 224) = *((unsigned char *)a2 + 224);
    *((unsigned char *)a2 + 224) = v3;
    LODWORD(v3) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v3;
    LODWORD(v3) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v3;
    LODWORD(v3) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 225);
    *((unsigned char *)this + 225) = *((unsigned char *)a2 + 225);
    *((unsigned char *)a2 + 225) = v3;
    LODWORD(v3) = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v3;
    LODWORD(v3) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v3;
    LODWORD(v3) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v3;
    int v7 = *((_DWORD *)this + 44);
    *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
    *((_DWORD *)a2 + 44) = v7;
    LODWORD(v3) = *((_DWORD *)this + 45);
    *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
    *((_DWORD *)a2 + 45) = v3;
    LODWORD(v3) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v3;
    LODWORD(v3) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v3;
    LODWORD(v3) = *((_DWORD *)this + 48);
    *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
    *((_DWORD *)a2 + 48) = v3;
    LODWORD(v3) = *((_DWORD *)this + 49);
    *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
    *((_DWORD *)a2 + 49) = v3;
    LODWORD(v3) = *((_DWORD *)this + 50);
    *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v3;
    LODWORD(v3) = *((_DWORD *)this + 51);
    *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v3;
    LODWORD(v3) = *((_DWORD *)this + 52);
    *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v3;
    LODWORD(v3) = *((_DWORD *)this + 53);
    *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v3;
    LODWORD(v3) = *((_DWORD *)this + 54);
    *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
    *((_DWORD *)a2 + 54) = v3;
    LODWORD(v3) = *((_DWORD *)this + 55);
    *((_DWORD *)this + 55) = *((_DWORD *)a2 + 55);
    *((_DWORD *)a2 + 55) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 226);
    *((unsigned char *)this + 226) = *((unsigned char *)a2 + 226);
    *((unsigned char *)a2 + 226) = v3;
    LODWORD(v3) = *((_DWORD *)this + 57);
    *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
    *((_DWORD *)a2 + 57) = v3;
    LODWORD(v3) = *((_DWORD *)this + 58);
    *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v3;
    LODWORD(v3) = *((_DWORD *)this + 59);
    *((_DWORD *)this + 59) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v3;
    LODWORD(v3) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v3;
    uint64_t v8 = *((void *)this + 30);
    *((void *)this + 30) = *((void *)a2 + 30);
    uint64_t v9 = *((void *)a2 + 31);
    *((void *)a2 + 30) = v8;
    uint64_t v10 = *((void *)this + 31);
    *((void *)this + 31) = v9;
    *((void *)a2 + 31) = v10;
    uint64_t v11 = *((void *)this + 33);
    *((void *)this + 33) = *((void *)a2 + 33);
    *((void *)a2 + 33) = v11;
    LODWORD(v11) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v11;
    LODWORD(v11) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v11;
    LODWORD(v11) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v11;
    LODWORD(v11) = *((_DWORD *)this + 70);
    *((_DWORD *)this + 70) = *((_DWORD *)a2 + 70);
    *((_DWORD *)a2 + 70) = v11;
    LODWORD(v11) = *((_DWORD *)this + 71);
    *((_DWORD *)this + 71) = *((_DWORD *)a2 + 71);
    *((_DWORD *)a2 + 71) = v11;
    LODWORD(v11) = *((_DWORD *)this + 72);
    *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v11;
    LODWORD(v11) = *((_DWORD *)this + 73);
    *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v11;
    LODWORD(v11) = *((_DWORD *)this + 74);
    *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v11;
    LODWORD(v11) = *((_DWORD *)this + 75);
    *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v11;
    LODWORD(v11) = *((_DWORD *)this + 76);
    *((_DWORD *)this + 76) = *((_DWORD *)a2 + 76);
    *((_DWORD *)a2 + 76) = v11;
    LODWORD(v11) = *((_DWORD *)this + 77);
    *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
    *((_DWORD *)a2 + 77) = v11;
    LODWORD(v11) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v11;
    LODWORD(v11) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v11;
    LODWORD(v11) = *((_DWORD *)this + 80);
    *((_DWORD *)this + 80) = *((_DWORD *)a2 + 80);
    *((_DWORD *)a2 + 80) = v11;
    LODWORD(v11) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v11;
    LODWORD(v11) = *((_DWORD *)this + 82);
    *((_DWORD *)this + 82) = *((_DWORD *)a2 + 82);
    *((_DWORD *)a2 + 82) = v11;
    LODWORD(v11) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v11;
    LODWORD(v11) = *((_DWORD *)this + 84);
    *((_DWORD *)this + 84) = *((_DWORD *)a2 + 84);
    *((_DWORD *)a2 + 84) = v11;
    LODWORD(v11) = *((_DWORD *)this + 85);
    *((_DWORD *)this + 85) = *((_DWORD *)a2 + 85);
    *((_DWORD *)a2 + 85) = v11;
    LODWORD(v11) = *((_DWORD *)this + 86);
    *((_DWORD *)this + 86) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v11;
    LODWORD(v11) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v11;
    LODWORD(v11) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v11;
    LODWORD(v11) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v11;
    LODWORD(v11) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v11;
    LODWORD(v11) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v11;
    LODWORD(v11) = *((_DWORD *)this + 92);
    *((_DWORD *)this + 92) = *((_DWORD *)a2 + 92);
    *((_DWORD *)a2 + 92) = v11;
    LODWORD(v11) = *((_DWORD *)this + 93);
    *((_DWORD *)this + 93) = *((_DWORD *)a2 + 93);
    *((_DWORD *)a2 + 93) = v11;
    LODWORD(v11) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 227);
    *((unsigned char *)this + 227) = *((unsigned char *)a2 + 227);
    *((unsigned char *)a2 + 227) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 380);
    *((unsigned char *)this + 380) = *((unsigned char *)a2 + 380);
    *((unsigned char *)a2 + 380) = v11;
    LODWORD(v11) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v11;
    LODWORD(v11) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v11;
    uint64_t v12 = *((void *)this + 49);
    *((void *)this + 49) = *((void *)a2 + 49);
    *((void *)a2 + 49) = v12;
    uint64_t v13 = *((void *)this + 50);
    *((void *)this + 50) = *((void *)a2 + 50);
    *((void *)a2 + 50) = v13;
    double result = *((double *)this + 51);
    *((void *)this + 51) = *((void *)a2 + 51);
    *((double *)a2 + 51) = result;
    LODWORD(v13) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v13;
    LODWORD(v13) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v13;
    LODWORD(v13) = *((_DWORD *)this + 106);
    *((_DWORD *)this + 106) = *((_DWORD *)a2 + 106);
    *((_DWORD *)a2 + 106) = v13;
    LODWORD(v13) = *((_DWORD *)this + 107);
    *((_DWORD *)this + 107) = *((_DWORD *)a2 + 107);
    *((_DWORD *)a2 + 107) = v13;
    LODWORD(v13) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v13;
    LODWORD(v13) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v13;
    LODWORD(v13) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v13;
    LODWORD(v13) = *((_DWORD *)this + 111);
    *((_DWORD *)this + 111) = *((_DWORD *)a2 + 111);
    *((_DWORD *)a2 + 111) = v13;
    LODWORD(v13) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v13;
    LODWORD(v13) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v13;
    LODWORD(v13) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v13;
    LODWORD(v13) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v13;
    LODWORD(v13) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v13;
  }
  return result;
}

void *awd::metrics::MotionFitnessSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessSession");
}

double awd::metrics::MotionFitnessAllDay::SharedCtor(awd::metrics::MotionFitnessAllDay *this)
{
  *((_DWORD *)this + 216) = 0;
  *((unsigned char *)this + 444) = 0;
  double result = 0.0;
  *((void *)this + 23) = 0;
  *((void *)this + 36) = 0;
  *((void *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 40) = MEMORY[0x263F8C740];
  *((void *)this + 41) = v2;
  *((void *)this + 42) = v2;
  *((void *)this + 43) = v2;
  *((void *)this + 44) = v2;
  *((void *)this + 98) = 0;
  *((_DWORD *)this + 221) = 0;
  *(_OWORD *)((char *)this + 868) = 0u;
  *(_OWORD *)((char *)this + 376) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *((_DWORD *)this + 110) = 0;
  *(_OWORD *)((char *)this + 445) = 0u;
  *(_OWORD *)((char *)this + 461) = 0u;
  *(_OWORD *)((char *)this + 477) = 0u;
  *((_DWORD *)this + 123) = 0;
  *((_OWORD *)this + 33) = 0u;
  *((_OWORD *)this + 34) = 0u;
  *((_OWORD *)this + 35) = 0u;
  *((_OWORD *)this + 36) = 0u;
  *((_OWORD *)this + 37) = 0u;
  *((_OWORD *)this + 38) = 0u;
  *((_OWORD *)this + 39) = 0u;
  *((void *)this + 107) = 0;
  *(_OWORD *)((char *)this + 824) = 0u;
  *(_OWORD *)((char *)this + 840) = 0u;
  *(_OWORD *)((char *)this + 808) = 0u;
  return result;
}

awd::metrics::MotionFitnessAllDay *awd::metrics::MotionFitnessAllDay::MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  *(void *)this = &unk_26D7BAE28;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *(_OWORD *)((char *)this + 792) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 45) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 43) = 0u;
  *((_OWORD *)this + 44) = 0u;
  *((_OWORD *)this + 41) = 0u;
  *((_OWORD *)this + 42) = 0u;
  *((_OWORD *)this + 40) = 0u;
  awd::metrics::MotionFitnessAllDay::SharedCtor(this);
  awd::metrics::MotionFitnessAllDay::MergeFrom(this, a2);
  return this;
}

void sub_22492CD1C(_Unwind_Exception *a1)
{
  if (*v9) {
    MEMORY[0x22A61A810](*v9, 0x1000C8000313F17);
  }
  uint64_t v11 = *((void *)v1 + 96);
  if (v11) {
    MEMORY[0x22A61A810](v11, 0x1000C8000313F17);
  }
  uint64_t v12 = *((void *)v1 + 94);
  if (v12) {
    MEMORY[0x22A61A810](v12, 0x1000C8000313F17);
  }
  uint64_t v13 = *((void *)v1 + 92);
  if (v13) {
    MEMORY[0x22A61A810](v13, 0x1000C8000313F17);
  }
  uint64_t v14 = *((void *)v1 + 90);
  if (v14) {
    MEMORY[0x22A61A810](v14, 0x1000C8000313F17);
  }
  uint64_t v15 = *((void *)v1 + 88);
  if (v15) {
    MEMORY[0x22A61A810](v15, 0x1000C8000313F17);
  }
  uint64_t v16 = *((void *)v1 + 86);
  if (v16) {
    MEMORY[0x22A61A810](v16, 0x1000C8052888210);
  }
  uint64_t v17 = *((void *)v1 + 84);
  if (v17) {
    MEMORY[0x22A61A810](v17, 0x1000C8052888210);
  }
  uint64_t v18 = *((void *)v1 + 82);
  if (v18) {
    MEMORY[0x22A61A810](v18, 0x1000C8052888210);
  }
  if (*v8) {
    MEMORY[0x22A61A810](*v8, 0x1000C8052888210);
  }
  uint64_t v19 = *((void *)v1 + 64);
  if (v19) {
    MEMORY[0x22A61A810](v19, 0x1000C8052888210);
  }
  if (*v7) {
    MEMORY[0x22A61A810](*v7, 0x1000C8052888210);
  }
  if (*v6) {
    MEMORY[0x22A61A810](*v6, 0x1000C8052888210);
  }
  if (*v5) {
    MEMORY[0x22A61A810](*v5, 0x1000C8052888210);
  }
  if (*v4) {
    MEMORY[0x22A61A810](*v4, 0x1000C8052888210);
  }
  uint64_t v20 = *((void *)v1 + 28);
  if (v20) {
    MEMORY[0x22A61A810](v20, 0x1000C8052888210);
  }
  uint64_t v21 = *((void *)v1 + 26);
  if (v21) {
    MEMORY[0x22A61A810](v21, 0x1000C8052888210);
  }
  if (*v3) {
    MEMORY[0x22A61A810](*v3, 0x1000C8052888210);
  }
  uint64_t v22 = *((void *)v1 + 21);
  if (v22) {
    MEMORY[0x22A61A810](v22, 0x1000C8052888210);
  }
  uint64_t v23 = *((void *)v1 + 19);
  if (v23) {
    MEMORY[0x22A61A810](v23, 0x1000C8052888210);
  }
  uint64_t v24 = *((void *)v1 + 17);
  if (v24) {
    MEMORY[0x22A61A810](v24, 0x1000C8052888210);
  }
  uint64_t v25 = *((void *)v1 + 15);
  if (v25) {
    MEMORY[0x22A61A810](v25, 0x1000C8052888210);
  }
  uint64_t v26 = *((void *)v1 + 13);
  if (v26) {
    MEMORY[0x22A61A810](v26, 0x1000C8052888210);
  }
  if (*v2) {
    MEMORY[0x22A61A810](*v2, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAllDay::MergeFrom(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v157);
  }
  int v4 = *((_DWORD *)a2 + 24);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 88, *((_DWORD *)this + 24) + v4);
    memcpy((void *)(*((void *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  int v5 = *((_DWORD *)a2 + 28);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 104, *((_DWORD *)this + 28) + v5);
    memcpy((void *)(*((void *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  int v6 = *((_DWORD *)a2 + 32);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 120, *((_DWORD *)this + 32) + v6);
    memcpy((void *)(*((void *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  int v7 = *((_DWORD *)a2 + 36);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 136, *((_DWORD *)this + 36) + v7);
    memcpy((void *)(*((void *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  int v8 = *((_DWORD *)a2 + 40);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 152, *((_DWORD *)this + 40) + v8);
    memcpy((void *)(*((void *)this + 19) + 4 * *((int *)this + 40)), *((const void **)a2 + 19), 4 * *((int *)a2 + 40));
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
  }
  int v9 = *((_DWORD *)a2 + 44);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 168, *((_DWORD *)this + 44) + v9);
    memcpy((void *)(*((void *)this + 21) + 4 * *((int *)this + 44)), *((const void **)a2 + 21), 4 * *((int *)a2 + 44));
    *((_DWORD *)this + 44) += *((_DWORD *)a2 + 44);
  }
  int v10 = *((_DWORD *)a2 + 50);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 192, *((_DWORD *)this + 50) + v10);
    memcpy((void *)(*((void *)this + 24) + 4 * *((int *)this + 50)), *((const void **)a2 + 24), 4 * *((int *)a2 + 50));
    *((_DWORD *)this + 50) += *((_DWORD *)a2 + 50);
  }
  int v11 = *((_DWORD *)a2 + 54);
  if (v11)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 208, *((_DWORD *)this + 54) + v11);
    memcpy((void *)(*((void *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  int v12 = *((_DWORD *)a2 + 58);
  if (v12)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 224, *((_DWORD *)this + 58) + v12);
    memcpy((void *)(*((void *)this + 28) + 4 * *((int *)this + 58)), *((const void **)a2 + 28), 4 * *((int *)a2 + 58));
    *((_DWORD *)this + 58) += *((_DWORD *)a2 + 58);
  }
  int v13 = *((_DWORD *)a2 + 70);
  if (v13)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 272, *((_DWORD *)this + 70) + v13);
    memcpy((void *)(*((void *)this + 34) + 4 * *((int *)this + 70)), *((const void **)a2 + 34), 4 * *((int *)a2 + 70));
    *((_DWORD *)this + 70) += *((_DWORD *)a2 + 70);
  }
  int v14 = *((_DWORD *)a2 + 76);
  if (v14)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 296, *((_DWORD *)this + 76) + v14);
    memcpy((void *)(*((void *)this + 37) + 4 * *((int *)this + 76)), *((const void **)a2 + 37), 4 * *((int *)a2 + 76));
    *((_DWORD *)this + 76) += *((_DWORD *)a2 + 76);
  }
  int v15 = *((_DWORD *)a2 + 92);
  if (v15)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 360, *((_DWORD *)this + 92) + v15);
    memcpy((void *)(*((void *)this + 45) + 4 * *((int *)this + 92)), *((const void **)a2 + 45), 4 * *((int *)a2 + 92));
    *((_DWORD *)this + 92) += *((_DWORD *)a2 + 92);
  }
  int v16 = *((_DWORD *)a2 + 126);
  if (v16)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 496, *((_DWORD *)this + 126) + v16);
    memcpy((void *)(*((void *)this + 62) + 4 * *((int *)this + 126)), *((const void **)a2 + 62), 4 * *((int *)a2 + 126));
    *((_DWORD *)this + 126) += *((_DWORD *)a2 + 126);
  }
  int v17 = *((_DWORD *)a2 + 130);
  if (v17)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 512, *((_DWORD *)this + 130) + v17);
    memcpy((void *)(*((void *)this + 64) + 4 * *((int *)this + 130)), *((const void **)a2 + 64), 4 * *((int *)a2 + 130));
    *((_DWORD *)this + 130) += *((_DWORD *)a2 + 130);
  }
  int v18 = *((_DWORD *)a2 + 162);
  if (v18)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 640, *((_DWORD *)this + 162) + v18);
    memcpy((void *)(*((void *)this + 80) + 4 * *((int *)this + 162)), *((const void **)a2 + 80), 4 * *((int *)a2 + 162));
    *((_DWORD *)this + 162) += *((_DWORD *)a2 + 162);
  }
  int v19 = *((_DWORD *)a2 + 166);
  if (v19)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 656, *((_DWORD *)this + 166) + v19);
    memcpy((void *)(*((void *)this + 82) + 4 * *((int *)this + 166)), *((const void **)a2 + 82), 4 * *((int *)a2 + 166));
    *((_DWORD *)this + 166) += *((_DWORD *)a2 + 166);
  }
  int v20 = *((_DWORD *)a2 + 170);
  if (v20)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 672, *((_DWORD *)this + 170) + v20);
    memcpy((void *)(*((void *)this + 84) + 4 * *((int *)this + 170)), *((const void **)a2 + 84), 4 * *((int *)a2 + 170));
    *((_DWORD *)this + 170) += *((_DWORD *)a2 + 170);
  }
  int v21 = *((_DWORD *)a2 + 174);
  if (v21)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 688, *((_DWORD *)this + 174) + v21);
    memcpy((void *)(*((void *)this + 86) + 4 * *((int *)this + 174)), *((const void **)a2 + 86), 4 * *((int *)a2 + 174));
    *((_DWORD *)this + 174) += *((_DWORD *)a2 + 174);
  }
  int v22 = *((_DWORD *)a2 + 178);
  if (v22)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 704, *((_DWORD *)this + 178) + v22);
    memcpy((void *)(*((void *)this + 88) + 8 * *((int *)this + 178)), *((const void **)a2 + 88), 8 * *((int *)a2 + 178));
    *((_DWORD *)this + 178) += *((_DWORD *)a2 + 178);
  }
  int v23 = *((_DWORD *)a2 + 182);
  if (v23)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 720, *((_DWORD *)this + 182) + v23);
    memcpy((void *)(*((void *)this + 90) + 8 * *((int *)this + 182)), *((const void **)a2 + 90), 8 * *((int *)a2 + 182));
    *((_DWORD *)this + 182) += *((_DWORD *)a2 + 182);
  }
  int v24 = *((_DWORD *)a2 + 186);
  if (v24)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 736, *((_DWORD *)this + 186) + v24);
    memcpy((void *)(*((void *)this + 92) + 8 * *((int *)this + 186)), *((const void **)a2 + 92), 8 * *((int *)a2 + 186));
    *((_DWORD *)this + 186) += *((_DWORD *)a2 + 186);
  }
  int v25 = *((_DWORD *)a2 + 190);
  if (v25)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 752, *((_DWORD *)this + 190) + v25);
    memcpy((void *)(*((void *)this + 94) + 8 * *((int *)this + 190)), *((const void **)a2 + 94), 8 * *((int *)a2 + 190));
    *((_DWORD *)this + 190) += *((_DWORD *)a2 + 190);
  }
  int v26 = *((_DWORD *)a2 + 194);
  if (v26)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 768, *((_DWORD *)this + 194) + v26);
    memcpy((void *)(*((void *)this + 96) + 8 * *((int *)this + 194)), *((const void **)a2 + 96), 8 * *((int *)a2 + 194));
    *((_DWORD *)this + 194) += *((_DWORD *)a2 + 194);
  }
  int v27 = *((_DWORD *)a2 + 200);
  if (v27)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 792, *((_DWORD *)this + 200) + v27);
    memcpy((void *)(*((void *)this + 99) + 8 * *((int *)this + 200)), *((const void **)a2 + 99), 8 * *((int *)a2 + 200));
    *((_DWORD *)this + 200) += *((_DWORD *)a2 + 200);
  }
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if (!(_BYTE)v28) {
    goto LABEL_61;
  }
  if (v28)
  {
    uint64_t v52 = *((void *)a2 + 1);
    *((_DWORD *)this + 217) |= 1u;
    *((void *)this + 1) = v52;
    unsigned int v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 2) == 0)
    {
LABEL_54:
      if ((v28 & 4) == 0) {
        goto LABEL_55;
      }
      goto LABEL_208;
    }
  }
  else if ((v28 & 2) == 0)
  {
    goto LABEL_54;
  }
  char v53 = *((unsigned char *)a2 + 68);
  *((_DWORD *)this + 217) |= 2u;
  *((unsigned char *)this + 68) = v53;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 4) == 0)
  {
LABEL_55:
    if ((v28 & 8) == 0) {
      goto LABEL_56;
    }
    goto LABEL_209;
  }
LABEL_208:
  char v54 = *((unsigned char *)a2 + 69);
  *((_DWORD *)this + 217) |= 4u;
  *((unsigned char *)this + 69) = v54;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 8) == 0)
  {
LABEL_56:
    if ((v28 & 0x10) == 0) {
      goto LABEL_57;
    }
    goto LABEL_210;
  }
LABEL_209:
  int v55 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 217) |= 8u;
  *((_DWORD *)this + 4) = v55;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x10) == 0)
  {
LABEL_57:
    if ((v28 & 0x20) == 0) {
      goto LABEL_58;
    }
LABEL_211:
    int v57 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 217) |= 0x20u;
    *((_DWORD *)this + 6) = v57;
    unsigned int v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x40) == 0)
    {
LABEL_59:
      if ((v28 & 0x80) == 0) {
        goto LABEL_61;
      }
      goto LABEL_60;
    }
    goto LABEL_212;
  }
LABEL_210:
  int v56 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 217) |= 0x10u;
  *((_DWORD *)this + 5) = v56;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x20) != 0) {
    goto LABEL_211;
  }
LABEL_58:
  if ((v28 & 0x40) == 0) {
    goto LABEL_59;
  }
LABEL_212:
  int v58 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 217) |= 0x40u;
  *((_DWORD *)this + 7) = v58;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x80) != 0)
  {
LABEL_60:
    int v29 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 217) |= 0x80u;
    *((_DWORD *)this + 8) = v29;
    unsigned int v28 = *((_DWORD *)a2 + 217);
  }
LABEL_61:
  if ((v28 & 0xFF00) == 0) {
    goto LABEL_71;
  }
  if ((v28 & 0x100) != 0)
  {
    int v59 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 217) |= 0x100u;
    *((_DWORD *)this + 9) = v59;
    unsigned int v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x200) == 0)
    {
LABEL_64:
      if ((v28 & 0x400) == 0) {
        goto LABEL_65;
      }
      goto LABEL_216;
    }
  }
  else if ((v28 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  int v60 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 217) |= 0x200u;
  *((_DWORD *)this + 10) = v60;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x400) == 0)
  {
LABEL_65:
    if ((v28 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_217;
  }
LABEL_216:
  int v61 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 217) |= 0x400u;
  *((_DWORD *)this + 11) = v61;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x800) == 0)
  {
LABEL_66:
    if ((v28 & 0x1000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_218;
  }
LABEL_217:
  int v62 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 217) |= 0x800u;
  *((_DWORD *)this + 12) = v62;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x1000) == 0)
  {
LABEL_67:
    if ((v28 & 0x2000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_219;
  }
LABEL_218:
  int v63 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 217) |= 0x1000u;
  *((_DWORD *)this + 13) = v63;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x2000) == 0)
  {
LABEL_68:
    if ((v28 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_220;
  }
LABEL_219:
  int v64 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 217) |= 0x2000u;
  *((_DWORD *)this + 14) = v64;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x4000) == 0)
  {
LABEL_69:
    if ((v28 & 0x8000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_70;
  }
LABEL_220:
  int v65 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 217) |= 0x4000u;
  *((_DWORD *)this + 15) = v65;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x8000) != 0)
  {
LABEL_70:
    int v30 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 217) |= 0x8000u;
    *((_DWORD *)this + 16) = v30;
    unsigned int v28 = *((_DWORD *)a2 + 217);
  }
LABEL_71:
  if ((v28 & 0xFF0000) == 0) {
    goto LABEL_78;
  }
  if ((v28 & 0x10000) != 0)
  {
    int v66 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 217) |= 0x10000u;
    *((_DWORD *)this + 18) = v66;
    unsigned int v28 = *((_DWORD *)a2 + 217);
    if ((v28 & 0x20000) == 0)
    {
LABEL_74:
      if ((v28 & 0x40000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_224;
    }
  }
  else if ((v28 & 0x20000) == 0)
  {
    goto LABEL_74;
  }
  int v67 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 217) |= 0x20000u;
  *((_DWORD *)this + 19) = v67;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x40000) == 0)
  {
LABEL_75:
    if ((v28 & 0x80000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_225;
  }
LABEL_224:
  int v68 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 217) |= 0x40000u;
  *((_DWORD *)this + 20) = v68;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x80000) == 0)
  {
LABEL_76:
    if ((v28 & 0x100000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_225:
  int v69 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 217) |= 0x80000u;
  *((_DWORD *)this + 21) = v69;
  unsigned int v28 = *((_DWORD *)a2 + 217);
  if ((v28 & 0x100000) != 0)
  {
LABEL_77:
    int v31 = *((_DWORD *)a2 + 46);
    *((_DWORD *)this + 217) |= 0x100000u;
    *((_DWORD *)this + 46) = v31;
    unsigned int v28 = *((_DWORD *)a2 + 217);
  }
LABEL_78:
  if (v28 >> 27)
  {
    if ((v28 & 0x8000000) != 0)
    {
      char v32 = *((unsigned char *)a2 + 70);
      *((_DWORD *)this + 217) |= 0x8000000u;
      *((unsigned char *)this + 70) = v32;
      unsigned int v28 = *((_DWORD *)a2 + 217);
    }
    if ((v28 & 0x80000000) != 0)
    {
      char v33 = *((unsigned char *)a2 + 71);
      *((_DWORD *)this + 217) |= 0x80000000;
      *((unsigned char *)this + 71) = v33;
    }
  }
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if (!(_BYTE)v34) {
    goto LABEL_93;
  }
  if (v34)
  {
    char v70 = *((unsigned char *)a2 + 444);
    *((_DWORD *)this + 218) |= 1u;
    *((unsigned char *)this + 444) = v70;
    unsigned int v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 2) == 0)
    {
LABEL_86:
      if ((v34 & 4) == 0) {
        goto LABEL_87;
      }
      goto LABEL_229;
    }
  }
  else if ((v34 & 2) == 0)
  {
    goto LABEL_86;
  }
  int v71 = *((_DWORD *)a2 + 47);
  *((_DWORD *)this + 218) |= 2u;
  *((_DWORD *)this + 47) = v71;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 4) == 0)
  {
LABEL_87:
    if ((v34 & 8) == 0) {
      goto LABEL_88;
    }
    goto LABEL_230;
  }
LABEL_229:
  int v72 = *((_DWORD *)a2 + 60);
  *((_DWORD *)this + 218) |= 4u;
  *((_DWORD *)this + 60) = v72;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 8) == 0)
  {
LABEL_88:
    if ((v34 & 0x10) == 0) {
      goto LABEL_89;
    }
    goto LABEL_231;
  }
LABEL_230:
  int v73 = *((_DWORD *)a2 + 61);
  *((_DWORD *)this + 218) |= 8u;
  *((_DWORD *)this + 61) = v73;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x10) == 0)
  {
LABEL_89:
    if ((v34 & 0x20) == 0) {
      goto LABEL_90;
    }
LABEL_232:
    int v75 = *((_DWORD *)a2 + 63);
    *((_DWORD *)this + 218) |= 0x20u;
    *((_DWORD *)this + 63) = v75;
    unsigned int v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x40) == 0)
    {
LABEL_91:
      if ((v34 & 0x80) == 0) {
        goto LABEL_93;
      }
      goto LABEL_92;
    }
    goto LABEL_233;
  }
LABEL_231:
  int v74 = *((_DWORD *)a2 + 62);
  *((_DWORD *)this + 218) |= 0x10u;
  *((_DWORD *)this + 62) = v74;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x20) != 0) {
    goto LABEL_232;
  }
LABEL_90:
  if ((v34 & 0x40) == 0) {
    goto LABEL_91;
  }
LABEL_233:
  int v76 = *((_DWORD *)a2 + 64);
  *((_DWORD *)this + 218) |= 0x40u;
  *((_DWORD *)this + 64) = v76;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x80) != 0)
  {
LABEL_92:
    int v35 = *((_DWORD *)a2 + 65);
    *((_DWORD *)this + 218) |= 0x80u;
    *((_DWORD *)this + 65) = v35;
    unsigned int v34 = *((_DWORD *)a2 + 218);
  }
LABEL_93:
  if ((v34 & 0xFF00) == 0) {
    goto LABEL_101;
  }
  if ((v34 & 0x100) != 0)
  {
    int v77 = *((_DWORD *)a2 + 66);
    *((_DWORD *)this + 218) |= 0x100u;
    *((_DWORD *)this + 66) = v77;
    unsigned int v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x200) == 0)
    {
LABEL_96:
      if ((v34 & 0x800) == 0) {
        goto LABEL_97;
      }
      goto LABEL_237;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_96;
  }
  int v78 = *((_DWORD *)a2 + 67);
  *((_DWORD *)this + 218) |= 0x200u;
  *((_DWORD *)this + 67) = v78;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x800) == 0)
  {
LABEL_97:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_238;
  }
LABEL_237:
  int v79 = *((_DWORD *)a2 + 72);
  *((_DWORD *)this + 218) |= 0x800u;
  *((_DWORD *)this + 72) = v79;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x2000) == 0)
  {
LABEL_98:
    if ((v34 & 0x4000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_239;
  }
LABEL_238:
  int v80 = *((_DWORD *)a2 + 73);
  *((_DWORD *)this + 218) |= 0x2000u;
  *((_DWORD *)this + 73) = v80;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x4000) == 0)
  {
LABEL_99:
    if ((v34 & 0x8000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_100;
  }
LABEL_239:
  int v81 = *((_DWORD *)a2 + 78);
  *((_DWORD *)this + 218) |= 0x4000u;
  *((_DWORD *)this + 78) = v81;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x8000) != 0)
  {
LABEL_100:
    int v36 = *((_DWORD *)a2 + 79);
    *((_DWORD *)this + 218) |= 0x8000u;
    *((_DWORD *)this + 79) = v36;
    unsigned int v34 = *((_DWORD *)a2 + 218);
  }
LABEL_101:
  if ((v34 & 0xFF0000) == 0) {
    goto LABEL_110;
  }
  int v37 = (std::string *)MEMORY[0x263F8C740];
  if ((v34 & 0x10000) != 0)
  {
    int v82 = (const std::string *)*((void *)a2 + 40);
    *((_DWORD *)this + 218) |= 0x10000u;
    int v83 = (std::string *)*((void *)this + 40);
    if (v83 == v37) {
      operator new();
    }
    std::string::operator=(v83, v82);
    unsigned int v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x20000) == 0)
    {
LABEL_104:
      if ((v34 & 0x40000) == 0) {
        goto LABEL_105;
      }
      goto LABEL_247;
    }
  }
  else if ((v34 & 0x20000) == 0)
  {
    goto LABEL_104;
  }
  int v84 = (const std::string *)*((void *)a2 + 41);
  *((_DWORD *)this + 218) |= 0x20000u;
  int v85 = (std::string *)*((void *)this + 41);
  if (v85 == v37) {
    operator new();
  }
  std::string::operator=(v85, v84);
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x40000) == 0)
  {
LABEL_105:
    if ((v34 & 0x80000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_250;
  }
LABEL_247:
  int v86 = (const std::string *)*((void *)a2 + 42);
  *((_DWORD *)this + 218) |= 0x40000u;
  int v87 = (std::string *)*((void *)this + 42);
  if (v87 == v37) {
    operator new();
  }
  std::string::operator=(v87, v86);
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x80000) == 0)
  {
LABEL_106:
    if ((v34 & 0x100000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_253;
  }
LABEL_250:
  int v88 = (const std::string *)*((void *)a2 + 43);
  *((_DWORD *)this + 218) |= 0x80000u;
  int v89 = (std::string *)*((void *)this + 43);
  if (v89 == v37) {
    operator new();
  }
  std::string::operator=(v89, v88);
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x100000) == 0)
  {
LABEL_107:
    if ((v34 & 0x400000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_256;
  }
LABEL_253:
  char v90 = (const std::string *)*((void *)a2 + 44);
  *((_DWORD *)this + 218) |= 0x100000u;
  int v91 = (std::string *)*((void *)this + 44);
  if (v91 == v37) {
    operator new();
  }
  std::string::operator=(v91, v90);
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x400000) == 0)
  {
LABEL_108:
    if ((v34 & 0x800000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_109;
  }
LABEL_256:
  int v92 = *((_DWORD *)a2 + 94);
  *((_DWORD *)this + 218) |= 0x400000u;
  *((_DWORD *)this + 94) = v92;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x800000) != 0)
  {
LABEL_109:
    int v38 = *((_DWORD *)a2 + 95);
    *((_DWORD *)this + 218) |= 0x800000u;
    *((_DWORD *)this + 95) = v38;
    unsigned int v34 = *((_DWORD *)a2 + 218);
  }
LABEL_110:
  if (!HIBYTE(v34)) {
    goto LABEL_119;
  }
  if ((v34 & 0x1000000) != 0)
  {
    int v141 = *((_DWORD *)a2 + 96);
    *((_DWORD *)this + 218) |= 0x1000000u;
    *((_DWORD *)this + 96) = v141;
    unsigned int v34 = *((_DWORD *)a2 + 218);
    if ((v34 & 0x2000000) == 0)
    {
LABEL_113:
      if ((v34 & 0x4000000) == 0) {
        goto LABEL_114;
      }
      goto LABEL_316;
    }
  }
  else if ((v34 & 0x2000000) == 0)
  {
    goto LABEL_113;
  }
  int v142 = *((_DWORD *)a2 + 97);
  *((_DWORD *)this + 218) |= 0x2000000u;
  *((_DWORD *)this + 97) = v142;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x4000000) == 0)
  {
LABEL_114:
    if ((v34 & 0x8000000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_317;
  }
LABEL_316:
  int v143 = *((_DWORD *)a2 + 98);
  *((_DWORD *)this + 218) |= 0x4000000u;
  *((_DWORD *)this + 98) = v143;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x8000000) == 0)
  {
LABEL_115:
    if ((v34 & 0x10000000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_318;
  }
LABEL_317:
  int v144 = *((_DWORD *)a2 + 99);
  *((_DWORD *)this + 218) |= 0x8000000u;
  *((_DWORD *)this + 99) = v144;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x10000000) == 0)
  {
LABEL_116:
    if ((v34 & 0x20000000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_319;
  }
LABEL_318:
  int v145 = *((_DWORD *)a2 + 100);
  *((_DWORD *)this + 218) |= 0x10000000u;
  *((_DWORD *)this + 100) = v145;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x20000000) == 0)
  {
LABEL_117:
    if ((v34 & 0x40000000) == 0) {
      goto LABEL_118;
    }
LABEL_320:
    int v147 = *((_DWORD *)a2 + 102);
    *((_DWORD *)this + 218) |= 0x40000000u;
    *((_DWORD *)this + 102) = v147;
    if ((*((_DWORD *)a2 + 218) & 0x80000000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_321;
  }
LABEL_319:
  int v146 = *((_DWORD *)a2 + 101);
  *((_DWORD *)this + 218) |= 0x20000000u;
  *((_DWORD *)this + 101) = v146;
  unsigned int v34 = *((_DWORD *)a2 + 218);
  if ((v34 & 0x40000000) != 0) {
    goto LABEL_320;
  }
LABEL_118:
  if ((v34 & 0x80000000) == 0) {
    goto LABEL_119;
  }
LABEL_321:
  int v148 = *((_DWORD *)a2 + 103);
  *((_DWORD *)this + 218) |= 0x80000000;
  *((_DWORD *)this + 103) = v148;
LABEL_119:
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if (!(_BYTE)v39) {
    goto LABEL_129;
  }
  if (v39)
  {
    int v93 = *((_DWORD *)a2 + 104);
    *((_DWORD *)this + 219) |= 1u;
    *((_DWORD *)this + 104) = v93;
    unsigned int v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 2) == 0)
    {
LABEL_122:
      if ((v39 & 4) == 0) {
        goto LABEL_123;
      }
      goto LABEL_260;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_122;
  }
  int v94 = *((_DWORD *)a2 + 105);
  *((_DWORD *)this + 219) |= 2u;
  *((_DWORD *)this + 105) = v94;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 4) == 0)
  {
LABEL_123:
    if ((v39 & 8) == 0) {
      goto LABEL_124;
    }
    goto LABEL_261;
  }
LABEL_260:
  int v95 = *((_DWORD *)a2 + 106);
  *((_DWORD *)this + 219) |= 4u;
  *((_DWORD *)this + 106) = v95;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 8) == 0)
  {
LABEL_124:
    if ((v39 & 0x10) == 0) {
      goto LABEL_125;
    }
    goto LABEL_262;
  }
LABEL_261:
  int v96 = *((_DWORD *)a2 + 107);
  *((_DWORD *)this + 219) |= 8u;
  *((_DWORD *)this + 107) = v96;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x10) == 0)
  {
LABEL_125:
    if ((v39 & 0x20) == 0) {
      goto LABEL_126;
    }
    goto LABEL_263;
  }
LABEL_262:
  int v97 = *((_DWORD *)a2 + 108);
  *((_DWORD *)this + 219) |= 0x10u;
  *((_DWORD *)this + 108) = v97;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x20) == 0)
  {
LABEL_126:
    if ((v39 & 0x40) == 0) {
      goto LABEL_127;
    }
    goto LABEL_264;
  }
LABEL_263:
  int v98 = *((_DWORD *)a2 + 109);
  *((_DWORD *)this + 219) |= 0x20u;
  *((_DWORD *)this + 109) = v98;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40) == 0)
  {
LABEL_127:
    if ((v39 & 0x80) == 0) {
      goto LABEL_129;
    }
    goto LABEL_128;
  }
LABEL_264:
  int v99 = *((_DWORD *)a2 + 110);
  *((_DWORD *)this + 219) |= 0x40u;
  *((_DWORD *)this + 110) = v99;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x80) != 0)
  {
LABEL_128:
    int v40 = *((_DWORD *)a2 + 112);
    *((_DWORD *)this + 219) |= 0x80u;
    *((_DWORD *)this + 112) = v40;
    unsigned int v39 = *((_DWORD *)a2 + 219);
  }
LABEL_129:
  if ((v39 & 0xFF00) == 0) {
    goto LABEL_139;
  }
  if ((v39 & 0x100) != 0)
  {
    int v100 = *((_DWORD *)a2 + 113);
    *((_DWORD *)this + 219) |= 0x100u;
    *((_DWORD *)this + 113) = v100;
    unsigned int v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x200) == 0)
    {
LABEL_132:
      if ((v39 & 0x400) == 0) {
        goto LABEL_133;
      }
      goto LABEL_268;
    }
  }
  else if ((v39 & 0x200) == 0)
  {
    goto LABEL_132;
  }
  int v101 = *((_DWORD *)a2 + 114);
  *((_DWORD *)this + 219) |= 0x200u;
  *((_DWORD *)this + 114) = v101;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x400) == 0)
  {
LABEL_133:
    if ((v39 & 0x800) == 0) {
      goto LABEL_134;
    }
    goto LABEL_269;
  }
LABEL_268:
  int v102 = *((_DWORD *)a2 + 115);
  *((_DWORD *)this + 219) |= 0x400u;
  *((_DWORD *)this + 115) = v102;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x800) == 0)
  {
LABEL_134:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_270;
  }
LABEL_269:
  int v103 = *((_DWORD *)a2 + 116);
  *((_DWORD *)this + 219) |= 0x800u;
  *((_DWORD *)this + 116) = v103;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x1000) == 0)
  {
LABEL_135:
    if ((v39 & 0x2000) == 0) {
      goto LABEL_136;
    }
    goto LABEL_271;
  }
LABEL_270:
  int v104 = *((_DWORD *)a2 + 117);
  *((_DWORD *)this + 219) |= 0x1000u;
  *((_DWORD *)this + 117) = v104;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x2000) == 0)
  {
LABEL_136:
    if ((v39 & 0x4000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_272;
  }
LABEL_271:
  int v105 = *((_DWORD *)a2 + 118);
  *((_DWORD *)this + 219) |= 0x2000u;
  *((_DWORD *)this + 118) = v105;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x4000) == 0)
  {
LABEL_137:
    if ((v39 & 0x8000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_138;
  }
LABEL_272:
  int v106 = *((_DWORD *)a2 + 119);
  *((_DWORD *)this + 219) |= 0x4000u;
  *((_DWORD *)this + 119) = v106;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x8000) != 0)
  {
LABEL_138:
    int v41 = *((_DWORD *)a2 + 120);
    *((_DWORD *)this + 219) |= 0x8000u;
    *((_DWORD *)this + 120) = v41;
    unsigned int v39 = *((_DWORD *)a2 + 219);
  }
LABEL_139:
  if ((v39 & 0xFF0000) == 0) {
    goto LABEL_147;
  }
  if ((v39 & 0x10000) != 0)
  {
    int v107 = *((_DWORD *)a2 + 121);
    *((_DWORD *)this + 219) |= 0x10000u;
    *((_DWORD *)this + 121) = v107;
    unsigned int v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x20000) == 0)
    {
LABEL_142:
      if ((v39 & 0x40000) == 0) {
        goto LABEL_143;
      }
      goto LABEL_276;
    }
  }
  else if ((v39 & 0x20000) == 0)
  {
    goto LABEL_142;
  }
  int v108 = *((_DWORD *)a2 + 122);
  *((_DWORD *)this + 219) |= 0x20000u;
  *((_DWORD *)this + 122) = v108;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40000) == 0)
  {
LABEL_143:
    if ((v39 & 0x80000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_277;
  }
LABEL_276:
  int v109 = *((_DWORD *)a2 + 123);
  *((_DWORD *)this + 219) |= 0x40000u;
  *((_DWORD *)this + 123) = v109;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x80000) == 0)
  {
LABEL_144:
    if ((v39 & 0x100000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_278;
  }
LABEL_277:
  char v110 = *((unsigned char *)a2 + 445);
  *((_DWORD *)this + 219) |= 0x80000u;
  *((unsigned char *)this + 445) = v110;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x100000) == 0)
  {
LABEL_145:
    if ((v39 & 0x200000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_146;
  }
LABEL_278:
  char v111 = *((unsigned char *)a2 + 446);
  *((_DWORD *)this + 219) |= 0x100000u;
  *((unsigned char *)this + 446) = v111;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x200000) != 0)
  {
LABEL_146:
    char v42 = *((unsigned char *)a2 + 447);
    *((_DWORD *)this + 219) |= 0x200000u;
    *((unsigned char *)this + 447) = v42;
    unsigned int v39 = *((_DWORD *)a2 + 219);
  }
LABEL_147:
  if (!HIBYTE(v39)) {
    goto LABEL_156;
  }
  if ((v39 & 0x1000000) != 0)
  {
    int v149 = *((_DWORD *)a2 + 132);
    *((_DWORD *)this + 219) |= 0x1000000u;
    *((_DWORD *)this + 132) = v149;
    unsigned int v39 = *((_DWORD *)a2 + 219);
    if ((v39 & 0x2000000) == 0)
    {
LABEL_150:
      if ((v39 & 0x4000000) == 0) {
        goto LABEL_151;
      }
      goto LABEL_324;
    }
  }
  else if ((v39 & 0x2000000) == 0)
  {
    goto LABEL_150;
  }
  int v150 = *((_DWORD *)a2 + 133);
  *((_DWORD *)this + 219) |= 0x2000000u;
  *((_DWORD *)this + 133) = v150;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x4000000) == 0)
  {
LABEL_151:
    if ((v39 & 0x8000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_325;
  }
LABEL_324:
  int v151 = *((_DWORD *)a2 + 134);
  *((_DWORD *)this + 219) |= 0x4000000u;
  *((_DWORD *)this + 134) = v151;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x8000000) == 0)
  {
LABEL_152:
    if ((v39 & 0x10000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_326;
  }
LABEL_325:
  int v152 = *((_DWORD *)a2 + 135);
  *((_DWORD *)this + 219) |= 0x8000000u;
  *((_DWORD *)this + 135) = v152;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x10000000) == 0)
  {
LABEL_153:
    if ((v39 & 0x20000000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_327;
  }
LABEL_326:
  int v153 = *((_DWORD *)a2 + 136);
  *((_DWORD *)this + 219) |= 0x10000000u;
  *((_DWORD *)this + 136) = v153;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x20000000) == 0)
  {
LABEL_154:
    if ((v39 & 0x40000000) == 0) {
      goto LABEL_155;
    }
LABEL_328:
    int v155 = *((_DWORD *)a2 + 138);
    *((_DWORD *)this + 219) |= 0x40000000u;
    *((_DWORD *)this + 138) = v155;
    if ((*((_DWORD *)a2 + 219) & 0x80000000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_329;
  }
LABEL_327:
  int v154 = *((_DWORD *)a2 + 137);
  *((_DWORD *)this + 219) |= 0x20000000u;
  *((_DWORD *)this + 137) = v154;
  unsigned int v39 = *((_DWORD *)a2 + 219);
  if ((v39 & 0x40000000) != 0) {
    goto LABEL_328;
  }
LABEL_155:
  if ((v39 & 0x80000000) == 0) {
    goto LABEL_156;
  }
LABEL_329:
  int v156 = *((_DWORD *)a2 + 139);
  *((_DWORD *)this + 219) |= 0x80000000;
  *((_DWORD *)this + 139) = v156;
LABEL_156:
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if (!(_BYTE)v43) {
    goto LABEL_166;
  }
  if (v43)
  {
    int v112 = *((_DWORD *)a2 + 140);
    *((_DWORD *)this + 220) |= 1u;
    *((_DWORD *)this + 140) = v112;
    unsigned int v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 2) == 0)
    {
LABEL_159:
      if ((v43 & 4) == 0) {
        goto LABEL_160;
      }
      goto LABEL_282;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_159;
  }
  int v113 = *((_DWORD *)a2 + 141);
  *((_DWORD *)this + 220) |= 2u;
  *((_DWORD *)this + 141) = v113;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 4) == 0)
  {
LABEL_160:
    if ((v43 & 8) == 0) {
      goto LABEL_161;
    }
    goto LABEL_283;
  }
LABEL_282:
  int v114 = *((_DWORD *)a2 + 142);
  *((_DWORD *)this + 220) |= 4u;
  *((_DWORD *)this + 142) = v114;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 8) == 0)
  {
LABEL_161:
    if ((v43 & 0x10) == 0) {
      goto LABEL_162;
    }
    goto LABEL_284;
  }
LABEL_283:
  int v115 = *((_DWORD *)a2 + 143);
  *((_DWORD *)this + 220) |= 8u;
  *((_DWORD *)this + 143) = v115;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x10) == 0)
  {
LABEL_162:
    if ((v43 & 0x20) == 0) {
      goto LABEL_163;
    }
    goto LABEL_285;
  }
LABEL_284:
  int v116 = *((_DWORD *)a2 + 144);
  *((_DWORD *)this + 220) |= 0x10u;
  *((_DWORD *)this + 144) = v116;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x20) == 0)
  {
LABEL_163:
    if ((v43 & 0x40) == 0) {
      goto LABEL_164;
    }
    goto LABEL_286;
  }
LABEL_285:
  int v117 = *((_DWORD *)a2 + 145);
  *((_DWORD *)this + 220) |= 0x20u;
  *((_DWORD *)this + 145) = v117;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x40) == 0)
  {
LABEL_164:
    if ((v43 & 0x80) == 0) {
      goto LABEL_166;
    }
    goto LABEL_165;
  }
LABEL_286:
  int v118 = *((_DWORD *)a2 + 146);
  *((_DWORD *)this + 220) |= 0x40u;
  *((_DWORD *)this + 146) = v118;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x80) != 0)
  {
LABEL_165:
    int v44 = *((_DWORD *)a2 + 147);
    *((_DWORD *)this + 220) |= 0x80u;
    *((_DWORD *)this + 147) = v44;
    unsigned int v43 = *((_DWORD *)a2 + 220);
  }
LABEL_166:
  if ((v43 & 0xFF00) == 0) {
    goto LABEL_176;
  }
  if ((v43 & 0x100) != 0)
  {
    int v119 = *((_DWORD *)a2 + 148);
    *((_DWORD *)this + 220) |= 0x100u;
    *((_DWORD *)this + 148) = v119;
    unsigned int v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 0x200) == 0)
    {
LABEL_169:
      if ((v43 & 0x400) == 0) {
        goto LABEL_170;
      }
      goto LABEL_290;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_169;
  }
  int v120 = *((_DWORD *)a2 + 149);
  *((_DWORD *)this + 220) |= 0x200u;
  *((_DWORD *)this + 149) = v120;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x400) == 0)
  {
LABEL_170:
    if ((v43 & 0x800) == 0) {
      goto LABEL_171;
    }
    goto LABEL_291;
  }
LABEL_290:
  int v121 = *((_DWORD *)a2 + 150);
  *((_DWORD *)this + 220) |= 0x400u;
  *((_DWORD *)this + 150) = v121;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x800) == 0)
  {
LABEL_171:
    if ((v43 & 0x1000) == 0) {
      goto LABEL_172;
    }
    goto LABEL_292;
  }
LABEL_291:
  int v122 = *((_DWORD *)a2 + 151);
  *((_DWORD *)this + 220) |= 0x800u;
  *((_DWORD *)this + 151) = v122;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x1000) == 0)
  {
LABEL_172:
    if ((v43 & 0x2000) == 0) {
      goto LABEL_173;
    }
    goto LABEL_293;
  }
LABEL_292:
  int v123 = *((_DWORD *)a2 + 152);
  *((_DWORD *)this + 220) |= 0x1000u;
  *((_DWORD *)this + 152) = v123;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x2000) == 0)
  {
LABEL_173:
    if ((v43 & 0x4000) == 0) {
      goto LABEL_174;
    }
    goto LABEL_294;
  }
LABEL_293:
  int v124 = *((_DWORD *)a2 + 153);
  *((_DWORD *)this + 220) |= 0x2000u;
  *((_DWORD *)this + 153) = v124;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x4000) == 0)
  {
LABEL_174:
    if ((v43 & 0x8000) == 0) {
      goto LABEL_176;
    }
    goto LABEL_175;
  }
LABEL_294:
  int v125 = *((_DWORD *)a2 + 154);
  *((_DWORD *)this + 220) |= 0x4000u;
  *((_DWORD *)this + 154) = v125;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x8000) != 0)
  {
LABEL_175:
    int v45 = *((_DWORD *)a2 + 155);
    *((_DWORD *)this + 220) |= 0x8000u;
    *((_DWORD *)this + 155) = v45;
    unsigned int v43 = *((_DWORD *)a2 + 220);
  }
LABEL_176:
  if ((v43 & 0xFF0000) == 0) {
    goto LABEL_182;
  }
  if ((v43 & 0x10000) != 0)
  {
    int v126 = *((_DWORD *)a2 + 156);
    *((_DWORD *)this + 220) |= 0x10000u;
    *((_DWORD *)this + 156) = v126;
    unsigned int v43 = *((_DWORD *)a2 + 220);
    if ((v43 & 0x20000) == 0)
    {
LABEL_179:
      if ((v43 & 0x40000) == 0) {
        goto LABEL_180;
      }
      goto LABEL_298;
    }
  }
  else if ((v43 & 0x20000) == 0)
  {
    goto LABEL_179;
  }
  int v127 = *((_DWORD *)a2 + 157);
  *((_DWORD *)this + 220) |= 0x20000u;
  *((_DWORD *)this + 157) = v127;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x40000) == 0)
  {
LABEL_180:
    if ((v43 & 0x80000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_181;
  }
LABEL_298:
  int v128 = *((_DWORD *)a2 + 158);
  *((_DWORD *)this + 220) |= 0x40000u;
  *((_DWORD *)this + 158) = v128;
  unsigned int v43 = *((_DWORD *)a2 + 220);
  if ((v43 & 0x80000) != 0)
  {
LABEL_181:
    int v46 = *((_DWORD *)a2 + 159);
    *((_DWORD *)this + 220) |= 0x80000u;
    *((_DWORD *)this + 159) = v46;
    unsigned int v43 = *((_DWORD *)a2 + 220);
  }
LABEL_182:
  if (v43 >> 29)
  {
    if ((v43 & 0x20000000) != 0)
    {
      int v47 = *((_DWORD *)a2 + 196);
      *((_DWORD *)this + 220) |= 0x20000000u;
      *((_DWORD *)this + 196) = v47;
      unsigned int v43 = *((_DWORD *)a2 + 220);
    }
    if ((v43 & 0x40000000) != 0)
    {
      int v48 = *((_DWORD *)a2 + 197);
      *((_DWORD *)this + 220) |= 0x40000000u;
      *((_DWORD *)this + 197) = v48;
    }
  }
  int v49 = *((_DWORD *)a2 + 221);
  if (!(_BYTE)v49) {
    goto LABEL_197;
  }
  if (v49)
  {
    int v129 = *((_DWORD *)a2 + 202);
    *((_DWORD *)this + 221) |= 1u;
    *((_DWORD *)this + 202) = v129;
    int v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 2) == 0)
    {
LABEL_190:
      if ((v49 & 4) == 0) {
        goto LABEL_191;
      }
      goto LABEL_302;
    }
  }
  else if ((v49 & 2) == 0)
  {
    goto LABEL_190;
  }
  int v130 = *((_DWORD *)a2 + 203);
  *((_DWORD *)this + 221) |= 2u;
  *((_DWORD *)this + 203) = v130;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 4) == 0)
  {
LABEL_191:
    if ((v49 & 8) == 0) {
      goto LABEL_192;
    }
    goto LABEL_303;
  }
LABEL_302:
  int v131 = *((_DWORD *)a2 + 204);
  *((_DWORD *)this + 221) |= 4u;
  *((_DWORD *)this + 204) = v131;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 8) == 0)
  {
LABEL_192:
    if ((v49 & 0x10) == 0) {
      goto LABEL_193;
    }
    goto LABEL_304;
  }
LABEL_303:
  int v132 = *((_DWORD *)a2 + 205);
  *((_DWORD *)this + 221) |= 8u;
  *((_DWORD *)this + 205) = v132;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x10) == 0)
  {
LABEL_193:
    if ((v49 & 0x20) == 0) {
      goto LABEL_194;
    }
LABEL_305:
    int v134 = *((_DWORD *)a2 + 207);
    *((_DWORD *)this + 221) |= 0x20u;
    *((_DWORD *)this + 207) = v134;
    int v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 0x40) == 0)
    {
LABEL_195:
      if ((v49 & 0x80) == 0) {
        goto LABEL_197;
      }
      goto LABEL_196;
    }
    goto LABEL_306;
  }
LABEL_304:
  int v133 = *((_DWORD *)a2 + 206);
  *((_DWORD *)this + 221) |= 0x10u;
  *((_DWORD *)this + 206) = v133;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x20) != 0) {
    goto LABEL_305;
  }
LABEL_194:
  if ((v49 & 0x40) == 0) {
    goto LABEL_195;
  }
LABEL_306:
  int v135 = *((_DWORD *)a2 + 208);
  *((_DWORD *)this + 221) |= 0x40u;
  *((_DWORD *)this + 208) = v135;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x80) != 0)
  {
LABEL_196:
    int v50 = *((_DWORD *)a2 + 209);
    *((_DWORD *)this + 221) |= 0x80u;
    *((_DWORD *)this + 209) = v50;
    int v49 = *((_DWORD *)a2 + 221);
  }
LABEL_197:
  if ((v49 & 0xFF00) == 0) {
    return;
  }
  if ((v49 & 0x100) != 0)
  {
    int v136 = *((_DWORD *)a2 + 210);
    *((_DWORD *)this + 221) |= 0x100u;
    *((_DWORD *)this + 210) = v136;
    int v49 = *((_DWORD *)a2 + 221);
    if ((v49 & 0x200) == 0)
    {
LABEL_200:
      if ((v49 & 0x400) == 0) {
        goto LABEL_201;
      }
      goto LABEL_310;
    }
  }
  else if ((v49 & 0x200) == 0)
  {
    goto LABEL_200;
  }
  int v137 = *((_DWORD *)a2 + 211);
  *((_DWORD *)this + 221) |= 0x200u;
  *((_DWORD *)this + 211) = v137;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x400) == 0)
  {
LABEL_201:
    if ((v49 & 0x800) == 0) {
      goto LABEL_202;
    }
    goto LABEL_311;
  }
LABEL_310:
  int v138 = *((_DWORD *)a2 + 212);
  *((_DWORD *)this + 221) |= 0x400u;
  *((_DWORD *)this + 212) = v138;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x800) == 0)
  {
LABEL_202:
    if ((v49 & 0x1000) == 0) {
      goto LABEL_203;
    }
    goto LABEL_312;
  }
LABEL_311:
  int v139 = *((_DWORD *)a2 + 213);
  *((_DWORD *)this + 221) |= 0x800u;
  *((_DWORD *)this + 213) = v139;
  int v49 = *((_DWORD *)a2 + 221);
  if ((v49 & 0x1000) == 0)
  {
LABEL_203:
    if ((v49 & 0x2000) == 0) {
      return;
    }
    goto LABEL_204;
  }
LABEL_312:
  int v140 = *((_DWORD *)a2 + 214);
  *((_DWORD *)this + 221) |= 0x1000u;
  *((_DWORD *)this + 214) = v140;
  if ((*((_DWORD *)a2 + 221) & 0x2000) != 0)
  {
LABEL_204:
    int v51 = *((_DWORD *)a2 + 215);
    *((_DWORD *)this + 221) |= 0x2000u;
    *((_DWORD *)this + 215) = v51;
  }
}

void sub_22492E6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAllDay::~MotionFitnessAllDay(awd::metrics::MotionFitnessAllDay *this)
{
  *(void *)this = &unk_26D7BAE28;
  awd::metrics::MotionFitnessAllDay::SharedDtor(this);
  uint64_t v2 = *((void *)this + 99);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8000313F17);
  }
  uint64_t v3 = *((void *)this + 96);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8000313F17);
  }
  uint64_t v4 = *((void *)this + 94);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8000313F17);
  }
  uint64_t v5 = *((void *)this + 92);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8000313F17);
  }
  uint64_t v6 = *((void *)this + 90);
  if (v6) {
    MEMORY[0x22A61A810](v6, 0x1000C8000313F17);
  }
  uint64_t v7 = *((void *)this + 88);
  if (v7) {
    MEMORY[0x22A61A810](v7, 0x1000C8000313F17);
  }
  uint64_t v8 = *((void *)this + 86);
  if (v8) {
    MEMORY[0x22A61A810](v8, 0x1000C8052888210);
  }
  uint64_t v9 = *((void *)this + 84);
  if (v9) {
    MEMORY[0x22A61A810](v9, 0x1000C8052888210);
  }
  uint64_t v10 = *((void *)this + 82);
  if (v10) {
    MEMORY[0x22A61A810](v10, 0x1000C8052888210);
  }
  uint64_t v11 = *((void *)this + 80);
  if (v11) {
    MEMORY[0x22A61A810](v11, 0x1000C8052888210);
  }
  uint64_t v12 = *((void *)this + 64);
  if (v12) {
    MEMORY[0x22A61A810](v12, 0x1000C8052888210);
  }
  uint64_t v13 = *((void *)this + 62);
  if (v13) {
    MEMORY[0x22A61A810](v13, 0x1000C8052888210);
  }
  uint64_t v14 = *((void *)this + 45);
  if (v14) {
    MEMORY[0x22A61A810](v14, 0x1000C8052888210);
  }
  uint64_t v15 = *((void *)this + 37);
  if (v15) {
    MEMORY[0x22A61A810](v15, 0x1000C8052888210);
  }
  uint64_t v16 = *((void *)this + 34);
  if (v16) {
    MEMORY[0x22A61A810](v16, 0x1000C8052888210);
  }
  uint64_t v17 = *((void *)this + 28);
  if (v17) {
    MEMORY[0x22A61A810](v17, 0x1000C8052888210);
  }
  uint64_t v18 = *((void *)this + 26);
  if (v18) {
    MEMORY[0x22A61A810](v18, 0x1000C8052888210);
  }
  uint64_t v19 = *((void *)this + 24);
  if (v19) {
    MEMORY[0x22A61A810](v19, 0x1000C8052888210);
  }
  uint64_t v20 = *((void *)this + 21);
  if (v20) {
    MEMORY[0x22A61A810](v20, 0x1000C8052888210);
  }
  uint64_t v21 = *((void *)this + 19);
  if (v21) {
    MEMORY[0x22A61A810](v21, 0x1000C8052888210);
  }
  uint64_t v22 = *((void *)this + 17);
  if (v22) {
    MEMORY[0x22A61A810](v22, 0x1000C8052888210);
  }
  uint64_t v23 = *((void *)this + 15);
  if (v23) {
    MEMORY[0x22A61A810](v23, 0x1000C8052888210);
  }
  uint64_t v24 = *((void *)this + 13);
  if (v24) {
    MEMORY[0x22A61A810](v24, 0x1000C8052888210);
  }
  uint64_t v25 = *((void *)this + 11);
  if (v25) {
    MEMORY[0x22A61A810](v25, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionFitnessAllDay::~MotionFitnessAllDay(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::MotionFitnessAllDay::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[40];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[41];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x22A61A830](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[42];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x22A61A830](v7, 0x1012C40EC159624);
  }
  uint64_t v9 = v1[43];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (void *)MEMORY[0x22A61A830](v9, 0x1012C40EC159624);
  }
  uint64_t v11 = v1[44];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 864) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::default_instance(awd::metrics::MotionFitnessAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessAllDay::default_instance_;
  if (!awd::metrics::MotionFitnessAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessAllDay::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessAllDay::New(awd::metrics::MotionFitnessAllDay *this)
{
}

uint64_t awd::metrics::MotionFitnessAllDay::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 868);
  if ((_BYTE)v1)
  {
    *(_WORD *)(this + 68) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 52) = 0u;
    *(_OWORD *)(this + 36) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 184) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
  }
  if (v1 >> 27) {
    *(_WORD *)(this + 70) = 0;
  }
  unsigned int v2 = *(_DWORD *)(this + 872);
  if ((_BYTE)v2)
  {
    *(unsigned char *)(this + 444) = 0;
    *(_DWORD *)(this + 188) = 0;
    *(void *)(this + 248) = 0;
    *(void *)(this + 256) = 0;
    *(void *)(this + 240) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(this + 264) = 0;
    *(void *)(this + 288) = 0;
    *(void *)(this + 312) = 0;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    uint64_t v3 = MEMORY[0x263F8C740];
    if ((v2 & 0x10000) != 0)
    {
      uint64_t v4 = *(void *)(this + 320);
      if (v4 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 874) & 2) != 0)
    {
      uint64_t v5 = *(void *)(this + 328);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 874) & 4) != 0)
    {
      uint64_t v6 = *(void *)(this + 336);
      if (v6 != v3)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 874) & 8) != 0)
    {
      uint64_t v7 = *(void *)(this + 344);
      if (v7 != v3)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 874) & 0x10) != 0)
    {
      uint64_t v8 = *(void *)(this + 352);
      if (v8 != v3)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
    *(void *)(this + 376) = 0;
    unsigned int v2 = *(_DWORD *)(this + 872);
  }
  if (HIBYTE(v2))
  {
    *(_OWORD *)(this + 384) = 0u;
    *(_OWORD *)(this + 400) = 0u;
  }
  unsigned int v9 = *(_DWORD *)(this + 876);
  if ((_BYTE)v9)
  {
    *(_DWORD *)(this + 448) = 0;
    *(void *)(this + 424) = 0;
    *(void *)(this + 432) = 0;
    *(void *)(this + 416) = 0;
    *(_DWORD *)(this + 440) = 0;
  }
  if ((v9 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 452) = 0u;
    *(_OWORD *)(this + 468) = 0u;
  }
  if ((v9 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 484) = 0;
    *(void *)(this + 488) = 0;
    *(_WORD *)(this + 445) = 0;
    *(unsigned char *)(this + 447) = 0;
  }
  if (HIBYTE(v9))
  {
    *(_OWORD *)(this + 528) = 0u;
    *(_OWORD *)(this + 544) = 0u;
  }
  unsigned int v10 = *(_DWORD *)(this + 880);
  if ((_BYTE)v10)
  {
    *(_OWORD *)(this + 560) = 0u;
    *(_OWORD *)(this + 576) = 0u;
  }
  if ((v10 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 592) = 0u;
    *(_OWORD *)(this + 608) = 0u;
  }
  if ((v10 & 0xFF0000) != 0) {
    *(_OWORD *)(this + 624) = 0u;
  }
  if (v10 >> 29) {
    *(void *)(this + 784) = 0;
  }
  int v11 = *(_DWORD *)(this + 884);
  if ((_BYTE)v11)
  {
    *(_OWORD *)(this + 808) = 0u;
    *(_OWORD *)(this + 824) = 0u;
  }
  if ((v11 & 0xFF00) != 0)
  {
    *(void *)(this + 856) = 0;
    *(_OWORD *)(this + 840) = 0u;
  }
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 160) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 232) = 0;
  *(_DWORD *)(this + 280) = 0;
  *(_DWORD *)(this + 304) = 0;
  *(_DWORD *)(this + 368) = 0;
  *(_DWORD *)(this + 504) = 0;
  *(_DWORD *)(this + 520) = 0;
  *(_DWORD *)(this + 648) = 0;
  *(_DWORD *)(this + 664) = 0;
  *(_DWORD *)(this + 680) = 0;
  *(_DWORD *)(this + 696) = 0;
  *(_DWORD *)(this + 712) = 0;
  *(_DWORD *)(this + 728) = 0;
  *(_DWORD *)(this + 744) = 0;
  *(_DWORD *)(this + 760) = 0;
  *(_DWORD *)(this + 776) = 0;
  *(_DWORD *)(this + 800) = 0;
  *(void *)(this + 868) = 0;
  *(void *)(this + 876) = 0;
  *(_DWORD *)(this + 884) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessAllDay::MergePartialFromCodedStream(awd::metrics::MotionFitnessAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)a2 + 8);
  uint64_t v5 = (unint64_t *)((char *)a2 + 16);
  v637 = (char *)this + 752;
  v638 = (char *)this + 792;
  v651 = (char *)this + 736;
  v652 = (char *)this + 768;
  v650 = (char *)this + 720;
  v647 = (char *)this + 688;
  v648 = (char *)this + 704;
  v645 = (char *)this + 672;
  v643 = (char *)this + 656;
  v636 = (char *)this + 640;
  v653 = (char *)this + 512;
  v635 = (char *)this + 496;
  v642 = (char *)this + 360;
  v649 = (char *)this + 296;
  v646 = (char *)this + 224;
  v644 = (char *)this + 208;
  v639 = (char *)this + 192;
  v640 = (char *)this + 272;
  uint64_t v6 = (char *)this + 152;
  uint64_t v7 = (char *)this + 136;
  uint64_t v8 = (char *)this + 120;
  v654 = (char *)this + 104;
  v655 = (char *)this + 168;
  v641 = (char *)this + 88;
  v616 = (unint64_t *)((char *)this + 8);
  v623 = (unsigned int *)((char *)this + 16);
  v624 = (unsigned int *)((char *)this + 20);
  v625 = (unsigned int *)((char *)this + 24);
  v626 = (unsigned int *)((char *)this + 28);
  v627 = (unsigned int *)((char *)this + 32);
  v628 = (unsigned int *)((char *)this + 36);
  v629 = (unsigned int *)((char *)this + 40);
  v630 = (unsigned int *)((char *)this + 44);
  v631 = (unsigned int *)((char *)this + 48);
  v632 = (unsigned int *)((char *)this + 52);
  v633 = (unsigned int *)((char *)this + 56);
  v634 = (unsigned int *)((char *)this + 60);
  v621 = (unsigned int *)((char *)this + 72);
  v622 = (unsigned int *)((char *)this + 64);
  v619 = (unsigned int *)((char *)this + 80);
  v620 = (unsigned int *)((char *)this + 76);
  v617 = (unsigned int *)((char *)this + 184);
  v618 = (unsigned int *)((char *)this + 84);
LABEL_2:
  while (2)
  {
    unsigned int v9 = (char *)*v4;
    if (*v4 >= *v5 || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v12 = (char *)*v4;
        unint64_t v13 = *v5;
        if (*v4 >= *v5 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v616);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unint64_t *v616 = *v12;
          uint64_t v14 = v12 + 1;
          *uint64_t v4 = (unint64_t)v14;
        }
        *((_DWORD *)this + 217) |= 1u;
        if ((unint64_t)v14 < v13 && *v14 == 16)
        {
          uint64_t v15 = v14 + 1;
          *uint64_t v4 = (unint64_t)v15;
          goto LABEL_375;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v15 = (char *)*v4;
        unint64_t v13 = *v5;
LABEL_375:
        v657[0] = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v145 = v657[0];
          int v146 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int v145 = *v15;
          int v146 = v15 + 1;
          *uint64_t v4 = (unint64_t)v146;
        }
        *((unsigned char *)this + 68) = v145 != 0;
        *((_DWORD *)this + 217) |= 2u;
        if ((unint64_t)v146 >= v13 || *v146 != 24) {
          continue;
        }
        int v114 = v146 + 1;
        *uint64_t v4 = (unint64_t)v114;
LABEL_383:
        v657[0] = 0;
        if ((unint64_t)v114 >= v13 || *v114 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v147 = v657[0];
          int v148 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int v147 = *v114;
          int v148 = v114 + 1;
          *uint64_t v4 = (unint64_t)v148;
        }
        *((unsigned char *)this + 69) = v147 != 0;
        *((_DWORD *)this + 217) |= 4u;
        if ((unint64_t)v148 >= v13 || *v148 != 32) {
          continue;
        }
        uint64_t v16 = v148 + 1;
        *uint64_t v4 = (unint64_t)v16;
LABEL_391:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v623);
          if (!result) {
            return result;
          }
          int v149 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v623 = *v16;
          int v149 = v16 + 1;
          *uint64_t v4 = (unint64_t)v149;
        }
        *((_DWORD *)this + 217) |= 8u;
        if ((unint64_t)v149 >= v13 || *v149 != 40) {
          continue;
        }
        int v115 = v149 + 1;
        *uint64_t v4 = (unint64_t)v115;
LABEL_399:
        if ((unint64_t)v115 >= v13 || *v115 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v624);
          if (!result) {
            return result;
          }
          int v150 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v624 = *v115;
          int v150 = v115 + 1;
          *uint64_t v4 = (unint64_t)v150;
        }
        *((_DWORD *)this + 217) |= 0x10u;
        if ((unint64_t)v150 >= v13 || *v150 != 48) {
          continue;
        }
        uint64_t v17 = v150 + 1;
        *uint64_t v4 = (unint64_t)v17;
LABEL_407:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v625);
          if (!result) {
            return result;
          }
          int v151 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v625 = *v17;
          int v151 = v17 + 1;
          *uint64_t v4 = (unint64_t)v151;
        }
        *((_DWORD *)this + 217) |= 0x20u;
        if ((unint64_t)v151 >= v13 || *v151 != 56) {
          continue;
        }
        uint64_t v18 = v151 + 1;
        *uint64_t v4 = (unint64_t)v18;
LABEL_415:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v626);
          if (!result) {
            return result;
          }
          int v152 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v626 = *v18;
          int v152 = v18 + 1;
          *uint64_t v4 = (unint64_t)v152;
        }
        *((_DWORD *)this + 217) |= 0x40u;
        if ((unint64_t)v152 >= v13 || *v152 != 64) {
          continue;
        }
        uint64_t v19 = v152 + 1;
        *uint64_t v4 = (unint64_t)v19;
LABEL_423:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v627);
          if (!result) {
            return result;
          }
          int v153 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v627 = *v19;
          int v153 = v19 + 1;
          *uint64_t v4 = (unint64_t)v153;
        }
        *((_DWORD *)this + 217) |= 0x80u;
        if ((unint64_t)v153 >= v13 || *v153 != 72) {
          continue;
        }
        int v116 = v153 + 1;
        *uint64_t v4 = (unint64_t)v116;
LABEL_431:
        if ((unint64_t)v116 >= v13 || *v116 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v628);
          if (!result) {
            return result;
          }
          int v154 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v628 = *v116;
          int v154 = v116 + 1;
          *uint64_t v4 = (unint64_t)v154;
        }
        *((_DWORD *)this + 217) |= 0x100u;
        if ((unint64_t)v154 >= v13 || *v154 != 80) {
          continue;
        }
        uint64_t v20 = v154 + 1;
        *uint64_t v4 = (unint64_t)v20;
LABEL_439:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v629);
          if (!result) {
            return result;
          }
          int v155 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v629 = *v20;
          int v155 = v20 + 1;
          *uint64_t v4 = (unint64_t)v155;
        }
        *((_DWORD *)this + 217) |= 0x200u;
        if ((unint64_t)v155 >= v13 || *v155 != 88) {
          continue;
        }
        uint64_t v21 = v155 + 1;
        *uint64_t v4 = (unint64_t)v21;
LABEL_447:
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v630);
          if (!result) {
            return result;
          }
          int v156 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v630 = *v21;
          int v156 = v21 + 1;
          *uint64_t v4 = (unint64_t)v156;
        }
        *((_DWORD *)this + 217) |= 0x400u;
        if ((unint64_t)v156 >= v13 || *v156 != 96) {
          continue;
        }
        int v117 = v156 + 1;
        *uint64_t v4 = (unint64_t)v117;
LABEL_455:
        if ((unint64_t)v117 >= v13 || *v117 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v631);
          if (!result) {
            return result;
          }
          int v157 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v631 = *v117;
          int v157 = v117 + 1;
          *uint64_t v4 = (unint64_t)v157;
        }
        *((_DWORD *)this + 217) |= 0x800u;
        if ((unint64_t)v157 >= v13 || *v157 != 104) {
          continue;
        }
        int v118 = v157 + 1;
        *uint64_t v4 = (unint64_t)v118;
LABEL_463:
        if ((unint64_t)v118 >= v13 || *v118 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v632);
          if (!result) {
            return result;
          }
          int v158 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v632 = *v118;
          int v158 = v118 + 1;
          *uint64_t v4 = (unint64_t)v158;
        }
        *((_DWORD *)this + 217) |= 0x1000u;
        if ((unint64_t)v158 >= v13 || *v158 != 112) {
          continue;
        }
        int v119 = v158 + 1;
        *uint64_t v4 = (unint64_t)v119;
LABEL_471:
        if ((unint64_t)v119 >= v13 || *v119 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v633);
          if (!result) {
            return result;
          }
          uint64_t v159 = (unsigned char *)*v4;
          unint64_t v13 = *v5;
        }
        else
        {
          unsigned int *v633 = *v119;
          uint64_t v159 = v119 + 1;
          *uint64_t v4 = (unint64_t)v159;
        }
        *((_DWORD *)this + 217) |= 0x2000u;
        if ((unint64_t)v159 >= v13 || *v159 != 120) {
          continue;
        }
        uint64_t v22 = v159 + 1;
        *uint64_t v4 = (unint64_t)v22;
LABEL_479:
        if ((unint64_t)v22 >= v13 || (char)*v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v634);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v160 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v634 = *v22;
          int v160 = v22 + 1;
          *uint64_t v4 = (unint64_t)v160;
        }
        *((_DWORD *)this + 217) |= 0x4000u;
        if ((int)v13 - (int)v160 < 2 || *v160 != 128 || v160[1] != 1) {
          continue;
        }
        uint64_t v23 = v160 + 2;
        *uint64_t v4 = (unint64_t)v23;
LABEL_488:
        if ((unint64_t)v23 >= v13 || (char)*v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v622);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v161 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v622 = *v23;
          int v161 = v23 + 1;
          *uint64_t v4 = (unint64_t)v161;
        }
        *((_DWORD *)this + 217) |= 0x8000u;
        if ((int)v13 - (int)v161 < 2 || *v161 != 136 || v161[1] != 1) {
          continue;
        }
        int v120 = v161 + 2;
        *uint64_t v4 = (unint64_t)v120;
LABEL_497:
        if ((unint64_t)v120 >= v13 || (char)*v120 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v621);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v162 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v621 = *v120;
          int v162 = v120 + 1;
          *uint64_t v4 = (unint64_t)v162;
        }
        *((_DWORD *)this + 217) |= 0x10000u;
        if ((int)v13 - (int)v162 < 2 || *v162 != 144 || v162[1] != 1) {
          continue;
        }
        int v121 = v162 + 2;
        *uint64_t v4 = (unint64_t)v121;
LABEL_506:
        if ((unint64_t)v121 >= v13 || (char)*v121 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v620);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v163 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v620 = *v121;
          int v163 = v121 + 1;
          *uint64_t v4 = (unint64_t)v163;
        }
        *((_DWORD *)this + 217) |= 0x20000u;
        if ((int)v13 - (int)v163 < 2 || *v163 != 152 || v163[1] != 1) {
          continue;
        }
        uint64_t v24 = v163 + 2;
        *uint64_t v4 = (unint64_t)v24;
LABEL_515:
        if ((unint64_t)v24 >= v13 || (char)*v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v619);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v164 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v619 = *v24;
          int v164 = v24 + 1;
          *uint64_t v4 = (unint64_t)v164;
        }
        *((_DWORD *)this + 217) |= 0x40000u;
        if ((int)v13 - (int)v164 < 2 || *v164 != 160 || v164[1] != 1) {
          continue;
        }
        uint64_t v25 = v164 + 2;
        *uint64_t v4 = (unint64_t)v25;
LABEL_524:
        if ((unint64_t)v25 >= v13 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v618);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          unsigned int v165 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v618 = *v25;
          unsigned int v165 = v25 + 1;
          *uint64_t v4 = (unint64_t)v165;
        }
        *((_DWORD *)this + 217) |= 0x80000u;
        if ((int)v13 - (int)v165 < 2 || *v165 != 168 || v165[1] != 1) {
          continue;
        }
        int v26 = v165 + 2;
        *uint64_t v4 = (unint64_t)v26;
LABEL_533:
        if ((unint64_t)v26 >= v13 || (char)*v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v617);
          if (!result) {
            return result;
          }
          unint64_t v13 = *v5;
          int v166 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v617 = *v26;
          int v166 = v26 + 1;
          *uint64_t v4 = (unint64_t)v166;
        }
        *((_DWORD *)this + 217) |= 0x100000u;
        if ((int)v13 - (int)v166 >= 2 && *v166 == 181 && v166[1] == 1) {
          goto LABEL_541;
        }
        continue;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v114 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_383;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v16 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_391;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v115 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_399;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v17 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_407;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v18 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_415;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v19 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_423;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v116 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_431;
      case 0xAu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v20 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_439;
      case 0xBu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v21 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_447;
      case 0xCu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v117 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_455;
      case 0xDu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v118 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_463;
      case 0xEu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v119 = (char *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_471;
      case 0xFu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v22 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_479;
      case 0x10u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v23 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_488;
      case 0x11u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v120 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_497;
      case 0x12u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v121 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_506;
      case 0x13u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v24 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_515;
      case 0x14u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v25 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_524;
      case 0x15u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v26 = (unsigned __int8 *)*v4;
        unint64_t v13 = *v5;
        goto LABEL_533;
      case 0x16u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v641);
          if (!result) {
            return result;
          }
          goto LABEL_561;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
LABEL_542:
        if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xB5) != 2)
        {
          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
        }
        v657[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
          return 0;
        }
        unsigned int v167 = v657[0];
        int v168 = *((_DWORD *)this + 24);
        if (v168 == *((_DWORD *)this + 25))
        {
          wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v641, v168 + 1);
          int v168 = *((_DWORD *)this + 24);
        }
        uint64_t v169 = *((void *)this + 11);
        int v170 = v168 + 1;
        *((_DWORD *)this + 24) = v168 + 1;
        *(_DWORD *)(v169 + 4 * v168) = v167;
        int v171 = (unsigned __int8 *)*v4;
        int v172 = *(_DWORD *)v5 - *v4;
        if (v172 >= 1)
        {
          signed int v173 = v172 / 6u;
          int v174 = v173 >= *((_DWORD *)this + 25) - v170 ? *((_DWORD *)this + 25) - v170 : v173;
          if (v174 >= 1)
          {
            int v175 = 0;
            while (*v171 == 181 && v171[1] == 1)
            {
              int v176 = *(_DWORD *)(v171 + 2);
              if (v170 >= *((_DWORD *)this + 25))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                int v170 = *((_DWORD *)this + 24);
                uint64_t v169 = *((void *)this + 11);
              }
              *((_DWORD *)this + 24) = v170 + 1;
              *(_DWORD *)(v169 + 4 * v170) = v176;
              ++v175;
              v171 += 6;
              ++v170;
              if (v174 == v175)
              {
                int v175 = v174;
                break;
              }
            }
            if (v175) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
        }
LABEL_561:
        int v166 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
          continue;
        }
        int v177 = *v166;
        if (v177 != 189)
        {
          if (v177 == 181 && v166[1] == 1)
          {
LABEL_541:
            *uint64_t v4 = (unint64_t)(v166 + 2);
            goto LABEL_542;
          }
          continue;
        }
        if (v166[1] != 1) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v166 + 2);
LABEL_568:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xBD) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v178 = v657[0];
          int v179 = *((_DWORD *)this + 28);
          if (v179 == *((_DWORD *)this + 29))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v654, v179 + 1);
            int v179 = *((_DWORD *)this + 28);
          }
          uint64_t v180 = *((void *)this + 13);
          int v181 = v179 + 1;
          *((_DWORD *)this + 28) = v179 + 1;
          *(_DWORD *)(v180 + 4 * v179) = v178;
          int v182 = (unsigned __int8 *)*v4;
          int v183 = *(_DWORD *)v5 - *v4;
          if (v183 >= 1)
          {
            signed int v184 = v183 / 6u;
            int v185 = v184 >= *((_DWORD *)this + 29) - v181 ? *((_DWORD *)this + 29) - v181 : v184;
            if (v185 >= 1)
            {
              int v186 = 0;
              while (*v182 == 189 && v182[1] == 1)
              {
                int v187 = *(_DWORD *)(v182 + 2);
                if (v181 >= *((_DWORD *)this + 29))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v181 = *((_DWORD *)this + 28);
                  uint64_t v180 = *((void *)this + 13);
                }
                *((_DWORD *)this + 28) = v181 + 1;
                *(_DWORD *)(v180 + 4 * v181) = v187;
                ++v186;
                v182 += 6;
                ++v181;
                if (v185 == v186)
                {
                  int v186 = v185;
                  break;
                }
              }
              if (v186) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_587:
          int v166 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v188 = *v166;
          if (v188 == 197) {
            break;
          }
          if (v188 != 189 || v166[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v166[1] != 1) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v166 + 2);
LABEL_594:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xC5) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v189 = v657[0];
          int v190 = *((_DWORD *)this + 32);
          if (v190 == *((_DWORD *)this + 33))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v8, v190 + 1);
            int v190 = *((_DWORD *)this + 32);
          }
          uint64_t v191 = *((void *)this + 15);
          int v192 = v190 + 1;
          *((_DWORD *)this + 32) = v190 + 1;
          *(_DWORD *)(v191 + 4 * v190) = v189;
          int v193 = (unsigned __int8 *)*v4;
          int v194 = *(_DWORD *)v5 - *v4;
          if (v194 >= 1)
          {
            signed int v195 = v194 / 6u;
            int v196 = v195 >= *((_DWORD *)this + 33) - v192 ? *((_DWORD *)this + 33) - v192 : v195;
            if (v196 >= 1)
            {
              int v197 = 0;
              while (*v193 == 197 && v193[1] == 1)
              {
                int v198 = *(_DWORD *)(v193 + 2);
                if (v192 >= *((_DWORD *)this + 33))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v192 = *((_DWORD *)this + 32);
                  uint64_t v191 = *((void *)this + 15);
                }
                *((_DWORD *)this + 32) = v192 + 1;
                *(_DWORD *)(v191 + 4 * v192) = v198;
                ++v197;
                v193 += 6;
                ++v192;
                if (v196 == v197)
                {
                  int v197 = v196;
                  break;
                }
              }
              if (v197) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_613:
          int v166 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v199 = *v166;
          if (v199 == 205) {
            break;
          }
          if (v199 != 197 || v166[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v166[1] != 1) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v166 + 2);
LABEL_620:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xCD) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v200 = v657[0];
          int v201 = *((_DWORD *)this + 36);
          if (v201 == *((_DWORD *)this + 37))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v7, v201 + 1);
            int v201 = *((_DWORD *)this + 36);
          }
          uint64_t v202 = *((void *)this + 17);
          int v203 = v201 + 1;
          *((_DWORD *)this + 36) = v201 + 1;
          *(_DWORD *)(v202 + 4 * v201) = v200;
          unsigned int v204 = (unsigned __int8 *)*v4;
          int v205 = *(_DWORD *)v5 - *v4;
          if (v205 >= 1)
          {
            signed int v206 = v205 / 6u;
            int v207 = v206 >= *((_DWORD *)this + 37) - v203 ? *((_DWORD *)this + 37) - v203 : v206;
            if (v207 >= 1)
            {
              int v208 = 0;
              while (*v204 == 205 && v204[1] == 1)
              {
                int v209 = *(_DWORD *)(v204 + 2);
                if (v203 >= *((_DWORD *)this + 37))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v203 = *((_DWORD *)this + 36);
                  uint64_t v202 = *((void *)this + 17);
                }
                *((_DWORD *)this + 36) = v203 + 1;
                *(_DWORD *)(v202 + 4 * v203) = v209;
                ++v208;
                v204 += 6;
                ++v203;
                if (v207 == v208)
                {
                  int v208 = v207;
                  break;
                }
              }
              if (v208) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_639:
          int v166 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v210 = *v166;
          if (v210 == 213) {
            break;
          }
          if (v210 != 205 || v166[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v166[1] != 1) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v166 + 2);
LABEL_646:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xD5) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v211 = v657[0];
          int v212 = *((_DWORD *)this + 40);
          if (v212 == *((_DWORD *)this + 41))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v6, v212 + 1);
            int v212 = *((_DWORD *)this + 40);
          }
          uint64_t v213 = *((void *)this + 19);
          int v214 = v212 + 1;
          *((_DWORD *)this + 40) = v212 + 1;
          *(_DWORD *)(v213 + 4 * v212) = v211;
          unsigned int v215 = (unsigned __int8 *)*v4;
          int v216 = *(_DWORD *)v5 - *v4;
          if (v216 >= 1)
          {
            signed int v217 = v216 / 6u;
            int v218 = v217 >= *((_DWORD *)this + 41) - v214 ? *((_DWORD *)this + 41) - v214 : v217;
            if (v218 >= 1)
            {
              int v219 = 0;
              while (*v215 == 213 && v215[1] == 1)
              {
                int v220 = *(_DWORD *)(v215 + 2);
                if (v214 >= *((_DWORD *)this + 41))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v214 = *((_DWORD *)this + 40);
                  uint64_t v213 = *((void *)this + 19);
                }
                *((_DWORD *)this + 40) = v214 + 1;
                *(_DWORD *)(v213 + 4 * v214) = v220;
                ++v219;
                v215 += 6;
                ++v214;
                if (v218 == v219)
                {
                  int v219 = v218;
                  break;
                }
              }
              if (v219) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_665:
          int v166 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v221 = *v166;
          if (v221 == 221) {
            break;
          }
          if (v221 != 213 || v166[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v166[1] != 1) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v166 + 2);
LABEL_672:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0xDD) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v222 = v657[0];
          int v223 = *((_DWORD *)this + 44);
          if (v223 == *((_DWORD *)this + 45))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v655, v223 + 1);
            int v223 = *((_DWORD *)this + 44);
          }
          uint64_t v224 = *((void *)this + 21);
          int v225 = v223 + 1;
          *((_DWORD *)this + 44) = v223 + 1;
          *(_DWORD *)(v224 + 4 * v223) = v222;
          int v226 = (unsigned __int8 *)*v4;
          int v227 = *(_DWORD *)v5 - *v4;
          if (v227 >= 1)
          {
            signed int v228 = v227 / 6u;
            int v229 = v228 >= *((_DWORD *)this + 45) - v225 ? *((_DWORD *)this + 45) - v225 : v228;
            if (v229 >= 1)
            {
              int v230 = 0;
              while (*v226 == 221 && v226[1] == 1)
              {
                int v231 = *(_DWORD *)(v226 + 2);
                if (v225 >= *((_DWORD *)this + 45))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v225 = *((_DWORD *)this + 44);
                  uint64_t v224 = *((void *)this + 21);
                }
                *((_DWORD *)this + 44) = v225 + 1;
                *(_DWORD *)(v224 + 4 * v225) = v231;
                ++v230;
                v226 += 6;
                ++v225;
                if (v229 == v230)
                {
                  int v230 = v229;
                  break;
                }
              }
              if (v230) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_691:
          unint64_t v28 = *v5;
          int v166 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v232 = *v166;
          if (v232 == 224) {
            break;
          }
          if (v232 != 221 || v166[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v166[1] != 1) {
          continue;
        }
        int v27 = v166 + 2;
        *uint64_t v4 = (unint64_t)v27;
LABEL_698:
        v657[0] = 0;
        if ((unint64_t)v27 >= v28 || (char)*v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v233 = v657[0];
          unint64_t v28 = *v5;
          unsigned int v234 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v233 = *v27;
          unsigned int v234 = v27 + 1;
          *uint64_t v4 = (unint64_t)v234;
        }
        *((unsigned char *)this + 70) = v233 != 0;
        *((_DWORD *)this + 217) |= 0x8000000u;
        if ((int)v28 - (int)v234 < 2 || *v234 != 232 || v234[1] != 1) {
          continue;
        }
        while (1)
        {
          int v29 = (char *)(v234 + 2);
          *uint64_t v4 = (unint64_t)v29;
LABEL_707:
          v656[0] = 0;
          if ((unint64_t)v29 >= v28 || *v29 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
          }
            }
          else
          {
            v656[0] = *v29;
            *uint64_t v4 = (unint64_t)(v29 + 1);
          }
          int v235 = *((_DWORD *)this + 50);
          if (v235 == *((_DWORD *)this + 51))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v639, v235 + 1);
            int v235 = *((_DWORD *)this + 50);
          }
          unsigned int v236 = v656[0];
          uint64_t v237 = *((void *)this + 24);
          *((_DWORD *)this + 50) = v235 + 1;
          *(_DWORD *)(v237 + 4 * v235) = v236;
          int v238 = *((_DWORD *)this + 51) - *((_DWORD *)this + 50);
          if (v238 >= 1)
          {
            int v239 = v238 + 1;
            do
            {
              unint64_t v240 = *v5;
              v241 = (unsigned __int8 *)*v4;
              if ((int)(*v5 - *v4) < 2 || *v241 != 232 || v241[1] != 1) {
                break;
              }
              *uint64_t v4 = (unint64_t)(v241 + 2);
              if ((unint64_t)(v241 + 2) >= v240 || (char)v241[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
              }
                }
              else
              {
                v656[0] = v241[2];
                *uint64_t v4 = (unint64_t)(v241 + 3);
              }
              int v242 = *((_DWORD *)this + 50);
              if (v242 >= *((_DWORD *)this + 51))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                int v242 = *((_DWORD *)this + 50);
              }
              unsigned int v243 = v656[0];
              uint64_t v244 = *((void *)this + 24);
              *((_DWORD *)this + 50) = v242 + 1;
              *(_DWORD *)(v244 + 4 * v242) = v243;
              --v239;
            }
            while (v239 > 1);
          }
LABEL_725:
          unint64_t v28 = *v5;
          unsigned int v234 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) < 2) {
            goto LABEL_2;
          }
          int v245 = *v234;
          if (v245 == 240) {
            break;
          }
          if (v245 != 232 || v234[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v234[1] != 1) {
          continue;
        }
        while (1)
        {
          int v30 = (char *)(v234 + 2);
          *uint64_t v4 = (unint64_t)v30;
LABEL_732:
          v656[0] = 0;
          if ((unint64_t)v30 >= v28 || *v30 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
          }
            }
          else
          {
            v656[0] = *v30;
            *uint64_t v4 = (unint64_t)(v30 + 1);
          }
          int v246 = *((_DWORD *)this + 54);
          if (v246 == *((_DWORD *)this + 55))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v644, v246 + 1);
            int v246 = *((_DWORD *)this + 54);
          }
          unsigned int v247 = v656[0];
          uint64_t v248 = *((void *)this + 26);
          *((_DWORD *)this + 54) = v246 + 1;
          *(_DWORD *)(v248 + 4 * v246) = v247;
          int v249 = *((_DWORD *)this + 55) - *((_DWORD *)this + 54);
          if (v249 >= 1)
          {
            int v250 = v249 + 1;
            do
            {
              unint64_t v251 = *v5;
              unsigned int v252 = (unsigned __int8 *)*v4;
              if ((int)(*v5 - *v4) < 2 || *v252 != 240 || v252[1] != 1) {
                break;
              }
              *uint64_t v4 = (unint64_t)(v252 + 2);
              if ((unint64_t)(v252 + 2) >= v251 || (char)v252[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
              }
                }
              else
              {
                v656[0] = v252[2];
                *uint64_t v4 = (unint64_t)(v252 + 3);
              }
              int v253 = *((_DWORD *)this + 54);
              if (v253 >= *((_DWORD *)this + 55))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                int v253 = *((_DWORD *)this + 54);
              }
              unsigned int v254 = v656[0];
              uint64_t v255 = *((void *)this + 26);
              *((_DWORD *)this + 54) = v253 + 1;
              *(_DWORD *)(v255 + 4 * v253) = v254;
              --v250;
            }
            while (v250 > 1);
          }
LABEL_750:
          unint64_t v28 = *v5;
          unsigned int v234 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) < 2) {
            goto LABEL_2;
          }
          int v256 = *v234;
          if (v256 == 248) {
            break;
          }
          if (v256 != 240 || v234[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v234[1] != 1) {
          continue;
        }
        while (1)
        {
          int v31 = (char *)(v234 + 2);
          *uint64_t v4 = (unint64_t)v31;
LABEL_757:
          v656[0] = 0;
          if ((unint64_t)v31 >= v28 || *v31 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
          }
            }
          else
          {
            v656[0] = *v31;
            *uint64_t v4 = (unint64_t)(v31 + 1);
          }
          int v257 = *((_DWORD *)this + 58);
          if (v257 == *((_DWORD *)this + 59))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v646, v257 + 1);
            int v257 = *((_DWORD *)this + 58);
          }
          unsigned int v258 = v656[0];
          uint64_t v259 = *((void *)this + 28);
          *((_DWORD *)this + 58) = v257 + 1;
          *(_DWORD *)(v259 + 4 * v257) = v258;
          int v260 = *((_DWORD *)this + 59) - *((_DWORD *)this + 58);
          if (v260 >= 1)
          {
            int v261 = v260 + 1;
            do
            {
              unint64_t v262 = *v5;
              unsigned int v263 = (unsigned __int8 *)*v4;
              if ((int)(*v5 - *v4) < 2 || *v263 != 248 || v263[1] != 1) {
                break;
              }
              *uint64_t v4 = (unint64_t)(v263 + 2);
              if ((unint64_t)(v263 + 2) >= v262 || (char)v263[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
              }
                }
              else
              {
                v656[0] = v263[2];
                *uint64_t v4 = (unint64_t)(v263 + 3);
              }
              int v264 = *((_DWORD *)this + 58);
              if (v264 >= *((_DWORD *)this + 59))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                int v264 = *((_DWORD *)this + 58);
              }
              unsigned int v265 = v656[0];
              uint64_t v266 = *((void *)this + 28);
              *((_DWORD *)this + 58) = v264 + 1;
              *(_DWORD *)(v266 + 4 * v264) = v265;
              --v261;
            }
            while (v261 > 1);
          }
LABEL_775:
          unint64_t v28 = *v5;
          unsigned int v234 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) < 2) {
            goto LABEL_2;
          }
          int v267 = *v234;
          if (v267 == 128) {
            break;
          }
          if (v267 != 248 || v234[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v234[1] != 2) {
          continue;
        }
        char v32 = v234 + 2;
        *uint64_t v4 = (unint64_t)v32;
LABEL_782:
        v657[0] = 0;
        if ((unint64_t)v32 >= v28 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v268 = v657[0];
          unint64_t v28 = *v5;
          unsigned int v269 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v268 = *v32;
          unsigned int v269 = v32 + 1;
          *uint64_t v4 = (unint64_t)v269;
        }
        *((unsigned char *)this + 71) = v268 != 0;
        *((_DWORD *)this + 217) |= 0x80000000;
        if ((int)v28 - (int)v269 < 2 || *v269 != 136 || v269[1] != 2) {
          continue;
        }
        int v122 = v269 + 2;
        *uint64_t v4 = (unint64_t)v122;
LABEL_791:
        v657[0] = 0;
        if ((unint64_t)v122 >= v28 || (char)*v122 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v270 = v657[0];
          unint64_t v28 = *v5;
          v271 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v270 = *v122;
          v271 = v122 + 1;
          *uint64_t v4 = (unint64_t)v271;
        }
        *((unsigned char *)this + 444) = v270 != 0;
        *((_DWORD *)this + 218) |= 1u;
        if ((int)v28 - (int)v271 < 2 || *v271 != 144 || v271[1] != 2) {
          continue;
        }
        char v33 = v271 + 2;
        *uint64_t v4 = (unint64_t)v33;
LABEL_800:
        v657[0] = 0;
        if ((unint64_t)v33 >= v28 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v272 = v657[0];
          unint64_t v28 = *v5;
          v273 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v272 = *v33;
          v273 = v33 + 1;
          *uint64_t v4 = (unint64_t)v273;
        }
        *((_DWORD *)this + 47) = v272;
        *((_DWORD *)this + 218) |= 2u;
        if ((int)v28 - (int)v273 < 2 || *v273 != 152 || v273[1] != 2) {
          continue;
        }
        unsigned int v34 = v273 + 2;
        *uint64_t v4 = (unint64_t)v34;
LABEL_809:
        v657[0] = 0;
        if ((unint64_t)v34 >= v28 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v274 = v657[0];
          unint64_t v28 = *v5;
          v275 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v274 = *v34;
          v275 = v34 + 1;
          *uint64_t v4 = (unint64_t)v275;
        }
        *((_DWORD *)this + 60) = v274;
        *((_DWORD *)this + 218) |= 4u;
        if ((int)v28 - (int)v275 < 2 || *v275 != 160 || v275[1] != 2) {
          continue;
        }
        int v35 = v275 + 2;
        *uint64_t v4 = (unint64_t)v35;
LABEL_818:
        v657[0] = 0;
        if ((unint64_t)v35 >= v28 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v276 = v657[0];
          unint64_t v28 = *v5;
          v277 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v276 = *v35;
          v277 = v35 + 1;
          *uint64_t v4 = (unint64_t)v277;
        }
        *((_DWORD *)this + 61) = v276;
        *((_DWORD *)this + 218) |= 8u;
        if ((int)v28 - (int)v277 < 2 || *v277 != 168 || v277[1] != 2) {
          continue;
        }
        int v36 = v277 + 2;
        *uint64_t v4 = (unint64_t)v36;
LABEL_827:
        v657[0] = 0;
        if ((unint64_t)v36 >= v28 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v278 = v657[0];
          unint64_t v28 = *v5;
          v279 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v278 = *v36;
          v279 = v36 + 1;
          *uint64_t v4 = (unint64_t)v279;
        }
        *((_DWORD *)this + 62) = v278;
        *((_DWORD *)this + 218) |= 0x10u;
        if ((int)v28 - (int)v279 < 2 || *v279 != 176 || v279[1] != 2) {
          continue;
        }
        int v123 = v279 + 2;
        *uint64_t v4 = (unint64_t)v123;
LABEL_836:
        v657[0] = 0;
        if ((unint64_t)v123 >= v28 || (char)*v123 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v280 = v657[0];
          unint64_t v28 = *v5;
          v281 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v280 = *v123;
          v281 = v123 + 1;
          *uint64_t v4 = (unint64_t)v281;
        }
        *((_DWORD *)this + 63) = v280;
        *((_DWORD *)this + 218) |= 0x20u;
        if ((int)v28 - (int)v281 < 2 || *v281 != 184 || v281[1] != 2) {
          continue;
        }
        int v37 = v281 + 2;
        *uint64_t v4 = (unint64_t)v37;
LABEL_845:
        v657[0] = 0;
        if ((unint64_t)v37 >= v28 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v282 = v657[0];
          unint64_t v28 = *v5;
          v283 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v282 = *v37;
          v283 = v37 + 1;
          *uint64_t v4 = (unint64_t)v283;
        }
        *((_DWORD *)this + 64) = v282;
        *((_DWORD *)this + 218) |= 0x40u;
        if ((int)v28 - (int)v283 < 2 || *v283 != 192 || v283[1] != 2) {
          continue;
        }
        int v124 = v283 + 2;
        *uint64_t v4 = (unint64_t)v124;
LABEL_854:
        v657[0] = 0;
        if ((unint64_t)v124 >= v28 || (char)*v124 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v284 = v657[0];
          unint64_t v28 = *v5;
          v285 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v284 = *v124;
          v285 = v124 + 1;
          *uint64_t v4 = (unint64_t)v285;
        }
        *((_DWORD *)this + 65) = v284;
        *((_DWORD *)this + 218) |= 0x80u;
        if ((int)v28 - (int)v285 < 2 || *v285 != 200 || v285[1] != 2) {
          continue;
        }
        int v38 = v285 + 2;
        *uint64_t v4 = (unint64_t)v38;
LABEL_863:
        v657[0] = 0;
        if ((unint64_t)v38 >= v28 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v286 = v657[0];
          unint64_t v28 = *v5;
          v287 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v286 = *v38;
          v287 = v38 + 1;
          *uint64_t v4 = (unint64_t)v287;
        }
        *((_DWORD *)this + 66) = v286;
        *((_DWORD *)this + 218) |= 0x100u;
        if ((int)v28 - (int)v287 < 2 || *v287 != 208 || v287[1] != 2) {
          continue;
        }
        int v125 = v287 + 2;
        *uint64_t v4 = (unint64_t)v125;
LABEL_872:
        v657[0] = 0;
        if ((unint64_t)v125 >= v28 || (char)*v125 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unsigned int v288 = v657[0];
          unint64_t v28 = *v5;
          v289 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v288 = *v125;
          v289 = v125 + 1;
          *uint64_t v4 = (unint64_t)v289;
        }
        *((_DWORD *)this + 67) = v288;
        *((_DWORD *)this + 218) |= 0x200u;
        if ((int)v28 - (int)v289 < 2 || *v289 != 221 || v289[1] != 2) {
          continue;
        }
        while (1)
        {
          *uint64_t v4 = (unint64_t)(v289 + 2);
LABEL_881:
          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x15D) != 2)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
          }
          v657[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
            return 0;
          }
          unsigned int v290 = v657[0];
          int v291 = *((_DWORD *)this + 70);
          if (v291 == *((_DWORD *)this + 71))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v640, v291 + 1);
            int v291 = *((_DWORD *)this + 70);
          }
          uint64_t v292 = *((void *)this + 34);
          int v293 = v291 + 1;
          *((_DWORD *)this + 70) = v291 + 1;
          *(_DWORD *)(v292 + 4 * v291) = v290;
          unsigned int v294 = (unsigned __int8 *)*v4;
          int v295 = *(_DWORD *)v5 - *v4;
          if (v295 >= 1)
          {
            signed int v296 = v295 / 6u;
            int v297 = v296 >= *((_DWORD *)this + 71) - v293 ? *((_DWORD *)this + 71) - v293 : v296;
            if (v297 >= 1)
            {
              int v298 = 0;
              while (*v294 == 221 && v294[1] == 2)
              {
                int v299 = *(_DWORD *)(v294 + 2);
                if (v293 >= *((_DWORD *)this + 71))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                  int v293 = *((_DWORD *)this + 70);
                  uint64_t v292 = *((void *)this + 34);
                }
                *((_DWORD *)this + 70) = v293 + 1;
                *(_DWORD *)(v292 + 4 * v293) = v299;
                ++v298;
                v294 += 6;
                ++v293;
                if (v297 == v298)
                {
                  int v298 = v297;
                  break;
                }
              }
              if (v298) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_900:
          v289 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v300 = *v289;
          if (v300 == 229) {
            break;
          }
          if (v300 != 221 || v289[1] != 2) {
            goto LABEL_2;
          }
        }
        if (v289[1] != 2) {
          continue;
        }
        *uint64_t v4 = (unint64_t)(v289 + 2);
LABEL_907:
        v657[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657))
        {
          *((_DWORD *)this + 72) = v657[0];
          *((_DWORD *)this + 218) |= 0x800u;
          v301 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v301 == 237 && v301[1] == 2)
          {
            while (1)
            {
              *uint64_t v4 = (unint64_t)(v301 + 2);
LABEL_912:
              if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x16D) != 2)
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
              }
              v657[0] = 0;
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
                return 0;
              }
              unsigned int v302 = v657[0];
              int v303 = *((_DWORD *)this + 76);
              if (v303 == *((_DWORD *)this + 77))
              {
                wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v649, v303 + 1);
                int v303 = *((_DWORD *)this + 76);
              }
              uint64_t v304 = *((void *)this + 37);
              int v305 = v303 + 1;
              *((_DWORD *)this + 76) = v303 + 1;
              *(_DWORD *)(v304 + 4 * v303) = v302;
              v306 = (unsigned __int8 *)*v4;
              int v307 = *(_DWORD *)v5 - *v4;
              if (v307 >= 1)
              {
                signed int v308 = v307 / 6u;
                int v309 = v308 >= *((_DWORD *)this + 77) - v305 ? *((_DWORD *)this + 77) - v305 : v308;
                if (v309 >= 1)
                {
                  int v310 = 0;
                  while (*v306 == 237 && v306[1] == 2)
                  {
                    int v311 = *(_DWORD *)(v306 + 2);
                    if (v305 >= *((_DWORD *)this + 77))
                    {
                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                      int v305 = *((_DWORD *)this + 76);
                      uint64_t v304 = *((void *)this + 37);
                    }
                    *((_DWORD *)this + 76) = v305 + 1;
                    *(_DWORD *)(v304 + 4 * v305) = v311;
                    ++v310;
                    v306 += 6;
                    ++v305;
                    if (v309 == v310)
                    {
                      int v310 = v309;
                      break;
                    }
                  }
                  if (v310) {
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                  }
                }
              }
LABEL_931:
              v301 = (unsigned __int8 *)*v4;
              if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                break;
              }
              int v312 = *v301;
              if (v312 == 245)
              {
                if (v301[1] == 2)
                {
                  *uint64_t v4 = (unint64_t)(v301 + 2);
LABEL_938:
                  v657[0] = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0)return 0; {
                  *((_DWORD *)this + 73) = v657[0];
                  }
                  *((_DWORD *)this + 218) |= 0x2000u;
                  unsigned int v313 = (unsigned __int8 *)*v4;
                  if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v313 == 253 && v313[1] == 2)
                  {
                    *uint64_t v4 = (unint64_t)(v313 + 2);
LABEL_943:
                    v657[0] = 0;
                    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0)return 0; {
                    *((_DWORD *)this + 78) = v657[0];
                    }
                    *((_DWORD *)this + 218) |= 0x4000u;
                    v314 = (unsigned __int8 *)*v4;
                    if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v314 == 133 && v314[1] == 3)
                    {
                      *uint64_t v4 = (unint64_t)(v314 + 2);
LABEL_948:
                      v657[0] = 0;
                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0)return 0; {
                      *((_DWORD *)this + 79) = v657[0];
                      }
                      int v39 = *((_DWORD *)this + 218) | 0x8000;
                      *((_DWORD *)this + 218) = v39;
                      unsigned int v315 = (unsigned __int8 *)*v4;
                      if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v315 == 138 && v315[1] == 3)
                      {
                        *uint64_t v4 = (unint64_t)(v315 + 2);
LABEL_953:
                        *((_DWORD *)this + 218) = v39 | 0x10000;
                        if (*((void *)this + 40) == MEMORY[0x263F8C740]) {
                          operator new();
                        }
                        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                        if (!result) {
                          return result;
                        }
                        v316 = (unsigned __int8 *)*v4;
                        if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v316 == 146 && v316[1] == 3)
                        {
                          *uint64_t v4 = (unint64_t)(v316 + 2);
LABEL_960:
                          *((_DWORD *)this + 218) |= 0x20000u;
                          if (*((void *)this + 41) == MEMORY[0x263F8C740]) {
                            operator new();
                          }
                          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                          if (!result) {
                            return result;
                          }
                          unsigned int v317 = (unsigned __int8 *)*v4;
                          if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v317 == 154 && v317[1] == 3)
                          {
                            *uint64_t v4 = (unint64_t)(v317 + 2);
LABEL_967:
                            *((_DWORD *)this + 218) |= 0x40000u;
                            if (*((void *)this + 42) == MEMORY[0x263F8C740]) {
                              operator new();
                            }
                            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                            if (!result) {
                              return result;
                            }
                            v318 = (unsigned __int8 *)*v4;
                            if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v318 == 162 && v318[1] == 3)
                            {
                              *uint64_t v4 = (unint64_t)(v318 + 2);
LABEL_974:
                              *((_DWORD *)this + 218) |= 0x80000u;
                              if (*((void *)this + 43) == MEMORY[0x263F8C740]) {
                                operator new();
                              }
                              uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                              if (!result) {
                                return result;
                              }
                              unsigned int v319 = (unsigned __int8 *)*v4;
                              if ((int)(*(_DWORD *)v5 - *v4) >= 2 && *v319 == 170 && v319[1] == 3)
                              {
                                *uint64_t v4 = (unint64_t)(v319 + 2);
LABEL_981:
                                *((_DWORD *)this + 218) |= 0x100000u;
                                if (*((void *)this + 44) == MEMORY[0x263F8C740]) {
                                  operator new();
                                }
                                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                                if (!result) {
                                  return result;
                                }
                                unint64_t v41 = *v5;
                                v320 = (unsigned __int8 *)*v4;
                                if ((int)(*v5 - *v4) >= 2 && *v320 == 176 && v320[1] == 3)
                                {
                                  while (1)
                                  {
                                    int v40 = (char *)(v320 + 2);
                                    *uint64_t v4 = (unint64_t)v40;
LABEL_988:
                                    v656[0] = 0;
                                    if ((unint64_t)v40 >= v41 || *v40 < 0)
                                    {
                                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
                                    }
                                      }
                                    else
                                    {
                                      v656[0] = *v40;
                                      *uint64_t v4 = (unint64_t)(v40 + 1);
                                    }
                                    int v321 = *((_DWORD *)this + 92);
                                    if (v321 == *((_DWORD *)this + 93))
                                    {
                                      wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v642, v321 + 1);
                                      int v321 = *((_DWORD *)this + 92);
                                    }
                                    unsigned int v322 = v656[0];
                                    uint64_t v323 = *((void *)this + 45);
                                    *((_DWORD *)this + 92) = v321 + 1;
                                    *(_DWORD *)(v323 + 4 * v321) = v322;
                                    int v324 = *((_DWORD *)this + 93) - *((_DWORD *)this + 92);
                                    if (v324 >= 1)
                                    {
                                      int v325 = v324 + 1;
                                      do
                                      {
                                        unint64_t v326 = *v5;
                                        unsigned int v327 = (unsigned __int8 *)*v4;
                                        if ((int)(*v5 - *v4) < 2 || *v327 != 176 || v327[1] != 3) {
                                          break;
                                        }
                                        *uint64_t v4 = (unint64_t)(v327 + 2);
                                        if ((unint64_t)(v327 + 2) >= v326 || (char)v327[2] < 0)
                                        {
                                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656))return 0; {
                                        }
                                          }
                                        else
                                        {
                                          v656[0] = v327[2];
                                          *uint64_t v4 = (unint64_t)(v327 + 3);
                                        }
                                        int v328 = *((_DWORD *)this + 92);
                                        if (v328 >= *((_DWORD *)this + 93))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                          int v328 = *((_DWORD *)this + 92);
                                        }
                                        unsigned int v329 = v656[0];
                                        uint64_t v330 = *((void *)this + 45);
                                        *((_DWORD *)this + 92) = v328 + 1;
                                        *(_DWORD *)(v330 + 4 * v328) = v329;
                                        --v325;
                                      }
                                      while (v325 > 1);
                                    }
LABEL_1006:
                                    unint64_t v41 = *v5;
                                    v320 = (unsigned __int8 *)*v4;
                                    if ((int)(*v5 - *v4) < 2) {
                                      break;
                                    }
                                    int v331 = *v320;
                                    if (v331 == 184)
                                    {
                                      if (v320[1] == 3)
                                      {
                                        char v42 = v320 + 2;
                                        *uint64_t v4 = (unint64_t)v42;
LABEL_1013:
                                        v657[0] = 0;
                                        if ((unint64_t)v42 >= v41 || (char)*v42 < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                          if (!result) {
                                            return result;
                                          }
                                          unsigned int v332 = v657[0];
                                          unint64_t v41 = *v5;
                                          v333 = (unsigned __int8 *)*v4;
                                        }
                                        else
                                        {
                                          unsigned int v332 = *v42;
                                          v333 = v42 + 1;
                                          *uint64_t v4 = (unint64_t)v333;
                                        }
                                        *((_DWORD *)this + 94) = v332;
                                        *((_DWORD *)this + 218) |= 0x400000u;
                                        if ((int)v41 - (int)v333 >= 2 && *v333 == 192 && v333[1] == 3)
                                        {
                                          int v126 = v333 + 2;
                                          *uint64_t v4 = (unint64_t)v126;
LABEL_1022:
                                          v657[0] = 0;
                                          if ((unint64_t)v126 >= v41 || (char)*v126 < 0)
                                          {
                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                            if (!result) {
                                              return result;
                                            }
                                            unsigned int v334 = v657[0];
                                            unint64_t v41 = *v5;
                                            unsigned int v335 = (unsigned __int8 *)*v4;
                                          }
                                          else
                                          {
                                            unsigned int v334 = *v126;
                                            unsigned int v335 = v126 + 1;
                                            *uint64_t v4 = (unint64_t)v335;
                                          }
                                          *((_DWORD *)this + 95) = v334;
                                          *((_DWORD *)this + 218) |= 0x800000u;
                                          if ((int)v41 - (int)v335 >= 2 && *v335 == 200 && v335[1] == 3)
                                          {
                                            unsigned int v43 = v335 + 2;
                                            *uint64_t v4 = (unint64_t)v43;
LABEL_1031:
                                            v657[0] = 0;
                                            if ((unint64_t)v43 >= v41 || (char)*v43 < 0)
                                            {
                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                              if (!result) {
                                                return result;
                                              }
                                              unsigned int v336 = v657[0];
                                              unint64_t v41 = *v5;
                                              unsigned int v337 = (unsigned __int8 *)*v4;
                                            }
                                            else
                                            {
                                              unsigned int v336 = *v43;
                                              unsigned int v337 = v43 + 1;
                                              *uint64_t v4 = (unint64_t)v337;
                                            }
                                            *((_DWORD *)this + 96) = v336;
                                            *((_DWORD *)this + 218) |= 0x1000000u;
                                            if ((int)v41 - (int)v337 >= 2 && *v337 == 208 && v337[1] == 3)
                                            {
                                              int v44 = v337 + 2;
                                              *uint64_t v4 = (unint64_t)v44;
LABEL_1040:
                                              v657[0] = 0;
                                              if ((unint64_t)v44 >= v41 || (char)*v44 < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                if (!result) {
                                                  return result;
                                                }
                                                unsigned int v338 = v657[0];
                                                unint64_t v41 = *v5;
                                                unsigned int v339 = (unsigned __int8 *)*v4;
                                              }
                                              else
                                              {
                                                unsigned int v338 = *v44;
                                                unsigned int v339 = v44 + 1;
                                                *uint64_t v4 = (unint64_t)v339;
                                              }
                                              *((_DWORD *)this + 97) = v338;
                                              *((_DWORD *)this + 218) |= 0x2000000u;
                                              if ((int)v41 - (int)v339 >= 2 && *v339 == 216 && v339[1] == 3)
                                              {
                                                int v45 = v339 + 2;
                                                *uint64_t v4 = (unint64_t)v45;
LABEL_1049:
                                                v657[0] = 0;
                                                if ((unint64_t)v45 >= v41 || (char)*v45 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  unsigned int v340 = v657[0];
                                                  unint64_t v41 = *v5;
                                                  unsigned int v341 = (unsigned __int8 *)*v4;
                                                }
                                                else
                                                {
                                                  unsigned int v340 = *v45;
                                                  unsigned int v341 = v45 + 1;
                                                  *uint64_t v4 = (unint64_t)v341;
                                                }
                                                *((_DWORD *)this + 98) = v340;
                                                *((_DWORD *)this + 218) |= 0x4000000u;
                                                if ((int)v41 - (int)v341 >= 2 && *v341 == 224 && v341[1] == 3)
                                                {
                                                  int v46 = v341 + 2;
                                                  *uint64_t v4 = (unint64_t)v46;
LABEL_1058:
                                                  v657[0] = 0;
                                                  if ((unint64_t)v46 >= v41 || (char)*v46 < 0)
                                                  {
                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                    if (!result) {
                                                      return result;
                                                    }
                                                    unsigned int v342 = v657[0];
                                                    unint64_t v41 = *v5;
                                                    v343 = (unsigned __int8 *)*v4;
                                                  }
                                                  else
                                                  {
                                                    unsigned int v342 = *v46;
                                                    v343 = v46 + 1;
                                                    *uint64_t v4 = (unint64_t)v343;
                                                  }
                                                  *((_DWORD *)this + 99) = v342;
                                                  *((_DWORD *)this + 218) |= 0x8000000u;
                                                  if ((int)v41 - (int)v343 >= 2 && *v343 == 232 && v343[1] == 3)
                                                  {
                                                    int v47 = v343 + 2;
                                                    *uint64_t v4 = (unint64_t)v47;
LABEL_1067:
                                                    v657[0] = 0;
                                                    if ((unint64_t)v47 >= v41 || (char)*v47 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                      if (!result) {
                                                        return result;
                                                      }
                                                      unsigned int v344 = v657[0];
                                                      unint64_t v41 = *v5;
                                                      v345 = (unsigned __int8 *)*v4;
                                                    }
                                                    else
                                                    {
                                                      unsigned int v344 = *v47;
                                                      v345 = v47 + 1;
                                                      *uint64_t v4 = (unint64_t)v345;
                                                    }
                                                    *((_DWORD *)this + 100) = v344;
                                                    *((_DWORD *)this + 218) |= 0x10000000u;
                                                    if ((int)v41 - (int)v345 >= 2 && *v345 == 240 && v345[1] == 3)
                                                    {
                                                      int v48 = v345 + 2;
                                                      *uint64_t v4 = (unint64_t)v48;
LABEL_1076:
                                                      v657[0] = 0;
                                                      if ((unint64_t)v48 >= v41 || (char)*v48 < 0)
                                                      {
                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                        if (!result) {
                                                          return result;
                                                        }
                                                        unsigned int v346 = v657[0];
                                                        unint64_t v41 = *v5;
                                                        v347 = (unsigned __int8 *)*v4;
                                                      }
                                                      else
                                                      {
                                                        unsigned int v346 = *v48;
                                                        v347 = v48 + 1;
                                                        *uint64_t v4 = (unint64_t)v347;
                                                      }
                                                      *((_DWORD *)this + 101) = v346;
                                                      *((_DWORD *)this + 218) |= 0x20000000u;
                                                      if ((int)v41 - (int)v347 >= 2 && *v347 == 248 && v347[1] == 3)
                                                      {
                                                        int v49 = v347 + 2;
                                                        *uint64_t v4 = (unint64_t)v49;
LABEL_1085:
                                                        v657[0] = 0;
                                                        if ((unint64_t)v49 >= v41 || (char)*v49 < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                          if (!result) {
                                                            return result;
                                                          }
                                                          unsigned int v348 = v657[0];
                                                          unint64_t v41 = *v5;
                                                          v349 = (unsigned __int8 *)*v4;
                                                        }
                                                        else
                                                        {
                                                          unsigned int v348 = *v49;
                                                          v349 = v49 + 1;
                                                          *uint64_t v4 = (unint64_t)v349;
                                                        }
                                                        *((_DWORD *)this + 102) = v348;
                                                        *((_DWORD *)this + 218) |= 0x40000000u;
                                                        if ((int)v41 - (int)v349 >= 2 && *v349 == 128 && v349[1] == 4)
                                                        {
                                                          int v50 = v349 + 2;
                                                          *uint64_t v4 = (unint64_t)v50;
LABEL_1094:
                                                          v657[0] = 0;
                                                          if ((unint64_t)v50 >= v41 || (char)*v50 < 0)
                                                          {
                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                            if (!result) {
                                                              return result;
                                                            }
                                                            unsigned int v350 = v657[0];
                                                            unint64_t v41 = *v5;
                                                            v351 = (unsigned __int8 *)*v4;
                                                          }
                                                          else
                                                          {
                                                            unsigned int v350 = *v50;
                                                            v351 = v50 + 1;
                                                            *uint64_t v4 = (unint64_t)v351;
                                                          }
                                                          *((_DWORD *)this + 103) = v350;
                                                          *((_DWORD *)this + 218) |= 0x80000000;
                                                          if ((int)v41 - (int)v351 >= 2 && *v351 == 136 && v351[1] == 4)
                                                          {
                                                            int v51 = v351 + 2;
                                                            *uint64_t v4 = (unint64_t)v51;
LABEL_1103:
                                                            v657[0] = 0;
                                                            if ((unint64_t)v51 >= v41 || (char)*v51 < 0)
                                                            {
                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                              if (!result) {
                                                                return result;
                                                              }
                                                              unsigned int v352 = v657[0];
                                                              unint64_t v41 = *v5;
                                                              v353 = (unsigned __int8 *)*v4;
                                                            }
                                                            else
                                                            {
                                                              unsigned int v352 = *v51;
                                                              v353 = v51 + 1;
                                                              *uint64_t v4 = (unint64_t)v353;
                                                            }
                                                            *((_DWORD *)this + 104) = v352;
                                                            *((_DWORD *)this + 219) |= 1u;
                                                            if ((int)v41 - (int)v353 >= 2
                                                              && *v353 == 144
                                                              && v353[1] == 4)
                                                            {
                                                              int v127 = v353 + 2;
                                                              *uint64_t v4 = (unint64_t)v127;
LABEL_1112:
                                                              v657[0] = 0;
                                                              if ((unint64_t)v127 >= v41 || (char)*v127 < 0)
                                                              {
                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                if (!result) {
                                                                  return result;
                                                                }
                                                                unsigned int v354 = v657[0];
                                                                unint64_t v41 = *v5;
                                                                v355 = (unsigned __int8 *)*v4;
                                                              }
                                                              else
                                                              {
                                                                unsigned int v354 = *v127;
                                                                v355 = v127 + 1;
                                                                *uint64_t v4 = (unint64_t)v355;
                                                              }
                                                              *((_DWORD *)this + 105) = v354;
                                                              *((_DWORD *)this + 219) |= 2u;
                                                              if ((int)v41 - (int)v355 >= 2
                                                                && *v355 == 152
                                                                && v355[1] == 4)
                                                              {
                                                                uint64_t v52 = v355 + 2;
                                                                *uint64_t v4 = (unint64_t)v52;
LABEL_1121:
                                                                v657[0] = 0;
                                                                if ((unint64_t)v52 >= v41 || (char)*v52 < 0)
                                                                {
                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                  if (!result) {
                                                                    return result;
                                                                  }
                                                                  unsigned int v356 = v657[0];
                                                                  unint64_t v41 = *v5;
                                                                  v357 = (unsigned __int8 *)*v4;
                                                                }
                                                                else
                                                                {
                                                                  unsigned int v356 = *v52;
                                                                  v357 = v52 + 1;
                                                                  *uint64_t v4 = (unint64_t)v357;
                                                                }
                                                                *((_DWORD *)this + 106) = v356;
                                                                *((_DWORD *)this + 219) |= 4u;
                                                                if ((int)v41 - (int)v357 >= 2
                                                                  && *v357 == 160
                                                                  && v357[1] == 4)
                                                                {
                                                                  char v53 = v357 + 2;
                                                                  *uint64_t v4 = (unint64_t)v53;
LABEL_1130:
                                                                  v657[0] = 0;
                                                                  if ((unint64_t)v53 >= v41 || (char)*v53 < 0)
                                                                  {
                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                    if (!result) {
                                                                      return result;
                                                                    }
                                                                    unsigned int v358 = v657[0];
                                                                    unint64_t v41 = *v5;
                                                                    v359 = (unsigned __int8 *)*v4;
                                                                  }
                                                                  else
                                                                  {
                                                                    unsigned int v358 = *v53;
                                                                    v359 = v53 + 1;
                                                                    *uint64_t v4 = (unint64_t)v359;
                                                                  }
                                                                  *((_DWORD *)this + 107) = v358;
                                                                  *((_DWORD *)this + 219) |= 8u;
                                                                  if ((int)v41 - (int)v359 >= 2
                                                                    && *v359 == 168
                                                                    && v359[1] == 4)
                                                                  {
                                                                    char v54 = v359 + 2;
                                                                    *uint64_t v4 = (unint64_t)v54;
LABEL_1139:
                                                                    v657[0] = 0;
                                                                    if ((unint64_t)v54 >= v41 || (char)*v54 < 0)
                                                                    {
                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                      if (!result) {
                                                                        return result;
                                                                      }
                                                                      unsigned int v360 = v657[0];
                                                                      unint64_t v41 = *v5;
                                                                      v361 = (unsigned __int8 *)*v4;
                                                                    }
                                                                    else
                                                                    {
                                                                      unsigned int v360 = *v54;
                                                                      v361 = v54 + 1;
                                                                      *uint64_t v4 = (unint64_t)v361;
                                                                    }
                                                                    *((_DWORD *)this + 108) = v360;
                                                                    *((_DWORD *)this + 219) |= 0x10u;
                                                                    if ((int)v41 - (int)v361 >= 2
                                                                      && *v361 == 176
                                                                      && v361[1] == 4)
                                                                    {
                                                                      int v55 = v361 + 2;
                                                                      *uint64_t v4 = (unint64_t)v55;
LABEL_1148:
                                                                      v657[0] = 0;
                                                                      if ((unint64_t)v55 >= v41
                                                                        || (char)*v55 < 0)
                                                                      {
                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                        if (!result) {
                                                                          return result;
                                                                        }
                                                                        unsigned int v362 = v657[0];
                                                                        unint64_t v41 = *v5;
                                                                        v363 = (unsigned __int8 *)*v4;
                                                                      }
                                                                      else
                                                                      {
                                                                        unsigned int v362 = *v55;
                                                                        v363 = v55 + 1;
                                                                        *uint64_t v4 = (unint64_t)v363;
                                                                      }
                                                                      *((_DWORD *)this + 109) = v362;
                                                                      *((_DWORD *)this + 219) |= 0x20u;
                                                                      if ((int)v41 - (int)v363 >= 2
                                                                        && *v363 == 184
                                                                        && v363[1] == 4)
                                                                      {
                                                                        int v128 = v363 + 2;
                                                                        *uint64_t v4 = (unint64_t)v128;
LABEL_1157:
                                                                        v657[0] = 0;
                                                                        if ((unint64_t)v128 >= v41
                                                                          || (char)*v128 < 0)
                                                                        {
                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                          if (!result) {
                                                                            return result;
                                                                          }
                                                                          unsigned int v364 = v657[0];
                                                                          unint64_t v41 = *v5;
                                                                          v365 = (unsigned __int8 *)*v4;
                                                                        }
                                                                        else
                                                                        {
                                                                          unsigned int v364 = *v128;
                                                                          v365 = v128 + 1;
                                                                          *uint64_t v4 = (unint64_t)v365;
                                                                        }
                                                                        *((_DWORD *)this + 110) = v364;
                                                                        *((_DWORD *)this + 219) |= 0x40u;
                                                                        if ((int)v41 - (int)v365 >= 2
                                                                          && *v365 == 192
                                                                          && v365[1] == 4)
                                                                        {
                                                                          int v129 = v365 + 2;
                                                                          *uint64_t v4 = (unint64_t)v129;
LABEL_1166:
                                                                          v657[0] = 0;
                                                                          if ((unint64_t)v129 >= v41
                                                                            || (char)*v129 < 0)
                                                                          {
                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                            if (!result) {
                                                                              return result;
                                                                            }
                                                                            unsigned int v366 = v657[0];
                                                                            unint64_t v41 = *v5;
                                                                            v367 = (unsigned __int8 *)*v4;
                                                                          }
                                                                          else
                                                                          {
                                                                            unsigned int v366 = *v129;
                                                                            v367 = v129 + 1;
                                                                            *uint64_t v4 = (unint64_t)v367;
                                                                          }
                                                                          *((_DWORD *)this + 112) = v366;
                                                                          *((_DWORD *)this + 219) |= 0x80u;
                                                                          if ((int)v41 - (int)v367 >= 2
                                                                            && *v367 == 200
                                                                            && v367[1] == 4)
                                                                          {
                                                                            int v56 = v367 + 2;
                                                                            *uint64_t v4 = (unint64_t)v56;
LABEL_1175:
                                                                            v657[0] = 0;
                                                                            if ((unint64_t)v56 >= v41
                                                                              || (char)*v56 < 0)
                                                                            {
                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                              if (!result) {
                                                                                return result;
                                                                              }
                                                                              unsigned int v368 = v657[0];
                                                                              unint64_t v41 = *v5;
                                                                              v369 = (unsigned __int8 *)*v4;
                                                                            }
                                                                            else
                                                                            {
                                                                              unsigned int v368 = *v56;
                                                                              v369 = v56 + 1;
                                                                              *uint64_t v4 = (unint64_t)v369;
                                                                            }
                                                                            *((_DWORD *)this + 113) = v368;
                                                                            *((_DWORD *)this + 219) |= 0x100u;
                                                                            if ((int)v41 - (int)v369 >= 2
                                                                              && *v369 == 208
                                                                              && v369[1] == 4)
                                                                            {
                                                                              int v130 = v369 + 2;
                                                                              *uint64_t v4 = (unint64_t)v130;
LABEL_1184:
                                                                              v657[0] = 0;
                                                                              if ((unint64_t)v130 >= v41
                                                                                || (char)*v130 < 0)
                                                                              {
                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                if (!result) {
                                                                                  return result;
                                                                                }
                                                                                unsigned int v370 = v657[0];
                                                                                unint64_t v41 = *v5;
                                                                                v371 = (unsigned __int8 *)*v4;
                                                                              }
                                                                              else
                                                                              {
                                                                                unsigned int v370 = *v130;
                                                                                v371 = v130 + 1;
                                                                                *uint64_t v4 = (unint64_t)v371;
                                                                              }
                                                                              *((_DWORD *)this + 114) = v370;
                                                                              *((_DWORD *)this + 219) |= 0x200u;
                                                                              if ((int)v41 - (int)v371 >= 2
                                                                                && *v371 == 216
                                                                                && v371[1] == 4)
                                                                              {
                                                                                int v131 = v371 + 2;
                                                                                *uint64_t v4 = (unint64_t)v131;
LABEL_1193:
                                                                                v657[0] = 0;
                                                                                if ((unint64_t)v131 >= v41
                                                                                  || (char)*v131 < 0)
                                                                                {
                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                  if (!result) {
                                                                                    return result;
                                                                                  }
                                                                                  unsigned int v372 = v657[0];
                                                                                  unint64_t v41 = *v5;
                                                                                  v373 = (unsigned __int8 *)*v4;
                                                                                }
                                                                                else
                                                                                {
                                                                                  unsigned int v372 = *v131;
                                                                                  v373 = v131 + 1;
                                                                                  *uint64_t v4 = (unint64_t)v373;
                                                                                }
                                                                                *((_DWORD *)this + 115) = v372;
                                                                                *((_DWORD *)this + 219) |= 0x400u;
                                                                                if ((int)v41 - (int)v373 >= 2
                                                                                  && *v373 == 224
                                                                                  && v373[1] == 4)
                                                                                {
                                                                                  int v57 = v373 + 2;
                                                                                  *uint64_t v4 = (unint64_t)v57;
LABEL_1202:
                                                                                  v657[0] = 0;
                                                                                  if ((unint64_t)v57 >= v41
                                                                                    || (char)*v57 < 0)
                                                                                  {
                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                    if (!result) {
                                                                                      return result;
                                                                                    }
                                                                                    unsigned int v374 = v657[0];
                                                                                    v375 = (unsigned __int8 *)*v4;
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    unsigned int v374 = *v57;
                                                                                    v375 = v57 + 1;
                                                                                    *uint64_t v4 = (unint64_t)v375;
                                                                                  }
                                                                                  *((_DWORD *)this + 116) = v374;
                                                                                  *((_DWORD *)this + 219) |= 0x800u;
                                                                                  unint64_t v59 = *v5;
                                                                                  if ((int)(*v5 - v375) >= 2
                                                                                    && *v375 == 232
                                                                                    && v375[1] == 4)
                                                                                  {
                                                                                    int v132 = v375 + 2;
                                                                                    *uint64_t v4 = (unint64_t)v132;
LABEL_1211:
                                                                                    v657[0] = 0;
                                                                                    if ((unint64_t)v132 >= v59
                                                                                      || (char)*v132 < 0)
                                                                                    {
                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                      if (!result) {
                                                                                        return result;
                                                                                      }
                                                                                      unsigned int v376 = v657[0];
                                                                                      unint64_t v59 = *v5;
                                                                                      v377 = (unsigned __int8 *)*v4;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      unsigned int v376 = *v132;
                                                                                      v377 = v132 + 1;
                                                                                      *uint64_t v4 = (unint64_t)v377;
                                                                                    }
                                                                                    *((_DWORD *)this + 117) = v376;
                                                                                    *((_DWORD *)this + 219) |= 0x1000u;
                                                                                    if ((int)v59 - (int)v377 >= 2
                                                                                      && *v377 == 240
                                                                                      && v377[1] == 4)
                                                                                    {
                                                                                      int v58 = v377 + 2;
                                                                                      *uint64_t v4 = (unint64_t)v58;
LABEL_1220:
                                                                                      v657[0] = 0;
                                                                                      if ((unint64_t)v58 >= v59
                                                                                        || (char)*v58 < 0)
                                                                                      {
                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                        if (!result) {
                                                                                          return result;
                                                                                        }
                                                                                        unsigned int v378 = v657[0];
                                                                                        unint64_t v59 = *v5;
                                                                                        v379 = (unsigned __int8 *)*v4;
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        unsigned int v378 = *v58;
                                                                                        v379 = v58 + 1;
                                                                                        *uint64_t v4 = (unint64_t)v379;
                                                                                      }
                                                                                      *((_DWORD *)this + 118) = v378;
                                                                                      *((_DWORD *)this + 219) |= 0x2000u;
                                                                                      if ((int)v59 - (int)v379 >= 2
                                                                                        && *v379 == 248
                                                                                        && v379[1] == 4)
                                                                                      {
                                                                                        int v133 = v379 + 2;
                                                                                        *uint64_t v4 = (unint64_t)v133;
LABEL_1229:
                                                                                        v657[0] = 0;
                                                                                        if ((unint64_t)v133 >= v59
                                                                                          || (char)*v133 < 0)
                                                                                        {
                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                          if (!result) {
                                                                                            return result;
                                                                                          }
                                                                                          unsigned int v380 = v657[0];
                                                                                          unint64_t v59 = *v5;
                                                                                          v381 = (unsigned __int8 *)*v4;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          unsigned int v380 = *v133;
                                                                                          v381 = v133 + 1;
                                                                                          *uint64_t v4 = (unint64_t)v381;
                                                                                        }
                                                                                        *((_DWORD *)this + 119) = v380;
                                                                                        *((_DWORD *)this + 219) |= 0x4000u;
                                                                                        if ((int)v59 - (int)v381 >= 2
                                                                                          && *v381 == 128
                                                                                          && v381[1] == 5)
                                                                                        {
                                                                                          int v134 = v381 + 2;
                                                                                          *uint64_t v4 = (unint64_t)v134;
LABEL_1238:
                                                                                          v657[0] = 0;
                                                                                          if ((unint64_t)v134 >= v59
                                                                                            || (char)*v134 < 0)
                                                                                          {
                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                            if (!result) {
                                                                                              return result;
                                                                                            }
                                                                                            unsigned int v382 = v657[0];
                                                                                            unint64_t v59 = *v5;
                                                                                            v383 = (unsigned __int8 *)*v4;
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            unsigned int v382 = *v134;
                                                                                            v383 = v134 + 1;
                                                                                            *uint64_t v4 = (unint64_t)v383;
                                                                                          }
                                                                                          *((_DWORD *)this + 120) = v382;
                                                                                          *((_DWORD *)this + 219) |= 0x8000u;
                                                                                          if ((int)v59 - (int)v383 >= 2
                                                                                            && *v383 == 136
                                                                                            && v383[1] == 5)
                                                                                          {
                                                                                            int v135 = v383 + 2;
                                                                                            *uint64_t v4 = (unint64_t)v135;
LABEL_1247:
                                                                                            v657[0] = 0;
                                                                                            if ((unint64_t)v135 >= v59
                                                                                              || (char)*v135 < 0)
                                                                                            {
                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                              if (!result) {
                                                                                                return result;
                                                                                              }
                                                                                              unsigned int v384 = v657[0];
                                                                                              unint64_t v59 = *v5;
                                                                                              v385 = (unsigned __int8 *)*v4;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              unsigned int v384 = *v135;
                                                                                              v385 = v135 + 1;
                                                                                              *uint64_t v4 = (unint64_t)v385;
                                                                                            }
                                                                                            *((_DWORD *)this + 121) = v384;
                                                                                            *((_DWORD *)this + 219) |= 0x10000u;
                                                                                            if ((int)v59 - (int)v385 >= 2
                                                                                              && *v385 == 144
                                                                                              && v385[1] == 5)
                                                                                            {
                                                                                              int v136 = v385 + 2;
                                                                                              *uint64_t v4 = (unint64_t)v136;
LABEL_1256:
                                                                                              v657[0] = 0;
                                                                                              if ((unint64_t)v136 >= v59
                                                                                                || (char)*v136 < 0)
                                                                                              {
                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                if (!result) {
                                                                                                  return result;
                                                                                                }
                                                                                                unsigned int v386 = v657[0];
                                                                                                unint64_t v59 = *v5;
                                                                                                v387 = (unsigned __int8 *)*v4;
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                unsigned int v386 = *v136;
                                                                                                v387 = v136 + 1;
                                                                                                *uint64_t v4 = (unint64_t)v387;
                                                                                              }
                                                                                              *((_DWORD *)this + 122) = v386;
                                                                                              *((_DWORD *)this + 219) |= 0x20000u;
                                                                                              if ((int)v59 - (int)v387 >= 2
                                                                                                && *v387 == 152
                                                                                                && v387[1] == 5)
                                                                                              {
                                                                                                int v60 = v387 + 2;
                                                                                                *uint64_t v4 = (unint64_t)v60;
LABEL_1265:
                                                                                                v657[0] = 0;
                                                                                                if ((unint64_t)v60 >= v59 || (char)*v60 < 0)
                                                                                                {
                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                  if (!result) {
                                                                                                    return result;
                                                                                                  }
                                                                                                  unsigned int v388 = v657[0];
                                                                                                  unint64_t v59 = *v5;
                                                                                                  v389 = (unsigned __int8 *)*v4;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  unsigned int v388 = *v60;
                                                                                                  v389 = v60 + 1;
                                                                                                  *uint64_t v4 = (unint64_t)v389;
                                                                                                }
                                                                                                *((_DWORD *)this + 123) = v388;
                                                                                                *((_DWORD *)this + 219) |= 0x40000u;
                                                                                                if ((int)v59 - (int)v389 >= 2 && *v389 == 160 && v389[1] == 5)
                                                                                                {
                                                                                                  int v137 = v389 + 2;
                                                                                                  *uint64_t v4 = (unint64_t)v137;
LABEL_1274:
                                                                                                  v657[0] = 0;
                                                                                                  if ((unint64_t)v137 >= v59 || (char)*v137 < 0)
                                                                                                  {
                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                    if (!result) {
                                                                                                      return result;
                                                                                                    }
                                                                                                    unsigned int v390 = v657[0];
                                                                                                    unint64_t v59 = *v5;
                                                                                                    v391 = (unsigned __int8 *)*v4;
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    unsigned int v390 = *v137;
                                                                                                    v391 = v137 + 1;
                                                                                                    *uint64_t v4 = (unint64_t)v391;
                                                                                                  }
                                                                                                  *((unsigned char *)this + 445) = v390 != 0;
                                                                                                  *((_DWORD *)this + 219) |= 0x80000u;
                                                                                                  if ((int)v59 - (int)v391 >= 2 && *v391 == 168 && v391[1] == 5)
                                                                                                  {
                                                                                                    int v138 = v391 + 2;
                                                                                                    *uint64_t v4 = (unint64_t)v138;
LABEL_1283:
                                                                                                    v657[0] = 0;
                                                                                                    if ((unint64_t)v138 >= v59 || (char)*v138 < 0)
                                                                                                    {
                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                      if (!result) {
                                                                                                        return result;
                                                                                                      }
                                                                                                      unsigned int v392 = v657[0];
                                                                                                      unint64_t v59 = *v5;
                                                                                                      v393 = (unsigned __int8 *)*v4;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      unsigned int v392 = *v138;
                                                                                                      v393 = v138 + 1;
                                                                                                      *uint64_t v4 = (unint64_t)v393;
                                                                                                    }
                                                                                                    *((unsigned char *)this + 446) = v392 != 0;
                                                                                                    *((_DWORD *)this + 219) |= 0x100000u;
                                                                                                    if ((int)v59 - (int)v393 >= 2 && *v393 == 176 && v393[1] == 5)
                                                                                                    {
                                                                                                      int v61 = v393 + 2;
                                                                                                      *uint64_t v4 = (unint64_t)v61;
LABEL_1292:
                                                                                                      v657[0] = 0;
                                                                                                      if ((unint64_t)v61 >= v59 || (char)*v61 < 0)
                                                                                                      {
                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                        if (!result) {
                                                                                                          return result;
                                                                                                        }
                                                                                                        unsigned int v394 = v657[0];
                                                                                                        unint64_t v59 = *v5;
                                                                                                        v395 = (unsigned __int8 *)*v4;
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        unsigned int v394 = *v61;
                                                                                                        v395 = v61 + 1;
                                                                                                        *uint64_t v4 = (unint64_t)v395;
                                                                                                      }
                                                                                                      *((unsigned char *)this + 447) = v394 != 0;
                                                                                                      *((_DWORD *)this + 219) |= 0x200000u;
                                                                                                      if ((int)v59 - (int)v395 >= 2 && *v395 == 184 && v395[1] == 5)
                                                                                                      {
                                                                                                        while (1)
                                                                                                        {
                                                                                                          int v62 = (char *)(v395 + 2);
                                                                                                          *uint64_t v4 = (unint64_t)v62;
LABEL_1301:
                                                                                                          v657[0] = 0;
                                                                                                          if ((unint64_t)v62 >= v59 || *v62 < 0)
                                                                                                          {
                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                            if (!result) {
                                                                                                              return result;
                                                                                                            }
                                                                                                            unsigned int v396 = v657[0];
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            unsigned int v396 = *v62;
                                                                                                            *uint64_t v4 = (unint64_t)(v62 + 1);
                                                                                                          }
                                                                                                          int v397 = *((_DWORD *)this + 126);
                                                                                                          if (v397 == *((_DWORD *)this + 127))
                                                                                                          {
                                                                                                            wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v635, v397 + 1);
                                                                                                            int v397 = *((_DWORD *)this + 126);
                                                                                                          }
                                                                                                          uint64_t v398 = *((void *)this + 62);
                                                                                                          *((_DWORD *)this + 126) = v397 + 1;
                                                                                                          *(_DWORD *)(v398 + 4 * v397) = v396;
                                                                                                          int v399 = *((_DWORD *)this + 127) - *((_DWORD *)this + 126);
                                                                                                          if (v399 >= 1)
                                                                                                          {
                                                                                                            int v400 = v399 + 1;
                                                                                                            do
                                                                                                            {
                                                                                                              unint64_t v401 = *v5;
                                                                                                              v402 = (unsigned __int8 *)*v4;
                                                                                                              if ((int)(*v5 - *v4) < 2 || *v402 != 184 || v402[1] != 5) {
                                                                                                                break;
                                                                                                              }
                                                                                                              *uint64_t v4 = (unint64_t)(v402 + 2);
                                                                                                              v657[0] = 0;
                                                                                                              if ((unint64_t)(v402 + 2) >= v401 || (char)v402[2] < 0)
                                                                                                              {
                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                if (!result) {
                                                                                                                  return result;
                                                                                                                }
                                                                                                                unsigned int v403 = v657[0];
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                unsigned int v403 = v402[2];
                                                                                                                *uint64_t v4 = (unint64_t)(v402 + 3);
                                                                                                              }
                                                                                                              int v404 = *((_DWORD *)this + 126);
                                                                                                              if (v404 >= *((_DWORD *)this + 127))
                                                                                                              {
                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                int v404 = *((_DWORD *)this + 126);
                                                                                                              }
                                                                                                              uint64_t v405 = *((void *)this + 62);
                                                                                                              *((_DWORD *)this + 126) = v404 + 1;
                                                                                                              *(_DWORD *)(v405 + 4 * v404) = v403;
                                                                                                              --v400;
                                                                                                            }
                                                                                                            while (v400 > 1);
                                                                                                          }
LABEL_1321:
                                                                                                          unint64_t v59 = *v5;
                                                                                                          v395 = (unsigned __int8 *)*v4;
                                                                                                          if ((int)(*v5 - *v4) <= 1) {
                                                                                                            break;
                                                                                                          }
                                                                                                          int v406 = *v395;
                                                                                                          if (v406 == 197)
                                                                                                          {
                                                                                                            if (v395[1] == 5)
                                                                                                            {
                                                                                                              while (1)
                                                                                                              {
                                                                                                                *uint64_t v4 = (unint64_t)(v395 + 2);
LABEL_1328:
                                                                                                                if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x2C5) != 2)
                                                                                                                {
                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                }
                                                                                                                v657[0] = 0;
                                                                                                                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v657) & 1) == 0) {
                                                                                                                  return 0;
                                                                                                                }
                                                                                                                unsigned int v407 = v657[0];
                                                                                                                int v408 = *((_DWORD *)this + 130);
                                                                                                                if (v408 == *((_DWORD *)this + 131))
                                                                                                                {
                                                                                                                  wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)v653, v408 + 1);
                                                                                                                  int v408 = *((_DWORD *)this + 130);
                                                                                                                }
                                                                                                                uint64_t v409 = *((void *)this + 64);
                                                                                                                int v410 = v408 + 1;
                                                                                                                *((_DWORD *)this + 130) = v408 + 1;
                                                                                                                *(_DWORD *)(v409 + 4 * v408) = v407;
                                                                                                                v411 = (unsigned __int8 *)*v4;
                                                                                                                int v412 = *(_DWORD *)v5 - *v4;
                                                                                                                if (v412 >= 1)
                                                                                                                {
                                                                                                                  signed int v413 = v412 / 6u;
                                                                                                                  int v414 = v413 >= *((_DWORD *)this + 131) - v410 ? *((_DWORD *)this + 131) - v410 : v413;
                                                                                                                  if (v414 >= 1)
                                                                                                                  {
                                                                                                                    int v415 = 0;
                                                                                                                    while (*v411 == 197 && v411[1] == 5)
                                                                                                                    {
                                                                                                                      int v416 = *(_DWORD *)(v411 + 2);
                                                                                                                      if (v410 >= *((_DWORD *)this + 131))
                                                                                                                      {
                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                        int v410 = *((_DWORD *)this + 130);
                                                                                                                        uint64_t v409 = *((void *)this + 64);
                                                                                                                      }
                                                                                                                      *((_DWORD *)this + 130) = v410 + 1;
                                                                                                                      *(_DWORD *)(v409 + 4 * v410) = v416;
                                                                                                                      ++v415;
                                                                                                                      v411 += 6;
                                                                                                                      ++v410;
                                                                                                                      if (v414 == v415)
                                                                                                                      {
                                                                                                                        int v415 = v414;
                                                                                                                        break;
                                                                                                                      }
                                                                                                                    }
                                                                                                                    if (v415) {
                                                                                                                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
LABEL_1347:
                                                                                                                unint64_t v64 = *v5;
                                                                                                                v395 = (unsigned __int8 *)*v4;
                                                                                                                if ((int)(*v5 - *v4) <= 1) {
                                                                                                                  break;
                                                                                                                }
                                                                                                                int v417 = *v395;
                                                                                                                if (v417 == 200)
                                                                                                                {
                                                                                                                  if (v395[1] == 5)
                                                                                                                  {
                                                                                                                    int v63 = v395 + 2;
                                                                                                                    *uint64_t v4 = (unint64_t)v63;
LABEL_1354:
                                                                                                                    v657[0] = 0;
                                                                                                                    if ((unint64_t)v63 >= v64 || (char)*v63 < 0)
                                                                                                                    {
                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                      if (!result) {
                                                                                                                        return result;
                                                                                                                      }
                                                                                                                      unsigned int v418 = v657[0];
                                                                                                                      unint64_t v64 = *v5;
                                                                                                                      v419 = (unsigned __int8 *)*v4;
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      unsigned int v418 = *v63;
                                                                                                                      v419 = v63 + 1;
                                                                                                                      *uint64_t v4 = (unint64_t)v419;
                                                                                                                    }
                                                                                                                    *((_DWORD *)this + 132) = v418;
                                                                                                                    *((_DWORD *)this + 219) |= 0x1000000u;
                                                                                                                    if ((int)v64 - (int)v419 >= 2 && *v419 == 208 && v419[1] == 5)
                                                                                                                    {
                                                                                                                      int v139 = v419 + 2;
                                                                                                                      *uint64_t v4 = (unint64_t)v139;
LABEL_1363:
                                                                                                                      v657[0] = 0;
                                                                                                                      if ((unint64_t)v139 >= v64 || (char)*v139 < 0)
                                                                                                                      {
                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                        if (!result) {
                                                                                                                          return result;
                                                                                                                        }
                                                                                                                        unsigned int v420 = v657[0];
                                                                                                                        unint64_t v64 = *v5;
                                                                                                                        v421 = (unsigned __int8 *)*v4;
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        unsigned int v420 = *v139;
                                                                                                                        v421 = v139 + 1;
                                                                                                                        *uint64_t v4 = (unint64_t)v421;
                                                                                                                      }
                                                                                                                      *((_DWORD *)this + 133) = v420;
                                                                                                                      *((_DWORD *)this + 219) |= 0x2000000u;
                                                                                                                      if ((int)v64 - (int)v421 >= 2 && *v421 == 216 && v421[1] == 5)
                                                                                                                      {
                                                                                                                        int v140 = v421 + 2;
                                                                                                                        *uint64_t v4 = (unint64_t)v140;
LABEL_1372:
                                                                                                                        v657[0] = 0;
                                                                                                                        if ((unint64_t)v140 >= v64 || (char)*v140 < 0)
                                                                                                                        {
                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                          if (!result) {
                                                                                                                            return result;
                                                                                                                          }
                                                                                                                          unsigned int v422 = v657[0];
                                                                                                                          unint64_t v64 = *v5;
                                                                                                                          v423 = (unsigned __int8 *)*v4;
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          unsigned int v422 = *v140;
                                                                                                                          v423 = v140 + 1;
                                                                                                                          *uint64_t v4 = (unint64_t)v423;
                                                                                                                        }
                                                                                                                        *((_DWORD *)this + 134) = v422;
                                                                                                                        *((_DWORD *)this + 219) |= 0x4000000u;
                                                                                                                        if ((int)v64 - (int)v423 >= 2 && *v423 == 224 && v423[1] == 5)
                                                                                                                        {
                                                                                                                          int v65 = v423 + 2;
                                                                                                                          *uint64_t v4 = (unint64_t)v65;
LABEL_1381:
                                                                                                                          v657[0] = 0;
                                                                                                                          if ((unint64_t)v65 >= v64 || (char)*v65 < 0)
                                                                                                                          {
                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                            if (!result) {
                                                                                                                              return result;
                                                                                                                            }
                                                                                                                            unsigned int v424 = v657[0];
                                                                                                                            unint64_t v64 = *v5;
                                                                                                                            v425 = (unsigned __int8 *)*v4;
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            unsigned int v424 = *v65;
                                                                                                                            v425 = v65 + 1;
                                                                                                                            *uint64_t v4 = (unint64_t)v425;
                                                                                                                          }
                                                                                                                          *((_DWORD *)this + 135) = v424;
                                                                                                                          *((_DWORD *)this + 219) |= 0x8000000u;
                                                                                                                          if ((int)v64 - (int)v425 >= 2 && *v425 == 232 && v425[1] == 5)
                                                                                                                          {
                                                                                                                            int v66 = v425 + 2;
                                                                                                                            *uint64_t v4 = (unint64_t)v66;
LABEL_1390:
                                                                                                                            v657[0] = 0;
                                                                                                                            if ((unint64_t)v66 >= v64 || (char)*v66 < 0)
                                                                                                                            {
                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                              if (!result) {
                                                                                                                                return result;
                                                                                                                              }
                                                                                                                              unsigned int v426 = v657[0];
                                                                                                                              unint64_t v64 = *v5;
                                                                                                                              v427 = (unsigned __int8 *)*v4;
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              unsigned int v426 = *v66;
                                                                                                                              v427 = v66 + 1;
                                                                                                                              *uint64_t v4 = (unint64_t)v427;
                                                                                                                            }
                                                                                                                            *((_DWORD *)this + 136) = v426;
                                                                                                                            *((_DWORD *)this + 219) |= 0x10000000u;
                                                                                                                            if ((int)v64 - (int)v427 >= 2 && *v427 == 240 && v427[1] == 5)
                                                                                                                            {
                                                                                                                              int v67 = v427 + 2;
                                                                                                                              *uint64_t v4 = (unint64_t)v67;
LABEL_1399:
                                                                                                                              v657[0] = 0;
                                                                                                                              if ((unint64_t)v67 >= v64 || (char)*v67 < 0)
                                                                                                                              {
                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                if (!result) {
                                                                                                                                  return result;
                                                                                                                                }
                                                                                                                                unsigned int v428 = v657[0];
                                                                                                                                unint64_t v64 = *v5;
                                                                                                                                v429 = (unsigned __int8 *)*v4;
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                unsigned int v428 = *v67;
                                                                                                                                v429 = v67 + 1;
                                                                                                                                *uint64_t v4 = (unint64_t)v429;
                                                                                                                              }
                                                                                                                              *((_DWORD *)this + 137) = v428;
                                                                                                                              *((_DWORD *)this + 219) |= 0x20000000u;
                                                                                                                              if ((int)v64 - (int)v429 >= 2 && *v429 == 248 && v429[1] == 5)
                                                                                                                              {
                                                                                                                                int v141 = v429 + 2;
                                                                                                                                *uint64_t v4 = (unint64_t)v141;
LABEL_1408:
                                                                                                                                v657[0] = 0;
                                                                                                                                if ((unint64_t)v141 >= v64 || (char)*v141 < 0)
                                                                                                                                {
                                                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                  if (!result) {
                                                                                                                                    return result;
                                                                                                                                  }
                                                                                                                                  unsigned int v430 = v657[0];
                                                                                                                                  unint64_t v64 = *v5;
                                                                                                                                  v431 = (unsigned __int8 *)*v4;
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  unsigned int v430 = *v141;
                                                                                                                                  v431 = v141 + 1;
                                                                                                                                  *uint64_t v4 = (unint64_t)v431;
                                                                                                                                }
                                                                                                                                *((_DWORD *)this + 138) = v430;
                                                                                                                                *((_DWORD *)this + 219) |= 0x40000000u;
                                                                                                                                if ((int)v64 - (int)v431 >= 2 && *v431 == 128 && v431[1] == 6)
                                                                                                                                {
                                                                                                                                  int v68 = v431 + 2;
                                                                                                                                  *uint64_t v4 = (unint64_t)v68;
LABEL_1417:
                                                                                                                                  v657[0] = 0;
                                                                                                                                  if ((unint64_t)v68 >= v64 || (char)*v68 < 0)
                                                                                                                                  {
                                                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                    if (!result) {
                                                                                                                                      return result;
                                                                                                                                    }
                                                                                                                                    unsigned int v432 = v657[0];
                                                                                                                                    unint64_t v64 = *v5;
                                                                                                                                    v433 = (unsigned __int8 *)*v4;
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    unsigned int v432 = *v68;
                                                                                                                                    v433 = v68 + 1;
                                                                                                                                    *uint64_t v4 = (unint64_t)v433;
                                                                                                                                  }
                                                                                                                                  *((_DWORD *)this + 139) = v432;
                                                                                                                                  *((_DWORD *)this + 219) |= 0x80000000;
                                                                                                                                  if ((int)v64 - (int)v433 >= 2 && *v433 == 136 && v433[1] == 6)
                                                                                                                                  {
                                                                                                                                    int v69 = v433 + 2;
                                                                                                                                    *uint64_t v4 = (unint64_t)v69;
LABEL_1426:
                                                                                                                                    v657[0] = 0;
                                                                                                                                    if ((unint64_t)v69 >= v64 || (char)*v69 < 0)
                                                                                                                                    {
                                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                      if (!result) {
                                                                                                                                        return result;
                                                                                                                                      }
                                                                                                                                      unsigned int v434 = v657[0];
                                                                                                                                      unint64_t v64 = *v5;
                                                                                                                                      v435 = (unsigned __int8 *)*v4;
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      unsigned int v434 = *v69;
                                                                                                                                      v435 = v69 + 1;
                                                                                                                                      *uint64_t v4 = (unint64_t)v435;
                                                                                                                                    }
                                                                                                                                    *((_DWORD *)this + 140) = v434;
                                                                                                                                    *((_DWORD *)this + 220) |= 1u;
                                                                                                                                    if ((int)v64 - (int)v435 >= 2 && *v435 == 144 && v435[1] == 6)
                                                                                                                                    {
                                                                                                                                      char v70 = v435 + 2;
                                                                                                                                      *uint64_t v4 = (unint64_t)v70;
LABEL_1435:
                                                                                                                                      v657[0] = 0;
                                                                                                                                      if ((unint64_t)v70 >= v64 || (char)*v70 < 0)
                                                                                                                                      {
                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                        if (!result) {
                                                                                                                                          return result;
                                                                                                                                        }
                                                                                                                                        unsigned int v436 = v657[0];
                                                                                                                                        unint64_t v64 = *v5;
                                                                                                                                        v437 = (unsigned __int8 *)*v4;
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        unsigned int v436 = *v70;
                                                                                                                                        v437 = v70 + 1;
                                                                                                                                        *uint64_t v4 = (unint64_t)v437;
                                                                                                                                      }
                                                                                                                                      *((_DWORD *)this + 141) = v436;
                                                                                                                                      *((_DWORD *)this + 220) |= 2u;
                                                                                                                                      if ((int)v64 - (int)v437 >= 2 && *v437 == 152 && v437[1] == 6)
                                                                                                                                      {
                                                                                                                                        int v71 = v437 + 2;
                                                                                                                                        *uint64_t v4 = (unint64_t)v71;
LABEL_1444:
                                                                                                                                        v657[0] = 0;
                                                                                                                                        if ((unint64_t)v71 >= v64 || (char)*v71 < 0)
                                                                                                                                        {
                                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                          if (!result) {
                                                                                                                                            return result;
                                                                                                                                          }
                                                                                                                                          unsigned int v438 = v657[0];
                                                                                                                                          unint64_t v64 = *v5;
                                                                                                                                          v439 = (unsigned __int8 *)*v4;
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          unsigned int v438 = *v71;
                                                                                                                                          v439 = v71 + 1;
                                                                                                                                          *uint64_t v4 = (unint64_t)v439;
                                                                                                                                        }
                                                                                                                                        *((_DWORD *)this + 142) = v438;
                                                                                                                                        *((_DWORD *)this + 220) |= 4u;
                                                                                                                                        if ((int)v64 - (int)v439 >= 2 && *v439 == 160 && v439[1] == 6)
                                                                                                                                        {
                                                                                                                                          int v142 = v439 + 2;
                                                                                                                                          *uint64_t v4 = (unint64_t)v142;
LABEL_1453:
                                                                                                                                          v657[0] = 0;
                                                                                                                                          if ((unint64_t)v142 >= v64 || (char)*v142 < 0)
                                                                                                                                          {
                                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                            if (!result) {
                                                                                                                                              return result;
                                                                                                                                            }
                                                                                                                                            unsigned int v440 = v657[0];
                                                                                                                                            unint64_t v64 = *v5;
                                                                                                                                            v441 = (unsigned __int8 *)*v4;
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            unsigned int v440 = *v142;
                                                                                                                                            v441 = v142 + 1;
                                                                                                                                            *uint64_t v4 = (unint64_t)v441;
                                                                                                                                          }
                                                                                                                                          *((_DWORD *)this + 143) = v440;
                                                                                                                                          *((_DWORD *)this + 220) |= 8u;
                                                                                                                                          if ((int)v64 - (int)v441 >= 2 && *v441 == 168 && v441[1] == 6)
                                                                                                                                          {
                                                                                                                                            int v72 = v441 + 2;
                                                                                                                                            *uint64_t v4 = (unint64_t)v72;
LABEL_1462:
                                                                                                                                            v657[0] = 0;
                                                                                                                                            if ((unint64_t)v72 >= v64 || (char)*v72 < 0)
                                                                                                                                            {
                                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                              if (!result) {
                                                                                                                                                return result;
                                                                                                                                              }
                                                                                                                                              unsigned int v442 = v657[0];
                                                                                                                                              unint64_t v64 = *v5;
                                                                                                                                              v443 = (unsigned __int8 *)*v4;
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              unsigned int v442 = *v72;
                                                                                                                                              v443 = v72 + 1;
                                                                                                                                              *uint64_t v4 = (unint64_t)v443;
                                                                                                                                            }
                                                                                                                                            *((_DWORD *)this + 144) = v442;
                                                                                                                                            *((_DWORD *)this + 220) |= 0x10u;
                                                                                                                                            if ((int)v64 - (int)v443 >= 2 && *v443 == 176 && v443[1] == 6)
                                                                                                                                            {
                                                                                                                                              int v73 = v443 + 2;
                                                                                                                                              *uint64_t v4 = (unint64_t)v73;
LABEL_1471:
                                                                                                                                              v657[0] = 0;
                                                                                                                                              if ((unint64_t)v73 >= v64 || (char)*v73 < 0)
                                                                                                                                              {
                                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                if (!result) {
                                                                                                                                                  return result;
                                                                                                                                                }
                                                                                                                                                unsigned int v444 = v657[0];
                                                                                                                                                unint64_t v64 = *v5;
                                                                                                                                                v445 = (unsigned __int8 *)*v4;
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                unsigned int v444 = *v73;
                                                                                                                                                v445 = v73 + 1;
                                                                                                                                                *uint64_t v4 = (unint64_t)v445;
                                                                                                                                              }
                                                                                                                                              *((_DWORD *)this + 145) = v444;
                                                                                                                                              *((_DWORD *)this + 220) |= 0x20u;
                                                                                                                                              if ((int)v64 - (int)v445 >= 2 && *v445 == 184 && v445[1] == 6)
                                                                                                                                              {
                                                                                                                                                int v74 = v445 + 2;
                                                                                                                                                *uint64_t v4 = (unint64_t)v74;
LABEL_1480:
                                                                                                                                                v657[0] = 0;
                                                                                                                                                if ((unint64_t)v74 >= v64 || (char)*v74 < 0)
                                                                                                                                                {
                                                                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                  if (!result) {
                                                                                                                                                    return result;
                                                                                                                                                  }
                                                                                                                                                  unsigned int v446 = v657[0];
                                                                                                                                                  unint64_t v64 = *v5;
                                                                                                                                                  v447 = (unsigned __int8 *)*v4;
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  unsigned int v446 = *v74;
                                                                                                                                                  v447 = v74 + 1;
                                                                                                                                                  *uint64_t v4 = (unint64_t)v447;
                                                                                                                                                }
                                                                                                                                                *((_DWORD *)this + 146) = v446;
                                                                                                                                                *((_DWORD *)this + 220) |= 0x40u;
                                                                                                                                                if ((int)v64 - (int)v447 >= 2 && *v447 == 192 && v447[1] == 6)
                                                                                                                                                {
                                                                                                                                                  int v75 = v447 + 2;
                                                                                                                                                  *uint64_t v4 = (unint64_t)v75;
LABEL_1489:
                                                                                                                                                  v657[0] = 0;
                                                                                                                                                  if ((unint64_t)v75 >= v64 || (char)*v75 < 0)
                                                                                                                                                  {
                                                                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                    if (!result) {
                                                                                                                                                      return result;
                                                                                                                                                    }
                                                                                                                                                    unsigned int v448 = v657[0];
                                                                                                                                                    unint64_t v64 = *v5;
                                                                                                                                                    v449 = (unsigned __int8 *)*v4;
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    unsigned int v448 = *v75;
                                                                                                                                                    v449 = v75 + 1;
                                                                                                                                                    *uint64_t v4 = (unint64_t)v449;
                                                                                                                                                  }
                                                                                                                                                  *((_DWORD *)this + 147) = v448;
                                                                                                                                                  *((_DWORD *)this + 220) |= 0x80u;
                                                                                                                                                  if ((int)v64 - (int)v449 >= 2 && *v449 == 200 && v449[1] == 6)
                                                                                                                                                  {
                                                                                                                                                    int v76 = v449 + 2;
                                                                                                                                                    *uint64_t v4 = (unint64_t)v76;
LABEL_1498:
                                                                                                                                                    v657[0] = 0;
                                                                                                                                                    if ((unint64_t)v76 >= v64 || (char)*v76 < 0)
                                                                                                                                                    {
                                                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                      if (!result) {
                                                                                                                                                        return result;
                                                                                                                                                      }
                                                                                                                                                      unsigned int v450 = v657[0];
                                                                                                                                                      unint64_t v64 = *v5;
                                                                                                                                                      v451 = (unsigned __int8 *)*v4;
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      unsigned int v450 = *v76;
                                                                                                                                                      v451 = v76 + 1;
                                                                                                                                                      *uint64_t v4 = (unint64_t)v451;
                                                                                                                                                    }
                                                                                                                                                    *((_DWORD *)this + 148) = v450;
                                                                                                                                                    *((_DWORD *)this + 220) |= 0x100u;
                                                                                                                                                    if ((int)v64 - (int)v451 >= 2 && *v451 == 208 && v451[1] == 6)
                                                                                                                                                    {
                                                                                                                                                      int v77 = v451 + 2;
                                                                                                                                                      *uint64_t v4 = (unint64_t)v77;
LABEL_1507:
                                                                                                                                                      v657[0] = 0;
                                                                                                                                                      if ((unint64_t)v77 >= v64 || (char)*v77 < 0)
                                                                                                                                                      {
                                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                        if (!result) {
                                                                                                                                                          return result;
                                                                                                                                                        }
                                                                                                                                                        unsigned int v452 = v657[0];
                                                                                                                                                        unint64_t v64 = *v5;
                                                                                                                                                        v453 = (unsigned __int8 *)*v4;
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        unsigned int v452 = *v77;
                                                                                                                                                        v453 = v77 + 1;
                                                                                                                                                        *uint64_t v4 = (unint64_t)v453;
                                                                                                                                                      }
                                                                                                                                                      *((_DWORD *)this + 149) = v452;
                                                                                                                                                      *((_DWORD *)this + 220) |= 0x200u;
                                                                                                                                                      if ((int)v64 - (int)v453 >= 2 && *v453 == 216 && v453[1] == 6)
                                                                                                                                                      {
                                                                                                                                                        int v143 = v453 + 2;
                                                                                                                                                        *uint64_t v4 = (unint64_t)v143;
LABEL_1516:
                                                                                                                                                        v657[0] = 0;
                                                                                                                                                        if ((unint64_t)v143 >= v64 || (char)*v143 < 0)
                                                                                                                                                        {
                                                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                          if (!result) {
                                                                                                                                                            return result;
                                                                                                                                                          }
                                                                                                                                                          unsigned int v454 = v657[0];
                                                                                                                                                          unint64_t v64 = *v5;
                                                                                                                                                          v455 = (unsigned __int8 *)*v4;
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          unsigned int v454 = *v143;
                                                                                                                                                          v455 = v143 + 1;
                                                                                                                                                          *uint64_t v4 = (unint64_t)v455;
                                                                                                                                                        }
                                                                                                                                                        *((_DWORD *)this + 150) = v454;
                                                                                                                                                        *((_DWORD *)this + 220) |= 0x400u;
                                                                                                                                                        if ((int)v64 - (int)v455 >= 2 && *v455 == 224 && v455[1] == 6)
                                                                                                                                                        {
                                                                                                                                                          int v78 = v455 + 2;
                                                                                                                                                          *uint64_t v4 = (unint64_t)v78;
LABEL_1525:
                                                                                                                                                          v657[0] = 0;
                                                                                                                                                          if ((unint64_t)v78 >= v64 || (char)*v78 < 0)
                                                                                                                                                          {
                                                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                            if (!result) {
                                                                                                                                                              return result;
                                                                                                                                                            }
                                                                                                                                                            unsigned int v456 = v657[0];
                                                                                                                                                            unint64_t v64 = *v5;
                                                                                                                                                            v457 = (unsigned __int8 *)*v4;
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            unsigned int v456 = *v78;
                                                                                                                                                            v457 = v78 + 1;
                                                                                                                                                            *uint64_t v4 = (unint64_t)v457;
                                                                                                                                                          }
                                                                                                                                                          *((_DWORD *)this + 151) = v456;
                                                                                                                                                          *((_DWORD *)this + 220) |= 0x800u;
                                                                                                                                                          if ((int)v64 - (int)v457 >= 2 && *v457 == 232 && v457[1] == 6)
                                                                                                                                                          {
                                                                                                                                                            int v79 = v457 + 2;
                                                                                                                                                            *uint64_t v4 = (unint64_t)v79;
LABEL_1534:
                                                                                                                                                            v657[0] = 0;
                                                                                                                                                            if ((unint64_t)v79 >= v64 || (char)*v79 < 0)
                                                                                                                                                            {
                                                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                              if (!result) {
                                                                                                                                                                return result;
                                                                                                                                                              }
                                                                                                                                                              unsigned int v458 = v657[0];
                                                                                                                                                              unint64_t v64 = *v5;
                                                                                                                                                              v459 = (unsigned __int8 *)*v4;
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              unsigned int v458 = *v79;
                                                                                                                                                              v459 = v79 + 1;
                                                                                                                                                              *uint64_t v4 = (unint64_t)v459;
                                                                                                                                                            }
                                                                                                                                                            *((_DWORD *)this + 152) = v458;
                                                                                                                                                            *((_DWORD *)this + 220) |= 0x1000u;
                                                                                                                                                            if ((int)v64 - (int)v459 >= 2 && *v459 == 240 && v459[1] == 6)
                                                                                                                                                            {
                                                                                                                                                              int v80 = v459 + 2;
                                                                                                                                                              *uint64_t v4 = (unint64_t)v80;
LABEL_1543:
                                                                                                                                                              v657[0] = 0;
                                                                                                                                                              if ((unint64_t)v80 >= v64 || (char)*v80 < 0)
                                                                                                                                                              {
                                                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                if (!result) {
                                                                                                                                                                  return result;
                                                                                                                                                                }
                                                                                                                                                                unsigned int v460 = v657[0];
                                                                                                                                                                v461 = (unsigned __int8 *)*v4;
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                unsigned int v460 = *v80;
                                                                                                                                                                v461 = v80 + 1;
                                                                                                                                                                *uint64_t v4 = (unint64_t)v461;
                                                                                                                                                              }
                                                                                                                                                              *((_DWORD *)this + 153) = v460;
                                                                                                                                                              *((_DWORD *)this + 220) |= 0x2000u;
                                                                                                                                                              unint64_t v82 = *v5;
                                                                                                                                                              if ((int)(*v5 - v461) >= 2 && *v461 == 248 && v461[1] == 6)
                                                                                                                                                              {
                                                                                                                                                                int v81 = v461 + 2;
                                                                                                                                                                *uint64_t v4 = (unint64_t)v81;
LABEL_1552:
                                                                                                                                                                v657[0] = 0;
                                                                                                                                                                if ((unint64_t)v81 >= v82 || (char)*v81 < 0)
                                                                                                                                                                {
                                                                                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                  if (!result) {
                                                                                                                                                                    return result;
                                                                                                                                                                  }
                                                                                                                                                                  unsigned int v462 = v657[0];
                                                                                                                                                                  unint64_t v82 = *v5;
                                                                                                                                                                  v463 = (unsigned __int8 *)*v4;
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  unsigned int v462 = *v81;
                                                                                                                                                                  v463 = v81 + 1;
                                                                                                                                                                  *uint64_t v4 = (unint64_t)v463;
                                                                                                                                                                }
                                                                                                                                                                *((_DWORD *)this + 154) = v462;
                                                                                                                                                                *((_DWORD *)this + 220) |= 0x4000u;
                                                                                                                                                                if ((int)v82 - (int)v463 >= 2 && *v463 == 128 && v463[1] == 7)
                                                                                                                                                                {
                                                                                                                                                                  int v83 = v463 + 2;
                                                                                                                                                                  *uint64_t v4 = (unint64_t)v83;
LABEL_1561:
                                                                                                                                                                  v657[0] = 0;
                                                                                                                                                                  if ((unint64_t)v83 >= v82 || (char)*v83 < 0)
                                                                                                                                                                  {
                                                                                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                    if (!result) {
                                                                                                                                                                      return result;
                                                                                                                                                                    }
                                                                                                                                                                    unsigned int v464 = v657[0];
                                                                                                                                                                    unint64_t v82 = *v5;
                                                                                                                                                                    v465 = (unsigned __int8 *)*v4;
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    unsigned int v464 = *v83;
                                                                                                                                                                    v465 = v83 + 1;
                                                                                                                                                                    *uint64_t v4 = (unint64_t)v465;
                                                                                                                                                                  }
                                                                                                                                                                  *((_DWORD *)this + 155) = v464;
                                                                                                                                                                  *((_DWORD *)this + 220) |= 0x8000u;
                                                                                                                                                                  if ((int)v82 - (int)v465 >= 2 && *v465 == 136 && v465[1] == 7)
                                                                                                                                                                  {
                                                                                                                                                                    int v84 = v465 + 2;
                                                                                                                                                                    *uint64_t v4 = (unint64_t)v84;
LABEL_1570:
                                                                                                                                                                    v657[0] = 0;
                                                                                                                                                                    if ((unint64_t)v84 >= v82 || (char)*v84 < 0)
                                                                                                                                                                    {
                                                                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                      if (!result) {
                                                                                                                                                                        return result;
                                                                                                                                                                      }
                                                                                                                                                                      unsigned int v466 = v657[0];
                                                                                                                                                                      unint64_t v82 = *v5;
                                                                                                                                                                      v467 = (unsigned __int8 *)*v4;
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      unsigned int v466 = *v84;
                                                                                                                                                                      v467 = v84 + 1;
                                                                                                                                                                      *uint64_t v4 = (unint64_t)v467;
                                                                                                                                                                    }
                                                                                                                                                                    *((_DWORD *)this + 156) = v466;
                                                                                                                                                                    *((_DWORD *)this + 220) |= 0x10000u;
                                                                                                                                                                    if ((int)v82 - (int)v467 >= 2 && *v467 == 144 && v467[1] == 7)
                                                                                                                                                                    {
                                                                                                                                                                      int v85 = v467 + 2;
                                                                                                                                                                      *uint64_t v4 = (unint64_t)v85;
LABEL_1579:
                                                                                                                                                                      v657[0] = 0;
                                                                                                                                                                      if ((unint64_t)v85 >= v82 || (char)*v85 < 0)
                                                                                                                                                                      {
                                                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                        if (!result) {
                                                                                                                                                                          return result;
                                                                                                                                                                        }
                                                                                                                                                                        unsigned int v468 = v657[0];
                                                                                                                                                                        unint64_t v82 = *v5;
                                                                                                                                                                        v469 = (unsigned __int8 *)*v4;
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        unsigned int v468 = *v85;
                                                                                                                                                                        v469 = v85 + 1;
                                                                                                                                                                        *uint64_t v4 = (unint64_t)v469;
                                                                                                                                                                      }
                                                                                                                                                                      *((_DWORD *)this + 157) = v468;
                                                                                                                                                                      *((_DWORD *)this + 220) |= 0x20000u;
                                                                                                                                                                      if ((int)v82 - (int)v469 >= 2 && *v469 == 152 && v469[1] == 7)
                                                                                                                                                                      {
                                                                                                                                                                        int v86 = v469 + 2;
                                                                                                                                                                        *uint64_t v4 = (unint64_t)v86;
LABEL_1588:
                                                                                                                                                                        v657[0] = 0;
                                                                                                                                                                        if ((unint64_t)v86 >= v82 || (char)*v86 < 0)
                                                                                                                                                                        {
                                                                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                          if (!result) {
                                                                                                                                                                            return result;
                                                                                                                                                                          }
                                                                                                                                                                          unsigned int v470 = v657[0];
                                                                                                                                                                          unint64_t v82 = *v5;
                                                                                                                                                                          v471 = (unsigned __int8 *)*v4;
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          unsigned int v470 = *v86;
                                                                                                                                                                          v471 = v86 + 1;
                                                                                                                                                                          *uint64_t v4 = (unint64_t)v471;
                                                                                                                                                                        }
                                                                                                                                                                        *((_DWORD *)this + 158) = v470;
                                                                                                                                                                        *((_DWORD *)this + 220) |= 0x40000u;
                                                                                                                                                                        if ((int)v82 - (int)v471 >= 2 && *v471 == 160 && v471[1] == 7)
                                                                                                                                                                        {
                                                                                                                                                                          int v87 = v471 + 2;
                                                                                                                                                                          *uint64_t v4 = (unint64_t)v87;
LABEL_1597:
                                                                                                                                                                          v657[0] = 0;
                                                                                                                                                                          if ((unint64_t)v87 >= v82 || (char)*v87 < 0)
                                                                                                                                                                          {
                                                                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                            if (!result) {
                                                                                                                                                                              return result;
                                                                                                                                                                            }
                                                                                                                                                                            unsigned int v472 = v657[0];
                                                                                                                                                                            unint64_t v82 = *v5;
                                                                                                                                                                            v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            unsigned int v472 = *v87;
                                                                                                                                                                            v473 = v87 + 1;
                                                                                                                                                                            *uint64_t v4 = (unint64_t)v473;
                                                                                                                                                                          }
                                                                                                                                                                          *((_DWORD *)this + 159) = v472;
                                                                                                                                                                          *((_DWORD *)this + 220) |= 0x80000u;
                                                                                                                                                                          if ((int)v82 - (int)v473 >= 2 && *v473 == 168 && v473[1] == 7)
                                                                                                                                                                          {
                                                                                                                                                                            while (1)
                                                                                                                                                                            {
                                                                                                                                                                              int v88 = (char *)(v473 + 2);
                                                                                                                                                                              *uint64_t v4 = (unint64_t)v88;
LABEL_1606:
                                                                                                                                                                              v656[0] = 0;
                                                                                                                                                                              if ((unint64_t)v88 >= v82 || *v88 < 0)
                                                                                                                                                                              {
                                                                                                                                                                                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                  return 0;
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                v656[0] = *v88;
                                                                                                                                                                                *uint64_t v4 = (unint64_t)(v88 + 1);
                                                                                                                                                                              }
                                                                                                                                                                              int v474 = *((_DWORD *)this + 162);
                                                                                                                                                                              if (v474 == *((_DWORD *)this + 163))
                                                                                                                                                                              {
                                                                                                                                                                                wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v636, v474 + 1);
                                                                                                                                                                                int v474 = *((_DWORD *)this + 162);
                                                                                                                                                                              }
                                                                                                                                                                              unsigned int v475 = v656[0];
                                                                                                                                                                              uint64_t v476 = *((void *)this + 80);
                                                                                                                                                                              *((_DWORD *)this + 162) = v474 + 1;
                                                                                                                                                                              *(_DWORD *)(v476 + 4 * v474) = v475;
                                                                                                                                                                              int v477 = *((_DWORD *)this + 163) - *((_DWORD *)this + 162);
                                                                                                                                                                              if (v477 >= 1)
                                                                                                                                                                              {
                                                                                                                                                                                int v478 = v477 + 1;
                                                                                                                                                                                do
                                                                                                                                                                                {
                                                                                                                                                                                  unint64_t v479 = *v5;
                                                                                                                                                                                  v480 = (unsigned __int8 *)*v4;
                                                                                                                                                                                  if ((int)(*v5 - *v4) < 2 || *v480 != 168 || v480[1] != 7) {
                                                                                                                                                                                    break;
                                                                                                                                                                                  }
                                                                                                                                                                                  *uint64_t v4 = (unint64_t)(v480 + 2);
                                                                                                                                                                                  if ((unint64_t)(v480 + 2) >= v479 || (char)v480[2] < 0)
                                                                                                                                                                                  {
                                                                                                                                                                                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                      return 0;
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    v656[0] = v480[2];
                                                                                                                                                                                    *uint64_t v4 = (unint64_t)(v480 + 3);
                                                                                                                                                                                  }
                                                                                                                                                                                  int v481 = *((_DWORD *)this + 162);
                                                                                                                                                                                  if (v481 >= *((_DWORD *)this + 163))
                                                                                                                                                                                  {
                                                                                                                                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                    int v481 = *((_DWORD *)this + 162);
                                                                                                                                                                                  }
                                                                                                                                                                                  unsigned int v482 = v656[0];
                                                                                                                                                                                  uint64_t v483 = *((void *)this + 80);
                                                                                                                                                                                  *((_DWORD *)this + 162) = v481 + 1;
                                                                                                                                                                                  *(_DWORD *)(v483 + 4 * v481) = v482;
                                                                                                                                                                                  --v478;
                                                                                                                                                                                }
                                                                                                                                                                                while (v478 > 1);
                                                                                                                                                                              }
LABEL_1624:
                                                                                                                                                                              unint64_t v82 = *v5;
                                                                                                                                                                              v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                              if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                break;
                                                                                                                                                                              }
                                                                                                                                                                              int v484 = *v473;
                                                                                                                                                                              if (v484 == 176)
                                                                                                                                                                              {
                                                                                                                                                                                if (v473[1] == 7)
                                                                                                                                                                                {
                                                                                                                                                                                  while (1)
                                                                                                                                                                                  {
                                                                                                                                                                                    int v89 = (char *)(v473 + 2);
                                                                                                                                                                                    *uint64_t v4 = (unint64_t)v89;
LABEL_1631:
                                                                                                                                                                                    v656[0] = 0;
                                                                                                                                                                                    if ((unint64_t)v89 >= v82 || *v89 < 0)
                                                                                                                                                                                    {
                                                                                                                                                                                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                        return 0;
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      v656[0] = *v89;
                                                                                                                                                                                      *uint64_t v4 = (unint64_t)(v89 + 1);
                                                                                                                                                                                    }
                                                                                                                                                                                    int v485 = *((_DWORD *)this + 166);
                                                                                                                                                                                    if (v485 == *((_DWORD *)this + 167))
                                                                                                                                                                                    {
                                                                                                                                                                                      wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v643, v485 + 1);
                                                                                                                                                                                      int v485 = *((_DWORD *)this + 166);
                                                                                                                                                                                    }
                                                                                                                                                                                    unsigned int v486 = v656[0];
                                                                                                                                                                                    uint64_t v487 = *((void *)this + 82);
                                                                                                                                                                                    *((_DWORD *)this + 166) = v485 + 1;
                                                                                                                                                                                    *(_DWORD *)(v487 + 4 * v485) = v486;
                                                                                                                                                                                    int v488 = *((_DWORD *)this + 167) - *((_DWORD *)this + 166);
                                                                                                                                                                                    if (v488 >= 1)
                                                                                                                                                                                    {
                                                                                                                                                                                      int v489 = v488 + 1;
                                                                                                                                                                                      do
                                                                                                                                                                                      {
                                                                                                                                                                                        unint64_t v490 = *v5;
                                                                                                                                                                                        v491 = (unsigned __int8 *)*v4;
                                                                                                                                                                                        if ((int)(*v5 - *v4) < 2 || *v491 != 176 || v491[1] != 7) {
                                                                                                                                                                                          break;
                                                                                                                                                                                        }
                                                                                                                                                                                        *uint64_t v4 = (unint64_t)(v491 + 2);
                                                                                                                                                                                        if ((unint64_t)(v491 + 2) >= v490 || (char)v491[2] < 0)
                                                                                                                                                                                        {
                                                                                                                                                                                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                            return 0;
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          v656[0] = v491[2];
                                                                                                                                                                                          *uint64_t v4 = (unint64_t)(v491 + 3);
                                                                                                                                                                                        }
                                                                                                                                                                                        int v492 = *((_DWORD *)this + 166);
                                                                                                                                                                                        if (v492 >= *((_DWORD *)this + 167))
                                                                                                                                                                                        {
                                                                                                                                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                          int v492 = *((_DWORD *)this + 166);
                                                                                                                                                                                        }
                                                                                                                                                                                        unsigned int v493 = v656[0];
                                                                                                                                                                                        uint64_t v494 = *((void *)this + 82);
                                                                                                                                                                                        *((_DWORD *)this + 166) = v492 + 1;
                                                                                                                                                                                        *(_DWORD *)(v494 + 4 * v492) = v493;
                                                                                                                                                                                        --v489;
                                                                                                                                                                                      }
                                                                                                                                                                                      while (v489 > 1);
                                                                                                                                                                                    }
LABEL_1649:
                                                                                                                                                                                    unint64_t v82 = *v5;
                                                                                                                                                                                    v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                    if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                      break;
                                                                                                                                                                                    }
                                                                                                                                                                                    int v495 = *v473;
                                                                                                                                                                                    if (v495 == 184)
                                                                                                                                                                                    {
                                                                                                                                                                                      if (v473[1] == 7)
                                                                                                                                                                                      {
                                                                                                                                                                                        while (1)
                                                                                                                                                                                        {
                                                                                                                                                                                          char v90 = (char *)(v473 + 2);
                                                                                                                                                                                          *uint64_t v4 = (unint64_t)v90;
LABEL_1656:
                                                                                                                                                                                          v656[0] = 0;
                                                                                                                                                                                          if ((unint64_t)v90 >= v82 || *v90 < 0)
                                                                                                                                                                                          {
                                                                                                                                                                                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                              return 0;
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            v656[0] = *v90;
                                                                                                                                                                                            *uint64_t v4 = (unint64_t)(v90 + 1);
                                                                                                                                                                                          }
                                                                                                                                                                                          int v496 = *((_DWORD *)this + 170);
                                                                                                                                                                                          if (v496 == *((_DWORD *)this + 171))
                                                                                                                                                                                          {
                                                                                                                                                                                            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v645, v496 + 1);
                                                                                                                                                                                            int v496 = *((_DWORD *)this + 170);
                                                                                                                                                                                          }
                                                                                                                                                                                          unsigned int v497 = v656[0];
                                                                                                                                                                                          uint64_t v498 = *((void *)this + 84);
                                                                                                                                                                                          *((_DWORD *)this + 170) = v496 + 1;
                                                                                                                                                                                          *(_DWORD *)(v498 + 4 * v496) = v497;
                                                                                                                                                                                          int v499 = *((_DWORD *)this + 171) - *((_DWORD *)this + 170);
                                                                                                                                                                                          if (v499 >= 1)
                                                                                                                                                                                          {
                                                                                                                                                                                            int v500 = v499 + 1;
                                                                                                                                                                                            do
                                                                                                                                                                                            {
                                                                                                                                                                                              unint64_t v501 = *v5;
                                                                                                                                                                                              v502 = (unsigned __int8 *)*v4;
                                                                                                                                                                                              if ((int)(*v5 - *v4) < 2 || *v502 != 184 || v502[1] != 7) {
                                                                                                                                                                                                break;
                                                                                                                                                                                              }
                                                                                                                                                                                              *uint64_t v4 = (unint64_t)(v502 + 2);
                                                                                                                                                                                              if ((unint64_t)(v502 + 2) >= v501 || (char)v502[2] < 0)
                                                                                                                                                                                              {
                                                                                                                                                                                                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                                  return 0;
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                v656[0] = v502[2];
                                                                                                                                                                                                *uint64_t v4 = (unint64_t)(v502 + 3);
                                                                                                                                                                                              }
                                                                                                                                                                                              int v503 = *((_DWORD *)this + 170);
                                                                                                                                                                                              if (v503 >= *((_DWORD *)this + 171))
                                                                                                                                                                                              {
                                                                                                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                int v503 = *((_DWORD *)this + 170);
                                                                                                                                                                                              }
                                                                                                                                                                                              unsigned int v504 = v656[0];
                                                                                                                                                                                              uint64_t v505 = *((void *)this + 84);
                                                                                                                                                                                              *((_DWORD *)this + 170) = v503 + 1;
                                                                                                                                                                                              *(_DWORD *)(v505 + 4 * v503) = v504;
                                                                                                                                                                                              --v500;
                                                                                                                                                                                            }
                                                                                                                                                                                            while (v500 > 1);
                                                                                                                                                                                          }
LABEL_1674:
                                                                                                                                                                                          unint64_t v82 = *v5;
                                                                                                                                                                                          v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                          if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                            break;
                                                                                                                                                                                          }
                                                                                                                                                                                          int v506 = *v473;
                                                                                                                                                                                          if (v506 == 192)
                                                                                                                                                                                          {
                                                                                                                                                                                            if (v473[1] == 7)
                                                                                                                                                                                            {
                                                                                                                                                                                              while (1)
                                                                                                                                                                                              {
                                                                                                                                                                                                int v91 = (char *)(v473 + 2);
                                                                                                                                                                                                *uint64_t v4 = (unint64_t)v91;
LABEL_1681:
                                                                                                                                                                                                v656[0] = 0;
                                                                                                                                                                                                if ((unint64_t)v91 >= v82 || *v91 < 0)
                                                                                                                                                                                                {
                                                                                                                                                                                                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                                    return 0;
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  v656[0] = *v91;
                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)(v91 + 1);
                                                                                                                                                                                                }
                                                                                                                                                                                                int v507 = *((_DWORD *)this + 174);
                                                                                                                                                                                                if (v507 == *((_DWORD *)this + 175))
                                                                                                                                                                                                {
                                                                                                                                                                                                  wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v647, v507 + 1);
                                                                                                                                                                                                  int v507 = *((_DWORD *)this + 174);
                                                                                                                                                                                                }
                                                                                                                                                                                                unsigned int v508 = v656[0];
                                                                                                                                                                                                uint64_t v509 = *((void *)this + 86);
                                                                                                                                                                                                *((_DWORD *)this + 174) = v507 + 1;
                                                                                                                                                                                                *(_DWORD *)(v509 + 4 * v507) = v508;
                                                                                                                                                                                                int v510 = *((_DWORD *)this + 175) - *((_DWORD *)this + 174);
                                                                                                                                                                                                if (v510 >= 1)
                                                                                                                                                                                                {
                                                                                                                                                                                                  int v511 = v510 + 1;
                                                                                                                                                                                                  do
                                                                                                                                                                                                  {
                                                                                                                                                                                                    unint64_t v512 = *v5;
                                                                                                                                                                                                    v513 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                    if ((int)(*v5 - *v4) < 2 || *v513 != 192 || v513[1] != 7) {
                                                                                                                                                                                                      break;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)(v513 + 2);
                                                                                                                                                                                                    if ((unint64_t)(v513 + 2) >= v512 || (char)v513[2] < 0)
                                                                                                                                                                                                    {
                                                                                                                                                                                                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v656)) {
                                                                                                                                                                                                        return 0;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      v656[0] = v513[2];
                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)(v513 + 3);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    int v514 = *((_DWORD *)this + 174);
                                                                                                                                                                                                    if (v514 >= *((_DWORD *)this + 175))
                                                                                                                                                                                                    {
                                                                                                                                                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                      int v514 = *((_DWORD *)this + 174);
                                                                                                                                                                                                    }
                                                                                                                                                                                                    unsigned int v515 = v656[0];
                                                                                                                                                                                                    uint64_t v516 = *((void *)this + 86);
                                                                                                                                                                                                    *((_DWORD *)this + 174) = v514 + 1;
                                                                                                                                                                                                    *(_DWORD *)(v516 + 4 * v514) = v515;
                                                                                                                                                                                                    --v511;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  while (v511 > 1);
                                                                                                                                                                                                }
LABEL_1699:
                                                                                                                                                                                                unint64_t v82 = *v5;
                                                                                                                                                                                                v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                  break;
                                                                                                                                                                                                }
                                                                                                                                                                                                int v517 = *v473;
                                                                                                                                                                                                if (v517 == 200)
                                                                                                                                                                                                {
                                                                                                                                                                                                  if (v473[1] == 7)
                                                                                                                                                                                                  {
                                                                                                                                                                                                    while (1)
                                                                                                                                                                                                    {
                                                                                                                                                                                                      int v92 = (char *)(v473 + 2);
                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)v92;
LABEL_1706:
                                                                                                                                                                                                      *(void *)v656 = 0;
                                                                                                                                                                                                      if ((unint64_t)v92 >= v82 || *v92 < 0)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                          return 0;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        *(void *)v656 = *v92;
                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)(v92 + 1);
                                                                                                                                                                                                      }
                                                                                                                                                                                                      int v518 = *((_DWORD *)this + 178);
                                                                                                                                                                                                      int v519 = *((_DWORD *)this + 179);
                                                                                                                                                                                                      if (v518 == v519)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v648, v518 + 1);
                                                                                                                                                                                                        int v518 = *((_DWORD *)this + 178);
                                                                                                                                                                                                        int v519 = *((_DWORD *)this + 179);
                                                                                                                                                                                                      }
                                                                                                                                                                                                      uint64_t v520 = *(void *)v656;
                                                                                                                                                                                                      uint64_t v521 = *((void *)this + 88);
                                                                                                                                                                                                      int v522 = v518 + 1;
                                                                                                                                                                                                      *((_DWORD *)this + 178) = v518 + 1;
                                                                                                                                                                                                      *(void *)(v521 + 8 * v518) = v520;
                                                                                                                                                                                                      if (v519 - (v518 + 1) >= 1)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        int v523 = v519 - v518;
                                                                                                                                                                                                        do
                                                                                                                                                                                                        {
                                                                                                                                                                                                          unint64_t v524 = *v5;
                                                                                                                                                                                                          v525 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                          if ((int)(*v5 - *v4) < 2 || *v525 != 200 || v525[1] != 7) {
                                                                                                                                                                                                            break;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)(v525 + 2);
                                                                                                                                                                                                          if ((unint64_t)(v525 + 2) >= v524 || (char)v525[2] < 0)
                                                                                                                                                                                                          {
                                                                                                                                                                                                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                              return 0;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            int v522 = *((_DWORD *)this + 178);
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            *(void *)v656 = v525[2];
                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)(v525 + 3);
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (v522 >= *((_DWORD *)this + 179))
                                                                                                                                                                                                          {
                                                                                                                                                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                            int v522 = *((_DWORD *)this + 178);
                                                                                                                                                                                                          }
                                                                                                                                                                                                          uint64_t v526 = *(void *)v656;
                                                                                                                                                                                                          uint64_t v527 = *((void *)this + 88);
                                                                                                                                                                                                          *((_DWORD *)this + 178) = v522 + 1;
                                                                                                                                                                                                          *(void *)(v527 + 8 * v522) = v526;
                                                                                                                                                                                                          --v523;
                                                                                                                                                                                                          ++v522;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        while (v523 > 1);
                                                                                                                                                                                                      }
LABEL_1725:
                                                                                                                                                                                                      unint64_t v82 = *v5;
                                                                                                                                                                                                      v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                      if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                        break;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      int v528 = *v473;
                                                                                                                                                                                                      if (v528 == 208)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        if (v473[1] == 7)
                                                                                                                                                                                                        {
                                                                                                                                                                                                          while (1)
                                                                                                                                                                                                          {
                                                                                                                                                                                                            int v93 = (char *)(v473 + 2);
                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v93;
LABEL_1732:
                                                                                                                                                                                                            *(void *)v656 = 0;
                                                                                                                                                                                                            if ((unint64_t)v93 >= v82 || *v93 < 0)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                return 0;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              *(void *)v656 = *v93;
                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)(v93 + 1);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            int v529 = *((_DWORD *)this + 182);
                                                                                                                                                                                                            int v530 = *((_DWORD *)this + 183);
                                                                                                                                                                                                            if (v529 == v530)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v650, v529 + 1);
                                                                                                                                                                                                              int v529 = *((_DWORD *)this + 182);
                                                                                                                                                                                                              int v530 = *((_DWORD *)this + 183);
                                                                                                                                                                                                            }
                                                                                                                                                                                                            uint64_t v531 = *(void *)v656;
                                                                                                                                                                                                            uint64_t v532 = *((void *)this + 90);
                                                                                                                                                                                                            int v533 = v529 + 1;
                                                                                                                                                                                                            *((_DWORD *)this + 182) = v529 + 1;
                                                                                                                                                                                                            *(void *)(v532 + 8 * v529) = v531;
                                                                                                                                                                                                            if (v530 - (v529 + 1) >= 1)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              int v534 = v530 - v529;
                                                                                                                                                                                                              do
                                                                                                                                                                                                              {
                                                                                                                                                                                                                unint64_t v535 = *v5;
                                                                                                                                                                                                                v536 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                if ((int)(*v5 - *v4) < 2 || *v536 != 208 || v536[1] != 7) {
                                                                                                                                                                                                                  break;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                *uint64_t v4 = (unint64_t)(v536 + 2);
                                                                                                                                                                                                                if ((unint64_t)(v536 + 2) >= v535 || (char)v536[2] < 0)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                    return 0;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  int v533 = *((_DWORD *)this + 182);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  *(void *)v656 = v536[2];
                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)(v536 + 3);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (v533 >= *((_DWORD *)this + 183))
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                                  int v533 = *((_DWORD *)this + 182);
                                                                                                                                                                                                                }
                                                                                                                                                                                                                uint64_t v537 = *(void *)v656;
                                                                                                                                                                                                                uint64_t v538 = *((void *)this + 90);
                                                                                                                                                                                                                *((_DWORD *)this + 182) = v533 + 1;
                                                                                                                                                                                                                *(void *)(v538 + 8 * v533) = v537;
                                                                                                                                                                                                                --v534;
                                                                                                                                                                                                                ++v533;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              while (v534 > 1);
                                                                                                                                                                                                            }
LABEL_1751:
                                                                                                                                                                                                            unint64_t v82 = *v5;
                                                                                                                                                                                                            v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                            if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                              break;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            int v539 = *v473;
                                                                                                                                                                                                            if (v539 == 216)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              if (v473[1] == 7)
                                                                                                                                                                                                              {
                                                                                                                                                                                                                while (1)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  int v94 = (char *)(v473 + 2);
                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)v94;
LABEL_1758:
                                                                                                                                                                                                                  *(void *)v656 = 0;
                                                                                                                                                                                                                  if ((unint64_t)v94 >= v82 || *v94 < 0)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                      return 0;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    *(void *)v656 = *v94;
                                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)(v94 + 1);
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  int v540 = *((_DWORD *)this + 186);
                                                                                                                                                                                                                  int v541 = *((_DWORD *)this + 187);
                                                                                                                                                                                                                  if (v540 == v541)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v651, v540 + 1);
                                                                                                                                                                                                                    int v540 = *((_DWORD *)this + 186);
                                                                                                                                                                                                                    int v541 = *((_DWORD *)this + 187);
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  uint64_t v542 = *(void *)v656;
                                                                                                                                                                                                                  uint64_t v543 = *((void *)this + 92);
                                                                                                                                                                                                                  int v544 = v540 + 1;
                                                                                                                                                                                                                  *((_DWORD *)this + 186) = v540 + 1;
                                                                                                                                                                                                                  *(void *)(v543 + 8 * v540) = v542;
                                                                                                                                                                                                                  if (v541 - (v540 + 1) >= 1)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    int v545 = v541 - v540;
                                                                                                                                                                                                                    do
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      unint64_t v546 = *v5;
                                                                                                                                                                                                                      v547 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                      if ((int)(*v5 - *v4) < 2 || *v547 != 216 || v547[1] != 7) {
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)(v547 + 2);
                                                                                                                                                                                                                      if ((unint64_t)(v547 + 2) >= v546 || (char)v547[2] < 0)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                          return 0;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        int v544 = *((_DWORD *)this + 186);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        *(void *)v656 = v547[2];
                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)(v547 + 3);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      if (v544 >= *((_DWORD *)this + 187))
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                                        int v544 = *((_DWORD *)this + 186);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      uint64_t v548 = *(void *)v656;
                                                                                                                                                                                                                      uint64_t v549 = *((void *)this + 92);
                                                                                                                                                                                                                      *((_DWORD *)this + 186) = v544 + 1;
                                                                                                                                                                                                                      *(void *)(v549 + 8 * v544) = v548;
                                                                                                                                                                                                                      --v545;
                                                                                                                                                                                                                      ++v544;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    while (v545 > 1);
                                                                                                                                                                                                                  }
LABEL_1777:
                                                                                                                                                                                                                  unint64_t v82 = *v5;
                                                                                                                                                                                                                  v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                  if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  int v550 = *v473;
                                                                                                                                                                                                                  if (v550 == 232)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    if (v473[1] == 7)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      while (1)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        int v95 = (char *)(v473 + 2);
                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v95;
LABEL_1784:
                                                                                                                                                                                                                        *(void *)v656 = 0;
                                                                                                                                                                                                                        if ((unint64_t)v95 >= v82 || *v95 < 0)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                            return 0;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          *(void *)v656 = *v95;
                                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)(v95 + 1);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        int v551 = *((_DWORD *)this + 194);
                                                                                                                                                                                                                        int v552 = *((_DWORD *)this + 195);
                                                                                                                                                                                                                        if (v551 == v552)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v652, v551 + 1);
                                                                                                                                                                                                                          int v551 = *((_DWORD *)this + 194);
                                                                                                                                                                                                                          int v552 = *((_DWORD *)this + 195);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        uint64_t v553 = *(void *)v656;
                                                                                                                                                                                                                        uint64_t v554 = *((void *)this + 96);
                                                                                                                                                                                                                        int v555 = v551 + 1;
                                                                                                                                                                                                                        *((_DWORD *)this + 194) = v551 + 1;
                                                                                                                                                                                                                        *(void *)(v554 + 8 * v551) = v553;
                                                                                                                                                                                                                        if (v552 - (v551 + 1) >= 1)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          int v556 = v552 - v551;
                                                                                                                                                                                                                          do
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            unint64_t v557 = *v5;
                                                                                                                                                                                                                            v558 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                            if ((int)(*v5 - *v4) < 2 || *v558 != 232 || v558[1] != 7) {
                                                                                                                                                                                                                              break;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)(v558 + 2);
                                                                                                                                                                                                                            if ((unint64_t)(v558 + 2) >= v557 || (char)v558[2] < 0)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                                return 0;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              int v555 = *((_DWORD *)this + 194);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              *(void *)v656 = v558[2];
                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)(v558 + 3);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (v555 >= *((_DWORD *)this + 195))
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                                              int v555 = *((_DWORD *)this + 194);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            uint64_t v559 = *(void *)v656;
                                                                                                                                                                                                                            uint64_t v560 = *((void *)this + 96);
                                                                                                                                                                                                                            *((_DWORD *)this + 194) = v555 + 1;
                                                                                                                                                                                                                            *(void *)(v560 + 8 * v555) = v559;
                                                                                                                                                                                                                            --v556;
                                                                                                                                                                                                                            ++v555;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          while (v556 > 1);
                                                                                                                                                                                                                        }
LABEL_1803:
                                                                                                                                                                                                                        unint64_t v82 = *v5;
                                                                                                                                                                                                                        v473 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                        if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                                          break;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        int v561 = *v473;
                                                                                                                                                                                                                        if (v561 == 240)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          if (v473[1] == 7)
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            int v96 = v473 + 2;
                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v96;
LABEL_1810:
                                                                                                                                                                                                                            v657[0] = 0;
                                                                                                                                                                                                                            if ((unint64_t)v96 >= v82 || (char)*v96 < 0)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                              if (!result) {
                                                                                                                                                                                                                                return result;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              unsigned int v562 = v657[0];
                                                                                                                                                                                                                              unint64_t v82 = *v5;
                                                                                                                                                                                                                              v563 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              unsigned int v562 = *v96;
                                                                                                                                                                                                                              v563 = v96 + 1;
                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v563;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            *((_DWORD *)this + 196) = v562;
                                                                                                                                                                                                                            *((_DWORD *)this + 220) |= 0x20000000u;
                                                                                                                                                                                                                            if ((int)v82 - (int)v563 >= 2 && *v563 == 248 && v563[1] == 7)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              int v97 = v563 + 2;
                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v97;
LABEL_1819:
                                                                                                                                                                                                                              v657[0] = 0;
                                                                                                                                                                                                                              if ((unint64_t)v97 >= v82 || (char)*v97 < 0)
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                if (!result) {
                                                                                                                                                                                                                                  return result;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                unsigned int v564 = v657[0];
                                                                                                                                                                                                                                unint64_t v82 = *v5;
                                                                                                                                                                                                                                v565 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                unsigned int v564 = *v97;
                                                                                                                                                                                                                                v565 = v97 + 1;
                                                                                                                                                                                                                                *uint64_t v4 = (unint64_t)v565;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              *((_DWORD *)this + 197) = v564;
                                                                                                                                                                                                                              *((_DWORD *)this + 220) |= 0x40000000u;
                                                                                                                                                                                                                              if ((int)v82 - (int)v565 >= 2 && *v565 == 128 && v565[1] == 8)
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                while (1)
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  int v98 = (char *)(v565 + 2);
                                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)v98;
LABEL_1828:
                                                                                                                                                                                                                                  *(void *)v656 = 0;
                                                                                                                                                                                                                                  if ((unint64_t)v98 >= v82 || *v98 < 0)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                                      return 0;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    *(void *)v656 = *v98;
                                                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)(v98 + 1);
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  int v566 = *((_DWORD *)this + 200);
                                                                                                                                                                                                                                  int v567 = *((_DWORD *)this + 201);
                                                                                                                                                                                                                                  if (v566 == v567)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v638, v566 + 1);
                                                                                                                                                                                                                                    int v566 = *((_DWORD *)this + 200);
                                                                                                                                                                                                                                    int v567 = *((_DWORD *)this + 201);
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  uint64_t v568 = *(void *)v656;
                                                                                                                                                                                                                                  uint64_t v569 = *((void *)this + 99);
                                                                                                                                                                                                                                  int v570 = v566 + 1;
                                                                                                                                                                                                                                  *((_DWORD *)this + 200) = v566 + 1;
                                                                                                                                                                                                                                  *(void *)(v569 + 8 * v566) = v568;
                                                                                                                                                                                                                                  if (v567 - (v566 + 1) >= 1)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    int v571 = v567 - v566;
                                                                                                                                                                                                                                    do
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      unint64_t v572 = *v5;
                                                                                                                                                                                                                                      v573 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                      if ((int)(*v5 - *v4) < 2 || *v573 != 128 || v573[1] != 8) {
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)(v573 + 2);
                                                                                                                                                                                                                                      if ((unint64_t)(v573 + 2) >= v572 || (char)v573[2] < 0)
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                                          return 0;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        int v570 = *((_DWORD *)this + 200);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        *(void *)v656 = v573[2];
                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)(v573 + 3);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if (v570 >= *((_DWORD *)this + 201))
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                                                        int v570 = *((_DWORD *)this + 200);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      uint64_t v574 = *(void *)v656;
                                                                                                                                                                                                                                      uint64_t v575 = *((void *)this + 99);
                                                                                                                                                                                                                                      *((_DWORD *)this + 200) = v570 + 1;
                                                                                                                                                                                                                                      *(void *)(v575 + 8 * v570) = v574;
                                                                                                                                                                                                                                      --v571;
                                                                                                                                                                                                                                      ++v570;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    while (v571 > 1);
                                                                                                                                                                                                                                  }
LABEL_1847:
                                                                                                                                                                                                                                  unint64_t v82 = *v5;
                                                                                                                                                                                                                                  v565 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                  if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  int v576 = *v565;
                                                                                                                                                                                                                                  if (v576 == 136)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    if (v565[1] == 8)
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      int v99 = v565 + 2;
                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)v99;
LABEL_1854:
                                                                                                                                                                                                                                      v657[0] = 0;
                                                                                                                                                                                                                                      if ((unint64_t)v99 >= v82 || (char)*v99 < 0)
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                        if (!result) {
                                                                                                                                                                                                                                          return result;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        unsigned int v577 = v657[0];
                                                                                                                                                                                                                                        unint64_t v82 = *v5;
                                                                                                                                                                                                                                        v578 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        unsigned int v577 = *v99;
                                                                                                                                                                                                                                        v578 = v99 + 1;
                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v578;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      *((_DWORD *)this + 202) = v577;
                                                                                                                                                                                                                                      *((_DWORD *)this + 221) |= 1u;
                                                                                                                                                                                                                                      if ((int)v82 - (int)v578 >= 2 && *v578 == 144 && v578[1] == 8)
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        int v100 = v578 + 2;
                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v100;
LABEL_1863:
                                                                                                                                                                                                                                        v657[0] = 0;
                                                                                                                                                                                                                                        if ((unint64_t)v100 >= v82 || (char)*v100 < 0)
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                          if (!result) {
                                                                                                                                                                                                                                            return result;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          unsigned int v579 = v657[0];
                                                                                                                                                                                                                                          unint64_t v82 = *v5;
                                                                                                                                                                                                                                          v580 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          unsigned int v579 = *v100;
                                                                                                                                                                                                                                          v580 = v100 + 1;
                                                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)v580;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        *((_DWORD *)this + 203) = v579;
                                                                                                                                                                                                                                        *((_DWORD *)this + 221) |= 2u;
                                                                                                                                                                                                                                        if ((int)v82 - (int)v580 >= 2 && *v580 == 152 && v580[1] == 8)
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          int v101 = v580 + 2;
                                                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)v101;
LABEL_1872:
                                                                                                                                                                                                                                          v657[0] = 0;
                                                                                                                                                                                                                                          if ((unint64_t)v101 >= v82 || (char)*v101 < 0)
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                            if (!result) {
                                                                                                                                                                                                                                              return result;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            unsigned int v581 = v657[0];
                                                                                                                                                                                                                                            unint64_t v82 = *v5;
                                                                                                                                                                                                                                            v582 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            unsigned int v581 = *v101;
                                                                                                                                                                                                                                            v582 = v101 + 1;
                                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v582;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          *((_DWORD *)this + 204) = v581;
                                                                                                                                                                                                                                          *((_DWORD *)this + 221) |= 4u;
                                                                                                                                                                                                                                          if ((int)v82 - (int)v582 >= 2 && *v582 == 160 && v582[1] == 8)
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            int v102 = v582 + 2;
                                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v102;
LABEL_1881:
                                                                                                                                                                                                                                            v657[0] = 0;
                                                                                                                                                                                                                                            if ((unint64_t)v102 >= v82 || (char)*v102 < 0)
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                              if (!result) {
                                                                                                                                                                                                                                                return result;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              unsigned int v583 = v657[0];
                                                                                                                                                                                                                                              unint64_t v82 = *v5;
                                                                                                                                                                                                                                              v584 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              unsigned int v583 = *v102;
                                                                                                                                                                                                                                              v584 = v102 + 1;
                                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v584;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            *((_DWORD *)this + 205) = v583;
                                                                                                                                                                                                                                            *((_DWORD *)this + 221) |= 8u;
                                                                                                                                                                                                                                            if ((int)v82 - (int)v584 >= 2 && *v584 == 168 && v584[1] == 8)
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              int v103 = v584 + 2;
                                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v103;
LABEL_1890:
                                                                                                                                                                                                                                              v657[0] = 0;
                                                                                                                                                                                                                                              if ((unint64_t)v103 >= v82 || (char)*v103 < 0)
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                if (!result) {
                                                                                                                                                                                                                                                  return result;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                unsigned int v585 = v657[0];
                                                                                                                                                                                                                                                unint64_t v82 = *v5;
                                                                                                                                                                                                                                                v586 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                unsigned int v585 = *v103;
                                                                                                                                                                                                                                                v586 = v103 + 1;
                                                                                                                                                                                                                                                *uint64_t v4 = (unint64_t)v586;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              *((_DWORD *)this + 206) = v585;
                                                                                                                                                                                                                                              *((_DWORD *)this + 221) |= 0x10u;
                                                                                                                                                                                                                                              if ((int)v82 - (int)v586 >= 2 && *v586 == 176 && v586[1] == 8)
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                while (1)
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  int v104 = (char *)(v586 + 2);
                                                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)v104;
LABEL_1899:
                                                                                                                                                                                                                                                  *(void *)v656 = 0;
                                                                                                                                                                                                                                                  if ((unint64_t)v104 >= v82 || *v104 < 0)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                                                      return 0;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    *(void *)v656 = *v104;
                                                                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)(v104 + 1);
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  int v587 = *((_DWORD *)this + 190);
                                                                                                                                                                                                                                                  int v588 = *((_DWORD *)this + 191);
                                                                                                                                                                                                                                                  if (v587 == v588)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v637, v587 + 1);
                                                                                                                                                                                                                                                    int v587 = *((_DWORD *)this + 190);
                                                                                                                                                                                                                                                    int v588 = *((_DWORD *)this + 191);
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  uint64_t v589 = *(void *)v656;
                                                                                                                                                                                                                                                  uint64_t v590 = *((void *)this + 94);
                                                                                                                                                                                                                                                  int v591 = v587 + 1;
                                                                                                                                                                                                                                                  *((_DWORD *)this + 190) = v587 + 1;
                                                                                                                                                                                                                                                  *(void *)(v590 + 8 * v587) = v589;
                                                                                                                                                                                                                                                  if (v588 - (v587 + 1) >= 1)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    int v592 = v588 - v587;
                                                                                                                                                                                                                                                    do
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      unint64_t v593 = *v5;
                                                                                                                                                                                                                                                      v594 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                      if ((int)(*v5 - *v4) < 2 || *v594 != 176 || v594[1] != 8) {
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)(v594 + 2);
                                                                                                                                                                                                                                                      if ((unint64_t)(v594 + 2) >= v593 || (char)v594[2] < 0)
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v656)) {
                                                                                                                                                                                                                                                          return 0;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        int v591 = *((_DWORD *)this + 190);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        *(void *)v656 = v594[2];
                                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)(v594 + 3);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if (v591 >= *((_DWORD *)this + 191))
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                                                                                                                                                                                                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v657);
                                                                                                                                                                                                                                                        int v591 = *((_DWORD *)this + 190);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      uint64_t v595 = *(void *)v656;
                                                                                                                                                                                                                                                      uint64_t v596 = *((void *)this + 94);
                                                                                                                                                                                                                                                      *((_DWORD *)this + 190) = v591 + 1;
                                                                                                                                                                                                                                                      *(void *)(v596 + 8 * v591) = v595;
                                                                                                                                                                                                                                                      --v592;
                                                                                                                                                                                                                                                      ++v591;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    while (v592 > 1);
                                                                                                                                                                                                                                                  }
LABEL_1918:
                                                                                                                                                                                                                                                  unint64_t v82 = *v5;
                                                                                                                                                                                                                                                  v586 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                  if ((int)(*v5 - *v4) < 2) {
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  int v597 = *v586;
                                                                                                                                                                                                                                                  if (v597 == 184)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    if (v586[1] == 8)
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      int v105 = v586 + 2;
                                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)v105;
LABEL_1925:
                                                                                                                                                                                                                                                      v657[0] = 0;
                                                                                                                                                                                                                                                      if ((unint64_t)v105 >= v82 || (char)*v105 < 0)
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                        if (!result) {
                                                                                                                                                                                                                                                          return result;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        unsigned int v598 = v657[0];
                                                                                                                                                                                                                                                        unint64_t v82 = *v5;
                                                                                                                                                                                                                                                        v599 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        unsigned int v598 = *v105;
                                                                                                                                                                                                                                                        v599 = v105 + 1;
                                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v599;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      *((_DWORD *)this + 207) = v598;
                                                                                                                                                                                                                                                      *((_DWORD *)this + 221) |= 0x20u;
                                                                                                                                                                                                                                                      if ((int)v82 - (int)v599 >= 2 && *v599 == 192 && v599[1] == 8)
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        int v106 = v599 + 2;
                                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v106;
LABEL_1934:
                                                                                                                                                                                                                                                        v657[0] = 0;
                                                                                                                                                                                                                                                        if ((unint64_t)v106 >= v82 || (char)*v106 < 0)
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                          if (!result) {
                                                                                                                                                                                                                                                            return result;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          unsigned int v600 = v657[0];
                                                                                                                                                                                                                                                          unint64_t v82 = *v5;
                                                                                                                                                                                                                                                          v601 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          unsigned int v600 = *v106;
                                                                                                                                                                                                                                                          v601 = v106 + 1;
                                                                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)v601;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        *((_DWORD *)this + 208) = v600;
                                                                                                                                                                                                                                                        *((_DWORD *)this + 221) |= 0x40u;
                                                                                                                                                                                                                                                        if ((int)v82 - (int)v601 >= 2 && *v601 == 200 && v601[1] == 8)
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          int v107 = v601 + 2;
                                                                                                                                                                                                                                                          *uint64_t v4 = (unint64_t)v107;
LABEL_1943:
                                                                                                                                                                                                                                                          v657[0] = 0;
                                                                                                                                                                                                                                                          if ((unint64_t)v107 >= v82 || (char)*v107 < 0)
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                            if (!result) {
                                                                                                                                                                                                                                                              return result;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            unsigned int v602 = v657[0];
                                                                                                                                                                                                                                                            unint64_t v82 = *v5;
                                                                                                                                                                                                                                                            v603 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            unsigned int v602 = *v107;
                                                                                                                                                                                                                                                            v603 = v107 + 1;
                                                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v603;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          *((_DWORD *)this + 209) = v602;
                                                                                                                                                                                                                                                          *((_DWORD *)this + 221) |= 0x80u;
                                                                                                                                                                                                                                                          if ((int)v82 - (int)v603 >= 2 && *v603 == 208 && v603[1] == 8)
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            int v108 = v603 + 2;
                                                                                                                                                                                                                                                            *uint64_t v4 = (unint64_t)v108;
LABEL_1952:
                                                                                                                                                                                                                                                            v657[0] = 0;
                                                                                                                                                                                                                                                            if ((unint64_t)v108 >= v82 || (char)*v108 < 0)
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                              if (!result) {
                                                                                                                                                                                                                                                                return result;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              unsigned int v604 = v657[0];
                                                                                                                                                                                                                                                              unint64_t v82 = *v5;
                                                                                                                                                                                                                                                              v605 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              unsigned int v604 = *v108;
                                                                                                                                                                                                                                                              v605 = v108 + 1;
                                                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v605;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            *((_DWORD *)this + 210) = v604;
                                                                                                                                                                                                                                                            *((_DWORD *)this + 221) |= 0x100u;
                                                                                                                                                                                                                                                            if ((int)v82 - (int)v605 >= 2 && *v605 == 216 && v605[1] == 8)
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              int v109 = v605 + 2;
                                                                                                                                                                                                                                                              *uint64_t v4 = (unint64_t)v109;
LABEL_1961:
                                                                                                                                                                                                                                                              v657[0] = 0;
                                                                                                                                                                                                                                                              if ((unint64_t)v109 >= v82 || (char)*v109 < 0)
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                                if (!result) {
                                                                                                                                                                                                                                                                  return result;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                unsigned int v606 = v657[0];
                                                                                                                                                                                                                                                                unint64_t v82 = *v5;
                                                                                                                                                                                                                                                                v607 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                unsigned int v606 = *v109;
                                                                                                                                                                                                                                                                v607 = v109 + 1;
                                                                                                                                                                                                                                                                *uint64_t v4 = (unint64_t)v607;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              *((_DWORD *)this + 211) = v606;
                                                                                                                                                                                                                                                              *((_DWORD *)this + 221) |= 0x200u;
                                                                                                                                                                                                                                                              if ((int)v82 - (int)v607 >= 2 && *v607 == 224 && v607[1] == 8)
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                char v110 = v607 + 2;
                                                                                                                                                                                                                                                                *uint64_t v4 = (unint64_t)v110;
LABEL_1970:
                                                                                                                                                                                                                                                                v657[0] = 0;
                                                                                                                                                                                                                                                                if ((unint64_t)v110 >= v82 || (char)*v110 < 0)
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                                  if (!result) {
                                                                                                                                                                                                                                                                    return result;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  unsigned int v608 = v657[0];
                                                                                                                                                                                                                                                                  unint64_t v82 = *v5;
                                                                                                                                                                                                                                                                  v609 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  unsigned int v608 = *v110;
                                                                                                                                                                                                                                                                  v609 = v110 + 1;
                                                                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)v609;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                *((_DWORD *)this + 212) = v608;
                                                                                                                                                                                                                                                                *((_DWORD *)this + 221) |= 0x400u;
                                                                                                                                                                                                                                                                if ((int)v82 - (int)v609 >= 2 && *v609 == 232 && v609[1] == 8)
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  char v111 = v609 + 2;
                                                                                                                                                                                                                                                                  *uint64_t v4 = (unint64_t)v111;
LABEL_1979:
                                                                                                                                                                                                                                                                  v657[0] = 0;
                                                                                                                                                                                                                                                                  if ((unint64_t)v111 >= v82 || (char)*v111 < 0)
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                                    if (!result) {
                                                                                                                                                                                                                                                                      return result;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    unsigned int v610 = v657[0];
                                                                                                                                                                                                                                                                    unint64_t v82 = *v5;
                                                                                                                                                                                                                                                                    v611 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    unsigned int v610 = *v111;
                                                                                                                                                                                                                                                                    v611 = v111 + 1;
                                                                                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)v611;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  *((_DWORD *)this + 213) = v610;
                                                                                                                                                                                                                                                                  *((_DWORD *)this + 221) |= 0x800u;
                                                                                                                                                                                                                                                                  if ((int)v82 - (int)v611 >= 2 && *v611 == 240 && v611[1] == 8)
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    int v112 = v611 + 2;
                                                                                                                                                                                                                                                                    *uint64_t v4 = (unint64_t)v112;
LABEL_1988:
                                                                                                                                                                                                                                                                    v657[0] = 0;
                                                                                                                                                                                                                                                                    if ((unint64_t)v112 >= v82 || (char)*v112 < 0)
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                                      if (!result) {
                                                                                                                                                                                                                                                                        return result;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      unsigned int v612 = v657[0];
                                                                                                                                                                                                                                                                      unint64_t v82 = *v5;
                                                                                                                                                                                                                                                                      v613 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      unsigned int v612 = *v112;
                                                                                                                                                                                                                                                                      v613 = v112 + 1;
                                                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)v613;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    *((_DWORD *)this + 214) = v612;
                                                                                                                                                                                                                                                                    *((_DWORD *)this + 221) |= 0x1000u;
                                                                                                                                                                                                                                                                    if ((int)v82 - (int)v613 >= 2 && *v613 == 248 && v613[1] == 8)
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      int v113 = (char *)(v613 + 2);
                                                                                                                                                                                                                                                                      *uint64_t v4 = (unint64_t)v113;
LABEL_1997:
                                                                                                                                                                                                                                                                      v657[0] = 0;
                                                                                                                                                                                                                                                                      if ((unint64_t)v113 >= v82 || *v113 < 0)
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v657);
                                                                                                                                                                                                                                                                        if (!result) {
                                                                                                                                                                                                                                                                          return result;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        unsigned int v614 = v657[0];
                                                                                                                                                                                                                                                                        v615 = (unsigned __int8 *)*v4;
                                                                                                                                                                                                                                                                        unint64_t v82 = *v5;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        unsigned int v614 = *v113;
                                                                                                                                                                                                                                                                        v615 = (unsigned __int8 *)(v113 + 1);
                                                                                                                                                                                                                                                                        *uint64_t v4 = (unint64_t)v615;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      *((_DWORD *)this + 215) = v614;
                                                                                                                                                                                                                                                                      *((_DWORD *)this + 221) |= 0x2000u;
                                                                                                                                                                                                                                                                      if (v615 == (unsigned __int8 *)v82 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        *((_DWORD *)a2 + 8) = 0;
                                                                                                                                                                                                                                                                        uint64_t result = 1;
                                                                                                                                                                                                                                                                        *((unsigned char *)a2 + 36) = 1;
                                                                                                                                                                                                                                                                        return result;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if (v597 != 176 || v586[1] != 8) {
                                                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (v576 != 128 || v565[1] != 8) {
                                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          goto LABEL_2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (v561 != 232 || v473[1] != 7) {
                                                                                                                                                                                                                          goto LABEL_2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  if (v550 != 216 || v473[1] != 7) {
                                                                                                                                                                                                                    goto LABEL_2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              goto LABEL_2;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (v539 != 208 || v473[1] != 7) {
                                                                                                                                                                                                              goto LABEL_2;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        goto LABEL_2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (v528 != 200 || v473[1] != 7) {
                                                                                                                                                                                                        goto LABEL_2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  goto LABEL_2;
                                                                                                                                                                                                }
                                                                                                                                                                                                if (v517 != 192 || v473[1] != 7) {
                                                                                                                                                                                                  goto LABEL_2;
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                            goto LABEL_2;
                                                                                                                                                                                          }
                                                                                                                                                                                          if (v506 != 184 || v473[1] != 7) {
                                                                                                                                                                                            goto LABEL_2;
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                      goto LABEL_2;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (v495 != 176 || v473[1] != 7) {
                                                                                                                                                                                      goto LABEL_2;
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                                goto LABEL_2;
                                                                                                                                                                              }
                                                                                                                                                                              if (v484 != 168 || v473[1] != 7) {
                                                                                                                                                                                goto LABEL_2;
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                  goto LABEL_2;
                                                                                                                }
                                                                                                                if (v417 != 197 || v395[1] != 5) {
                                                                                                                  goto LABEL_2;
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                            goto LABEL_2;
                                                                                                          }
                                                                                                          if (v406 != 184 || v395[1] != 5) {
                                                                                                            goto LABEL_2;
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      goto LABEL_2;
                                    }
                                    if (v331 != 176 || v320[1] != 3) {
                                      goto LABEL_2;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
              if (v312 != 237 || v301[1] != 2) {
                goto LABEL_2;
              }
            }
          }
          continue;
        }
        return 0;
      case 0x17u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v654);
          if (!result) {
            return result;
          }
          goto LABEL_587;
        }
        if (v11 == 5) {
          goto LABEL_568;
        }
LABEL_319:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
      case 0x18u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v8);
          if (!result) {
            return result;
          }
          goto LABEL_613;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
        goto LABEL_594;
      case 0x19u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v7);
          if (!result) {
            return result;
          }
          goto LABEL_639;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
        goto LABEL_620;
      case 0x1Au:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v6);
          if (!result) {
            return result;
          }
          goto LABEL_665;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
        goto LABEL_646;
      case 0x1Bu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v655);
          if (!result) {
            return result;
          }
          goto LABEL_691;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
        goto LABEL_672;
      case 0x1Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v27 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_698;
      case 0x1Du:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v639);
          if (!result) {
            return result;
          }
          goto LABEL_725;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v29 = (char *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_707;
      case 0x1Eu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v644);
          if (!result) {
            return result;
          }
          goto LABEL_750;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v30 = (char *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_732;
      case 0x1Fu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v646);
          if (!result) {
            return result;
          }
          goto LABEL_775;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v31 = (char *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_757;
      case 0x20u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v32 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_782;
      case 0x21u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v122 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_791;
      case 0x22u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v33 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_800;
      case 0x23u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        unsigned int v34 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_809;
      case 0x24u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v35 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_818;
      case 0x25u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v36 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_827;
      case 0x26u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v123 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_836;
      case 0x27u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v37 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_845;
      case 0x28u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v124 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_854;
      case 0x29u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v38 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_863;
      case 0x2Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v125 = (unsigned __int8 *)*v4;
        unint64_t v28 = *v5;
        goto LABEL_872;
      case 0x2Bu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v640);
          if (!result) {
            return result;
          }
          goto LABEL_900;
        }
        if (v11 != 5) {
          goto LABEL_319;
        }
        goto LABEL_881;
      case 0x2Cu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_907;
        }
        goto LABEL_319;
      case 0x2Du:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v649);
          if (!result) {
            return result;
          }
          goto LABEL_931;
        }
        if (v11 == 5) {
          goto LABEL_912;
        }
        goto LABEL_319;
      case 0x2Eu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_938;
        }
        goto LABEL_319;
      case 0x2Fu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_943;
        }
        goto LABEL_319;
      case 0x30u:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_948;
        }
        goto LABEL_319;
      case 0x31u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_319;
        }
        int v39 = *((_DWORD *)this + 218);
        goto LABEL_953;
      case 0x32u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_960;
        }
        goto LABEL_319;
      case 0x33u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_967;
        }
        goto LABEL_319;
      case 0x34u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_974;
        }
        goto LABEL_319;
      case 0x35u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_981;
        }
        goto LABEL_319;
      case 0x36u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v642);
          if (!result) {
            return result;
          }
          goto LABEL_1006;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v40 = (char *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_988;
      case 0x37u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v42 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1013;
      case 0x38u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v126 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1022;
      case 0x39u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        unsigned int v43 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1031;
      case 0x3Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v44 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1040;
      case 0x3Bu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v45 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1049;
      case 0x3Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v46 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1058;
      case 0x3Du:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v47 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1067;
      case 0x3Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v48 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1076;
      case 0x3Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v49 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1085;
      case 0x40u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v50 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1094;
      case 0x41u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v51 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1103;
      case 0x42u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v127 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1112;
      case 0x43u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        uint64_t v52 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1121;
      case 0x44u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v53 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1130;
      case 0x45u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v54 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1139;
      case 0x46u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v55 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1148;
      case 0x47u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v128 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1157;
      case 0x48u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v129 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1166;
      case 0x49u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v56 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1175;
      case 0x4Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v130 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1184;
      case 0x4Bu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v131 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1193;
      case 0x4Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v57 = (unsigned __int8 *)*v4;
        unint64_t v41 = *v5;
        goto LABEL_1202;
      case 0x4Du:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v132 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1211;
      case 0x4Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v58 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1220;
      case 0x4Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v133 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1229;
      case 0x50u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v134 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1238;
      case 0x51u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v135 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1247;
      case 0x52u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v136 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1256;
      case 0x53u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v60 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1265;
      case 0x54u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v137 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1274;
      case 0x55u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v138 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1283;
      case 0x56u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v61 = (unsigned __int8 *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1292;
      case 0x57u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v635);
          if (!result) {
            return result;
          }
          goto LABEL_1321;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v62 = (char *)*v4;
        unint64_t v59 = *v5;
        goto LABEL_1301;
      case 0x58u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, (uint64_t)v653);
          if (!result) {
            return result;
          }
          goto LABEL_1347;
        }
        if (v11 == 5) {
          goto LABEL_1328;
        }
        goto LABEL_319;
      case 0x59u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v63 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1354;
      case 0x5Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v139 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1363;
      case 0x5Bu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v140 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1372;
      case 0x5Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v65 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1381;
      case 0x5Du:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v66 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1390;
      case 0x5Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v67 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1399;
      case 0x5Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v141 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1408;
      case 0x60u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v68 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1417;
      case 0x61u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v69 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1426;
      case 0x62u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v70 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1435;
      case 0x63u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v71 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1444;
      case 0x64u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v142 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1453;
      case 0x65u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v72 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1462;
      case 0x66u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v73 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1471;
      case 0x67u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v74 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1480;
      case 0x68u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v75 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1489;
      case 0x69u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v76 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1498;
      case 0x6Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v77 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1507;
      case 0x6Bu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v143 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1516;
      case 0x6Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v78 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1525;
      case 0x6Du:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v79 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1534;
      case 0x6Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v80 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1543;
      case 0x6Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v81 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1552;
      case 0x70u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v83 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1561;
      case 0x71u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v84 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1570;
      case 0x72u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v85 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1579;
      case 0x73u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v86 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1588;
      case 0x74u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v87 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1597;
      case 0x75u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v636);
          if (!result) {
            return result;
          }
          goto LABEL_1624;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v88 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1606;
      case 0x76u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v643);
          if (!result) {
            return result;
          }
          goto LABEL_1649;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v89 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1631;
      case 0x77u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v645);
          if (!result) {
            return result;
          }
          goto LABEL_1674;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v90 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1656;
      case 0x78u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v647);
          if (!result) {
            return result;
          }
          goto LABEL_1699;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v91 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1681;
      case 0x79u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v648);
          if (!result) {
            return result;
          }
          goto LABEL_1725;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v92 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1706;
      case 0x7Au:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v650);
          if (!result) {
            return result;
          }
          goto LABEL_1751;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v93 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1732;
      case 0x7Bu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v651);
          if (!result) {
            return result;
          }
          goto LABEL_1777;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v94 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1758;
      case 0x7Du:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v652);
          if (!result) {
            return result;
          }
          goto LABEL_1803;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v95 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1784;
      case 0x7Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v96 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1810;
      case 0x7Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v97 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1819;
      case 0x80u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v638);
          if (!result) {
            return result;
          }
          goto LABEL_1847;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v98 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1828;
      case 0x81u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v99 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1854;
      case 0x82u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v100 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1863;
      case 0x83u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v101 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1872;
      case 0x84u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v102 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1881;
      case 0x85u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v103 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1890;
      case 0x86u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v637);
          if (!result) {
            return result;
          }
          goto LABEL_1918;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v104 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1899;
      case 0x87u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v105 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1925;
      case 0x88u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v106 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1934;
      case 0x89u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v107 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1943;
      case 0x8Au:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v108 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1952;
      case 0x8Bu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v109 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1961;
      case 0x8Cu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v110 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1970;
      case 0x8Du:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        char v111 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1979;
      case 0x8Eu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v112 = (unsigned __int8 *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1988;
      case 0x8Fu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_319;
        }
        int v113 = (char *)*v4;
        unint64_t v82 = *v5;
        goto LABEL_1997;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_319;
    }
  }
}

void sub_224935F44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 152));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v9 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v9 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      unsigned int v10 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10);
      if (!result) {
        break;
      }
      unsigned int v6 = v10;
      int v7 = *(_DWORD *)(a2 + 8);
      if (v7 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(a2, v7 + 1);
        int v7 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v8 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v7 + 1;
      *(_DWORD *)(v8 + 4 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v11 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v11 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unint64_t v10 = 0;
      unsigned int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v10);
        if (!result) {
          return result;
        }
      }
      else
      {
        unint64_t v10 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v7 = *(_DWORD *)(a2 + 8);
      if (v7 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(a2, v7 + 1);
        int v7 = *(_DWORD *)(a2 + 8);
      }
      unint64_t v8 = v10;
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v7 + 1;
      *(void *)(v9 + 8 * v7) = v8;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::MotionFitnessAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 868);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 868);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_205;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_206;
  }
LABEL_205:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 69), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_207;
  }
LABEL_206:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_208;
  }
LABEL_207:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_209;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_213;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_214;
  }
LABEL_213:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_215;
  }
LABEL_214:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_216;
  }
LABEL_215:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_221;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_222;
  }
LABEL_221:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 868);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 868) & 0x100000) != 0) {
LABEL_22:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 184), (uint64_t)a2, a4);
LABEL_23:
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(float *)(*(void *)(v5 + 88) + 4 * v7++), a3);
    while (v7 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(float *)(*(void *)(v5 + 104) + 4 * v8++), a3);
    while (v8 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(float *)(*(void *)(v5 + 120) + 4 * v9++), a3);
    while (v9 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(float *)(*(void *)(v5 + 136) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(float *)(*(void *)(v5 + 152) + 4 * v11++), a3);
    while (v11 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(float *)(*(void *)(v5 + 168) + 4 * v12++), a3);
    while (v12 < *(int *)(v5 + 176));
  }
  if ((*(unsigned char *)(v5 + 871) & 8) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned __int8 *)(v5 + 70), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 200) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(*(void *)(v5 + 192) + 4 * v13++), (uint64_t)a2, a4);
    while (v13 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned int *)(*(void *)(v5 + 208) + 4 * v14++), (uint64_t)a2, a4);
    while (v14 < *(int *)(v5 + 216));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(*(void *)(v5 + 224) + 4 * v15++), (uint64_t)a2, a4);
    while (v15 < *(int *)(v5 + 232));
  }
  if ((*(_DWORD *)(v5 + 868) & 0x80000000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 71), (uint64_t)a2, a4);
  }
  int v16 = *(_DWORD *)(v5 + 872);
  if (v16)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned __int8 *)(v5 + 444), (uint64_t)a2, a4);
    int v16 = *(_DWORD *)(v5 + 872);
    if ((v16 & 2) == 0)
    {
LABEL_56:
      if ((v16 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_226;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_56;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned int *)(v5 + 188), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 4) == 0)
  {
LABEL_57:
    if ((v16 & 8) == 0) {
      goto LABEL_58;
    }
    goto LABEL_227;
  }
LABEL_226:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 240), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 8) == 0)
  {
LABEL_58:
    if ((v16 & 0x10) == 0) {
      goto LABEL_59;
    }
    goto LABEL_228;
  }
LABEL_227:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(unsigned int *)(v5 + 244), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x10) == 0)
  {
LABEL_59:
    if ((v16 & 0x20) == 0) {
      goto LABEL_60;
    }
    goto LABEL_229;
  }
LABEL_228:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 248), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x20) == 0)
  {
LABEL_60:
    if ((v16 & 0x40) == 0) {
      goto LABEL_61;
    }
    goto LABEL_230;
  }
LABEL_229:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(unsigned int *)(v5 + 252), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x40) == 0)
  {
LABEL_61:
    if ((v16 & 0x80) == 0) {
      goto LABEL_62;
    }
    goto LABEL_231;
  }
LABEL_230:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 256), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x80) == 0)
  {
LABEL_62:
    if ((v16 & 0x100) == 0) {
      goto LABEL_63;
    }
    goto LABEL_232;
  }
LABEL_231:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 260), (uint64_t)a2, a4);
  int v16 = *(_DWORD *)(v5 + 872);
  if ((v16 & 0x100) == 0)
  {
LABEL_63:
    if ((v16 & 0x200) == 0) {
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_232:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 872) & 0x200) != 0) {
LABEL_64:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
LABEL_65:
  if (*(int *)(v5 + 280) >= 1)
  {
    uint64_t v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (uint64_t)a2, *(float *)(*(void *)(v5 + 272) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 280));
  }
  if ((*(unsigned char *)(v5 + 873) & 8) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, (uint64_t)a2, *(float *)(v5 + 288), a3);
  }
  if (*(int *)(v5 + 304) >= 1)
  {
    uint64_t v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, (uint64_t)a2, *(float *)(*(void *)(v5 + 296) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 304));
  }
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x2000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, (uint64_t)a2, *(float *)(v5 + 292), a3);
    int v19 = *(_DWORD *)(v5 + 872);
    if ((v19 & 0x4000) == 0)
    {
LABEL_75:
      if ((v19 & 0x8000) == 0) {
        goto LABEL_76;
      }
      goto LABEL_236;
    }
  }
  else if ((v19 & 0x4000) == 0)
  {
    goto LABEL_75;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, (uint64_t)a2, *(float *)(v5 + 312), a3);
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x8000) == 0)
  {
LABEL_76:
    if ((v19 & 0x10000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_237;
  }
LABEL_236:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, (uint64_t)a2, *(float *)(v5 + 316), a3);
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x10000) == 0)
  {
LABEL_77:
    if ((v19 & 0x20000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_238;
  }
LABEL_237:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x20000) == 0)
  {
LABEL_78:
    if ((v19 & 0x40000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_239;
  }
LABEL_238:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x40000) == 0)
  {
LABEL_79:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_240;
  }
LABEL_239:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v19 = *(_DWORD *)(v5 + 872);
  if ((v19 & 0x80000) == 0)
  {
LABEL_80:
    if ((v19 & 0x100000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_81;
  }
LABEL_240:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 872) & 0x100000) != 0) {
LABEL_81:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_82:
  if (*(int *)(v5 + 368) >= 1)
  {
    uint64_t v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(*(void *)(v5 + 360) + 4 * v20++), (uint64_t)a2, a4);
    while (v20 < *(int *)(v5 + 368));
  }
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x400000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 376), (uint64_t)a2, a4);
    int v21 = *(_DWORD *)(v5 + 872);
    if ((v21 & 0x800000) == 0)
    {
LABEL_87:
      if ((v21 & 0x1000000) == 0) {
        goto LABEL_88;
      }
      goto LABEL_244;
    }
  }
  else if ((v21 & 0x800000) == 0)
  {
    goto LABEL_87;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned int *)(v5 + 380), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x1000000) == 0)
  {
LABEL_88:
    if ((v21 & 0x2000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_245;
  }
LABEL_244:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(unsigned int *)(v5 + 384), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x2000000) == 0)
  {
LABEL_89:
    if ((v21 & 0x4000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_246;
  }
LABEL_245:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(unsigned int *)(v5 + 388), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x4000000) == 0)
  {
LABEL_90:
    if ((v21 & 0x8000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_247;
  }
LABEL_246:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(unsigned int *)(v5 + 392), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x8000000) == 0)
  {
LABEL_91:
    if ((v21 & 0x10000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_248;
  }
LABEL_247:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(unsigned int *)(v5 + 396), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x10000000) == 0)
  {
LABEL_92:
    if ((v21 & 0x20000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_249;
  }
LABEL_248:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 400), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x20000000) == 0)
  {
LABEL_93:
    if ((v21 & 0x40000000) == 0) {
      goto LABEL_94;
    }
LABEL_250:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(unsigned int *)(v5 + 408), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 872) & 0x80000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_251;
  }
LABEL_249:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(unsigned int *)(v5 + 404), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 872);
  if ((v21 & 0x40000000) != 0) {
    goto LABEL_250;
  }
LABEL_94:
  if ((v21 & 0x80000000) == 0) {
    goto LABEL_95;
  }
LABEL_251:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(unsigned int *)(v5 + 412), (uint64_t)a2, a4);
LABEL_95:
  int v22 = *(_DWORD *)(v5 + 876);
  if (v22)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(unsigned int *)(v5 + 416), (uint64_t)a2, a4);
    int v22 = *(_DWORD *)(v5 + 876);
    if ((v22 & 2) == 0)
    {
LABEL_97:
      if ((v22 & 4) == 0) {
        goto LABEL_98;
      }
      goto LABEL_254;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_97;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(unsigned int *)(v5 + 420), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 4) == 0)
  {
LABEL_98:
    if ((v22 & 8) == 0) {
      goto LABEL_99;
    }
    goto LABEL_255;
  }
LABEL_254:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(unsigned int *)(v5 + 424), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 8) == 0)
  {
LABEL_99:
    if ((v22 & 0x10) == 0) {
      goto LABEL_100;
    }
    goto LABEL_256;
  }
LABEL_255:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(unsigned int *)(v5 + 428), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x10) == 0)
  {
LABEL_100:
    if ((v22 & 0x20) == 0) {
      goto LABEL_101;
    }
    goto LABEL_257;
  }
LABEL_256:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x20) == 0)
  {
LABEL_101:
    if ((v22 & 0x40) == 0) {
      goto LABEL_102;
    }
    goto LABEL_258;
  }
LABEL_257:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x40) == 0)
  {
LABEL_102:
    if ((v22 & 0x80) == 0) {
      goto LABEL_103;
    }
    goto LABEL_259;
  }
LABEL_258:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(unsigned int *)(v5 + 440), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x80) == 0)
  {
LABEL_103:
    if ((v22 & 0x100) == 0) {
      goto LABEL_104;
    }
    goto LABEL_260;
  }
LABEL_259:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 448), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x100) == 0)
  {
LABEL_104:
    if ((v22 & 0x200) == 0) {
      goto LABEL_105;
    }
    goto LABEL_261;
  }
LABEL_260:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(v5 + 452), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x200) == 0)
  {
LABEL_105:
    if ((v22 & 0x400) == 0) {
      goto LABEL_106;
    }
    goto LABEL_262;
  }
LABEL_261:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned int *)(v5 + 456), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x400) == 0)
  {
LABEL_106:
    if ((v22 & 0x800) == 0) {
      goto LABEL_107;
    }
    goto LABEL_263;
  }
LABEL_262:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 460), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x800) == 0)
  {
LABEL_107:
    if ((v22 & 0x1000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_264;
  }
LABEL_263:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(unsigned int *)(v5 + 464), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x1000) == 0)
  {
LABEL_108:
    if ((v22 & 0x2000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_265;
  }
LABEL_264:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(unsigned int *)(v5 + 468), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x2000) == 0)
  {
LABEL_109:
    if ((v22 & 0x4000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_266;
  }
LABEL_265:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(unsigned int *)(v5 + 472), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x4000) == 0)
  {
LABEL_110:
    if ((v22 & 0x8000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_267;
  }
LABEL_266:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(unsigned int *)(v5 + 476), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x8000) == 0)
  {
LABEL_111:
    if ((v22 & 0x10000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_268;
  }
LABEL_267:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 480), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x10000) == 0)
  {
LABEL_112:
    if ((v22 & 0x20000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_269;
  }
LABEL_268:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(unsigned int *)(v5 + 484), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x20000) == 0)
  {
LABEL_113:
    if ((v22 & 0x40000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_270;
  }
LABEL_269:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(unsigned int *)(v5 + 488), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x40000) == 0)
  {
LABEL_114:
    if ((v22 & 0x80000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_271;
  }
LABEL_270:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(unsigned int *)(v5 + 492), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x80000) == 0)
  {
LABEL_115:
    if ((v22 & 0x100000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_272;
  }
LABEL_271:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 445), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 876);
  if ((v22 & 0x100000) == 0)
  {
LABEL_116:
    if ((v22 & 0x200000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_117;
  }
LABEL_272:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned __int8 *)(v5 + 446), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 876) & 0x200000) != 0) {
LABEL_117:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned __int8 *)(v5 + 447), (uint64_t)a2, a4);
LABEL_118:
  if (*(int *)(v5 + 504) >= 1)
  {
    uint64_t v23 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(*(void *)(v5 + 496) + 4 * v23++), (uint64_t)a2, a4);
    while (v23 < *(int *)(v5 + 504));
  }
  if (*(int *)(v5 + 520) >= 1)
  {
    uint64_t v24 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, (uint64_t)a2, *(float *)(*(void *)(v5 + 512) + 4 * v24++), a3);
    while (v24 < *(int *)(v5 + 520));
  }
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x1000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, *(unsigned int *)(v5 + 528), (uint64_t)a2, a4);
    int v25 = *(_DWORD *)(v5 + 876);
    if ((v25 & 0x2000000) == 0)
    {
LABEL_126:
      if ((v25 & 0x4000000) == 0) {
        goto LABEL_127;
      }
      goto LABEL_276;
    }
  }
  else if ((v25 & 0x2000000) == 0)
  {
    goto LABEL_126;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 532), (uint64_t)a2, a4);
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x4000000) == 0)
  {
LABEL_127:
    if ((v25 & 0x8000000) == 0) {
      goto LABEL_128;
    }
    goto LABEL_277;
  }
LABEL_276:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 536), (uint64_t)a2, a4);
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x8000000) == 0)
  {
LABEL_128:
    if ((v25 & 0x10000000) == 0) {
      goto LABEL_129;
    }
    goto LABEL_278;
  }
LABEL_277:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 540), (uint64_t)a2, a4);
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x10000000) == 0)
  {
LABEL_129:
    if ((v25 & 0x20000000) == 0) {
      goto LABEL_130;
    }
    goto LABEL_279;
  }
LABEL_278:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 544), (uint64_t)a2, a4);
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x20000000) == 0)
  {
LABEL_130:
    if ((v25 & 0x40000000) == 0) {
      goto LABEL_131;
    }
LABEL_280:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 552), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 876) & 0x80000000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_281;
  }
LABEL_279:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 548), (uint64_t)a2, a4);
  int v25 = *(_DWORD *)(v5 + 876);
  if ((v25 & 0x40000000) != 0) {
    goto LABEL_280;
  }
LABEL_131:
  if ((v25 & 0x80000000) == 0) {
    goto LABEL_132;
  }
LABEL_281:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 556), (uint64_t)a2, a4);
LABEL_132:
  int v26 = *(_DWORD *)(v5 + 880);
  if (v26)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 560), (uint64_t)a2, a4);
    int v26 = *(_DWORD *)(v5 + 880);
    if ((v26 & 2) == 0)
    {
LABEL_134:
      if ((v26 & 4) == 0) {
        goto LABEL_135;
      }
      goto LABEL_284;
    }
  }
  else if ((v26 & 2) == 0)
  {
    goto LABEL_134;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 564), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 4) == 0)
  {
LABEL_135:
    if ((v26 & 8) == 0) {
      goto LABEL_136;
    }
    goto LABEL_285;
  }
LABEL_284:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 568), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 8) == 0)
  {
LABEL_136:
    if ((v26 & 0x10) == 0) {
      goto LABEL_137;
    }
    goto LABEL_286;
  }
LABEL_285:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 572), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x10) == 0)
  {
LABEL_137:
    if ((v26 & 0x20) == 0) {
      goto LABEL_138;
    }
    goto LABEL_287;
  }
LABEL_286:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 576), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x20) == 0)
  {
LABEL_138:
    if ((v26 & 0x40) == 0) {
      goto LABEL_139;
    }
    goto LABEL_288;
  }
LABEL_287:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 580), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x40) == 0)
  {
LABEL_139:
    if ((v26 & 0x80) == 0) {
      goto LABEL_140;
    }
    goto LABEL_289;
  }
LABEL_288:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(unsigned int *)(v5 + 584), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x80) == 0)
  {
LABEL_140:
    if ((v26 & 0x100) == 0) {
      goto LABEL_141;
    }
    goto LABEL_290;
  }
LABEL_289:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(unsigned int *)(v5 + 588), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x100) == 0)
  {
LABEL_141:
    if ((v26 & 0x200) == 0) {
      goto LABEL_142;
    }
    goto LABEL_291;
  }
LABEL_290:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(unsigned int *)(v5 + 592), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x200) == 0)
  {
LABEL_142:
    if ((v26 & 0x400) == 0) {
      goto LABEL_143;
    }
    goto LABEL_292;
  }
LABEL_291:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(unsigned int *)(v5 + 596), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x400) == 0)
  {
LABEL_143:
    if ((v26 & 0x800) == 0) {
      goto LABEL_144;
    }
    goto LABEL_293;
  }
LABEL_292:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, *(unsigned int *)(v5 + 600), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x800) == 0)
  {
LABEL_144:
    if ((v26 & 0x1000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_294;
  }
LABEL_293:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(unsigned int *)(v5 + 604), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x1000) == 0)
  {
LABEL_145:
    if ((v26 & 0x2000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_295;
  }
LABEL_294:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(unsigned int *)(v5 + 608), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x2000) == 0)
  {
LABEL_146:
    if ((v26 & 0x4000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_296;
  }
LABEL_295:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(unsigned int *)(v5 + 612), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x4000) == 0)
  {
LABEL_147:
    if ((v26 & 0x8000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_297;
  }
LABEL_296:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(unsigned int *)(v5 + 616), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x8000) == 0)
  {
LABEL_148:
    if ((v26 & 0x10000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_298;
  }
LABEL_297:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(unsigned int *)(v5 + 620), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x10000) == 0)
  {
LABEL_149:
    if ((v26 & 0x20000) == 0) {
      goto LABEL_150;
    }
    goto LABEL_299;
  }
LABEL_298:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(unsigned int *)(v5 + 624), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x20000) == 0)
  {
LABEL_150:
    if ((v26 & 0x40000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_300;
  }
LABEL_299:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(unsigned int *)(v5 + 628), (uint64_t)a2, a4);
  int v26 = *(_DWORD *)(v5 + 880);
  if ((v26 & 0x40000) == 0)
  {
LABEL_151:
    if ((v26 & 0x80000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_152;
  }
LABEL_300:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x73, *(unsigned int *)(v5 + 632), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 880) & 0x80000) != 0) {
LABEL_152:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x74, *(unsigned int *)(v5 + 636), (uint64_t)a2, a4);
LABEL_153:
  if (*(int *)(v5 + 648) >= 1)
  {
    uint64_t v27 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x75, *(unsigned int *)(*(void *)(v5 + 640) + 4 * v27++), (uint64_t)a2, a4);
    while (v27 < *(int *)(v5 + 648));
  }
  if (*(int *)(v5 + 664) >= 1)
  {
    uint64_t v28 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x76, *(unsigned int *)(*(void *)(v5 + 656) + 4 * v28++), (uint64_t)a2, a4);
    while (v28 < *(int *)(v5 + 664));
  }
  if (*(int *)(v5 + 680) >= 1)
  {
    uint64_t v29 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x77, *(unsigned int *)(*(void *)(v5 + 672) + 4 * v29++), (uint64_t)a2, a4);
    while (v29 < *(int *)(v5 + 680));
  }
  if (*(int *)(v5 + 696) >= 1)
  {
    uint64_t v30 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x78, *(unsigned int *)(*(void *)(v5 + 688) + 4 * v30++), (uint64_t)a2, a4);
    while (v30 < *(int *)(v5 + 696));
  }
  if (*(int *)(v5 + 712) >= 1)
  {
    uint64_t v31 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x79, *(void *)(*(void *)(v5 + 704) + 8 * v31++), (uint64_t)a2, a4);
    while (v31 < *(int *)(v5 + 712));
  }
  if (*(int *)(v5 + 728) >= 1)
  {
    uint64_t v32 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7A, *(void *)(*(void *)(v5 + 720) + 8 * v32++), (uint64_t)a2, a4);
    while (v32 < *(int *)(v5 + 728));
  }
  if (*(int *)(v5 + 744) >= 1)
  {
    uint64_t v33 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7B, *(void *)(*(void *)(v5 + 736) + 8 * v33++), (uint64_t)a2, a4);
    while (v33 < *(int *)(v5 + 744));
  }
  if (*(int *)(v5 + 776) >= 1)
  {
    uint64_t v34 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7D, *(void *)(*(void *)(v5 + 768) + 8 * v34++), (uint64_t)a2, a4);
    while (v34 < *(int *)(v5 + 776));
  }
  int v35 = *(_DWORD *)(v5 + 880);
  if ((v35 & 0x20000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7E, *(unsigned int *)(v5 + 784), (uint64_t)a2, a4);
    int v35 = *(_DWORD *)(v5 + 880);
  }
  if ((v35 & 0x40000000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7F, *(unsigned int *)(v5 + 788), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 800) >= 1)
  {
    uint64_t v36 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x80, *(void *)(*(void *)(v5 + 792) + 8 * v36++), (uint64_t)a2, a4);
    while (v36 < *(int *)(v5 + 800));
  }
  int v37 = *(_DWORD *)(v5 + 884);
  if (v37)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x81, *(unsigned int *)(v5 + 808), (uint64_t)a2, a4);
    int v37 = *(_DWORD *)(v5 + 884);
    if ((v37 & 2) == 0)
    {
LABEL_186:
      if ((v37 & 4) == 0) {
        goto LABEL_187;
      }
      goto LABEL_304;
    }
  }
  else if ((v37 & 2) == 0)
  {
    goto LABEL_186;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x82, *(unsigned int *)(v5 + 812), (uint64_t)a2, a4);
  int v37 = *(_DWORD *)(v5 + 884);
  if ((v37 & 4) == 0)
  {
LABEL_187:
    if ((v37 & 8) == 0) {
      goto LABEL_188;
    }
    goto LABEL_305;
  }
LABEL_304:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x83, *(unsigned int *)(v5 + 816), (uint64_t)a2, a4);
  int v37 = *(_DWORD *)(v5 + 884);
  if ((v37 & 8) == 0)
  {
LABEL_188:
    if ((v37 & 0x10) == 0) {
      goto LABEL_190;
    }
    goto LABEL_189;
  }
LABEL_305:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x84, *(unsigned int *)(v5 + 820), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 884) & 0x10) != 0) {
LABEL_189:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x85, *(unsigned int *)(v5 + 824), (uint64_t)a2, a4);
LABEL_190:
  if (*(int *)(v5 + 760) >= 1)
  {
    uint64_t v38 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x86, *(void *)(*(void *)(v5 + 752) + 8 * v38++), (uint64_t)a2, a4);
    while (v38 < *(int *)(v5 + 760));
  }
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x20) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x87, *(unsigned int *)(v5 + 828), (uint64_t)a2, a4);
    int v39 = *(_DWORD *)(v5 + 884);
    if ((v39 & 0x40) == 0)
    {
LABEL_195:
      if ((v39 & 0x80) == 0) {
        goto LABEL_196;
      }
      goto LABEL_309;
    }
  }
  else if ((v39 & 0x40) == 0)
  {
    goto LABEL_195;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x88, *(unsigned int *)(v5 + 832), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x80) == 0)
  {
LABEL_196:
    if ((v39 & 0x100) == 0) {
      goto LABEL_197;
    }
    goto LABEL_310;
  }
LABEL_309:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x89, *(unsigned int *)(v5 + 836), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x100) == 0)
  {
LABEL_197:
    if ((v39 & 0x200) == 0) {
      goto LABEL_198;
    }
    goto LABEL_311;
  }
LABEL_310:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8A, *(unsigned int *)(v5 + 840), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x200) == 0)
  {
LABEL_198:
    if ((v39 & 0x400) == 0) {
      goto LABEL_199;
    }
    goto LABEL_312;
  }
LABEL_311:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8B, *(unsigned int *)(v5 + 844), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x400) == 0)
  {
LABEL_199:
    if ((v39 & 0x800) == 0) {
      goto LABEL_200;
    }
    goto LABEL_313;
  }
LABEL_312:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8C, *(unsigned int *)(v5 + 848), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x800) == 0)
  {
LABEL_200:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_201;
    }
LABEL_314:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8E, *(unsigned int *)(v5 + 856), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 884) & 0x2000) == 0) {
      return this;
    }
    goto LABEL_315;
  }
LABEL_313:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8D, *(unsigned int *)(v5 + 852), (uint64_t)a2, a4);
  int v39 = *(_DWORD *)(v5 + 884);
  if ((v39 & 0x1000) != 0) {
    goto LABEL_314;
  }
LABEL_201:
  if ((v39 & 0x2000) == 0) {
    return this;
  }
LABEL_315:
  uint64_t v40 = *(unsigned int *)(v5 + 860);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x8F, v40, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionFitnessAllDay::ByteSize(awd::metrics::MotionFitnessAllDay *this)
{
  uint64_t v1 = this;
  int v2 = *((_DWORD *)this + 217);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_37;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v3 = 0;
  }
  if ((v2 & 2) != 0) {
    v3 += 2;
  }
  if ((v2 & 4) != 0) {
    int v4 = v3 + 2;
  }
  else {
    int v4 = v3;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 4);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v6 = 1;
    }
    v4 += v6 + 1;
    if ((v2 & 0x10) == 0)
    {
LABEL_13:
      if ((v2 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 5);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v8 = 1;
  }
  v4 += v8 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_25:
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 6);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v10 = 1;
  }
  v4 += v10 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 7);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v12 = 1;
  }
  v4 += v12 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_33:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 8);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v14 = 1;
    }
    v4 += v14 + 1;
  }
LABEL_37:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_79;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 9);
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v16 = 1;
    }
    v4 += v16 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_40:
      if ((v2 & 0x400) == 0) {
        goto LABEL_41;
      }
      goto LABEL_55;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 10);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v18 = 1;
  }
  v4 += v18 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_41:
    if ((v2 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_59;
  }
LABEL_55:
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 11);
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v20 = 1;
  }
  v4 += v20 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_42:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_63;
  }
LABEL_59:
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 12);
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v22 = 1;
  }
  v4 += v22 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_43:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_67;
  }
LABEL_63:
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 13);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v24 = 1;
  }
  v4 += v24 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_44:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_71;
  }
LABEL_67:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 14);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v26 = 1;
  }
  v4 += v26 + 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_45:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_75;
  }
LABEL_71:
  uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 15);
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v28 = 1;
  }
  v4 += v28 + 1;
  if ((v2 & 0x8000) != 0)
  {
LABEL_75:
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 16);
    if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v30 = 1;
    }
    v4 += v30 + 2;
  }
LABEL_79:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_106;
  }
  if ((v2 & 0x10000) != 0)
  {
    uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 18);
    if (v31 >= 0x80)
    {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v32 = 1;
    }
    v4 += v32 + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_82:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_83;
      }
      goto LABEL_94;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_82;
  }
  uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 19);
  if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v34 = 1;
  }
  v4 += v34 + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_83:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_98;
  }
LABEL_94:
  int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 20);
  if (v35 >= 0x80)
  {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v36 = 1;
  }
  v4 += v36 + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_84:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_102;
  }
LABEL_98:
  int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 21);
  if (v37 >= 0x80)
  {
    int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
    int v2 = *((_DWORD *)v1 + 217);
  }
  else
  {
    int v38 = 1;
  }
  v4 += v38 + 2;
  if ((v2 & 0x100000) != 0)
  {
LABEL_102:
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 46);
    if (v39 >= 0x80)
    {
      int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
      int v2 = *((_DWORD *)v1 + 217);
    }
    else
    {
      int v40 = 1;
    }
    v4 += v40 + 2;
  }
LABEL_106:
  if (v2 >> 27)
  {
    int v41 = v4 + 3;
    if ((v2 & 0x8000000) == 0) {
      int v41 = v4;
    }
    if (v2 >= 0) {
      int v4 = v41;
    }
    else {
      int v4 = v41 + 3;
    }
  }
  unsigned int v42 = *((_DWORD *)v1 + 218);
  if (!(_BYTE)v42) {
    goto LABEL_165;
  }
  if (v42) {
    v4 += 3;
  }
  if ((v42 & 2) != 0)
  {
    unsigned int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 47);
    if ((v43 & 0x80000000) != 0)
    {
      int v44 = 10;
    }
    else if (v43 >= 0x80)
    {
      int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      unsigned int v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      int v44 = 1;
    }
    v4 += v44 + 2;
    if ((v42 & 4) == 0)
    {
LABEL_117:
      if ((v42 & 8) == 0) {
        goto LABEL_118;
      }
      goto LABEL_135;
    }
  }
  else if ((v42 & 4) == 0)
  {
    goto LABEL_117;
  }
  int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 60);
  if ((v45 & 0x80000000) != 0)
  {
    int v46 = 10;
  }
  else if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v46 = 1;
  }
  v4 += v46 + 2;
  if ((v42 & 8) == 0)
  {
LABEL_118:
    if ((v42 & 0x10) == 0) {
      goto LABEL_119;
    }
    goto LABEL_141;
  }
LABEL_135:
  int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 61);
  if ((v47 & 0x80000000) != 0)
  {
    int v48 = 10;
  }
  else if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v48 = 1;
  }
  v4 += v48 + 2;
  if ((v42 & 0x10) == 0)
  {
LABEL_119:
    if ((v42 & 0x20) == 0) {
      goto LABEL_120;
    }
LABEL_147:
    int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 63);
    if ((v51 & 0x80000000) != 0)
    {
      int v52 = 10;
    }
    else if (v51 >= 0x80)
    {
      int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
      unsigned int v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      int v52 = 1;
    }
    v4 += v52 + 2;
    if ((v42 & 0x40) == 0)
    {
LABEL_121:
      if ((v42 & 0x80) == 0) {
        goto LABEL_165;
      }
      goto LABEL_159;
    }
    goto LABEL_153;
  }
LABEL_141:
  int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 62);
  if ((v49 & 0x80000000) != 0)
  {
    int v50 = 10;
  }
  else if (v49 >= 0x80)
  {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v50 = 1;
  }
  v4 += v50 + 2;
  if ((v42 & 0x20) != 0) {
    goto LABEL_147;
  }
LABEL_120:
  if ((v42 & 0x40) == 0) {
    goto LABEL_121;
  }
LABEL_153:
  char v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 64);
  if ((v53 & 0x80000000) != 0)
  {
    int v54 = 10;
  }
  else if (v53 >= 0x80)
  {
    int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v54 = 1;
  }
  v4 += v54 + 2;
  if ((v42 & 0x80) != 0)
  {
LABEL_159:
    int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 65);
    if ((v55 & 0x80000000) != 0)
    {
      int v56 = 10;
    }
    else if (v55 >= 0x80)
    {
      int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      unsigned int v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      int v56 = 1;
    }
    v4 += v56 + 2;
  }
LABEL_165:
  if ((v42 & 0xFF00) != 0)
  {
    if ((v42 & 0x100) != 0)
    {
      int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 66);
      if ((v57 & 0x80000000) != 0)
      {
        int v58 = 10;
      }
      else if (v57 >= 0x80)
      {
        int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
        unsigned int v42 = *((_DWORD *)v1 + 218);
      }
      else
      {
        int v58 = 1;
      }
      v4 += v58 + 2;
    }
    if ((v42 & 0x200) != 0)
    {
      unint64_t v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 67);
      if ((v59 & 0x80000000) != 0)
      {
        int v60 = 10;
      }
      else if (v59 >= 0x80)
      {
        int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
        unsigned int v42 = *((_DWORD *)v1 + 218);
      }
      else
      {
        int v60 = 1;
      }
      v4 += v60 + 2;
    }
    int v61 = v4 + 6;
    if ((v42 & 0x800) == 0) {
      int v61 = v4;
    }
    if ((v42 & 0x2000) != 0) {
      v61 += 6;
    }
    if ((v42 & 0x4000) != 0) {
      v61 += 6;
    }
    if ((v42 & 0x8000) != 0) {
      int v4 = v61 + 6;
    }
    else {
      int v4 = v61;
    }
  }
  if ((v42 & 0xFF0000) == 0) {
    goto LABEL_255;
  }
  if ((v42 & 0x10000) != 0)
  {
    uint64_t v62 = *((void *)v1 + 40);
    int v63 = *(unsigned __int8 *)(v62 + 23);
    char v64 = v63;
    uint64_t v65 = *(void *)(v62 + 8);
    if ((v63 & 0x80u) == 0) {
      unint64_t v66 = *(unsigned __int8 *)(v62 + 23);
    }
    else {
      unint64_t v66 = v65;
    }
    if (v66 >= 0x80)
    {
      int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v66);
      int v63 = *(unsigned __int8 *)(v62 + 23);
      uint64_t v65 = *(void *)(v62 + 8);
      unsigned int v42 = *((_DWORD *)v1 + 218);
      char v64 = *(unsigned char *)(v62 + 23);
    }
    else
    {
      int v67 = 1;
    }
    if (v64 < 0) {
      int v63 = v65;
    }
    v4 += v67 + v63 + 2;
    if ((v42 & 0x20000) == 0)
    {
LABEL_192:
      if ((v42 & 0x40000) == 0) {
        goto LABEL_193;
      }
      goto LABEL_216;
    }
  }
  else if ((v42 & 0x20000) == 0)
  {
    goto LABEL_192;
  }
  uint64_t v68 = *((void *)v1 + 41);
  int v69 = *(unsigned __int8 *)(v68 + 23);
  char v70 = v69;
  uint64_t v71 = *(void *)(v68 + 8);
  if ((v69 & 0x80u) == 0) {
    unint64_t v72 = *(unsigned __int8 *)(v68 + 23);
  }
  else {
    unint64_t v72 = v71;
  }
  if (v72 >= 0x80)
  {
    int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v72);
    int v69 = *(unsigned __int8 *)(v68 + 23);
    uint64_t v71 = *(void *)(v68 + 8);
    unsigned int v42 = *((_DWORD *)v1 + 218);
    char v70 = *(unsigned char *)(v68 + 23);
  }
  else
  {
    int v73 = 1;
  }
  if (v70 < 0) {
    int v69 = v71;
  }
  v4 += v73 + v69 + 2;
  if ((v42 & 0x40000) == 0)
  {
LABEL_193:
    if ((v42 & 0x80000) == 0) {
      goto LABEL_194;
    }
    goto LABEL_225;
  }
LABEL_216:
  uint64_t v74 = *((void *)v1 + 42);
  int v75 = *(unsigned __int8 *)(v74 + 23);
  char v76 = v75;
  uint64_t v77 = *(void *)(v74 + 8);
  if ((v75 & 0x80u) == 0) {
    unint64_t v78 = *(unsigned __int8 *)(v74 + 23);
  }
  else {
    unint64_t v78 = v77;
  }
  if (v78 >= 0x80)
  {
    int v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v78);
    int v75 = *(unsigned __int8 *)(v74 + 23);
    uint64_t v77 = *(void *)(v74 + 8);
    unsigned int v42 = *((_DWORD *)v1 + 218);
    char v76 = *(unsigned char *)(v74 + 23);
  }
  else
  {
    int v79 = 1;
  }
  if (v76 < 0) {
    int v75 = v77;
  }
  v4 += v79 + v75 + 2;
  if ((v42 & 0x80000) == 0)
  {
LABEL_194:
    if ((v42 & 0x100000) == 0) {
      goto LABEL_195;
    }
LABEL_234:
    uint64_t v86 = *((void *)v1 + 44);
    int v87 = *(unsigned __int8 *)(v86 + 23);
    char v88 = v87;
    uint64_t v89 = *(void *)(v86 + 8);
    if ((v87 & 0x80u) == 0) {
      unint64_t v90 = *(unsigned __int8 *)(v86 + 23);
    }
    else {
      unint64_t v90 = v89;
    }
    if (v90 >= 0x80)
    {
      int v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90);
      int v87 = *(unsigned __int8 *)(v86 + 23);
      uint64_t v89 = *(void *)(v86 + 8);
      unsigned int v42 = *((_DWORD *)v1 + 218);
      char v88 = *(unsigned char *)(v86 + 23);
    }
    else
    {
      int v91 = 1;
    }
    if (v88 < 0) {
      int v87 = v89;
    }
    v4 += v91 + v87 + 2;
    if ((v42 & 0x400000) == 0)
    {
LABEL_196:
      if ((v42 & 0x800000) == 0) {
        goto LABEL_255;
      }
      goto LABEL_249;
    }
    goto LABEL_243;
  }
LABEL_225:
  uint64_t v80 = *((void *)v1 + 43);
  int v81 = *(unsigned __int8 *)(v80 + 23);
  char v82 = v81;
  uint64_t v83 = *(void *)(v80 + 8);
  if ((v81 & 0x80u) == 0) {
    unint64_t v84 = *(unsigned __int8 *)(v80 + 23);
  }
  else {
    unint64_t v84 = v83;
  }
  if (v84 >= 0x80)
  {
    int v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v84);
    int v81 = *(unsigned __int8 *)(v80 + 23);
    uint64_t v83 = *(void *)(v80 + 8);
    unsigned int v42 = *((_DWORD *)v1 + 218);
    char v82 = *(unsigned char *)(v80 + 23);
  }
  else
  {
    int v85 = 1;
  }
  if (v82 < 0) {
    int v81 = v83;
  }
  v4 += v85 + v81 + 2;
  if ((v42 & 0x100000) != 0) {
    goto LABEL_234;
  }
LABEL_195:
  if ((v42 & 0x400000) == 0) {
    goto LABEL_196;
  }
LABEL_243:
  int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 94);
  if ((v92 & 0x80000000) != 0)
  {
    int v93 = 10;
  }
  else if (v92 >= 0x80)
  {
    int v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v93 = 1;
  }
  v4 += v93 + 2;
  if ((v42 & 0x800000) != 0)
  {
LABEL_249:
    int v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 95);
    if ((v94 & 0x80000000) != 0)
    {
      int v95 = 10;
    }
    else if (v94 >= 0x80)
    {
      int v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94);
      unsigned int v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      int v95 = 1;
    }
    v4 += v95 + 2;
  }
LABEL_255:
  if (!HIBYTE(v42)) {
    goto LABEL_313;
  }
  if ((v42 & 0x1000000) != 0)
  {
    int v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 96);
    if ((v96 & 0x80000000) != 0)
    {
      int v97 = 10;
    }
    else if (v96 >= 0x80)
    {
      int v97 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
      unsigned int v42 = *((_DWORD *)v1 + 218);
    }
    else
    {
      int v97 = 1;
    }
    v4 += v97 + 2;
    if ((v42 & 0x2000000) == 0)
    {
LABEL_258:
      if ((v42 & 0x4000000) == 0) {
        goto LABEL_259;
      }
      goto LABEL_277;
    }
  }
  else if ((v42 & 0x2000000) == 0)
  {
    goto LABEL_258;
  }
  int v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 97);
  if ((v98 & 0x80000000) != 0)
  {
    int v99 = 10;
  }
  else if (v98 >= 0x80)
  {
    int v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v99 = 1;
  }
  v4 += v99 + 2;
  if ((v42 & 0x4000000) == 0)
  {
LABEL_259:
    if ((v42 & 0x8000000) == 0) {
      goto LABEL_260;
    }
    goto LABEL_283;
  }
LABEL_277:
  int v100 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 98);
  if ((v100 & 0x80000000) != 0)
  {
    int v101 = 10;
  }
  else if (v100 >= 0x80)
  {
    int v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v100);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v101 = 1;
  }
  v4 += v101 + 2;
  if ((v42 & 0x8000000) == 0)
  {
LABEL_260:
    if ((v42 & 0x10000000) == 0) {
      goto LABEL_261;
    }
    goto LABEL_289;
  }
LABEL_283:
  int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 99);
  if ((v102 & 0x80000000) != 0)
  {
    int v103 = 10;
  }
  else if (v102 >= 0x80)
  {
    int v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v103 = 1;
  }
  v4 += v103 + 2;
  if ((v42 & 0x10000000) == 0)
  {
LABEL_261:
    if ((v42 & 0x20000000) == 0) {
      goto LABEL_262;
    }
    goto LABEL_295;
  }
LABEL_289:
  int v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 100);
  if ((v104 & 0x80000000) != 0)
  {
    int v105 = 10;
  }
  else if (v104 >= 0x80)
  {
    int v105 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v105 = 1;
  }
  v4 += v105 + 2;
  if ((v42 & 0x20000000) == 0)
  {
LABEL_262:
    if ((v42 & 0x40000000) == 0) {
      goto LABEL_263;
    }
    goto LABEL_301;
  }
LABEL_295:
  int v106 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 101);
  if ((v106 & 0x80000000) != 0)
  {
    int v107 = 10;
  }
  else if (v106 >= 0x80)
  {
    int v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v106);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v107 = 1;
  }
  v4 += v107 + 2;
  if ((v42 & 0x40000000) == 0)
  {
LABEL_263:
    if ((v42 & 0x80000000) == 0) {
      goto LABEL_313;
    }
    goto LABEL_307;
  }
LABEL_301:
  int v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 102);
  if ((v108 & 0x80000000) != 0)
  {
    int v109 = 10;
  }
  else if (v108 >= 0x80)
  {
    int v109 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108);
    unsigned int v42 = *((_DWORD *)v1 + 218);
  }
  else
  {
    int v109 = 1;
  }
  v4 += v109 + 2;
  if ((v42 & 0x80000000) != 0)
  {
LABEL_307:
    char v110 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 103);
    if ((v110 & 0x80000000) != 0)
    {
      int v111 = 10;
    }
    else if (v110 >= 0x80)
    {
      int v111 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v110);
    }
    else
    {
      int v111 = 1;
    }
    v4 += v111 + 2;
  }
LABEL_313:
  unsigned int v112 = *((_DWORD *)v1 + 219);
  if (!(_BYTE)v112) {
    goto LABEL_371;
  }
  if (v112)
  {
    int v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 104);
    if ((v113 & 0x80000000) != 0)
    {
      int v114 = 10;
    }
    else if (v113 >= 0x80)
    {
      int v114 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v114 = 1;
    }
    v4 += v114 + 2;
    if ((v112 & 2) == 0)
    {
LABEL_316:
      if ((v112 & 4) == 0) {
        goto LABEL_317;
      }
      goto LABEL_335;
    }
  }
  else if ((v112 & 2) == 0)
  {
    goto LABEL_316;
  }
  int v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 105);
  if ((v115 & 0x80000000) != 0)
  {
    int v116 = 10;
  }
  else if (v115 >= 0x80)
  {
    int v116 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v116 = 1;
  }
  v4 += v116 + 2;
  if ((v112 & 4) == 0)
  {
LABEL_317:
    if ((v112 & 8) == 0) {
      goto LABEL_318;
    }
    goto LABEL_341;
  }
LABEL_335:
  int v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 106);
  if ((v117 & 0x80000000) != 0)
  {
    int v118 = 10;
  }
  else if (v117 >= 0x80)
  {
    int v118 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v118 = 1;
  }
  v4 += v118 + 2;
  if ((v112 & 8) == 0)
  {
LABEL_318:
    if ((v112 & 0x10) == 0) {
      goto LABEL_319;
    }
    goto LABEL_347;
  }
LABEL_341:
  int v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 107);
  if ((v119 & 0x80000000) != 0)
  {
    int v120 = 10;
  }
  else if (v119 >= 0x80)
  {
    int v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v119);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v120 = 1;
  }
  v4 += v120 + 2;
  if ((v112 & 0x10) == 0)
  {
LABEL_319:
    if ((v112 & 0x20) == 0) {
      goto LABEL_320;
    }
    goto LABEL_353;
  }
LABEL_347:
  int v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 108);
  if ((v121 & 0x80000000) != 0)
  {
    int v122 = 10;
  }
  else if (v121 >= 0x80)
  {
    int v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v122 = 1;
  }
  v4 += v122 + 2;
  if ((v112 & 0x20) == 0)
  {
LABEL_320:
    if ((v112 & 0x40) == 0) {
      goto LABEL_321;
    }
    goto LABEL_359;
  }
LABEL_353:
  int v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 109);
  if ((v123 & 0x80000000) != 0)
  {
    int v124 = 10;
  }
  else if (v123 >= 0x80)
  {
    int v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v124 = 1;
  }
  v4 += v124 + 2;
  if ((v112 & 0x40) == 0)
  {
LABEL_321:
    if ((v112 & 0x80) == 0) {
      goto LABEL_371;
    }
    goto LABEL_365;
  }
LABEL_359:
  int v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 110);
  if ((v125 & 0x80000000) != 0)
  {
    int v126 = 10;
  }
  else if (v125 >= 0x80)
  {
    int v126 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v126 = 1;
  }
  v4 += v126 + 2;
  if ((v112 & 0x80) != 0)
  {
LABEL_365:
    int v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 112);
    if ((v127 & 0x80000000) != 0)
    {
      int v128 = 10;
    }
    else if (v127 >= 0x80)
    {
      int v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v127);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v128 = 1;
    }
    v4 += v128 + 2;
  }
LABEL_371:
  if ((v112 & 0xFF00) == 0) {
    goto LABEL_429;
  }
  if ((v112 & 0x100) != 0)
  {
    int v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 113);
    if ((v129 & 0x80000000) != 0)
    {
      int v130 = 10;
    }
    else if (v129 >= 0x80)
    {
      int v130 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v130 = 1;
    }
    v4 += v130 + 2;
    if ((v112 & 0x200) == 0)
    {
LABEL_374:
      if ((v112 & 0x400) == 0) {
        goto LABEL_375;
      }
      goto LABEL_393;
    }
  }
  else if ((v112 & 0x200) == 0)
  {
    goto LABEL_374;
  }
  int v131 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 114);
  if ((v131 & 0x80000000) != 0)
  {
    int v132 = 10;
  }
  else if (v131 >= 0x80)
  {
    int v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v131);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v132 = 1;
  }
  v4 += v132 + 2;
  if ((v112 & 0x400) == 0)
  {
LABEL_375:
    if ((v112 & 0x800) == 0) {
      goto LABEL_376;
    }
    goto LABEL_399;
  }
LABEL_393:
  int v133 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 115);
  if ((v133 & 0x80000000) != 0)
  {
    int v134 = 10;
  }
  else if (v133 >= 0x80)
  {
    int v134 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v133);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v134 = 1;
  }
  v4 += v134 + 2;
  if ((v112 & 0x800) == 0)
  {
LABEL_376:
    if ((v112 & 0x1000) == 0) {
      goto LABEL_377;
    }
    goto LABEL_405;
  }
LABEL_399:
  int v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 116);
  if ((v135 & 0x80000000) != 0)
  {
    int v136 = 10;
  }
  else if (v135 >= 0x80)
  {
    int v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v136 = 1;
  }
  v4 += v136 + 2;
  if ((v112 & 0x1000) == 0)
  {
LABEL_377:
    if ((v112 & 0x2000) == 0) {
      goto LABEL_378;
    }
    goto LABEL_411;
  }
LABEL_405:
  int v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 117);
  if ((v137 & 0x80000000) != 0)
  {
    int v138 = 10;
  }
  else if (v137 >= 0x80)
  {
    int v138 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v138 = 1;
  }
  v4 += v138 + 2;
  if ((v112 & 0x2000) == 0)
  {
LABEL_378:
    if ((v112 & 0x4000) == 0) {
      goto LABEL_379;
    }
    goto LABEL_417;
  }
LABEL_411:
  int v139 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 118);
  if ((v139 & 0x80000000) != 0)
  {
    int v140 = 10;
  }
  else if (v139 >= 0x80)
  {
    int v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v139);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v140 = 1;
  }
  v4 += v140 + 2;
  if ((v112 & 0x4000) == 0)
  {
LABEL_379:
    if ((v112 & 0x8000) == 0) {
      goto LABEL_429;
    }
    goto LABEL_423;
  }
LABEL_417:
  int v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 119);
  if ((v141 & 0x80000000) != 0)
  {
    int v142 = 10;
  }
  else if (v141 >= 0x80)
  {
    int v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v142 = 1;
  }
  v4 += v142 + 2;
  if ((v112 & 0x8000) != 0)
  {
LABEL_423:
    int v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 120);
    if ((v143 & 0x80000000) != 0)
    {
      int v144 = 10;
    }
    else if (v143 >= 0x80)
    {
      int v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v144 = 1;
    }
    v4 += v144 + 2;
  }
LABEL_429:
  if ((v112 & 0xFF0000) == 0) {
    goto LABEL_459;
  }
  if ((v112 & 0x10000) == 0)
  {
    if ((v112 & 0x20000) == 0) {
      goto LABEL_432;
    }
LABEL_440:
    unsigned int v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 122);
    if ((v147 & 0x80000000) != 0)
    {
      int v148 = 10;
    }
    else if (v147 >= 0x80)
    {
      int v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v148 = 1;
    }
    v4 += v148 + 2;
    if ((v112 & 0x40000) == 0) {
      goto LABEL_452;
    }
    goto LABEL_446;
  }
  unsigned int v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 121);
  if ((v145 & 0x80000000) != 0)
  {
    int v146 = 10;
  }
  else if (v145 >= 0x80)
  {
    int v146 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v145);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v146 = 1;
  }
  v4 += v146 + 2;
  if ((v112 & 0x20000) != 0) {
    goto LABEL_440;
  }
LABEL_432:
  if ((v112 & 0x40000) != 0)
  {
LABEL_446:
    int v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 123);
    if ((v149 & 0x80000000) != 0)
    {
      int v150 = 10;
    }
    else if (v149 >= 0x80)
    {
      int v150 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v150 = 1;
    }
    v4 += v150 + 2;
  }
LABEL_452:
  int v151 = v4 + 3;
  if ((v112 & 0x80000) == 0) {
    int v151 = v4;
  }
  if ((v112 & 0x100000) != 0) {
    v151 += 3;
  }
  if ((v112 & 0x200000) != 0) {
    int v4 = v151 + 3;
  }
  else {
    int v4 = v151;
  }
LABEL_459:
  if (!HIBYTE(v112)) {
    goto LABEL_517;
  }
  if ((v112 & 0x1000000) != 0)
  {
    int v152 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 132);
    if ((v152 & 0x80000000) != 0)
    {
      int v153 = 10;
    }
    else if (v152 >= 0x80)
    {
      int v153 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v152);
      unsigned int v112 = *((_DWORD *)v1 + 219);
    }
    else
    {
      int v153 = 1;
    }
    v4 += v153 + 2;
    if ((v112 & 0x2000000) == 0)
    {
LABEL_462:
      if ((v112 & 0x4000000) == 0) {
        goto LABEL_463;
      }
      goto LABEL_481;
    }
  }
  else if ((v112 & 0x2000000) == 0)
  {
    goto LABEL_462;
  }
  int v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 133);
  if ((v154 & 0x80000000) != 0)
  {
    int v155 = 10;
  }
  else if (v154 >= 0x80)
  {
    int v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v155 = 1;
  }
  v4 += v155 + 2;
  if ((v112 & 0x4000000) == 0)
  {
LABEL_463:
    if ((v112 & 0x8000000) == 0) {
      goto LABEL_464;
    }
    goto LABEL_487;
  }
LABEL_481:
  int v156 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 134);
  if ((v156 & 0x80000000) != 0)
  {
    int v157 = 10;
  }
  else if (v156 >= 0x80)
  {
    int v157 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v156);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v157 = 1;
  }
  v4 += v157 + 2;
  if ((v112 & 0x8000000) == 0)
  {
LABEL_464:
    if ((v112 & 0x10000000) == 0) {
      goto LABEL_465;
    }
    goto LABEL_493;
  }
LABEL_487:
  int v158 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 135);
  if ((v158 & 0x80000000) != 0)
  {
    int v159 = 10;
  }
  else if (v158 >= 0x80)
  {
    int v159 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v158);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v159 = 1;
  }
  v4 += v159 + 2;
  if ((v112 & 0x10000000) == 0)
  {
LABEL_465:
    if ((v112 & 0x20000000) == 0) {
      goto LABEL_466;
    }
    goto LABEL_499;
  }
LABEL_493:
  int v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 136);
  if ((v160 & 0x80000000) != 0)
  {
    int v161 = 10;
  }
  else if (v160 >= 0x80)
  {
    int v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v160);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v161 = 1;
  }
  v4 += v161 + 2;
  if ((v112 & 0x20000000) == 0)
  {
LABEL_466:
    if ((v112 & 0x40000000) == 0) {
      goto LABEL_467;
    }
    goto LABEL_505;
  }
LABEL_499:
  int v162 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 137);
  if ((v162 & 0x80000000) != 0)
  {
    int v163 = 10;
  }
  else if (v162 >= 0x80)
  {
    int v163 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v162);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v163 = 1;
  }
  v4 += v163 + 2;
  if ((v112 & 0x40000000) == 0)
  {
LABEL_467:
    if ((v112 & 0x80000000) == 0) {
      goto LABEL_517;
    }
    goto LABEL_511;
  }
LABEL_505:
  int v164 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 138);
  if ((v164 & 0x80000000) != 0)
  {
    int v165 = 10;
  }
  else if (v164 >= 0x80)
  {
    int v165 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v164);
    unsigned int v112 = *((_DWORD *)v1 + 219);
  }
  else
  {
    int v165 = 1;
  }
  v4 += v165 + 2;
  if ((v112 & 0x80000000) != 0)
  {
LABEL_511:
    int v166 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 139);
    if ((v166 & 0x80000000) != 0)
    {
      int v167 = 10;
    }
    else if (v166 >= 0x80)
    {
      int v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v166);
    }
    else
    {
      int v167 = 1;
    }
    v4 += v167 + 2;
  }
LABEL_517:
  unsigned int v168 = *((_DWORD *)v1 + 220);
  if (!(_BYTE)v168) {
    goto LABEL_575;
  }
  if (v168)
  {
    uint64_t v169 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 140);
    if ((v169 & 0x80000000) != 0)
    {
      int v170 = 10;
    }
    else if (v169 >= 0x80)
    {
      int v170 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v169);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v170 = 1;
    }
    v4 += v170 + 2;
    if ((v168 & 2) == 0)
    {
LABEL_520:
      if ((v168 & 4) == 0) {
        goto LABEL_521;
      }
      goto LABEL_539;
    }
  }
  else if ((v168 & 2) == 0)
  {
    goto LABEL_520;
  }
  int v171 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 141);
  if ((v171 & 0x80000000) != 0)
  {
    int v172 = 10;
  }
  else if (v171 >= 0x80)
  {
    int v172 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v171);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v172 = 1;
  }
  v4 += v172 + 2;
  if ((v168 & 4) == 0)
  {
LABEL_521:
    if ((v168 & 8) == 0) {
      goto LABEL_522;
    }
    goto LABEL_545;
  }
LABEL_539:
  signed int v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 142);
  if ((v173 & 0x80000000) != 0)
  {
    int v174 = 10;
  }
  else if (v173 >= 0x80)
  {
    int v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v174 = 1;
  }
  v4 += v174 + 2;
  if ((v168 & 8) == 0)
  {
LABEL_522:
    if ((v168 & 0x10) == 0) {
      goto LABEL_523;
    }
    goto LABEL_551;
  }
LABEL_545:
  int v175 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 143);
  if ((v175 & 0x80000000) != 0)
  {
    int v176 = 10;
  }
  else if (v175 >= 0x80)
  {
    int v176 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v175);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v176 = 1;
  }
  v4 += v176 + 2;
  if ((v168 & 0x10) == 0)
  {
LABEL_523:
    if ((v168 & 0x20) == 0) {
      goto LABEL_524;
    }
    goto LABEL_557;
  }
LABEL_551:
  int v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 144);
  if ((v177 & 0x80000000) != 0)
  {
    int v178 = 10;
  }
  else if (v177 >= 0x80)
  {
    int v178 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v178 = 1;
  }
  v4 += v178 + 2;
  if ((v168 & 0x20) == 0)
  {
LABEL_524:
    if ((v168 & 0x40) == 0) {
      goto LABEL_525;
    }
    goto LABEL_563;
  }
LABEL_557:
  int v179 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 145);
  if ((v179 & 0x80000000) != 0)
  {
    int v180 = 10;
  }
  else if (v179 >= 0x80)
  {
    int v180 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v179);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v180 = 1;
  }
  v4 += v180 + 2;
  if ((v168 & 0x40) == 0)
  {
LABEL_525:
    if ((v168 & 0x80) == 0) {
      goto LABEL_575;
    }
    goto LABEL_569;
  }
LABEL_563:
  int v181 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 146);
  if ((v181 & 0x80000000) != 0)
  {
    int v182 = 10;
  }
  else if (v181 >= 0x80)
  {
    int v182 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v181);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v182 = 1;
  }
  v4 += v182 + 2;
  if ((v168 & 0x80) != 0)
  {
LABEL_569:
    int v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 147);
    if ((v183 & 0x80000000) != 0)
    {
      int v184 = 10;
    }
    else if (v183 >= 0x80)
    {
      int v184 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v184 = 1;
    }
    v4 += v184 + 2;
  }
LABEL_575:
  if ((v168 & 0xFF00) == 0) {
    goto LABEL_633;
  }
  if ((v168 & 0x100) != 0)
  {
    int v185 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 148);
    if ((v185 & 0x80000000) != 0)
    {
      int v186 = 10;
    }
    else if (v185 >= 0x80)
    {
      int v186 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v185);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v186 = 1;
    }
    v4 += v186 + 2;
    if ((v168 & 0x200) == 0)
    {
LABEL_578:
      if ((v168 & 0x400) == 0) {
        goto LABEL_579;
      }
      goto LABEL_597;
    }
  }
  else if ((v168 & 0x200) == 0)
  {
    goto LABEL_578;
  }
  int v187 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 149);
  if ((v187 & 0x80000000) != 0)
  {
    int v188 = 10;
  }
  else if (v187 >= 0x80)
  {
    int v188 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v187);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v188 = 1;
  }
  v4 += v188 + 2;
  if ((v168 & 0x400) == 0)
  {
LABEL_579:
    if ((v168 & 0x800) == 0) {
      goto LABEL_580;
    }
    goto LABEL_603;
  }
LABEL_597:
  unsigned int v189 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 150);
  if ((v189 & 0x80000000) != 0)
  {
    int v190 = 10;
  }
  else if (v189 >= 0x80)
  {
    int v190 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v189);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v190 = 1;
  }
  v4 += v190 + 2;
  if ((v168 & 0x800) == 0)
  {
LABEL_580:
    if ((v168 & 0x1000) == 0) {
      goto LABEL_581;
    }
    goto LABEL_609;
  }
LABEL_603:
  uint64_t v191 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 151);
  if ((v191 & 0x80000000) != 0)
  {
    int v192 = 10;
  }
  else if (v191 >= 0x80)
  {
    int v192 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v191);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v192 = 1;
  }
  v4 += v192 + 2;
  if ((v168 & 0x1000) == 0)
  {
LABEL_581:
    if ((v168 & 0x2000) == 0) {
      goto LABEL_582;
    }
    goto LABEL_615;
  }
LABEL_609:
  int v193 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 152);
  if ((v193 & 0x80000000) != 0)
  {
    int v194 = 10;
  }
  else if (v193 >= 0x80)
  {
    int v194 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v193);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v194 = 1;
  }
  v4 += v194 + 2;
  if ((v168 & 0x2000) == 0)
  {
LABEL_582:
    if ((v168 & 0x4000) == 0) {
      goto LABEL_583;
    }
    goto LABEL_621;
  }
LABEL_615:
  signed int v195 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 153);
  if ((v195 & 0x80000000) != 0)
  {
    int v196 = 10;
  }
  else if (v195 >= 0x80)
  {
    int v196 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v195);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v196 = 1;
  }
  v4 += v196 + 2;
  if ((v168 & 0x4000) == 0)
  {
LABEL_583:
    if ((v168 & 0x8000) == 0) {
      goto LABEL_633;
    }
    goto LABEL_627;
  }
LABEL_621:
  int v197 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 154);
  if ((v197 & 0x80000000) != 0)
  {
    int v198 = 10;
  }
  else if (v197 >= 0x80)
  {
    int v198 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v197);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v198 = 1;
  }
  v4 += v198 + 2;
  if ((v168 & 0x8000) != 0)
  {
LABEL_627:
    int v199 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 155);
    if ((v199 & 0x80000000) != 0)
    {
      int v200 = 10;
    }
    else if (v199 >= 0x80)
    {
      int v200 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v199);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v200 = 1;
    }
    v4 += v200 + 2;
  }
LABEL_633:
  if ((v168 & 0xFF0000) == 0) {
    goto LABEL_663;
  }
  if ((v168 & 0x10000) != 0)
  {
    int v201 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 156);
    if ((v201 & 0x80000000) != 0)
    {
      int v202 = 10;
    }
    else if (v201 >= 0x80)
    {
      int v202 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v201);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v202 = 1;
    }
    v4 += v202 + 2;
    if ((v168 & 0x20000) == 0)
    {
LABEL_636:
      if ((v168 & 0x40000) == 0) {
        goto LABEL_637;
      }
      goto LABEL_651;
    }
  }
  else if ((v168 & 0x20000) == 0)
  {
    goto LABEL_636;
  }
  int v203 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 157);
  if ((v203 & 0x80000000) != 0)
  {
    int v204 = 10;
  }
  else if (v203 >= 0x80)
  {
    int v204 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v203);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v204 = 1;
  }
  v4 += v204 + 2;
  if ((v168 & 0x40000) == 0)
  {
LABEL_637:
    if ((v168 & 0x80000) == 0) {
      goto LABEL_663;
    }
    goto LABEL_657;
  }
LABEL_651:
  int v205 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 158);
  if ((v205 & 0x80000000) != 0)
  {
    int v206 = 10;
  }
  else if (v205 >= 0x80)
  {
    int v206 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v205);
    unsigned int v168 = *((_DWORD *)v1 + 220);
  }
  else
  {
    int v206 = 1;
  }
  v4 += v206 + 2;
  if ((v168 & 0x80000) != 0)
  {
LABEL_657:
    int v207 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 159);
    if ((v207 & 0x80000000) != 0)
    {
      int v208 = 10;
    }
    else if (v207 >= 0x80)
    {
      int v208 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v207);
      unsigned int v168 = *((_DWORD *)v1 + 220);
    }
    else
    {
      int v208 = 1;
    }
    v4 += v208 + 2;
  }
LABEL_663:
  if (v168 >> 29)
  {
    if ((v168 & 0x20000000) != 0)
    {
      int v209 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 196);
      if ((v209 & 0x80000000) != 0)
      {
        int v210 = 10;
      }
      else if (v209 >= 0x80)
      {
        int v210 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v209);
        unsigned int v168 = *((_DWORD *)v1 + 220);
      }
      else
      {
        int v210 = 1;
      }
      v4 += v210 + 2;
    }
    if ((v168 & 0x40000000) != 0)
    {
      unsigned int v211 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 197);
      if ((v211 & 0x80000000) != 0)
      {
        int v212 = 10;
      }
      else if (v211 >= 0x80)
      {
        int v212 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v211);
      }
      else
      {
        int v212 = 1;
      }
      v4 += v212 + 2;
    }
  }
  int v213 = *((_DWORD *)v1 + 221);
  if (!(_BYTE)v213) {
    goto LABEL_736;
  }
  if (v213)
  {
    int v214 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 202);
    if ((v214 & 0x80000000) != 0)
    {
      int v215 = 10;
    }
    else if (v214 >= 0x80)
    {
      int v215 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v214);
      int v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      int v215 = 1;
    }
    v4 += v215 + 2;
    if ((v213 & 2) == 0)
    {
LABEL_681:
      if ((v213 & 4) == 0) {
        goto LABEL_682;
      }
      goto LABEL_700;
    }
  }
  else if ((v213 & 2) == 0)
  {
    goto LABEL_681;
  }
  int v216 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 203);
  if ((v216 & 0x80000000) != 0)
  {
    int v217 = 10;
  }
  else if (v216 >= 0x80)
  {
    int v217 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v216);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v217 = 1;
  }
  v4 += v217 + 2;
  if ((v213 & 4) == 0)
  {
LABEL_682:
    if ((v213 & 8) == 0) {
      goto LABEL_683;
    }
    goto LABEL_706;
  }
LABEL_700:
  int v218 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 204);
  if ((v218 & 0x80000000) != 0)
  {
    int v219 = 10;
  }
  else if (v218 >= 0x80)
  {
    int v219 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v218);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v219 = 1;
  }
  v4 += v219 + 2;
  if ((v213 & 8) == 0)
  {
LABEL_683:
    if ((v213 & 0x10) == 0) {
      goto LABEL_684;
    }
    goto LABEL_712;
  }
LABEL_706:
  int v220 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 205);
  if ((v220 & 0x80000000) != 0)
  {
    int v221 = 10;
  }
  else if (v220 >= 0x80)
  {
    int v221 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v220);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v221 = 1;
  }
  v4 += v221 + 2;
  if ((v213 & 0x10) == 0)
  {
LABEL_684:
    if ((v213 & 0x20) == 0) {
      goto LABEL_685;
    }
LABEL_718:
    uint64_t v224 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 207);
    if ((v224 & 0x80000000) != 0)
    {
      int v225 = 10;
    }
    else if (v224 >= 0x80)
    {
      int v225 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v224);
      int v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      int v225 = 1;
    }
    v4 += v225 + 2;
    if ((v213 & 0x40) == 0)
    {
LABEL_686:
      if ((v213 & 0x80) == 0) {
        goto LABEL_736;
      }
      goto LABEL_730;
    }
    goto LABEL_724;
  }
LABEL_712:
  unsigned int v222 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 206);
  if ((v222 & 0x80000000) != 0)
  {
    int v223 = 10;
  }
  else if (v222 >= 0x80)
  {
    int v223 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v222);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v223 = 1;
  }
  v4 += v223 + 2;
  if ((v213 & 0x20) != 0) {
    goto LABEL_718;
  }
LABEL_685:
  if ((v213 & 0x40) == 0) {
    goto LABEL_686;
  }
LABEL_724:
  int v226 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 208);
  if ((v226 & 0x80000000) != 0)
  {
    int v227 = 10;
  }
  else if (v226 >= 0x80)
  {
    int v227 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v226);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v227 = 1;
  }
  v4 += v227 + 2;
  if ((v213 & 0x80) != 0)
  {
LABEL_730:
    signed int v228 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 209);
    if ((v228 & 0x80000000) != 0)
    {
      int v229 = 10;
    }
    else if (v228 >= 0x80)
    {
      int v229 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v228);
      int v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      int v229 = 1;
    }
    v4 += v229 + 2;
  }
LABEL_736:
  if ((v213 & 0xFF00) == 0)
  {
LABEL_743:
    int v304 = v4;
    goto LABEL_780;
  }
  if ((v213 & 0x100) != 0)
  {
    int v230 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 210);
    if ((v230 & 0x80000000) != 0)
    {
      int v231 = 10;
    }
    else if (v230 >= 0x80)
    {
      int v231 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v230);
      int v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      int v231 = 1;
    }
    v4 += v231 + 2;
    if ((v213 & 0x200) == 0)
    {
LABEL_739:
      if ((v213 & 0x400) == 0) {
        goto LABEL_740;
      }
      goto LABEL_756;
    }
  }
  else if ((v213 & 0x200) == 0)
  {
    goto LABEL_739;
  }
  int v232 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 211);
  if ((v232 & 0x80000000) != 0)
  {
    int v233 = 10;
  }
  else if (v232 >= 0x80)
  {
    int v233 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v232);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v233 = 1;
  }
  v4 += v233 + 2;
  if ((v213 & 0x400) == 0)
  {
LABEL_740:
    if ((v213 & 0x800) == 0) {
      goto LABEL_741;
    }
    goto LABEL_762;
  }
LABEL_756:
  unsigned int v234 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 212);
  if ((v234 & 0x80000000) != 0)
  {
    int v235 = 10;
  }
  else if (v234 >= 0x80)
  {
    int v235 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v234);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v235 = 1;
  }
  v4 += v235 + 2;
  if ((v213 & 0x800) == 0)
  {
LABEL_741:
    if ((v213 & 0x1000) == 0) {
      goto LABEL_742;
    }
LABEL_768:
    int v238 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 214);
    if ((v238 & 0x80000000) != 0)
    {
      int v239 = 10;
    }
    else if (v238 >= 0x80)
    {
      int v239 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v238);
      int v213 = *((_DWORD *)v1 + 221);
    }
    else
    {
      int v239 = 1;
    }
    v4 += v239 + 2;
    if ((v213 & 0x2000) == 0) {
      goto LABEL_743;
    }
    goto LABEL_774;
  }
LABEL_762:
  unsigned int v236 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 213);
  if ((v236 & 0x80000000) != 0)
  {
    int v237 = 10;
  }
  else if (v236 >= 0x80)
  {
    int v237 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v236);
    int v213 = *((_DWORD *)v1 + 221);
  }
  else
  {
    int v237 = 1;
  }
  v4 += v237 + 2;
  if ((v213 & 0x1000) != 0) {
    goto LABEL_768;
  }
LABEL_742:
  if ((v213 & 0x2000) == 0) {
    goto LABEL_743;
  }
LABEL_774:
  unint64_t v240 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 215);
  if ((v240 & 0x80000000) != 0)
  {
    int v241 = 10;
  }
  else if (v240 >= 0x80)
  {
    int v241 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v240);
  }
  else
  {
    int v241 = 1;
  }
  int v304 = v4 + v241 + 2;
LABEL_780:
  int v329 = *((_DWORD *)v1 + 28);
  int v330 = *((_DWORD *)v1 + 24);
  int v328 = *((_DWORD *)v1 + 32);
  int v326 = *((_DWORD *)v1 + 36);
  int v327 = *((_DWORD *)v1 + 40);
  int v325 = *((_DWORD *)v1 + 44);
  int v242 = *((_DWORD *)v1 + 50);
  if (v242 < 1)
  {
    int v244 = 0;
  }
  else
  {
    uint64_t v243 = 0;
    int v244 = 0;
    do
    {
      int v245 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 24)
                                                                                              + 4 * v243);
      if (v245 >= 0x80)
      {
        int v246 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v245);
        int v242 = *((_DWORD *)v1 + 50);
      }
      else
      {
        int v246 = 1;
      }
      v244 += v246;
      ++v243;
    }
    while (v243 < v242);
  }
  int v247 = *((_DWORD *)v1 + 54);
  if (v247 < 1)
  {
    int v249 = 0;
  }
  else
  {
    uint64_t v248 = 0;
    int v249 = 0;
    do
    {
      int v250 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 26)
                                                                                              + 4 * v248);
      if (v250 >= 0x80)
      {
        int v251 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v250);
        int v247 = *((_DWORD *)v1 + 54);
      }
      else
      {
        int v251 = 1;
      }
      v249 += v251;
      ++v248;
    }
    while (v248 < v247);
  }
  int v252 = *((_DWORD *)v1 + 58);
  if (v252 < 1)
  {
    int v254 = 0;
  }
  else
  {
    uint64_t v253 = 0;
    int v254 = 0;
    do
    {
      uint64_t v255 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 28)
                                                                                              + 4 * v253);
      if (v255 >= 0x80)
      {
        int v256 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v255);
        int v252 = *((_DWORD *)v1 + 58);
      }
      else
      {
        int v256 = 1;
      }
      v254 += v256;
      ++v253;
    }
    while (v253 < v252);
  }
  int v317 = *((_DWORD *)v1 + 70);
  int v318 = *((_DWORD *)v1 + 76);
  int v257 = *((_DWORD *)v1 + 92);
  if (v257 < 1)
  {
    int v259 = 0;
  }
  else
  {
    uint64_t v258 = 0;
    int v259 = 0;
    do
    {
      int v260 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 45)
                                                                                              + 4 * v258);
      if (v260 >= 0x80)
      {
        int v261 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v260);
        int v257 = *((_DWORD *)v1 + 92);
      }
      else
      {
        int v261 = 1;
      }
      v259 += v261;
      ++v258;
    }
    while (v258 < v257);
  }
  int v323 = v242;
  int v315 = v257;
  int v331 = *((_DWORD *)v1 + 126);
  if (v331 < 1)
  {
    int v263 = 0;
  }
  else
  {
    uint64_t v262 = 0;
    int v263 = 0;
    do
    {
      int v264 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 62)
                                                                                              + 4 * v262);
      if ((v264 & 0x80000000) != 0)
      {
        int v265 = 10;
      }
      else if (v264 >= 0x80)
      {
        int v265 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v264);
        int v331 = *((_DWORD *)v1 + 126);
      }
      else
      {
        int v265 = 1;
      }
      v263 += v265;
      ++v262;
    }
    while (v262 < v331);
  }
  int v313 = *((_DWORD *)v1 + 130);
  int v314 = v263;
  int v266 = *((_DWORD *)v1 + 162);
  if (v266 < 1)
  {
    int v268 = 0;
  }
  else
  {
    uint64_t v267 = 0;
    int v268 = 0;
    do
    {
      unsigned int v269 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 80)
                                                                                              + 4 * v267);
      if (v269 >= 0x80)
      {
        int v270 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v269);
        int v266 = *((_DWORD *)v1 + 162);
      }
      else
      {
        int v270 = 1;
      }
      v268 += v270;
      ++v267;
    }
    while (v267 < v266);
  }
  int v311 = v266;
  int v271 = *((_DWORD *)v1 + 166);
  if (v271 < 1)
  {
    int v333 = 0;
  }
  else
  {
    uint64_t v272 = 0;
    int v333 = 0;
    do
    {
      v273 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 82)
                                                                                              + 4 * v272);
      if (v273 >= 0x80)
      {
        int v274 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v273);
        int v271 = *((_DWORD *)v1 + 166);
      }
      else
      {
        int v274 = 1;
      }
      v333 += v274;
      ++v272;
    }
    while (v272 < v271);
  }
  int v310 = v271;
  int v275 = *((_DWORD *)v1 + 170);
  if (v275 < 1)
  {
    int v332 = 0;
  }
  else
  {
    uint64_t v276 = 0;
    int v332 = 0;
    do
    {
      v277 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 84)
                                                                                              + 4 * v276);
      if (v277 >= 0x80)
      {
        int v278 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v277);
        int v275 = *((_DWORD *)v1 + 170);
      }
      else
      {
        int v278 = 1;
      }
      v332 += v278;
      ++v276;
    }
    while (v276 < v275);
  }
  int v309 = v275;
  int v279 = *((_DWORD *)v1 + 174);
  if (v279 < 1)
  {
    int v281 = 0;
  }
  else
  {
    uint64_t v280 = 0;
    int v281 = 0;
    do
    {
      unsigned int v282 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)v1 + 86)
                                                                                              + 4 * v280);
      if (v282 >= 0x80)
      {
        int v283 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v282);
        int v279 = *((_DWORD *)v1 + 174);
      }
      else
      {
        int v283 = 1;
      }
      v281 += v283;
      ++v280;
    }
    while (v280 < v279);
  }
  int v307 = v279;
  int v308 = v281;
  int v312 = v268;
  LODWORD(v284) = *((_DWORD *)v1 + 178);
  if ((int)v284 < 1)
  {
    int v286 = 0;
  }
  else
  {
    uint64_t v285 = 0;
    int v286 = 0;
    do
    {
      v286 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v1 + 88) + 8 * v285++));
      uint64_t v284 = *((int *)v1 + 178);
    }
    while (v285 < v284);
  }
  int v306 = v284;
  int v324 = v244;
  LODWORD(v284) = *((_DWORD *)v1 + 182);
  if ((int)v284 < 1)
  {
    int v288 = 0;
  }
  else
  {
    uint64_t v287 = 0;
    int v288 = 0;
    do
    {
      v288 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v1 + 90) + 8 * v287++));
      uint64_t v284 = *((int *)v1 + 182);
    }
    while (v287 < v284);
  }
  int v305 = v284;
  int v321 = v247;
  LODWORD(v289) = *((_DWORD *)v1 + 186);
  int v316 = v259;
  if ((int)v289 < 1)
  {
    int v291 = 0;
  }
  else
  {
    uint64_t v290 = 0;
    int v291 = 0;
    do
    {
      v291 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v1 + 92) + 8 * v290++));
      uint64_t v289 = *((int *)v1 + 186);
    }
    while (v290 < v289);
  }
  int v322 = v249;
  LODWORD(v292) = *((_DWORD *)v1 + 190);
  int v319 = v252;
  if ((int)v292 < 1)
  {
    int v294 = 0;
  }
  else
  {
    uint64_t v293 = 0;
    int v294 = 0;
    do
    {
      v294 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v1 + 94) + 8 * v293++));
      uint64_t v292 = *((int *)v1 + 190);
    }
    while (v293 < v292);
  }
  int v320 = v254;
  LODWORD(v295) = *((_DWORD *)v1 + 194);
  if ((int)v295 < 1)
  {
    int v297 = 0;
  }
  else
  {
    uint64_t v296 = 0;
    int v297 = 0;
    do
    {
      v297 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v1 + 96) + 8 * v296++));
      uint64_t v295 = *((int *)v1 + 194);
    }
    while (v296 < v295);
  }
  LODWORD(v298) = *((_DWORD *)v1 + 200);
  if ((int)v298 < 1)
  {
    int v301 = 0;
  }
  else
  {
    int v303 = v286;
    int v299 = v1;
    uint64_t v300 = 0;
    int v301 = 0;
    do
    {
      v301 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)v299 + 99) + 8 * v300++));
      uint64_t v298 = *((int *)v299 + 200);
    }
    while (v300 < v298);
    uint64_t v1 = v299;
    int v286 = v303;
  }
  uint64_t result = (v324
                        + v304
                        + v322
                        + v320
                        + v316
                        + v314
                        + 6 * (v329 + v330 + v328 + v326 + v327 + v325 + v317 + v318 + v313)
                        + v312
                        + v333
                        + v332
                        + v308
                        + v286
                        + v288
                        + v291
                        + v294
                        + v297
                        + v301
                        + 2
                        * (v321
                         + v323
                         + v319
                         + v315
                         + v331
                         + v311
                         + v310
                         + v309
                         + v307
                         + v306
                         + v305
                         + v289
                         + v292
                         + v295
                         + v298));
  *((_DWORD *)v1 + 216) = result;
  return result;
}

void awd::metrics::MotionFitnessAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionFitnessAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessAllDay::CopyFrom(awd::metrics::MotionFitnessAllDay *this, const awd::metrics::MotionFitnessAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessAllDay *))(*(void *)this + 32))(this);
    awd::metrics::MotionFitnessAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessAllDay::IsInitialized(awd::metrics::MotionFitnessAllDay *this)
{
  return 1;
}

double awd::metrics::MotionFitnessAllDay::Swap(awd::metrics::MotionFitnessAllDay *this, awd::metrics::MotionFitnessAllDay *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 68);
    *((unsigned char *)this + 68) = *((unsigned char *)a2 + 68);
    *((unsigned char *)a2 + 68) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 69);
    *((unsigned char *)this + 69) = *((unsigned char *)a2 + 69);
    *((unsigned char *)a2 + 69) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    LODWORD(v2) = *((_DWORD *)this + 46);
    *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
    *((_DWORD *)a2 + 46) = v2;
    uint64_t v3 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    uint64_t v4 = *((void *)a2 + 12);
    *((void *)a2 + 11) = v3;
    uint64_t v5 = *((void *)this + 12);
    *((void *)this + 12) = v4;
    *((void *)a2 + 12) = v5;
    uint64_t v6 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    uint64_t v7 = *((void *)a2 + 14);
    *((void *)a2 + 13) = v6;
    uint64_t v8 = *((void *)this + 14);
    *((void *)this + 14) = v7;
    *((void *)a2 + 14) = v8;
    uint64_t v9 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    uint64_t v10 = *((void *)a2 + 16);
    *((void *)a2 + 15) = v9;
    uint64_t v11 = *((void *)this + 16);
    *((void *)this + 16) = v10;
    *((void *)a2 + 16) = v11;
    uint64_t v12 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    uint64_t v13 = *((void *)a2 + 18);
    *((void *)a2 + 17) = v12;
    uint64_t v14 = *((void *)this + 18);
    *((void *)this + 18) = v13;
    *((void *)a2 + 18) = v14;
    uint64_t v15 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    uint64_t v16 = *((void *)a2 + 20);
    *((void *)a2 + 19) = v15;
    uint64_t v17 = *((void *)this + 20);
    *((void *)this + 20) = v16;
    *((void *)a2 + 20) = v17;
    uint64_t v18 = *((void *)this + 21);
    *((void *)this + 21) = *((void *)a2 + 21);
    uint64_t v19 = *((void *)a2 + 22);
    *((void *)a2 + 21) = v18;
    uint64_t v20 = *((void *)this + 22);
    *((void *)this + 22) = v19;
    *((void *)a2 + 22) = v20;
    LOBYTE(v18) = *((unsigned char *)this + 70);
    *((unsigned char *)this + 70) = *((unsigned char *)a2 + 70);
    *((unsigned char *)a2 + 70) = v18;
    uint64_t v21 = *((void *)this + 24);
    *((void *)this + 24) = *((void *)a2 + 24);
    uint64_t v22 = *((void *)a2 + 25);
    *((void *)a2 + 24) = v21;
    uint64_t v23 = *((void *)this + 25);
    *((void *)this + 25) = v22;
    *((void *)a2 + 25) = v23;
    uint64_t v24 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    uint64_t v25 = *((void *)a2 + 27);
    *((void *)a2 + 26) = v24;
    uint64_t v26 = *((void *)this + 27);
    *((void *)this + 27) = v25;
    *((void *)a2 + 27) = v26;
    uint64_t v27 = *((void *)this + 28);
    *((void *)this + 28) = *((void *)a2 + 28);
    uint64_t v28 = *((void *)a2 + 29);
    *((void *)a2 + 28) = v27;
    uint64_t v29 = *((void *)this + 29);
    *((void *)this + 29) = v28;
    *((void *)a2 + 29) = v29;
    LOBYTE(v27) = *((unsigned char *)this + 71);
    *((unsigned char *)this + 71) = *((unsigned char *)a2 + 71);
    *((unsigned char *)a2 + 71) = v27;
    LOBYTE(v27) = *((unsigned char *)this + 444);
    *((unsigned char *)this + 444) = *((unsigned char *)a2 + 444);
    *((unsigned char *)a2 + 444) = v27;
    LODWORD(v27) = *((_DWORD *)this + 47);
    *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
    *((_DWORD *)a2 + 47) = v27;
    LODWORD(v27) = *((_DWORD *)this + 60);
    *((_DWORD *)this + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v27;
    LODWORD(v27) = *((_DWORD *)this + 61);
    *((_DWORD *)this + 61) = *((_DWORD *)a2 + 61);
    *((_DWORD *)a2 + 61) = v27;
    LODWORD(v27) = *((_DWORD *)this + 62);
    *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
    *((_DWORD *)a2 + 62) = v27;
    LODWORD(v27) = *((_DWORD *)this + 63);
    *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
    *((_DWORD *)a2 + 63) = v27;
    LODWORD(v27) = *((_DWORD *)this + 64);
    *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
    *((_DWORD *)a2 + 64) = v27;
    LODWORD(v27) = *((_DWORD *)this + 65);
    *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
    *((_DWORD *)a2 + 65) = v27;
    LODWORD(v27) = *((_DWORD *)this + 66);
    *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v27;
    LODWORD(v27) = *((_DWORD *)this + 67);
    *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v27;
    uint64_t v30 = *((void *)this + 34);
    *((void *)this + 34) = *((void *)a2 + 34);
    uint64_t v31 = *((void *)a2 + 35);
    *((void *)a2 + 34) = v30;
    uint64_t v32 = *((void *)this + 35);
    *((void *)this + 35) = v31;
    *((void *)a2 + 35) = v32;
    LODWORD(v31) = *((_DWORD *)this + 72);
    *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v31;
    uint64_t v33 = *((void *)this + 37);
    *((void *)this + 37) = *((void *)a2 + 37);
    uint64_t v34 = *((void *)a2 + 38);
    *((void *)a2 + 37) = v33;
    uint64_t v35 = *((void *)this + 38);
    *((void *)this + 38) = v34;
    *((void *)a2 + 38) = v35;
    LODWORD(v34) = *((_DWORD *)this + 73);
    *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v34;
    LODWORD(v34) = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v34;
    LODWORD(v34) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v34;
    uint64_t v36 = *((void *)this + 40);
    *((void *)this + 40) = *((void *)a2 + 40);
    *((void *)a2 + 40) = v36;
    uint64_t v37 = *((void *)this + 41);
    *((void *)this + 41) = *((void *)a2 + 41);
    *((void *)a2 + 41) = v37;
    uint64_t v38 = *((void *)this + 42);
    *((void *)this + 42) = *((void *)a2 + 42);
    *((void *)a2 + 42) = v38;
    uint64_t v39 = *((void *)this + 43);
    *((void *)this + 43) = *((void *)a2 + 43);
    *((void *)a2 + 43) = v39;
    uint64_t v40 = *((void *)this + 44);
    *((void *)this + 44) = *((void *)a2 + 44);
    *((void *)a2 + 44) = v40;
    uint64_t v41 = *((void *)this + 45);
    *((void *)this + 45) = *((void *)a2 + 45);
    uint64_t v42 = *((void *)a2 + 46);
    *((void *)a2 + 45) = v41;
    uint64_t v43 = *((void *)this + 46);
    *((void *)this + 46) = v42;
    *((void *)a2 + 46) = v43;
    LODWORD(v41) = *((_DWORD *)this + 94);
    *((_DWORD *)this + 94) = *((_DWORD *)a2 + 94);
    *((_DWORD *)a2 + 94) = v41;
    LODWORD(v41) = *((_DWORD *)this + 95);
    *((_DWORD *)this + 95) = *((_DWORD *)a2 + 95);
    *((_DWORD *)a2 + 95) = v41;
    LODWORD(v41) = *((_DWORD *)this + 96);
    *((_DWORD *)this + 96) = *((_DWORD *)a2 + 96);
    *((_DWORD *)a2 + 96) = v41;
    LODWORD(v41) = *((_DWORD *)this + 97);
    *((_DWORD *)this + 97) = *((_DWORD *)a2 + 97);
    *((_DWORD *)a2 + 97) = v41;
    LODWORD(v41) = *((_DWORD *)this + 98);
    *((_DWORD *)this + 98) = *((_DWORD *)a2 + 98);
    *((_DWORD *)a2 + 98) = v41;
    LODWORD(v41) = *((_DWORD *)this + 99);
    *((_DWORD *)this + 99) = *((_DWORD *)a2 + 99);
    *((_DWORD *)a2 + 99) = v41;
    LODWORD(v41) = *((_DWORD *)this + 100);
    *((_DWORD *)this + 100) = *((_DWORD *)a2 + 100);
    *((_DWORD *)a2 + 100) = v41;
    LODWORD(v41) = *((_DWORD *)this + 101);
    *((_DWORD *)this + 101) = *((_DWORD *)a2 + 101);
    *((_DWORD *)a2 + 101) = v41;
    LODWORD(v41) = *((_DWORD *)this + 102);
    *((_DWORD *)this + 102) = *((_DWORD *)a2 + 102);
    *((_DWORD *)a2 + 102) = v41;
    LODWORD(v41) = *((_DWORD *)this + 103);
    *((_DWORD *)this + 103) = *((_DWORD *)a2 + 103);
    *((_DWORD *)a2 + 103) = v41;
    LODWORD(v41) = *((_DWORD *)this + 104);
    *((_DWORD *)this + 104) = *((_DWORD *)a2 + 104);
    *((_DWORD *)a2 + 104) = v41;
    LODWORD(v41) = *((_DWORD *)this + 105);
    *((_DWORD *)this + 105) = *((_DWORD *)a2 + 105);
    *((_DWORD *)a2 + 105) = v41;
    LODWORD(v41) = *((_DWORD *)this + 106);
    *((_DWORD *)this + 106) = *((_DWORD *)a2 + 106);
    *((_DWORD *)a2 + 106) = v41;
    LODWORD(v41) = *((_DWORD *)this + 107);
    *((_DWORD *)this + 107) = *((_DWORD *)a2 + 107);
    *((_DWORD *)a2 + 107) = v41;
    LODWORD(v41) = *((_DWORD *)this + 108);
    *((_DWORD *)this + 108) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v41;
    LODWORD(v41) = *((_DWORD *)this + 109);
    *((_DWORD *)this + 109) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v41;
    LODWORD(v41) = *((_DWORD *)this + 110);
    *((_DWORD *)this + 110) = *((_DWORD *)a2 + 110);
    *((_DWORD *)a2 + 110) = v41;
    LODWORD(v41) = *((_DWORD *)this + 112);
    *((_DWORD *)this + 112) = *((_DWORD *)a2 + 112);
    *((_DWORD *)a2 + 112) = v41;
    LODWORD(v41) = *((_DWORD *)this + 113);
    *((_DWORD *)this + 113) = *((_DWORD *)a2 + 113);
    *((_DWORD *)a2 + 113) = v41;
    LODWORD(v41) = *((_DWORD *)this + 114);
    *((_DWORD *)this + 114) = *((_DWORD *)a2 + 114);
    *((_DWORD *)a2 + 114) = v41;
    LODWORD(v41) = *((_DWORD *)this + 115);
    *((_DWORD *)this + 115) = *((_DWORD *)a2 + 115);
    *((_DWORD *)a2 + 115) = v41;
    LODWORD(v41) = *((_DWORD *)this + 116);
    *((_DWORD *)this + 116) = *((_DWORD *)a2 + 116);
    *((_DWORD *)a2 + 116) = v41;
    LODWORD(v41) = *((_DWORD *)this + 117);
    *((_DWORD *)this + 117) = *((_DWORD *)a2 + 117);
    *((_DWORD *)a2 + 117) = v41;
    LODWORD(v41) = *((_DWORD *)this + 118);
    *((_DWORD *)this + 118) = *((_DWORD *)a2 + 118);
    *((_DWORD *)a2 + 118) = v41;
    LODWORD(v41) = *((_DWORD *)this + 119);
    *((_DWORD *)this + 119) = *((_DWORD *)a2 + 119);
    *((_DWORD *)a2 + 119) = v41;
    LODWORD(v41) = *((_DWORD *)this + 120);
    *((_DWORD *)this + 120) = *((_DWORD *)a2 + 120);
    *((_DWORD *)a2 + 120) = v41;
    LODWORD(v41) = *((_DWORD *)this + 121);
    *((_DWORD *)this + 121) = *((_DWORD *)a2 + 121);
    *((_DWORD *)a2 + 121) = v41;
    LODWORD(v41) = *((_DWORD *)this + 122);
    *((_DWORD *)this + 122) = *((_DWORD *)a2 + 122);
    *((_DWORD *)a2 + 122) = v41;
    LODWORD(v41) = *((_DWORD *)this + 123);
    *((_DWORD *)this + 123) = *((_DWORD *)a2 + 123);
    *((_DWORD *)a2 + 123) = v41;
    LOBYTE(v41) = *((unsigned char *)this + 445);
    *((unsigned char *)this + 445) = *((unsigned char *)a2 + 445);
    *((unsigned char *)a2 + 445) = v41;
    LOBYTE(v41) = *((unsigned char *)this + 446);
    *((unsigned char *)this + 446) = *((unsigned char *)a2 + 446);
    *((unsigned char *)a2 + 446) = v41;
    LOBYTE(v41) = *((unsigned char *)this + 447);
    *((unsigned char *)this + 447) = *((unsigned char *)a2 + 447);
    *((unsigned char *)a2 + 447) = v41;
    uint64_t v44 = *((void *)this + 62);
    *((void *)this + 62) = *((void *)a2 + 62);
    uint64_t v45 = *((void *)a2 + 63);
    *((void *)a2 + 62) = v44;
    uint64_t v46 = *((void *)this + 63);
    *((void *)this + 63) = v45;
    *((void *)a2 + 63) = v46;
    uint64_t v47 = *((void *)this + 64);
    *((void *)this + 64) = *((void *)a2 + 64);
    uint64_t v48 = *((void *)a2 + 65);
    *((void *)a2 + 64) = v47;
    uint64_t v49 = *((void *)this + 65);
    *((void *)this + 65) = v48;
    *((void *)a2 + 65) = v49;
    LODWORD(v47) = *((_DWORD *)this + 132);
    *((_DWORD *)this + 132) = *((_DWORD *)a2 + 132);
    *((_DWORD *)a2 + 132) = v47;
    LODWORD(v47) = *((_DWORD *)this + 133);
    *((_DWORD *)this + 133) = *((_DWORD *)a2 + 133);
    *((_DWORD *)a2 + 133) = v47;
    LODWORD(v47) = *((_DWORD *)this + 134);
    *((_DWORD *)this + 134) = *((_DWORD *)a2 + 134);
    *((_DWORD *)a2 + 134) = v47;
    LODWORD(v47) = *((_DWORD *)this + 135);
    *((_DWORD *)this + 135) = *((_DWORD *)a2 + 135);
    *((_DWORD *)a2 + 135) = v47;
    LODWORD(v47) = *((_DWORD *)this + 136);
    *((_DWORD *)this + 136) = *((_DWORD *)a2 + 136);
    *((_DWORD *)a2 + 136) = v47;
    LODWORD(v47) = *((_DWORD *)this + 137);
    *((_DWORD *)this + 137) = *((_DWORD *)a2 + 137);
    *((_DWORD *)a2 + 137) = v47;
    LODWORD(v47) = *((_DWORD *)this + 138);
    *((_DWORD *)this + 138) = *((_DWORD *)a2 + 138);
    *((_DWORD *)a2 + 138) = v47;
    LODWORD(v47) = *((_DWORD *)this + 139);
    *((_DWORD *)this + 139) = *((_DWORD *)a2 + 139);
    *((_DWORD *)a2 + 139) = v47;
    LODWORD(v47) = *((_DWORD *)this + 140);
    *((_DWORD *)this + 140) = *((_DWORD *)a2 + 140);
    *((_DWORD *)a2 + 140) = v47;
    LODWORD(v47) = *((_DWORD *)this + 141);
    *((_DWORD *)this + 141) = *((_DWORD *)a2 + 141);
    *((_DWORD *)a2 + 141) = v47;
    LODWORD(v47) = *((_DWORD *)this + 142);
    *((_DWORD *)this + 142) = *((_DWORD *)a2 + 142);
    *((_DWORD *)a2 + 142) = v47;
    LODWORD(v47) = *((_DWORD *)this + 143);
    *((_DWORD *)this + 143) = *((_DWORD *)a2 + 143);
    *((_DWORD *)a2 + 143) = v47;
    LODWORD(v47) = *((_DWORD *)this + 144);
    *((_DWORD *)this + 144) = *((_DWORD *)a2 + 144);
    *((_DWORD *)a2 + 144) = v47;
    LODWORD(v47) = *((_DWORD *)this + 145);
    *((_DWORD *)this + 145) = *((_DWORD *)a2 + 145);
    *((_DWORD *)a2 + 145) = v47;
    LODWORD(v47) = *((_DWORD *)this + 146);
    *((_DWORD *)this + 146) = *((_DWORD *)a2 + 146);
    *((_DWORD *)a2 + 146) = v47;
    LODWORD(v47) = *((_DWORD *)this + 147);
    *((_DWORD *)this + 147) = *((_DWORD *)a2 + 147);
    *((_DWORD *)a2 + 147) = v47;
    LODWORD(v47) = *((_DWORD *)this + 148);
    *((_DWORD *)this + 148) = *((_DWORD *)a2 + 148);
    *((_DWORD *)a2 + 148) = v47;
    LODWORD(v47) = *((_DWORD *)this + 149);
    *((_DWORD *)this + 149) = *((_DWORD *)a2 + 149);
    *((_DWORD *)a2 + 149) = v47;
    LODWORD(v47) = *((_DWORD *)this + 150);
    *((_DWORD *)this + 150) = *((_DWORD *)a2 + 150);
    *((_DWORD *)a2 + 150) = v47;
    LODWORD(v47) = *((_DWORD *)this + 151);
    *((_DWORD *)this + 151) = *((_DWORD *)a2 + 151);
    *((_DWORD *)a2 + 151) = v47;
    LODWORD(v47) = *((_DWORD *)this + 152);
    *((_DWORD *)this + 152) = *((_DWORD *)a2 + 152);
    *((_DWORD *)a2 + 152) = v47;
    LODWORD(v47) = *((_DWORD *)this + 153);
    *((_DWORD *)this + 153) = *((_DWORD *)a2 + 153);
    *((_DWORD *)a2 + 153) = v47;
    LODWORD(v47) = *((_DWORD *)this + 154);
    *((_DWORD *)this + 154) = *((_DWORD *)a2 + 154);
    *((_DWORD *)a2 + 154) = v47;
    LODWORD(v47) = *((_DWORD *)this + 155);
    *((_DWORD *)this + 155) = *((_DWORD *)a2 + 155);
    *((_DWORD *)a2 + 155) = v47;
    LODWORD(v47) = *((_DWORD *)this + 156);
    *((_DWORD *)this + 156) = *((_DWORD *)a2 + 156);
    *((_DWORD *)a2 + 156) = v47;
    LODWORD(v47) = *((_DWORD *)this + 157);
    *((_DWORD *)this + 157) = *((_DWORD *)a2 + 157);
    *((_DWORD *)a2 + 157) = v47;
    LODWORD(v47) = *((_DWORD *)this + 158);
    *((_DWORD *)this + 158) = *((_DWORD *)a2 + 158);
    *((_DWORD *)a2 + 158) = v47;
    LODWORD(v47) = *((_DWORD *)this + 159);
    *((_DWORD *)this + 159) = *((_DWORD *)a2 + 159);
    *((_DWORD *)a2 + 159) = v47;
    uint64_t v50 = *((void *)this + 80);
    *((void *)this + 80) = *((void *)a2 + 80);
    uint64_t v51 = *((void *)a2 + 81);
    *((void *)a2 + 80) = v50;
    uint64_t v52 = *((void *)this + 81);
    *((void *)this + 81) = v51;
    *((void *)a2 + 81) = v52;
    uint64_t v53 = *((void *)this + 82);
    *((void *)this + 82) = *((void *)a2 + 82);
    uint64_t v54 = *((void *)a2 + 83);
    *((void *)a2 + 82) = v53;
    uint64_t v55 = *((void *)this + 83);
    *((void *)this + 83) = v54;
    *((void *)a2 + 83) = v55;
    uint64_t v56 = *((void *)this + 84);
    *((void *)this + 84) = *((void *)a2 + 84);
    uint64_t v57 = *((void *)a2 + 85);
    *((void *)a2 + 84) = v56;
    uint64_t v58 = *((void *)this + 85);
    *((void *)this + 85) = v57;
    *((void *)a2 + 85) = v58;
    uint64_t v59 = *((void *)this + 86);
    *((void *)this + 86) = *((void *)a2 + 86);
    uint64_t v60 = *((void *)a2 + 87);
    *((void *)a2 + 86) = v59;
    uint64_t v61 = *((void *)this + 87);
    *((void *)this + 87) = v60;
    *((void *)a2 + 87) = v61;
    uint64_t v62 = *((void *)this + 88);
    *((void *)this + 88) = *((void *)a2 + 88);
    uint64_t v63 = *((void *)a2 + 89);
    *((void *)a2 + 88) = v62;
    uint64_t v64 = *((void *)this + 89);
    *((void *)this + 89) = v63;
    *((void *)a2 + 89) = v64;
    uint64_t v65 = *((void *)this + 90);
    *((void *)this + 90) = *((void *)a2 + 90);
    uint64_t v66 = *((void *)a2 + 91);
    *((void *)a2 + 90) = v65;
    uint64_t v67 = *((void *)this + 91);
    *((void *)this + 91) = v66;
    *((void *)a2 + 91) = v67;
    uint64_t v68 = *((void *)this + 92);
    *((void *)this + 92) = *((void *)a2 + 92);
    uint64_t v69 = *((void *)a2 + 93);
    *((void *)a2 + 92) = v68;
    uint64_t v70 = *((void *)this + 93);
    *((void *)this + 93) = v69;
    *((void *)a2 + 93) = v70;
    uint64_t v71 = *((void *)this + 94);
    *((void *)this + 94) = *((void *)a2 + 94);
    uint64_t v72 = *((void *)a2 + 95);
    *((void *)a2 + 94) = v71;
    uint64_t v73 = *((void *)this + 95);
    *((void *)this + 95) = v72;
    *((void *)a2 + 95) = v73;
    uint64_t v74 = *((void *)this + 96);
    *((void *)this + 96) = *((void *)a2 + 96);
    uint64_t v75 = *((void *)a2 + 97);
    *((void *)a2 + 96) = v74;
    uint64_t v76 = *((void *)this + 97);
    *((void *)this + 97) = v75;
    *((void *)a2 + 97) = v76;
    LODWORD(v74) = *((_DWORD *)this + 196);
    *((_DWORD *)this + 196) = *((_DWORD *)a2 + 196);
    *((_DWORD *)a2 + 196) = v74;
    LODWORD(v74) = *((_DWORD *)this + 197);
    *((_DWORD *)this + 197) = *((_DWORD *)a2 + 197);
    *((_DWORD *)a2 + 197) = v74;
    uint64_t v77 = *((void *)this + 99);
    *((void *)this + 99) = *((void *)a2 + 99);
    double result = *((double *)a2 + 100);
    *((void *)a2 + 99) = v77;
    uint64_t v79 = *((void *)this + 100);
    *((double *)this + 100) = result;
    *((void *)a2 + 100) = v79;
    LODWORD(v77) = *((_DWORD *)this + 202);
    *((_DWORD *)this + 202) = *((_DWORD *)a2 + 202);
    *((_DWORD *)a2 + 202) = v77;
    LODWORD(v77) = *((_DWORD *)this + 203);
    *((_DWORD *)this + 203) = *((_DWORD *)a2 + 203);
    *((_DWORD *)a2 + 203) = v77;
    LODWORD(v77) = *((_DWORD *)this + 204);
    *((_DWORD *)this + 204) = *((_DWORD *)a2 + 204);
    *((_DWORD *)a2 + 204) = v77;
    LODWORD(v77) = *((_DWORD *)this + 205);
    *((_DWORD *)this + 205) = *((_DWORD *)a2 + 205);
    *((_DWORD *)a2 + 205) = v77;
    LODWORD(v77) = *((_DWORD *)this + 206);
    *((_DWORD *)this + 206) = *((_DWORD *)a2 + 206);
    *((_DWORD *)a2 + 206) = v77;
    LODWORD(v77) = *((_DWORD *)this + 207);
    *((_DWORD *)this + 207) = *((_DWORD *)a2 + 207);
    *((_DWORD *)a2 + 207) = v77;
    LODWORD(v77) = *((_DWORD *)this + 208);
    *((_DWORD *)this + 208) = *((_DWORD *)a2 + 208);
    *((_DWORD *)a2 + 208) = v77;
    LODWORD(v77) = *((_DWORD *)this + 209);
    *((_DWORD *)this + 209) = *((_DWORD *)a2 + 209);
    *((_DWORD *)a2 + 209) = v77;
    LODWORD(v77) = *((_DWORD *)this + 210);
    *((_DWORD *)this + 210) = *((_DWORD *)a2 + 210);
    *((_DWORD *)a2 + 210) = v77;
    LODWORD(v77) = *((_DWORD *)this + 211);
    *((_DWORD *)this + 211) = *((_DWORD *)a2 + 211);
    *((_DWORD *)a2 + 211) = v77;
    LODWORD(v77) = *((_DWORD *)this + 212);
    *((_DWORD *)this + 212) = *((_DWORD *)a2 + 212);
    *((_DWORD *)a2 + 212) = v77;
    LODWORD(v77) = *((_DWORD *)this + 213);
    *((_DWORD *)this + 213) = *((_DWORD *)a2 + 213);
    *((_DWORD *)a2 + 213) = v77;
    LODWORD(v77) = *((_DWORD *)this + 214);
    *((_DWORD *)this + 214) = *((_DWORD *)a2 + 214);
    *((_DWORD *)a2 + 214) = v77;
    LODWORD(v77) = *((_DWORD *)this + 215);
    *((_DWORD *)this + 215) = *((_DWORD *)a2 + 215);
    *((_DWORD *)a2 + 215) = v77;
    LODWORD(v77) = *((_DWORD *)this + 217);
    *((_DWORD *)this + 217) = *((_DWORD *)a2 + 217);
    *((_DWORD *)a2 + 217) = v77;
    LODWORD(v77) = *((_DWORD *)this + 218);
    *((_DWORD *)this + 218) = *((_DWORD *)a2 + 218);
    *((_DWORD *)a2 + 218) = v77;
    LODWORD(v77) = *((_DWORD *)this + 219);
    *((_DWORD *)this + 219) = *((_DWORD *)a2 + 219);
    *((_DWORD *)a2 + 219) = v77;
    LODWORD(v77) = *((_DWORD *)this + 220);
    *((_DWORD *)this + 220) = *((_DWORD *)a2 + 220);
    *((_DWORD *)a2 + 220) = v77;
    LODWORD(v77) = *((_DWORD *)this + 221);
    *((_DWORD *)this + 221) = *((_DWORD *)a2 + 221);
    *((_DWORD *)a2 + 221) = v77;
    LODWORD(v77) = *((_DWORD *)this + 216);
    *((_DWORD *)this + 216) = *((_DWORD *)a2 + 216);
    *((_DWORD *)a2 + 216) = v77;
  }
  return result;
}

void *awd::metrics::MotionFitnessAllDay::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessAllDay");
}

void *awd::metrics::MotionPressureTemperature::SharedCtor(void *this)
{
  this[13] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::MotionPressureTemperature *awd::metrics::MotionPressureTemperature::MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  *(void *)this = &unk_26D7BAEA0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  awd::metrics::MotionPressureTemperature::MergeFrom(this, a2);
  return this;
}

void sub_22493A198(_Unwind_Exception *a1)
{
  uint64_t v7 = *((void *)v1 + 11);
  if (v7) {
    MEMORY[0x22A61A810](v7, 0x1000C8052888210);
  }
  awd::metrics::MotionPressureTemperature::MotionPressureTemperature(v5, v4, v3, v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureTemperature::MergeFrom(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = *((_DWORD *)a2 + 8);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 24, *((_DWORD *)this + 8) + v4);
    memcpy((void *)(*((void *)this + 3) + 4 * *((int *)this + 8)), *((const void **)a2 + 3), 4 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 40, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((void *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  int v6 = *((_DWORD *)a2 + 16);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 56, *((_DWORD *)this + 16) + v6);
    memcpy((void *)(*((void *)this + 7) + 4 * *((int *)this + 16)), *((const void **)a2 + 7), 4 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  int v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 72, *((_DWORD *)this + 20) + v7);
    memcpy((void *)(*((void *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  int v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 88, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((void *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 108);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 108))
    {
      uint64_t v11 = *((void *)a2 + 1);
      *((_DWORD *)this + 27) |= 1u;
      *((void *)this + 1) = v11;
      int v9 = *((_DWORD *)a2 + 27);
      if ((v9 & 2) == 0)
      {
LABEL_16:
        if ((v9 & 4) == 0) {
          return;
        }
        goto LABEL_17;
      }
    }
    else if ((*((unsigned char *)a2 + 108) & 2) == 0)
    {
      goto LABEL_16;
    }
    int v12 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 27) |= 2u;
    *((_DWORD *)this + 4) = v12;
    if ((*((_DWORD *)a2 + 27) & 4) == 0) {
      return;
    }
LABEL_17:
    int v10 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 27) |= 4u;
    *((_DWORD *)this + 5) = v10;
  }
}

void sub_22493A404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureTemperature::~MotionPressureTemperature(awd::metrics::MotionPressureTemperature *this)
{
  *(void *)this = &unk_26D7BAEA0;
  uint64_t v2 = *((void *)this + 11);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)this + 7);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8052888210);
  }
  uint64_t v6 = *((void *)this + 3);
  if (v6) {
    MEMORY[0x22A61A810](v6, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionPressureTemperature::~MotionPressureTemperature(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionPressureTemperature::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::default_instance(awd::metrics::MotionPressureTemperature *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionPressureTemperature::default_instance_;
  if (!awd::metrics::MotionPressureTemperature::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPressureTemperature::default_instance_;
  }
  return result;
}

void awd::metrics::MotionPressureTemperature::New(awd::metrics::MotionPressureTemperature *this)
{
}

uint64_t awd::metrics::MotionPressureTemperature::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 108))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 108) = 0;
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::MergePartialFromCodedStream(awd::metrics::MotionPressureTemperature *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 88;
  uint64_t v5 = (char *)this + 72;
  uint64_t v6 = (char *)this + 56;
  int v7 = (char *)this + 40;
  int v8 = (char *)this + 24;
  uint64_t v79 = (unint64_t *)((char *)this + 8);
  uint64_t v80 = (unsigned int *)((char *)this + 16);
  int v81 = (unsigned int *)((char *)this + 20);
LABEL_2:
  while (2)
  {
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        int v12 = (char *)*((void *)a2 + 2);
        if (v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v79);
          if (!result) {
            return result;
          }
          uint64_t v14 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
        }
        else
        {
          unint64_t *v79 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 27) |= 1u;
        if (v14 < v12 && *v14 == 16)
        {
          uint64_t v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_50;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        int v12 = (char *)*((void *)a2 + 2);
LABEL_50:
        if (v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80);
          if (!result) {
            return result;
          }
          uint64_t v23 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
        }
        else
        {
          *uint64_t v80 = *v15;
          uint64_t v23 = v15 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 27) |= 2u;
        if (v23 >= v12 || *v23 != 24) {
          continue;
        }
        uint64_t v16 = v23 + 1;
        *((void *)a2 + 1) = v16;
LABEL_58:
        if (v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v81);
          if (!result) {
            return result;
          }
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
        }
        else
        {
          unsigned int *v81 = *v16;
          uint64_t v24 = v16 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 27) |= 4u;
        if (v24 >= v12) {
          continue;
        }
        int v25 = *v24;
        goto LABEL_84;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        int v12 = (char *)*((void *)a2 + 2);
        goto LABEL_58;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v17 = (char *)*((void *)a2 + 1);
            int v12 = (char *)*((void *)a2 + 2);
            goto LABEL_65;
          }
          goto LABEL_32;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v8);
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
          if (v24 >= v12) {
            goto LABEL_2;
          }
          int v25 = *v24;
          if (v25 == 40) {
            goto LABEL_106;
          }
LABEL_84:
          if (v25 != 32) {
            goto LABEL_2;
          }
          uint64_t v17 = v24 + 1;
          *((void *)a2 + 1) = v17;
LABEL_65:
          unsigned int v82 = 0;
          if (v17 >= v12 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
          }
            }
          else
          {
            unsigned int v82 = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v26 = *((_DWORD *)this + 8);
          if (v26 == *((_DWORD *)this + 9))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v8, v26 + 1);
            int v26 = *((_DWORD *)this + 8);
          }
          unsigned int v27 = v82;
          uint64_t v28 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v26 + 1;
          *(_DWORD *)(v28 + 4 * v26) = v27;
          int v29 = *((_DWORD *)this + 9) - *((_DWORD *)this + 8);
          if (v29 >= 1)
          {
            int v30 = v29 + 1;
            do
            {
              uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v32 = *((void *)a2 + 2);
              if ((unint64_t)v31 >= v32 || *v31 != 32) {
                break;
              }
              *((void *)a2 + 1) = v31 + 1;
              if ((unint64_t)(v31 + 1) >= v32 || (char)v31[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
              }
                }
              else
              {
                unsigned int v82 = v31[1];
                *((void *)a2 + 1) = v31 + 2;
              }
              int v33 = *((_DWORD *)this + 8);
              if (v33 >= *((_DWORD *)this + 9))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                int v33 = *((_DWORD *)this + 8);
              }
              unsigned int v34 = v82;
              uint64_t v35 = *((void *)this + 3);
              *((_DWORD *)this + 8) = v33 + 1;
              *(_DWORD *)(v35 + 4 * v33) = v34;
              --v30;
            }
            while (v30 > 1);
          }
        }
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v18 = (char *)*((void *)a2 + 1);
            int v12 = (char *)*((void *)a2 + 2);
            goto LABEL_86;
          }
          goto LABEL_32;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v7);
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
          if (v24 >= v12) {
            goto LABEL_2;
          }
          int v46 = *v24;
          if (v46 == 48) {
            goto LABEL_127;
          }
          if (v46 != 40) {
            goto LABEL_2;
          }
LABEL_106:
          uint64_t v18 = v24 + 1;
          *((void *)a2 + 1) = v18;
LABEL_86:
          unsigned int v82 = 0;
          if (v18 >= v12 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
          }
            }
          else
          {
            unsigned int v82 = *v18;
            *((void *)a2 + 1) = v18 + 1;
          }
          int v36 = *((_DWORD *)this + 12);
          if (v36 == *((_DWORD *)this + 13))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v7, v36 + 1);
            int v36 = *((_DWORD *)this + 12);
          }
          unsigned int v37 = v82;
          uint64_t v38 = *((void *)this + 5);
          *((_DWORD *)this + 12) = v36 + 1;
          *(_DWORD *)(v38 + 4 * v36) = v37;
          int v39 = *((_DWORD *)this + 13) - *((_DWORD *)this + 12);
          if (v39 >= 1)
          {
            int v40 = v39 + 1;
            do
            {
              uint64_t v41 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v42 = *((void *)a2 + 2);
              if ((unint64_t)v41 >= v42 || *v41 != 40) {
                break;
              }
              *((void *)a2 + 1) = v41 + 1;
              if ((unint64_t)(v41 + 1) >= v42 || (char)v41[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
              }
                }
              else
              {
                unsigned int v82 = v41[1];
                *((void *)a2 + 1) = v41 + 2;
              }
              int v43 = *((_DWORD *)this + 12);
              if (v43 >= *((_DWORD *)this + 13))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                int v43 = *((_DWORD *)this + 12);
              }
              unsigned int v44 = v82;
              uint64_t v45 = *((void *)this + 5);
              *((_DWORD *)this + 12) = v43 + 1;
              *(_DWORD *)(v45 + 4 * v43) = v44;
              --v40;
            }
            while (v40 > 1);
          }
        }
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v19 = (char *)*((void *)a2 + 1);
            int v12 = (char *)*((void *)a2 + 2);
            goto LABEL_107;
          }
          goto LABEL_32;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
          if (v24 >= v12) {
            goto LABEL_2;
          }
          int v57 = *v24;
          if (v57 == 56) {
            goto LABEL_148;
          }
          if (v57 != 48) {
            goto LABEL_2;
          }
LABEL_127:
          uint64_t v19 = v24 + 1;
          *((void *)a2 + 1) = v19;
LABEL_107:
          unsigned int v82 = 0;
          if (v19 >= v12 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
          }
            }
          else
          {
            unsigned int v82 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v47 = *((_DWORD *)this + 16);
          if (v47 == *((_DWORD *)this + 17))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v6, v47 + 1);
            int v47 = *((_DWORD *)this + 16);
          }
          unsigned int v48 = v82;
          uint64_t v49 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v47 + 1;
          *(_DWORD *)(v49 + 4 * v47) = v48;
          int v50 = *((_DWORD *)this + 17) - *((_DWORD *)this + 16);
          if (v50 >= 1)
          {
            int v51 = v50 + 1;
            do
            {
              uint64_t v52 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v53 = *((void *)a2 + 2);
              if ((unint64_t)v52 >= v53 || *v52 != 48) {
                break;
              }
              *((void *)a2 + 1) = v52 + 1;
              if ((unint64_t)(v52 + 1) >= v53 || (char)v52[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
              }
                }
              else
              {
                unsigned int v82 = v52[1];
                *((void *)a2 + 1) = v52 + 2;
              }
              int v54 = *((_DWORD *)this + 16);
              if (v54 >= *((_DWORD *)this + 17))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                int v54 = *((_DWORD *)this + 16);
              }
              unsigned int v55 = v82;
              uint64_t v56 = *((void *)this + 7);
              *((_DWORD *)this + 16) = v54 + 1;
              *(_DWORD *)(v56 + 4 * v54) = v55;
              --v51;
            }
            while (v51 > 1);
          }
        }
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v20 = (char *)*((void *)a2 + 1);
            int v12 = (char *)*((void *)a2 + 2);
            goto LABEL_128;
          }
          goto LABEL_32;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v5);
        if (!result) {
          return result;
        }
        while (1)
        {
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
          if (v24 >= v12) {
            goto LABEL_2;
          }
          int v68 = *v24;
          if (v68 == 64) {
            goto LABEL_168;
          }
          if (v68 != 56) {
            goto LABEL_2;
          }
LABEL_148:
          uint64_t v20 = v24 + 1;
          *((void *)a2 + 1) = v20;
LABEL_128:
          unsigned int v82 = 0;
          if (v20 >= v12 || *v20 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
          }
            }
          else
          {
            unsigned int v82 = *v20;
            *((void *)a2 + 1) = v20 + 1;
          }
          int v58 = *((_DWORD *)this + 20);
          if (v58 == *((_DWORD *)this + 21))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v5, v58 + 1);
            int v58 = *((_DWORD *)this + 20);
          }
          unsigned int v59 = v82;
          uint64_t v60 = *((void *)this + 9);
          *((_DWORD *)this + 20) = v58 + 1;
          *(_DWORD *)(v60 + 4 * v58) = v59;
          int v61 = *((_DWORD *)this + 21) - *((_DWORD *)this + 20);
          if (v61 >= 1)
          {
            int v62 = v61 + 1;
            do
            {
              uint64_t v63 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v64 = *((void *)a2 + 2);
              if ((unint64_t)v63 >= v64 || *v63 != 56) {
                break;
              }
              *((void *)a2 + 1) = v63 + 1;
              if ((unint64_t)(v63 + 1) >= v64 || (char)v63[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
              }
                }
              else
              {
                unsigned int v82 = v63[1];
                *((void *)a2 + 1) = v63 + 2;
              }
              int v65 = *((_DWORD *)this + 20);
              if (v65 >= *((_DWORD *)this + 21))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                int v65 = *((_DWORD *)this + 20);
              }
              unsigned int v66 = v82;
              uint64_t v67 = *((void *)this + 9);
              *((_DWORD *)this + 20) = v65 + 1;
              *(_DWORD *)(v67 + 4 * v65) = v66;
              --v62;
            }
            while (v62 > 1);
          }
        }
      case 8u:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            uint64_t v24 = (char *)*((void *)a2 + 1);
            int v12 = (char *)*((void *)a2 + 2);
            if (v24 >= v12 || *v24 != 64) {
              break;
            }
LABEL_168:
            uint64_t v21 = v24 + 1;
            *((void *)a2 + 1) = v21;
LABEL_149:
            unsigned int v82 = 0;
            if (v21 >= v12 || *v21 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
            }
              }
            else
            {
              unsigned int v82 = *v21;
              *((void *)a2 + 1) = v21 + 1;
            }
            int v69 = *((_DWORD *)this + 24);
            if (v69 == *((_DWORD *)this + 25))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v4, v69 + 1);
              int v69 = *((_DWORD *)this + 24);
            }
            unsigned int v70 = v82;
            uint64_t v71 = *((void *)this + 11);
            *((_DWORD *)this + 24) = v69 + 1;
            *(_DWORD *)(v71 + 4 * v69) = v70;
            int v72 = *((_DWORD *)this + 25) - *((_DWORD *)this + 24);
            if (v72 >= 1)
            {
              int v73 = v72 + 1;
              do
              {
                uint64_t v74 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v75 = *((void *)a2 + 2);
                if ((unint64_t)v74 >= v75 || *v74 != 64) {
                  break;
                }
                *((void *)a2 + 1) = v74 + 1;
                if ((unint64_t)(v74 + 1) >= v75 || (char)v74[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v82))return 0; {
                }
                  }
                else
                {
                  unsigned int v82 = v74[1];
                  *((void *)a2 + 1) = v74 + 2;
                }
                int v76 = *((_DWORD *)this + 24);
                if (v76 >= *((_DWORD *)this + 25))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
                  int v76 = *((_DWORD *)this + 24);
                }
                unsigned int v77 = v82;
                uint64_t v78 = *((void *)this + 11);
                *((_DWORD *)this + 24) = v76 + 1;
                *(_DWORD *)(v78 + 4 * v76) = v77;
                --v73;
              }
              while (v73 > 1);
            }
          }
          if (v24 == v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v21 = (char *)*((void *)a2 + 1);
          int v12 = (char *)*((void *)a2 + 2);
          goto LABEL_149;
        }
LABEL_32:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_32;
    }
  }
}

void sub_22493B054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionPressureTemperature::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 108);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(void *)(v5 + 24) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(*(void *)(v5 + 40) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(*(void *)(v5 + 56) + 4 * v9++), (uint64_t)a2, a4);
    while (v9 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(void *)(v5 + 72) + 4 * v10++), (uint64_t)a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(void *)(v5 + 88) + 4 * v11++), (uint64_t)a2, a4);
    while (v11 < *(int *)(v5 + 96));
  }
  return this;
}

uint64_t awd::metrics::MotionPressureTemperature::ByteSize(awd::metrics::MotionPressureTemperature *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 108);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_16;
  }
  if (*((unsigned char *)this + 108))
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 27);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 108) & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v5 = 2;
  }
  v3 += v5;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    }
    else {
      int v7 = 2;
    }
    v3 += v7;
  }
LABEL_16:
  int v35 = v3;
  int v8 = *((_DWORD *)this + 8);
  if (v8 < 1)
  {
    int v10 = 0;
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 3)
                                                                                             + 4 * v9);
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        int v8 = *((_DWORD *)this + 8);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12;
      ++v9;
    }
    while (v9 < v8);
  }
  int v13 = *((_DWORD *)this + 12);
  if (v13 < 1)
  {
    int v15 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 0;
    do
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
        int v13 = *((_DWORD *)this + 12);
      }
      else
      {
        int v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  int v18 = *((_DWORD *)this + 16);
  if (v18 < 1)
  {
    int v20 = 0;
  }
  else
  {
    uint64_t v19 = 0;
    int v20 = 0;
    do
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 7)
                                                                                             + 4 * v19);
      if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        int v18 = *((_DWORD *)this + 16);
      }
      else
      {
        int v22 = 1;
      }
      v20 += v22;
      ++v19;
    }
    while (v19 < v18);
  }
  int v23 = *((_DWORD *)this + 20);
  if (v23 < 1)
  {
    int v25 = 0;
  }
  else
  {
    uint64_t v24 = 0;
    int v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 9)
                                                                                             + 4 * v24);
      if (v26 >= 0x80)
      {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
        int v23 = *((_DWORD *)this + 20);
      }
      else
      {
        int v27 = 1;
      }
      v25 += v27;
      ++v24;
    }
    while (v24 < v23);
  }
  int v34 = v8;
  int v28 = *((_DWORD *)this + 24);
  if (v28 < 1)
  {
    int v30 = 0;
  }
  else
  {
    uint64_t v29 = 0;
    int v30 = 0;
    do
    {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 11)
                                                                                             + 4 * v29);
      if (v31 >= 0x80)
      {
        int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
        int v28 = *((_DWORD *)this + 24);
      }
      else
      {
        int v32 = 1;
      }
      v30 += v32;
      ++v29;
    }
    while (v29 < v28);
  }
  uint64_t result = (v10 + v35 + v34 + v15 + v13 + v20 + v18 + v25 + v23 + v30 + v28);
  *((_DWORD *)this + 26) = result;
  return result;
}

void awd::metrics::MotionPressureTemperature::CheckTypeAndMergeFrom(awd::metrics::MotionPressureTemperature *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionPressureTemperature::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionPressureTemperature::CopyFrom(awd::metrics::MotionPressureTemperature *this, const awd::metrics::MotionPressureTemperature *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionPressureTemperature *))(*(void *)this + 32))(this);
    awd::metrics::MotionPressureTemperature::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionPressureTemperature::IsInitialized(awd::metrics::MotionPressureTemperature *this)
{
  return 1;
}

double awd::metrics::MotionPressureTemperature::Swap(awd::metrics::MotionPressureTemperature *this, awd::metrics::MotionPressureTemperature *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    uint64_t v3 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    uint64_t v4 = *((void *)a2 + 4);
    *((void *)a2 + 3) = v3;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = v4;
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    uint64_t v7 = *((void *)a2 + 6);
    *((void *)a2 + 5) = v6;
    uint64_t v8 = *((void *)this + 6);
    *((void *)this + 6) = v7;
    *((void *)a2 + 6) = v8;
    uint64_t v9 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    uint64_t v10 = *((void *)a2 + 8);
    *((void *)a2 + 7) = v9;
    uint64_t v11 = *((void *)this + 8);
    *((void *)this + 8) = v10;
    *((void *)a2 + 8) = v11;
    uint64_t v12 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    uint64_t v13 = *((void *)a2 + 10);
    *((void *)a2 + 9) = v12;
    uint64_t v14 = *((void *)this + 10);
    *((void *)this + 10) = v13;
    *((void *)a2 + 10) = v14;
    uint64_t v15 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    double result = *((double *)a2 + 12);
    *((void *)a2 + 11) = v15;
    uint64_t v17 = *((void *)this + 12);
    *((double *)this + 12) = result;
    *((void *)a2 + 12) = v17;
    LODWORD(v15) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v15;
    LODWORD(v15) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v15;
  }
  return result;
}

void *awd::metrics::MotionPressureTemperature::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPressureTemperature");
}

BOOL awd::metrics::MotionElevationAllDay_HasWetWorkouts_IsValid(awd::metrics *this)
{
  return this < 2 || this == 255;
}

double awd::metrics::MotionElevationAllDay::SharedCtor(awd::metrics::MotionElevationAllDay *this)
{
  *((void *)this + 1) = 0;
  *(void *)&double result = 255;
  *((void *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((void *)this + 41) = 0;
  return result;
}

awd::metrics::MotionElevationAllDay *awd::metrics::MotionElevationAllDay::MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  *(void *)this = &unk_26D7BAF18;
  *((void *)this + 21) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 29) = 0;
  *((void *)this + 32) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 35) = 0;
  *((void *)this + 36) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 39) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 8) = 255;
  *((_DWORD *)this + 81) = 0;
  *((void *)this + 41) = 0;
  awd::metrics::MotionElevationAllDay::MergeFrom(this, a2);
  return this;
}

void sub_22493B83C(_Unwind_Exception *a1)
{
  uint64_t v10 = v2;
  if (*v10) {
    MEMORY[0x22A61A810](*v10, 0x1000C8052888210);
  }
  if (*v9) {
    MEMORY[0x22A61A810](*v9, 0x1000C8052888210);
  }
  if (*v8) {
    MEMORY[0x22A61A810](*v8, 0x1000C8052888210);
  }
  if (*v7) {
    MEMORY[0x22A61A810](*v7, 0x1000C8052888210);
  }
  if (*v6) {
    MEMORY[0x22A61A810](*v6, 0x1000C8052888210);
  }
  if (*v5) {
    MEMORY[0x22A61A810](*v5, 0x1000C8052888210);
  }
  if (*v4) {
    MEMORY[0x22A61A810](*v4, 0x1000C8052888210);
  }
  uint64_t v12 = *((void *)v1 + 17);
  if (v12) {
    MEMORY[0x22A61A810](v12, 0x1000C8052888210);
  }
  uint64_t v13 = *((void *)v1 + 15);
  if (v13) {
    MEMORY[0x22A61A810](v13, 0x1000C8052888210);
  }
  uint64_t v14 = *((void *)v1 + 13);
  if (v14) {
    MEMORY[0x22A61A810](v14, 0x1000C8052888210);
  }
  uint64_t v15 = *((void *)v1 + 11);
  if (v15) {
    MEMORY[0x22A61A810](v15, 0x1000C8052888210);
  }
  if (*v3) {
    MEMORY[0x22A61A810](*v3, 0x1000C8052888210);
  }
  uint64_t v16 = *((void *)v1 + 6);
  if (v16) {
    MEMORY[0x22A61A810](v16, 0x1000C8052888210);
  }
  uint64_t v17 = *((void *)v1 + 4);
  if (v17) {
    MEMORY[0x22A61A810](v17, 0x1000C8052888210);
  }
  uint64_t v18 = *((void *)v1 + 2);
  if (v18) {
    MEMORY[0x22A61A810](v18, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionElevationAllDay::MergeFrom(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  int v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 32, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((void *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  int v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 48, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((void *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  int v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 72, *((_DWORD *)this + 20) + v7);
    memcpy((void *)(*((void *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  int v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 88, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((void *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  int v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 104, *((_DWORD *)this + 28) + v9);
    memcpy((void *)(*((void *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  int v10 = *((_DWORD *)a2 + 32);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 120, *((_DWORD *)this + 32) + v10);
    memcpy((void *)(*((void *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  int v11 = *((_DWORD *)a2 + 36);
  if (v11)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 136, *((_DWORD *)this + 36) + v11);
    memcpy((void *)(*((void *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  int v12 = *((_DWORD *)a2 + 42);
  if (v12)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 160, *((_DWORD *)this + 42) + v12);
    memcpy((void *)(*((void *)this + 20) + 4 * *((int *)this + 42)), *((const void **)a2 + 20), 4 * *((int *)a2 + 42));
    *((_DWORD *)this + 42) += *((_DWORD *)a2 + 42);
  }
  int v13 = *((_DWORD *)a2 + 48);
  if (v13)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 184, *((_DWORD *)this + 48) + v13);
    memcpy((void *)(*((void *)this + 23) + 4 * *((int *)this + 48)), *((const void **)a2 + 23), 4 * *((int *)a2 + 48));
    *((_DWORD *)this + 48) += *((_DWORD *)a2 + 48);
  }
  int v14 = *((_DWORD *)a2 + 54);
  if (v14)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 208, *((_DWORD *)this + 54) + v14);
    memcpy((void *)(*((void *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  int v15 = *((_DWORD *)a2 + 60);
  if (v15)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 232, *((_DWORD *)this + 60) + v15);
    memcpy((void *)(*((void *)this + 29) + 4 * *((int *)this + 60)), *((const void **)a2 + 29), 4 * *((int *)a2 + 60));
    *((_DWORD *)this + 60) += *((_DWORD *)a2 + 60);
  }
  int v16 = *((_DWORD *)a2 + 66);
  if (v16)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 256, *((_DWORD *)this + 66) + v16);
    memcpy((void *)(*((void *)this + 32) + 4 * *((int *)this + 66)), *((const void **)a2 + 32), 4 * *((int *)a2 + 66));
    *((_DWORD *)this + 66) += *((_DWORD *)a2 + 66);
  }
  int v17 = *((_DWORD *)a2 + 72);
  if (v17)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 280, *((_DWORD *)this + 72) + v17);
    memcpy((void *)(*((void *)this + 35) + 4 * *((int *)this + 72)), *((const void **)a2 + 35), 4 * *((int *)a2 + 72));
    *((_DWORD *)this + 72) += *((_DWORD *)a2 + 72);
  }
  int v18 = *((_DWORD *)a2 + 78);
  if (v18)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 304, *((_DWORD *)this + 78) + v18);
    memcpy((void *)(*((void *)this + 38) + 4 * *((int *)this + 78)), *((const void **)a2 + 38), 4 * *((int *)a2 + 78));
    *((_DWORD *)this + 78) += *((_DWORD *)a2 + 78);
  }
  int v19 = *((_DWORD *)a2 + 83);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      uint64_t v20 = *((void *)a2 + 1);
      *((_DWORD *)this + 83) |= 1u;
      *((void *)this + 1) = v20;
      int v19 = *((_DWORD *)a2 + 83);
    }
    if ((v19 & 2) != 0)
    {
      unsigned int v21 = *((_DWORD *)a2 + 16);
      if (v21 >= 2 && v21 != 255) {
        awd::metrics::MotionElevationAllDay::MergeFrom();
      }
      *((_DWORD *)this + 83) |= 2u;
      *((_DWORD *)this + 16) = v21;
      int v19 = *((_DWORD *)a2 + 83);
    }
    if ((v19 & 0x80) != 0)
    {
      int v22 = *((_DWORD *)a2 + 17);
      *((_DWORD *)this + 83) |= 0x80u;
      *((_DWORD *)this + 17) = v22;
      int v19 = *((_DWORD *)a2 + 83);
    }
  }
  if ((v19 & 0x400) != 0)
  {
    int v23 = *((_DWORD *)a2 + 81);
    *((_DWORD *)this + 83) |= 0x400u;
    *((_DWORD *)this + 81) = v23;
  }
}

void sub_22493BEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionElevationAllDay::~MotionElevationAllDay(awd::metrics::MotionElevationAllDay *this)
{
  *(void *)this = &unk_26D7BAF18;
  uint64_t v2 = *((void *)this + 38);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 35);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)this + 32);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *((void *)this + 29);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8052888210);
  }
  uint64_t v6 = *((void *)this + 26);
  if (v6) {
    MEMORY[0x22A61A810](v6, 0x1000C8052888210);
  }
  uint64_t v7 = *((void *)this + 23);
  if (v7) {
    MEMORY[0x22A61A810](v7, 0x1000C8052888210);
  }
  uint64_t v8 = *((void *)this + 20);
  if (v8) {
    MEMORY[0x22A61A810](v8, 0x1000C8052888210);
  }
  uint64_t v9 = *((void *)this + 17);
  if (v9) {
    MEMORY[0x22A61A810](v9, 0x1000C8052888210);
  }
  uint64_t v10 = *((void *)this + 15);
  if (v10) {
    MEMORY[0x22A61A810](v10, 0x1000C8052888210);
  }
  uint64_t v11 = *((void *)this + 13);
  if (v11) {
    MEMORY[0x22A61A810](v11, 0x1000C8052888210);
  }
  uint64_t v12 = *((void *)this + 11);
  if (v12) {
    MEMORY[0x22A61A810](v12, 0x1000C8052888210);
  }
  uint64_t v13 = *((void *)this + 9);
  if (v13) {
    MEMORY[0x22A61A810](v13, 0x1000C8052888210);
  }
  uint64_t v14 = *((void *)this + 6);
  if (v14) {
    MEMORY[0x22A61A810](v14, 0x1000C8052888210);
  }
  uint64_t v15 = *((void *)this + 4);
  if (v15) {
    MEMORY[0x22A61A810](v15, 0x1000C8052888210);
  }
  uint64_t v16 = *((void *)this + 2);
  if (v16) {
    MEMORY[0x22A61A810](v16, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionElevationAllDay::~MotionElevationAllDay(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionElevationAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 328) = a2;
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::default_instance(awd::metrics::MotionElevationAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionElevationAllDay::default_instance_;
  if (!awd::metrics::MotionElevationAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionElevationAllDay::default_instance_;
  }
  return result;
}

void awd::metrics::MotionElevationAllDay::New(awd::metrics::MotionElevationAllDay *this)
{
}

uint64_t awd::metrics::MotionElevationAllDay::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 332);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 64) = 255;
  }
  if ((v1 & 0x3FC00) != 0) {
    *(_DWORD *)(this + 324) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 168) = 0;
  *(_DWORD *)(this + 192) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 240) = 0;
  *(_DWORD *)(this + 264) = 0;
  *(_DWORD *)(this + 288) = 0;
  *(_DWORD *)(this + 312) = 0;
  *(_DWORD *)(this + 332) = 0;
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::MergePartialFromCodedStream(awd::metrics::MotionElevationAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v172 = (char *)this + 304;
  signed int v173 = (char *)this + 280;
  int v174 = (char *)this + 256;
  uint64_t v4 = (char *)this + 232;
  uint64_t v5 = (char *)this + 208;
  uint64_t v6 = (char *)this + 184;
  uint64_t v7 = (char *)this + 160;
  uint64_t v8 = (char *)this + 136;
  int v171 = (char *)this + 88;
  uint64_t v169 = (char *)this + 120;
  int v170 = (char *)this + 72;
  int v167 = (char *)this + 104;
  unsigned int v168 = (char *)this + 48;
  int v165 = (char *)this + 16;
  int v166 = (char *)this + 32;
  int v163 = (unint64_t *)((char *)this + 8);
  int v164 = (unsigned int *)((char *)this + 324);
LABEL_2:
  while (2)
  {
    uint64_t v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v163);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v163 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 83) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 24)
        {
          uint64_t v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_102;
        }
        continue;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_102:
        v176[0] = 0;
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176);
          if (!result) {
            return result;
          }
          unsigned int v42 = v176[0];
        }
        else
        {
          unsigned int v42 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v42 < 2 || v42 == 255)
        {
          *((_DWORD *)this + 83) |= 2u;
          *((_DWORD *)this + 16) = v42;
        }
        int v43 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v43 >= v16) {
          continue;
        }
        int v44 = *v43;
        goto LABEL_131;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v17 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_112;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v165);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v43 >= v16) {
            goto LABEL_2;
          }
          int v44 = *v43;
          if (v44 == 40) {
            goto LABEL_153;
          }
LABEL_131:
          if (v44 != 32) {
            goto LABEL_2;
          }
          int v17 = (char *)(v43 + 1);
          *((void *)a2 + 1) = v17;
LABEL_112:
          unsigned int v175 = 0;
          if ((unint64_t)v17 >= v16 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v45 = *((_DWORD *)this + 6);
          if (v45 == *((_DWORD *)this + 7))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v165, v45 + 1);
            int v45 = *((_DWORD *)this + 6);
          }
          unsigned int v46 = v175;
          uint64_t v47 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v45 + 1;
          *(_DWORD *)(v47 + 4 * v45) = v46;
          int v48 = *((_DWORD *)this + 7) - *((_DWORD *)this + 6);
          if (v48 >= 1)
          {
            int v49 = v48 + 1;
            do
            {
              int v50 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v51 = *((void *)a2 + 2);
              if ((unint64_t)v50 >= v51 || *v50 != 32) {
                break;
              }
              *((void *)a2 + 1) = v50 + 1;
              if ((unint64_t)(v50 + 1) >= v51 || (char)v50[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v50[1];
                *((void *)a2 + 1) = v50 + 2;
              }
              int v52 = *((_DWORD *)this + 6);
              if (v52 >= *((_DWORD *)this + 7))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v52 = *((_DWORD *)this + 6);
              }
              unsigned int v53 = v175;
              uint64_t v54 = *((void *)this + 2);
              *((_DWORD *)this + 6) = v52 + 1;
              *(_DWORD *)(v54 + 4 * v52) = v53;
              --v49;
            }
            while (v49 > 1);
          }
        }
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v18 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_133;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v166);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v43 >= v16) {
            goto LABEL_2;
          }
          int v65 = *v43;
          if (v65 == 48) {
            goto LABEL_174;
          }
          if (v65 != 40) {
            goto LABEL_2;
          }
LABEL_153:
          int v18 = (char *)(v43 + 1);
          *((void *)a2 + 1) = v18;
LABEL_133:
          unsigned int v175 = 0;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v18;
            *((void *)a2 + 1) = v18 + 1;
          }
          int v55 = *((_DWORD *)this + 10);
          if (v55 == *((_DWORD *)this + 11))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v166, v55 + 1);
            int v55 = *((_DWORD *)this + 10);
          }
          unsigned int v56 = v175;
          uint64_t v57 = *((void *)this + 4);
          *((_DWORD *)this + 10) = v55 + 1;
          *(_DWORD *)(v57 + 4 * v55) = v56;
          int v58 = *((_DWORD *)this + 11) - *((_DWORD *)this + 10);
          if (v58 >= 1)
          {
            int v59 = v58 + 1;
            do
            {
              uint64_t v60 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v61 = *((void *)a2 + 2);
              if ((unint64_t)v60 >= v61 || *v60 != 40) {
                break;
              }
              *((void *)a2 + 1) = v60 + 1;
              if ((unint64_t)(v60 + 1) >= v61 || (char)v60[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v60[1];
                *((void *)a2 + 1) = v60 + 2;
              }
              int v62 = *((_DWORD *)this + 10);
              if (v62 >= *((_DWORD *)this + 11))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v62 = *((_DWORD *)this + 10);
              }
              unsigned int v63 = v175;
              uint64_t v64 = *((void *)this + 4);
              *((_DWORD *)this + 10) = v62 + 1;
              *(_DWORD *)(v64 + 4 * v62) = v63;
              --v59;
            }
            while (v59 > 1);
          }
        }
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v19 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_154;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v168);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v43 >= v16) {
            goto LABEL_2;
          }
          int v76 = *v43;
          if (v76 == 56) {
            goto LABEL_195;
          }
          if (v76 != 48) {
            goto LABEL_2;
          }
LABEL_174:
          int v19 = (char *)(v43 + 1);
          *((void *)a2 + 1) = v19;
LABEL_154:
          unsigned int v175 = 0;
          if ((unint64_t)v19 >= v16 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v66 = *((_DWORD *)this + 14);
          if (v66 == *((_DWORD *)this + 15))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v168, v66 + 1);
            int v66 = *((_DWORD *)this + 14);
          }
          unsigned int v67 = v175;
          uint64_t v68 = *((void *)this + 6);
          *((_DWORD *)this + 14) = v66 + 1;
          *(_DWORD *)(v68 + 4 * v66) = v67;
          int v69 = *((_DWORD *)this + 15) - *((_DWORD *)this + 14);
          if (v69 >= 1)
          {
            int v70 = v69 + 1;
            do
            {
              uint64_t v71 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v72 = *((void *)a2 + 2);
              if ((unint64_t)v71 >= v72 || *v71 != 48) {
                break;
              }
              *((void *)a2 + 1) = v71 + 1;
              if ((unint64_t)(v71 + 1) >= v72 || (char)v71[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v71[1];
                *((void *)a2 + 1) = v71 + 2;
              }
              int v73 = *((_DWORD *)this + 14);
              if (v73 >= *((_DWORD *)this + 15))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v73 = *((_DWORD *)this + 14);
              }
              unsigned int v74 = v175;
              uint64_t v75 = *((void *)this + 6);
              *((_DWORD *)this + 14) = v73 + 1;
              *(_DWORD *)(v75 + 4 * v73) = v74;
              --v70;
            }
            while (v70 > 1);
          }
        }
      case 7u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v20 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_175;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v170);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v43 >= v16) {
            goto LABEL_2;
          }
          int v87 = *v43;
          if (v87 == 64) {
            goto LABEL_216;
          }
          if (v87 != 56) {
            goto LABEL_2;
          }
LABEL_195:
          uint64_t v20 = (char *)(v43 + 1);
          *((void *)a2 + 1) = v20;
LABEL_175:
          unsigned int v175 = 0;
          if ((unint64_t)v20 >= v16 || *v20 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v20;
            *((void *)a2 + 1) = v20 + 1;
          }
          int v77 = *((_DWORD *)this + 20);
          if (v77 == *((_DWORD *)this + 21))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v170, v77 + 1);
            int v77 = *((_DWORD *)this + 20);
          }
          unsigned int v78 = v175;
          uint64_t v79 = *((void *)this + 9);
          *((_DWORD *)this + 20) = v77 + 1;
          *(_DWORD *)(v79 + 4 * v77) = v78;
          int v80 = *((_DWORD *)this + 21) - *((_DWORD *)this + 20);
          if (v80 >= 1)
          {
            int v81 = v80 + 1;
            do
            {
              unsigned int v82 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v83 = *((void *)a2 + 2);
              if ((unint64_t)v82 >= v83 || *v82 != 56) {
                break;
              }
              *((void *)a2 + 1) = v82 + 1;
              if ((unint64_t)(v82 + 1) >= v83 || (char)v82[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v82[1];
                *((void *)a2 + 1) = v82 + 2;
              }
              int v84 = *((_DWORD *)this + 20);
              if (v84 >= *((_DWORD *)this + 21))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v84 = *((_DWORD *)this + 20);
              }
              unsigned int v85 = v175;
              uint64_t v86 = *((void *)this + 9);
              *((_DWORD *)this + 20) = v84 + 1;
              *(_DWORD *)(v86 + 4 * v84) = v85;
              --v81;
            }
            while (v81 > 1);
          }
        }
      case 8u:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            unsigned int v21 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_196;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v171);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v43 >= v16) {
            goto LABEL_2;
          }
          int v98 = *v43;
          if (v98 == 72)
          {
            int v22 = v43 + 1;
            *((void *)a2 + 1) = v22;
LABEL_218:
            v176[0] = 0;
            if ((unint64_t)v22 >= v16 || (char)*v22 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176);
              if (!result) {
                return result;
              }
              unsigned int v99 = v176[0];
              int v100 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v16 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v99 = *v22;
              int v100 = v22 + 1;
              *((void *)a2 + 1) = v100;
            }
            *((_DWORD *)this + 17) = v99;
            *((_DWORD *)this + 83) |= 0x80u;
            if ((unint64_t)v100 < v16)
            {
              int v101 = *v100;
              goto LABEL_244;
            }
            goto LABEL_2;
          }
          if (v98 != 64) {
            goto LABEL_2;
          }
LABEL_216:
          unsigned int v21 = (char *)(v43 + 1);
          *((void *)a2 + 1) = v21;
LABEL_196:
          unsigned int v175 = 0;
          if ((unint64_t)v21 >= v16 || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v21;
            *((void *)a2 + 1) = v21 + 1;
          }
          int v88 = *((_DWORD *)this + 24);
          if (v88 == *((_DWORD *)this + 25))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v171, v88 + 1);
            int v88 = *((_DWORD *)this + 24);
          }
          unsigned int v89 = v175;
          uint64_t v90 = *((void *)this + 11);
          *((_DWORD *)this + 24) = v88 + 1;
          *(_DWORD *)(v90 + 4 * v88) = v89;
          int v91 = *((_DWORD *)this + 25) - *((_DWORD *)this + 24);
          if (v91 >= 1)
          {
            int v92 = v91 + 1;
            do
            {
              int v93 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v94 = *((void *)a2 + 2);
              if ((unint64_t)v93 >= v94 || *v93 != 64) {
                break;
              }
              *((void *)a2 + 1) = v93 + 1;
              if ((unint64_t)(v93 + 1) >= v94 || (char)v93[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v93[1];
                *((void *)a2 + 1) = v93 + 2;
              }
              int v95 = *((_DWORD *)this + 24);
              if (v95 >= *((_DWORD *)this + 25))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v95 = *((_DWORD *)this + 24);
              }
              unsigned int v96 = v175;
              uint64_t v97 = *((void *)this + 11);
              *((_DWORD *)this + 24) = v95 + 1;
              *(_DWORD *)(v97 + 4 * v95) = v96;
              --v92;
            }
            while (v92 > 1);
          }
        }
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v22 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_218;
      case 0xAu:
        int v11 = TagFallback & 7;
        if (v11 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v23 = (char *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            goto LABEL_225;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v167);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v100 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v100 >= v16) {
            goto LABEL_2;
          }
          int v101 = *v100;
          if (v101 == 88) {
            goto LABEL_266;
          }
LABEL_244:
          if (v101 != 80) {
            goto LABEL_2;
          }
          int v23 = (char *)(v100 + 1);
          *((void *)a2 + 1) = v23;
LABEL_225:
          unsigned int v175 = 0;
          if ((unint64_t)v23 >= v16 || *v23 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
          }
            }
          else
          {
            unsigned int v175 = *v23;
            *((void *)a2 + 1) = v23 + 1;
          }
          int v102 = *((_DWORD *)this + 28);
          if (v102 == *((_DWORD *)this + 29))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v167, v102 + 1);
            int v102 = *((_DWORD *)this + 28);
          }
          unsigned int v103 = v175;
          uint64_t v104 = *((void *)this + 13);
          *((_DWORD *)this + 28) = v102 + 1;
          *(_DWORD *)(v104 + 4 * v102) = v103;
          int v105 = *((_DWORD *)this + 29) - *((_DWORD *)this + 28);
          if (v105 >= 1)
          {
            int v106 = v105 + 1;
            do
            {
              int v107 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v108 = *((void *)a2 + 2);
              if ((unint64_t)v107 >= v108 || *v107 != 80) {
                break;
              }
              *((void *)a2 + 1) = v107 + 1;
              if ((unint64_t)(v107 + 1) >= v108 || (char)v107[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
              }
                }
              else
              {
                unsigned int v175 = v107[1];
                *((void *)a2 + 1) = v107 + 2;
              }
              int v109 = *((_DWORD *)this + 28);
              if (v109 >= *((_DWORD *)this + 29))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                int v109 = *((_DWORD *)this + 28);
              }
              unsigned int v110 = v175;
              uint64_t v111 = *((void *)this + 13);
              *((_DWORD *)this + 28) = v109 + 1;
              *(_DWORD *)(v111 + 4 * v109) = v110;
              --v106;
            }
            while (v106 > 1);
          }
        }
      case 0xBu:
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)v169);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v100 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v16 = *((void *)a2 + 2);
            if ((unint64_t)v100 >= v16) {
              goto LABEL_2;
            }
            int v122 = *v100;
            if (v122 == 96)
            {
              int v25 = (char *)(v100 + 1);
              *((void *)a2 + 1) = v25;
LABEL_268:
              if ((unint64_t)v25 >= v16 || *v25 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v164);
                if (!result) {
                  return result;
                }
                int v123 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v16 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int *v164 = *v25;
                int v123 = v25 + 1;
                *((void *)a2 + 1) = v123;
              }
              *((_DWORD *)this + 83) |= 0x400u;
              if ((unint64_t)v123 < v16 && *v123 == 106)
              {
                int v26 = v123 + 1;
                *((void *)a2 + 1) = v26;
                goto LABEL_276;
              }
              goto LABEL_2;
            }
            if (v122 != 88) {
              goto LABEL_2;
            }
LABEL_266:
            uint64_t v24 = (char *)(v100 + 1);
            *((void *)a2 + 1) = v24;
LABEL_246:
            unsigned int v175 = 0;
            if ((unint64_t)v24 >= v16 || *v24 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v24;
              *((void *)a2 + 1) = v24 + 1;
            }
            int v112 = *((_DWORD *)this + 32);
            if (v112 == *((_DWORD *)this + 33))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v169, v112 + 1);
              int v112 = *((_DWORD *)this + 32);
            }
            unsigned int v113 = v175;
            uint64_t v114 = *((void *)this + 15);
            *((_DWORD *)this + 32) = v112 + 1;
            *(_DWORD *)(v114 + 4 * v112) = v113;
            int v115 = *((_DWORD *)this + 33) - *((_DWORD *)this + 32);
            if (v115 >= 1)
            {
              int v116 = v115 + 1;
              do
              {
                int v117 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v118 = *((void *)a2 + 2);
                if ((unint64_t)v117 >= v118 || *v117 != 88) {
                  break;
                }
                *((void *)a2 + 1) = v117 + 1;
                if ((unint64_t)(v117 + 1) >= v118 || (char)v117[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
                }
                  }
                else
                {
                  unsigned int v175 = v117[1];
                  *((void *)a2 + 1) = v117 + 2;
                }
                int v119 = *((_DWORD *)this + 32);
                if (v119 >= *((_DWORD *)this + 33))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v176);
                  int v119 = *((_DWORD *)this + 32);
                }
                unsigned int v120 = v175;
                uint64_t v121 = *((void *)this + 15);
                *((_DWORD *)this + 32) = v119 + 1;
                *(_DWORD *)(v121 + 4 * v119) = v120;
                --v116;
              }
              while (v116 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v24 = (char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          goto LABEL_246;
        }
LABEL_64:
        if (v11 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0xCu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_268;
      case 0xDu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v26 = (char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
LABEL_276:
          v176[0] = 0;
          if ((unint64_t)v26 >= v16 || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v26;
            *((void *)a2 + 1) = v26 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v124 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v124 >= *((void *)a2 + 2) || *v124 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v124;
              *((void *)a2 + 1) = v124 + 1;
            }
            int v125 = *((_DWORD *)this + 36);
            if (v125 == *((_DWORD *)this + 37))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v8, v125 + 1);
              int v125 = *((_DWORD *)this + 36);
            }
            unsigned int v126 = v175;
            uint64_t v127 = *((void *)this + 17);
            *((_DWORD *)this + 36) = v125 + 1;
            *(_DWORD *)(v127 + 4 * v125) = v126;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x6Au, a2, (uint64_t)v8);
          if (!result) {
            return result;
          }
        }
        int v128 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        if ((unint64_t)v128 >= v28 || *v128 != 114) {
          continue;
        }
        int v27 = v128 + 1;
        *((void *)a2 + 1) = v27;
        goto LABEL_293;
      case 0xEu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v27 = (char *)*((void *)a2 + 1);
          unint64_t v28 = *((void *)a2 + 2);
LABEL_293:
          v176[0] = 0;
          if ((unint64_t)v27 >= v28 || *v27 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v27;
            *((void *)a2 + 1) = v27 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v129 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v129 >= *((void *)a2 + 2) || *v129 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v129;
              *((void *)a2 + 1) = v129 + 1;
            }
            int v130 = *((_DWORD *)this + 42);
            if (v130 == *((_DWORD *)this + 43))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v7, v130 + 1);
              int v130 = *((_DWORD *)this + 42);
            }
            unsigned int v131 = v175;
            uint64_t v132 = *((void *)this + 20);
            *((_DWORD *)this + 42) = v130 + 1;
            *(_DWORD *)(v132 + 4 * v130) = v131;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x72u, a2, (uint64_t)v7);
          if (!result) {
            return result;
          }
        }
        int v133 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        if ((unint64_t)v133 >= v30 || *v133 != 122) {
          continue;
        }
        uint64_t v29 = v133 + 1;
        *((void *)a2 + 1) = v29;
        goto LABEL_310;
      case 0xFu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          uint64_t v29 = (char *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
LABEL_310:
          v176[0] = 0;
          if ((unint64_t)v29 >= v30 || *v29 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v29;
            *((void *)a2 + 1) = v29 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v134 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v134 >= *((void *)a2 + 2) || *v134 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v134;
              *((void *)a2 + 1) = v134 + 1;
            }
            int v135 = *((_DWORD *)this + 48);
            if (v135 == *((_DWORD *)this + 49))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v6, v135 + 1);
              int v135 = *((_DWORD *)this + 48);
            }
            unsigned int v136 = v175;
            uint64_t v137 = *((void *)this + 23);
            *((_DWORD *)this + 48) = v135 + 1;
            *(_DWORD *)(v137 + 4 * v135) = v136;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(1, 0x7Au, a2, (uint64_t)v6);
          if (!result) {
            return result;
          }
        }
        int v138 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v31 = *((void *)a2 + 2);
        if ((int)v31 - (int)v138 < 2 || *v138 != 130 || v138[1] != 1) {
          continue;
        }
        int v32 = (char *)(v138 + 2);
        *((void *)a2 + 1) = v32;
        goto LABEL_328;
      case 0x10u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v32 = (char *)*((void *)a2 + 1);
          unint64_t v31 = *((void *)a2 + 2);
LABEL_328:
          v176[0] = 0;
          if ((unint64_t)v32 >= v31 || *v32 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v32;
            *((void *)a2 + 1) = v32 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v139 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v139 >= *((void *)a2 + 2) || *v139 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v139;
              *((void *)a2 + 1) = v139 + 1;
            }
            int v140 = *((_DWORD *)this + 54);
            if (v140 == *((_DWORD *)this + 55))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v5, v140 + 1);
              int v140 = *((_DWORD *)this + 54);
            }
            unsigned int v141 = v175;
            uint64_t v142 = *((void *)this + 26);
            *((_DWORD *)this + 54) = v140 + 1;
            *(_DWORD *)(v142 + 4 * v140) = v141;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x82u, a2, (uint64_t)v5);
          if (!result) {
            return result;
          }
        }
        int v143 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v33 = *((void *)a2 + 2);
        if ((int)v33 - (int)v143 < 2 || *v143 != 138 || v143[1] != 1) {
          continue;
        }
        int v34 = (char *)(v143 + 2);
        *((void *)a2 + 1) = v34;
        goto LABEL_346;
      case 0x11u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v34 = (char *)*((void *)a2 + 1);
          unint64_t v33 = *((void *)a2 + 2);
LABEL_346:
          v176[0] = 0;
          if ((unint64_t)v34 >= v33 || *v34 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v34;
            *((void *)a2 + 1) = v34 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v144 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v144 >= *((void *)a2 + 2) || *v144 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v144;
              *((void *)a2 + 1) = v144 + 1;
            }
            int v145 = *((_DWORD *)this + 60);
            if (v145 == *((_DWORD *)this + 61))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v4, v145 + 1);
              int v145 = *((_DWORD *)this + 60);
            }
            unsigned int v146 = v175;
            uint64_t v147 = *((void *)this + 29);
            *((_DWORD *)this + 60) = v145 + 1;
            *(_DWORD *)(v147 + 4 * v145) = v146;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x8Au, a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
        }
        int v148 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v35 = *((void *)a2 + 2);
        if ((int)v35 - (int)v148 < 2 || *v148 != 146 || v148[1] != 1) {
          continue;
        }
        int v36 = (char *)(v148 + 2);
        *((void *)a2 + 1) = v36;
        goto LABEL_364;
      case 0x12u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v36 = (char *)*((void *)a2 + 1);
          unint64_t v35 = *((void *)a2 + 2);
LABEL_364:
          v176[0] = 0;
          if ((unint64_t)v36 >= v35 || *v36 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v36;
            *((void *)a2 + 1) = v36 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v149 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v149 >= *((void *)a2 + 2) || *v149 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v149;
              *((void *)a2 + 1) = v149 + 1;
            }
            int v150 = *((_DWORD *)this + 66);
            if (v150 == *((_DWORD *)this + 67))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v174, v150 + 1);
              int v150 = *((_DWORD *)this + 66);
            }
            unsigned int v151 = v175;
            uint64_t v152 = *((void *)this + 32);
            *((_DWORD *)this + 66) = v150 + 1;
            *(_DWORD *)(v152 + 4 * v150) = v151;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x92u, a2, (uint64_t)v174);
          if (!result) {
            return result;
          }
        }
        int v153 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        if ((int)v37 - (int)v153 < 2 || *v153 != 154 || v153[1] != 1) {
          continue;
        }
        uint64_t v38 = (char *)(v153 + 2);
        *((void *)a2 + 1) = v38;
        goto LABEL_382;
      case 0x13u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          uint64_t v38 = (char *)*((void *)a2 + 1);
          unint64_t v37 = *((void *)a2 + 2);
LABEL_382:
          v176[0] = 0;
          if ((unint64_t)v38 >= v37 || *v38 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v38;
            *((void *)a2 + 1) = v38 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v154 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v154 >= *((void *)a2 + 2) || *v154 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v154;
              *((void *)a2 + 1) = v154 + 1;
            }
            int v155 = *((_DWORD *)this + 72);
            if (v155 == *((_DWORD *)this + 73))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v173, v155 + 1);
              int v155 = *((_DWORD *)this + 72);
            }
            unsigned int v156 = v175;
            uint64_t v157 = *((void *)this + 35);
            *((_DWORD *)this + 72) = v155 + 1;
            *(_DWORD *)(v157 + 4 * v155) = v156;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0x9Au, a2, (uint64_t)v173);
          if (!result) {
            return result;
          }
        }
        int v158 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v39 = *((void *)a2 + 2);
        if ((int)v39 - (int)v158 < 2 || *v158 != 162 || v158[1] != 1) {
          continue;
        }
        int v40 = (char *)(v158 + 2);
        *((void *)a2 + 1) = v40;
        goto LABEL_400;
      case 0x14u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_64;
          }
          int v40 = (char *)*((void *)a2 + 1);
          unint64_t v39 = *((void *)a2 + 2);
LABEL_400:
          v176[0] = 0;
          if ((unint64_t)v40 >= v39 || *v40 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v176))return 0; {
          }
            }
          else
          {
            v176[0] = *v40;
            *((void *)a2 + 1) = v40 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v175 = 0;
            int v159 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v159 >= *((void *)a2 + 2) || *v159 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v175))return 0; {
            }
              }
            else
            {
              unsigned int v175 = *v159;
              *((void *)a2 + 1) = v159 + 1;
            }
            int v160 = *((_DWORD *)this + 78);
            if (v160 == *((_DWORD *)this + 79))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v172, v160 + 1);
              int v160 = *((_DWORD *)this + 78);
            }
            unsigned int v161 = v175;
            uint64_t v162 = *((void *)this + 38);
            *((_DWORD *)this + 78) = v160 + 1;
            *(_DWORD *)(v162 + 4 * v160) = v161;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        }
        else
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)13>(2, 0xA2u, a2, (uint64_t)v172);
          if (!result) {
            return result;
          }
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        continue;
      default:
        int v11 = TagFallback & 7;
        goto LABEL_64;
    }
  }
}

void sub_22493DA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionElevationAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 332);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 332);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(void *)(v5 + 16) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(*(void *)(v5 + 32) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(*(void *)(v5 + 48) + 4 * v9++), (uint64_t)a2, a4);
    while (v9 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(void *)(v5 + 72) + 4 * v10++), (uint64_t)a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(void *)(v5 + 88) + 4 * v11++), (uint64_t)a2, a4);
    while (v11 < *(int *)(v5 + 96));
  }
  if ((*(unsigned char *)(v5 + 332) & 0x80) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(*(void *)(v5 + 104) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(*(void *)(v5 + 120) + 4 * v13++), (uint64_t)a2, a4);
    while (v13 < *(int *)(v5 + 128));
  }
  if ((*(unsigned char *)(v5 + 333) & 4) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 324), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 144) >= 1)
    {
      uint64_t v14 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v14;
      }
      while (v14 < *(int *)(v5 + 144));
    }
  }
  if (*(int *)(v5 + 168) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 168) >= 1)
    {
      uint64_t v15 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v15;
      }
      while (v15 < *(int *)(v5 + 168));
    }
  }
  if (*(int *)(v5 + 192) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 192) >= 1)
    {
      uint64_t v16 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v16;
      }
      while (v16 < *(int *)(v5 + 192));
    }
  }
  if (*(int *)(v5 + 216) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 216) >= 1)
    {
      uint64_t v17 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v17;
      }
      while (v17 < *(int *)(v5 + 216));
    }
  }
  if (*(int *)(v5 + 240) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 240) >= 1)
    {
      uint64_t v18 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v18;
      }
      while (v18 < *(int *)(v5 + 240));
    }
  }
  if (*(int *)(v5 + 264) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 264) >= 1)
    {
      uint64_t v19 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v19;
      }
      while (v19 < *(int *)(v5 + 264));
    }
  }
  if (*(int *)(v5 + 288) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 288) >= 1)
    {
      uint64_t v20 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v20;
      }
      while (v20 < *(int *)(v5 + 288));
    }
  }
  if (*(int *)(v5 + 312) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 312) >= 1)
    {
      uint64_t v21 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v21;
      }
      while (v21 < *(int *)(v5 + 312));
    }
  }
  return this;
}

uint64_t awd::metrics::MotionElevationAllDay::ByteSize(awd::metrics::MotionElevationAllDay *this)
{
  int v2 = *((_DWORD *)this + 83);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 83);
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 83);
  }
  else
  {
    int v5 = 1;
  }
  v3 += v5 + 1;
LABEL_14:
  if ((v2 & 0x80) == 0)
  {
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 10;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    int v2 = *((_DWORD *)this + 83);
  }
  else
  {
    int v7 = 1;
  }
  v3 += v7 + 1;
  if ((v2 & 0x400) != 0)
  {
LABEL_23:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 81);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v9 = 1;
    }
    v3 += v9 + 1;
  }
LABEL_27:
  int v107 = v3;
  int v10 = *((_DWORD *)this + 6);
  if (v10 < 1)
  {
    int v12 = 0;
  }
  else
  {
    uint64_t v11 = 0;
    int v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                             + 4 * v11);
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        int v10 = *((_DWORD *)this + 6);
      }
      else
      {
        int v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  int v15 = *((_DWORD *)this + 10);
  if (v15 < 1)
  {
    int v17 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    int v17 = 0;
    do
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 4)
                                                                                             + 4 * v16);
      if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        int v15 = *((_DWORD *)this + 10);
      }
      else
      {
        int v19 = 1;
      }
      v17 += v19;
      ++v16;
    }
    while (v16 < v15);
  }
  int v20 = *((_DWORD *)this + 14);
  if (v20 < 1)
  {
    int v22 = 0;
  }
  else
  {
    uint64_t v21 = 0;
    int v22 = 0;
    do
    {
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 6)
                                                                                             + 4 * v21);
      if (v23 >= 0x80)
      {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
        int v20 = *((_DWORD *)this + 14);
      }
      else
      {
        int v24 = 1;
      }
      v22 += v24;
      ++v21;
    }
    while (v21 < v20);
  }
  int v25 = *((_DWORD *)this + 20);
  if (v25 < 1)
  {
    int v27 = 0;
  }
  else
  {
    uint64_t v26 = 0;
    int v27 = 0;
    do
    {
      unint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 9)
                                                                                             + 4 * v26);
      if (v28 >= 0x80)
      {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
        int v25 = *((_DWORD *)this + 20);
      }
      else
      {
        int v29 = 1;
      }
      v27 += v29;
      ++v26;
    }
    while (v26 < v25);
  }
  int v105 = v15;
  int v106 = v10;
  int v30 = *((_DWORD *)this + 24);
  if (v30 < 1)
  {
    int v32 = 0;
  }
  else
  {
    uint64_t v31 = 0;
    int v32 = 0;
    do
    {
      unint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 11)
                                                                                             + 4 * v31);
      if (v33 >= 0x80)
      {
        int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
        int v30 = *((_DWORD *)this + 24);
      }
      else
      {
        int v34 = 1;
      }
      v32 += v34;
      ++v31;
    }
    while (v31 < v30);
  }
  int v103 = v25;
  int v104 = v20;
  int v35 = *((_DWORD *)this + 28);
  if (v35 < 1)
  {
    int v37 = 0;
  }
  else
  {
    uint64_t v36 = 0;
    int v37 = 0;
    do
    {
      uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 13)
                                                                                             + 4 * v36);
      if (v38 >= 0x80)
      {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
        int v35 = *((_DWORD *)this + 28);
      }
      else
      {
        int v39 = 1;
      }
      v37 += v39;
      ++v36;
    }
    while (v36 < v35);
  }
  int v102 = v30;
  int v40 = *((_DWORD *)this + 32);
  if (v40 < 1)
  {
    int v42 = 0;
  }
  else
  {
    uint64_t v41 = 0;
    int v42 = 0;
    do
    {
      int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 15)
                                                                                             + 4 * v41);
      if (v43 >= 0x80)
      {
        int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
        int v40 = *((_DWORD *)this + 32);
      }
      else
      {
        int v44 = 1;
      }
      v42 += v44;
      ++v41;
    }
    while (v41 < v40);
  }
  int v45 = v12 + v107 + v106 + v17 + v105 + v22 + v104 + v27 + v103 + v32 + v102 + v37 + v35 + v42 + v40;
  int v46 = *((_DWORD *)this + 36);
  if (v46 < 1)
  {
    LODWORD(v48) = 0;
  }
  else
  {
    uint64_t v47 = 0;
    LODWORD(v48) = 0;
    do
    {
      int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 17)
                                                                                             + 4 * v47);
      if (v49 >= 0x80)
      {
        int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
        int v46 = *((_DWORD *)this + 36);
      }
      else
      {
        int v50 = 1;
      }
      int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v50 + v48);
      ++v47;
    }
    while (v47 < v46);
    if ((int)v48 > 0)
    {
      if (v48 >= 0x80) {
        int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
      }
      else {
        int v51 = 1;
      }
      v45 += v51 + 1;
    }
  }
  *((_DWORD *)this + 38) = v48;
  int v52 = v45 + v48;
  int v53 = *((_DWORD *)this + 42);
  if (v53 < 1)
  {
    LODWORD(v55) = 0;
  }
  else
  {
    uint64_t v54 = 0;
    LODWORD(v55) = 0;
    do
    {
      unsigned int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 20)
                                                                                             + 4 * v54);
      if (v56 >= 0x80)
      {
        int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
        int v53 = *((_DWORD *)this + 42);
      }
      else
      {
        int v57 = 1;
      }
      int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v57 + v55);
      ++v54;
    }
    while (v54 < v53);
    if ((int)v55 > 0)
    {
      if (v55 >= 0x80) {
        int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      }
      else {
        int v58 = 1;
      }
      v52 += v58 + 1;
    }
  }
  *((_DWORD *)this + 44) = v55;
  int v59 = v52 + v55;
  int v60 = *((_DWORD *)this + 48);
  if (v60 < 1)
  {
    LODWORD(v62) = 0;
  }
  else
  {
    uint64_t v61 = 0;
    LODWORD(v62) = 0;
    do
    {
      unsigned int v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 23)
                                                                                             + 4 * v61);
      if (v63 >= 0x80)
      {
        int v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63);
        int v60 = *((_DWORD *)this + 48);
      }
      else
      {
        int v64 = 1;
      }
      int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v64 + v62);
      ++v61;
    }
    while (v61 < v60);
    if ((int)v62 > 0)
    {
      if (v62 >= 0x80) {
        int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
      }
      else {
        int v65 = 1;
      }
      v59 += v65 + 1;
    }
  }
  *((_DWORD *)this + 50) = v62;
  int v66 = v59 + v62;
  int v67 = *((_DWORD *)this + 54);
  if (v67 < 1)
  {
    LODWORD(v69) = 0;
  }
  else
  {
    uint64_t v68 = 0;
    LODWORD(v69) = 0;
    do
    {
      int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 26)
                                                                                             + 4 * v68);
      if (v70 >= 0x80)
      {
        int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
        int v67 = *((_DWORD *)this + 54);
      }
      else
      {
        int v71 = 1;
      }
      int v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v71 + v69);
      ++v68;
    }
    while (v68 < v67);
    if ((int)v69 > 0)
    {
      if (v69 >= 0x80) {
        int v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69);
      }
      else {
        int v72 = 1;
      }
      v66 += v72 + 2;
    }
  }
  *((_DWORD *)this + 56) = v69;
  int v73 = v66 + v69;
  int v74 = *((_DWORD *)this + 60);
  if (v74 < 1)
  {
    LODWORD(v76) = 0;
  }
  else
  {
    uint64_t v75 = 0;
    LODWORD(v76) = 0;
    do
    {
      int v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 29)
                                                                                             + 4 * v75);
      if (v77 >= 0x80)
      {
        int v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v77);
        int v74 = *((_DWORD *)this + 60);
      }
      else
      {
        int v78 = 1;
      }
      int v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v78 + v76);
      ++v75;
    }
    while (v75 < v74);
    if ((int)v76 > 0)
    {
      if (v76 >= 0x80) {
        int v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76) + 2;
      }
      else {
        int v79 = 3;
      }
      v73 += v79;
    }
  }
  *((_DWORD *)this + 62) = v76;
  int v80 = v73 + v76;
  int v81 = *((_DWORD *)this + 66);
  if (v81 < 1)
  {
    LODWORD(v83) = 0;
  }
  else
  {
    uint64_t v82 = 0;
    LODWORD(v83) = 0;
    do
    {
      int v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 32)
                                                                                             + 4 * v82);
      if (v84 >= 0x80)
      {
        int v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84);
        int v81 = *((_DWORD *)this + 66);
      }
      else
      {
        int v85 = 1;
      }
      unint64_t v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v85 + v83);
      ++v82;
    }
    while (v82 < v81);
    if ((int)v83 > 0)
    {
      if (v83 >= 0x80) {
        int v86 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83) + 2;
      }
      else {
        int v86 = 3;
      }
      v80 += v86;
    }
  }
  *((_DWORD *)this + 68) = v83;
  int v87 = v80 + v83;
  int v88 = *((_DWORD *)this + 72);
  if (v88 < 1)
  {
    LODWORD(v90) = 0;
  }
  else
  {
    uint64_t v89 = 0;
    LODWORD(v90) = 0;
    do
    {
      int v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 35)
                                                                                             + 4 * v89);
      if (v91 >= 0x80)
      {
        int v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v91);
        int v88 = *((_DWORD *)this + 72);
      }
      else
      {
        int v92 = 1;
      }
      uint64_t v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v92 + v90);
      ++v89;
    }
    while (v89 < v88);
    if ((int)v90 > 0)
    {
      if (v90 >= 0x80) {
        int v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90) + 2;
      }
      else {
        int v93 = 3;
      }
      v87 += v93;
    }
  }
  *((_DWORD *)this + 74) = v90;
  int v94 = v87 + v90;
  int v95 = *((_DWORD *)this + 78);
  if (v95 < 1)
  {
    LODWORD(v97) = 0;
  }
  else
  {
    uint64_t v96 = 0;
    LODWORD(v97) = 0;
    do
    {
      int v98 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 38)
                                                                                             + 4 * v96);
      if (v98 >= 0x80)
      {
        int v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v98);
        int v95 = *((_DWORD *)this + 78);
      }
      else
      {
        int v99 = 1;
      }
      uint64_t v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v99 + v97);
      ++v96;
    }
    while (v96 < v95);
    if ((int)v97 > 0)
    {
      if (v97 >= 0x80) {
        int v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97) + 2;
      }
      else {
        int v100 = 3;
      }
      v94 += v100;
    }
  }
  *((_DWORD *)this + 80) = v97;
  uint64_t result = (v94 + v97);
  *((_DWORD *)this + 82) = result;
  return result;
}

void awd::metrics::MotionElevationAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionElevationAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionElevationAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionElevationAllDay::CopyFrom(awd::metrics::MotionElevationAllDay *this, const awd::metrics::MotionElevationAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionElevationAllDay *))(*(void *)this + 32))(this);
    awd::metrics::MotionElevationAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionElevationAllDay::IsInitialized(awd::metrics::MotionElevationAllDay *this)
{
  return 1;
}

double awd::metrics::MotionElevationAllDay::Swap(awd::metrics::MotionElevationAllDay *this, awd::metrics::MotionElevationAllDay *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    uint64_t v3 = *((void *)this + 1);
    uint64_t v4 = *((void *)this + 2);
    uint64_t v5 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v5;
    uint64_t v6 = *((void *)a2 + 3);
    *((void *)a2 + 1) = v3;
    *((void *)a2 + 2) = v4;
    uint64_t v7 = *((void *)this + 3);
    *((void *)this + 3) = v6;
    *((void *)a2 + 3) = v7;
    uint64_t v8 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    uint64_t v9 = *((void *)a2 + 5);
    *((void *)a2 + 4) = v8;
    uint64_t v10 = *((void *)this + 5);
    *((void *)this + 5) = v9;
    *((void *)a2 + 5) = v10;
    uint64_t v11 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    uint64_t v12 = *((void *)a2 + 7);
    *((void *)a2 + 6) = v11;
    uint64_t v13 = *((void *)this + 7);
    *((void *)this + 7) = v12;
    *((void *)a2 + 7) = v13;
    uint64_t v14 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    uint64_t v15 = *((void *)a2 + 10);
    *((void *)a2 + 9) = v14;
    uint64_t v16 = *((void *)this + 10);
    *((void *)this + 10) = v15;
    *((void *)a2 + 10) = v16;
    uint64_t v17 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    uint64_t v18 = *((void *)a2 + 12);
    *((void *)a2 + 11) = v17;
    uint64_t v19 = *((void *)this + 12);
    *((void *)this + 12) = v18;
    *((void *)a2 + 12) = v19;
    LODWORD(v17) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v17;
    uint64_t v20 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    uint64_t v21 = *((void *)a2 + 14);
    *((void *)a2 + 13) = v20;
    uint64_t v22 = *((void *)this + 14);
    *((void *)this + 14) = v21;
    *((void *)a2 + 14) = v22;
    uint64_t v23 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    uint64_t v24 = *((void *)a2 + 16);
    *((void *)a2 + 15) = v23;
    uint64_t v25 = *((void *)this + 16);
    *((void *)this + 16) = v24;
    *((void *)a2 + 16) = v25;
    LODWORD(v23) = *((_DWORD *)this + 81);
    *((_DWORD *)this + 81) = *((_DWORD *)a2 + 81);
    *((_DWORD *)a2 + 81) = v23;
    uint64_t v26 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    uint64_t v27 = *((void *)a2 + 18);
    *((void *)a2 + 17) = v26;
    uint64_t v28 = *((void *)this + 18);
    *((void *)this + 18) = v27;
    *((void *)a2 + 18) = v28;
    uint64_t v29 = *((void *)this + 20);
    *((void *)this + 20) = *((void *)a2 + 20);
    uint64_t v30 = *((void *)a2 + 21);
    *((void *)a2 + 20) = v29;
    uint64_t v31 = *((void *)this + 21);
    *((void *)this + 21) = v30;
    *((void *)a2 + 21) = v31;
    uint64_t v32 = *((void *)this + 23);
    *((void *)this + 23) = *((void *)a2 + 23);
    uint64_t v33 = *((void *)a2 + 24);
    *((void *)a2 + 23) = v32;
    uint64_t v34 = *((void *)this + 24);
    *((void *)this + 24) = v33;
    *((void *)a2 + 24) = v34;
    uint64_t v35 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    uint64_t v36 = *((void *)a2 + 27);
    *((void *)a2 + 26) = v35;
    uint64_t v37 = *((void *)this + 27);
    *((void *)this + 27) = v36;
    *((void *)a2 + 27) = v37;
    uint64_t v38 = *((void *)this + 29);
    *((void *)this + 29) = *((void *)a2 + 29);
    uint64_t v39 = *((void *)a2 + 30);
    *((void *)a2 + 29) = v38;
    uint64_t v40 = *((void *)this + 30);
    *((void *)this + 30) = v39;
    *((void *)a2 + 30) = v40;
    uint64_t v41 = *((void *)this + 32);
    *((void *)this + 32) = *((void *)a2 + 32);
    uint64_t v42 = *((void *)a2 + 33);
    *((void *)a2 + 32) = v41;
    uint64_t v43 = *((void *)this + 33);
    *((void *)this + 33) = v42;
    *((void *)a2 + 33) = v43;
    uint64_t v44 = *((void *)this + 35);
    *((void *)this + 35) = *((void *)a2 + 35);
    uint64_t v45 = *((void *)a2 + 36);
    *((void *)a2 + 35) = v44;
    uint64_t v46 = *((void *)this + 36);
    *((void *)this + 36) = v45;
    *((void *)a2 + 36) = v46;
    uint64_t v47 = *((void *)this + 38);
    *((void *)this + 38) = *((void *)a2 + 38);
    double result = *((double *)a2 + 39);
    *((void *)a2 + 38) = v47;
    uint64_t v49 = *((void *)this + 39);
    *((double *)this + 39) = result;
    *((void *)a2 + 39) = v49;
    LODWORD(v47) = *((_DWORD *)this + 83);
    *((_DWORD *)this + 83) = *((_DWORD *)a2 + 83);
    *((_DWORD *)a2 + 83) = v47;
    LODWORD(v47) = *((_DWORD *)this + 82);
    *((_DWORD *)this + 82) = *((_DWORD *)a2 + 82);
    *((_DWORD *)a2 + 82) = v47;
  }
  return result;
}

void *awd::metrics::MotionElevationAllDay::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionElevationAllDay");
}

uint64_t awd::metrics::MotionPressureStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 152) = 0;
  return this;
}

awd::metrics::MotionPressureStats *awd::metrics::MotionPressureStats::MotionPressureStats(awd::metrics::MotionPressureStats *this, const awd::metrics::MotionPressureStats *a2)
{
  *(void *)this = &unk_26D7BAF90;
  *((void *)this + 19) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 132) = 0u;
  awd::metrics::MotionPressureStats::MergeFrom(this, a2);
  return this;
}

void sub_22493EAD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)(v1 + 128));
  uint64_t v3 = *(void *)(v1 + 112);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *(void *)(v1 + 96);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *(void *)(v1 + 80);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8052888210);
  }
  uint64_t v6 = *(void *)(v1 + 64);
  if (v6) {
    MEMORY[0x22A61A810](v6, 0x1000C8052888210);
  }
  uint64_t v7 = *(void *)(v1 + 48);
  if (v7) {
    MEMORY[0x22A61A810](v7, 0x1000C8052888210);
  }
  uint64_t v8 = *(void *)(v1 + 32);
  if (v8) {
    MEMORY[0x22A61A810](v8, 0x1000C8052888210);
  }
  uint64_t v9 = *(void *)(v1 + 16);
  if (v9) {
    MEMORY[0x22A61A810](v9, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::MergeFrom(awd::metrics::MotionPressureStats *this, const awd::metrics::MotionPressureStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  int v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 32, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((void *)this + 4) + 4 * *((int *)this + 10)), *((const void **)a2 + 4), 4 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  int v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 48, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((void *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  int v7 = *((_DWORD *)a2 + 18);
  if (v7)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 64, *((_DWORD *)this + 18) + v7);
    memcpy((void *)(*((void *)this + 8) + 4 * *((int *)this + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 80, *((_DWORD *)this + 22) + v8);
    memcpy((void *)(*((void *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  int v9 = *((_DWORD *)a2 + 26);
  if (v9)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve((uint64_t)this + 96, *((_DWORD *)this + 26) + v9);
    memcpy((void *)(*((void *)this + 12) + 4 * *((int *)this + 26)), *((const void **)a2 + 12), 4 * *((int *)a2 + 26));
    *((_DWORD *)this + 26) += *((_DWORD *)a2 + 26);
  }
  int v10 = *((_DWORD *)a2 + 30);
  if (v10)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 112, *((_DWORD *)this + 30) + v10);
    memcpy((void *)(*((void *)this + 14) + 4 * *((int *)this + 30)), *((const void **)a2 + 14), 4 * *((int *)a2 + 30));
    *((_DWORD *)this + 30) += *((_DWORD *)a2 + 30);
  }
  double result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionPressureStats *)((char *)this + 128));
  if (*((int *)a2 + 34) >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = *(const std::string **)(*((void *)a2 + 16) + 8 * v12);
      int v14 = *((_DWORD *)this + 35);
      uint64_t v15 = *((int *)this + 34);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 36))
        {
          double result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::MotionPressureStats *)((char *)this + 128));
          int v14 = *((_DWORD *)this + 35);
        }
        *((_DWORD *)this + 35) = v14 + 1;
        uint64_t v17 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(result);
        uint64_t v18 = *((void *)this + 16);
        uint64_t v19 = *((int *)this + 34);
        *((_DWORD *)this + 34) = v19 + 1;
        *(void *)(v18 + 8 * v19) = v17;
      }
      else
      {
        uint64_t v16 = *((void *)this + 16);
        *((_DWORD *)this + 34) = v15 + 1;
        uint64_t v17 = *(std::string **)(v16 + 8 * v15);
      }
      double result = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 34));
  }
  if (*((unsigned char *)a2 + 156))
  {
    uint64_t v20 = *((void *)a2 + 1);
    *((_DWORD *)this + 39) |= 1u;
    *((void *)this + 1) = v20;
  }
  return result;
}

void sub_22493EED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionPressureStats::~MotionPressureStats(awd::metrics::MotionPressureStats *this)
{
  *(void *)this = &unk_26D7BAF90;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 32);
  uint64_t v2 = *((void *)this + 14);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 12);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)this + 10);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8052888210);
  }
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    MEMORY[0x22A61A810](v6, 0x1000C8052888210);
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    MEMORY[0x22A61A810](v7, 0x1000C8052888210);
  }
  uint64_t v8 = *((void *)this + 2);
  if (v8) {
    MEMORY[0x22A61A810](v8, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::MotionPressureStats::~MotionPressureStats(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionPressureStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 152) = a2;
  return this;
}

uint64_t awd::metrics::MotionPressureStats::default_instance(awd::metrics::MotionPressureStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionPressureStats::default_instance_;
  if (!awd::metrics::MotionPressureStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionPressureStats::default_instance_;
  }
  return result;
}

void awd::metrics::MotionPressureStats::New(awd::metrics::MotionPressureStats *this)
{
}

uint64_t awd::metrics::MotionPressureStats::Clear(awd::metrics::MotionPressureStats *this)
{
  if (*((unsigned char *)this + 156)) {
    *((void *)this + 1) = 0;
  }
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_DWORD *)this + 30) = 0;
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128);
  *((_DWORD *)this + 39) = 0;
  return result;
}

uint64_t awd::metrics::MotionPressureStats::MergePartialFromCodedStream(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = this + 96;
  uint64_t v5 = this + 80;
  uint64_t v102 = this + 64;
  uint64_t v100 = this + 112;
  uint64_t v101 = this + 48;
  uint64_t v98 = this + 16;
  uint64_t v99 = this + 32;
  uint64_t v96 = (unint64_t *)(this + 8);
  uint64_t v97 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 128);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!this) {
        return 1;
      }
    }
    else
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v6;
      *((_DWORD *)a2 + 8) = v7;
      *((void *)a2 + 1) = v6 + 1;
      if (!v7) {
        return 1;
      }
    }
    switch(v7 >> 3)
    {
      case 1u:
        int v8 = v7 & 7;
        if ((v7 & 7) != 0) {
          goto LABEL_35;
        }
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v96);
          if (!this) {
            return this;
          }
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v96 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *(_DWORD *)(v3 + 156) |= 1u;
        if ((unint64_t)v11 >= v10 || *v11 != 21) {
          continue;
        }
        goto LABEL_56;
      case 2u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v98);
          if (!this) {
            return this;
          }
          goto LABEL_73;
        }
        if (v8 != 5) {
          goto LABEL_35;
        }
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0) {
            return 0;
          }
          unsigned int v14 = v103[0];
          int v15 = *(_DWORD *)(v3 + 24);
          if (v15 == *(_DWORD *)(v3 + 28))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v98, v15 + 1);
            int v15 = *(_DWORD *)(v3 + 24);
          }
          uint64_t v16 = *(void *)(v3 + 16);
          int v17 = v15 + 1;
          *(_DWORD *)(v3 + 24) = v15 + 1;
          *(_DWORD *)(v16 + 4 * v15) = v14;
          uint64_t v18 = *((void *)a2 + 1);
          int v19 = *((_DWORD *)a2 + 4) - v18;
          if (v19 >= 1)
          {
            signed int v20 = v19 / 5u;
            int v21 = v20 >= *(_DWORD *)(v3 + 28) - v17 ? *(_DWORD *)(v3 + 28) - v17 : v20;
            if (v21 >= 1)
            {
              int v22 = 0;
              while (*(unsigned char *)v18 == 21)
              {
                int v23 = *(_DWORD *)(v18 + 1);
                if (v17 >= *(_DWORD *)(v3 + 28))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v17 = *(_DWORD *)(v3 + 24);
                  uint64_t v16 = *(void *)(v3 + 16);
                }
                *(_DWORD *)(v3 + 24) = v17 + 1;
                *(_DWORD *)(v16 + 4 * v17) = v23;
                ++v22;
                v18 += 5;
                ++v17;
                if (v21 == v22)
                {
                  int v22 = v21;
                  break;
                }
              }
              if (v22) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_73:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2))
          {
            int v24 = *v11;
            if (v24 == 21)
            {
LABEL_56:
              *((void *)a2 + 1) = v11 + 1;
              continue;
            }
            if (v24 == 29) {
              goto LABEL_76;
            }
          }
          goto LABEL_2;
        }
      case 3u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v99);
          if (!this) {
            return this;
          }
          goto LABEL_93;
        }
        if (v8 != 5) {
          goto LABEL_35;
        }
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0) {
            return 0;
          }
          unsigned int v25 = v103[0];
          int v26 = *(_DWORD *)(v3 + 40);
          if (v26 == *(_DWORD *)(v3 + 44))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v99, v26 + 1);
            int v26 = *(_DWORD *)(v3 + 40);
          }
          uint64_t v27 = *(void *)(v3 + 32);
          int v28 = v26 + 1;
          *(_DWORD *)(v3 + 40) = v26 + 1;
          *(_DWORD *)(v27 + 4 * v26) = v25;
          uint64_t v29 = *((void *)a2 + 1);
          int v30 = *((_DWORD *)a2 + 4) - v29;
          if (v30 >= 1)
          {
            signed int v31 = v30 / 5u;
            int v32 = v31 >= *(_DWORD *)(v3 + 44) - v28 ? *(_DWORD *)(v3 + 44) - v28 : v31;
            if (v32 >= 1)
            {
              int v33 = 0;
              while (*(unsigned char *)v29 == 29)
              {
                int v34 = *(_DWORD *)(v29 + 1);
                if (v28 >= *(_DWORD *)(v3 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v28 = *(_DWORD *)(v3 + 40);
                  uint64_t v27 = *(void *)(v3 + 32);
                }
                *(_DWORD *)(v3 + 40) = v28 + 1;
                *(_DWORD *)(v27 + 4 * v28) = v34;
                ++v33;
                v29 += 5;
                ++v28;
                if (v32 == v33)
                {
                  int v33 = v32;
                  break;
                }
              }
              if (v33) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_93:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2))
          {
            int v35 = *v11;
            if (v35 == 29)
            {
LABEL_76:
              *((void *)a2 + 1) = v11 + 1;
              continue;
            }
            if (v35 == 37) {
              goto LABEL_96;
            }
          }
          goto LABEL_2;
        }
      case 4u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v101);
          if (!this) {
            return this;
          }
          goto LABEL_113;
        }
        if (v8 != 5) {
          goto LABEL_35;
        }
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0) {
            return 0;
          }
          unsigned int v36 = v103[0];
          int v37 = *(_DWORD *)(v3 + 56);
          if (v37 == *(_DWORD *)(v3 + 60))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v101, v37 + 1);
            int v37 = *(_DWORD *)(v3 + 56);
          }
          uint64_t v38 = *(void *)(v3 + 48);
          int v39 = v37 + 1;
          *(_DWORD *)(v3 + 56) = v37 + 1;
          *(_DWORD *)(v38 + 4 * v37) = v36;
          uint64_t v40 = *((void *)a2 + 1);
          int v41 = *((_DWORD *)a2 + 4) - v40;
          if (v41 >= 1)
          {
            signed int v42 = v41 / 5u;
            int v43 = v42 >= *(_DWORD *)(v3 + 60) - v39 ? *(_DWORD *)(v3 + 60) - v39 : v42;
            if (v43 >= 1)
            {
              int v44 = 0;
              while (*(unsigned char *)v40 == 37)
              {
                int v45 = *(_DWORD *)(v40 + 1);
                if (v39 >= *(_DWORD *)(v3 + 60))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v39 = *(_DWORD *)(v3 + 56);
                  uint64_t v38 = *(void *)(v3 + 48);
                }
                *(_DWORD *)(v3 + 56) = v39 + 1;
                *(_DWORD *)(v38 + 4 * v39) = v45;
                ++v44;
                v40 += 5;
                ++v39;
                if (v43 == v44)
                {
                  int v44 = v43;
                  break;
                }
              }
              if (v44) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_113:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2))
          {
            int v46 = *v11;
            if (v46 == 37)
            {
LABEL_96:
              *((void *)a2 + 1) = v11 + 1;
              continue;
            }
            if (v46 == 45) {
              goto LABEL_116;
            }
          }
          goto LABEL_2;
        }
      case 5u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v102);
          if (!this) {
            return this;
          }
          goto LABEL_133;
        }
        if (v8 != 5) {
          goto LABEL_35;
        }
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0) {
            return 0;
          }
          unsigned int v47 = v103[0];
          int v48 = *(_DWORD *)(v3 + 72);
          if (v48 == *(_DWORD *)(v3 + 76))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v102, v48 + 1);
            int v48 = *(_DWORD *)(v3 + 72);
          }
          uint64_t v49 = *(void *)(v3 + 64);
          int v50 = v48 + 1;
          *(_DWORD *)(v3 + 72) = v48 + 1;
          *(_DWORD *)(v49 + 4 * v48) = v47;
          uint64_t v51 = *((void *)a2 + 1);
          int v52 = *((_DWORD *)a2 + 4) - v51;
          if (v52 >= 1)
          {
            signed int v53 = v52 / 5u;
            int v54 = v53 >= *(_DWORD *)(v3 + 76) - v50 ? *(_DWORD *)(v3 + 76) - v50 : v53;
            if (v54 >= 1)
            {
              int v55 = 0;
              while (*(unsigned char *)v51 == 45)
              {
                int v56 = *(_DWORD *)(v51 + 1);
                if (v50 >= *(_DWORD *)(v3 + 76))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v50 = *(_DWORD *)(v3 + 72);
                  uint64_t v49 = *(void *)(v3 + 64);
                }
                *(_DWORD *)(v3 + 72) = v50 + 1;
                *(_DWORD *)(v49 + 4 * v50) = v56;
                ++v55;
                v51 += 5;
                ++v50;
                if (v54 == v55)
                {
                  int v55 = v54;
                  break;
                }
              }
              if (v55) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_133:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2))
          {
            int v57 = *v11;
            if (v57 == 45)
            {
LABEL_116:
              *((void *)a2 + 1) = v11 + 1;
              continue;
            }
            if (v57 == 53) {
              goto LABEL_136;
            }
          }
          goto LABEL_2;
        }
      case 6u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v5);
          if (!this) {
            return this;
          }
          goto LABEL_153;
        }
        if (v8 != 5) {
          goto LABEL_35;
        }
        while (2)
        {
          v103[0] = 0;
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
          if ((this & 1) == 0) {
            return 0;
          }
          unsigned int v58 = v103[0];
          int v59 = *(_DWORD *)(v3 + 88);
          if (v59 == *(_DWORD *)(v3 + 92))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v5, v59 + 1);
            int v59 = *(_DWORD *)(v3 + 88);
          }
          uint64_t v60 = *(void *)(v3 + 80);
          int v61 = v59 + 1;
          *(_DWORD *)(v3 + 88) = v59 + 1;
          *(_DWORD *)(v60 + 4 * v59) = v58;
          uint64_t v62 = *((void *)a2 + 1);
          int v63 = *((_DWORD *)a2 + 4) - v62;
          if (v63 >= 1)
          {
            signed int v64 = v63 / 5u;
            int v65 = v64 >= *(_DWORD *)(v3 + 92) - v61 ? *(_DWORD *)(v3 + 92) - v61 : v64;
            if (v65 >= 1)
            {
              int v66 = 0;
              while (*(unsigned char *)v62 == 53)
              {
                int v67 = *(_DWORD *)(v62 + 1);
                if (v61 >= *(_DWORD *)(v3 + 92))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v61 = *(_DWORD *)(v3 + 88);
                  uint64_t v60 = *(void *)(v3 + 80);
                }
                *(_DWORD *)(v3 + 88) = v61 + 1;
                *(_DWORD *)(v60 + 4 * v61) = v67;
                ++v66;
                v62 += 5;
                ++v61;
                if (v65 == v66)
                {
                  int v66 = v65;
                  break;
                }
              }
              if (v66) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_153:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2))
          {
            int v68 = *v11;
            if (v68 == 53)
            {
LABEL_136:
              *((void *)a2 + 1) = v11 + 1;
              continue;
            }
            if (v68 == 61) {
              goto LABEL_156;
            }
          }
          goto LABEL_2;
        }
      case 7u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<float,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)2>(a2, v4);
          if (!this) {
            return this;
          }
          goto LABEL_173;
        }
        if (v8 != 5)
        {
LABEL_35:
          if (v8 == 4) {
            return 1;
          }
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, v7);
          if ((this & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_157:
        v103[0] = 0;
        this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103);
        if (this)
        {
          unsigned int v69 = v103[0];
          int v70 = *(_DWORD *)(v3 + 104);
          if (v70 == *(_DWORD *)(v3 + 108))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(v4, v70 + 1);
            int v70 = *(_DWORD *)(v3 + 104);
          }
          uint64_t v71 = *(void *)(v3 + 96);
          int v72 = v70 + 1;
          *(_DWORD *)(v3 + 104) = v70 + 1;
          *(_DWORD *)(v71 + 4 * v70) = v69;
          uint64_t v73 = *((void *)a2 + 1);
          int v74 = *((_DWORD *)a2 + 4) - v73;
          if (v74 >= 1)
          {
            signed int v75 = v74 / 5u;
            int v76 = v75 >= *(_DWORD *)(v3 + 108) - v72 ? *(_DWORD *)(v3 + 108) - v72 : v75;
            if (v76 >= 1)
            {
              int v77 = 0;
              while (*(unsigned char *)v73 == 61)
              {
                int v78 = *(_DWORD *)(v73 + 1);
                if (v72 >= *(_DWORD *)(v3 + 108))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v72 = *(_DWORD *)(v3 + 104);
                  uint64_t v71 = *(void *)(v3 + 96);
                }
                *(_DWORD *)(v3 + 104) = v72 + 1;
                *(_DWORD *)(v71 + 4 * v72) = v78;
                ++v77;
                v73 += 5;
                ++v72;
                if (v76 == v77)
                {
                  int v77 = v76;
                  break;
                }
              }
              if (v77) {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_173:
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          if ((unint64_t)v11 >= v13) {
            continue;
          }
          int v79 = *v11;
          if (v79 == 61)
          {
LABEL_156:
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_157;
          }
          while (v79 == 64)
          {
            uint64_t v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
LABEL_177:
            v103[0] = 0;
            if ((unint64_t)v12 >= v13 || *v12 < 0)
            {
              this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
              if (!this) {
                return this;
              }
              unsigned int v80 = v103[0];
            }
            else
            {
              unsigned int v80 = *v12;
              *((void *)a2 + 1) = v12 + 1;
            }
            int v81 = *(_DWORD *)(v3 + 120);
            if (v81 == *(_DWORD *)(v3 + 124))
            {
              this = wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v100, v81 + 1);
              int v81 = *(_DWORD *)(v3 + 120);
            }
            uint64_t v82 = *(void *)(v3 + 112);
            *(_DWORD *)(v3 + 120) = v81 + 1;
            *(_DWORD *)(v82 + 4 * v81) = v80;
            int v83 = *(_DWORD *)(v3 + 124) - *(_DWORD *)(v3 + 120);
            if (v83 >= 1)
            {
              int v84 = v83 + 1;
              do
              {
                int v85 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v86 = *((void *)a2 + 2);
                if ((unint64_t)v85 >= v86 || *v85 != 64) {
                  break;
                }
                *((void *)a2 + 1) = v85 + 1;
                v103[0] = 0;
                if ((unint64_t)(v85 + 1) >= v86 || (char)v85[1] < 0)
                {
                  this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
                  if (!this) {
                    return this;
                  }
                  unsigned int v87 = v103[0];
                }
                else
                {
                  unsigned int v87 = v85[1];
                  *((void *)a2 + 1) = v85 + 2;
                }
                int v88 = *(_DWORD *)(v3 + 120);
                if (v88 >= *(_DWORD *)(v3 + 124))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v103);
                  int v88 = *(_DWORD *)(v3 + 120);
                }
                uint64_t v89 = *(void *)(v3 + 112);
                *(_DWORD *)(v3 + 120) = v88 + 1;
                *(_DWORD *)(v89 + 4 * v88) = v87;
                --v84;
              }
              while (v84 > 1);
            }
LABEL_196:
            uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v13 = *((void *)a2 + 2);
            if ((unint64_t)v11 >= v13) {
              break;
            }
            int v79 = *v11;
            if (v79 == 74)
            {
              do
              {
                *((void *)a2 + 1) = v11 + 1;
LABEL_199:
                int v90 = *(_DWORD *)(v3 + 140);
                int v91 = *(_DWORD *)(v3 + 136);
                if (v91 >= v90)
                {
                  if (v90 == *(_DWORD *)(v3 + 144))
                  {
                    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v97);
                    int v90 = *(_DWORD *)(v3 + 140);
                  }
                  *(_DWORD *)(v3 + 140) = v90 + 1;
                  uint64_t v92 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)this);
                  uint64_t v93 = *(void *)(v3 + 128);
                  uint64_t v94 = *(int *)(v3 + 136);
                  *(_DWORD *)(v3 + 136) = v94 + 1;
                  *(void *)(v93 + 8 * v94) = v92;
                }
                else
                {
                  *(_DWORD *)(v3 + 136) = v91 + 1;
                }
                this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!this) {
                  return this;
                }
                uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
                int v95 = (unsigned char *)*((void *)a2 + 2);
              }
              while (v11 < v95 && *v11 == 74);
              if (v11 == v95 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                this = 1;
                *((unsigned char *)a2 + 36) = 1;
                return this;
              }
              goto LABEL_2;
            }
          }
          continue;
        }
        return 0;
      case 8u:
        int v8 = v7 & 7;
        if (v8 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, v100);
          if (!this) {
            return this;
          }
          goto LABEL_196;
        }
        if ((v7 & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_177;
      case 9u:
        int v8 = v7 & 7;
        if (v8 != 2) {
          goto LABEL_35;
        }
        goto LABEL_199;
      default:
        int v8 = v7 & 7;
        goto LABEL_35;
    }
  }
}

void sub_22493FD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::MotionPressureStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 156)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(*(void *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(*(void *)(v5 + 32) + 4 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(*(void *)(v5 + 48) + 4 * v8++), a3);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(*(void *)(v5 + 64) + 4 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(*(void *)(v5 + 80) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(*(void *)(v5 + 96) + 4 * v11++), a3);
    while (v11 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(*(void *)(v5 + 112) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v13;
    }
    while (v13 < *(int *)(v5 + 136));
  }
  return this;
}

uint64_t awd::metrics::MotionPressureStats::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  if (*((unsigned char *)this + 156)) {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  }
  else {
    int v2 = 0;
  }
  int v3 = *((_DWORD *)this + 6);
  int v4 = *((_DWORD *)this + 10);
  int v5 = *((_DWORD *)this + 14);
  int v6 = *((_DWORD *)this + 18);
  int v7 = *((_DWORD *)this + 22);
  int v8 = *((_DWORD *)this + 26);
  int v9 = *((_DWORD *)this + 30);
  if (v9 < 1)
  {
    int v11 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = 0;
    do
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this[14] + v10);
      if ((v12 & 0x80000000) != 0)
      {
        int v13 = 10;
      }
      else if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
        int v9 = *((_DWORD *)this + 30);
      }
      else
      {
        int v13 = 1;
      }
      v11 += v13;
      ++v10;
    }
    while (v10 < v9);
  }
  int v14 = *((_DWORD *)this + 34);
  uint64_t v15 = (5 * (v4 + v3 + v5 + v6 + v7 + v8) + v2 + v11 + v9 + v14);
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i < v14; ++i)
    {
      uint64_t v17 = *((void *)this[16] + i);
      int v18 = *(unsigned __int8 *)(v17 + 23);
      char v19 = v18;
      uint64_t v20 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
      }
      else {
        unint64_t v21 = v20;
      }
      if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
        int v18 = *(unsigned __int8 *)(v17 + 23);
        uint64_t v20 = *(void *)(v17 + 8);
        int v14 = *((_DWORD *)this + 34);
        char v19 = *(unsigned char *)(v17 + 23);
      }
      else
      {
        int v22 = 1;
      }
      if (v19 < 0) {
        int v18 = v20;
      }
      uint64_t v15 = (v22 + v15 + v18);
    }
  }
  *((_DWORD *)this + 38) = v15;
  return v15;
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::CheckTypeAndMergeFrom(awd::metrics::MotionPressureStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionPressureStats::MergeFrom(this, lpsrc);
}

wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *awd::metrics::MotionPressureStats::CopyFrom(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this, const awd::metrics::MotionPressureStats *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *))(*(void *)this + 32))(this);
    return awd::metrics::MotionPressureStats::MergeFrom(v4, a2);
  }
  return this;
}

uint64_t awd::metrics::MotionPressureStats::IsInitialized(awd::metrics::MotionPressureStats *this)
{
  return 1;
}

awd::metrics::MotionPressureStats *awd::metrics::MotionPressureStats::Swap(awd::metrics::MotionPressureStats *this, awd::metrics::MotionPressureStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
    uint64_t v6 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v6;
    uint64_t v7 = *((void *)a2 + 3);
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    uint64_t v8 = *((void *)this + 3);
    *((void *)this + 3) = v7;
    *((void *)a2 + 3) = v8;
    uint64_t v9 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    uint64_t v10 = *((void *)a2 + 5);
    *((void *)a2 + 4) = v9;
    uint64_t v11 = *((void *)this + 5);
    *((void *)this + 5) = v10;
    *((void *)a2 + 5) = v11;
    uint64_t v12 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    uint64_t v13 = *((void *)a2 + 7);
    *((void *)a2 + 6) = v12;
    uint64_t v14 = *((void *)this + 7);
    *((void *)this + 7) = v13;
    *((void *)a2 + 7) = v14;
    uint64_t v15 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    uint64_t v16 = *((void *)a2 + 9);
    *((void *)a2 + 8) = v15;
    uint64_t v17 = *((void *)this + 9);
    *((void *)this + 9) = v16;
    *((void *)a2 + 9) = v17;
    uint64_t v18 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    uint64_t v19 = *((void *)a2 + 11);
    *((void *)a2 + 10) = v18;
    uint64_t v20 = *((void *)this + 11);
    *((void *)this + 11) = v19;
    *((void *)a2 + 11) = v20;
    uint64_t v21 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    uint64_t v22 = *((void *)a2 + 13);
    *((void *)a2 + 12) = v21;
    uint64_t v23 = *((void *)this + 13);
    *((void *)this + 13) = v22;
    *((void *)a2 + 13) = v23;
    uint64_t v24 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    uint64_t v25 = *((void *)a2 + 15);
    *((void *)a2 + 14) = v24;
    uint64_t v26 = *((void *)this + 15);
    *((void *)this + 15) = v25;
    *((void *)a2 + 15) = v26;
    this = (awd::metrics::MotionPressureStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v27 = *((_DWORD *)v3 + 39);
    *((_DWORD *)v3 + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v27;
    int v28 = *((_DWORD *)v3 + 38);
    *((_DWORD *)v3 + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v28;
  }
  return this;
}

void *awd::metrics::MotionPressureStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionPressureStats");
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 16) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::MotionNoGPSRunAllDay *awd::metrics::MotionNoGPSRunAllDay::MotionNoGPSRunAllDay(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  *(void *)this = &unk_26D7BB008;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, a2);
  return this;
}

void sub_2249403EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionNoGPSRunAllDay::MergeFrom(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 16);
      *((_DWORD *)this + 6) |= 2u;
      *((unsigned char *)this + 16) = v6;
    }
  }
}

void sub_2249404AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionNoGPSRunAllDay::~MotionNoGPSRunAllDay(awd::metrics::MotionNoGPSRunAllDay *this)
{
  *(void *)this = &unk_26D7BB008;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB008;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB008;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::default_instance(awd::metrics::MotionNoGPSRunAllDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionNoGPSRunAllDay::default_instance_;
  if (!awd::metrics::MotionNoGPSRunAllDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionNoGPSRunAllDay::default_instance_;
  }
  return result;
}

void awd::metrics::MotionNoGPSRunAllDay::New(awd::metrics::MotionNoGPSRunAllDay *this)
{
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(void *)(this + 8) = 0;
    *(unsigned char *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::MergePartialFromCodedStream(awd::metrics::MotionNoGPSRunAllDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v10 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!result) {
          return result;
        }
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        *int v4 = *v10;
        uint64_t v11 = v10 + 1;
        *((void *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        uint64_t v9 = v11 + 1;
        *((void *)a2 + 1) = v9;
LABEL_24:
        unsigned int v15 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!result) {
            return result;
          }
          unsigned int v12 = v15;
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v9;
          uint64_t v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((unsigned char *)this + 16) = v12 != 0;
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned __int8 *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::ByteSize(awd::metrics::MotionNoGPSRunAllDay *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 24);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 24))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      int v2 = *((_DWORD *)this + 6);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void awd::metrics::MotionNoGPSRunAllDay::CheckTypeAndMergeFrom(awd::metrics::MotionNoGPSRunAllDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionNoGPSRunAllDay::CopyFrom(awd::metrics::MotionNoGPSRunAllDay *this, const awd::metrics::MotionNoGPSRunAllDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionNoGPSRunAllDay *))(*(void *)this + 32))(this);
    awd::metrics::MotionNoGPSRunAllDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::IsInitialized(awd::metrics::MotionNoGPSRunAllDay *this)
{
  return 1;
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::Swap(uint64_t this, awd::metrics::MotionNoGPSRunAllDay *a2)
{
  if (a2 != (awd::metrics::MotionNoGPSRunAllDay *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 16);
    *(unsigned char *)(this + 16) = *((unsigned char *)a2 + 16);
    *((unsigned char *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

void *awd::metrics::MotionNoGPSRunAllDay::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionNoGPSRunAllDay");
}

uint64_t awd::metrics::MotionFitnessDaily_WearableType_IsValid(awd::metrics *this)
{
  return (this < 5) & (0x17u >> (char)this);
}

double awd::metrics::MotionFitnessDaily::SharedCtor(awd::metrics::MotionFitnessDaily *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 3) = v1;
  *((void *)this + 12) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  double result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

awd::metrics::MotionFitnessDaily *awd::metrics::MotionFitnessDaily::MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  *(void *)this = &unk_26D7BB080;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = v3;
  *((void *)this + 12) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 44) = 0;
  *((_WORD *)this + 30) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  awd::metrics::MotionFitnessDaily::MergeFrom(this, a2);
  return this;
}

void sub_224940ADC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessDaily::MergeFrom(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *((_DWORD *)a2 + 25);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v9 = *((void *)a2 + 1);
    *((_DWORD *)this + 25) |= 1u;
    *((void *)this + 1) = v9;
    int v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v10 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 25) |= 2u;
  uint64_t v11 = (std::string *)*((void *)this + 2);
  if (v11 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v11, v10);
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_33:
  unsigned int v12 = *((_DWORD *)a2 + 8);
  if (v12 >= 3 && v12 != 4) {
    awd::metrics::MotionFitnessDaily::MergeFrom();
  }
  *((_DWORD *)this + 25) |= 4u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v13 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 25) |= 8u;
  uint64_t v14 = (std::string *)*((void *)this + 3);
  if (v14 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v14, v13);
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    int v16 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 25) |= 0x20u;
    *((_DWORD *)this + 9) = v16;
    int v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_39:
  char v15 = *((unsigned char *)a2 + 60);
  *((_DWORD *)this + 25) |= 0x10u;
  *((unsigned char *)this + 60) = v15;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_41:
  int v17 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 25) |= 0x40u;
  *((_DWORD *)this + 10) = v17;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 25) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 25);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v18 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 25) |= 0x100u;
    *((_DWORD *)this + 12) = v18;
    int v4 = *((_DWORD *)a2 + 25);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v19 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 25) |= 0x200u;
  *((_DWORD *)this + 13) = v19;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v20 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 25) |= 0x400u;
  *((_DWORD *)this + 14) = v20;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v21 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 25) |= 0x800u;
  *((_DWORD *)this + 16) = v21;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v22 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 25) |= 0x1000u;
  *((_DWORD *)this + 17) = v22;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v23 = *((void *)a2 + 9);
  *((_DWORD *)this + 25) |= 0x2000u;
  *((void *)this + 9) = v23;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_49:
  uint64_t v24 = *((void *)a2 + 10);
  *((_DWORD *)this + 25) |= 0x4000u;
  *((void *)this + 10) = v24;
  int v4 = *((_DWORD *)a2 + 25);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *((_DWORD *)a2 + 22);
    *((_DWORD *)this + 25) |= 0x8000u;
    *((_DWORD *)this + 22) = v6;
    int v4 = *((_DWORD *)a2 + 25);
  }
LABEL_23:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      int v7 = *((_DWORD *)a2 + 23);
      *((_DWORD *)this + 25) |= 0x10000u;
      *((_DWORD *)this + 23) = v7;
      int v4 = *((_DWORD *)a2 + 25);
    }
    if ((v4 & 0x20000) != 0)
    {
      char v8 = *((unsigned char *)a2 + 61);
      *((_DWORD *)this + 25) |= 0x20000u;
      *((unsigned char *)this + 61) = v8;
    }
  }
}

void sub_224940E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessDaily::~MotionFitnessDaily(awd::metrics::MotionFitnessDaily *this)
{
  *(void *)this = &unk_26D7BB080;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB080;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB080;
  awd::metrics::MotionFitnessDaily::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionFitnessDaily::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 96) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::default_instance(awd::metrics::MotionFitnessDaily *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessDaily::default_instance_;
  if (!awd::metrics::MotionFitnessDaily::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessDaily::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessDaily::New(awd::metrics::MotionFitnessDaily *this)
{
}

uint64_t awd::metrics::MotionFitnessDaily::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 100);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    uint64_t v2 = MEMORY[0x263F8C740];
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((*(unsigned char *)(this + 100) & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 60) = 0;
    *(void *)(this + 40) = 0;
    *(_DWORD *)(this + 36) = 0;
    int v1 = *(_DWORD *)(this + 100);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(_DWORD *)(this + 56) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
    *(void *)(this + 64) = 0;
    *(_DWORD *)(this + 88) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 92) = 0;
    *(unsigned char *)(this + 61) = 0;
  }
  *(_DWORD *)(this + 100) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessDaily::MergePartialFromCodedStream(awd::metrics::MotionFitnessDaily *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 36);
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  int v6 = (unsigned int *)((char *)this + 44);
  int v7 = (unsigned int *)((char *)this + 48);
  char v8 = (unsigned int *)((char *)this + 52);
  uint64_t v9 = (unsigned int *)((char *)this + 56);
  uint64_t v10 = (unsigned int *)((char *)this + 64);
  uint64_t v11 = (unsigned int *)((char *)this + 68);
  uint64_t v62 = (unsigned int *)((char *)this + 88);
  uint64_t v60 = (unint64_t *)((char *)this + 8);
  int v61 = (unsigned int *)((char *)this + 92);
  while (2)
  {
    unsigned int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *uint64_t v60 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_52:
          int v18 = *((_DWORD *)this + 25) | 1;
          *((_DWORD *)this + 25) = v18;
          if ((unint64_t)v17 < v15 && *v17 == 18)
          {
            *((void *)a2 + 1) = v17 + 1;
            goto LABEL_55;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v60);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_52;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_46;
        }
        int v18 = *((_DWORD *)this + 25);
LABEL_55:
        *((_DWORD *)this + 25) = v18 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v19 || *v36 != 24) {
          continue;
        }
        int v20 = v36 + 1;
        *((void *)a2 + 1) = v20;
LABEL_61:
        v63[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!result) {
            return result;
          }
          unsigned int v37 = v63[0];
        }
        else
        {
          unsigned int v37 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v37 <= 4 && v37 != 3)
        {
          *((_DWORD *)this + 25) |= 4u;
          *((_DWORD *)this + 8) = v37;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_74:
        *((_DWORD *)this + 25) |= 8u;
        if (*((void *)this + 3) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v40 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v40 >= v21 || *v40 != 40) {
          continue;
        }
        int v22 = v40 + 1;
        *((void *)a2 + 1) = v22;
LABEL_80:
        v63[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!result) {
            return result;
          }
          unsigned int v41 = v63[0];
          signed int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v41 = *v22;
          signed int v42 = v22 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((unsigned char *)this + 60) = v41 != 0;
        *((_DWORD *)this + 25) |= 0x10u;
        if ((unint64_t)v42 >= v21 || *v42 != 48) {
          continue;
        }
        uint64_t v23 = v42 + 1;
        *((void *)a2 + 1) = v23;
LABEL_88:
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v23;
          int v43 = v23 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 25) |= 0x20u;
        if ((unint64_t)v43 >= v21 || *v43 != 56) {
          continue;
        }
        uint64_t v24 = v43 + 1;
        *((void *)a2 + 1) = v24;
LABEL_96:
        if ((unint64_t)v24 >= v21 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v24;
          int v44 = v24 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 25) |= 0x40u;
        if ((unint64_t)v44 >= v21 || *v44 != 64) {
          continue;
        }
        uint64_t v25 = v44 + 1;
        *((void *)a2 + 1) = v25;
LABEL_104:
        if ((unint64_t)v25 >= v21 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v45 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v25;
          int v45 = v25 + 1;
          *((void *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 25) |= 0x80u;
        if ((unint64_t)v45 >= v21 || *v45 != 72) {
          continue;
        }
        uint64_t v26 = v45 + 1;
        *((void *)a2 + 1) = v26;
LABEL_112:
        if ((unint64_t)v26 >= v21 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v26;
          int v46 = v26 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 25) |= 0x100u;
        if ((unint64_t)v46 >= v21 || *v46 != 80) {
          continue;
        }
        int v27 = v46 + 1;
        *((void *)a2 + 1) = v27;
LABEL_120:
        if ((unint64_t)v27 >= v21 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          unsigned int v47 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          *char v8 = *v27;
          unsigned int v47 = v27 + 1;
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 25) |= 0x200u;
        if ((unint64_t)v47 >= v21 || *v47 != 88) {
          continue;
        }
        int v28 = v47 + 1;
        *((void *)a2 + 1) = v28;
LABEL_128:
        if ((unint64_t)v28 >= v21 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v28;
          int v48 = v28 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 25) |= 0x400u;
        if ((unint64_t)v48 >= v21 || *v48 != 96) {
          continue;
        }
        uint64_t v29 = v48 + 1;
        *((void *)a2 + 1) = v29;
LABEL_136:
        if ((unint64_t)v29 >= v21 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          uint64_t v49 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v29;
          uint64_t v49 = v29 + 1;
          *((void *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 25) |= 0x800u;
        if ((unint64_t)v49 >= v21 || *v49 != 104) {
          continue;
        }
        int v30 = v49 + 1;
        *((void *)a2 + 1) = v30;
LABEL_144:
        if ((unint64_t)v30 >= v21 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v11 = *v30;
          int v50 = v30 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 25) |= 0x1000u;
        if ((unint64_t)v50 >= v21 || *v50 != 112) {
          continue;
        }
        signed int v31 = v50 + 1;
        *((void *)a2 + 1) = v31;
LABEL_152:
        *(void *)int v63 = 0;
        if ((unint64_t)v31 >= v21 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v63);
          if (!result) {
            return result;
          }
          uint64_t v51 = *(void *)v63;
          int v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v51 = *v31;
          int v52 = v31 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((void *)this + 9) = v51;
        *((_DWORD *)this + 25) |= 0x2000u;
        if ((unint64_t)v52 >= v21 || *v52 != 120) {
          continue;
        }
        int v32 = v52 + 1;
        *((void *)a2 + 1) = v32;
LABEL_160:
        *(void *)int v63 = 0;
        if ((unint64_t)v32 >= v21 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v63);
          if (!result) {
            return result;
          }
          uint64_t v53 = *(void *)v63;
          int v54 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v53 = *v32;
          int v54 = v32 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((void *)this + 10) = v53;
        *((_DWORD *)this + 25) |= 0x4000u;
        if ((int)v21 - (int)v54 < 2 || *v54 != 128 || v54[1] != 1) {
          continue;
        }
        int v33 = v54 + 2;
        *((void *)a2 + 1) = v33;
LABEL_169:
        if ((unint64_t)v33 >= v21 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          int v55 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v62 = *v33;
          int v55 = v33 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 25) |= 0x8000u;
        if ((int)v21 - (int)v55 < 2 || *v55 != 136 || v55[1] != 1) {
          continue;
        }
        int v34 = v55 + 2;
        *((void *)a2 + 1) = v34;
LABEL_178:
        if ((unint64_t)v34 >= v21 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          int v56 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v61 = *v34;
          int v56 = v34 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 25) |= 0x10000u;
        if ((int)v21 - (int)v56 < 2 || *v56 != 144 || v56[1] != 1) {
          continue;
        }
        int v35 = (char *)(v56 + 2);
        *((void *)a2 + 1) = v35;
LABEL_187:
        v63[0] = 0;
        if ((unint64_t)v35 >= v21 || *v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!result) {
            return result;
          }
          unsigned int v57 = v63[0];
          unsigned int v58 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v57 = *v35;
          unsigned int v58 = (unsigned __int8 *)(v35 + 1);
          *((void *)a2 + 1) = v58;
        }
        *((unsigned char *)this + 61) = v57 != 0;
        *((_DWORD *)this + 25) |= 0x20000u;
        if (v58 != (unsigned __int8 *)v21 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_61;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_74;
        }
        goto LABEL_46;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_80;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_88;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_96;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_104;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_112;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_120;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v28 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_128;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v29 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_136;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v30 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_144;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        signed int v31 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_152;
      case 0xFu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_160;
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_169;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v34 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_178;
      case 0x12u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v35 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_187;
      default:
        int v14 = TagFallback & 7;
LABEL_46:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessDaily::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 100);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(void *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 92), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 100) & 0x20000) == 0) {
      return this;
    }
    goto LABEL_37;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10000) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v6 & 0x20000) == 0) {
    return this;
  }
LABEL_37:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 61);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionFitnessDaily::ByteSize(awd::metrics::MotionFitnessDaily *this)
{
  int v2 = *((_DWORD *)this + 25);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_53;
  }
  if (v2)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    int v2 = *((_DWORD *)this + 25);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 25);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  LODWORD(v3) = v3 + v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      int v2 = *((_DWORD *)this + 25);
    }
    else
    {
      int v11 = 1;
    }
    LODWORD(v3) = v3 + v11 + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v12 = *((void *)this + 3);
  int v13 = *(unsigned __int8 *)(v12 + 23);
  char v14 = v13;
  uint64_t v15 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
  }
  else {
    unint64_t v16 = v15;
  }
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v15 = *(void *)(v12 + 8);
    int v2 = *((_DWORD *)this + 25);
    char v14 = *(unsigned char *)(v12 + 23);
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < 0) {
    int v13 = v15;
  }
  LODWORD(v3) = v3 + v17 + v13 + 1;
LABEL_34:
  if ((v2 & 0x10) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      int v2 = *((_DWORD *)this + 25);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v19 + 1);
    if ((v2 & 0x40) == 0)
    {
LABEL_39:
      if ((v2 & 0x80) == 0) {
        goto LABEL_53;
      }
      goto LABEL_49;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_39;
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v21 = 1;
  }
  uint64_t v3 = (v3 + v21 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_49:
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      int v2 = *((_DWORD *)this + 25);
    }
    else
    {
      int v23 = 1;
    }
    uint64_t v3 = (v3 + v23 + 1);
  }
LABEL_53:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_89;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v24 >= 0x80)
    {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
      int v2 = *((_DWORD *)this + 25);
    }
    else
    {
      int v25 = 1;
    }
    uint64_t v3 = (v3 + v25 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_56:
      if ((v2 & 0x400) == 0) {
        goto LABEL_57;
      }
      goto LABEL_71;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_56;
  }
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_57:
    if ((v2 & 0x800) == 0) {
      goto LABEL_58;
    }
    goto LABEL_75;
  }
LABEL_71:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_58:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_79;
  }
LABEL_75:
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v31 = 2;
  }
  uint64_t v3 = (v31 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_59:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_83;
  }
LABEL_79:
  int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v33 = 2;
  }
  uint64_t v3 = (v33 + v3);
  if ((v2 & 0x2000) == 0)
  {
LABEL_60:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 9))
     + 1;
  int v2 = *((_DWORD *)this + 25);
  if ((v2 & 0x4000) == 0)
  {
LABEL_61:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 10))
     + 1;
  int v2 = *((_DWORD *)this + 25);
  if ((v2 & 0x8000) == 0) {
    goto LABEL_89;
  }
LABEL_85:
  int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  if (v34 >= 0x80)
  {
    int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 2;
    int v2 = *((_DWORD *)this + 25);
  }
  else
  {
    int v35 = 3;
  }
  uint64_t v3 = (v35 + v3);
LABEL_89:
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      unsigned int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
      if (v36 >= 0x80)
      {
        int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36) + 2;
        int v2 = *((_DWORD *)this + 25);
      }
      else
      {
        int v37 = 3;
      }
      LODWORD(v3) = v37 + v3;
    }
    if ((v2 & 0x20000) != 0) {
      uint64_t v3 = (v3 + 3);
    }
    else {
      uint64_t v3 = v3;
    }
  }
  *((_DWORD *)this + 24) = v3;
  return v3;
}

void awd::metrics::MotionFitnessDaily::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessDaily *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionFitnessDaily::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessDaily::CopyFrom(awd::metrics::MotionFitnessDaily *this, const awd::metrics::MotionFitnessDaily *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessDaily *))(*(void *)this + 32))(this);
    awd::metrics::MotionFitnessDaily::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessDaily::IsInitialized(awd::metrics::MotionFitnessDaily *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessDaily::Swap(uint64_t this, awd::metrics::MotionFitnessDaily *a2)
{
  if (a2 != (awd::metrics::MotionFitnessDaily *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 60);
    *(unsigned char *)(this + 60) = *((unsigned char *)a2 + 60);
    *((unsigned char *)a2 + 60) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    uint64_t v6 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v6;
    uint64_t v7 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v7;
    LOBYTE(v7) = *(unsigned char *)(this + 61);
    *(unsigned char *)(this + 61) = *((unsigned char *)a2 + 61);
    *((unsigned char *)a2 + 61) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 100);
    *(_DWORD *)(this + 100) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 96);
    *(_DWORD *)(this + 96) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v7;
  }
  return this;
}

void *awd::metrics::MotionFitnessDaily::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessDaily");
}

double awd::metrics::MotionFitnessPedometer::SharedCtor(awd::metrics::MotionFitnessPedometer *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionFitnessPedometer *awd::metrics::MotionFitnessPedometer::MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  *(void *)this = &unk_26D7BB0F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  awd::metrics::MotionFitnessPedometer::MergeFrom(this, a2);
  return this;
}

void sub_224942430(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessPedometer::MergeFrom(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((void *)this + 1) = v8;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 23) |= 2u;
  *((_DWORD *)this + 4) = v9;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v10 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 23) |= 4u;
  *((_DWORD *)this + 5) = v10;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 23) |= 8u;
  *((_DWORD *)this + 6) = v11;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_34:
    int v13 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x20u;
    *((_DWORD *)this + 8) = v13;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_33:
  int v12 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x10u;
  *((_DWORD *)this + 7) = v12;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0) {
    goto LABEL_34;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_35:
  int v14 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x40u;
  *((_DWORD *)this + 9) = v14;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 23) |= 0x100u;
    *((_DWORD *)this + 11) = v15;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 23) |= 0x200u;
  *((_DWORD *)this + 12) = v16;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 23) |= 0x400u;
  *((_DWORD *)this + 13) = v17;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 23) |= 0x800u;
  *((_DWORD *)this + 14) = v18;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 23) |= 0x1000u;
  *((_DWORD *)this + 15) = v19;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v20 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 23) |= 0x2000u;
  *((_DWORD *)this + 16) = v20;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_43:
  int v21 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 23) |= 0x4000u;
  *((_DWORD *)this + 17) = v21;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 23) |= 0x8000u;
    *((_DWORD *)this + 18) = v6;
    int v4 = *((_DWORD *)a2 + 23);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v22 = *((_DWORD *)a2 + 19);
    *((_DWORD *)this + 23) |= 0x10000u;
    *((_DWORD *)this + 19) = v22;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        return;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v23 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 23) |= 0x20000u;
  *((_DWORD *)this + 20) = v23;
  if ((*((_DWORD *)a2 + 23) & 0x40000) == 0) {
    return;
  }
LABEL_27:
  int v7 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 23) |= 0x40000u;
  *((_DWORD *)this + 21) = v7;
}

void sub_22494272C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessPedometer::~MotionFitnessPedometer(awd::metrics::MotionFitnessPedometer *this)
{
  *(void *)this = &unk_26D7BB0F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB0F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB0F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionFitnessPedometer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessPedometer::default_instance(awd::metrics::MotionFitnessPedometer *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessPedometer::default_instance_;
  if (!awd::metrics::MotionFitnessPedometer::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessPedometer::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessPedometer::New(awd::metrics::MotionFitnessPedometer *this)
{
}

uint64_t awd::metrics::MotionFitnessPedometer::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 60) = 0u;
    *(_OWORD *)(this + 44) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(this + 80) = 0;
    *(_DWORD *)(this + 76) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessPedometer::MergePartialFromCodedStream(awd::metrics::MotionFitnessPedometer *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  signed int v64 = (unsigned int *)((char *)this + 16);
  int v65 = (unsigned int *)((char *)this + 20);
  int v4 = (unsigned int *)((char *)this + 24);
  int v5 = (unsigned int *)((char *)this + 28);
  int v6 = (unsigned int *)((char *)this + 32);
  int v7 = (unsigned int *)((char *)this + 36);
  uint64_t v8 = (unsigned int *)((char *)this + 40);
  int v9 = (unsigned int *)((char *)this + 44);
  int v10 = (unsigned int *)((char *)this + 48);
  int v11 = (unsigned int *)((char *)this + 68);
  uint64_t v62 = (unsigned int *)((char *)this + 76);
  int v63 = (unsigned int *)((char *)this + 72);
  int v61 = (unsigned int *)((char *)this + 80);
  int v59 = (unint64_t *)((char *)this + 8);
  uint64_t v60 = (unsigned int *)((char *)this + 84);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v59 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_54:
          *((_DWORD *)this + 23) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_57;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v59);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_54;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_57:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *signed int v64 = *v18;
          unsigned int v36 = v18 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 2u;
        if ((unint64_t)v36 >= v15 || *v36 != 24) {
          continue;
        }
        int v19 = v36 + 1;
        *((void *)a2 + 1) = v19;
LABEL_65:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v65 = *v19;
          int v37 = v19 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 4u;
        if ((unint64_t)v37 >= v15 || *v37 != 32) {
          continue;
        }
        int v20 = v37 + 1;
        *((void *)a2 + 1) = v20;
LABEL_73:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v20;
          uint64_t v38 = v20 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v38 >= v15 || *v38 != 40) {
          continue;
        }
        int v21 = v38 + 1;
        *((void *)a2 + 1) = v21;
LABEL_81:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v21;
          int v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v39 >= v15 || *v39 != 48) {
          continue;
        }
        int v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_89:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v22;
          uint64_t v40 = v22 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v40 >= v15 || *v40 != 56) {
          continue;
        }
        int v23 = v40 + 1;
        *((void *)a2 + 1) = v23;
LABEL_97:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v23;
          unsigned int v41 = v23 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v41 >= v15 || *v41 != 64) {
          continue;
        }
        uint64_t v24 = v41 + 1;
        *((void *)a2 + 1) = v24;
LABEL_105:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          signed int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v24;
          signed int v42 = v24 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v42 >= v15 || *v42 != 72) {
          continue;
        }
        int v25 = v42 + 1;
        *((void *)a2 + 1) = v25;
LABEL_113:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v25;
          int v43 = v25 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v43 >= v15 || *v43 != 80) {
          continue;
        }
        uint64_t v26 = v43 + 1;
        *((void *)a2 + 1) = v26;
LABEL_121:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v26;
          int v44 = v26 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v44 >= v15 || *v44 != 88) {
          continue;
        }
        int v27 = v44 + 1;
        *((void *)a2 + 1) = v27;
LABEL_129:
        unsigned int v66 = 0;
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!result) {
            return result;
          }
          unsigned int v45 = v66;
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v27;
          int v46 = v27 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 13) = v45;
        *((_DWORD *)this + 23) |= 0x400u;
        if ((unint64_t)v46 >= v15 || *v46 != 96) {
          continue;
        }
        int v28 = v46 + 1;
        *((void *)a2 + 1) = v28;
LABEL_137:
        unsigned int v66 = 0;
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!result) {
            return result;
          }
          unsigned int v47 = v66;
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v47 = *v28;
          int v48 = v28 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 14) = v47;
        *((_DWORD *)this + 23) |= 0x800u;
        if ((unint64_t)v48 >= v15 || *v48 != 104) {
          continue;
        }
        int v29 = v48 + 1;
        *((void *)a2 + 1) = v29;
LABEL_145:
        unsigned int v66 = 0;
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!result) {
            return result;
          }
          unsigned int v49 = v66;
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v29;
          int v50 = v29 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 15) = v49;
        *((_DWORD *)this + 23) |= 0x1000u;
        if ((unint64_t)v50 >= v15 || *v50 != 112) {
          continue;
        }
        int v30 = v50 + 1;
        *((void *)a2 + 1) = v30;
LABEL_153:
        unsigned int v66 = 0;
        if ((unint64_t)v30 >= v15 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66);
          if (!result) {
            return result;
          }
          unsigned int v51 = v66;
          int v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v51 = *v30;
          int v52 = v30 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 16) = v51;
        *((_DWORD *)this + 23) |= 0x2000u;
        if ((unint64_t)v52 >= v15 || *v52 != 120) {
          continue;
        }
        int v31 = v52 + 1;
        *((void *)a2 + 1) = v31;
LABEL_161:
        if ((unint64_t)v31 >= v15 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          uint64_t v53 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v11 = *v31;
          uint64_t v53 = v31 + 1;
          *((void *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 23) |= 0x4000u;
        if ((int)v15 - (int)v53 < 2 || *v53 != 128 || v53[1] != 1) {
          continue;
        }
        int v32 = v53 + 2;
        *((void *)a2 + 1) = v32;
LABEL_170:
        if ((unint64_t)v32 >= v15 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!result) {
            return result;
          }
          int v54 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v63 = *v32;
          int v54 = v32 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 23) |= 0x8000u;
        if ((int)v15 - (int)v54 < 2 || *v54 != 136 || v54[1] != 1) {
          continue;
        }
        int v33 = v54 + 2;
        *((void *)a2 + 1) = v33;
LABEL_179:
        if ((unint64_t)v33 >= v15 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          int v55 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v62 = *v33;
          int v55 = v33 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 23) |= 0x10000u;
        if ((int)v15 - (int)v55 < 2 || *v55 != 144 || v55[1] != 1) {
          continue;
        }
        int v34 = v55 + 2;
        *((void *)a2 + 1) = v34;
LABEL_188:
        if ((unint64_t)v34 >= v15 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          int v56 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v61 = *v34;
          int v56 = v34 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 23) |= 0x20000u;
        if ((int)v15 - (int)v56 < 2 || *v56 != 152 || v56[1] != 1) {
          continue;
        }
        int v35 = (char *)(v56 + 2);
        *((void *)a2 + 1) = v35;
LABEL_197:
        if ((unint64_t)v35 >= v15 || *v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v60);
          if (!result) {
            return result;
          }
          unsigned int v57 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v60 = *v35;
          unsigned int v57 = (unsigned __int8 *)(v35 + 1);
          *((void *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 23) |= 0x40000u;
        if (v57 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_65;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_73;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_81;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_89;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_97;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_105;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_113;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_121;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_129;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v28 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_137;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_145;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v30 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_153;
      case 0xFu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_161;
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_170;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_179;
      case 0x12u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v34 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_188;
      case 0x13u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v35 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_197;
      default:
        int v14 = TagFallback & 7;
LABEL_48:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessPedometer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[23];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[15], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[16], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[17], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[18], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[20], (uint64_t)a2, a4);
    if ((v5[23] & 0x40000) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[19], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x20000) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v6 & 0x40000) == 0) {
    return this;
  }
LABEL_39:
  uint64_t v7 = v5[21];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionFitnessPedometer::ByteSize(awd::metrics::MotionFitnessPedometer *this)
{
  int v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_42;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v9 = 1;
  }
  uint64_t v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v17 = 1;
    }
    uint64_t v3 = (v3 + v17 + 1);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_92;
  }
  if ((v2 & 0x100) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v19 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v21 = 1;
  }
  uint64_t v3 = (v3 + v21 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0) {
      goto LABEL_47;
    }
    goto LABEL_66;
  }
LABEL_60:
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v22 & 0x80000000) != 0)
  {
    int v23 = 10;
  }
  else if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v23 = 1;
  }
  uint64_t v3 = (v3 + v23 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_47:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_72;
  }
LABEL_66:
  uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v25 = 1;
  }
  uint64_t v3 = (v3 + v25 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_48:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_78;
  }
LABEL_72:
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x2000) == 0)
  {
LABEL_49:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_84;
  }
LABEL_78:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v28 & 0x80000000) != 0)
  {
    int v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x4000) == 0)
  {
LABEL_50:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_88;
  }
LABEL_84:
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v31 = 2;
  }
  uint64_t v3 = (v31 + v3);
  if ((v2 & 0x8000) != 0)
  {
LABEL_88:
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v32 >= 0x80)
    {
      int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 2;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v33 = 3;
    }
    uint64_t v3 = (v33 + v3);
  }
LABEL_92:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_109;
  }
  if ((v2 & 0x10000) != 0)
  {
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    if (v34 >= 0x80)
    {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 2;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v35 = 3;
    }
    uint64_t v3 = (v35 + v3);
    if ((v2 & 0x20000) == 0)
    {
LABEL_95:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_109;
      }
      goto LABEL_105;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_95;
  }
  unsigned int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v36 >= 0x80)
  {
    int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36) + 2;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v37 = 3;
  }
  uint64_t v3 = (v37 + v3);
  if ((v2 & 0x40000) != 0)
  {
LABEL_105:
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    if (v38 >= 0x80) {
      int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38) + 2;
    }
    else {
      int v39 = 3;
    }
    uint64_t v3 = (v39 + v3);
  }
LABEL_109:
  *((_DWORD *)this + 22) = v3;
  return v3;
}

void awd::metrics::MotionFitnessPedometer::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessPedometer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionFitnessPedometer::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessPedometer::CopyFrom(awd::metrics::MotionFitnessPedometer *this, const awd::metrics::MotionFitnessPedometer *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessPedometer *))(*(void *)this + 32))(this);
    awd::metrics::MotionFitnessPedometer::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessPedometer::IsInitialized(awd::metrics::MotionFitnessPedometer *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessPedometer::Swap(uint64_t this, awd::metrics::MotionFitnessPedometer *a2)
{
  if (a2 != (awd::metrics::MotionFitnessPedometer *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return this;
}

void *awd::metrics::MotionFitnessPedometer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessPedometer");
}

double awd::metrics::MotionFitnessStrideCalibration::SharedCtor(awd::metrics::MotionFitnessStrideCalibration *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionFitnessStrideCalibration *awd::metrics::MotionFitnessStrideCalibration::MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  *(void *)this = &unk_26D7BB170;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, a2);
  return this;
}

void sub_224943C18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessStrideCalibration::MergeFrom(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 13) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 13) |= 4u;
    *((_DWORD *)this + 5) = v8;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = *((void *)a2 + 3);
    *((_DWORD *)this + 13) |= 8u;
    *((void *)this + 3) = v9;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v10 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x10u;
    *((_DWORD *)this + 8) = v10;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 9) = v11;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_20:
    int v12 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 10) = v12;
    if ((*((_DWORD *)a2 + 13) & 0x80) == 0) {
      return;
    }
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
  }
}

void sub_224943DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessStrideCalibration::~MotionFitnessStrideCalibration(awd::metrics::MotionFitnessStrideCalibration *this)
{
  *(void *)this = &unk_26D7BB170;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB170;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB170;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::default_instance(awd::metrics::MotionFitnessStrideCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessStrideCalibration::default_instance_;
  if (!awd::metrics::MotionFitnessStrideCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessStrideCalibration::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessStrideCalibration::New(awd::metrics::MotionFitnessStrideCalibration *this)
{
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 52))
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::MergePartialFromCodedStream(awd::metrics::MotionFitnessStrideCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 16);
  uint64_t v6 = (unsigned int *)((char *)this + 20);
  int v7 = (unsigned int *)((char *)this + 32);
  int v8 = (unsigned int *)((char *)this + 36);
  uint64_t v9 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *int v4 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
LABEL_32:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v16;
          int v23 = v16 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v23 >= v13 || *v23 != 24) {
          continue;
        }
        int v17 = v23 + 1;
        *((void *)a2 + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v17;
          uint64_t v24 = v17 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v24 >= v13 || *v24 != 32) {
          continue;
        }
        int v18 = v24 + 1;
        *((void *)a2 + 1) = v18;
LABEL_51:
        unint64_t v34 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v34);
          if (!result) {
            return result;
          }
          unint64_t v25 = v34;
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v25 = *v18;
          uint64_t v26 = v18 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((void *)this + 3) = v25;
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v26 >= v13 || *v26 != 40) {
          continue;
        }
        int v19 = v26 + 1;
        *((void *)a2 + 1) = v19;
LABEL_59:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v19;
          int v27 = v19 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v27 >= v13 || *v27 != 48) {
          continue;
        }
        int v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v20;
          int v28 = v20 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v28 >= v13 || *v28 != 56) {
          continue;
        }
        int v21 = v28 + 1;
        *((void *)a2 + 1) = v21;
LABEL_75:
        unsigned int v33 = 0;
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v29 = v33;
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v29 = *v21;
          int v30 = v21 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 10) = v29;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v30 >= v13 || *v30 != 64) {
          continue;
        }
        int v22 = v30 + 1;
        *((void *)a2 + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v31 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v22;
          int v31 = (unsigned __int8 *)(v22 + 1);
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if (v31 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_51;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_59;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_67;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_75;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_83;
      default:
        int v12 = TagFallback & 7;
LABEL_26:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = *(unsigned int *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::ByteSize(awd::metrics::MotionFitnessStrideCalibration *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_41;
  }
  if (*((unsigned char *)this + 52))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v3 = (v9 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_37;
  }
LABEL_31:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_37:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v3 = (v15 + v3);
  }
LABEL_41:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::MotionFitnessStrideCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessStrideCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionFitnessStrideCalibration::CopyFrom(awd::metrics::MotionFitnessStrideCalibration *this, const awd::metrics::MotionFitnessStrideCalibration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessStrideCalibration *))(*(void *)this + 32))(this);
    awd::metrics::MotionFitnessStrideCalibration::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::IsInitialized(awd::metrics::MotionFitnessStrideCalibration *this)
{
  return 1;
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::Swap(uint64_t this, awd::metrics::MotionFitnessStrideCalibration *a2)
{
  if (a2 != (awd::metrics::MotionFitnessStrideCalibration *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
  }
  return this;
}

void *awd::metrics::MotionFitnessStrideCalibration::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessStrideCalibration");
}

void *awd::metrics::MotionFitnessAccelSampleRate::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::MotionFitnessAccelSampleRate *awd::metrics::MotionFitnessAccelSampleRate::MotionFitnessAccelSampleRate(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  *(void *)this = &unk_26D7BB1E8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, a2);
  return this;
}

void sub_224944884(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 7);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *((float *)a2 + 4);
    *((_DWORD *)this + 7) |= 2u;
    *((float *)this + 4) = result;
    if ((*((_DWORD *)a2 + 7) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *((float *)a2 + 5);
    *((_DWORD *)this + 7) |= 4u;
    *((float *)this + 5) = result;
  }
  return result;
}

void sub_22494496C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionFitnessAccelSampleRate::~MotionFitnessAccelSampleRate(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  *(void *)this = &unk_26D7BB1E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB1E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB1E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::default_instance(awd::metrics::MotionFitnessAccelSampleRate *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionFitnessAccelSampleRate::default_instance_;
  if (!awd::metrics::MotionFitnessAccelSampleRate::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionFitnessAccelSampleRate::default_instance_;
  }
  return result;
}

void awd::metrics::MotionFitnessAccelSampleRate::New(awd::metrics::MotionFitnessAccelSampleRate *this)
{
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::MergePartialFromCodedStream(awd::metrics::MotionFitnessAccelSampleRate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v10 = (char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!result) {
              return result;
            }
            int v11 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v9 = *((void *)a2 + 2);
          }
          else
          {
            *int v4 = *v10;
            int v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 21)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_19;
        }
LABEL_27:
        unsigned int v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v15;
        *((_DWORD *)this + 7) |= 2u;
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 < *((void *)a2 + 2) && *v13 == 29)
        {
          *((void *)a2 + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_19;
      }
LABEL_31:
      unsigned int v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v14) & 1) == 0) {
        return 0;
      }
      *((_DWORD *)this + 5) = v14;
      *((_DWORD *)this + 7) |= 4u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  float v7 = *(float *)(v5 + 20);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v7, a3);
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::ByteSize(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

float awd::metrics::MotionFitnessAccelSampleRate::CheckTypeAndMergeFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionFitnessAccelSampleRate::CopyFrom(awd::metrics::MotionFitnessAccelSampleRate *this, const awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionFitnessAccelSampleRate *))(*(void *)this + 32))(this);
    return awd::metrics::MotionFitnessAccelSampleRate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::IsInitialized(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  return 1;
}

float awd::metrics::MotionFitnessAccelSampleRate::Swap(awd::metrics::MotionFitnessAccelSampleRate *this, awd::metrics::MotionFitnessAccelSampleRate *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    float result = *((float *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((float *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *awd::metrics::MotionFitnessAccelSampleRate::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionFitnessAccelSampleRate");
}

double awd::metrics::MotionBarometerCalibration::SharedCtor(awd::metrics::MotionBarometerCalibration *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionBarometerCalibration *awd::metrics::MotionBarometerCalibration::MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  *(void *)this = &unk_26D7BB260;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::MotionBarometerCalibration::MergeFrom(this, a2);
  return this;
}

void sub_224944F8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::MotionBarometerCalibration::MergeFrom(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 9) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    float result = *((float *)a2 + 5);
    *((_DWORD *)this + 9) |= 4u;
    *((float *)this + 5) = result;
    int v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    float result = *((float *)a2 + 6);
    *((_DWORD *)this + 9) |= 8u;
    *((float *)this + 6) = result;
    if ((*((_DWORD *)a2 + 9) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    float result = *((float *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x10u;
    *((float *)this + 7) = result;
  }
  return result;
}

void sub_2249450B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionBarometerCalibration::~MotionBarometerCalibration(awd::metrics::MotionBarometerCalibration *this)
{
  *(void *)this = &unk_26D7BB260;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB260;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB260;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionBarometerCalibration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::MotionBarometerCalibration::default_instance(awd::metrics::MotionBarometerCalibration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionBarometerCalibration::default_instance_;
  if (!awd::metrics::MotionBarometerCalibration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionBarometerCalibration::default_instance_;
  }
  return result;
}

void awd::metrics::MotionBarometerCalibration::New(awd::metrics::MotionBarometerCalibration *this)
{
}

uint64_t awd::metrics::MotionBarometerCalibration::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::MotionBarometerCalibration::MergePartialFromCodedStream(awd::metrics::MotionBarometerCalibration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 16);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 9) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v12;
          unsigned int v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v14 >= v9 || *v14 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_36:
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v19;
        *((_DWORD *)this + 9) |= 4u;
        unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_40:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 9) |= 8u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_44:
        unsigned int v17 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
        {
          *((_DWORD *)this + 7) = v17;
          *((_DWORD *)this + 9) |= 0x10u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_36;
        }
        goto LABEL_20;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_20;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_20;
        }
        goto LABEL_44;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::MotionBarometerCalibration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 36) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  float v7 = *(float *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, v7, a3);
}

uint64_t awd::metrics::MotionBarometerCalibration::ByteSize(awd::metrics::MotionBarometerCalibration *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v6 = 2;
    }
    v3 += v6;
    goto LABEL_11;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  int v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_11:
  unsigned int v7 = v3 + 5;
  if ((v2 & 4) == 0) {
    unsigned int v7 = v3;
  }
  if ((v2 & 8) != 0) {
    v7 += 5;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v7 + 5;
  }
  else {
    uint64_t result = v7;
  }
LABEL_18:
  *((_DWORD *)this + 8) = result;
  return result;
}

float awd::metrics::MotionBarometerCalibration::CheckTypeAndMergeFrom(awd::metrics::MotionBarometerCalibration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::MotionBarometerCalibration::MergeFrom(this, lpsrc);
}

float awd::metrics::MotionBarometerCalibration::CopyFrom(awd::metrics::MotionBarometerCalibration *this, const awd::metrics::MotionBarometerCalibration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionBarometerCalibration *))(*(void *)this + 32))(this);
    return awd::metrics::MotionBarometerCalibration::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::MotionBarometerCalibration::IsInitialized(awd::metrics::MotionBarometerCalibration *this)
{
  return 1;
}

float awd::metrics::MotionBarometerCalibration::Swap(awd::metrics::MotionBarometerCalibration *this, awd::metrics::MotionBarometerCalibration *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    int v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    float result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return result;
}

void *awd::metrics::MotionBarometerCalibration::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionBarometerCalibration");
}

uint64_t awd::metrics::MotionGyroDaily::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

awd::metrics::MotionGyroDaily *awd::metrics::MotionGyroDaily::MotionGyroDaily(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  *(void *)this = &unk_26D7BB2D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::MotionGyroDaily::MergeFrom(this, a2);
  return this;
}

void sub_22494585C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroDaily::MergeFrom(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 5) = v8;
    if ((*((_DWORD *)a2 + 8) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = v5;
  }
}

void sub_224945964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionGyroDaily::~MotionGyroDaily(awd::metrics::MotionGyroDaily *this)
{
  *(void *)this = &unk_26D7BB2D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB2D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB2D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionGyroDaily::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::MotionGyroDaily::default_instance(awd::metrics::MotionGyroDaily *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionGyroDaily::default_instance_;
  if (!awd::metrics::MotionGyroDaily::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionGyroDaily::default_instance_;
  }
  return result;
}

void awd::metrics::MotionGyroDaily::New(awd::metrics::MotionGyroDaily *this)
{
}

uint64_t awd::metrics::MotionGyroDaily::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::MotionGyroDaily::MergePartialFromCodedStream(awd::metrics::MotionGyroDaily *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          *int v4 = *v9;
          int v10 = v9 + 1;
          *((void *)a2 + 1) = v10;
LABEL_24:
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v10 < v8 && *v10 == 16)
          {
            int v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
LABEL_27:
        unsigned int v23 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v14 = v23;
          unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v14 = *v11;
          unsigned int v15 = v11 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 4) = v14;
        *((_DWORD *)this + 8) |= 2u;
        if ((unint64_t)v15 >= v8 || *v15 != 24) {
          continue;
        }
        int v12 = v15 + 1;
        *((void *)a2 + 1) = v12;
LABEL_35:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v16 = v22;
          unsigned int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 5) = v16;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v17 >= v8 || *v17 != 32) {
          continue;
        }
        int v13 = v17 + 1;
        *((void *)a2 + 1) = v13;
LABEL_43:
        unsigned int v21 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v18 = v21;
          unsigned int v19 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 6) = v18;
        *((_DWORD *)this + 8) |= 8u;
        if (v19 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_43;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionGyroDaily::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
      if ((v5[8] & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[8];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionGyroDaily::ByteSize(awd::metrics::MotionGyroDaily *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v3 = (v7 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_22:
    unint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::MotionGyroDaily::CheckTypeAndMergeFrom(awd::metrics::MotionGyroDaily *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionGyroDaily::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionGyroDaily::CopyFrom(awd::metrics::MotionGyroDaily *this, const awd::metrics::MotionGyroDaily *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionGyroDaily *))(*(void *)this + 32))(this);
    awd::metrics::MotionGyroDaily::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionGyroDaily::IsInitialized(awd::metrics::MotionGyroDaily *this)
{
  return 1;
}

uint64_t awd::metrics::MotionGyroDaily::Swap(uint64_t this, awd::metrics::MotionGyroDaily *a2)
{
  if (a2 != (awd::metrics::MotionGyroDaily *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return this;
}

void *awd::metrics::MotionGyroDaily::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionGyroDaily");
}

BOOL awd::metrics::MotionSOSEvent_WorkoutType_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

double awd::metrics::MotionSOSEvent::SharedCtor(awd::metrics::MotionSOSEvent *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::MotionSOSEvent *awd::metrics::MotionSOSEvent::MotionSOSEvent(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  *(void *)this = &unk_26D7BB350;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::MotionSOSEvent::MergeFrom(this, a2);
  return this;
}

void sub_224946140(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionSOSEvent::MergeFrom(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 13);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 13) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *((unsigned char *)a2 + 20);
  *((_DWORD *)this + 13) |= 2u;
  *((unsigned char *)this + 20) = v8;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v9 = *((unsigned char *)a2 + 21);
  *((_DWORD *)this + 13) |= 4u;
  *((unsigned char *)this + 21) = v9;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 4) = v10;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v12 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 6) = v12;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  char v11 = *((unsigned char *)a2 + 22);
  *((_DWORD *)this + 13) |= 0x10u;
  *((unsigned char *)this + 22) = v11;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v13 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 13) |= 0x40u;
  *((_DWORD *)this + 7) = v13;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 0x80u;
    *((_DWORD *)this + 8) = v5;
    int v4 = *((_DWORD *)a2 + 13);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x100u;
    *((_DWORD *)this + 9) = v14;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v15 = *((unsigned char *)a2 + 23);
  *((_DWORD *)this + 13) |= 0x200u;
  *((unsigned char *)this + 23) = v15;
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      return;
    }
    goto LABEL_18;
  }
LABEL_30:
  unsigned int v16 = *((_DWORD *)a2 + 10);
  if (v16 >= 0xD) {
    awd::metrics::MotionSOSEvent::MergeFrom();
  }
  *((_DWORD *)this + 13) |= 0x400u;
  *((_DWORD *)this + 10) = v16;
  if ((*((_DWORD *)a2 + 13) & 0x800) != 0)
  {
LABEL_18:
    int v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x800u;
    *((_DWORD *)this + 11) = v6;
  }
}

void sub_224946360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::MotionSOSEvent::~MotionSOSEvent(awd::metrics::MotionSOSEvent *this)
{
  *(void *)this = &unk_26D7BB350;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB350;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB350;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::MotionSOSEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::MotionSOSEvent::default_instance(awd::metrics::MotionSOSEvent *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::MotionSOSEvent::default_instance_;
  if (!awd::metrics::MotionSOSEvent::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::MotionSOSEvent::default_instance_;
  }
  return result;
}

void awd::metrics::MotionSOSEvent::New(awd::metrics::MotionSOSEvent *this)
{
}

uint64_t awd::metrics::MotionSOSEvent::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 52);
  if ((_BYTE)v1)
  {
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 8) = 0;
    *(void *)(this + 15) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 23) = 0;
    *(void *)(this + 40) = 0;
    *(_DWORD *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::MotionSOSEvent::MergePartialFromCodedStream(awd::metrics::MotionSOSEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 16);
  int v6 = (unsigned int *)((char *)this + 32);
  uint64_t v7 = (unsigned int *)((char *)this + 44);
  while (2)
  {
    char v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *int v4 = *v12;
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
LABEL_40:
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_43;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_43:
        unsigned int v46 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v26 = v46;
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v14;
          int v27 = v14 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((unsigned char *)this + 20) = v26 != 0;
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v27 >= v11 || *v27 != 24) {
          continue;
        }
        char v15 = v27 + 1;
        *((void *)a2 + 1) = v15;
LABEL_51:
        unsigned int v46 = 0;
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v28 = v46;
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v15;
          unsigned int v29 = v15 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 21) = v28 != 0;
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v29 >= v11 || *v29 != 32) {
          continue;
        }
        unsigned int v16 = v29 + 1;
        *((void *)a2 + 1) = v16;
LABEL_59:
        if ((unint64_t)v16 >= v11 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v16;
          int v30 = v16 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v30 >= v11 || *v30 != 40) {
          continue;
        }
        unsigned int v17 = v30 + 1;
        *((void *)a2 + 1) = v17;
LABEL_67:
        unsigned int v46 = 0;
        if ((unint64_t)v17 >= v11 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v31 = v46;
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v17;
          int v32 = v17 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((unsigned char *)this + 22) = v31 != 0;
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v32 >= v11 || *v32 != 48) {
          continue;
        }
        unsigned int v18 = v32 + 1;
        *((void *)a2 + 1) = v18;
LABEL_75:
        unsigned int v46 = 0;
        if ((unint64_t)v18 >= v11 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v33 = v46;
          unint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v18;
          unint64_t v34 = v18 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 6) = v33;
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v34 >= v11 || *v34 != 56) {
          continue;
        }
        unsigned int v19 = v34 + 1;
        *((void *)a2 + 1) = v19;
LABEL_83:
        unsigned int v46 = 0;
        if ((unint64_t)v19 >= v11 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v35 = v46;
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v19;
          unsigned int v36 = v19 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 7) = v35;
        *((_DWORD *)this + 13) |= 0x40u;
        if ((unint64_t)v36 >= v11 || *v36 != 64) {
          continue;
        }
        int v20 = v36 + 1;
        *((void *)a2 + 1) = v20;
LABEL_91:
        if ((unint64_t)v20 >= v11 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v20;
          int v37 = v20 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 13) |= 0x80u;
        if ((unint64_t)v37 >= v11 || *v37 != 72) {
          continue;
        }
        unsigned int v21 = v37 + 1;
        *((void *)a2 + 1) = v21;
LABEL_99:
        unsigned int v46 = 0;
        if ((unint64_t)v21 >= v11 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v38 = v46;
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v38 = *v21;
          int v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 9) = v38;
        *((_DWORD *)this + 13) |= 0x100u;
        if ((unint64_t)v39 >= v11 || *v39 != 80) {
          continue;
        }
        unsigned int v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_107:
        unsigned int v46 = 0;
        if ((unint64_t)v22 >= v11 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v40 = v46;
          unsigned int v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v40 = *v22;
          unsigned int v41 = v22 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((unsigned char *)this + 23) = v40 != 0;
        *((_DWORD *)this + 13) |= 0x200u;
        if ((unint64_t)v41 >= v11 || *v41 != 88) {
          continue;
        }
        unsigned int v23 = v41 + 1;
        *((void *)a2 + 1) = v23;
LABEL_115:
        unsigned int v46 = 0;
        if ((unint64_t)v23 >= v11 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v42 = v46;
        }
        else
        {
          unsigned int v42 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        if (v42 <= 0xC)
        {
          *((_DWORD *)this + 13) |= 0x400u;
          *((_DWORD *)this + 10) = v42;
        }
        int v43 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        if ((unint64_t)v43 >= v24 || *v43 != 96) {
          continue;
        }
        unint64_t v25 = v43 + 1;
        *((void *)a2 + 1) = v25;
LABEL_125:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v44 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v24 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v25;
          int v44 = (unsigned __int8 *)(v25 + 1);
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 13) |= 0x800u;
        if (v44 != (unsigned __int8 *)v24 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        char v15 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_51;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v16 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_59;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v17 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_67;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v18 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_75;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_83;
      case 8u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_91;
      case 9u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        goto LABEL_125;
      default:
        int v10 = TagFallback & 7;
LABEL_34:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::MotionSOSEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 21), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 22), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x800) == 0) {
      return this;
    }
    goto LABEL_25;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 23), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x400) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return this;
  }
LABEL_25:
  uint64_t v7 = *(unsigned int *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::MotionSOSEvent::ByteSize(awd::metrics::MotionSOSEvent *this)
{
  int v2 = *((_DWORD *)this + 13);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v3 = 0;
  }
  if ((v2 & 2) != 0) {
    v3 += 2;
  }
  if ((v2 & 4) != 0) {
    LODWORD(v4) = v3 + 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v6 = 2;
    }
    LODWORD(v4) = v6 + v4;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t v4 = (v4 + 2);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
    if ((v2 & 0x40) == 0)
    {
LABEL_21:
      if ((v2 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_21;
  }
  char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v9 & 0x80000000) != 0)
  {
    int v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v2 & 0x80) != 0)
  {
LABEL_35:
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_39:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        int v2 = *((_DWORD *)this + 13);
      }
      else
      {
        int v14 = 2;
      }
      LODWORD(v4) = v14 + v4;
    }
    if ((v2 & 0x200) != 0) {
      uint64_t v4 = (v4 + 2);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v2 & 0x400) != 0)
    {
      char v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
        int v2 = *((_DWORD *)this + 13);
      }
      else
      {
        int v16 = 2;
      }
      uint64_t v4 = (v16 + v4);
    }
    if ((v2 & 0x800) != 0)
    {
      unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if (v17 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      }
      else {
        int v18 = 2;
      }
      uint64_t v4 = (v18 + v4);
    }
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void awd::metrics::MotionSOSEvent::CheckTypeAndMergeFrom(awd::metrics::MotionSOSEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::MotionSOSEvent::MergeFrom(this, lpsrc);
}

void awd::metrics::MotionSOSEvent::CopyFrom(awd::metrics::MotionSOSEvent *this, const awd::metrics::MotionSOSEvent *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::MotionSOSEvent *))(*(void *)this + 32))(this);
    awd::metrics::MotionSOSEvent::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::MotionSOSEvent::IsInitialized(awd::metrics::MotionSOSEvent *this)
{
  return 1;
}

uint64_t awd::metrics::MotionSOSEvent::Swap(uint64_t this, awd::metrics::MotionSOSEvent *a2)
{
  if (a2 != (awd::metrics::MotionSOSEvent *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 20);
    *(unsigned char *)(this + 20) = *((unsigned char *)a2 + 20);
    *((unsigned char *)a2 + 20) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 21);
    *(unsigned char *)(this + 21) = *((unsigned char *)a2 + 21);
    *((unsigned char *)a2 + 21) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 22);
    *(unsigned char *)(this + 22) = *((unsigned char *)a2 + 22);
    *((unsigned char *)a2 + 22) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 23);
    *(unsigned char *)(this + 23) = *((unsigned char *)a2 + 23);
    *((unsigned char *)a2 + 23) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return this;
}

void *awd::metrics::MotionSOSEvent::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.MotionSOSEvent");
}

uint64_t awd::metrics::LocationBatteryState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationBatteryState *awd::metrics::LocationBatteryState::LocationBatteryState(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB3C8;
  *((unsigned char *)this + 24) = 0;
  awd::metrics::LocationBatteryState::MergeFrom(this, a2);
  return this;
}

void sub_224947198(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBatteryState::MergeFrom(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 2) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_7:
    char v5 = *((unsigned char *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((unsigned char *)this + 24) = v5;
  }
}

void sub_224947280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBatteryState::~LocationBatteryState(awd::metrics::LocationBatteryState *this)
{
  *(void *)this = &unk_26D7BB3C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB3C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB3C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationBatteryState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationBatteryState::default_instance(awd::metrics::LocationBatteryState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationBatteryState::default_instance_;
  if (!awd::metrics::LocationBatteryState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBatteryState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationBatteryState::New(awd::metrics::LocationBatteryState *this)
{
}

uint64_t awd::metrics::LocationBatteryState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(unsigned char *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationBatteryState::MergePartialFromCodedStream(awd::metrics::LocationBatteryState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v9 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_27;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v13 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
LABEL_27:
      unint64_t v20 = 0;
      if ((unint64_t)v13 >= v9 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20);
        if (!result) {
          return result;
        }
        unint64_t v14 = v20;
        char v15 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t v14 = *v13;
        char v15 = v13 + 1;
        *((void *)a2 + 1) = v15;
      }
      *((void *)this + 2) = v14;
      *((_DWORD *)this + 8) |= 2u;
      if ((unint64_t)v15 < v9 && *v15 == 24)
      {
        int v10 = v15 + 1;
        *((void *)a2 + 1) = v10;
LABEL_35:
        unsigned int v19 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!result) {
            return result;
          }
          unsigned int v16 = v19;
          unsigned int v17 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v10;
          unsigned int v17 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v17;
        }
        *((unsigned char *)this + 24) = v16 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if (v17 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationBatteryState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationBatteryState::ByteSize(awd::metrics::LocationBatteryState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (*((unsigned char *)this + 32))
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_11:
  *((_DWORD *)this + 7) = result;
  return result;
}

void awd::metrics::LocationBatteryState::CheckTypeAndMergeFrom(awd::metrics::LocationBatteryState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationBatteryState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBatteryState::CopyFrom(awd::metrics::LocationBatteryState *this, const awd::metrics::LocationBatteryState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBatteryState *))(*(void *)this + 32))(this);
    awd::metrics::LocationBatteryState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBatteryState::IsInitialized(awd::metrics::LocationBatteryState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBatteryState::Swap(uint64_t this, awd::metrics::LocationBatteryState *a2)
{
  if (a2 != (awd::metrics::LocationBatteryState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LOBYTE(v3) = *(unsigned char *)(this + 24);
    *(unsigned char *)(this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *awd::metrics::LocationBatteryState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBatteryState");
}

double awd::metrics::LocationNavigationSession::SharedCtor(awd::metrics::LocationNavigationSession *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((unsigned char *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

awd::metrics::LocationNavigationSession *awd::metrics::LocationNavigationSession::LocationNavigationSession(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB440;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 88) = 0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationNavigationSession::MergeFrom(this, a2);
  return this;
}

void sub_22494796C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNavigationSession::MergeFrom(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationNavigationSession *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationBatteryState **)(*((void *)a2 + 8) + 8 * v4);
      int v6 = *((_DWORD *)this + 19);
      uint64_t v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationNavigationSession *)((char *)this + 64));
          int v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v7 + 1;
      awd::metrics::LocationBatteryState::MergeFrom(*(awd::metrics::LocationBatteryState **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 96);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 96))
    {
      uint64_t v11 = *((void *)a2 + 1);
      *((_DWORD *)this + 24) |= 1u;
      *((void *)this + 1) = v11;
      int v9 = *((_DWORD *)a2 + 24);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_26;
      }
    }
    else if ((*((unsigned char *)a2 + 96) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 24) |= 2u;
    int v13 = (std::string *)*((void *)this + 2);
    if (v13 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v13, v12);
    int v9 = *((_DWORD *)a2 + 24);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        goto LABEL_16;
      }
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v14 = *((void *)a2 + 3);
    *((_DWORD *)this + 24) |= 4u;
    *((void *)this + 3) = v14;
    int v9 = *((_DWORD *)a2 + 24);
    if ((v9 & 8) == 0)
    {
LABEL_16:
      if ((v9 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t v15 = *((void *)a2 + 4);
    *((_DWORD *)this + 24) |= 8u;
    *((void *)this + 4) = v15;
    int v9 = *((_DWORD *)a2 + 24);
    if ((v9 & 0x10) == 0)
    {
LABEL_17:
      if ((v9 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_29;
    }
LABEL_28:
    uint64_t v16 = *((void *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x10u;
    *((void *)this + 5) = v16;
    int v9 = *((_DWORD *)a2 + 24);
    if ((v9 & 0x20) == 0)
    {
LABEL_18:
      if ((v9 & 0x40) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
LABEL_29:
    uint64_t v17 = *((void *)a2 + 6);
    *((_DWORD *)this + 24) |= 0x20u;
    *((void *)this + 6) = v17;
    int v9 = *((_DWORD *)a2 + 24);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        return;
      }
      goto LABEL_20;
    }
LABEL_30:
    uint64_t v18 = *((void *)a2 + 7);
    *((_DWORD *)this + 24) |= 0x40u;
    *((void *)this + 7) = v18;
    if ((*((_DWORD *)a2 + 24) & 0x80) == 0) {
      return;
    }
LABEL_20:
    char v10 = *((unsigned char *)a2 + 88);
    *((_DWORD *)this + 24) |= 0x80u;
    *((unsigned char *)this + 88) = v10;
  }
}

void sub_224947C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationNavigationSession::~LocationNavigationSession(awd::metrics::LocationNavigationSession *this)
{
  *(void *)this = &unk_26D7BB440;
  uint64_t v2 = (uint64_t *)((char *)this + 64);
  awd::metrics::LocationNavigationSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationNavigationSession::~LocationNavigationSession(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationNavigationSession::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::default_instance(awd::metrics::LocationNavigationSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationNavigationSession::default_instance_;
  if (!awd::metrics::LocationNavigationSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationNavigationSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationNavigationSession::New(awd::metrics::LocationNavigationSession *this)
{
}

uint64_t awd::metrics::LocationNavigationSession::Clear(awd::metrics::LocationNavigationSession *this)
{
  char v2 = *((unsigned char *)this + 96);
  if (v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((unsigned char *)this + 88) = 0;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 40) = 0u;
    *((void *)this + 7) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>((uint64_t)this + 64);
  *((_DWORD *)this + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationNavigationSession::MergePartialFromCodedStream(awd::metrics::LocationNavigationSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v44 = (unint64_t *)((char *)this + 8);
  uint64_t v4 = (unint64_t *)((char *)this + 24);
  uint64_t v5 = (unint64_t *)((char *)this + 32);
  int v6 = (unint64_t *)((char *)this + 40);
  uint64_t v7 = (unint64_t *)((char *)this + 48);
  uint64_t v8 = (unint64_t *)((char *)this + 56);
  int v9 = (awd::metrics::LocationNavigationSession *)((char *)this + 64);
  while (1)
  {
    char v10 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || (char)*v10 < 0) {
      break;
    }
    unint64_t TagFallback = *v10;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v10 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v44);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v44 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        int v16 = *((_DWORD *)this + 24) | 1;
        *((_DWORD *)this + 24) = v16;
        if ((unint64_t)v15 < v13 && *v15 == 18)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_28;
        }
        int v16 = *((_DWORD *)this + 24);
LABEL_36:
        *((_DWORD *)this + 24) = v16 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unint64_t v25 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v25 >= v17 || *v25 != 24) {
          continue;
        }
        uint64_t v18 = v25 + 1;
        *((void *)a2 + 1) = v18;
LABEL_42:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v18;
          unsigned int v26 = v18 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 24) |= 4u;
        if ((unint64_t)v26 >= v17 || *v26 != 32) {
          continue;
        }
        unsigned int v19 = v26 + 1;
        *((void *)a2 + 1) = v19;
LABEL_50:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v19;
          int v27 = v19 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 24) |= 8u;
        if ((unint64_t)v27 >= v17 || *v27 != 40) {
          continue;
        }
        unint64_t v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_58:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v6 = *v20;
          unsigned int v28 = v20 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        if ((unint64_t)v28 >= v17 || *v28 != 48) {
          continue;
        }
        unsigned int v21 = v28 + 1;
        *((void *)a2 + 1) = v21;
LABEL_66:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v21;
          unsigned int v29 = v21 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        if ((unint64_t)v29 >= v17 || *v29 != 56) {
          continue;
        }
        unsigned int v22 = v29 + 1;
        *((void *)a2 + 1) = v22;
LABEL_74:
        if ((unint64_t)v22 >= v17 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v22;
          int v30 = v22 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        if ((unint64_t)v30 >= v17 || *v30 != 64) {
          continue;
        }
        unsigned int v23 = v30 + 1;
        *((void *)a2 + 1) = v23;
LABEL_82:
        unsigned int v45 = 0;
        if ((unint64_t)v23 >= v17 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45);
          if (!result) {
            return result;
          }
          unsigned int v31 = v45;
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v23;
          int v32 = v23 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((unsigned char *)this + 88) = v31 != 0;
        *((_DWORD *)this + 24) |= 0x80u;
        if ((unint64_t)v32 >= v17 || *v32 != 74) {
          continue;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_42;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_50;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_58;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_66;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_74;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_82;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_28;
        }
        goto LABEL_90;
      default:
        int v12 = TagFallback & 7;
LABEL_28:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)a2 + 1) = v32 + 1;
LABEL_90:
      int v33 = *((_DWORD *)this + 19);
      uint64_t v34 = *((int *)this + 18);
      if ((int)v34 >= v33)
      {
        if (v33 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
          int v33 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v33 + 1;
        operator new();
      }
      uint64_t v35 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v34 + 1;
      unsigned int v36 = *(awd::metrics::LocationBatteryState **)(v35 + 8 * v34);
      unsigned int v46 = 0;
      int v37 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
          return 0;
        }
      }
      else
      {
        unsigned int v46 = *v37;
        *((void *)a2 + 1) = v37 + 1;
      }
      int v38 = *((_DWORD *)a2 + 14);
      int v39 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v38 + 1;
      if (v38 >= v39) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationBatteryState::MergePartialFromCodedStream(v36, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v40 = *((_DWORD *)a2 + 14);
      BOOL v41 = __OFSUB__(v40, 1);
      int v42 = v40 - 1;
      if (v42 < 0 == v41) {
        *((_DWORD *)a2 + 14) = v42;
      }
      int v32 = (unsigned char *)*((void *)a2 + 1);
      int v43 = (unsigned char *)*((void *)a2 + 2);
    }
    while (v32 < v43 && *v32 == 74);
    if (v32 == v43 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationNavigationSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 56), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
LABEL_10:
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  return this;
}

uint64_t awd::metrics::LocationNavigationSession::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2 = *((unsigned __int8 *)this + 96);
  if (*((unsigned char *)this + 96))
  {
    if (v2)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
      int v2 = *((_DWORD *)this + 24);
      if ((v2 & 2) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      int v3 = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v4 = this[2];
    int v5 = *((unsigned __int8 *)v4 + 23);
    char v6 = v5;
    uint64_t v7 = *((void *)v4 + 1);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *((unsigned __int8 *)v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *((unsigned __int8 *)v4 + 23);
      uint64_t v7 = *((void *)v4 + 1);
      int v2 = *((_DWORD *)this + 24);
      char v6 = *((unsigned char *)v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    v3 += v9 + v5 + 1;
LABEL_15:
    if ((v2 & 4) != 0)
    {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[3]) + 1;
      int v2 = *((_DWORD *)this + 24);
      if ((v2 & 8) == 0)
      {
LABEL_17:
        if ((v2 & 0x10) == 0) {
          goto LABEL_18;
        }
        goto LABEL_33;
      }
    }
    else if ((v2 & 8) == 0)
    {
      goto LABEL_17;
    }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[4]) + 1;
    int v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x10) == 0)
    {
LABEL_18:
      if ((v2 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
LABEL_33:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[5]) + 1;
    int v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x20) == 0)
    {
LABEL_19:
      if ((v2 & 0x40) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_34:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[6]) + 1;
    int v2 = *((_DWORD *)this + 24);
    if ((v2 & 0x40) == 0)
    {
LABEL_21:
      if ((v2 & 0x80) != 0) {
        int v2 = v3 + 2;
      }
      else {
        int v2 = v3;
      }
      goto LABEL_24;
    }
LABEL_20:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[7]) + 1;
    int v2 = *((_DWORD *)this + 24);
    goto LABEL_21;
  }
LABEL_24:
  int v10 = *((_DWORD *)this + 18);
  uint64_t v11 = (v10 + v2);
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationBatteryState::ByteSize(*((awd::metrics::LocationBatteryState **)this[8] + v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      uint64_t v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *((int *)this + 18));
  }
  *((_DWORD *)this + 23) = v11;
  return v11;
}

void awd::metrics::LocationNavigationSession::CheckTypeAndMergeFrom(awd::metrics::LocationNavigationSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationNavigationSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationNavigationSession::CopyFrom(awd::metrics::LocationNavigationSession *this, const awd::metrics::LocationNavigationSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationNavigationSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationNavigationSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationNavigationSession::IsInitialized(awd::metrics::LocationNavigationSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationNavigationSession::Swap(uint64_t this, awd::metrics::LocationNavigationSession *a2)
{
  if (a2 != (awd::metrics::LocationNavigationSession *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    uint64_t v5 = *(void *)(this + 16);
    uint64_t v6 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    uint64_t v7 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v7;
    uint64_t v8 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    uint64_t v9 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v9;
    uint64_t v10 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v10;
    uint64_t v11 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v11;
    LOBYTE(v11) = *(unsigned char *)(this + 88);
    *(unsigned char *)(this + 88) = *((unsigned char *)a2 + 88);
    *((unsigned char *)a2 + 88) = v11;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v12 = *(_DWORD *)(v3 + 96);
    *(_DWORD *)(v3 + 96) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    int v13 = *(_DWORD *)(v3 + 92);
    *(_DWORD *)(v3 + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v13;
  }
  return this;
}

void *awd::metrics::LocationNavigationSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationNavigationSession");
}

double awd::metrics::LocationMainHarvesterMetrics::SharedCtor(awd::metrics::LocationMainHarvesterMetrics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

awd::metrics::LocationMainHarvesterMetrics *awd::metrics::LocationMainHarvesterMetrics::LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  *(void *)this = &unk_26D7BB4B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, a2);
  return this;
}

void sub_224948A64(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMainHarvesterMetrics::MergeFrom(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 18) |= 2u;
  uint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 18);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 16) = v15;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *((void *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x200u;
  *((void *)this + 6) = v16;
  if ((*((_DWORD *)a2 + 18) & 0x400) == 0) {
    return;
  }
LABEL_17:
  uint64_t v6 = *((void *)a2 + 7);
  *((_DWORD *)this + 18) |= 0x400u;
  *((void *)this + 7) = v6;
}

void sub_224948C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMainHarvesterMetrics::~LocationMainHarvesterMetrics(awd::metrics::LocationMainHarvesterMetrics *this)
{
  *(void *)this = &unk_26D7BB4B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB4B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB4B8;
  awd::metrics::LocationMainHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::default_instance(awd::metrics::LocationMainHarvesterMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMainHarvesterMetrics::default_instance_;
  if (!awd::metrics::LocationMainHarvesterMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMainHarvesterMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMainHarvesterMetrics::New(awd::metrics::LocationMainHarvesterMetrics *this)
{
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
    int v1 = *(_DWORD *)(this + 72);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(_DWORD *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::MergePartialFromCodedStream(awd::metrics::LocationMainHarvesterMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v40 = (unint64_t *)((char *)this + 8);
  BOOL v41 = (unsigned int *)((char *)this + 24);
  int v4 = (unsigned int *)((char *)this + 28);
  int v5 = (unsigned int *)((char *)this + 32);
  uint64_t v6 = (unsigned int *)((char *)this + 36);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  uint64_t v8 = (unsigned int *)((char *)this + 44);
  uint64_t v9 = (unsigned int *)((char *)this + 64);
  int v10 = (unint64_t *)((char *)this + 48);
  int v11 = (unint64_t *)((char *)this + 56);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v40 = *v16;
          unint64_t v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_38:
          int v18 = *((_DWORD *)this + 18) | 1;
          *((_DWORD *)this + 18) = v18;
          if ((unint64_t)v17 < v15 && *v17 == 18)
          {
            *((void *)a2 + 1) = v17 + 1;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if (result)
        {
          unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_32;
        }
        int v18 = *((_DWORD *)this + 18);
LABEL_41:
        *((_DWORD *)this + 18) = v18 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v19 || *v29 != 24) {
          continue;
        }
        unint64_t v20 = v29 + 1;
        *((void *)a2 + 1) = v20;
LABEL_47:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v41 = *v20;
          int v30 = v20 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v30 >= v19 || *v30 != 32) {
          continue;
        }
        unsigned int v21 = v30 + 1;
        *((void *)a2 + 1) = v21;
LABEL_55:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v21;
          unsigned int v31 = v21 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v31 >= v19 || *v31 != 40) {
          continue;
        }
        unsigned int v22 = v31 + 1;
        *((void *)a2 + 1) = v22;
LABEL_63:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v22;
          int v32 = v22 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v32 >= v19 || *v32 != 48) {
          continue;
        }
        unsigned int v23 = v32 + 1;
        *((void *)a2 + 1) = v23;
LABEL_71:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v23;
          int v33 = v23 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v33 >= v19 || *v33 != 56) {
          continue;
        }
        unint64_t v24 = v33 + 1;
        *((void *)a2 + 1) = v24;
LABEL_79:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v24;
          uint64_t v34 = v24 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v34 >= v19 || *v34 != 64) {
          continue;
        }
        unint64_t v25 = v34 + 1;
        *((void *)a2 + 1) = v25;
LABEL_87:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v25;
          uint64_t v35 = v25 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 18) |= 0x80u;
        if ((unint64_t)v35 >= v19 || *v35 != 72) {
          continue;
        }
        unsigned int v26 = v35 + 1;
        *((void *)a2 + 1) = v26;
LABEL_95:
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v26;
          unsigned int v36 = v26 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 18) |= 0x100u;
        if ((unint64_t)v36 >= v19 || *v36 != 80) {
          continue;
        }
        int v27 = v36 + 1;
        *((void *)a2 + 1) = v27;
LABEL_103:
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v10 = *v27;
          int v37 = v27 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 18) |= 0x200u;
        if ((unint64_t)v37 >= v19 || *v37 != 88) {
          continue;
        }
        unsigned int v28 = v37 + 1;
        *((void *)a2 + 1) = v28;
LABEL_111:
        if ((unint64_t)v28 >= v19 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v11);
          if (!result) {
            return result;
          }
          int v38 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v11 = *v28;
          int v38 = (unsigned __int8 *)(v28 + 1);
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 18) |= 0x400u;
        if (v38 != (unsigned __int8 *)v19 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_47;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_55;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_63;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_71;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_79;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_87;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v26 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_95;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v28 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_111;
      default:
        int v14 = TagFallback & 7;
LABEL_32:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 48), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  uint64_t v7 = *(void *)(v5 + 56);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::ByteSize(awd::metrics::LocationMainHarvesterMetrics *this)
{
  int v2 = *((_DWORD *)this + 18);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_47;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 18);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 18);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v3 = (v19 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
  }
LABEL_47:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_52;
  }
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_50;
    }
LABEL_57:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 6))
       + 1;
    if ((*((_DWORD *)this + 18) & 0x400) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v3 = (v24 + v3);
  if ((v2 & 0x200) != 0) {
    goto LABEL_57;
  }
LABEL_50:
  if ((v2 & 0x400) != 0) {
LABEL_51:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 7))
       + 1;
LABEL_52:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationMainHarvesterMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationMainHarvesterMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMainHarvesterMetrics::CopyFrom(awd::metrics::LocationMainHarvesterMetrics *this, const awd::metrics::LocationMainHarvesterMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMainHarvesterMetrics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMainHarvesterMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::IsInitialized(awd::metrics::LocationMainHarvesterMetrics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::Swap(uint64_t this, awd::metrics::LocationMainHarvesterMetrics *a2)
{
  if (a2 != (awd::metrics::LocationMainHarvesterMetrics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    uint64_t v5 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v5;
    uint64_t v6 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
  }
  return this;
}

void *awd::metrics::LocationMainHarvesterMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMainHarvesterMetrics");
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SharedCtor(uint64_t this)
{
  *(unsigned char *)(this + 8) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 12) = 0;
  return this;
}

awd::metrics::LocationSubHarvesterUploadAttempt *awd::metrics::LocationSubHarvesterUploadAttempt::LocationSubHarvesterUploadAttempt(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  *(void *)this = &unk_26D7BB530;
  *((unsigned char *)this + 8) = 0;
  *(void *)((char *)this + 20) = 0;
  *(void *)((char *)this + 12) = 0;
  awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, a2);
  return this;
}

void sub_224949B80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      char v6 = *((unsigned char *)a2 + 8);
      *((_DWORD *)this + 6) |= 1u;
      *((unsigned char *)this + 8) = v6;
      int v4 = *((_DWORD *)a2 + 6);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((_DWORD *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 6) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((_DWORD *)this + 4) = v5;
  }
}

void sub_224949C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::~LocationSubHarvesterUploadAttempt(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  *(void *)this = &unk_26D7BB530;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB530;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB530;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::default_instance(awd::metrics::LocationSubHarvesterUploadAttempt *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_;
  if (!awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSubHarvesterUploadAttempt::default_instance_;
  }
  return result;
}

void awd::metrics::LocationSubHarvesterUploadAttempt::New(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(unsigned char *)(this + 8) = 0;
    *(_DWORD *)(this + 12) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::MergePartialFromCodedStream(awd::metrics::LocationSubHarvesterUploadAttempt *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  int v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v19 = 0;
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!result) {
            return result;
          }
          unsigned int v13 = v19;
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((unsigned char *)this + 8) = v13 != 0;
        *((_DWORD *)this + 6) |= 1u;
        if ((unint64_t)v14 < v10 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
      if ((unint64_t)v15 >= v10 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!result) {
          return result;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        *int v4 = *v15;
        uint64_t v16 = v15 + 1;
        *((void *)a2 + 1) = v16;
      }
      *((_DWORD *)this + 6) |= 2u;
      if ((unint64_t)v16 < v10 && *v16 == 24)
      {
        int v11 = v16 + 1;
        *((void *)a2 + 1) = v11;
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v17 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v11;
          int v17 = (unsigned __int8 *)(v11 + 1);
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 6) |= 4u;
        if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
    if ((v5[6] & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
  unsigned int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = v5[4];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::ByteSize(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  int v2 = *((_DWORD *)this + 6);
  if ((_BYTE)v2)
  {
    uint64_t v3 = 2 * (v2 & 1u);
    if ((v2 & 2) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
      if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 6);
      }
      else
      {
        int v5 = 2;
      }
      uint64_t v3 = (v5 + v3);
    }
    if ((v2 & 4) != 0)
    {
      unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v6 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else {
        int v7 = 2;
      }
      uint64_t v3 = (v7 + v3);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CheckTypeAndMergeFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CopyFrom(awd::metrics::LocationSubHarvesterUploadAttempt *this, const awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSubHarvesterUploadAttempt *))(*(void *)this + 32))(this);
    awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::IsInitialized(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::Swap(uint64_t this, awd::metrics::LocationSubHarvesterUploadAttempt *a2)
{
  if (a2 != (awd::metrics::LocationSubHarvesterUploadAttempt *)this)
  {
    char v2 = *(unsigned char *)(this + 8);
    *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
    *((unsigned char *)a2 + 8) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    int v6 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return this;
}

void *awd::metrics::LocationSubHarvesterUploadAttempt::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSubHarvesterUploadAttempt");
}

double awd::metrics::LocationSubHarvesterMetrics::SharedCtor(awd::metrics::LocationSubHarvesterMetrics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

awd::metrics::LocationSubHarvesterMetrics *awd::metrics::LocationSubHarvesterMetrics::LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *(void *)this = &unk_26D7BB5A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 11) = 0;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22494A358(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterMetrics::MergeFrom(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationSubHarvesterUploadAttempt **)(*((void *)a2 + 8) + 8 * v4);
      int v6 = *((_DWORD *)this + 19);
      uint64_t v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64));
          int v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v7 + 1;
      awd::metrics::LocationSubHarvesterUploadAttempt::MergeFrom(*(awd::metrics::LocationSubHarvesterUploadAttempt **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  int v9 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    uint64_t v13 = *((void *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((void *)this + 1) = v13;
    int v9 = *((_DWORD *)a2 + 23);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v14 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  int v15 = (std::string *)*((void *)this + 2);
  if (v15 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v15, v14);
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_31:
  unsigned int v16 = *((_DWORD *)a2 + 6);
  if (v16 >= 0xE) {
    awd::metrics::LocationSubHarvesterMetrics::MergeFrom();
  }
  *((_DWORD *)this + 23) |= 4u;
  *((_DWORD *)this + 6) = v16;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v17 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 23) |= 8u;
  *((_DWORD *)this + 7) = v17;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_35:
    int v19 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 23) |= 0x20u;
    *((_DWORD *)this + 9) = v19;
    int v9 = *((_DWORD *)a2 + 23);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_34:
  int v18 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 23) |= 0x10u;
  *((_DWORD *)this + 8) = v18;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_36:
  int v20 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 23) |= 0x40u;
  *((_DWORD *)this + 10) = v20;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    int v10 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 23) |= 0x80u;
    *((_DWORD *)this + 11) = v10;
    int v9 = *((_DWORD *)a2 + 23);
  }
LABEL_21:
  if ((v9 & 0xFF00) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
      uint64_t v11 = *((void *)a2 + 6);
      *((_DWORD *)this + 23) |= 0x100u;
      *((void *)this + 6) = v11;
      int v9 = *((_DWORD *)a2 + 23);
    }
    if ((v9 & 0x200) != 0)
    {
      uint64_t v12 = *((void *)a2 + 7);
      *((_DWORD *)this + 23) |= 0x200u;
      *((void *)this + 7) = v12;
    }
  }
}

void sub_22494A66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSubHarvesterMetrics::~LocationSubHarvesterMetrics(awd::metrics::LocationSubHarvesterMetrics *this)
{
  *(void *)this = &unk_26D7BB5A8;
  char v2 = (uint64_t *)((char *)this + 64);
  awd::metrics::LocationSubHarvesterMetrics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationSubHarvesterMetrics::~LocationSubHarvesterMetrics(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::default_instance(awd::metrics::LocationSubHarvesterMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationSubHarvesterMetrics::default_instance_;
  if (!awd::metrics::LocationSubHarvesterMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSubHarvesterMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationSubHarvesterMetrics::New(awd::metrics::LocationSubHarvesterMetrics *this)
{
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::Clear(awd::metrics::LocationSubHarvesterMetrics *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    int v2 = *((_DWORD *)this + 23);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *((void *)this + 6) = 0;
    *((void *)this + 7) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>((uint64_t)this + 64);
  *((_DWORD *)this + 23) = 0;
  return result;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::MergePartialFromCodedStream(awd::metrics::LocationSubHarvesterMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int v51 = (unsigned int *)((char *)this + 28);
  uint64_t v4 = (unsigned int *)((char *)this + 32);
  int v5 = (unsigned int *)((char *)this + 36);
  int v6 = (unsigned int *)((char *)this + 40);
  uint64_t v7 = (unsigned int *)((char *)this + 44);
  uint64_t v8 = (unint64_t *)((char *)this + 48);
  int v9 = (unint64_t *)((char *)this + 56);
  unsigned int v49 = (unint64_t *)((char *)this + 8);
  int v50 = (awd::metrics::LocationSubHarvesterMetrics *)((char *)this + 64);
  while (1)
  {
    int v10 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || (char)*v10 < 0) {
      break;
    }
    unint64_t TagFallback = *v10;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v10 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v49);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *unsigned int v49 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        int v16 = *((_DWORD *)this + 23) | 1;
        *((_DWORD *)this + 23) = v16;
        if ((unint64_t)v15 < v13 && *v15 == 18)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_32;
        }
        int v16 = *((_DWORD *)this + 23);
LABEL_40:
        *((_DWORD *)this + 23) = v16 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v28 >= v17 || *v28 != 24) {
          continue;
        }
        int v18 = v28 + 1;
        *((void *)a2 + 1) = v18;
LABEL_46:
        unsigned int v52 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v29 = v52;
        }
        else
        {
          unsigned int v29 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v29 <= 0xD)
        {
          *((_DWORD *)this + 23) |= 4u;
          *((_DWORD *)this + 6) = v29;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v19 || *v30 != 32) {
          continue;
        }
        int v20 = v30 + 1;
        *((void *)a2 + 1) = v20;
LABEL_56:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *unsigned int v51 = *v20;
          unsigned int v31 = v20 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v31 >= v19 || *v31 != 40) {
          continue;
        }
        int v21 = v31 + 1;
        *((void *)a2 + 1) = v21;
LABEL_64:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v21;
          int v32 = v21 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v32 >= v19 || *v32 != 48) {
          continue;
        }
        unsigned int v22 = v32 + 1;
        *((void *)a2 + 1) = v22;
LABEL_72:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v22;
          int v33 = v22 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v33 >= v19 || *v33 != 56) {
          continue;
        }
        unsigned int v23 = v33 + 1;
        *((void *)a2 + 1) = v23;
LABEL_80:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v23;
          uint64_t v34 = v23 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v34 >= v19 || *v34 != 64) {
          continue;
        }
        int v24 = v34 + 1;
        *((void *)a2 + 1) = v24;
LABEL_88:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          uint64_t v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v24;
          uint64_t v35 = v24 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v35 >= v19 || *v35 != 72) {
          continue;
        }
        unint64_t v25 = v35 + 1;
        *((void *)a2 + 1) = v25;
LABEL_96:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v25;
          unsigned int v36 = v25 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v36 >= v19 || *v36 != 80) {
          continue;
        }
        unsigned int v26 = v36 + 1;
        *((void *)a2 + 1) = v26;
LABEL_104:
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v9 = *v26;
          int v37 = v26 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v37 >= v19 || *v37 != 90) {
          continue;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_46;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_56;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_64;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_72;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_80;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_88;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_96;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v26 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_104;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_32;
        }
        goto LABEL_112;
      default:
        int v12 = TagFallback & 7;
LABEL_32:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)a2 + 1) = v37 + 1;
LABEL_112:
      int v38 = *((_DWORD *)this + 19);
      uint64_t v39 = *((int *)this + 18);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v50);
          int v38 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v38 + 1;
        operator new();
      }
      uint64_t v40 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v39 + 1;
      BOOL v41 = *(awd::metrics::LocationSubHarvesterUploadAttempt **)(v40 + 8 * v39);
      unsigned int v53 = 0;
      int v42 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v53)) {
          return 0;
        }
      }
      else
      {
        unsigned int v53 = *v42;
        *((void *)a2 + 1) = v42 + 1;
      }
      int v43 = *((_DWORD *)a2 + 14);
      int v44 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v43 + 1;
      if (v43 >= v44) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationSubHarvesterUploadAttempt::MergePartialFromCodedStream(v41, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v45 = *((_DWORD *)a2 + 14);
      BOOL v46 = __OFSUB__(v45, 1);
      int v47 = v45 - 1;
      if (v47 < 0 == v46) {
        *((_DWORD *)a2 + 14) = v47;
      }
      int v37 = (unsigned char *)*((void *)a2 + 1);
      int v48 = (unsigned char *)*((void *)a2 + 2);
    }
    while (v37 < v48 && *v37 == 90);
    if (v37 == v48 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(v5 + 48), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0) {
LABEL_11:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 56), (uint64_t)a2, a4);
LABEL_12:
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(*(void *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  return this;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::ByteSize(awd::metrics::LocationSubHarvesterMetrics *this)
{
  int v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_49;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 23);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v11 = 1;
    }
    v3 += v11 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }
LABEL_41:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x80) != 0)
  {
LABEL_45:
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      int v21 = 2;
    }
    v3 += v21;
  }
LABEL_49:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 6))
          + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    if ((v2 & 0x200) != 0) {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
    }
                                                                                        + 7))
          + 1;
  }
  int v22 = *((_DWORD *)this + 18);
  uint64_t v23 = (v22 + v3);
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      unint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationSubHarvesterUploadAttempt::ByteSize(*(awd::metrics::LocationSubHarvesterUploadAttempt **)(*((void *)this + 8) + 8 * v24));
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      }
      else {
        int v27 = 1;
      }
      uint64_t v23 = (v26 + v23 + v27);
      ++v24;
    }
    while (v24 < *((int *)this + 18));
  }
  *((_DWORD *)this + 22) = v23;
  return v23;
}

void awd::metrics::LocationSubHarvesterMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationSubHarvesterMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSubHarvesterMetrics::CopyFrom(awd::metrics::LocationSubHarvesterMetrics *this, const awd::metrics::LocationSubHarvesterMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSubHarvesterMetrics *))(*(void *)this + 32))(this);
    awd::metrics::LocationSubHarvesterMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::IsInitialized(awd::metrics::LocationSubHarvesterMetrics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::Swap(uint64_t this, awd::metrics::LocationSubHarvesterMetrics *a2)
{
  if (a2 != (awd::metrics::LocationSubHarvesterMetrics *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    uint64_t v5 = *(void *)(this + 16);
    uint64_t v6 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    LODWORD(v4) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    uint64_t v7 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v9 = *(_DWORD *)(v3 + 92);
    *(_DWORD *)(v3 + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v9;
    int v10 = *(_DWORD *)(v3 + 88);
    *(_DWORD *)(v3 + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
  }
  return this;
}

void *awd::metrics::LocationSubHarvesterMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSubHarvesterMetrics");
}

double awd::metrics::LocationBeaconMonitorSession::SharedCtor(awd::metrics::LocationBeaconMonitorSession *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 3) = v1;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

awd::metrics::LocationBeaconMonitorSession *awd::metrics::LocationBeaconMonitorSession::LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  *(void *)this = &unk_26D7BB620;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v3;
  *((void *)this + 8) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, a2);
  return this;
}

void sub_22494B69C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorSession::MergeFrom(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v4) {
    goto LABEL_14;
  }
  if (v4)
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 17) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 17);
  }
  uint64_t v6 = (std::string *)MEMORY[0x263F8C740];
  if ((v4 & 2) != 0)
  {
    int v9 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    int v10 = (std::string *)*((void *)this + 2);
    if (v10 == v6) {
      operator new();
    }
    std::string::operator=(v10, v9);
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v11 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 17) |= 4u;
  int v12 = (std::string *)*((void *)this + 3);
  if (v12 == v6) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 8) = v13;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    int v15 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 10) = v15;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x40) == 0)
    {
LABEL_12:
      if ((v4 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v14 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 9) = v14;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v4 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_29:
  int v16 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 11) = v16;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    int v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 12) = v7;
    int v4 = *((_DWORD *)a2 + 17);
  }
LABEL_14:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v17 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 13) = v17;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x200) == 0)
    {
LABEL_17:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_17;
  }
  int v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 17) |= 0x200u;
  *((_DWORD *)this + 14) = v18;
  if ((*((_DWORD *)a2 + 17) & 0x400) == 0) {
    return;
  }
LABEL_18:
  int v8 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 17) |= 0x400u;
  *((_DWORD *)this + 15) = v8;
}

void sub_22494B904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorSession::~LocationBeaconMonitorSession(awd::metrics::LocationBeaconMonitorSession *this)
{
  *(void *)this = &unk_26D7BB620;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB620;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB620;
  awd::metrics::LocationBeaconMonitorSession::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::default_instance(awd::metrics::LocationBeaconMonitorSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationBeaconMonitorSession::default_instance_;
  if (!awd::metrics::LocationBeaconMonitorSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconMonitorSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationBeaconMonitorSession::New(awd::metrics::LocationBeaconMonitorSession *this)
{
}

uint64_t awd::metrics::LocationBeaconMonitorSession::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    uint64_t v2 = MEMORY[0x263F8C740];
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 68) & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
    *(_DWORD *)(this + 48) = 0;
    int v1 = *(_DWORD *)(this + 68);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 56) = 0;
    *(_DWORD *)(this + 52) = 0;
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::MergePartialFromCodedStream(awd::metrics::LocationBeaconMonitorSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v39 = (unint64_t *)((char *)this + 8);
  uint64_t v4 = (unsigned int *)((char *)this + 32);
  uint64_t v5 = (unsigned int *)((char *)this + 36);
  uint64_t v6 = (unsigned int *)((char *)this + 40);
  int v7 = (unsigned int *)((char *)this + 44);
  int v8 = (unsigned int *)((char *)this + 48);
  int v9 = (unsigned int *)((char *)this + 52);
  int v10 = (unsigned int *)((char *)this + 56);
  int v11 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *uint64_t v39 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_38:
          int v18 = *((_DWORD *)this + 17) | 1;
          *((_DWORD *)this + 17) = v18;
          if ((unint64_t)v17 < v15 && *v17 == 18)
          {
            *((void *)a2 + 1) = v17 + 1;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v39);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_32;
        }
        int v18 = *((_DWORD *)this + 17);
LABEL_41:
        *((_DWORD *)this + 17) = v18 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_47:
        *((_DWORD *)this + 17) |= 4u;
        if (*((void *)this + 3) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v19 || *v29 != 32) {
          continue;
        }
        int v20 = v29 + 1;
        *((void *)a2 + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v20;
          int v30 = v20 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 17) |= 8u;
        if ((unint64_t)v30 >= v19 || *v30 != 40) {
          continue;
        }
        int v21 = v30 + 1;
        *((void *)a2 + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v21;
          unsigned int v31 = v21 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 17) |= 0x10u;
        if ((unint64_t)v31 >= v19 || *v31 != 48) {
          continue;
        }
        int v22 = v31 + 1;
        *((void *)a2 + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v22;
          int v32 = v22 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) |= 0x20u;
        if ((unint64_t)v32 >= v19 || *v32 != 56) {
          continue;
        }
        uint64_t v23 = v32 + 1;
        *((void *)a2 + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v23;
          int v33 = v23 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v33 >= v19 || *v33 != 64) {
          continue;
        }
        uint64_t v24 = v33 + 1;
        *((void *)a2 + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v24;
          uint64_t v34 = v24 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 17) |= 0x80u;
        if ((unint64_t)v34 >= v19 || *v34 != 72) {
          continue;
        }
        unint64_t v25 = v34 + 1;
        *((void *)a2 + 1) = v25;
LABEL_93:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          uint64_t v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v25;
          uint64_t v35 = v25 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 17) |= 0x100u;
        if ((unint64_t)v35 >= v19 || *v35 != 80) {
          continue;
        }
        int v26 = v35 + 1;
        *((void *)a2 + 1) = v26;
LABEL_101:
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v26;
          unsigned int v36 = v26 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 17) |= 0x200u;
        if ((unint64_t)v36 >= v19 || *v36 != 88) {
          continue;
        }
        int v27 = v36 + 1;
        *((void *)a2 + 1) = v27;
LABEL_109:
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          int v37 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v11 = *v27;
          int v37 = (unsigned __int8 *)(v27 + 1);
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 17) |= 0x400u;
        if (v37 != (unsigned __int8 *)v19 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_47;
        }
        goto LABEL_32;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_69;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_77;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_85;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_93;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v26 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_101;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_109;
      default:
        int v14 = TagFallback & 7;
LABEL_32:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationBeaconMonitorSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[14], (uint64_t)a2, a4);
    if ((v5[17] & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  uint64_t v7 = v5[15];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationBeaconMonitorSession::ByteSize(awd::metrics::LocationBeaconMonitorSession *this)
{
  int v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_52;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 17);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *((void *)this + 3);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v2 = *((_DWORD *)this + 17);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    uint64_t v3 = (v3 + v15 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_36:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v3 = (v19 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_40:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_44:
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v24 >= 0x80)
    {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v25 = 2;
    }
    uint64_t v3 = (v25 + v3);
  }
LABEL_52:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_69;
  }
  if ((v2 & 0x100) != 0)
  {
    int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v26 >= 0x80)
    {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v27 = 2;
    }
    uint64_t v3 = (v27 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_55:
      if ((v2 & 0x400) == 0) {
        goto LABEL_69;
      }
      goto LABEL_65;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_55;
  }
  unsigned int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_65:
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v30 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    }
    else {
      int v31 = 2;
    }
    uint64_t v3 = (v31 + v3);
  }
LABEL_69:
  *((_DWORD *)this + 16) = v3;
  return v3;
}

void awd::metrics::LocationBeaconMonitorSession::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconMonitorSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconMonitorSession::CopyFrom(awd::metrics::LocationBeaconMonitorSession *this, const awd::metrics::LocationBeaconMonitorSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconMonitorSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationBeaconMonitorSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconMonitorSession::IsInitialized(awd::metrics::LocationBeaconMonitorSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBeaconMonitorSession::Swap(uint64_t this, awd::metrics::LocationBeaconMonitorSession *a2)
{
  if (a2 != (awd::metrics::LocationBeaconMonitorSession *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
  }
  return this;
}

void *awd::metrics::LocationBeaconMonitorSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconMonitorSession");
}

void *awd::metrics::LocationBeaconMonitorTrigger::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[5] = 0;
  this[6] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

awd::metrics::LocationBeaconMonitorTrigger *awd::metrics::LocationBeaconMonitorTrigger::LocationBeaconMonitorTrigger(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  *(void *)this = &unk_26D7BB698;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v3;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
  awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, a2);
  return this;
}

void sub_22494C8D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 13);
    }
    char v6 = (std::string *)MEMORY[0x263F8C740];
    if ((v4 & 2) != 0)
    {
      unint64_t v8 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 13) |= 2u;
      int v9 = (std::string *)*((void *)this + 2);
      if (v9 == v6) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    uint64_t v10 = (const std::string *)*((void *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    int v11 = (std::string *)*((void *)this + 3);
    if (v11 == v6) {
      operator new();
    }
    std::string::operator=(v11, v10);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 13) |= 8u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x10) == 0)
    {
LABEL_10:
      if ((v4 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 13) |= 0x10u;
    *((_DWORD *)this + 9) = v13;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 0x20) == 0)
    {
LABEL_11:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_22:
    int v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 10) = v14;
    if ((*((_DWORD *)a2 + 13) & 0x40) == 0) {
      return;
    }
LABEL_12:
    int v7 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 11) = v7;
  }
}

void sub_22494CAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconMonitorTrigger::~LocationBeaconMonitorTrigger(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  *(void *)this = &unk_26D7BB698;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB698;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB698;
  awd::metrics::LocationBeaconMonitorTrigger::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 24);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::default_instance(awd::metrics::LocationBeaconMonitorTrigger *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationBeaconMonitorTrigger::default_instance_;
  if (!awd::metrics::LocationBeaconMonitorTrigger::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconMonitorTrigger::default_instance_;
  }
  return result;
}

void awd::metrics::LocationBeaconMonitorTrigger::New(awd::metrics::LocationBeaconMonitorTrigger *this)
{
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 52);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    uint64_t v2 = MEMORY[0x263F8C740];
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 52) & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::MergePartialFromCodedStream(awd::metrics::LocationBeaconMonitorTrigger *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unsigned int *)((char *)this + 32);
  char v6 = (unsigned int *)((char *)this + 36);
  int v7 = (unsigned int *)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 44);
  uint64_t v9 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *uint64_t v4 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
LABEL_30:
          int v16 = *((_DWORD *)this + 13) | 1;
          *((_DWORD *)this + 13) = v16;
          if ((unint64_t)v15 < v13 && *v15 == 18)
          {
            *((void *)a2 + 1) = v15 + 1;
            goto LABEL_33;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        int v16 = *((_DWORD *)this + 13);
LABEL_33:
        *((_DWORD *)this + 13) = v16 | 2;
        if (*((void *)this + 2) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_39:
        *((_DWORD *)this + 13) |= 4u;
        if (*((void *)this + 3) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v17 || *v23 != 32) {
          continue;
        }
        int v18 = v23 + 1;
        *((void *)a2 + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v18;
          uint64_t v24 = v18 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v24 >= v17 || *v24 != 40) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)a2 + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v19;
          int v25 = v19 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if ((unint64_t)v25 >= v17 || *v25 != 48) {
          continue;
        }
        int v20 = v25 + 1;
        *((void *)a2 + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v20;
          int v26 = v20 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 13) |= 0x20u;
        if ((unint64_t)v26 >= v17 || *v26 != 56) {
          continue;
        }
        int v21 = v26 + 1;
        *((void *)a2 + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v27 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *unint64_t v8 = *v21;
          int v27 = (unsigned __int8 *)(v21 + 1);
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) |= 0x40u;
        if (v27 != (unsigned __int8 *)v17 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_39;
        }
        goto LABEL_24;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_45;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_53;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_61;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_69;
      default:
        int v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[10], (uint64_t)a2, a4);
    if ((v5[13] & 0x40) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[13];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_15:
  uint64_t v7 = v5[11];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::ByteSize(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_47;
  }
  if (*((unsigned char *)this + 52))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 13);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *((void *)this + 3);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v2 = *((_DWORD *)this + 13);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    uint64_t v3 = (v3 + v15 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v3 = (v19 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_43:
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v22 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    }
    else {
      int v23 = 2;
    }
    uint64_t v3 = (v23 + v3);
  }
LABEL_47:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void awd::metrics::LocationBeaconMonitorTrigger::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconMonitorTrigger::CopyFrom(awd::metrics::LocationBeaconMonitorTrigger *this, const awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconMonitorTrigger *))(*(void *)this + 32))(this);
    awd::metrics::LocationBeaconMonitorTrigger::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::IsInitialized(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  return 1;
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::Swap(uint64_t this, awd::metrics::LocationBeaconMonitorTrigger *a2)
{
  if (a2 != (awd::metrics::LocationBeaconMonitorTrigger *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

void *awd::metrics::LocationBeaconMonitorTrigger::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconMonitorTrigger");
}

void *awd::metrics::LocationBeaconRangingSession::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[7] = 0;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationBeaconRangingSession *awd::metrics::LocationBeaconRangingSession::LocationBeaconRangingSession(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_26D7BB710;
  *((void *)this + 1) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v3;
  awd::metrics::LocationBeaconRangingSession::MergeFrom(this, a2);
  return this;
}

void sub_22494D6F4(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x22A61A810](*v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconRangingSession::MergeFrom(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = *((_DWORD *)a2 + 12);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 40, *((_DWORD *)this + 12) + v4);
    memcpy((void *)(*((void *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 60);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 60))
    {
      uint64_t v7 = *((void *)a2 + 1);
      *((_DWORD *)this + 15) |= 1u;
      *((void *)this + 1) = v7;
      int v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 60) & 2) == 0)
    {
      goto LABEL_8;
    }
    unint64_t v8 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 15) |= 2u;
    int v9 = (std::string *)*((void *)this + 2);
    if (v9 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 15) |= 4u;
    *((_DWORD *)this + 6) = v10;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 15) |= 8u;
    *((_DWORD *)this + 7) = v11;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_20:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 15) |= 0x10u;
    *((_DWORD *)this + 8) = v12;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0) {
      return;
    }
LABEL_12:
    int v6 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 9) = v6;
  }
}

void sub_22494D8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationBeaconRangingSession::~LocationBeaconRangingSession(awd::metrics::LocationBeaconRangingSession *this)
{
  *(void *)this = &unk_26D7BB710;
  awd::metrics::LocationBeaconRangingSession::SharedDtor((uint64_t)this);
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationBeaconRangingSession::~LocationBeaconRangingSession(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationBeaconRangingSession::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::default_instance(awd::metrics::LocationBeaconRangingSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationBeaconRangingSession::default_instance_;
  if (!awd::metrics::LocationBeaconRangingSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationBeaconRangingSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationBeaconRangingSession::New(awd::metrics::LocationBeaconRangingSession *this)
{
}

uint64_t awd::metrics::LocationBeaconRangingSession::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 60);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::MergePartialFromCodedStream(awd::metrics::LocationBeaconRangingSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 40;
  int v38 = (unint64_t *)((char *)this + 8);
  uint64_t v39 = (unsigned int *)((char *)this + 24);
  int v5 = (unsigned int *)((char *)this + 28);
  int v6 = (unsigned int *)((char *)this + 32);
  uint64_t v7 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    unint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v38);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v38 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
        }
        int v14 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v14;
        if ((unint64_t)v13 < v11 && *v13 == 18)
        {
          *((void *)a2 + 1) = v13 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_26;
        }
        int v14 = *((_DWORD *)this + 15);
LABEL_36:
        *((_DWORD *)this + 15) = v14 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v21 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        if (v21 >= v15 || *v21 != 24) {
          continue;
        }
        int v16 = v21 + 1;
        *((void *)a2 + 1) = v16;
LABEL_42:
        if (v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!result) {
            return result;
          }
          int v22 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          *uint64_t v39 = *v16;
          int v22 = v16 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 15) |= 4u;
        if (v22 >= v15 || *v22 != 32) {
          continue;
        }
        int v17 = v22 + 1;
        *((void *)a2 + 1) = v17;
LABEL_50:
        if (v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v23 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v17;
          int v23 = v17 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 15) |= 8u;
        if (v23 >= v15 || *v23 != 40) {
          continue;
        }
        int v18 = v23 + 1;
        *((void *)a2 + 1) = v18;
LABEL_58:
        if (v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v24 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v18;
          uint64_t v24 = v18 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if (v24 >= v15 || *v24 != 48) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)a2 + 1) = v19;
LABEL_66:
        if (v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v25 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v19;
          int v25 = v19 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if (v25 < v15 && *v25 == 56) {
          goto LABEL_73;
        }
        continue;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v16 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        goto LABEL_42;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        goto LABEL_50;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        goto LABEL_58;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)a2 + 1);
        int v15 = (char *)*((void *)a2 + 2);
        goto LABEL_66;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)17>(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v25 = (char *)*((void *)a2 + 1);
            int v15 = (char *)*((void *)a2 + 2);
            if (v25 >= v15 || *v25 != 56) {
              break;
            }
LABEL_73:
            int v20 = v25 + 1;
            *((void *)a2 + 1) = v20;
LABEL_74:
            v40[0] = 0;
            if (v20 >= v15 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
              if (!result) {
                return result;
              }
              unsigned int v26 = v40[0];
            }
            else
            {
              unsigned int v26 = *v20;
              *((void *)a2 + 1) = v20 + 1;
            }
            int v27 = -(v26 & 1) ^ (v26 >> 1);
            int v28 = *((_DWORD *)this + 12);
            if (v28 == *((_DWORD *)this + 13))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v4, v28 + 1);
              int v28 = *((_DWORD *)this + 12);
            }
            uint64_t v29 = *((void *)this + 5);
            *((_DWORD *)this + 12) = v28 + 1;
            *(_DWORD *)(v29 + 4 * v28) = v27;
            int v30 = *((_DWORD *)this + 13) - *((_DWORD *)this + 12);
            if (v30 >= 1)
            {
              int v31 = v30 + 1;
              do
              {
                int v32 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v33 = *((void *)a2 + 2);
                if ((unint64_t)v32 >= v33 || *v32 != 56) {
                  break;
                }
                *((void *)a2 + 1) = v32 + 1;
                v40[0] = 0;
                if ((unint64_t)(v32 + 1) >= v33 || (char)v32[1] < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
                  if (!result) {
                    return result;
                  }
                  unsigned int v34 = v40[0];
                }
                else
                {
                  unsigned int v34 = v32[1];
                  *((void *)a2 + 1) = v32 + 2;
                }
                int v35 = *((_DWORD *)this + 12);
                if (v35 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
                  int v35 = *((_DWORD *)this + 12);
                }
                uint64_t v36 = *((void *)this + 5);
                *((_DWORD *)this + 12) = v35 + 1;
                *(_DWORD *)(v36 + 4 * v35) = -(v34 & 1) ^ (v34 >> 1);
                --v31;
              }
              while (v31 > 1);
            }
          }
          if (v25 == v15 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v20 = (char *)*((void *)a2 + 1);
          int v15 = (char *)*((void *)a2 + 2);
          goto LABEL_74;
        }
LABEL_26:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v10 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_22494E090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)17>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v10 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v10 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v11 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v7 = v11;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v8 = *(_DWORD *)(a2 + 8);
      if (v8 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a2, v8 + 1);
        int v8 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = -(v7 & 1) ^ (v7 >> 1);
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t awd::metrics::LocationBeaconRangingSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
LABEL_8:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(*(void *)(v5 + 40) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationBeaconRangingSession::ByteSize(awd::metrics::LocationBeaconRangingSession *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_37;
  }
  if (*((unsigned char *)this + 60))
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 15);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) != 0)
  {
LABEL_33:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v16 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else {
      int v17 = 2;
    }
    v3 += v17;
  }
LABEL_37:
  int v18 = *((_DWORD *)this + 12);
  if (v18 < 1)
  {
    int v20 = 0;
  }
  else
  {
    uint64_t v19 = 0;
    int v20 = 0;
    do
    {
      int v21 = *(_DWORD *)(*((void *)this + 5) + 4 * v19);
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v21) ^ (v21 >> 31));
      if (v22 >= 0x80)
      {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
        int v18 = *((_DWORD *)this + 12);
      }
      else
      {
        int v23 = 1;
      }
      v20 += v23;
      ++v19;
    }
    while (v19 < v18);
  }
  uint64_t result = (v20 + v3 + v18);
  *((_DWORD *)this + 14) = result;
  return result;
}

void awd::metrics::LocationBeaconRangingSession::CheckTypeAndMergeFrom(awd::metrics::LocationBeaconRangingSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationBeaconRangingSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationBeaconRangingSession::CopyFrom(awd::metrics::LocationBeaconRangingSession *this, const awd::metrics::LocationBeaconRangingSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationBeaconRangingSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationBeaconRangingSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationBeaconRangingSession::IsInitialized(awd::metrics::LocationBeaconRangingSession *this)
{
  return 1;
}

double awd::metrics::LocationBeaconRangingSession::Swap(awd::metrics::LocationBeaconRangingSession *this, awd::metrics::LocationBeaconRangingSession *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    double result = *((double *)a2 + 6);
    *((void *)a2 + 5) = v5;
    uint64_t v7 = *((void *)this + 6);
    *((double *)this + 6) = result;
    *((void *)a2 + 6) = v7;
    LODWORD(v5) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return result;
}

void *awd::metrics::LocationBeaconRangingSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationBeaconRangingSession");
}

BOOL awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeType_IsValid(awd::metrics *this)
{
  return this < 0xF;
}

BOOL awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeType_IsValid(awd::metrics *this)
{
  return this < 0xB;
}

BOOL awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeType_IsValid(awd::metrics *this)
{
  return this < 8;
}

BOOL awd::metrics::LocationGPSSessionStatistics_MotionActivityType_IsValid(awd::metrics *this)
{
  return this < 9;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentType_IsValid(awd::metrics *this)
{
  return (this < 8) & (0xDFu >> (char)this);
}

BOOL awd::metrics::LocationGPSSessionStatistics_MountedStateType_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationGPSSessionStatistics_MovingStateType_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationGPSSessionStatistics_PowerStateType_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationGPSSessionStatistics_RadioAccessTechnology_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationGPSSessionStatistics_DeviceOrientationType_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationGPSSessionStatistics_EphemerisFileIntegrityCheckType_IsValid(awd::metrics *this)
{
  return this < 0xE;
}

BOOL awd::metrics::LocationGPSSessionStatistics_PowerMeasurementRange_IsValid(awd::metrics *this)
{
  return this < 0x20;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::LocationGPSSessionStatistics_UncertaintyRangeData(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB788;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, a2);
  return this;
}

void sub_22494E770(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0xF) {
        awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22494E83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::~LocationGPSSessionStatistics_UncertaintyRangeData(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  *(void *)this = &unk_26D7BB788;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB788;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB788;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::New(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xE)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this, const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.UncertaintyRangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::LocationGPSSessionStatistics_SatelliteCNORangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB800;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, a2);
  return this;
}

void sub_22494EE18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0xB) {
        awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22494EEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::~LocationGPSSessionStatistics_SatelliteCNORangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  *(void *)this = &unk_26D7BB800;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB800;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB800;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::New(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xA)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SatelliteCNORangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::LocationGPSSessionStatistics_SatelliteCountRangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB878;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, a2);
  return this;
}

void sub_22494F4C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 8) {
        awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22494F58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::~LocationGPSSessionStatistics_SatelliteCountRangeData(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  *(void *)this = &unk_26D7BB878;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB878;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB878;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::New(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 7)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this, const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SatelliteCountRangeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MotionActivityData *awd::metrics::LocationGPSSessionStatistics_MotionActivityData::LocationGPSSessionStatistics_MotionActivityData(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB8F0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, a2);
  return this;
}

void sub_22494FB68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 9) {
        awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22494FC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::~LocationGPSSessionStatistics_MotionActivityData(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  *(void *)this = &unk_26D7BB8F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB8F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB8F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MotionActivityData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::New(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 8)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this, const awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MotionActivityData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MotionActivityData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_MotionActivityData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MotionActivityData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::LocationGPSSessionStatistics_SignalEnvironmentData(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB968;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, a2);
  return this;
}

void sub_224950210(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 5 && v5 - 6 >= 2) {
        awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_2249502E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::~LocationGPSSessionStatistics_SignalEnvironmentData(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  *(void *)this = &unk_26D7BB968;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB968;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB968;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::New(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v16 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!result) {
          return result;
        }
        unsigned int v11 = v16;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 7 && v11 != 5)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v13 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v13 < v8 && *v13 == 16)
      {
        int v9 = v13 + 1;
        *((void *)a2 + 1) = v9;
LABEL_29:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_29;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::ByteSize(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this, const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.SignalEnvironmentData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MountedStateData *awd::metrics::LocationGPSSessionStatistics_MountedStateData::LocationGPSSessionStatistics_MountedStateData(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BB9E0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, a2);
  return this;
}

void sub_2249508C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 3) {
        awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_224950994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::~LocationGPSSessionStatistics_MountedStateData(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  *(void *)this = &unk_26D7BB9E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BB9E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BB9E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MountedStateData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::New(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 2)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this, const awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MountedStateData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MountedStateData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MountedStateData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_MountedStateData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MountedStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_MovingStateData *awd::metrics::LocationGPSSessionStatistics_MovingStateData::LocationGPSSessionStatistics_MovingStateData(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBA58;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, a2);
  return this;
}

void sub_224950F70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 4) {
        awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22495103C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::~LocationGPSSessionStatistics_MovingStateData(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  *(void *)this = &unk_26D7BBA58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBA58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBA58;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_MovingStateData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::New(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 3)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this, const awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_MovingStateData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_MovingStateData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_MovingStateData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_MovingStateData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.MovingStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_PowerStateData *awd::metrics::LocationGPSSessionStatistics_PowerStateData::LocationGPSSessionStatistics_PowerStateData(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBAD0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, a2);
  return this;
}

void sub_224951618(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 4) {
        awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_2249516E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::~LocationGPSSessionStatistics_PowerStateData(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  *(void *)this = &unk_26D7BBAD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBAD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBAD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_PowerStateData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::New(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 3)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::ByteSize(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this, const awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_PowerStateData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_PowerStateData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_PowerStateData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_PowerStateData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.PowerStateData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = MEMORY[0x263F8C740];
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ChecksumData *awd::metrics::LocationGPSSessionStatistics_ChecksumData::LocationGPSSessionStatistics_ChecksumData(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BBB48;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = 0;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, a2);
  return this;
}

void sub_224951CCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*((unsigned char *)a2 + 20))
  {
    int v4 = (const std::string *)*((void *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    uint64_t v5 = (std::string *)*((void *)this + 1);
    if (v5 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_224951DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::~LocationGPSSessionStatistics_ChecksumData(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  *(void *)this = &unk_26D7BBB48;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBB48;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBB48;
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 8);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ChecksumData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::New(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v1 = *(void *)(this + 8);
    if (v1 != MEMORY[0x263F8C740])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      if (*((void *)this + 1) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  if (*(unsigned char *)(this + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = *((void *)this + 1);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    uint64_t result = (v8 + v4);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this, const awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ChecksumData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ChecksumData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ChecksumData *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_ChecksumData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ChecksumData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::LocationGPSSessionStatistics_DeviceOrientationData(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBBC0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, a2);
  return this;
}

void sub_22495239C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 7) {
        awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_224952468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::~LocationGPSSessionStatistics_DeviceOrientationData(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  *(void *)this = &unk_26D7BBBC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBBC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBBC0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::New(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::ByteSize(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this, const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.DeviceOrientationData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::LocationGPSSessionStatistics_PowerMeasurementData(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBC38;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_224952A44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 0x20) {
        awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_224952B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::~LocationGPSSessionStatistics_PowerMeasurementData(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  *(void *)this = &unk_26D7BBC38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBC38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBC38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::New(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0x1F)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::ByteSize(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this, const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.PowerMeasurementData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::LocationGPSSessionStatistics_ChargerTypeData(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBCB0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, a2);
  return this;
}

void sub_2249530EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_2249531AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::~LocationGPSSessionStatistics_ChargerTypeData(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  *(void *)this = &unk_26D7BBCB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBCB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBCB0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::New(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this, const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ChargerTypeData");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::LocationGPSSessionStatistics_ThermalLevelData(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBD28;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, a2);
  return this;
}

void sub_224953780(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_224953840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::~LocationGPSSessionStatistics_ThermalLevelData(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  *(void *)this = &unk_26D7BBD28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBD28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBD28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::New(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unsigned int v10 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::ByteSize(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CopyFrom(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this, const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::IsInitialized(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.ThermalLevelData");
}

BOOL awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExitCategory_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExceptionCategory_IsValid(awd::metrics *this)
{
  return this < 5;
}

double awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SharedCtor(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  *(void *)this = &unk_26D7BBDA0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224953E5C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4) {
    goto LABEL_15;
  }
  if (v4)
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 3) {
      awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom();
    }
    *((_DWORD *)this + 18) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 2) != 0)
  {
    int v10 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 18) |= 2u;
    *((_DWORD *)this + 3) = v10;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v11 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 4) = v11;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v12 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 5) = v12;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    int v14 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 7) = v14;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_29:
  int v13 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 6) = v13;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_31:
  uint64_t v15 = *((void *)a2 + 4);
  *((_DWORD *)this + 18) |= 0x40u;
  *((void *)this + 4) = v15;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_14:
    uint64_t v6 = *((void *)a2 + 5);
    *((_DWORD *)this + 18) |= 0x80u;
    *((void *)this + 5) = v6;
    int v4 = *((_DWORD *)a2 + 18);
  }
LABEL_15:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 12) = v7;
    int v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v8 = *((_DWORD *)a2 + 13);
    if (v8 >= 5) {
      awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom();
    }
    *((_DWORD *)this + 18) |= 0x200u;
    *((_DWORD *)this + 13) = v8;
    int v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 0x400) != 0)
  {
    int v16 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 18) |= 0x400u;
    *((_DWORD *)this + 14) = v16;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x800) == 0)
    {
LABEL_23:
      if ((v4 & 0x1000) == 0) {
        return;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_23;
  }
  int v17 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 18) |= 0x800u;
  *((_DWORD *)this + 15) = v17;
  if ((*((_DWORD *)a2 + 18) & 0x1000) != 0)
  {
LABEL_24:
    int v9 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 18) |= 0x1000u;
    *((_DWORD *)this + 16) = v9;
  }
}

void sub_22495409C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::~LocationGPSSessionStatistics_LocationGpsPersistentStatistics(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  *(void *)this = &unk_26D7BBDA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBDA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBDA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::New(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(_DWORD *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        v49[0] = 0;
        int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && (*v7 & 0x80000000) == 0)
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_41;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
        if (result)
        {
          unsigned int v8 = v49[0];
LABEL_41:
          if (v8 <= 2)
          {
            *((_DWORD *)this + 18) |= 1u;
            *((_DWORD *)this + 2) = v8;
          }
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v23 < v9 && *v23 == 16)
          {
            int v10 = v23 + 1;
            *((void *)a2 + 1) = v10;
            goto LABEL_46;
          }
          continue;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_46:
        v49[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v24 = v49[0];
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v10;
          int v25 = v10 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 3) = v24;
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v25 >= v9 || *v25 != 24) {
          continue;
        }
        int v11 = v25 + 1;
        *((void *)a2 + 1) = v11;
LABEL_54:
        v49[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v26 = v49[0];
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v11;
          int v27 = v11 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 4) = v26;
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v27 >= v9 || *v27 != 32) {
          continue;
        }
        int v12 = v27 + 1;
        *((void *)a2 + 1) = v12;
LABEL_62:
        v49[0] = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v28 = v49[0];
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v12;
          uint64_t v29 = v12 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 5) = v28;
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v29 >= v9 || *v29 != 40) {
          continue;
        }
        int v13 = v29 + 1;
        *((void *)a2 + 1) = v13;
LABEL_70:
        v49[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v30 = v49[0];
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v13;
          int v31 = v13 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 6) = v30;
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v31 >= v9 || *v31 != 48) {
          continue;
        }
        int v14 = v31 + 1;
        *((void *)a2 + 1) = v14;
LABEL_78:
        v49[0] = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v32 = v49[0];
          unint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v32 = *v14;
          unint64_t v33 = v14 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 7) = v32;
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v33 >= v9 || *v33 != 56) {
          continue;
        }
        uint64_t v15 = v33 + 1;
        *((void *)a2 + 1) = v15;
LABEL_86:
        *(void *)unsigned int v49 = 0;
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v49);
          if (!result) {
            return result;
          }
          uint64_t v34 = *(void *)v49;
          int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v34 = *v15;
          int v35 = v15 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((void *)this + 4) = v34;
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v35 >= v9 || *v35 != 64) {
          continue;
        }
        int v16 = v35 + 1;
        *((void *)a2 + 1) = v16;
LABEL_94:
        *(void *)unsigned int v49 = 0;
        if ((unint64_t)v16 >= v9 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v49);
          if (!result) {
            return result;
          }
          uint64_t v36 = *(void *)v49;
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v36 = *v16;
          int v37 = v16 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((void *)this + 5) = v36;
        *((_DWORD *)this + 18) |= 0x80u;
        if ((unint64_t)v37 >= v9 || *v37 != 72) {
          continue;
        }
        int v17 = v37 + 1;
        *((void *)a2 + 1) = v17;
LABEL_102:
        v49[0] = 0;
        if ((unint64_t)v17 >= v9 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v38 = v49[0];
          uint64_t v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v38 = *v17;
          uint64_t v39 = v17 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 12) = v38;
        *((_DWORD *)this + 18) |= 0x100u;
        if ((unint64_t)v39 >= v9 || *v39 != 80) {
          continue;
        }
        int v18 = v39 + 1;
        *((void *)a2 + 1) = v18;
LABEL_110:
        v49[0] = 0;
        if ((unint64_t)v18 >= v9 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v40 = v49[0];
        }
        else
        {
          unsigned int v40 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v40 <= 4)
        {
          *((_DWORD *)this + 18) |= 0x200u;
          *((_DWORD *)this + 13) = v40;
        }
        BOOL v41 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v41 >= v19 || *v41 != 88) {
          continue;
        }
        int v20 = v41 + 1;
        *((void *)a2 + 1) = v20;
LABEL_120:
        v49[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v42 = v49[0];
          int v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v42 = *v20;
          int v43 = v20 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 15) = v42;
        *((_DWORD *)this + 18) |= 0x800u;
        if ((unint64_t)v43 >= v19 || *v43 != 96) {
          continue;
        }
        int v21 = v43 + 1;
        *((void *)a2 + 1) = v21;
LABEL_128:
        v49[0] = 0;
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v44 = v49[0];
          int v45 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v44 = *v21;
          int v45 = v21 + 1;
          *((void *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 16) = v44;
        *((_DWORD *)this + 18) |= 0x1000u;
        if ((unint64_t)v45 >= v19 || *v45 != 104) {
          continue;
        }
        int v22 = v45 + 1;
        *((void *)a2 + 1) = v22;
LABEL_136:
        v49[0] = 0;
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          unsigned int v46 = v49[0];
          int v47 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v46 = *v22;
          int v47 = (unsigned __int8 *)(v22 + 1);
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 14) = v46;
        *((_DWORD *)this + 18) |= 0x400u;
        if (v47 != (unsigned __int8 *)v19 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_54;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_62;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_70;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_78;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_86;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_94;
      case 9u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_102;
      case 0xAu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_110;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_120;
      case 0xCu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_128;
      case 0xDu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_136;
      default:
        int v6 = TagFallback & 7;
LABEL_35:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x400) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_27:
  uint64_t v7 = *(unsigned int *)(v5 + 56);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::ByteSize(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  int v2 = *((_DWORD *)this + 18);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_54;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_54:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_78;
  }
LABEL_66:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v20 & 0x80000000) != 0)
  {
    int v21 = 10;
  }
  else if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v21 = 1;
  }
  uint64_t v3 = (v3 + v21 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_78:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x80) != 0)
  {
LABEL_24:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 5))
       + 1;
    int v2 = *((_DWORD *)this + 18);
  }
LABEL_25:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v2 & 0x100) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v3 = (v11 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_28:
      if ((v2 & 0x400) == 0) {
        goto LABEL_29;
      }
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_28;
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_29:
    if ((v2 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_72;
  }
LABEL_60:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v3 = (v19 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_30:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_82;
  }
LABEL_72:
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v22 & 0x80000000) != 0)
  {
    int v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x1000) != 0)
  {
LABEL_82:
    unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v24 & 0x80000000) != 0)
    {
      int v25 = 11;
    }
    else if (v24 >= 0x80)
    {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    }
    else
    {
      int v25 = 2;
    }
    uint64_t v3 = (v25 + v3);
  }
LABEL_88:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CopyFrom(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this, const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::IsInitialized(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    uint64_t v8 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    uint64_t v9 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v9;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.LocationGpsPersistentStatistics");
}

void *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  *(void *)this = &unk_26D7BBE18;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, a2);
  return this;
}

void sub_224955054(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v4 = *((_DWORD *)a2 + 7);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 7) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 7);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 7) |= 4u;
    *((_DWORD *)this + 4) = v8;
    if ((*((_DWORD *)a2 + 7) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 7) |= 8u;
    *((_DWORD *)this + 5) = v5;
  }
}

void sub_22495515C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::~LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  *(void *)this = &unk_26D7BBE18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBE18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBE18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::New(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  int v5 = (unsigned int *)((char *)this + 16);
  int v6 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v21 = 0;
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unsigned int v12 = *v11;
          int v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
LABEL_24:
          *((_DWORD *)this + 2) = v12;
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if (result)
        {
          unsigned int v12 = v21;
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v14;
          int v17 = v14 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24) {
          continue;
        }
        int v15 = v17 + 1;
        *((void *)a2 + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v15;
          int v18 = v15 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 7) |= 4u;
        if ((unint64_t)v18 >= v10 || *v18 != 32) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)a2 + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v19 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v6 = *v16;
          int v19 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 7) |= 8u;
        if (v19 != (unsigned __int8 *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_43;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  unsigned int v6 = this[7];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
      if ((v5[7] & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[7];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = v5[5];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::ByteSize(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 28))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 7);
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 7);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_17:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 7);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_24:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    }
    else {
      int v10 = 2;
    }
    uint64_t v3 = (v10 + v3);
  }
LABEL_28:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CopyFrom(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::IsInitialized(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::Swap(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this, awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
    int v7 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v7;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.BarometricAltitudeDriftRateInfo");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::LocationGPSSessionStatistics_NSForceOffReason(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBE90;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, a2);
  return this;
}

void sub_22495590C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_2249559CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::~LocationGPSSessionStatistics_NSForceOffReason(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  *(void *)this = &unk_26D7BBE90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBE90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBE90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::New(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
        unsigned int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        unsigned int v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::ByteSize(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CopyFrom(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this, const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::IsInitialized(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.NSForceOffReason");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_NSOnOffState *awd::metrics::LocationGPSSessionStatistics_NSOnOffState::LocationGPSSessionStatistics_NSOnOffState(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBF08;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, a2);
  return this;
}

void sub_224955FA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_224956060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::~LocationGPSSessionStatistics_NSOnOffState(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  *(void *)this = &unk_26D7BBF08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBF08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBF08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_NSOnOffState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::New(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
        unsigned int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        unsigned int v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 4) = v11;
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::ByteSize(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CopyFrom(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this, const awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::IsInitialized(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics_NSOnOffState *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics_NSOnOffState *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_NSOnOffState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.NSOnOffState");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::LocationGPSSessionStatistics_JammingMetricBucket(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BBF80;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, a2);
  return this;
}

void sub_224956628(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      int v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_2249566E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::~LocationGPSSessionStatistics_JammingMetricBucket(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  *(void *)this = &unk_26D7BBF80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BBF80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BBF80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::New(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      int v9 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!result) {
          return result;
        }
        unsigned int v10 = v16;
        unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v10 = *v9;
        unsigned int v11 = v9 + 1;
        *((void *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 2) = v10;
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        unint64_t v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_23:
        unsigned int v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!result) {
            return result;
          }
          unsigned int v12 = v15;
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          int v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::ByteSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CopyFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::IsInitialized(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::Swap(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this, awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.JammingMetricBucket");
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::LocationGPSSessionStatistics_JammingMetricDataPerSignal(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7BBFF8;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, a2);
  return this;
}

void sub_224956CEC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if (*((unsigned char *)a2 + 40))
  {
    int v9 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 8) = v9;
  }
}

void sub_224956E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::~LocationGPSSessionStatistics_JammingMetricDataPerSignal(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  *(void *)this = &unk_26D7BBFF8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::~LocationGPSSessionStatistics_JammingMetricDataPerSignal(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::New(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::Clear(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  if (*((unsigned char *)this + 40)) {
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>((uint64_t)this + 8);
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v24 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!result) {
            return result;
          }
          unsigned int v10 = v24;
          unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v10 = *v8;
          unsigned int v11 = v8 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) = v10;
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v13 = *((_DWORD *)this + 5);
        uint64_t v14 = *((int *)this + 4);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v13 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v13 + 1;
          operator new();
        }
        uint64_t v15 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v14 + 1;
        unsigned int v16 = *(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(v15 + 8 * v14);
        unsigned int v25 = 0;
        int v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25))return 0; {
        }
          }
        else
        {
          unsigned int v25 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
        int v23 = (unsigned char *)*((void *)a2 + 2);
        if (v11 >= v23 || *v11 != 18) {
          break;
        }
LABEL_23:
        *((void *)a2 + 1) = v11 + 1;
      }
      if (v11 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 40)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::ByteSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  if (*((unsigned char *)this + 40))
  {
    int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v3 & 0x80000000) != 0)
    {
      int v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 4);
  uint64_t v5 = (v4 + v2);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket **)(*((void *)this + 1) + 8 * v6));
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 9) = v5;
  return v5;
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CopyFrom(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::IsInitialized(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  return 1;
}

awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::Swap(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this, awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    int v6 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v6;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics.JammingMetricDataPerSignal");
}

double awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *((_DWORD *)this + 48) = 0;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *((_DWORD *)this + 54) = 0;
  *((_OWORD *)this + 14) = 0u;
  *((_DWORD *)this + 60) = 0;
  *((_DWORD *)this + 66) = 0;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 72) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_DWORD *)this + 78) = 0;
  *(_OWORD *)((char *)this + 296) = 0u;
  *((_DWORD *)this + 84) = 0;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 90) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 96) = 0;
  *((_OWORD *)this + 23) = 0u;
  *((_DWORD *)this + 156) = 0;
  *((_OWORD *)this + 38) = 0u;
  *((_DWORD *)this + 164) = 0;
  *((_OWORD *)this + 40) = 0u;
  *((_DWORD *)this + 176) = 0;
  *((_OWORD *)this + 43) = 0u;
  *((_DWORD *)this + 182) = 0;
  *(_OWORD *)((char *)this + 712) = 0u;
  *((_DWORD *)this + 218) = 0;
  *(_OWORD *)((char *)this + 856) = 0u;
  *((_DWORD *)this + 246) = 0;
  *(_OWORD *)((char *)this + 968) = 0u;
  *((_DWORD *)this + 252) = 0;
  *((_OWORD *)this + 62) = 0u;
  *((_DWORD *)this + 258) = 0;
  *(_OWORD *)((char *)this + 1016) = 0u;
  *((_DWORD *)this + 266) = 0;
  *(_OWORD *)((char *)this + 1048) = 0u;
  *((_DWORD *)this + 274) = 0;
  *(_OWORD *)((char *)this + 1080) = 0u;
  *((_DWORD *)this + 280) = 0;
  *((_OWORD *)this + 69) = 0u;
  *((_DWORD *)this + 286) = 0;
  *(_OWORD *)((char *)this + 1128) = 0u;
  *((_DWORD *)this + 292) = 0;
  *((_OWORD *)this + 72) = 0u;
  *((_DWORD *)this + 298) = 0;
  *(_OWORD *)((char *)this + 1176) = 0u;
  *((_DWORD *)this + 304) = 0;
  *((_OWORD *)this + 75) = 0u;
  *((_DWORD *)this + 310) = 0;
  *(_OWORD *)((char *)this + 1224) = 0u;
  *((_DWORD *)this + 316) = 0;
  *((_OWORD *)this + 78) = 0u;
  *((_DWORD *)this + 322) = 0;
  *(_OWORD *)((char *)this + 1272) = 0u;
  *((_DWORD *)this + 328) = 0;
  *((_OWORD *)this + 81) = 0u;
  *((_DWORD *)this + 334) = 0;
  *(_OWORD *)((char *)this + 1320) = 0u;
  *(void *)this = &unk_26D7BC070;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 79) = 0;
  *((void *)this + 134) = 0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 75) = 0;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *((void *)this + 85) = 0;
  *(_OWORD *)((char *)this + 664) = 0u;
  *((void *)this + 106) = 0;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((void *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 260) = 0;
  return result;
}

double awd::metrics::LocationGPSSessionStatistics::SharedCtor(awd::metrics::LocationGPSSessionStatistics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 79) = 0;
  *((void *)this + 134) = 0;
  double result = 0.0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 75) = 0;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *((void *)this + 85) = 0;
  *(_OWORD *)((char *)this + 664) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((void *)this + 106) = 0;
  *((void *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 260) = 0;
  return result;
}

awd::metrics::LocationGPSSessionStatistics *awd::metrics::LocationGPSSessionStatistics::LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_DWORD *)this + 30) = 0;
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *((_DWORD *)this + 48) = 0;
  *((_DWORD *)this + 54) = 0;
  *((_OWORD *)this + 14) = 0u;
  *((_DWORD *)this + 60) = 0;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 66) = 0;
  *((_DWORD *)this + 72) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_DWORD *)this + 78) = 0;
  *(_OWORD *)((char *)this + 296) = 0u;
  *((_DWORD *)this + 84) = 0;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 90) = 0;
  *(_OWORD *)((char *)this + 344) = 0u;
  *((_DWORD *)this + 96) = 0;
  *((_OWORD *)this + 23) = 0u;
  *((_DWORD *)this + 156) = 0;
  *((_OWORD *)this + 38) = 0u;
  *((_DWORD *)this + 164) = 0;
  *((_OWORD *)this + 40) = 0u;
  *((_DWORD *)this + 176) = 0;
  *((_OWORD *)this + 43) = 0u;
  *((_DWORD *)this + 182) = 0;
  *(_OWORD *)((char *)this + 712) = 0u;
  *((_DWORD *)this + 218) = 0;
  *(_OWORD *)((char *)this + 856) = 0u;
  *((_DWORD *)this + 246) = 0;
  *(_OWORD *)((char *)this + 968) = 0u;
  *((_DWORD *)this + 252) = 0;
  *((_OWORD *)this + 62) = 0u;
  *((_DWORD *)this + 258) = 0;
  *(_OWORD *)((char *)this + 1016) = 0u;
  *((_DWORD *)this + 266) = 0;
  *(_OWORD *)((char *)this + 1048) = 0u;
  *((_DWORD *)this + 274) = 0;
  *(_OWORD *)((char *)this + 1080) = 0u;
  *((_DWORD *)this + 280) = 0;
  *((_OWORD *)this + 69) = 0u;
  *((_DWORD *)this + 286) = 0;
  *(_OWORD *)((char *)this + 1128) = 0u;
  *((_DWORD *)this + 292) = 0;
  *((_OWORD *)this + 72) = 0u;
  *((_DWORD *)this + 298) = 0;
  *(_OWORD *)((char *)this + 1176) = 0u;
  *((_DWORD *)this + 304) = 0;
  *((_OWORD *)this + 75) = 0u;
  *((_DWORD *)this + 310) = 0;
  *(_OWORD *)((char *)this + 1224) = 0u;
  *((_DWORD *)this + 316) = 0;
  *((_OWORD *)this + 78) = 0u;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 536) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *(_OWORD *)((char *)this + 520) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 664) = 0u;
  *(_DWORD *)((char *)this + 1043) = 0;
  *((_DWORD *)this + 322) = 0;
  *(_OWORD *)((char *)this + 1272) = 0u;
  *((_DWORD *)this + 328) = 0;
  *((_OWORD *)this + 81) = 0u;
  *(void *)this = &unk_26D7BC070;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 334) = 0;
  *(_OWORD *)((char *)this + 1320) = 0u;
  *((void *)this + 79) = 0;
  *((void *)this + 134) = 0;
  *((_OWORD *)this + 84) = 0u;
  *((_OWORD *)this + 85) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 75) = 0;
  *((void *)this + 85) = 0;
  *((void *)this + 106) = 0;
  *((_OWORD *)this + 51) = 0u;
  *((_OWORD *)this + 52) = 0u;
  *((_OWORD *)this + 49) = 0u;
  *((_OWORD *)this + 50) = 0u;
  *((_OWORD *)this + 47) = 0u;
  *((_OWORD *)this + 48) = 0u;
  *((_OWORD *)this + 46) = 0u;
  *((void *)this + 120) = 0;
  *((_OWORD *)this + 58) = 0u;
  *((_OWORD *)this + 59) = 0u;
  *((_OWORD *)this + 56) = 0u;
  *((_OWORD *)this + 57) = 0u;
  *((_OWORD *)this + 55) = 0u;
  *((_DWORD *)this + 260) = 0;
  awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224957AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, uint64_t *a18, uint64_t *a19, uint64_t *a20,uint64_t *a21,uint64_t *a22,uint64_t *a23,uint64_t *a24,uint64_t *a25,uint64_t *a26,uint64_t *a27,uint64_t *a28,uint64_t *a29,uint64_t *a30)
{
  unsigned int v42 = v31;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>(v36);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v38);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v34);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v35);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(v39);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v37);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v42);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(v32);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(a15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>(v33);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>(a16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>(a17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>(a18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(a20);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(a21);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>(a22);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>(a23);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>(a24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(a25);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>(a26);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>(a27);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>(a28);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a29);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(a30);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(*(uint64_t **)(v40 - 160));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(*(uint64_t **)(v40 - 152));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 144));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 136));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 128));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(*(uint64_t **)(v40 - 120));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>(*(uint64_t **)(v40 - 112));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(*(uint64_t **)(v40 - 104));
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(*(uint64_t **)(v40 - 96));
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v30);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics::MergeFrom(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v270);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((void *)a2 + 7) + 8 * v4);
      int v6 = *((_DWORD *)this + 17);
      uint64_t v7 = *((int *)this + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 56));
          int v6 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v7 + 1;
      awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 16));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 80));
  if (*((int *)a2 + 22) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = *(const awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((void *)a2 + 10) + 8 * v9);
      int v11 = *((_DWORD *)this + 23);
      uint64_t v12 = *((int *)this + 22);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 80));
          int v11 = *((_DWORD *)this + 23);
        }
        *((_DWORD *)this + 23) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 10);
      *((_DWORD *)this + 22) = v12 + 1;
      awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 22));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 104));
  if (*((int *)a2 + 28) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(const awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(*((void *)a2 + 13) + 8 * v14);
      int v16 = *((_DWORD *)this + 29);
      uint64_t v17 = *((int *)this + 28);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 30))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 104));
          int v16 = *((_DWORD *)this + 29);
        }
        *((_DWORD *)this + 29) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 13);
      *((_DWORD *)this + 28) = v17 + 1;
      awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 28));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 128));
  if (*((int *)a2 + 34) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 16) + 8 * v19);
      int v21 = *((_DWORD *)this + 35);
      uint64_t v22 = *((int *)this + 34);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 36))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 128));
          int v21 = *((_DWORD *)this + 35);
        }
        *((_DWORD *)this + 35) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *((void *)this + 16);
      *((_DWORD *)this + 34) = v22 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 34));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 152));
  if (*((int *)a2 + 40) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      unsigned int v25 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 19) + 8 * v24);
      int v26 = *((_DWORD *)this + 41);
      uint64_t v27 = *((int *)this + 40);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 42))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 152));
          int v26 = *((_DWORD *)this + 41);
        }
        *((_DWORD *)this + 41) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *((void *)this + 19);
      *((_DWORD *)this + 40) = v27 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 40));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 176));
  if (*((int *)a2 + 46) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      unsigned int v30 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 22) + 8 * v29);
      int v31 = *((_DWORD *)this + 47);
      uint64_t v32 = *((int *)this + 46);
      if ((int)v32 >= v31)
      {
        if (v31 == *((_DWORD *)this + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 176));
          int v31 = *((_DWORD *)this + 47);
        }
        *((_DWORD *)this + 47) = v31 + 1;
        operator new();
      }
      uint64_t v33 = *((void *)this + 22);
      *((_DWORD *)this + 46) = v32 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v33 + 8 * v32), v30);
      ++v29;
    }
    while (v29 < *((int *)a2 + 46));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 200));
  if (*((int *)a2 + 52) >= 1)
  {
    uint64_t v34 = 0;
    do
    {
      int v35 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 25) + 8 * v34);
      int v36 = *((_DWORD *)this + 53);
      uint64_t v37 = *((int *)this + 52);
      if ((int)v37 >= v36)
      {
        if (v36 == *((_DWORD *)this + 54))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 200));
          int v36 = *((_DWORD *)this + 53);
        }
        *((_DWORD *)this + 53) = v36 + 1;
        operator new();
      }
      uint64_t v38 = *((void *)this + 25);
      *((_DWORD *)this + 52) = v37 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v38 + 8 * v37), v35);
      ++v34;
    }
    while (v34 < *((int *)a2 + 52));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 224));
  if (*((int *)a2 + 58) >= 1)
  {
    uint64_t v39 = 0;
    do
    {
      uint64_t v40 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 28) + 8 * v39);
      int v41 = *((_DWORD *)this + 59);
      uint64_t v42 = *((int *)this + 58);
      if ((int)v42 >= v41)
      {
        if (v41 == *((_DWORD *)this + 60))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 224));
          int v41 = *((_DWORD *)this + 59);
        }
        *((_DWORD *)this + 59) = v41 + 1;
        operator new();
      }
      uint64_t v43 = *((void *)this + 28);
      *((_DWORD *)this + 58) = v42 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v43 + 8 * v42), v40);
      ++v39;
    }
    while (v39 < *((int *)a2 + 58));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 248));
  if (*((int *)a2 + 64) >= 1)
  {
    uint64_t v44 = 0;
    do
    {
      int v45 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 31) + 8 * v44);
      uint64_t v46 = *((int *)this + 64);
      int v47 = *((_DWORD *)this + 65);
      if ((int)v46 >= v47)
      {
        if (v47 == *((_DWORD *)this + 66))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 248));
          int v47 = *((_DWORD *)this + 65);
        }
        *((_DWORD *)this + 65) = v47 + 1;
        operator new();
      }
      uint64_t v48 = *((void *)this + 31);
      *((_DWORD *)this + 64) = v46 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v48 + 8 * v46), v45);
      ++v44;
    }
    while (v44 < *((int *)a2 + 64));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 272));
  if (*((int *)a2 + 70) >= 1)
  {
    uint64_t v49 = 0;
    do
    {
      int v50 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 34) + 8 * v49);
      uint64_t v51 = *((int *)this + 70);
      int v52 = *((_DWORD *)this + 71);
      if ((int)v51 >= v52)
      {
        if (v52 == *((_DWORD *)this + 72))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 272));
          int v52 = *((_DWORD *)this + 71);
        }
        *((_DWORD *)this + 71) = v52 + 1;
        operator new();
      }
      uint64_t v53 = *((void *)this + 34);
      *((_DWORD *)this + 70) = v51 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v53 + 8 * v51), v50);
      ++v49;
    }
    while (v49 < *((int *)a2 + 70));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 296));
  if (*((int *)a2 + 76) >= 1)
  {
    uint64_t v54 = 0;
    do
    {
      int v55 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 37) + 8 * v54);
      uint64_t v56 = *((int *)this + 76);
      int v57 = *((_DWORD *)this + 77);
      if ((int)v56 >= v57)
      {
        if (v57 == *((_DWORD *)this + 78))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 296));
          int v57 = *((_DWORD *)this + 77);
        }
        *((_DWORD *)this + 77) = v57 + 1;
        operator new();
      }
      uint64_t v58 = *((void *)this + 37);
      *((_DWORD *)this + 76) = v56 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v58 + 8 * v56), v55);
      ++v54;
    }
    while (v54 < *((int *)a2 + 76));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 320));
  if (*((int *)a2 + 82) >= 1)
  {
    uint64_t v59 = 0;
    do
    {
      uint64_t v60 = *(const awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(*((void *)a2 + 40) + 8 * v59);
      uint64_t v61 = *((int *)this + 82);
      int v62 = *((_DWORD *)this + 83);
      if ((int)v61 >= v62)
      {
        if (v62 == *((_DWORD *)this + 84))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 320));
          int v62 = *((_DWORD *)this + 83);
        }
        *((_DWORD *)this + 83) = v62 + 1;
        operator new();
      }
      uint64_t v63 = *((void *)this + 40);
      *((_DWORD *)this + 82) = v61 + 1;
      awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(v63 + 8 * v61), v60);
      ++v59;
    }
    while (v59 < *((int *)a2 + 82));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 344));
  if (*((int *)a2 + 88) >= 1)
  {
    uint64_t v64 = 0;
    do
    {
      int v65 = *(const awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(*((void *)a2 + 43) + 8 * v64);
      uint64_t v66 = *((int *)this + 88);
      int v67 = *((_DWORD *)this + 89);
      if ((int)v66 >= v67)
      {
        if (v67 == *((_DWORD *)this + 90))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 344));
          int v67 = *((_DWORD *)this + 89);
        }
        *((_DWORD *)this + 89) = v67 + 1;
        operator new();
      }
      uint64_t v68 = *((void *)this + 43);
      *((_DWORD *)this + 88) = v66 + 1;
      awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(v68 + 8 * v66), v65);
      ++v64;
    }
    while (v64 < *((int *)a2 + 88));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 368));
  if (*((int *)a2 + 94) >= 1)
  {
    uint64_t v69 = 0;
    do
    {
      int v70 = *(const awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(*((void *)a2 + 46) + 8 * v69);
      uint64_t v71 = *((int *)this + 94);
      int v72 = *((_DWORD *)this + 95);
      if ((int)v71 >= v72)
      {
        if (v72 == *((_DWORD *)this + 96))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 368));
          int v72 = *((_DWORD *)this + 95);
        }
        *((_DWORD *)this + 95) = v72 + 1;
        operator new();
      }
      uint64_t v73 = *((void *)this + 46);
      *((_DWORD *)this + 94) = v71 + 1;
      awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(v73 + 8 * v71), v70);
      ++v69;
    }
    while (v69 < *((int *)a2 + 94));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 608));
  if (*((int *)a2 + 154) >= 1)
  {
    uint64_t v74 = 0;
    do
    {
      signed int v75 = *(const awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((void *)a2 + 76) + 8 * v74);
      uint64_t v76 = *((int *)this + 154);
      int v77 = *((_DWORD *)this + 155);
      if ((int)v76 >= v77)
      {
        if (v77 == *((_DWORD *)this + 156))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 608));
          int v77 = *((_DWORD *)this + 155);
        }
        *((_DWORD *)this + 155) = v77 + 1;
        operator new();
      }
      uint64_t v78 = *((void *)this + 76);
      *((_DWORD *)this + 154) = v76 + 1;
      awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v78 + 8 * v76), v75);
      ++v74;
    }
    while (v74 < *((int *)a2 + 154));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 640));
  if (*((int *)a2 + 162) >= 1)
  {
    uint64_t v79 = 0;
    do
    {
      unsigned int v80 = *(const awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(*((void *)a2 + 80) + 8 * v79);
      uint64_t v81 = *((int *)this + 162);
      int v82 = *((_DWORD *)this + 163);
      if ((int)v81 >= v82)
      {
        if (v82 == *((_DWORD *)this + 164))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 640));
          int v82 = *((_DWORD *)this + 163);
        }
        *((_DWORD *)this + 163) = v82 + 1;
        operator new();
      }
      uint64_t v83 = *((void *)this + 80);
      *((_DWORD *)this + 162) = v81 + 1;
      awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(v83 + 8 * v81), v80);
      ++v79;
    }
    while (v79 < *((int *)a2 + 162));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 688));
  if (*((int *)a2 + 174) >= 1)
  {
    uint64_t v84 = 0;
    do
    {
      int v85 = *(const awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(*((void *)a2 + 86) + 8 * v84);
      uint64_t v86 = *((int *)this + 174);
      int v87 = *((_DWORD *)this + 175);
      if ((int)v86 >= v87)
      {
        if (v87 == *((_DWORD *)this + 176))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 688));
          int v87 = *((_DWORD *)this + 175);
        }
        *((_DWORD *)this + 175) = v87 + 1;
        operator new();
      }
      uint64_t v88 = *((void *)this + 86);
      *((_DWORD *)this + 174) = v86 + 1;
      awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(v88 + 8 * v86), v85);
      ++v84;
    }
    while (v84 < *((int *)a2 + 174));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 712));
  if (*((int *)a2 + 180) >= 1)
  {
    uint64_t v89 = 0;
    do
    {
      int v90 = *(const awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(*((void *)a2 + 89) + 8 * v89);
      uint64_t v91 = *((int *)this + 180);
      int v92 = *((_DWORD *)this + 181);
      if ((int)v91 >= v92)
      {
        if (v92 == *((_DWORD *)this + 182))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 712));
          int v92 = *((_DWORD *)this + 181);
        }
        *((_DWORD *)this + 181) = v92 + 1;
        operator new();
      }
      uint64_t v93 = *((void *)this + 89);
      *((_DWORD *)this + 180) = v91 + 1;
      awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(v93 + 8 * v91), v90);
      ++v89;
    }
    while (v89 < *((int *)a2 + 180));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 856));
  if (*((int *)a2 + 216) >= 1)
  {
    uint64_t v94 = 0;
    do
    {
      int v95 = *(const awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((void *)a2 + 107) + 8 * v94);
      uint64_t v96 = *((int *)this + 216);
      int v97 = *((_DWORD *)this + 217);
      if ((int)v96 >= v97)
      {
        if (v97 == *((_DWORD *)this + 218))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 856));
          int v97 = *((_DWORD *)this + 217);
        }
        *((_DWORD *)this + 217) = v97 + 1;
        operator new();
      }
      uint64_t v98 = *((void *)this + 107);
      *((_DWORD *)this + 216) = v96 + 1;
      awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v98 + 8 * v96), v95);
      ++v94;
    }
    while (v94 < *((int *)a2 + 216));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 968));
  if (*((int *)a2 + 244) >= 1)
  {
    uint64_t v99 = 0;
    do
    {
      uint64_t v100 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 121) + 8 * v99);
      uint64_t v101 = *((int *)this + 244);
      int v102 = *((_DWORD *)this + 245);
      if ((int)v101 >= v102)
      {
        if (v102 == *((_DWORD *)this + 246))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 968));
          int v102 = *((_DWORD *)this + 245);
        }
        *((_DWORD *)this + 245) = v102 + 1;
        operator new();
      }
      uint64_t v103 = *((void *)this + 121);
      *((_DWORD *)this + 244) = v101 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v103 + 8 * v101), v100);
      ++v99;
    }
    while (v99 < *((int *)a2 + 244));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 992));
  if (*((int *)a2 + 250) >= 1)
  {
    uint64_t v104 = 0;
    do
    {
      int v105 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 124)
                                                                                          + 8 * v104);
      uint64_t v106 = *((int *)this + 250);
      int v107 = *((_DWORD *)this + 251);
      if ((int)v106 >= v107)
      {
        if (v107 == *((_DWORD *)this + 252))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 992));
          int v107 = *((_DWORD *)this + 251);
        }
        *((_DWORD *)this + 251) = v107 + 1;
        operator new();
      }
      uint64_t v108 = *((void *)this + 124);
      *((_DWORD *)this + 250) = v106 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v108 + 8 * v106), v105);
      ++v104;
    }
    while (v104 < *((int *)a2 + 250));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1016));
  if (*((int *)a2 + 256) >= 1)
  {
    uint64_t v109 = 0;
    do
    {
      unsigned int v110 = *(const awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(*((void *)a2 + 127) + 8 * v109);
      uint64_t v111 = *((int *)this + 256);
      int v112 = *((_DWORD *)this + 257);
      if ((int)v111 >= v112)
      {
        if (v112 == *((_DWORD *)this + 258))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1016));
          int v112 = *((_DWORD *)this + 257);
        }
        *((_DWORD *)this + 257) = v112 + 1;
        operator new();
      }
      uint64_t v113 = *((void *)this + 127);
      *((_DWORD *)this + 256) = v111 + 1;
      awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(v113 + 8 * v111), v110);
      ++v109;
    }
    while (v109 < *((int *)a2 + 256));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1048));
  if (*((int *)a2 + 264) >= 1)
  {
    uint64_t v114 = 0;
    do
    {
      int v115 = *(const awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(*((void *)a2 + 131) + 8 * v114);
      uint64_t v116 = *((int *)this + 264);
      int v117 = *((_DWORD *)this + 265);
      if ((int)v116 >= v117)
      {
        if (v117 == *((_DWORD *)this + 266))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1048));
          int v117 = *((_DWORD *)this + 265);
        }
        *((_DWORD *)this + 265) = v117 + 1;
        operator new();
      }
      uint64_t v118 = *((void *)this + 131);
      *((_DWORD *)this + 264) = v116 + 1;
      awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(v118 + 8 * v116), v115);
      ++v114;
    }
    while (v114 < *((int *)a2 + 264));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1080));
  if (*((int *)a2 + 272) >= 1)
  {
    uint64_t v119 = 0;
    do
    {
      unsigned int v120 = *(const awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(*((void *)a2 + 135) + 8 * v119);
      uint64_t v121 = *((int *)this + 272);
      int v122 = *((_DWORD *)this + 273);
      if ((int)v121 >= v122)
      {
        if (v122 == *((_DWORD *)this + 274))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1080));
          int v122 = *((_DWORD *)this + 273);
        }
        *((_DWORD *)this + 273) = v122 + 1;
        operator new();
      }
      uint64_t v123 = *((void *)this + 135);
      *((_DWORD *)this + 272) = v121 + 1;
      awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(v123 + 8 * v121), v120);
      ++v119;
    }
    while (v119 < *((int *)a2 + 272));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1104));
  if (*((int *)a2 + 278) >= 1)
  {
    uint64_t v124 = 0;
    do
    {
      int v125 = *(const awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(*((void *)a2 + 138) + 8 * v124);
      uint64_t v126 = *((int *)this + 278);
      int v127 = *((_DWORD *)this + 279);
      if ((int)v126 >= v127)
      {
        if (v127 == *((_DWORD *)this + 280))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1104));
          int v127 = *((_DWORD *)this + 279);
        }
        *((_DWORD *)this + 279) = v127 + 1;
        operator new();
      }
      uint64_t v128 = *((void *)this + 138);
      *((_DWORD *)this + 278) = v126 + 1;
      awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(v128 + 8 * v126), v125);
      ++v124;
    }
    while (v124 < *((int *)a2 + 278));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1128));
  if (*((int *)a2 + 284) >= 1)
  {
    uint64_t v129 = 0;
    do
    {
      int v130 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 141)
                                                                                        + 8 * v129);
      uint64_t v131 = *((int *)this + 284);
      int v132 = *((_DWORD *)this + 285);
      if ((int)v131 >= v132)
      {
        if (v132 == *((_DWORD *)this + 286))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1128));
          int v132 = *((_DWORD *)this + 285);
        }
        *((_DWORD *)this + 285) = v132 + 1;
        operator new();
      }
      uint64_t v133 = *((void *)this + 141);
      *((_DWORD *)this + 284) = v131 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v133 + 8 * v131), v130);
      ++v129;
    }
    while (v129 < *((int *)a2 + 284));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1152));
  if (*((int *)a2 + 290) >= 1)
  {
    uint64_t v134 = 0;
    do
    {
      int v135 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 144)
                                                                                        + 8 * v134);
      uint64_t v136 = *((int *)this + 290);
      int v137 = *((_DWORD *)this + 291);
      if ((int)v136 >= v137)
      {
        if (v137 == *((_DWORD *)this + 292))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1152));
          int v137 = *((_DWORD *)this + 291);
        }
        *((_DWORD *)this + 291) = v137 + 1;
        operator new();
      }
      uint64_t v138 = *((void *)this + 144);
      *((_DWORD *)this + 290) = v136 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v138 + 8 * v136), v135);
      ++v134;
    }
    while (v134 < *((int *)a2 + 290));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1176));
  if (*((int *)a2 + 296) >= 1)
  {
    uint64_t v139 = 0;
    do
    {
      int v140 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 147)
                                                                                        + 8 * v139);
      uint64_t v141 = *((int *)this + 296);
      int v142 = *((_DWORD *)this + 297);
      if ((int)v141 >= v142)
      {
        if (v142 == *((_DWORD *)this + 298))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1176));
          int v142 = *((_DWORD *)this + 297);
        }
        *((_DWORD *)this + 297) = v142 + 1;
        operator new();
      }
      uint64_t v143 = *((void *)this + 147);
      *((_DWORD *)this + 296) = v141 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v143 + 8 * v141), v140);
      ++v139;
    }
    while (v139 < *((int *)a2 + 296));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1200));
  if (*((int *)a2 + 302) >= 1)
  {
    uint64_t v144 = 0;
    do
    {
      int v145 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)a2 + 150)
                                                                                        + 8 * v144);
      uint64_t v146 = *((int *)this + 302);
      int v147 = *((_DWORD *)this + 303);
      if ((int)v146 >= v147)
      {
        if (v147 == *((_DWORD *)this + 304))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1200));
          int v147 = *((_DWORD *)this + 303);
        }
        *((_DWORD *)this + 303) = v147 + 1;
        operator new();
      }
      uint64_t v148 = *((void *)this + 150);
      *((_DWORD *)this + 302) = v146 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v148 + 8 * v146), v145);
      ++v144;
    }
    while (v144 < *((int *)a2 + 302));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1224));
  if (*((int *)a2 + 308) >= 1)
  {
    uint64_t v149 = 0;
    do
    {
      int v150 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 153)
                                                                                          + 8 * v149);
      uint64_t v151 = *((int *)this + 308);
      int v152 = *((_DWORD *)this + 309);
      if ((int)v151 >= v152)
      {
        if (v152 == *((_DWORD *)this + 310))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1224));
          int v152 = *((_DWORD *)this + 309);
        }
        *((_DWORD *)this + 309) = v152 + 1;
        operator new();
      }
      uint64_t v153 = *((void *)this + 153);
      *((_DWORD *)this + 308) = v151 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v153 + 8 * v151), v150);
      ++v149;
    }
    while (v149 < *((int *)a2 + 308));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1248));
  if (*((int *)a2 + 314) >= 1)
  {
    uint64_t v154 = 0;
    do
    {
      int v155 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 156)
                                                                                          + 8 * v154);
      uint64_t v156 = *((int *)this + 314);
      int v157 = *((_DWORD *)this + 315);
      if ((int)v156 >= v157)
      {
        if (v157 == *((_DWORD *)this + 316))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1248));
          int v157 = *((_DWORD *)this + 315);
        }
        *((_DWORD *)this + 315) = v157 + 1;
        operator new();
      }
      uint64_t v158 = *((void *)this + 156);
      *((_DWORD *)this + 314) = v156 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v158 + 8 * v156), v155);
      ++v154;
    }
    while (v154 < *((int *)a2 + 314));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1272));
  if (*((int *)a2 + 320) >= 1)
  {
    uint64_t v159 = 0;
    do
    {
      int v160 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 159)
                                                                                          + 8 * v159);
      uint64_t v161 = *((int *)this + 320);
      int v162 = *((_DWORD *)this + 321);
      if ((int)v161 >= v162)
      {
        if (v162 == *((_DWORD *)this + 322))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1272));
          int v162 = *((_DWORD *)this + 321);
        }
        *((_DWORD *)this + 321) = v162 + 1;
        operator new();
      }
      uint64_t v163 = *((void *)this + 159);
      *((_DWORD *)this + 320) = v161 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v163 + 8 * v161), v160);
      ++v159;
    }
    while (v159 < *((int *)a2 + 320));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1296));
  if (*((int *)a2 + 326) >= 1)
  {
    uint64_t v164 = 0;
    do
    {
      int v165 = *(const awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)a2 + 162)
                                                                                          + 8 * v164);
      uint64_t v166 = *((int *)this + 326);
      int v167 = *((_DWORD *)this + 327);
      if ((int)v166 >= v167)
      {
        if (v167 == *((_DWORD *)this + 328))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1296));
          int v167 = *((_DWORD *)this + 327);
        }
        *((_DWORD *)this + 327) = v167 + 1;
        operator new();
      }
      uint64_t v168 = *((void *)this + 162);
      *((_DWORD *)this + 326) = v166 + 1;
      awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v168 + 8 * v166), v165);
      ++v164;
    }
    while (v164 < *((int *)a2 + 326));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1320));
  if (*((int *)a2 + 332) >= 1)
  {
    uint64_t v169 = 0;
    do
    {
      int v170 = *(const awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(*((void *)a2 + 165)
                                                                                             + 8 * v169);
      uint64_t v171 = *((int *)this + 332);
      int v172 = *((_DWORD *)this + 333);
      if ((int)v171 >= v172)
      {
        if (v172 == *((_DWORD *)this + 334))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1320));
          int v172 = *((_DWORD *)this + 333);
        }
        *((_DWORD *)this + 333) = v172 + 1;
        operator new();
      }
      uint64_t v173 = *((void *)this + 165);
      *((_DWORD *)this + 332) = v171 + 1;
      awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergeFrom(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(v173 + 8 * v171), v170);
      ++v169;
    }
    while (v169 < *((int *)a2 + 332));
  }
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if (!(_BYTE)v174) {
    goto LABEL_285;
  }
  if (v174)
  {
    uint64_t v182 = *((void *)a2 + 1);
    *((_DWORD *)this + 340) |= 1u;
    *((void *)this + 1) = v182;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 2) == 0)
    {
LABEL_278:
      if ((v174 & 4) == 0) {
        goto LABEL_279;
      }
      goto LABEL_339;
    }
  }
  else if ((v174 & 2) == 0)
  {
    goto LABEL_278;
  }
  int v183 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 340) |= 2u;
  int v184 = (std::string *)*((void *)this + 2);
  if (v184 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v184, v183);
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if ((v174 & 4) == 0)
  {
LABEL_279:
    if ((v174 & 8) == 0) {
      goto LABEL_280;
    }
    goto LABEL_340;
  }
LABEL_339:
  uint64_t v185 = *((void *)a2 + 3);
  *((_DWORD *)this + 340) |= 4u;
  *((void *)this + 3) = v185;
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if ((v174 & 8) == 0)
  {
LABEL_280:
    if ((v174 & 0x10) == 0) {
      goto LABEL_281;
    }
    goto LABEL_341;
  }
LABEL_340:
  int v186 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 340) |= 8u;
  *((_DWORD *)this + 10) = v186;
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if ((v174 & 0x10) == 0)
  {
LABEL_281:
    if ((v174 & 0x20) == 0) {
      goto LABEL_282;
    }
LABEL_342:
    int v188 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 340) |= 0x20u;
    *((_DWORD *)this + 11) = v188;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x40) == 0)
    {
LABEL_283:
      if ((v174 & 0x80) == 0) {
        goto LABEL_285;
      }
      goto LABEL_284;
    }
    goto LABEL_343;
  }
LABEL_341:
  uint64_t v187 = *((void *)a2 + 4);
  *((_DWORD *)this + 340) |= 0x10u;
  *((void *)this + 4) = v187;
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if ((v174 & 0x20) != 0) {
    goto LABEL_342;
  }
LABEL_282:
  if ((v174 & 0x40) == 0) {
    goto LABEL_283;
  }
LABEL_343:
  int v189 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 340) |= 0x40u;
  *((_DWORD *)this + 12) = v189;
  unsigned int v174 = *((_DWORD *)a2 + 340);
  if ((v174 & 0x80) != 0)
  {
LABEL_284:
    int v175 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 340) |= 0x80u;
    *((_DWORD *)this + 13) = v175;
    unsigned int v174 = *((_DWORD *)a2 + 340);
  }
LABEL_285:
  if ((v174 & 0x400) != 0)
  {
    int v176 = *((_DWORD *)a2 + 108);
    *((_DWORD *)this + 340) |= 0x400u;
    *((_DWORD *)this + 108) = v176;
    unsigned int v174 = *((_DWORD *)a2 + 340);
  }
  if ((v174 & 0x800000) != 0)
  {
    uint64_t v177 = *((void *)a2 + 49);
    *((_DWORD *)this + 340) |= 0x800000u;
    *((void *)this + 49) = v177;
    unsigned int v174 = *((_DWORD *)a2 + 340);
  }
  if (HIBYTE(v174))
  {
    if ((v174 & 0x1000000) != 0)
    {
      uint64_t v211 = *((void *)a2 + 50);
      *((_DWORD *)this + 340) |= 0x1000000u;
      *((void *)this + 50) = v211;
      unsigned int v174 = *((_DWORD *)a2 + 340);
      if ((v174 & 0x2000000) == 0)
      {
LABEL_292:
        if ((v174 & 0x4000000) == 0) {
          goto LABEL_293;
        }
        goto LABEL_372;
      }
    }
    else if ((v174 & 0x2000000) == 0)
    {
      goto LABEL_292;
    }
    uint64_t v212 = *((void *)a2 + 51);
    *((_DWORD *)this + 340) |= 0x2000000u;
    *((void *)this + 51) = v212;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x4000000) == 0)
    {
LABEL_293:
      if ((v174 & 0x8000000) == 0) {
        goto LABEL_294;
      }
      goto LABEL_373;
    }
LABEL_372:
    uint64_t v213 = *((void *)a2 + 52);
    *((_DWORD *)this + 340) |= 0x4000000u;
    *((void *)this + 52) = v213;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x8000000) == 0)
    {
LABEL_294:
      if ((v174 & 0x10000000) == 0) {
        goto LABEL_295;
      }
      goto LABEL_374;
    }
LABEL_373:
    uint64_t v214 = *((void *)a2 + 53);
    *((_DWORD *)this + 340) |= 0x8000000u;
    *((void *)this + 53) = v214;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x10000000) == 0)
    {
LABEL_295:
      if ((v174 & 0x20000000) == 0) {
        goto LABEL_296;
      }
      goto LABEL_375;
    }
LABEL_374:
    char v215 = *((unsigned char *)a2 + 576);
    *((_DWORD *)this + 340) |= 0x10000000u;
    *((unsigned char *)this + 576) = v215;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x20000000) == 0)
    {
LABEL_296:
      if ((v174 & 0x40000000) == 0) {
        goto LABEL_297;
      }
      goto LABEL_376;
    }
LABEL_375:
    char v216 = *((unsigned char *)a2 + 577);
    *((_DWORD *)this + 340) |= 0x20000000u;
    *((unsigned char *)this + 577) = v216;
    unsigned int v174 = *((_DWORD *)a2 + 340);
    if ((v174 & 0x40000000) == 0)
    {
LABEL_297:
      if ((v174 & 0x80000000) == 0) {
        goto LABEL_298;
      }
LABEL_377:
      uint64_t v218 = *((void *)a2 + 56);
      *((_DWORD *)this + 340) |= 0x80000000;
      *((void *)this + 56) = v218;
      goto LABEL_298;
    }
LABEL_376:
    uint64_t v217 = *((void *)a2 + 55);
    *((_DWORD *)this + 340) |= 0x40000000u;
    *((void *)this + 55) = v217;
    if ((*((_DWORD *)a2 + 340) & 0x80000000) == 0) {
      goto LABEL_298;
    }
    goto LABEL_377;
  }
LABEL_298:
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if (!(_BYTE)v178) {
    goto LABEL_308;
  }
  if (v178)
  {
    uint64_t v190 = *((void *)a2 + 57);
    *((_DWORD *)this + 341) |= 1u;
    *((void *)this + 57) = v190;
    unsigned int v178 = *((_DWORD *)a2 + 341);
    if ((v178 & 2) == 0)
    {
LABEL_301:
      if ((v178 & 4) == 0) {
        goto LABEL_302;
      }
      goto LABEL_347;
    }
  }
  else if ((v178 & 2) == 0)
  {
    goto LABEL_301;
  }
  uint64_t v191 = *((void *)a2 + 58);
  *((_DWORD *)this + 341) |= 2u;
  *((void *)this + 58) = v191;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 4) == 0)
  {
LABEL_302:
    if ((v178 & 8) == 0) {
      goto LABEL_303;
    }
    goto LABEL_348;
  }
LABEL_347:
  uint64_t v192 = *((void *)a2 + 59);
  *((_DWORD *)this + 341) |= 4u;
  *((void *)this + 59) = v192;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 8) == 0)
  {
LABEL_303:
    if ((v178 & 0x10) == 0) {
      goto LABEL_304;
    }
    goto LABEL_349;
  }
LABEL_348:
  uint64_t v193 = *((void *)a2 + 60);
  *((_DWORD *)this + 341) |= 8u;
  *((void *)this + 60) = v193;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x10) == 0)
  {
LABEL_304:
    if ((v178 & 0x20) == 0) {
      goto LABEL_305;
    }
    goto LABEL_350;
  }
LABEL_349:
  uint64_t v194 = *((void *)a2 + 61);
  *((_DWORD *)this + 341) |= 0x10u;
  *((void *)this + 61) = v194;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x20) == 0)
  {
LABEL_305:
    if ((v178 & 0x40) == 0) {
      goto LABEL_306;
    }
    goto LABEL_351;
  }
LABEL_350:
  uint64_t v195 = *((void *)a2 + 62);
  *((_DWORD *)this + 341) |= 0x20u;
  *((void *)this + 62) = v195;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x40) == 0)
  {
LABEL_306:
    if ((v178 & 0x80) == 0) {
      goto LABEL_308;
    }
    goto LABEL_307;
  }
LABEL_351:
  uint64_t v196 = *((void *)a2 + 63);
  *((_DWORD *)this + 341) |= 0x40u;
  *((void *)this + 63) = v196;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x80) != 0)
  {
LABEL_307:
    uint64_t v179 = *((void *)a2 + 64);
    *((_DWORD *)this + 341) |= 0x80u;
    *((void *)this + 64) = v179;
    unsigned int v178 = *((_DWORD *)a2 + 341);
  }
LABEL_308:
  if ((v178 & 0xFF00) == 0) {
    goto LABEL_318;
  }
  if ((v178 & 0x100) != 0)
  {
    uint64_t v197 = *((void *)a2 + 65);
    *((_DWORD *)this + 341) |= 0x100u;
    *((void *)this + 65) = v197;
    unsigned int v178 = *((_DWORD *)a2 + 341);
    if ((v178 & 0x200) == 0)
    {
LABEL_311:
      if ((v178 & 0x400) == 0) {
        goto LABEL_312;
      }
      goto LABEL_355;
    }
  }
  else if ((v178 & 0x200) == 0)
  {
    goto LABEL_311;
  }
  uint64_t v198 = *((void *)a2 + 66);
  *((_DWORD *)this + 341) |= 0x200u;
  *((void *)this + 66) = v198;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x400) == 0)
  {
LABEL_312:
    if ((v178 & 0x800) == 0) {
      goto LABEL_313;
    }
    goto LABEL_356;
  }
LABEL_355:
  uint64_t v199 = *((void *)a2 + 67);
  *((_DWORD *)this + 341) |= 0x400u;
  *((void *)this + 67) = v199;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x800) == 0)
  {
LABEL_313:
    if ((v178 & 0x1000) == 0) {
      goto LABEL_314;
    }
    goto LABEL_357;
  }
LABEL_356:
  uint64_t v200 = *((void *)a2 + 68);
  *((_DWORD *)this + 341) |= 0x800u;
  *((void *)this + 68) = v200;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x1000) == 0)
  {
LABEL_314:
    if ((v178 & 0x2000) == 0) {
      goto LABEL_315;
    }
    goto LABEL_358;
  }
LABEL_357:
  uint64_t v201 = *((void *)a2 + 69);
  *((_DWORD *)this + 341) |= 0x1000u;
  *((void *)this + 69) = v201;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x2000) == 0)
  {
LABEL_315:
    if ((v178 & 0x4000) == 0) {
      goto LABEL_316;
    }
    goto LABEL_359;
  }
LABEL_358:
  uint64_t v202 = *((void *)a2 + 70);
  *((_DWORD *)this + 341) |= 0x2000u;
  *((void *)this + 70) = v202;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x4000) == 0)
  {
LABEL_316:
    if ((v178 & 0x8000) == 0) {
      goto LABEL_318;
    }
    goto LABEL_317;
  }
LABEL_359:
  uint64_t v203 = *((void *)a2 + 71);
  *((_DWORD *)this + 341) |= 0x4000u;
  *((void *)this + 71) = v203;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x8000) != 0)
  {
LABEL_317:
    int v180 = *((_DWORD *)a2 + 109);
    *((_DWORD *)this + 341) |= 0x8000u;
    *((_DWORD *)this + 109) = v180;
    unsigned int v178 = *((_DWORD *)a2 + 341);
  }
LABEL_318:
  if ((v178 & 0xFF0000) == 0) {
    goto LABEL_328;
  }
  if ((v178 & 0x10000) != 0)
  {
    int v204 = *((_DWORD *)a2 + 145);
    *((_DWORD *)this + 341) |= 0x10000u;
    *((_DWORD *)this + 145) = v204;
    unsigned int v178 = *((_DWORD *)a2 + 341);
    if ((v178 & 0x20000) == 0)
    {
LABEL_321:
      if ((v178 & 0x40000) == 0) {
        goto LABEL_322;
      }
      goto LABEL_363;
    }
  }
  else if ((v178 & 0x20000) == 0)
  {
    goto LABEL_321;
  }
  int v205 = *((_DWORD *)a2 + 146);
  *((_DWORD *)this + 341) |= 0x20000u;
  *((_DWORD *)this + 146) = v205;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x40000) == 0)
  {
LABEL_322:
    if ((v178 & 0x80000) == 0) {
      goto LABEL_323;
    }
    goto LABEL_364;
  }
LABEL_363:
  int v206 = *((_DWORD *)a2 + 147);
  *((_DWORD *)this + 341) |= 0x40000u;
  *((_DWORD *)this + 147) = v206;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x80000) == 0)
  {
LABEL_323:
    if ((v178 & 0x100000) == 0) {
      goto LABEL_324;
    }
    goto LABEL_366;
  }
LABEL_364:
  unsigned int v207 = *((_DWORD *)a2 + 148);
  if (v207 >= 0xD) {
    awd::metrics::LocationGPSSessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 341) |= 0x80000u;
  *((_DWORD *)this + 148) = v207;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x100000) == 0)
  {
LABEL_324:
    if ((v178 & 0x200000) == 0) {
      goto LABEL_325;
    }
    goto LABEL_367;
  }
LABEL_366:
  int v208 = *((_DWORD *)a2 + 149);
  *((_DWORD *)this + 341) |= 0x100000u;
  *((_DWORD *)this + 149) = v208;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x200000) == 0)
  {
LABEL_325:
    if ((v178 & 0x400000) == 0) {
      goto LABEL_326;
    }
    goto LABEL_368;
  }
LABEL_367:
  int v209 = *((_DWORD *)a2 + 150);
  *((_DWORD *)this + 341) |= 0x200000u;
  *((_DWORD *)this + 150) = v209;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x400000) == 0)
  {
LABEL_326:
    if ((v178 & 0x800000) == 0) {
      goto LABEL_328;
    }
    goto LABEL_327;
  }
LABEL_368:
  int v210 = *((_DWORD *)a2 + 151);
  *((_DWORD *)this + 341) |= 0x400000u;
  *((_DWORD *)this + 151) = v210;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x800000) != 0)
  {
LABEL_327:
    char v181 = *((unsigned char *)a2 + 578);
    *((_DWORD *)this + 341) |= 0x800000u;
    *((unsigned char *)this + 578) = v181;
    unsigned int v178 = *((_DWORD *)a2 + 341);
  }
LABEL_328:
  if (!(v178 >> 25)) {
    goto LABEL_384;
  }
  if ((v178 & 0x2000000) != 0)
  {
    uint64_t v219 = *((void *)a2 + 79);
    *((_DWORD *)this + 341) |= 0x2000000u;
    *((void *)this + 79) = v219;
    unsigned int v178 = *((_DWORD *)a2 + 341);
    if ((v178 & 0x8000000) == 0)
    {
LABEL_331:
      if ((v178 & 0x10000000) == 0) {
        goto LABEL_332;
      }
      goto LABEL_380;
    }
  }
  else if ((v178 & 0x8000000) == 0)
  {
    goto LABEL_331;
  }
  uint64_t v220 = *((void *)a2 + 83);
  *((_DWORD *)this + 341) |= 0x8000000u;
  *((void *)this + 83) = v220;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x10000000) == 0)
  {
LABEL_332:
    if ((v178 & 0x20000000) == 0) {
      goto LABEL_333;
    }
LABEL_381:
    uint64_t v222 = *((void *)a2 + 85);
    *((_DWORD *)this + 341) |= 0x20000000u;
    *((void *)this + 85) = v222;
    if ((*((_DWORD *)a2 + 341) & 0x80000000) == 0) {
      goto LABEL_384;
    }
    goto LABEL_382;
  }
LABEL_380:
  uint64_t v221 = *((void *)a2 + 84);
  *((_DWORD *)this + 341) |= 0x10000000u;
  *((void *)this + 84) = v221;
  unsigned int v178 = *((_DWORD *)a2 + 341);
  if ((v178 & 0x20000000) != 0) {
    goto LABEL_381;
  }
LABEL_333:
  if ((v178 & 0x80000000) == 0) {
    goto LABEL_384;
  }
LABEL_382:
  unsigned int v223 = *((_DWORD *)a2 + 202);
  if (v223 >= 0xE) {
    awd::metrics::LocationGPSSessionStatistics::MergeFrom();
  }
  *((_DWORD *)this + 341) |= 0x80000000;
  *((_DWORD *)this + 202) = v223;
LABEL_384:
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x1FE) == 0) {
    goto LABEL_393;
  }
  if ((v224 & 2) != 0)
  {
    uint64_t v235 = *((void *)a2 + 92);
    *((_DWORD *)this + 342) |= 2u;
    *((void *)this + 92) = v235;
    unsigned int v224 = *((_DWORD *)a2 + 342);
    if ((v224 & 4) == 0)
    {
LABEL_387:
      if ((v224 & 8) == 0) {
        goto LABEL_388;
      }
      goto LABEL_448;
    }
  }
  else if ((v224 & 4) == 0)
  {
    goto LABEL_387;
  }
  uint64_t v236 = *((void *)a2 + 93);
  *((_DWORD *)this + 342) |= 4u;
  *((void *)this + 93) = v236;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 8) == 0)
  {
LABEL_388:
    if ((v224 & 0x10) == 0) {
      goto LABEL_389;
    }
    goto LABEL_449;
  }
LABEL_448:
  uint64_t v237 = *((void *)a2 + 94);
  *((_DWORD *)this + 342) |= 8u;
  *((void *)this + 94) = v237;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x10) == 0)
  {
LABEL_389:
    if ((v224 & 0x20) == 0) {
      goto LABEL_390;
    }
    goto LABEL_450;
  }
LABEL_449:
  uint64_t v238 = *((void *)a2 + 95);
  *((_DWORD *)this + 342) |= 0x10u;
  *((void *)this + 95) = v238;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x20) == 0)
  {
LABEL_390:
    if ((v224 & 0x40) == 0) {
      goto LABEL_391;
    }
    goto LABEL_451;
  }
LABEL_450:
  uint64_t v239 = *((void *)a2 + 96);
  *((_DWORD *)this + 342) |= 0x20u;
  *((void *)this + 96) = v239;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x40) == 0)
  {
LABEL_391:
    if ((v224 & 0x80) == 0) {
      goto LABEL_393;
    }
    goto LABEL_392;
  }
LABEL_451:
  uint64_t v240 = *((void *)a2 + 97);
  *((_DWORD *)this + 342) |= 0x40u;
  *((void *)this + 97) = v240;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x80) != 0)
  {
LABEL_392:
    uint64_t v225 = *((void *)a2 + 98);
    *((_DWORD *)this + 342) |= 0x80u;
    *((void *)this + 98) = v225;
    unsigned int v224 = *((_DWORD *)a2 + 342);
  }
LABEL_393:
  if ((v224 & 0xFF00) == 0) {
    goto LABEL_403;
  }
  if ((v224 & 0x100) != 0)
  {
    uint64_t v241 = *((void *)a2 + 99);
    *((_DWORD *)this + 342) |= 0x100u;
    *((void *)this + 99) = v241;
    unsigned int v224 = *((_DWORD *)a2 + 342);
    if ((v224 & 0x200) == 0)
    {
LABEL_396:
      if ((v224 & 0x400) == 0) {
        goto LABEL_397;
      }
      goto LABEL_455;
    }
  }
  else if ((v224 & 0x200) == 0)
  {
    goto LABEL_396;
  }
  uint64_t v242 = *((void *)a2 + 100);
  *((_DWORD *)this + 342) |= 0x200u;
  *((void *)this + 100) = v242;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x400) == 0)
  {
LABEL_397:
    if ((v224 & 0x800) == 0) {
      goto LABEL_398;
    }
    goto LABEL_456;
  }
LABEL_455:
  uint64_t v243 = *((void *)a2 + 102);
  *((_DWORD *)this + 342) |= 0x400u;
  *((void *)this + 102) = v243;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x800) == 0)
  {
LABEL_398:
    if ((v224 & 0x1000) == 0) {
      goto LABEL_399;
    }
    goto LABEL_457;
  }
LABEL_456:
  uint64_t v244 = *((void *)a2 + 103);
  *((_DWORD *)this + 342) |= 0x800u;
  *((void *)this + 103) = v244;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x1000) == 0)
  {
LABEL_399:
    if ((v224 & 0x2000) == 0) {
      goto LABEL_400;
    }
    goto LABEL_458;
  }
LABEL_457:
  uint64_t v245 = *((void *)a2 + 104);
  *((_DWORD *)this + 342) |= 0x1000u;
  *((void *)this + 104) = v245;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x2000) == 0)
  {
LABEL_400:
    if ((v224 & 0x4000) == 0) {
      goto LABEL_401;
    }
    goto LABEL_459;
  }
LABEL_458:
  uint64_t v246 = *((void *)a2 + 105);
  *((_DWORD *)this + 342) |= 0x2000u;
  *((void *)this + 105) = v246;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x4000) == 0)
  {
LABEL_401:
    if ((v224 & 0x8000) == 0) {
      goto LABEL_403;
    }
    goto LABEL_402;
  }
LABEL_459:
  uint64_t v247 = *((void *)a2 + 106);
  *((_DWORD *)this + 342) |= 0x4000u;
  *((void *)this + 106) = v247;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x8000) != 0)
  {
LABEL_402:
    char v226 = *((unsigned char *)a2 + 579);
    *((_DWORD *)this + 342) |= 0x8000u;
    *((unsigned char *)this + 579) = v226;
    unsigned int v224 = *((_DWORD *)a2 + 342);
  }
LABEL_403:
  if ((v224 & 0x1FE0000) == 0) {
    goto LABEL_412;
  }
  if ((v224 & 0x20000) != 0)
  {
    uint64_t v248 = *((void *)a2 + 110);
    *((_DWORD *)this + 342) |= 0x20000u;
    *((void *)this + 110) = v248;
    unsigned int v224 = *((_DWORD *)a2 + 342);
    if ((v224 & 0x40000) == 0)
    {
LABEL_406:
      if ((v224 & 0x80000) == 0) {
        goto LABEL_407;
      }
      goto LABEL_463;
    }
  }
  else if ((v224 & 0x40000) == 0)
  {
    goto LABEL_406;
  }
  uint64_t v249 = *((void *)a2 + 111);
  *((_DWORD *)this + 342) |= 0x40000u;
  *((void *)this + 111) = v249;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x80000) == 0)
  {
LABEL_407:
    if ((v224 & 0x100000) == 0) {
      goto LABEL_408;
    }
    goto LABEL_464;
  }
LABEL_463:
  char v250 = *((unsigned char *)a2 + 1044);
  *((_DWORD *)this + 342) |= 0x80000u;
  *((unsigned char *)this + 1044) = v250;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x100000) == 0)
  {
LABEL_408:
    if ((v224 & 0x200000) == 0) {
      goto LABEL_409;
    }
    goto LABEL_465;
  }
LABEL_464:
  int v251 = *((_DWORD *)a2 + 203);
  *((_DWORD *)this + 342) |= 0x100000u;
  *((_DWORD *)this + 203) = v251;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x200000) == 0)
  {
LABEL_409:
    if ((v224 & 0x400000) == 0) {
      goto LABEL_410;
    }
    goto LABEL_466;
  }
LABEL_465:
  int v252 = *((_DWORD *)a2 + 224);
  *((_DWORD *)this + 342) |= 0x200000u;
  *((_DWORD *)this + 224) = v252;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x400000) == 0)
  {
LABEL_410:
    if ((v224 & 0x800000) == 0) {
      goto LABEL_412;
    }
    goto LABEL_411;
  }
LABEL_466:
  int v253 = *((_DWORD *)a2 + 225);
  *((_DWORD *)this + 342) |= 0x400000u;
  *((_DWORD *)this + 225) = v253;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x800000) != 0)
  {
LABEL_411:
    uint64_t v227 = *((void *)a2 + 113);
    *((_DWORD *)this + 342) |= 0x800000u;
    *((void *)this + 113) = v227;
    unsigned int v224 = *((_DWORD *)a2 + 342);
  }
LABEL_412:
  if (!HIBYTE(v224)) {
    goto LABEL_421;
  }
  if ((v224 & 0x1000000) != 0)
  {
    *((_DWORD *)this + 342) |= 0x1000000u;
    int v259 = (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((void *)this + 114);
    if (!v259) {
      operator new();
    }
    int v260 = (const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((void *)a2 + 114);
    if (!v260) {
      int v260 = *(const awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
    }
                                                                                                  + 912);
    awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom(v259, v260);
    unsigned int v224 = *((_DWORD *)a2 + 342);
    if ((v224 & 0x2000000) == 0)
    {
LABEL_415:
      if ((v224 & 0x4000000) == 0) {
        goto LABEL_416;
      }
      goto LABEL_480;
    }
  }
  else if ((v224 & 0x2000000) == 0)
  {
    goto LABEL_415;
  }
  int v261 = *((_DWORD *)a2 + 230);
  *((_DWORD *)this + 342) |= 0x2000000u;
  *((_DWORD *)this + 230) = v261;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x4000000) == 0)
  {
LABEL_416:
    if ((v224 & 0x8000000) == 0) {
      goto LABEL_417;
    }
    goto LABEL_481;
  }
LABEL_480:
  int v262 = *((_DWORD *)a2 + 231);
  *((_DWORD *)this + 342) |= 0x4000000u;
  *((_DWORD *)this + 231) = v262;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x8000000) == 0)
  {
LABEL_417:
    if ((v224 & 0x10000000) == 0) {
      goto LABEL_418;
    }
    goto LABEL_482;
  }
LABEL_481:
  int v263 = *((_DWORD *)a2 + 232);
  *((_DWORD *)this + 342) |= 0x8000000u;
  *((_DWORD *)this + 232) = v263;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x10000000) == 0)
  {
LABEL_418:
    if ((v224 & 0x20000000) == 0) {
      goto LABEL_419;
    }
    goto LABEL_483;
  }
LABEL_482:
  int v264 = *((_DWORD *)a2 + 233);
  *((_DWORD *)this + 342) |= 0x10000000u;
  *((_DWORD *)this + 233) = v264;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x20000000) == 0)
  {
LABEL_419:
    if ((v224 & 0x40000000) == 0) {
      goto LABEL_420;
    }
LABEL_484:
    int v266 = *((_DWORD *)a2 + 235);
    *((_DWORD *)this + 342) |= 0x40000000u;
    *((_DWORD *)this + 235) = v266;
    if ((*((_DWORD *)a2 + 342) & 0x80000000) == 0) {
      goto LABEL_421;
    }
    goto LABEL_485;
  }
LABEL_483:
  int v265 = *((_DWORD *)a2 + 234);
  *((_DWORD *)this + 342) |= 0x20000000u;
  *((_DWORD *)this + 234) = v265;
  unsigned int v224 = *((_DWORD *)a2 + 342);
  if ((v224 & 0x40000000) != 0) {
    goto LABEL_484;
  }
LABEL_420:
  if ((v224 & 0x80000000) == 0) {
    goto LABEL_421;
  }
LABEL_485:
  int v267 = *((_DWORD *)a2 + 236);
  *((_DWORD *)this + 342) |= 0x80000000;
  *((_DWORD *)this + 236) = v267;
LABEL_421:
  unsigned int v228 = *((_DWORD *)a2 + 343);
  if (!(_BYTE)v228) {
    goto LABEL_429;
  }
  if (v228)
  {
    int v254 = *((_DWORD *)a2 + 237);
    *((_DWORD *)this + 343) |= 1u;
    *((_DWORD *)this + 237) = v254;
    unsigned int v228 = *((_DWORD *)a2 + 343);
    if ((v228 & 2) == 0)
    {
LABEL_424:
      if ((v228 & 4) == 0) {
        goto LABEL_425;
      }
      goto LABEL_470;
    }
  }
  else if ((v228 & 2) == 0)
  {
    goto LABEL_424;
  }
  int v255 = *((_DWORD *)a2 + 238);
  *((_DWORD *)this + 343) |= 2u;
  *((_DWORD *)this + 238) = v255;
  unsigned int v228 = *((_DWORD *)a2 + 343);
  if ((v228 & 4) == 0)
  {
LABEL_425:
    if ((v228 & 8) == 0) {
      goto LABEL_426;
    }
    goto LABEL_471;
  }
LABEL_470:
  int v256 = *((_DWORD *)a2 + 239);
  *((_DWORD *)this + 343) |= 4u;
  *((_DWORD *)this + 239) = v256;
  unsigned int v228 = *((_DWORD *)a2 + 343);
  if ((v228 & 8) == 0)
  {
LABEL_426:
    if ((v228 & 0x10) == 0) {
      goto LABEL_427;
    }
    goto LABEL_472;
  }
LABEL_471:
  int v257 = *((_DWORD *)a2 + 240);
  *((_DWORD *)this + 343) |= 8u;
  *((_DWORD *)this + 240) = v257;
  unsigned int v228 = *((_DWORD *)a2 + 343);
  if ((v228 & 0x10) == 0)
  {
LABEL_427:
    if ((v228 & 0x20) == 0) {
      goto LABEL_429;
    }
    goto LABEL_428;
  }
LABEL_472:
  int v258 = *((_DWORD *)a2 + 241);
  *((_DWORD *)this + 343) |= 0x10u;
  *((_DWORD *)this + 241) = v258;
  unsigned int v228 = *((_DWORD *)a2 + 343);
  if ((v228 & 0x20) != 0)
  {
LABEL_428:
    int v229 = *((_DWORD *)a2 + 260);
    *((_DWORD *)this + 343) |= 0x20u;
    *((_DWORD *)this + 260) = v229;
    unsigned int v228 = *((_DWORD *)a2 + 343);
  }
LABEL_429:
  if ((v228 & 0x400) != 0)
  {
    *((_DWORD *)this + 343) |= 0x400u;
    int v230 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((void *)this + 134);
    if (!v230) {
      operator new();
    }
    int v231 = (const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((void *)a2 + 134);
    if (!v231) {
      int v231 = *(const awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
    }
                                                                                                  + 1072);
    awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergeFrom(v230, v231);
    unsigned int v228 = *((_DWORD *)a2 + 343);
  }
  if ((v228 & 0x1FE00000) != 0)
  {
    if ((v228 & 0x200000) != 0)
    {
      char v232 = *((unsigned char *)a2 + 1045);
      *((_DWORD *)this + 343) |= 0x200000u;
      *((unsigned char *)this + 1045) = v232;
      unsigned int v228 = *((_DWORD *)a2 + 343);
    }
    if ((v228 & 0x400000) != 0)
    {
      char v233 = *((unsigned char *)a2 + 1046);
      *((_DWORD *)this + 343) |= 0x400000u;
      *((unsigned char *)this + 1046) = v233;
      unsigned int v228 = *((_DWORD *)a2 + 343);
    }
  }
  if (HIBYTE(v228))
  {
    if ((v228 & 0x1000000) != 0)
    {
      int v268 = *((_DWORD *)a2 + 336);
      *((_DWORD *)this + 343) |= 0x1000000u;
      *((_DWORD *)this + 336) = v268;
      unsigned int v228 = *((_DWORD *)a2 + 343);
      if ((v228 & 0x2000000) == 0)
      {
LABEL_443:
        if ((v228 & 0x4000000) == 0) {
          return;
        }
        goto LABEL_444;
      }
    }
    else if ((v228 & 0x2000000) == 0)
    {
      goto LABEL_443;
    }
    int v269 = *((_DWORD *)a2 + 337);
    *((_DWORD *)this + 343) |= 0x2000000u;
    *((_DWORD *)this + 337) = v269;
    if ((*((_DWORD *)a2 + 343) & 0x4000000) != 0)
    {
LABEL_444:
      int v234 = *((_DWORD *)a2 + 338);
      *((_DWORD *)this + 343) |= 0x4000000u;
      *((_DWORD *)this + 338) = v234;
    }
  }
}