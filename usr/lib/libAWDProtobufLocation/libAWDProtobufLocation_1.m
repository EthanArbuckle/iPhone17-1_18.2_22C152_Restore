void sub_22495A740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGPSSessionStatistics::~LocationGPSSessionStatistics(awd::metrics::LocationGPSSessionStatistics *this)
{
  *(void *)this = &unk_26D7BC070;
  awd::metrics::LocationGPSSessionStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>((uint64_t *)this + 165);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 162);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 159);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 156);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 153);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 150);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 147);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 144);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 141);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>((uint64_t *)this + 138);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>((uint64_t *)this + 135);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>((uint64_t *)this + 131);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>((uint64_t *)this + 127);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 124);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 121);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t *)this + 107);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>((uint64_t *)this + 89);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>((uint64_t *)this + 86);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>((uint64_t *)this + 80);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t *)this + 76);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>((uint64_t *)this + 46);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>((uint64_t *)this + 43);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>((uint64_t *)this + 40);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 37);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 34);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 31);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t *)this + 28);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 25);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 22);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t *)this + 16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>((uint64_t *)this + 13);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t *)this + 10);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t *)this + 7);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationGPSSessionStatistics::~LocationGPSSessionStatistics(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationGPSSessionStatistics::SharedDtor(void *this)
{
  v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  if ((void *)awd::metrics::LocationGPSSessionStatistics::default_instance_ != v1)
  {
    uint64_t v4 = v1[114];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    this = (void *)v1[134];
    if (this)
    {
      v5 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v5();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 1356) = a2;
  return this;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::default_instance(awd::metrics::LocationGPSSessionStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGPSSessionStatistics::default_instance_;
  if (!awd::metrics::LocationGPSSessionStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGPSSessionStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGPSSessionStatistics::New(awd::metrics::LocationGPSSessionStatistics *this)
{
}

uint64_t awd::metrics::LocationGPSSessionStatistics::Clear(awd::metrics::LocationGPSSessionStatistics *this)
{
  unsigned int v2 = *((_DWORD *)this + 340);
  if ((_BYTE)v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    unsigned int v2 = *((_DWORD *)this + 340);
  }
  if ((v2 & 0x3FC00) != 0) {
    *((_DWORD *)this + 108) = 0;
  }
  if ((v2 & 0x7F800000) != 0) {
    *((void *)this + 49) = 0;
  }
  if (HIBYTE(v2))
  {
    *((_WORD *)this + 288) = 0;
    *((_OWORD *)this + 25) = 0u;
    *((_OWORD *)this + 26) = 0u;
    *((void *)this + 55) = 0;
    *((void *)this + 56) = 0;
  }
  unsigned int v4 = *((_DWORD *)this + 341);
  if ((_BYTE)v4)
  {
    *(_OWORD *)((char *)this + 488) = 0u;
    *(_OWORD *)((char *)this + 504) = 0u;
    *(_OWORD *)((char *)this + 456) = 0u;
    *(_OWORD *)((char *)this + 472) = 0u;
  }
  if ((v4 & 0xFF00) != 0)
  {
    *((_DWORD *)this + 109) = 0;
    *((void *)this + 71) = 0;
    *(_OWORD *)((char *)this + 520) = 0u;
    *(_OWORD *)((char *)this + 536) = 0u;
    *(_OWORD *)((char *)this + 552) = 0u;
  }
  if ((v4 & 0xFF0000) != 0)
  {
    *((unsigned char *)this + 578) = 0;
    *((_DWORD *)this + 151) = 0;
    *(void *)((char *)this + 588) = 0;
    *(void *)((char *)this + 596) = 0;
    *(void *)((char *)this + 580) = 0;
  }
  if (v4 >> 25)
  {
    *((void *)this + 79) = 0;
    *((_DWORD *)this + 202) = 0;
    *((void *)this + 83) = 0;
    *((void *)this + 85) = 0;
    *((void *)this + 84) = 0;
  }
  unsigned int v5 = *((_DWORD *)this + 342);
  if ((v5 & 0x1FE) != 0)
  {
    *((void *)this + 98) = 0;
    *((_OWORD *)this + 47) = 0u;
    *((_OWORD *)this + 48) = 0u;
    *((_OWORD *)this + 46) = 0u;
  }
  if ((v5 & 0xFF00) != 0)
  {
    *((unsigned char *)this + 579) = 0;
    *(_OWORD *)((char *)this + 792) = 0u;
    *((_OWORD *)this + 51) = 0u;
    *((_OWORD *)this + 52) = 0u;
    *((void *)this + 106) = 0;
  }
  if ((v5 & 0x1FE0000) != 0)
  {
    *((unsigned char *)this + 1044) = 0;
    *((_DWORD *)this + 203) = 0;
    *((_OWORD *)this + 55) = 0u;
    *((_OWORD *)this + 56) = 0u;
  }
  if (HIBYTE(v5))
  {
    if ((v5 & 0x1000000) != 0)
    {
      uint64_t v6 = *((void *)this + 114);
      if (v6)
      {
        int v7 = *(_DWORD *)(v6 + 72);
        if ((_BYTE)v7)
        {
          *(void *)(v6 + 40) = 0;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + 8) = 0u;
        }
        if ((v7 & 0xFF00) != 0)
        {
          *(void *)(v6 + 48) = 0;
          *(void *)(v6 + 56) = 0;
          *(_DWORD *)(v6 + 64) = 0;
        }
        *(_DWORD *)(v6 + 72) = 0;
      }
    }
    *((_DWORD *)this + 236) = 0;
    *((void *)this + 117) = 0;
    *(_OWORD *)((char *)this + 920) = 0u;
  }
  unsigned int v8 = *((_DWORD *)this + 343);
  if ((_BYTE)v8)
  {
    *((_DWORD *)this + 260) = 0;
    *((_DWORD *)this + 241) = 0;
    *(_OWORD *)((char *)this + 948) = 0u;
  }
  if ((v8 & 0x400) != 0)
  {
    uint64_t v9 = *((void *)this + 134);
    if (v9)
    {
      if (*(unsigned char *)(v9 + 28))
      {
        *(void *)(v9 + 8) = 0;
        *(void *)(v9 + 16) = 0;
      }
      *(_DWORD *)(v9 + 28) = 0;
      unsigned int v8 = *((_DWORD *)this + 343);
    }
  }
  if ((v8 & 0x1FE00000) != 0) {
    *(_WORD *)((char *)this + 1045) = 0;
  }
  v10 = (void *)((char *)this + 1360);
  if (HIBYTE(v8))
  {
    *((void *)this + 168) = 0;
    *((_DWORD *)this + 338) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t)this + 56);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>((uint64_t)this + 80);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>((uint64_t)this + 104);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 128);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 152);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 176);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 200);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 224);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 248);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 272);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 296);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>((uint64_t)this + 320);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>((uint64_t)this + 344);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>((uint64_t)this + 368);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t)this + 608);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>((uint64_t)this + 640);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>((uint64_t)this + 688);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>((uint64_t)this + 712);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>((uint64_t)this + 856);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 968);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 992);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>((uint64_t)this + 1016);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>((uint64_t)this + 1048);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>((uint64_t)this + 1080);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>((uint64_t)this + 1104);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 1128);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 1152);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 1176);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>((uint64_t)this + 1200);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 1224);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 1248);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 1272);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>((uint64_t)this + 1296);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>((uint64_t)this + 1320);
  void *v10 = 0;
  *((void *)this + 171) = 0;
  return result;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::MergePartialFromCodedStream(awd::metrics::LocationGPSSessionStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int v4 = (unint64_t *)((char *)a2 + 8);
  unsigned int v5 = (unint64_t *)((char *)a2 + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 24);
  int v7 = (unsigned int *)((char *)this + 40);
  unsigned int v8 = (unint64_t *)((char *)this + 32);
  v602 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 56);
  v603 = (unint64_t *)((char *)this + 8);
  v600 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 104);
  v601 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 80);
  v598 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 152);
  v599 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 128);
  v604 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 176);
  v596 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 224);
  v597 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 200);
  v593 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 272);
  v594 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 248);
  v591 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 320);
  v592 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 296);
  v589 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 368);
  v590 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 344);
  v659 = (unint64_t *)((char *)this + 392);
  v653 = (unint64_t *)((char *)this + 400);
  v647 = (unint64_t *)((char *)this + 416);
  v648 = (unint64_t *)((char *)this + 408);
  v645 = (unint64_t *)((char *)this + 440);
  v646 = (unint64_t *)((char *)this + 424);
  v643 = (unint64_t *)((char *)this + 456);
  v644 = (unint64_t *)((char *)this + 448);
  v641 = (unint64_t *)((char *)this + 472);
  v642 = (unint64_t *)((char *)this + 464);
  v640 = (unint64_t *)((char *)this + 480);
  v639 = (unint64_t *)((char *)this + 488);
  v638 = (unint64_t *)((char *)this + 496);
  v637 = (unint64_t *)((char *)this + 504);
  v636 = (unint64_t *)((char *)this + 512);
  v635 = (unint64_t *)((char *)this + 520);
  v634 = (unint64_t *)((char *)this + 528);
  v632 = (unint64_t *)((char *)this + 544);
  v633 = (unint64_t *)((char *)this + 536);
  v630 = (unint64_t *)((char *)this + 560);
  v631 = (unint64_t *)((char *)this + 552);
  v629 = (unint64_t *)((char *)this + 568);
  v660 = (unsigned int *)((char *)this + 604);
  v574 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 608);
  v657 = (unint64_t *)((char *)this + 632);
  v576 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 640);
  v656 = (unint64_t *)((char *)this + 664);
  v651 = (unint64_t *)((char *)this + 672);
  v628 = (unint64_t *)((char *)this + 680);
  v572 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 688);
  v575 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 712);
  v655 = (unint64_t *)((char *)this + 736);
  v650 = (unint64_t *)((char *)this + 744);
  v626 = (unint64_t *)((char *)this + 760);
  v627 = (unint64_t *)((char *)this + 752);
  v624 = (unint64_t *)((char *)this + 776);
  v625 = (unint64_t *)((char *)this + 768);
  v622 = (unint64_t *)((char *)this + 792);
  v623 = (unint64_t *)((char *)this + 784);
  v620 = (unint64_t *)((char *)this + 816);
  v621 = (unint64_t *)((char *)this + 800);
  v618 = (unint64_t *)((char *)this + 832);
  v619 = (unint64_t *)((char *)this + 824);
  v616 = (unint64_t *)((char *)this + 848);
  v617 = (unint64_t *)((char *)this + 840);
  v571 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 856);
  v654 = (unint64_t *)((char *)this + 880);
  v649 = (unint64_t *)((char *)this + 888);
  v615 = (unint64_t *)((char *)this + 904);
  v658 = (unsigned int *)((char *)this + 920);
  v652 = (unsigned int *)((char *)this + 924);
  v613 = (unsigned int *)((char *)this + 932);
  v614 = (unsigned int *)((char *)this + 928);
  v611 = (unsigned int *)((char *)this + 940);
  v612 = (unsigned int *)((char *)this + 936);
  v609 = (unsigned int *)((char *)this + 948);
  v610 = (unsigned int *)((char *)this + 944);
  v607 = (unsigned int *)((char *)this + 956);
  v608 = (unsigned int *)((char *)this + 952);
  v605 = (unsigned int *)((char *)this + 964);
  v606 = (unsigned int *)((char *)this + 960);
  uint64_t v9 = (unsigned int *)((char *)this + 1040);
  v570 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 968);
  v577 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 992);
  v578 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1016);
  v595 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1080);
  v587 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1104);
  v588 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1048);
  v585 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1152);
  v586 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1128);
  v583 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1200);
  v584 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1176);
  v581 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1248);
  v582 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1224);
  v579 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1296);
  v580 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1272);
  v573 = (awd::metrics::LocationGPSSessionStatistics *)((char *)this + 1320);
LABEL_2:
  while (2)
  {
    v10 = (char *)*v4;
    if (*v4 >= *v5 || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64(a2, v603);
        if (result)
        {
          int v14 = *((_DWORD *)this + 340) | 1;
          *((_DWORD *)this + 340) = v14;
          v15 = (unsigned char *)*v4;
          if (*v4 < *v5 && *v15 == 18)
          {
            *unsigned int v4 = (unint64_t)(v15 + 1);
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_282;
        }
        int v14 = *((_DWORD *)this + 340);
LABEL_16:
        *((_DWORD *)this + 340) = v14 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          v16 = (unsigned char *)*v4;
          unint64_t v17 = *v5;
          if (*v4 < *v5 && *v16 == 24)
          {
            v18 = v16 + 1;
            *unsigned int v4 = (unint64_t)v18;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v18 = (char *)*v4;
        unint64_t v17 = *v5;
LABEL_24:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v19 = (unsigned char *)*v4;
          unint64_t v17 = *v5;
        }
        else
        {
          *uint64_t v6 = *v18;
          v19 = v18 + 1;
          *unsigned int v4 = (unint64_t)v19;
        }
        *((_DWORD *)this + 340) |= 4u;
        if ((unint64_t)v19 < v17 && *v19 == 32)
        {
          v20 = v19 + 1;
          *unsigned int v4 = (unint64_t)v20;
          goto LABEL_291;
        }
        continue;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v20 = (char *)*v4;
        unint64_t v17 = *v5;
LABEL_291:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          v117 = (unsigned char *)*v4;
          unint64_t v17 = *v5;
        }
        else
        {
          *int v7 = *v20;
          v117 = v20 + 1;
          *unsigned int v4 = (unint64_t)v117;
        }
        *((_DWORD *)this + 340) |= 8u;
        if ((unint64_t)v117 >= v17 || *v117 != 40) {
          continue;
        }
        v21 = v117 + 1;
        *unsigned int v4 = (unint64_t)v21;
LABEL_299:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          v118 = (unsigned char *)*v4;
          unint64_t v17 = *v5;
        }
        else
        {
          *unsigned int v8 = *v21;
          v118 = v21 + 1;
          *unsigned int v4 = (unint64_t)v118;
        }
        *((_DWORD *)this + 340) |= 0x10u;
        if ((unint64_t)v118 >= v17 || *v118 != 53) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v118 + 1);
LABEL_307:
        v661[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v661) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 11) = v661[0];
        *((_DWORD *)this + 340) |= 0x20u;
        v119 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v119 != 61) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v119 + 1);
LABEL_311:
        v661[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v661) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v661[0];
        *((_DWORD *)this + 340) |= 0x40u;
        v120 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v120 != 69) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v120 + 1);
LABEL_315:
        v661[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v661) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 13) = v661[0];
        *((_DWORD *)this + 340) |= 0x80u;
        v121 = (unsigned char *)*v4;
        if (*v4 >= *v5 || *v121 != 74) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v121 + 1);
LABEL_462:
          int v143 = *((_DWORD *)this + 17);
          uint64_t v144 = *((int *)this + 16);
          if ((int)v144 >= v143)
          {
            if (v143 == *((_DWORD *)this + 18))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v602);
              int v143 = *((_DWORD *)this + 17);
            }
            *((_DWORD *)this + 17) = v143 + 1;
            operator new();
          }
          uint64_t v145 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v144 + 1;
          v146 = *(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(v145 + 8 * v144);
          v661[0] = 0;
          v147 = (char *)*v4;
          if (*v4 >= *v5 || *v147 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v147;
            *unsigned int v4 = (unint64_t)(v147 + 1);
          }
          int v148 = *((_DWORD *)a2 + 14);
          int v149 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v148 + 1;
          if (v148 >= v149) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergePartialFromCodedStream(v146, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v150 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v150, 1);
          int v151 = v150 - 1;
          if (v151 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v151;
          }
          v121 = (unsigned char *)*v4;
          if (*v4 >= *v5) {
            goto LABEL_2;
          }
          int v152 = *v121;
        }
        while (v152 == 74);
        if (v152 != 82) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v121 + 1);
LABEL_480:
          int v153 = *((_DWORD *)this + 23);
          uint64_t v154 = *((int *)this + 22);
          if ((int)v154 >= v153)
          {
            if (v153 == *((_DWORD *)this + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v601);
              int v153 = *((_DWORD *)this + 23);
            }
            *((_DWORD *)this + 23) = v153 + 1;
            operator new();
          }
          uint64_t v155 = *((void *)this + 10);
          *((_DWORD *)this + 22) = v154 + 1;
          v156 = *(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(v155 + 8 * v154);
          v661[0] = 0;
          v157 = (char *)*v4;
          if (*v4 >= *v5 || *v157 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v157;
            *unsigned int v4 = (unint64_t)(v157 + 1);
          }
          int v158 = *((_DWORD *)a2 + 14);
          int v159 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v158 + 1;
          if (v158 >= v159) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergePartialFromCodedStream(v156, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v160 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v160, 1);
          int v161 = v160 - 1;
          if (v161 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v161;
          }
          v121 = (unsigned char *)*v4;
          unint64_t v23 = *v5;
          if (*v4 >= *v5) {
            goto LABEL_2;
          }
          int v162 = *v121;
        }
        while (v162 == 82);
        if (v162 != 88) {
          continue;
        }
        v22 = v121 + 1;
        *unsigned int v4 = (unint64_t)v22;
LABEL_498:
        v661[0] = 0;
        if ((unint64_t)v22 >= v23 || (char)*v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v163 = v661[0];
          v164 = (unsigned __int8 *)*v4;
          unint64_t v23 = *v5;
        }
        else
        {
          unsigned int v163 = *v22;
          v164 = v22 + 1;
          *unsigned int v4 = (unint64_t)v164;
        }
        *((_DWORD *)this + 108) = v163;
        *((_DWORD *)this + 340) |= 0x400u;
        if ((unint64_t)v164 >= v23 || *v164 != 98) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v164 + 1);
LABEL_506:
          int v165 = *((_DWORD *)this + 29);
          uint64_t v166 = *((int *)this + 28);
          if ((int)v166 >= v165)
          {
            if (v165 == *((_DWORD *)this + 30))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v600);
              int v165 = *((_DWORD *)this + 29);
            }
            *((_DWORD *)this + 29) = v165 + 1;
            operator new();
          }
          uint64_t v167 = *((void *)this + 13);
          *((_DWORD *)this + 28) = v166 + 1;
          v168 = *(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(v167 + 8 * v166);
          v661[0] = 0;
          v169 = (char *)*v4;
          if (*v4 >= *v5 || *v169 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v169;
            *unsigned int v4 = (unint64_t)(v169 + 1);
          }
          int v170 = *((_DWORD *)a2 + 14);
          int v171 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v170 + 1;
          if (v170 >= v171) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergePartialFromCodedStream(v168, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v172 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v172, 1);
          int v173 = v172 - 1;
          if (v173 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v173;
          }
          v164 = (unsigned __int8 *)*v4;
          if (*v4 >= *v5) {
            goto LABEL_2;
          }
          int v174 = *v164;
        }
        while (v174 == 98);
        if (v174 != 106) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v164 + 1);
LABEL_524:
          int v175 = *((_DWORD *)this + 35);
          uint64_t v176 = *((int *)this + 34);
          if ((int)v176 >= v175)
          {
            if (v175 == *((_DWORD *)this + 36))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v599);
              int v175 = *((_DWORD *)this + 35);
            }
            *((_DWORD *)this + 35) = v175 + 1;
            operator new();
          }
          uint64_t v177 = *((void *)this + 16);
          *((_DWORD *)this + 34) = v176 + 1;
          v178 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v177 + 8 * v176);
          v661[0] = 0;
          v179 = (char *)*v4;
          if (*v4 >= *v5 || *v179 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v179;
            *unsigned int v4 = (unint64_t)(v179 + 1);
          }
          int v180 = *((_DWORD *)a2 + 14);
          int v181 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v180 + 1;
          if (v180 >= v181) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v178, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v182 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v182, 1);
          int v183 = v182 - 1;
          if (v183 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v183;
          }
          v164 = (unsigned __int8 *)*v4;
          if (*v4 >= *v5) {
            goto LABEL_2;
          }
          int v184 = *v164;
        }
        while (v184 == 106);
        if (v184 != 114) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v164 + 1);
LABEL_542:
          int v185 = *((_DWORD *)this + 41);
          uint64_t v186 = *((int *)this + 40);
          if ((int)v186 >= v185)
          {
            if (v185 == *((_DWORD *)this + 42))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v598);
              int v185 = *((_DWORD *)this + 41);
            }
            *((_DWORD *)this + 41) = v185 + 1;
            operator new();
          }
          uint64_t v187 = *((void *)this + 19);
          *((_DWORD *)this + 40) = v186 + 1;
          v188 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v187 + 8 * v186);
          v661[0] = 0;
          v189 = (char *)*v4;
          if (*v4 >= *v5 || *v189 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v189;
            *unsigned int v4 = (unint64_t)(v189 + 1);
          }
          int v190 = *((_DWORD *)a2 + 14);
          int v191 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v190 + 1;
          if (v190 >= v191) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v188, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v192 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v192, 1);
          int v193 = v192 - 1;
          if (v193 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v193;
          }
          v164 = (unsigned __int8 *)*v4;
          if (*v4 >= *v5) {
            goto LABEL_2;
          }
          int v194 = *v164;
        }
        while (v194 == 114);
        if (v194 != 122) {
          continue;
        }
        do
        {
          *unsigned int v4 = (unint64_t)(v164 + 1);
LABEL_560:
          int v195 = *((_DWORD *)this + 47);
          uint64_t v196 = *((int *)this + 46);
          if ((int)v196 >= v195)
          {
            if (v195 == *((_DWORD *)this + 48))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v604);
              int v195 = *((_DWORD *)this + 47);
            }
            *((_DWORD *)this + 47) = v195 + 1;
            operator new();
          }
          uint64_t v197 = *((void *)this + 22);
          *((_DWORD *)this + 46) = v196 + 1;
          v198 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v197 + 8 * v196);
          v661[0] = 0;
          v199 = (char *)*v4;
          if (*v4 >= *v5 || *v199 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v199;
            *unsigned int v4 = (unint64_t)(v199 + 1);
          }
          int v200 = *((_DWORD *)a2 + 14);
          int v201 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v200 + 1;
          if (v200 >= v201) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v198, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v202 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v202, 1);
          int v203 = v202 - 1;
          if (v203 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v203;
          }
          v164 = (unsigned __int8 *)*v4;
        }
        while (*v4 < *v5 && *v164 == 122);
        if ((int)(*v5 - v164) < 2 || *v164 != 130 || v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_580:
          int v204 = *((_DWORD *)this + 53);
          uint64_t v205 = *((int *)this + 52);
          if ((int)v205 >= v204)
          {
            if (v204 == *((_DWORD *)this + 54))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v597);
              int v204 = *((_DWORD *)this + 53);
            }
            *((_DWORD *)this + 53) = v204 + 1;
            operator new();
          }
          uint64_t v206 = *((void *)this + 25);
          *((_DWORD *)this + 52) = v205 + 1;
          v207 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v206 + 8 * v205);
          v661[0] = 0;
          v208 = (char *)*v4;
          if (*v4 >= *v5 || *v208 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v208;
            *unsigned int v4 = (unint64_t)(v208 + 1);
          }
          int v209 = *((_DWORD *)a2 + 14);
          int v210 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v209 + 1;
          if (v209 >= v210) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v207, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v211 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v211, 1);
          int v212 = v211 - 1;
          if (v212 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v212;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v213 = *v164;
          if (v213 == 138) {
            break;
          }
          if (v213 != 130 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_601:
          int v214 = *((_DWORD *)this + 59);
          uint64_t v215 = *((int *)this + 58);
          if ((int)v215 >= v214)
          {
            if (v214 == *((_DWORD *)this + 60))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v596);
              int v214 = *((_DWORD *)this + 59);
            }
            *((_DWORD *)this + 59) = v214 + 1;
            operator new();
          }
          uint64_t v216 = *((void *)this + 28);
          *((_DWORD *)this + 58) = v215 + 1;
          v217 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v216 + 8 * v215);
          v661[0] = 0;
          v218 = (char *)*v4;
          if (*v4 >= *v5 || *v218 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v218;
            *unsigned int v4 = (unint64_t)(v218 + 1);
          }
          int v219 = *((_DWORD *)a2 + 14);
          int v220 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v219 + 1;
          if (v219 >= v220) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v217, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v221 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v221, 1);
          int v222 = v221 - 1;
          if (v222 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v222;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v223 = *v164;
          if (v223 == 146) {
            break;
          }
          if (v223 != 138 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_622:
          uint64_t v224 = *((int *)this + 64);
          int v225 = *((_DWORD *)this + 65);
          if ((int)v224 >= v225)
          {
            if (v225 == *((_DWORD *)this + 66))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v594);
              int v225 = *((_DWORD *)this + 65);
            }
            *((_DWORD *)this + 65) = v225 + 1;
            operator new();
          }
          uint64_t v226 = *((void *)this + 31);
          *((_DWORD *)this + 64) = v224 + 1;
          v227 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v226 + 8 * v224);
          v661[0] = 0;
          v228 = (char *)*v4;
          if (*v4 >= *v5 || *v228 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v228;
            *unsigned int v4 = (unint64_t)(v228 + 1);
          }
          int v229 = *((_DWORD *)a2 + 14);
          int v230 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v229 + 1;
          if (v229 >= v230) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v227, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v231 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v231, 1);
          int v232 = v231 - 1;
          if (v232 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v232;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v233 = *v164;
          if (v233 == 154) {
            break;
          }
          if (v233 != 146 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_643:
          uint64_t v234 = *((int *)this + 70);
          int v235 = *((_DWORD *)this + 71);
          if ((int)v234 >= v235)
          {
            if (v235 == *((_DWORD *)this + 72))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v593);
              int v235 = *((_DWORD *)this + 71);
            }
            *((_DWORD *)this + 71) = v235 + 1;
            operator new();
          }
          uint64_t v236 = *((void *)this + 34);
          *((_DWORD *)this + 70) = v234 + 1;
          v237 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v236 + 8 * v234);
          v661[0] = 0;
          v238 = (char *)*v4;
          if (*v4 >= *v5 || *v238 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v238;
            *unsigned int v4 = (unint64_t)(v238 + 1);
          }
          int v239 = *((_DWORD *)a2 + 14);
          int v240 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v239 + 1;
          if (v239 >= v240) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v237, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v241 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v241, 1);
          int v242 = v241 - 1;
          if (v242 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v242;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v243 = *v164;
          if (v243 == 162) {
            break;
          }
          if (v243 != 154 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_664:
          uint64_t v244 = *((int *)this + 76);
          int v245 = *((_DWORD *)this + 77);
          if ((int)v244 >= v245)
          {
            if (v245 == *((_DWORD *)this + 78))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v592);
              int v245 = *((_DWORD *)this + 77);
            }
            *((_DWORD *)this + 77) = v245 + 1;
            operator new();
          }
          uint64_t v246 = *((void *)this + 37);
          *((_DWORD *)this + 76) = v244 + 1;
          v247 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v246 + 8 * v244);
          v661[0] = 0;
          v248 = (char *)*v4;
          if (*v4 >= *v5 || *v248 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v248;
            *unsigned int v4 = (unint64_t)(v248 + 1);
          }
          int v249 = *((_DWORD *)a2 + 14);
          int v250 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v249 + 1;
          if (v249 >= v250) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v247, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v251 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v251, 1);
          int v252 = v251 - 1;
          if (v252 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v252;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v253 = *v164;
          if (v253 == 170) {
            break;
          }
          if (v253 != 162 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_685:
          uint64_t v254 = *((int *)this + 82);
          int v255 = *((_DWORD *)this + 83);
          if ((int)v254 >= v255)
          {
            if (v255 == *((_DWORD *)this + 84))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v591);
              int v255 = *((_DWORD *)this + 83);
            }
            *((_DWORD *)this + 83) = v255 + 1;
            operator new();
          }
          uint64_t v256 = *((void *)this + 40);
          *((_DWORD *)this + 82) = v254 + 1;
          v257 = *(awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(v256 + 8 * v254);
          v661[0] = 0;
          v258 = (char *)*v4;
          if (*v4 >= *v5 || *v258 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v258;
            *unsigned int v4 = (unint64_t)(v258 + 1);
          }
          int v259 = *((_DWORD *)a2 + 14);
          int v260 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v259 + 1;
          if (v259 >= v260) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergePartialFromCodedStream(v257, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v261 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v261, 1);
          int v262 = v261 - 1;
          if (v262 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v262;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v263 = *v164;
          if (v263 == 178) {
            break;
          }
          if (v263 != 170 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_706:
          uint64_t v264 = *((int *)this + 88);
          int v265 = *((_DWORD *)this + 89);
          if ((int)v264 >= v265)
          {
            if (v265 == *((_DWORD *)this + 90))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v590);
              int v265 = *((_DWORD *)this + 89);
            }
            *((_DWORD *)this + 89) = v265 + 1;
            operator new();
          }
          uint64_t v266 = *((void *)this + 43);
          *((_DWORD *)this + 88) = v264 + 1;
          v267 = *(awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(v266 + 8 * v264);
          v661[0] = 0;
          v268 = (char *)*v4;
          if (*v4 >= *v5 || *v268 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v268;
            *unsigned int v4 = (unint64_t)(v268 + 1);
          }
          int v269 = *((_DWORD *)a2 + 14);
          int v270 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v269 + 1;
          if (v269 >= v270) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergePartialFromCodedStream(v267, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v271 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v271, 1);
          int v272 = v271 - 1;
          if (v272 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v272;
          }
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v273 = *v164;
          if (v273 == 186) {
            break;
          }
          if (v273 != 178 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v164 + 2);
LABEL_727:
          uint64_t v274 = *((int *)this + 94);
          int v275 = *((_DWORD *)this + 95);
          if ((int)v274 >= v275)
          {
            if (v275 == *((_DWORD *)this + 96))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v589);
              int v275 = *((_DWORD *)this + 95);
            }
            *((_DWORD *)this + 95) = v275 + 1;
            operator new();
          }
          uint64_t v276 = *((void *)this + 46);
          *((_DWORD *)this + 94) = v274 + 1;
          v277 = *(awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(v276 + 8 * v274);
          v661[0] = 0;
          v278 = (char *)*v4;
          if (*v4 >= *v5 || *v278 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v278;
            *unsigned int v4 = (unint64_t)(v278 + 1);
          }
          int v279 = *((_DWORD *)a2 + 14);
          int v280 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v279 + 1;
          if (v279 >= v280) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergePartialFromCodedStream(v277, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v281 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v281, 1);
          int v282 = v281 - 1;
          if (v282 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v282;
          }
          unint64_t v25 = *v5;
          v164 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v283 = *v164;
          if (v283 == 192) {
            break;
          }
          if (v283 != 186 || v164[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v164[1] != 1) {
          continue;
        }
        v24 = v164 + 2;
        *unsigned int v4 = (unint64_t)v24;
LABEL_748:
        if ((unint64_t)v24 >= v25 || (char)*v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v659);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v284 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v659 = *v24;
          v284 = v24 + 1;
          *unsigned int v4 = (unint64_t)v284;
        }
        *((_DWORD *)this + 340) |= 0x800000u;
        if ((int)v25 - (int)v284 < 2 || *v284 != 200 || v284[1] != 1) {
          continue;
        }
        v26 = v284 + 2;
        *unsigned int v4 = (unint64_t)v26;
LABEL_757:
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v653);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v285 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v653 = *v26;
          v285 = v26 + 1;
          *unsigned int v4 = (unint64_t)v285;
        }
        *((_DWORD *)this + 340) |= 0x1000000u;
        if ((int)v25 - (int)v285 < 2 || *v285 != 208 || v285[1] != 1) {
          continue;
        }
        v27 = v285 + 2;
        *unsigned int v4 = (unint64_t)v27;
LABEL_766:
        if ((unint64_t)v27 >= v25 || (char)*v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v648);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v286 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v648 = *v27;
          v286 = v27 + 1;
          *unsigned int v4 = (unint64_t)v286;
        }
        *((_DWORD *)this + 340) |= 0x2000000u;
        if ((int)v25 - (int)v286 < 2 || *v286 != 216 || v286[1] != 1) {
          continue;
        }
        v28 = v286 + 2;
        *unsigned int v4 = (unint64_t)v28;
LABEL_775:
        if ((unint64_t)v28 >= v25 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v647);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v287 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v647 = *v28;
          v287 = v28 + 1;
          *unsigned int v4 = (unint64_t)v287;
        }
        *((_DWORD *)this + 340) |= 0x4000000u;
        if ((int)v25 - (int)v287 < 2 || *v287 != 224 || v287[1] != 1) {
          continue;
        }
        v29 = v287 + 2;
        *unsigned int v4 = (unint64_t)v29;
LABEL_784:
        if ((unint64_t)v29 >= v25 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v646);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v288 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v646 = *v29;
          v288 = v29 + 1;
          *unsigned int v4 = (unint64_t)v288;
        }
        *((_DWORD *)this + 340) |= 0x8000000u;
        if ((int)v25 - (int)v288 < 2 || *v288 != 232 || v288[1] != 1) {
          continue;
        }
        v30 = v288 + 2;
        *unsigned int v4 = (unint64_t)v30;
LABEL_793:
        v661[0] = 0;
        if ((unint64_t)v30 >= v25 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v289 = v661[0];
          unint64_t v25 = *v5;
          v290 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v289 = *v30;
          v290 = v30 + 1;
          *unsigned int v4 = (unint64_t)v290;
        }
        *((unsigned char *)this + 576) = v289 != 0;
        *((_DWORD *)this + 340) |= 0x10000000u;
        if ((int)v25 - (int)v290 < 2 || *v290 != 240 || v290[1] != 1) {
          continue;
        }
        v31 = v290 + 2;
        *unsigned int v4 = (unint64_t)v31;
LABEL_802:
        v661[0] = 0;
        if ((unint64_t)v31 >= v25 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v291 = v661[0];
          unint64_t v25 = *v5;
          v292 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v291 = *v31;
          v292 = v31 + 1;
          *unsigned int v4 = (unint64_t)v292;
        }
        *((unsigned char *)this + 577) = v291 != 0;
        *((_DWORD *)this + 340) |= 0x20000000u;
        if ((int)v25 - (int)v292 < 2 || *v292 != 248 || v292[1] != 1) {
          continue;
        }
        v32 = v292 + 2;
        *unsigned int v4 = (unint64_t)v32;
LABEL_811:
        if ((unint64_t)v32 >= v25 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v645);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v293 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v645 = *v32;
          v293 = v32 + 1;
          *unsigned int v4 = (unint64_t)v293;
        }
        *((_DWORD *)this + 340) |= 0x40000000u;
        if ((int)v25 - (int)v293 < 2 || *v293 != 128 || v293[1] != 2) {
          continue;
        }
        v33 = v293 + 2;
        *unsigned int v4 = (unint64_t)v33;
LABEL_820:
        if ((unint64_t)v33 >= v25 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v644);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v294 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v644 = *v33;
          v294 = v33 + 1;
          *unsigned int v4 = (unint64_t)v294;
        }
        *((_DWORD *)this + 340) |= 0x80000000;
        if ((int)v25 - (int)v294 < 2 || *v294 != 136 || v294[1] != 2) {
          continue;
        }
        v34 = v294 + 2;
        *unsigned int v4 = (unint64_t)v34;
LABEL_829:
        if ((unint64_t)v34 >= v25 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v643);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v295 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v643 = *v34;
          v295 = v34 + 1;
          *unsigned int v4 = (unint64_t)v295;
        }
        *((_DWORD *)this + 341) |= 1u;
        if ((int)v25 - (int)v295 < 2 || *v295 != 144 || v295[1] != 2) {
          continue;
        }
        v35 = v295 + 2;
        *unsigned int v4 = (unint64_t)v35;
LABEL_838:
        if ((unint64_t)v35 >= v25 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v642);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v296 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v642 = *v35;
          v296 = v35 + 1;
          *unsigned int v4 = (unint64_t)v296;
        }
        *((_DWORD *)this + 341) |= 2u;
        if ((int)v25 - (int)v296 < 2 || *v296 != 152 || v296[1] != 2) {
          continue;
        }
        v36 = v296 + 2;
        *unsigned int v4 = (unint64_t)v36;
LABEL_847:
        if ((unint64_t)v36 >= v25 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v641);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v297 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v641 = *v36;
          v297 = v36 + 1;
          *unsigned int v4 = (unint64_t)v297;
        }
        *((_DWORD *)this + 341) |= 4u;
        if ((int)v25 - (int)v297 < 2 || *v297 != 160 || v297[1] != 2) {
          continue;
        }
        v37 = v297 + 2;
        *unsigned int v4 = (unint64_t)v37;
LABEL_856:
        if ((unint64_t)v37 >= v25 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v640);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v298 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v640 = *v37;
          v298 = v37 + 1;
          *unsigned int v4 = (unint64_t)v298;
        }
        *((_DWORD *)this + 341) |= 8u;
        if ((int)v25 - (int)v298 < 2 || *v298 != 168 || v298[1] != 2) {
          continue;
        }
        v38 = v298 + 2;
        *unsigned int v4 = (unint64_t)v38;
LABEL_865:
        if ((unint64_t)v38 >= v25 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v639);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v299 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v639 = *v38;
          v299 = v38 + 1;
          *unsigned int v4 = (unint64_t)v299;
        }
        *((_DWORD *)this + 341) |= 0x10u;
        if ((int)v25 - (int)v299 < 2 || *v299 != 176 || v299[1] != 2) {
          continue;
        }
        v39 = v299 + 2;
        *unsigned int v4 = (unint64_t)v39;
LABEL_874:
        if ((unint64_t)v39 >= v25 || (char)*v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v638);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v300 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v638 = *v39;
          v300 = v39 + 1;
          *unsigned int v4 = (unint64_t)v300;
        }
        *((_DWORD *)this + 341) |= 0x20u;
        if ((int)v25 - (int)v300 < 2 || *v300 != 184 || v300[1] != 2) {
          continue;
        }
        v40 = v300 + 2;
        *unsigned int v4 = (unint64_t)v40;
LABEL_883:
        if ((unint64_t)v40 >= v25 || (char)*v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v637);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v301 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v637 = *v40;
          v301 = v40 + 1;
          *unsigned int v4 = (unint64_t)v301;
        }
        *((_DWORD *)this + 341) |= 0x40u;
        if ((int)v25 - (int)v301 < 2 || *v301 != 192 || v301[1] != 2) {
          continue;
        }
        v41 = v301 + 2;
        *unsigned int v4 = (unint64_t)v41;
LABEL_892:
        if ((unint64_t)v41 >= v25 || (char)*v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v636);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v302 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v636 = *v41;
          v302 = v41 + 1;
          *unsigned int v4 = (unint64_t)v302;
        }
        *((_DWORD *)this + 341) |= 0x80u;
        if ((int)v25 - (int)v302 < 2 || *v302 != 200 || v302[1] != 2) {
          continue;
        }
        v42 = v302 + 2;
        *unsigned int v4 = (unint64_t)v42;
LABEL_901:
        if ((unint64_t)v42 >= v25 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v635);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v303 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v635 = *v42;
          v303 = v42 + 1;
          *unsigned int v4 = (unint64_t)v303;
        }
        *((_DWORD *)this + 341) |= 0x100u;
        if ((int)v25 - (int)v303 < 2 || *v303 != 208 || v303[1] != 2) {
          continue;
        }
        v43 = v303 + 2;
        *unsigned int v4 = (unint64_t)v43;
LABEL_910:
        if ((unint64_t)v43 >= v25 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v634);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v304 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v634 = *v43;
          v304 = v43 + 1;
          *unsigned int v4 = (unint64_t)v304;
        }
        *((_DWORD *)this + 341) |= 0x200u;
        if ((int)v25 - (int)v304 < 2 || *v304 != 216 || v304[1] != 2) {
          continue;
        }
        v44 = v304 + 2;
        *unsigned int v4 = (unint64_t)v44;
LABEL_919:
        if ((unint64_t)v44 >= v25 || (char)*v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v633);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v305 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v633 = *v44;
          v305 = v44 + 1;
          *unsigned int v4 = (unint64_t)v305;
        }
        *((_DWORD *)this + 341) |= 0x400u;
        if ((int)v25 - (int)v305 < 2 || *v305 != 224 || v305[1] != 2) {
          continue;
        }
        v45 = v305 + 2;
        *unsigned int v4 = (unint64_t)v45;
LABEL_928:
        if ((unint64_t)v45 >= v25 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v632);
          if (!result) {
            return result;
          }
          unint64_t v25 = *v5;
          v306 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v632 = *v45;
          v306 = v45 + 1;
          *unsigned int v4 = (unint64_t)v306;
        }
        *((_DWORD *)this + 341) |= 0x800u;
        if ((int)v25 - (int)v306 < 2 || *v306 != 232 || v306[1] != 2) {
          continue;
        }
        v46 = v306 + 2;
        *unsigned int v4 = (unint64_t)v46;
LABEL_937:
        if ((unint64_t)v46 >= v25 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v631);
          if (!result) {
            return result;
          }
          v307 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v631 = *v46;
          v307 = v46 + 1;
          *unsigned int v4 = (unint64_t)v307;
        }
        *((_DWORD *)this + 341) |= 0x1000u;
        unint64_t v48 = *v5;
        if ((int)(*v5 - v307) < 2 || *v307 != 240 || v307[1] != 2) {
          continue;
        }
        v47 = v307 + 2;
        *unsigned int v4 = (unint64_t)v47;
LABEL_946:
        if ((unint64_t)v47 >= v48 || (char)*v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v630);
          if (!result) {
            return result;
          }
          unint64_t v48 = *v5;
          v308 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v630 = *v47;
          v308 = v47 + 1;
          *unsigned int v4 = (unint64_t)v308;
        }
        *((_DWORD *)this + 341) |= 0x2000u;
        if ((int)v48 - (int)v308 < 2 || *v308 != 248 || v308[1] != 2) {
          continue;
        }
        v49 = v308 + 2;
        *unsigned int v4 = (unint64_t)v49;
LABEL_955:
        if ((unint64_t)v49 >= v48 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v629);
          if (!result) {
            return result;
          }
          unint64_t v48 = *v5;
          v309 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v629 = *v49;
          v309 = v49 + 1;
          *unsigned int v4 = (unint64_t)v309;
        }
        *((_DWORD *)this + 341) |= 0x4000u;
        if ((int)v48 - (int)v309 < 2 || *v309 != 128 || v309[1] != 3) {
          continue;
        }
        v50 = v309 + 2;
        *unsigned int v4 = (unint64_t)v50;
LABEL_964:
        v661[0] = 0;
        if ((unint64_t)v50 >= v48 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v310 = v661[0];
          unint64_t v48 = *v5;
          v311 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v310 = *v50;
          v311 = v50 + 1;
          *unsigned int v4 = (unint64_t)v311;
        }
        *((_DWORD *)this + 109) = v310;
        *((_DWORD *)this + 341) |= 0x8000u;
        if ((int)v48 - (int)v311 < 2 || *v311 != 136 || v311[1] != 3) {
          continue;
        }
        v51 = v311 + 2;
        *unsigned int v4 = (unint64_t)v51;
LABEL_973:
        v661[0] = 0;
        if ((unint64_t)v51 >= v48 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v312 = v661[0];
          unint64_t v48 = *v5;
          v313 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v312 = *v51;
          v313 = v51 + 1;
          *unsigned int v4 = (unint64_t)v313;
        }
        *((_DWORD *)this + 145) = v312;
        *((_DWORD *)this + 341) |= 0x10000u;
        if ((int)v48 - (int)v313 < 2 || *v313 != 144 || v313[1] != 3) {
          continue;
        }
        v52 = v313 + 2;
        *unsigned int v4 = (unint64_t)v52;
LABEL_982:
        v661[0] = 0;
        if ((unint64_t)v52 >= v48 || (char)*v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v314 = v661[0];
          unint64_t v48 = *v5;
          v315 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v314 = *v52;
          v315 = v52 + 1;
          *unsigned int v4 = (unint64_t)v315;
        }
        *((_DWORD *)this + 146) = v314;
        *((_DWORD *)this + 341) |= 0x20000u;
        if ((int)v48 - (int)v315 < 2 || *v315 != 152 || v315[1] != 3) {
          continue;
        }
        v53 = v315 + 2;
        *unsigned int v4 = (unint64_t)v53;
LABEL_991:
        v661[0] = 0;
        if ((unint64_t)v53 >= v48 || (char)*v53 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v316 = v661[0];
          unint64_t v48 = *v5;
          v317 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v316 = *v53;
          v317 = v53 + 1;
          *unsigned int v4 = (unint64_t)v317;
        }
        *((_DWORD *)this + 147) = v316;
        *((_DWORD *)this + 341) |= 0x40000u;
        if ((int)v48 - (int)v317 < 2 || *v317 != 160 || v317[1] != 3) {
          continue;
        }
        v54 = (char *)(v317 + 2);
        *unsigned int v4 = (unint64_t)v54;
LABEL_1000:
        v661[0] = 0;
        if ((unint64_t)v54 >= v48 || *v54 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v318 = v661[0];
        }
        else
        {
          unsigned int v318 = *v54;
          *unsigned int v4 = (unint64_t)(v54 + 1);
        }
        if (v318 <= 0xC)
        {
          *((_DWORD *)this + 341) |= 0x80000u;
          *((_DWORD *)this + 148) = v318;
        }
        v319 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v319 != 173 || v319[1] != 3) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v319 + 2);
LABEL_126:
        v661[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v661) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 149) = v661[0];
        *((_DWORD *)this + 341) |= 0x100000u;
        v55 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v55 != 181 || v55[1] != 3) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v55 + 2);
LABEL_132:
        v661[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v661) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 150) = v661[0];
        *((_DWORD *)this + 341) |= 0x200000u;
        unint64_t v56 = *v5;
        v57 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) < 2 || *v57 != 184 || v57[1] != 3) {
          continue;
        }
        v58 = v57 + 2;
        *unsigned int v4 = (unint64_t)v58;
LABEL_139:
        if ((unint64_t)v58 >= v56 || (char)*v58 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v660);
          if (!result) {
            return result;
          }
          unint64_t v56 = *v5;
          v59 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v660 = *v58;
          v59 = v58 + 1;
          *unsigned int v4 = (unint64_t)v59;
        }
        *((_DWORD *)this + 341) |= 0x400000u;
        if ((int)v56 - (int)v59 < 2 || *v59 != 192 || v59[1] != 3) {
          continue;
        }
        v60 = v59 + 2;
        *unsigned int v4 = (unint64_t)v60;
LABEL_338:
        v661[0] = 0;
        if ((unint64_t)v60 >= v56 || (char)*v60 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v129 = v661[0];
          unint64_t v56 = *v5;
          v130 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v129 = *v60;
          v130 = v60 + 1;
          *unsigned int v4 = (unint64_t)v130;
        }
        *((unsigned char *)this + 578) = v129 != 0;
        *((_DWORD *)this + 341) |= 0x800000u;
        if ((int)v56 - (int)v130 < 2 || *v130 != 202 || v130[1] != 3) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v130 + 2);
LABEL_1012:
          uint64_t v320 = *((int *)this + 154);
          int v321 = *((_DWORD *)this + 155);
          if ((int)v320 >= v321)
          {
            if (v321 == *((_DWORD *)this + 156))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v574);
              int v321 = *((_DWORD *)this + 155);
            }
            *((_DWORD *)this + 155) = v321 + 1;
            operator new();
          }
          uint64_t v322 = *((void *)this + 76);
          *((_DWORD *)this + 154) = v320 + 1;
          v323 = *(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v322 + 8 * v320);
          v661[0] = 0;
          v324 = (char *)*v4;
          if (*v4 >= *v5 || *v324 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v324;
            *unsigned int v4 = (unint64_t)(v324 + 1);
          }
          int v325 = *((_DWORD *)a2 + 14);
          int v326 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v325 + 1;
          if (v325 >= v326) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergePartialFromCodedStream(v323, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v327 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v327, 1);
          int v328 = v327 - 1;
          if (v328 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v328;
          }
          unint64_t v62 = *v5;
          v130 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v329 = *v130;
          if (v329 == 208) {
            break;
          }
          if (v329 != 202 || v130[1] != 3) {
            goto LABEL_2;
          }
        }
        if (v130[1] != 3) {
          continue;
        }
        v61 = v130 + 2;
        *unsigned int v4 = (unint64_t)v61;
LABEL_1033:
        if ((unint64_t)v61 >= v62 || (char)*v61 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v657);
          if (!result) {
            return result;
          }
          unint64_t v62 = *v5;
          v330 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v657 = *v61;
          v330 = v61 + 1;
          *unsigned int v4 = (unint64_t)v330;
        }
        *((_DWORD *)this + 341) |= 0x2000000u;
        if ((int)v62 - (int)v330 < 2 || *v330 != 218 || v330[1] != 3) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v330 + 2);
LABEL_1042:
          uint64_t v331 = *((int *)this + 162);
          int v332 = *((_DWORD *)this + 163);
          if ((int)v331 >= v332)
          {
            if (v332 == *((_DWORD *)this + 164))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v576);
              int v332 = *((_DWORD *)this + 163);
            }
            *((_DWORD *)this + 163) = v332 + 1;
            operator new();
          }
          uint64_t v333 = *((void *)this + 80);
          *((_DWORD *)this + 162) = v331 + 1;
          v334 = *(awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(v333 + 8 * v331);
          v661[0] = 0;
          v335 = (char *)*v4;
          if (*v4 >= *v5 || *v335 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v335;
            *unsigned int v4 = (unint64_t)(v335 + 1);
          }
          int v336 = *((_DWORD *)a2 + 14);
          int v337 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v336 + 1;
          if (v336 >= v337) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergePartialFromCodedStream(v334, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v338 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v338, 1);
          int v339 = v338 - 1;
          if (v339 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v339;
          }
          unint64_t v64 = *v5;
          v330 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v340 = *v330;
          if (v340 == 224) {
            break;
          }
          if (v340 != 218 || v330[1] != 3) {
            goto LABEL_2;
          }
        }
        if (v330[1] != 3) {
          continue;
        }
        v63 = v330 + 2;
        *unsigned int v4 = (unint64_t)v63;
LABEL_1063:
        if ((unint64_t)v63 >= v64 || (char)*v63 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v656);
          if (!result) {
            return result;
          }
          unint64_t v64 = *v5;
          v341 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v656 = *v63;
          v341 = v63 + 1;
          *unsigned int v4 = (unint64_t)v341;
        }
        *((_DWORD *)this + 341) |= 0x8000000u;
        if ((int)v64 - (int)v341 < 2 || *v341 != 232 || v341[1] != 3) {
          continue;
        }
        v65 = v341 + 2;
        *unsigned int v4 = (unint64_t)v65;
LABEL_1072:
        if ((unint64_t)v65 >= v64 || (char)*v65 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v651);
          if (!result) {
            return result;
          }
          unint64_t v64 = *v5;
          v342 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v651 = *v65;
          v342 = v65 + 1;
          *unsigned int v4 = (unint64_t)v342;
        }
        *((_DWORD *)this + 341) |= 0x10000000u;
        if ((int)v64 - (int)v342 < 2 || *v342 != 240 || v342[1] != 3) {
          continue;
        }
        v66 = v342 + 2;
        *unsigned int v4 = (unint64_t)v66;
LABEL_1081:
        if ((unint64_t)v66 >= v64 || (char)*v66 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v628);
          if (!result) {
            return result;
          }
          unint64_t v64 = *v5;
          v343 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v628 = *v66;
          v343 = v66 + 1;
          *unsigned int v4 = (unint64_t)v343;
        }
        *((_DWORD *)this + 341) |= 0x20000000u;
        if ((int)v64 - (int)v343 < 2 || *v343 != 250 || v343[1] != 3) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v343 + 2);
LABEL_1090:
          uint64_t v344 = *((int *)this + 174);
          int v345 = *((_DWORD *)this + 175);
          if ((int)v344 >= v345)
          {
            if (v345 == *((_DWORD *)this + 176))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v572);
              int v345 = *((_DWORD *)this + 175);
            }
            *((_DWORD *)this + 175) = v345 + 1;
            operator new();
          }
          uint64_t v346 = *((void *)this + 86);
          *((_DWORD *)this + 174) = v344 + 1;
          v347 = *(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(v346 + 8 * v344);
          v661[0] = 0;
          v348 = (char *)*v4;
          if (*v4 >= *v5 || *v348 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v348;
            *unsigned int v4 = (unint64_t)(v348 + 1);
          }
          int v349 = *((_DWORD *)a2 + 14);
          int v350 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v349 + 1;
          if (v349 >= v350) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergePartialFromCodedStream(v347, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v351 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v351, 1);
          int v352 = v351 - 1;
          if (v352 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v352;
          }
          unint64_t v68 = *v5;
          v343 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v353 = *v343;
          if (v353 == 128) {
            break;
          }
          if (v353 != 250 || v343[1] != 3) {
            goto LABEL_2;
          }
        }
        if (v343[1] != 4) {
          continue;
        }
        v67 = (char *)(v343 + 2);
        *unsigned int v4 = (unint64_t)v67;
LABEL_1111:
        v661[0] = 0;
        if ((unint64_t)v67 >= v68 || *v67 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v354 = v661[0];
        }
        else
        {
          unsigned int v354 = *v67;
          *unsigned int v4 = (unint64_t)(v67 + 1);
        }
        if (v354 <= 0xD)
        {
          *((_DWORD *)this + 341) |= 0x80000000;
          *((_DWORD *)this + 202) = v354;
        }
        v355 = (unsigned __int8 *)*v4;
        if ((int)(*(_DWORD *)v5 - *v4) < 2 || *v355 != 138 || v355[1] != 4) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v355 + 2);
LABEL_1122:
          uint64_t v356 = *((int *)this + 180);
          int v357 = *((_DWORD *)this + 181);
          if ((int)v356 >= v357)
          {
            if (v357 == *((_DWORD *)this + 182))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v575);
              int v357 = *((_DWORD *)this + 181);
            }
            *((_DWORD *)this + 181) = v357 + 1;
            operator new();
          }
          uint64_t v358 = *((void *)this + 89);
          *((_DWORD *)this + 180) = v356 + 1;
          v359 = *(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(v358 + 8 * v356);
          v661[0] = 0;
          v360 = (char *)*v4;
          if (*v4 >= *v5 || *v360 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v360;
            *unsigned int v4 = (unint64_t)(v360 + 1);
          }
          int v361 = *((_DWORD *)a2 + 14);
          int v362 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v361 + 1;
          if (v361 >= v362) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergePartialFromCodedStream(v359, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v363 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v363, 1);
          int v364 = v363 - 1;
          if (v364 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v364;
          }
          unint64_t v70 = *v5;
          v355 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v365 = *v355;
          if (v365 == 144) {
            break;
          }
          if (v365 != 138 || v355[1] != 4) {
            goto LABEL_2;
          }
        }
        if (v355[1] != 4) {
          continue;
        }
        v69 = v355 + 2;
        *unsigned int v4 = (unint64_t)v69;
LABEL_1143:
        if ((unint64_t)v69 >= v70 || (char)*v69 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v655);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v366 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v655 = *v69;
          v366 = v69 + 1;
          *unsigned int v4 = (unint64_t)v366;
        }
        *((_DWORD *)this + 342) |= 2u;
        if ((int)v70 - (int)v366 < 2 || *v366 != 152 || v366[1] != 4) {
          continue;
        }
        v71 = v366 + 2;
        *unsigned int v4 = (unint64_t)v71;
LABEL_1152:
        if ((unint64_t)v71 >= v70 || (char)*v71 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v650);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v367 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v650 = *v71;
          v367 = v71 + 1;
          *unsigned int v4 = (unint64_t)v367;
        }
        *((_DWORD *)this + 342) |= 4u;
        if ((int)v70 - (int)v367 < 2 || *v367 != 160 || v367[1] != 4) {
          continue;
        }
        v72 = v367 + 2;
        *unsigned int v4 = (unint64_t)v72;
LABEL_1161:
        if ((unint64_t)v72 >= v70 || (char)*v72 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v627);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v368 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v627 = *v72;
          v368 = v72 + 1;
          *unsigned int v4 = (unint64_t)v368;
        }
        *((_DWORD *)this + 342) |= 8u;
        if ((int)v70 - (int)v368 < 2 || *v368 != 168 || v368[1] != 4) {
          continue;
        }
        v73 = v368 + 2;
        *unsigned int v4 = (unint64_t)v73;
LABEL_1170:
        if ((unint64_t)v73 >= v70 || (char)*v73 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v626);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v369 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v626 = *v73;
          v369 = v73 + 1;
          *unsigned int v4 = (unint64_t)v369;
        }
        *((_DWORD *)this + 342) |= 0x10u;
        if ((int)v70 - (int)v369 < 2 || *v369 != 176 || v369[1] != 4) {
          continue;
        }
        v74 = v369 + 2;
        *unsigned int v4 = (unint64_t)v74;
LABEL_1179:
        if ((unint64_t)v74 >= v70 || (char)*v74 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v625);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v370 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v625 = *v74;
          v370 = v74 + 1;
          *unsigned int v4 = (unint64_t)v370;
        }
        *((_DWORD *)this + 342) |= 0x20u;
        if ((int)v70 - (int)v370 < 2 || *v370 != 184 || v370[1] != 4) {
          continue;
        }
        v75 = v370 + 2;
        *unsigned int v4 = (unint64_t)v75;
LABEL_1188:
        if ((unint64_t)v75 >= v70 || (char)*v75 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v624);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v371 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v624 = *v75;
          v371 = v75 + 1;
          *unsigned int v4 = (unint64_t)v371;
        }
        *((_DWORD *)this + 342) |= 0x40u;
        if ((int)v70 - (int)v371 < 2 || *v371 != 192 || v371[1] != 4) {
          continue;
        }
        v76 = v371 + 2;
        *unsigned int v4 = (unint64_t)v76;
LABEL_1197:
        if ((unint64_t)v76 >= v70 || (char)*v76 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v623);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v372 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v623 = *v76;
          v372 = v76 + 1;
          *unsigned int v4 = (unint64_t)v372;
        }
        *((_DWORD *)this + 342) |= 0x80u;
        if ((int)v70 - (int)v372 < 2 || *v372 != 200 || v372[1] != 4) {
          continue;
        }
        v77 = v372 + 2;
        *unsigned int v4 = (unint64_t)v77;
LABEL_1206:
        if ((unint64_t)v77 >= v70 || (char)*v77 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v622);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v373 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v622 = *v77;
          v373 = v77 + 1;
          *unsigned int v4 = (unint64_t)v373;
        }
        *((_DWORD *)this + 342) |= 0x100u;
        if ((int)v70 - (int)v373 < 2 || *v373 != 208 || v373[1] != 4) {
          continue;
        }
        v78 = v373 + 2;
        *unsigned int v4 = (unint64_t)v78;
LABEL_1215:
        if ((unint64_t)v78 >= v70 || (char)*v78 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v621);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v374 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v621 = *v78;
          v374 = v78 + 1;
          *unsigned int v4 = (unint64_t)v374;
        }
        *((_DWORD *)this + 342) |= 0x200u;
        if ((int)v70 - (int)v374 < 2 || *v374 != 216 || v374[1] != 4) {
          continue;
        }
        v79 = v374 + 2;
        *unsigned int v4 = (unint64_t)v79;
LABEL_1224:
        if ((unint64_t)v79 >= v70 || (char)*v79 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v620);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v375 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v620 = *v79;
          v375 = v79 + 1;
          *unsigned int v4 = (unint64_t)v375;
        }
        *((_DWORD *)this + 342) |= 0x400u;
        if ((int)v70 - (int)v375 < 2 || *v375 != 224 || v375[1] != 4) {
          continue;
        }
        v80 = v375 + 2;
        *unsigned int v4 = (unint64_t)v80;
LABEL_1233:
        if ((unint64_t)v80 >= v70 || (char)*v80 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v619);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v376 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v619 = *v80;
          v376 = v80 + 1;
          *unsigned int v4 = (unint64_t)v376;
        }
        *((_DWORD *)this + 342) |= 0x800u;
        if ((int)v70 - (int)v376 < 2 || *v376 != 232 || v376[1] != 4) {
          continue;
        }
        v81 = v376 + 2;
        *unsigned int v4 = (unint64_t)v81;
LABEL_1242:
        if ((unint64_t)v81 >= v70 || (char)*v81 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v618);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v377 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v618 = *v81;
          v377 = v81 + 1;
          *unsigned int v4 = (unint64_t)v377;
        }
        *((_DWORD *)this + 342) |= 0x1000u;
        if ((int)v70 - (int)v377 < 2 || *v377 != 240 || v377[1] != 4) {
          continue;
        }
        v82 = v377 + 2;
        *unsigned int v4 = (unint64_t)v82;
LABEL_1251:
        if ((unint64_t)v82 >= v70 || (char)*v82 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v617);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v378 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v617 = *v82;
          v378 = v82 + 1;
          *unsigned int v4 = (unint64_t)v378;
        }
        *((_DWORD *)this + 342) |= 0x2000u;
        if ((int)v70 - (int)v378 < 2 || *v378 != 248 || v378[1] != 4) {
          continue;
        }
        v83 = v378 + 2;
        *unsigned int v4 = (unint64_t)v83;
LABEL_1260:
        if ((unint64_t)v83 >= v70 || (char)*v83 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v616);
          if (!result) {
            return result;
          }
          unint64_t v70 = *v5;
          v379 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v616 = *v83;
          v379 = v83 + 1;
          *unsigned int v4 = (unint64_t)v379;
        }
        *((_DWORD *)this + 342) |= 0x4000u;
        if ((int)v70 - (int)v379 < 2 || *v379 != 128 || v379[1] != 5) {
          continue;
        }
        v84 = v379 + 2;
        *unsigned int v4 = (unint64_t)v84;
LABEL_1269:
        v661[0] = 0;
        if ((unint64_t)v84 >= v70 || (char)*v84 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v380 = v661[0];
          unint64_t v70 = *v5;
          v381 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v380 = *v84;
          v381 = v84 + 1;
          *unsigned int v4 = (unint64_t)v381;
        }
        *((unsigned char *)this + 579) = v380 != 0;
        *((_DWORD *)this + 342) |= 0x8000u;
        if ((int)v70 - (int)v381 < 2 || *v381 != 138 || v381[1] != 5) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v381 + 2);
LABEL_1278:
          uint64_t v382 = *((int *)this + 216);
          int v383 = *((_DWORD *)this + 217);
          if ((int)v382 >= v383)
          {
            if (v383 == *((_DWORD *)this + 218))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v571);
              int v383 = *((_DWORD *)this + 217);
            }
            *((_DWORD *)this + 217) = v383 + 1;
            operator new();
          }
          uint64_t v384 = *((void *)this + 107);
          *((_DWORD *)this + 216) = v382 + 1;
          v385 = *(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(v384 + 8 * v382);
          v661[0] = 0;
          v386 = (char *)*v4;
          if (*v4 >= *v5 || *v386 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v386;
            *unsigned int v4 = (unint64_t)(v386 + 1);
          }
          int v387 = *((_DWORD *)a2 + 14);
          int v388 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v387 + 1;
          if (v387 >= v388) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_ChecksumData::MergePartialFromCodedStream(v385, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v389 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v389, 1);
          int v390 = v389 - 1;
          if (v390 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v390;
          }
          unint64_t v86 = *v5;
          v381 = (unsigned __int8 *)*v4;
          if ((int)(*v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v391 = *v381;
          if (v391 == 144) {
            break;
          }
          if (v391 != 138 || v381[1] != 5) {
            goto LABEL_2;
          }
        }
        if (v381[1] != 5) {
          continue;
        }
        v85 = v381 + 2;
        *unsigned int v4 = (unint64_t)v85;
LABEL_1299:
        if ((unint64_t)v85 >= v86 || (char)*v85 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v654);
          if (!result) {
            return result;
          }
          unint64_t v86 = *v5;
          v392 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v654 = *v85;
          v392 = v85 + 1;
          *unsigned int v4 = (unint64_t)v392;
        }
        *((_DWORD *)this + 342) |= 0x20000u;
        if ((int)v86 - (int)v392 < 2 || *v392 != 152 || v392[1] != 5) {
          continue;
        }
        v87 = v392 + 2;
        *unsigned int v4 = (unint64_t)v87;
LABEL_1308:
        if ((unint64_t)v87 >= v86 || (char)*v87 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v649);
          if (!result) {
            return result;
          }
          unint64_t v86 = *v5;
          v393 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v649 = *v87;
          v393 = v87 + 1;
          *unsigned int v4 = (unint64_t)v393;
        }
        *((_DWORD *)this + 342) |= 0x40000u;
        if ((int)v86 - (int)v393 < 2 || *v393 != 160 || v393[1] != 5) {
          continue;
        }
        v88 = v393 + 2;
        *unsigned int v4 = (unint64_t)v88;
LABEL_1317:
        v661[0] = 0;
        if ((unint64_t)v88 >= v86 || (char)*v88 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v394 = v661[0];
          unint64_t v86 = *v5;
          v395 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v394 = *v88;
          v395 = v88 + 1;
          *unsigned int v4 = (unint64_t)v395;
        }
        *((unsigned char *)this + 1044) = v394 != 0;
        *((_DWORD *)this + 342) |= 0x80000u;
        if ((int)v86 - (int)v395 < 2 || *v395 != 168 || v395[1] != 5) {
          continue;
        }
        v89 = v395 + 2;
        *unsigned int v4 = (unint64_t)v89;
LABEL_1326:
        v661[0] = 0;
        if ((unint64_t)v89 >= v86 || (char)*v89 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v396 = v661[0];
          unint64_t v86 = *v5;
          v397 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v396 = *v89;
          v397 = v89 + 1;
          *unsigned int v4 = (unint64_t)v397;
        }
        *((_DWORD *)this + 203) = v396;
        *((_DWORD *)this + 342) |= 0x100000u;
        if ((int)v86 - (int)v397 < 2 || *v397 != 176 || v397[1] != 5) {
          continue;
        }
        v90 = v397 + 2;
        *unsigned int v4 = (unint64_t)v90;
LABEL_1335:
        v661[0] = 0;
        if ((unint64_t)v90 >= v86 || (char)*v90 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v398 = v661[0];
          unint64_t v86 = *v5;
          v399 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v398 = *v90;
          v399 = v90 + 1;
          *unsigned int v4 = (unint64_t)v399;
        }
        *((_DWORD *)this + 224) = v398;
        *((_DWORD *)this + 342) |= 0x200000u;
        if ((int)v86 - (int)v399 < 2 || *v399 != 184 || v399[1] != 5) {
          continue;
        }
        v91 = v399 + 2;
        *unsigned int v4 = (unint64_t)v91;
LABEL_1344:
        v661[0] = 0;
        if ((unint64_t)v91 >= v86 || (char)*v91 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
          if (!result) {
            return result;
          }
          unsigned int v400 = v661[0];
          unint64_t v86 = *v5;
          v401 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int v400 = *v91;
          v401 = v91 + 1;
          *unsigned int v4 = (unint64_t)v401;
        }
        *((_DWORD *)this + 225) = v400;
        *((_DWORD *)this + 342) |= 0x400000u;
        if ((int)v86 - (int)v401 < 2 || *v401 != 192 || v401[1] != 5) {
          continue;
        }
        v92 = v401 + 2;
        *unsigned int v4 = (unint64_t)v92;
LABEL_1353:
        if ((unint64_t)v92 >= v86 || (char)*v92 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v615);
          if (!result) {
            return result;
          }
          unint64_t v86 = *v5;
          v402 = (unsigned __int8 *)*v4;
        }
        else
        {
          unint64_t *v615 = *v92;
          v402 = v92 + 1;
          *unsigned int v4 = (unint64_t)v402;
        }
        int v93 = *((_DWORD *)this + 342) | 0x800000;
        *((_DWORD *)this + 342) = v93;
        if ((int)v86 - (int)v402 < 2 || *v402 != 202 || v402[1] != 5) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v402 + 2);
LABEL_210:
        *((_DWORD *)this + 342) = v93 | 0x1000000;
        v94 = (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((void *)this + 114);
        if (!v94) {
          operator new();
        }
        v661[0] = 0;
        v95 = (char *)*v4;
        if (*v4 >= *v5 || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
        }
          }
        else
        {
          v661[0] = *v95;
          *unsigned int v4 = (unint64_t)(v95 + 1);
        }
        int v122 = *((_DWORD *)a2 + 14);
        int v123 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v122 + 1;
        if (v122 >= v123) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergePartialFromCodedStream(v94, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v124 = *((_DWORD *)a2 + 14);
        BOOL v125 = __OFSUB__(v124, 1);
        int v126 = v124 - 1;
        if (v126 < 0 == v125) {
          *((_DWORD *)a2 + 14) = v126;
        }
        unint64_t v97 = *v5;
        v127 = (unsigned __int8 *)*v4;
        if ((int)(*v5 - *v4) <= 1 || *v127 != 208 || v127[1] != 5) {
          continue;
        }
        v96 = v127 + 2;
        *unsigned int v4 = (unint64_t)v96;
LABEL_329:
        if ((unint64_t)v96 >= v97 || (char)*v96 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v658);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v128 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v658 = *v96;
          v128 = v96 + 1;
          *unsigned int v4 = (unint64_t)v128;
        }
        *((_DWORD *)this + 342) |= 0x2000000u;
        if ((int)v97 - (int)v128 < 2 || *v128 != 216 || v128[1] != 5) {
          continue;
        }
        v98 = v128 + 2;
        *unsigned int v4 = (unint64_t)v98;
LABEL_347:
        if ((unint64_t)v98 >= v97 || (char)*v98 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v652);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v131 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v652 = *v98;
          v131 = v98 + 1;
          *unsigned int v4 = (unint64_t)v131;
        }
        *((_DWORD *)this + 342) |= 0x4000000u;
        if ((int)v97 - (int)v131 < 2 || *v131 != 224 || v131[1] != 5) {
          continue;
        }
        v99 = v131 + 2;
        *unsigned int v4 = (unint64_t)v99;
LABEL_362:
        if ((unint64_t)v99 >= v97 || (char)*v99 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v614);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v132 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v614 = *v99;
          v132 = v99 + 1;
          *unsigned int v4 = (unint64_t)v132;
        }
        *((_DWORD *)this + 342) |= 0x8000000u;
        if ((int)v97 - (int)v132 < 2 || *v132 != 232 || v132[1] != 5) {
          continue;
        }
        v100 = v132 + 2;
        *unsigned int v4 = (unint64_t)v100;
LABEL_371:
        if ((unint64_t)v100 >= v97 || (char)*v100 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v613);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v133 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v613 = *v100;
          v133 = v100 + 1;
          *unsigned int v4 = (unint64_t)v133;
        }
        *((_DWORD *)this + 342) |= 0x10000000u;
        if ((int)v97 - (int)v133 < 2 || *v133 != 240 || v133[1] != 5) {
          continue;
        }
        v101 = v133 + 2;
        *unsigned int v4 = (unint64_t)v101;
LABEL_380:
        if ((unint64_t)v101 >= v97 || (char)*v101 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v612);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v134 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v612 = *v101;
          v134 = v101 + 1;
          *unsigned int v4 = (unint64_t)v134;
        }
        *((_DWORD *)this + 342) |= 0x20000000u;
        if ((int)v97 - (int)v134 < 2 || *v134 != 248 || v134[1] != 5) {
          continue;
        }
        v102 = v134 + 2;
        *unsigned int v4 = (unint64_t)v102;
LABEL_389:
        if ((unint64_t)v102 >= v97 || (char)*v102 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v611);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v135 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v611 = *v102;
          v135 = v102 + 1;
          *unsigned int v4 = (unint64_t)v135;
        }
        *((_DWORD *)this + 342) |= 0x40000000u;
        if ((int)v97 - (int)v135 < 2 || *v135 != 128 || v135[1] != 6) {
          continue;
        }
        v103 = v135 + 2;
        *unsigned int v4 = (unint64_t)v103;
LABEL_398:
        if ((unint64_t)v103 >= v97 || (char)*v103 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v610);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v136 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v610 = *v103;
          v136 = v103 + 1;
          *unsigned int v4 = (unint64_t)v136;
        }
        *((_DWORD *)this + 342) |= 0x80000000;
        if ((int)v97 - (int)v136 < 2 || *v136 != 136 || v136[1] != 6) {
          continue;
        }
        v104 = v136 + 2;
        *unsigned int v4 = (unint64_t)v104;
LABEL_407:
        if ((unint64_t)v104 >= v97 || (char)*v104 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v609);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v137 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v609 = *v104;
          v137 = v104 + 1;
          *unsigned int v4 = (unint64_t)v137;
        }
        *((_DWORD *)this + 343) |= 1u;
        if ((int)v97 - (int)v137 < 2 || *v137 != 144 || v137[1] != 6) {
          continue;
        }
        v105 = v137 + 2;
        *unsigned int v4 = (unint64_t)v105;
LABEL_416:
        if ((unint64_t)v105 >= v97 || (char)*v105 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v608);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v138 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v608 = *v105;
          v138 = v105 + 1;
          *unsigned int v4 = (unint64_t)v138;
        }
        *((_DWORD *)this + 343) |= 2u;
        if ((int)v97 - (int)v138 < 2 || *v138 != 152 || v138[1] != 6) {
          continue;
        }
        v106 = v138 + 2;
        *unsigned int v4 = (unint64_t)v106;
LABEL_425:
        if ((unint64_t)v106 >= v97 || (char)*v106 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v607);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v139 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v607 = *v106;
          v139 = v106 + 1;
          *unsigned int v4 = (unint64_t)v139;
        }
        *((_DWORD *)this + 343) |= 4u;
        if ((int)v97 - (int)v139 < 2 || *v139 != 160 || v139[1] != 6) {
          continue;
        }
        v107 = v139 + 2;
        *unsigned int v4 = (unint64_t)v107;
LABEL_434:
        if ((unint64_t)v107 >= v97 || (char)*v107 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v606);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v140 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v606 = *v107;
          v140 = v107 + 1;
          *unsigned int v4 = (unint64_t)v140;
        }
        *((_DWORD *)this + 343) |= 8u;
        if ((int)v97 - (int)v140 < 2 || *v140 != 168 || v140[1] != 6) {
          continue;
        }
        v108 = v140 + 2;
        *unsigned int v4 = (unint64_t)v108;
LABEL_443:
        if ((unint64_t)v108 >= v97 || (char)*v108 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v605);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v141 = (unsigned __int8 *)*v4;
        }
        else
        {
          unsigned int *v605 = *v108;
          v141 = v108 + 1;
          *unsigned int v4 = (unint64_t)v141;
        }
        *((_DWORD *)this + 343) |= 0x10u;
        if ((int)v97 - (int)v141 < 2 || *v141 != 176 || v141[1] != 6) {
          continue;
        }
        v109 = v141 + 2;
        *unsigned int v4 = (unint64_t)v109;
LABEL_452:
        if ((unint64_t)v109 >= v97 || (char)*v109 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          unint64_t v97 = *v5;
          v142 = (unsigned __int8 *)*v4;
        }
        else
        {
          *uint64_t v9 = *v109;
          v142 = v109 + 1;
          *unsigned int v4 = (unint64_t)v142;
        }
        *((_DWORD *)this + 343) |= 0x20u;
        if ((int)v97 - (int)v142 < 2 || *v142 != 186 || v142[1] != 6) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v142 + 2);
LABEL_1363:
          uint64_t v403 = *((int *)this + 244);
          int v404 = *((_DWORD *)this + 245);
          if ((int)v403 >= v404)
          {
            if (v404 == *((_DWORD *)this + 246))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v570);
              int v404 = *((_DWORD *)this + 245);
            }
            *((_DWORD *)this + 245) = v404 + 1;
            operator new();
          }
          uint64_t v405 = *((void *)this + 121);
          *((_DWORD *)this + 244) = v403 + 1;
          v406 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v405 + 8 * v403);
          v661[0] = 0;
          v407 = (char *)*v4;
          if (*v4 >= *v5 || *v407 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v407;
            *unsigned int v4 = (unint64_t)(v407 + 1);
          }
          int v408 = *((_DWORD *)a2 + 14);
          int v409 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v408 + 1;
          if (v408 >= v409) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v406, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v410 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v410, 1);
          int v411 = v410 - 1;
          if (v411 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v411;
          }
          v142 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v412 = *v142;
          if (v412 == 194) {
            break;
          }
          if (v412 != 186 || v142[1] != 6) {
            goto LABEL_2;
          }
        }
        if (v142[1] != 6) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v142 + 2);
LABEL_1384:
          uint64_t v413 = *((int *)this + 250);
          int v414 = *((_DWORD *)this + 251);
          if ((int)v413 >= v414)
          {
            if (v414 == *((_DWORD *)this + 252))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v577);
              int v414 = *((_DWORD *)this + 251);
            }
            *((_DWORD *)this + 251) = v414 + 1;
            operator new();
          }
          uint64_t v415 = *((void *)this + 124);
          *((_DWORD *)this + 250) = v413 + 1;
          v416 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v415 + 8 * v413);
          v661[0] = 0;
          v417 = (char *)*v4;
          if (*v4 >= *v5 || *v417 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v417;
            *unsigned int v4 = (unint64_t)(v417 + 1);
          }
          int v418 = *((_DWORD *)a2 + 14);
          int v419 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v418 + 1;
          if (v418 >= v419) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v416, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v420 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v420, 1);
          int v421 = v420 - 1;
          if (v421 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v421;
          }
          v142 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v422 = *v142;
          if (v422 == 202) {
            break;
          }
          if (v422 != 194 || v142[1] != 6) {
            goto LABEL_2;
          }
        }
        if (v142[1] != 6) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v142 + 2);
LABEL_1405:
          uint64_t v423 = *((int *)this + 256);
          int v424 = *((_DWORD *)this + 257);
          if ((int)v423 >= v424)
          {
            if (v424 == *((_DWORD *)this + 258))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v578);
              int v424 = *((_DWORD *)this + 257);
            }
            *((_DWORD *)this + 257) = v424 + 1;
            operator new();
          }
          uint64_t v425 = *((void *)this + 127);
          *((_DWORD *)this + 256) = v423 + 1;
          v426 = *(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(v425 + 8 * v423);
          v661[0] = 0;
          v427 = (char *)*v4;
          if (*v4 >= *v5 || *v427 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v427;
            *unsigned int v4 = (unint64_t)(v427 + 1);
          }
          int v428 = *((_DWORD *)a2 + 14);
          int v429 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v428 + 1;
          if (v428 >= v429) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::MergePartialFromCodedStream(v426, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v430 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v430, 1);
          int v431 = v430 - 1;
          if (v431 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v431;
          }
          v142 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v432 = *v142;
          if (v432 == 210) {
            break;
          }
          if (v432 != 202 || v142[1] != 6) {
            goto LABEL_2;
          }
        }
        if (v142[1] != 6) {
          continue;
        }
        while (1)
        {
          *unsigned int v4 = (unint64_t)(v142 + 2);
LABEL_1426:
          uint64_t v433 = *((int *)this + 264);
          int v434 = *((_DWORD *)this + 265);
          if ((int)v433 >= v434)
          {
            if (v434 == *((_DWORD *)this + 266))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v588);
              int v434 = *((_DWORD *)this + 265);
            }
            *((_DWORD *)this + 265) = v434 + 1;
            operator new();
          }
          uint64_t v435 = *((void *)this + 131);
          *((_DWORD *)this + 264) = v433 + 1;
          v436 = *(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(v435 + 8 * v433);
          v661[0] = 0;
          v437 = (char *)*v4;
          if (*v4 >= *v5 || *v437 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
          }
            }
          else
          {
            v661[0] = *v437;
            *unsigned int v4 = (unint64_t)(v437 + 1);
          }
          int v438 = *((_DWORD *)a2 + 14);
          int v439 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v438 + 1;
          if (v438 >= v439) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::MergePartialFromCodedStream(v436, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v440 = *((_DWORD *)a2 + 14);
          BOOL v125 = __OFSUB__(v440, 1);
          int v441 = v440 - 1;
          if (v441 < 0 == v125) {
            *((_DWORD *)a2 + 14) = v441;
          }
          v142 = (unsigned __int8 *)*v4;
          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
            goto LABEL_2;
          }
          int v442 = *v142;
          if (v442 == 218) {
            break;
          }
          if (v442 != 210 || v142[1] != 6) {
            goto LABEL_2;
          }
        }
        if (v142[1] != 6) {
          continue;
        }
        *unsigned int v4 = (unint64_t)(v142 + 2);
LABEL_1447:
        *((_DWORD *)this + 343) |= 0x400u;
        v443 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((void *)this + 134);
        if (!v443) {
          operator new();
        }
        v661[0] = 0;
        v444 = (char *)*v4;
        if (*v4 >= *v5 || *v444 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
        }
          }
        else
        {
          v661[0] = *v444;
          *unsigned int v4 = (unint64_t)(v444 + 1);
        }
        int v445 = *((_DWORD *)a2 + 14);
        int v446 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v445 + 1;
        if (v445 < v446)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::MergePartialFromCodedStream(v443, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v447 = *((_DWORD *)a2 + 14);
              BOOL v125 = __OFSUB__(v447, 1);
              int v448 = v447 - 1;
              if (v448 < 0 == v125) {
                *((_DWORD *)a2 + 14) = v448;
              }
              v449 = (unsigned __int8 *)*v4;
              if ((int)(*(_DWORD *)v5 - *v4) > 1 && *v449 == 226 && v449[1] == 6)
              {
                while (1)
                {
                  *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1462:
                  uint64_t v450 = *((int *)this + 272);
                  int v451 = *((_DWORD *)this + 273);
                  if ((int)v450 >= v451)
                  {
                    if (v451 == *((_DWORD *)this + 274))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v595);
                      int v451 = *((_DWORD *)this + 273);
                    }
                    *((_DWORD *)this + 273) = v451 + 1;
                    operator new();
                  }
                  uint64_t v452 = *((void *)this + 135);
                  *((_DWORD *)this + 272) = v450 + 1;
                  v453 = *(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(v452 + 8 * v450);
                  v661[0] = 0;
                  v454 = (char *)*v4;
                  if (*v4 >= *v5 || *v454 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                  }
                    }
                  else
                  {
                    v661[0] = *v454;
                    *unsigned int v4 = (unint64_t)(v454 + 1);
                  }
                  int v455 = *((_DWORD *)a2 + 14);
                  int v456 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v455 + 1;
                  if (v455 >= v456) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::MergePartialFromCodedStream(v453, a2)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v457 = *((_DWORD *)a2 + 14);
                  BOOL v125 = __OFSUB__(v457, 1);
                  int v458 = v457 - 1;
                  if (v458 < 0 == v125) {
                    *((_DWORD *)a2 + 14) = v458;
                  }
                  v449 = (unsigned __int8 *)*v4;
                  if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                    goto LABEL_2;
                  }
                  int v459 = *v449;
                  if (v459 == 234) {
                    break;
                  }
                  if (v459 != 226 || v449[1] != 6) {
                    goto LABEL_2;
                  }
                }
                if (v449[1] == 6)
                {
                  while (1)
                  {
                    *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1483:
                    uint64_t v460 = *((int *)this + 278);
                    int v461 = *((_DWORD *)this + 279);
                    if ((int)v460 >= v461)
                    {
                      if (v461 == *((_DWORD *)this + 280))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v587);
                        int v461 = *((_DWORD *)this + 279);
                      }
                      *((_DWORD *)this + 279) = v461 + 1;
                      operator new();
                    }
                    uint64_t v462 = *((void *)this + 138);
                    *((_DWORD *)this + 278) = v460 + 1;
                    v463 = *(awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(v462 + 8 * v460);
                    v661[0] = 0;
                    v464 = (char *)*v4;
                    if (*v4 >= *v5 || *v464 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                    }
                      }
                    else
                    {
                      v661[0] = *v464;
                      *unsigned int v4 = (unint64_t)(v464 + 1);
                    }
                    int v465 = *((_DWORD *)a2 + 14);
                    int v466 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v465 + 1;
                    if (v465 >= v466) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!awd::metrics::LocationGPSSessionStatistics_NSOnOffState::MergePartialFromCodedStream(v463, a2)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v467 = *((_DWORD *)a2 + 14);
                    BOOL v125 = __OFSUB__(v467, 1);
                    int v468 = v467 - 1;
                    if (v468 < 0 == v125) {
                      *((_DWORD *)a2 + 14) = v468;
                    }
                    v449 = (unsigned __int8 *)*v4;
                    if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                      goto LABEL_2;
                    }
                    int v469 = *v449;
                    if (v469 == 242) {
                      break;
                    }
                    if (v469 != 234 || v449[1] != 6) {
                      goto LABEL_2;
                    }
                  }
                  if (v449[1] == 6)
                  {
                    while (1)
                    {
                      *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1504:
                      uint64_t v470 = *((int *)this + 284);
                      int v471 = *((_DWORD *)this + 285);
                      if ((int)v470 >= v471)
                      {
                        if (v471 == *((_DWORD *)this + 286))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v586);
                          int v471 = *((_DWORD *)this + 285);
                        }
                        *((_DWORD *)this + 285) = v471 + 1;
                        operator new();
                      }
                      uint64_t v472 = *((void *)this + 141);
                      *((_DWORD *)this + 284) = v470 + 1;
                      v473 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v472 + 8 * v470);
                      v661[0] = 0;
                      v474 = (char *)*v4;
                      if (*v4 >= *v5 || *v474 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                      }
                        }
                      else
                      {
                        v661[0] = *v474;
                        *unsigned int v4 = (unint64_t)(v474 + 1);
                      }
                      int v475 = *((_DWORD *)a2 + 14);
                      int v476 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v475 + 1;
                      if (v475 >= v476) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v473, a2)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v477 = *((_DWORD *)a2 + 14);
                      BOOL v125 = __OFSUB__(v477, 1);
                      int v478 = v477 - 1;
                      if (v478 < 0 == v125) {
                        *((_DWORD *)a2 + 14) = v478;
                      }
                      v449 = (unsigned __int8 *)*v4;
                      if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                        goto LABEL_2;
                      }
                      int v479 = *v449;
                      if (v479 == 250) {
                        break;
                      }
                      if (v479 != 242 || v449[1] != 6) {
                        goto LABEL_2;
                      }
                    }
                    if (v449[1] == 6)
                    {
                      while (1)
                      {
                        *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1525:
                        uint64_t v480 = *((int *)this + 290);
                        int v481 = *((_DWORD *)this + 291);
                        if ((int)v480 >= v481)
                        {
                          if (v481 == *((_DWORD *)this + 292))
                          {
                            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v585);
                            int v481 = *((_DWORD *)this + 291);
                          }
                          *((_DWORD *)this + 291) = v481 + 1;
                          operator new();
                        }
                        uint64_t v482 = *((void *)this + 144);
                        *((_DWORD *)this + 290) = v480 + 1;
                        v483 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v482 + 8 * v480);
                        v661[0] = 0;
                        v484 = (char *)*v4;
                        if (*v4 >= *v5 || *v484 < 0)
                        {
                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                        }
                          }
                        else
                        {
                          v661[0] = *v484;
                          *unsigned int v4 = (unint64_t)(v484 + 1);
                        }
                        int v485 = *((_DWORD *)a2 + 14);
                        int v486 = *((_DWORD *)a2 + 15);
                        *((_DWORD *)a2 + 14) = v485 + 1;
                        if (v485 >= v486) {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                        if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v483, a2)|| !*((unsigned char *)a2 + 36))
                        {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                        int v487 = *((_DWORD *)a2 + 14);
                        BOOL v125 = __OFSUB__(v487, 1);
                        int v488 = v487 - 1;
                        if (v488 < 0 == v125) {
                          *((_DWORD *)a2 + 14) = v488;
                        }
                        v449 = (unsigned __int8 *)*v4;
                        if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                          goto LABEL_2;
                        }
                        int v489 = *v449;
                        if (v489 == 130) {
                          break;
                        }
                        if (v489 != 250 || v449[1] != 6) {
                          goto LABEL_2;
                        }
                      }
                      if (v449[1] == 7)
                      {
                        while (1)
                        {
                          *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1546:
                          uint64_t v490 = *((int *)this + 296);
                          int v491 = *((_DWORD *)this + 297);
                          if ((int)v490 >= v491)
                          {
                            if (v491 == *((_DWORD *)this + 298))
                            {
                              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v584);
                              int v491 = *((_DWORD *)this + 297);
                            }
                            *((_DWORD *)this + 297) = v491 + 1;
                            operator new();
                          }
                          uint64_t v492 = *((void *)this + 147);
                          *((_DWORD *)this + 296) = v490 + 1;
                          v493 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v492 + 8 * v490);
                          v661[0] = 0;
                          v494 = (char *)*v4;
                          if (*v4 >= *v5 || *v494 < 0)
                          {
                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                          }
                            }
                          else
                          {
                            v661[0] = *v494;
                            *unsigned int v4 = (unint64_t)(v494 + 1);
                          }
                          int v495 = *((_DWORD *)a2 + 14);
                          int v496 = *((_DWORD *)a2 + 15);
                          *((_DWORD *)a2 + 14) = v495 + 1;
                          if (v495 >= v496) {
                            return 0;
                          }
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                          if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v493, a2)|| !*((unsigned char *)a2 + 36))
                          {
                            return 0;
                          }
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                          int v497 = *((_DWORD *)a2 + 14);
                          BOOL v125 = __OFSUB__(v497, 1);
                          int v498 = v497 - 1;
                          if (v498 < 0 == v125) {
                            *((_DWORD *)a2 + 14) = v498;
                          }
                          v449 = (unsigned __int8 *)*v4;
                          if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                            goto LABEL_2;
                          }
                          int v499 = *v449;
                          if (v499 == 138) {
                            break;
                          }
                          if (v499 != 130 || v449[1] != 7) {
                            goto LABEL_2;
                          }
                        }
                        if (v449[1] == 7)
                        {
                          while (1)
                          {
                            *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1567:
                            uint64_t v500 = *((int *)this + 302);
                            int v501 = *((_DWORD *)this + 303);
                            if ((int)v500 >= v501)
                            {
                              if (v501 == *((_DWORD *)this + 304))
                              {
                                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v583);
                                int v501 = *((_DWORD *)this + 303);
                              }
                              *((_DWORD *)this + 303) = v501 + 1;
                              operator new();
                            }
                            uint64_t v502 = *((void *)this + 150);
                            *((_DWORD *)this + 302) = v500 + 1;
                            v503 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(v502 + 8 * v500);
                            v661[0] = 0;
                            v504 = (char *)*v4;
                            if (*v4 >= *v5 || *v504 < 0)
                            {
                              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                            }
                              }
                            else
                            {
                              v661[0] = *v504;
                              *unsigned int v4 = (unint64_t)(v504 + 1);
                            }
                            int v505 = *((_DWORD *)a2 + 14);
                            int v506 = *((_DWORD *)a2 + 15);
                            *((_DWORD *)a2 + 14) = v505 + 1;
                            if (v505 >= v506) {
                              return 0;
                            }
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                            if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergePartialFromCodedStream(v503, a2)|| !*((unsigned char *)a2 + 36))
                            {
                              return 0;
                            }
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                            int v507 = *((_DWORD *)a2 + 14);
                            BOOL v125 = __OFSUB__(v507, 1);
                            int v508 = v507 - 1;
                            if (v508 < 0 == v125) {
                              *((_DWORD *)a2 + 14) = v508;
                            }
                            v449 = (unsigned __int8 *)*v4;
                            if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                              goto LABEL_2;
                            }
                            int v509 = *v449;
                            if (v509 == 146) {
                              break;
                            }
                            if (v509 != 138 || v449[1] != 7) {
                              goto LABEL_2;
                            }
                          }
                          if (v449[1] == 7)
                          {
                            while (1)
                            {
                              *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1588:
                              uint64_t v510 = *((int *)this + 308);
                              int v511 = *((_DWORD *)this + 309);
                              if ((int)v510 >= v511)
                              {
                                if (v511 == *((_DWORD *)this + 310))
                                {
                                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v582);
                                  int v511 = *((_DWORD *)this + 309);
                                }
                                *((_DWORD *)this + 309) = v511 + 1;
                                operator new();
                              }
                              uint64_t v512 = *((void *)this + 153);
                              *((_DWORD *)this + 308) = v510 + 1;
                              v513 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v512 + 8 * v510);
                              v661[0] = 0;
                              v514 = (char *)*v4;
                              if (*v4 >= *v5 || *v514 < 0)
                              {
                                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                              }
                                }
                              else
                              {
                                v661[0] = *v514;
                                *unsigned int v4 = (unint64_t)(v514 + 1);
                              }
                              int v515 = *((_DWORD *)a2 + 14);
                              int v516 = *((_DWORD *)a2 + 15);
                              *((_DWORD *)a2 + 14) = v515 + 1;
                              if (v515 >= v516) {
                                return 0;
                              }
                              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                              if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v513, a2)|| !*((unsigned char *)a2 + 36))
                              {
                                return 0;
                              }
                              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                              int v517 = *((_DWORD *)a2 + 14);
                              BOOL v125 = __OFSUB__(v517, 1);
                              int v518 = v517 - 1;
                              if (v518 < 0 == v125) {
                                *((_DWORD *)a2 + 14) = v518;
                              }
                              v449 = (unsigned __int8 *)*v4;
                              if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                                goto LABEL_2;
                              }
                              int v519 = *v449;
                              if (v519 == 154) {
                                break;
                              }
                              if (v519 != 146 || v449[1] != 7) {
                                goto LABEL_2;
                              }
                            }
                            if (v449[1] == 7)
                            {
                              while (1)
                              {
                                *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1609:
                                uint64_t v520 = *((int *)this + 314);
                                int v521 = *((_DWORD *)this + 315);
                                if ((int)v520 >= v521)
                                {
                                  if (v521 == *((_DWORD *)this + 316))
                                  {
                                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v581);
                                    int v521 = *((_DWORD *)this + 315);
                                  }
                                  *((_DWORD *)this + 315) = v521 + 1;
                                  operator new();
                                }
                                uint64_t v522 = *((void *)this + 156);
                                *((_DWORD *)this + 314) = v520 + 1;
                                v523 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v522 + 8 * v520);
                                v661[0] = 0;
                                v524 = (char *)*v4;
                                if (*v4 >= *v5 || *v524 < 0)
                                {
                                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                                }
                                  }
                                else
                                {
                                  v661[0] = *v524;
                                  *unsigned int v4 = (unint64_t)(v524 + 1);
                                }
                                int v525 = *((_DWORD *)a2 + 14);
                                int v526 = *((_DWORD *)a2 + 15);
                                *((_DWORD *)a2 + 14) = v525 + 1;
                                if (v525 >= v526) {
                                  return 0;
                                }
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                                if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v523, a2)|| !*((unsigned char *)a2 + 36))
                                {
                                  return 0;
                                }
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                                int v527 = *((_DWORD *)a2 + 14);
                                BOOL v125 = __OFSUB__(v527, 1);
                                int v528 = v527 - 1;
                                if (v528 < 0 == v125) {
                                  *((_DWORD *)a2 + 14) = v528;
                                }
                                v449 = (unsigned __int8 *)*v4;
                                if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                                  goto LABEL_2;
                                }
                                int v529 = *v449;
                                if (v529 == 162) {
                                  break;
                                }
                                if (v529 != 154 || v449[1] != 7) {
                                  goto LABEL_2;
                                }
                              }
                              if (v449[1] == 7)
                              {
                                while (1)
                                {
                                  *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1630:
                                  uint64_t v530 = *((int *)this + 320);
                                  int v531 = *((_DWORD *)this + 321);
                                  if ((int)v530 >= v531)
                                  {
                                    if (v531 == *((_DWORD *)this + 322))
                                    {
                                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v580);
                                      int v531 = *((_DWORD *)this + 321);
                                    }
                                    *((_DWORD *)this + 321) = v531 + 1;
                                    operator new();
                                  }
                                  uint64_t v532 = *((void *)this + 159);
                                  *((_DWORD *)this + 320) = v530 + 1;
                                  v533 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v532 + 8 * v530);
                                  v661[0] = 0;
                                  v534 = (char *)*v4;
                                  if (*v4 >= *v5 || *v534 < 0)
                                  {
                                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                                  }
                                    }
                                  else
                                  {
                                    v661[0] = *v534;
                                    *unsigned int v4 = (unint64_t)(v534 + 1);
                                  }
                                  int v535 = *((_DWORD *)a2 + 14);
                                  int v536 = *((_DWORD *)a2 + 15);
                                  *((_DWORD *)a2 + 14) = v535 + 1;
                                  if (v535 >= v536) {
                                    return 0;
                                  }
                                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                                  if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v533, a2)|| !*((unsigned char *)a2 + 36))
                                  {
                                    return 0;
                                  }
                                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                                  int v537 = *((_DWORD *)a2 + 14);
                                  BOOL v125 = __OFSUB__(v537, 1);
                                  int v538 = v537 - 1;
                                  if (v538 < 0 == v125) {
                                    *((_DWORD *)a2 + 14) = v538;
                                  }
                                  v449 = (unsigned __int8 *)*v4;
                                  if ((int)(*(_DWORD *)v5 - *v4) <= 1) {
                                    goto LABEL_2;
                                  }
                                  int v539 = *v449;
                                  if (v539 == 170) {
                                    break;
                                  }
                                  if (v539 != 162 || v449[1] != 7) {
                                    goto LABEL_2;
                                  }
                                }
                                if (v449[1] == 7)
                                {
                                  while (1)
                                  {
                                    *unsigned int v4 = (unint64_t)(v449 + 2);
LABEL_1651:
                                    uint64_t v540 = *((int *)this + 326);
                                    int v541 = *((_DWORD *)this + 327);
                                    if ((int)v540 >= v541)
                                    {
                                      if (v541 == *((_DWORD *)this + 328))
                                      {
                                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v579);
                                        int v541 = *((_DWORD *)this + 327);
                                      }
                                      *((_DWORD *)this + 327) = v541 + 1;
                                      operator new();
                                    }
                                    uint64_t v542 = *((void *)this + 162);
                                    *((_DWORD *)this + 326) = v540 + 1;
                                    v543 = *(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(v542 + 8 * v540);
                                    v661[0] = 0;
                                    v544 = (char *)*v4;
                                    if (*v4 >= *v5 || *v544 < 0)
                                    {
                                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                                    }
                                      }
                                    else
                                    {
                                      v661[0] = *v544;
                                      *unsigned int v4 = (unint64_t)(v544 + 1);
                                    }
                                    int v545 = *((_DWORD *)a2 + 14);
                                    int v546 = *((_DWORD *)a2 + 15);
                                    *((_DWORD *)a2 + 14) = v545 + 1;
                                    if (v545 >= v546) {
                                      return 0;
                                    }
                                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                                    if (!awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergePartialFromCodedStream(v543, a2)|| !*((unsigned char *)a2 + 36))
                                    {
                                      return 0;
                                    }
                                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                                    int v547 = *((_DWORD *)a2 + 14);
                                    BOOL v125 = __OFSUB__(v547, 1);
                                    int v548 = v547 - 1;
                                    if (v548 < 0 == v125) {
                                      *((_DWORD *)a2 + 14) = v548;
                                    }
                                    unint64_t v111 = *v5;
                                    v449 = (unsigned __int8 *)*v4;
                                    if ((int)(*v5 - *v4) <= 1) {
                                      goto LABEL_2;
                                    }
                                    int v549 = *v449;
                                    if (v549 == 176) {
                                      break;
                                    }
                                    if (v549 != 170 || v449[1] != 7) {
                                      goto LABEL_2;
                                    }
                                  }
                                  if (v449[1] == 7)
                                  {
                                    v110 = v449 + 2;
                                    *unsigned int v4 = (unint64_t)v110;
LABEL_1672:
                                    v661[0] = 0;
                                    if ((unint64_t)v110 >= v111 || (char)*v110 < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
                                      if (!result) {
                                        return result;
                                      }
                                      unsigned int v550 = v661[0];
                                      unint64_t v111 = *v5;
                                      v551 = (unsigned __int8 *)*v4;
                                    }
                                    else
                                    {
                                      unsigned int v550 = *v110;
                                      v551 = v110 + 1;
                                      *unsigned int v4 = (unint64_t)v551;
                                    }
                                    *((unsigned char *)this + 1045) = v550 != 0;
                                    *((_DWORD *)this + 343) |= 0x200000u;
                                    if ((int)v111 - (int)v551 >= 2 && *v551 == 184 && v551[1] == 7)
                                    {
                                      v112 = v551 + 2;
                                      *unsigned int v4 = (unint64_t)v112;
LABEL_1681:
                                      v661[0] = 0;
                                      if ((unint64_t)v112 >= v111 || (char)*v112 < 0)
                                      {
                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
                                        if (!result) {
                                          return result;
                                        }
                                        unsigned int v552 = v661[0];
                                        unint64_t v111 = *v5;
                                        v553 = (unsigned __int8 *)*v4;
                                      }
                                      else
                                      {
                                        unsigned int v552 = *v112;
                                        v553 = v112 + 1;
                                        *unsigned int v4 = (unint64_t)(v112 + 1);
                                      }
                                      *((unsigned char *)this + 1046) = v552 != 0;
                                      *((_DWORD *)this + 343) |= 0x400000u;
                                      if ((int)v111 - (int)v553 >= 2 && *v553 == 194 && v553[1] == 7)
                                      {
                                        while (1)
                                        {
                                          *unsigned int v4 = (unint64_t)(v553 + 2);
LABEL_1690:
                                          uint64_t v554 = *((int *)this + 332);
                                          int v555 = *((_DWORD *)this + 333);
                                          if ((int)v554 >= v555)
                                          {
                                            if (v555 == *((_DWORD *)this + 334))
                                            {
                                              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v573);
                                              int v555 = *((_DWORD *)this + 333);
                                            }
                                            *((_DWORD *)this + 333) = v555 + 1;
                                            operator new();
                                          }
                                          uint64_t v556 = *((void *)this + 165);
                                          *((_DWORD *)this + 332) = v554 + 1;
                                          v557 = *(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(v556 + 8 * v554);
                                          v661[0] = 0;
                                          v558 = (char *)*v4;
                                          if (*v4 >= *v5 || *v558 < 0)
                                          {
                                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661))return 0; {
                                          }
                                            }
                                          else
                                          {
                                            v661[0] = *v558;
                                            *unsigned int v4 = (unint64_t)(v558 + 1);
                                          }
                                          int v559 = *((_DWORD *)a2 + 14);
                                          int v560 = *((_DWORD *)a2 + 15);
                                          *((_DWORD *)a2 + 14) = v559 + 1;
                                          if (v559 >= v560) {
                                            return 0;
                                          }
                                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                                          if (!awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::MergePartialFromCodedStream(v557, a2)|| !*((unsigned char *)a2 + 36))
                                          {
                                            return 0;
                                          }
                                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                                          int v561 = *((_DWORD *)a2 + 14);
                                          BOOL v125 = __OFSUB__(v561, 1);
                                          int v562 = v561 - 1;
                                          if (v562 < 0 == v125) {
                                            *((_DWORD *)a2 + 14) = v562;
                                          }
                                          unint64_t v114 = *v5;
                                          v553 = (unsigned __int8 *)*v4;
                                          if ((int)(*v5 - *v4) <= 1) {
                                            goto LABEL_2;
                                          }
                                          int v563 = *v553;
                                          if (v563 == 200) {
                                            break;
                                          }
                                          if (v563 != 194 || v553[1] != 7) {
                                            goto LABEL_2;
                                          }
                                        }
                                        if (v553[1] == 7)
                                        {
                                          v113 = v553 + 2;
                                          *unsigned int v4 = (unint64_t)(v553 + 2);
LABEL_1711:
                                          v661[0] = 0;
                                          if ((unint64_t)v113 >= v114 || (char)*v113 < 0)
                                          {
                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
                                            if (!result) {
                                              return result;
                                            }
                                            unsigned int v564 = v661[0];
                                            unint64_t v114 = *v5;
                                            v565 = (unsigned __int8 *)*v4;
                                          }
                                          else
                                          {
                                            unsigned int v564 = *v113;
                                            v565 = v113 + 1;
                                            *unsigned int v4 = (unint64_t)v565;
                                          }
                                          *((_DWORD *)this + 336) = v564;
                                          *((_DWORD *)this + 343) |= 0x1000000u;
                                          if ((int)v114 - (int)v565 >= 2 && *v565 == 208 && v565[1] == 7)
                                          {
                                            v115 = v565 + 2;
                                            *unsigned int v4 = (unint64_t)v115;
LABEL_1720:
                                            v661[0] = 0;
                                            if ((unint64_t)v115 >= v114 || (char)*v115 < 0)
                                            {
                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
                                              if (!result) {
                                                return result;
                                              }
                                              unsigned int v566 = v661[0];
                                              unint64_t v114 = *v5;
                                              v567 = (unsigned __int8 *)*v4;
                                            }
                                            else
                                            {
                                              unsigned int v566 = *v115;
                                              v567 = v115 + 1;
                                              *unsigned int v4 = (unint64_t)v567;
                                            }
                                            *((_DWORD *)this + 337) = v566;
                                            *((_DWORD *)this + 343) |= 0x2000000u;
                                            if ((int)v114 - (int)v567 >= 2 && *v567 == 216 && v567[1] == 7)
                                            {
                                              v116 = (char *)(v567 + 2);
                                              *unsigned int v4 = (unint64_t)v116;
LABEL_1729:
                                              v661[0] = 0;
                                              if ((unint64_t)v116 >= v114 || *v116 < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v661);
                                                if (!result) {
                                                  return result;
                                                }
                                                unsigned int v568 = v661[0];
                                                v569 = (unsigned __int8 *)*v4;
                                                unint64_t v114 = *v5;
                                              }
                                              else
                                              {
                                                unsigned int v568 = *v116;
                                                v569 = (unsigned __int8 *)(v116 + 1);
                                                *unsigned int v4 = (unint64_t)v569;
                                              }
                                              *((_DWORD *)this + 338) = v568;
                                              *((_DWORD *)this + 343) |= 0x4000000u;
                                              if (v569 == (unsigned __int8 *)v114
                                                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                                              {
                                                *((_DWORD *)a2 + 8) = 0;
                                                uint64_t result = 1;
                                                *((unsigned char *)a2 + 36) = 1;
                                                return result;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v21 = (char *)*v4;
        unint64_t v17 = *v5;
        goto LABEL_299;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_307;
        }
        goto LABEL_282;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_311;
        }
        goto LABEL_282;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_315;
        }
        goto LABEL_282;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_462;
        }
        goto LABEL_282;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_480;
        }
        goto LABEL_282;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v22 = (unsigned __int8 *)*v4;
        unint64_t v23 = *v5;
        goto LABEL_498;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_506;
        }
        goto LABEL_282;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_524;
        }
        goto LABEL_282;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_542;
        }
        goto LABEL_282;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_560;
        }
        goto LABEL_282;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_580;
        }
        goto LABEL_282;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_601;
        }
        goto LABEL_282;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_622;
        }
        goto LABEL_282;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_643;
        }
        goto LABEL_282;
      case 0x14u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_664;
        }
        goto LABEL_282;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_685;
        }
        goto LABEL_282;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_706;
        }
        goto LABEL_282;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_727;
        }
        goto LABEL_282;
      case 0x18u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v24 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_748;
      case 0x19u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v26 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_757;
      case 0x1Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v27 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_766;
      case 0x1Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v28 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_775;
      case 0x1Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v29 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_784;
      case 0x1Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v30 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_793;
      case 0x1Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v31 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_802;
      case 0x1Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v32 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_811;
      case 0x20u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v33 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_820;
      case 0x21u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v34 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_829;
      case 0x22u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v35 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_838;
      case 0x23u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v36 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_847;
      case 0x24u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v37 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_856;
      case 0x25u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v38 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_865;
      case 0x26u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v39 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_874;
      case 0x27u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v40 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_883;
      case 0x28u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v41 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_892;
      case 0x29u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v42 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_901;
      case 0x2Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v43 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_910;
      case 0x2Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v44 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_919;
      case 0x2Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v45 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_928;
      case 0x2Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v46 = (unsigned __int8 *)*v4;
        unint64_t v25 = *v5;
        goto LABEL_937;
      case 0x2Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v47 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_946;
      case 0x2Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v49 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_955;
      case 0x30u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v50 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_964;
      case 0x31u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v51 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_973;
      case 0x32u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v52 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_982;
      case 0x33u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v53 = (unsigned __int8 *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_991;
      case 0x34u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v54 = (char *)*v4;
        unint64_t v48 = *v5;
        goto LABEL_1000;
      case 0x35u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_126;
        }
        goto LABEL_282;
      case 0x36u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_132;
        }
        goto LABEL_282;
      case 0x37u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v58 = (unsigned __int8 *)*v4;
        unint64_t v56 = *v5;
        goto LABEL_139;
      case 0x38u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v60 = (unsigned __int8 *)*v4;
        unint64_t v56 = *v5;
        goto LABEL_338;
      case 0x39u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1012;
        }
        goto LABEL_282;
      case 0x3Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v61 = (unsigned __int8 *)*v4;
        unint64_t v62 = *v5;
        goto LABEL_1033;
      case 0x3Bu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1042;
        }
        goto LABEL_282;
      case 0x3Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v63 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1063;
      case 0x3Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v65 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1072;
      case 0x3Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v66 = (unsigned __int8 *)*v4;
        unint64_t v64 = *v5;
        goto LABEL_1081;
      case 0x3Fu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1090;
        }
        goto LABEL_282;
      case 0x40u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v67 = (char *)*v4;
        unint64_t v68 = *v5;
        goto LABEL_1111;
      case 0x41u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1122;
        }
        goto LABEL_282;
      case 0x42u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v69 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1143;
      case 0x43u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v71 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1152;
      case 0x44u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v72 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1161;
      case 0x45u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v73 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1170;
      case 0x46u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v74 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1179;
      case 0x47u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v75 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1188;
      case 0x48u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v76 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1197;
      case 0x49u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v77 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1206;
      case 0x4Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v78 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1215;
      case 0x4Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v79 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1224;
      case 0x4Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v80 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1233;
      case 0x4Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v81 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1242;
      case 0x4Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v82 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1251;
      case 0x4Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v83 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1260;
      case 0x50u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v84 = (unsigned __int8 *)*v4;
        unint64_t v70 = *v5;
        goto LABEL_1269;
      case 0x51u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1278;
        }
        goto LABEL_282;
      case 0x52u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v85 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1299;
      case 0x53u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v87 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1308;
      case 0x54u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v88 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1317;
      case 0x55u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v89 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1326;
      case 0x56u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v90 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1335;
      case 0x57u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v91 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1344;
      case 0x58u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v92 = (unsigned __int8 *)*v4;
        unint64_t v86 = *v5;
        goto LABEL_1353;
      case 0x59u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_282;
        }
        int v93 = *((_DWORD *)this + 342);
        goto LABEL_210;
      case 0x5Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v96 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_329;
      case 0x5Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v98 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_347;
      case 0x5Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v99 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_362;
      case 0x5Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v100 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_371;
      case 0x5Eu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v101 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_380;
      case 0x5Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v102 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_389;
      case 0x60u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v103 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_398;
      case 0x61u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v104 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_407;
      case 0x62u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v105 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_416;
      case 0x63u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v106 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_425;
      case 0x64u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v107 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_434;
      case 0x65u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v108 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_443;
      case 0x66u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v109 = (unsigned __int8 *)*v4;
        unint64_t v97 = *v5;
        goto LABEL_452;
      case 0x67u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1363;
        }
        goto LABEL_282;
      case 0x68u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1384;
        }
        goto LABEL_282;
      case 0x69u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1405;
        }
        goto LABEL_282;
      case 0x6Au:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1426;
        }
        goto LABEL_282;
      case 0x6Bu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1447;
        }
        goto LABEL_282;
      case 0x6Cu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1462;
        }
        goto LABEL_282;
      case 0x6Du:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1483;
        }
        goto LABEL_282;
      case 0x6Eu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1504;
        }
        goto LABEL_282;
      case 0x6Fu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1525;
        }
        goto LABEL_282;
      case 0x70u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1546;
        }
        goto LABEL_282;
      case 0x71u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1567;
        }
        goto LABEL_282;
      case 0x72u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1588;
        }
        goto LABEL_282;
      case 0x73u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1609;
        }
        goto LABEL_282;
      case 0x74u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1630;
        }
        goto LABEL_282;
      case 0x75u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1651;
        }
        goto LABEL_282;
      case 0x76u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v110 = (unsigned __int8 *)*v4;
        unint64_t v111 = *v5;
        goto LABEL_1672;
      case 0x77u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v112 = (unsigned __int8 *)*v4;
        unint64_t v111 = *v5;
        goto LABEL_1681;
      case 0x78u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_1690;
        }
        goto LABEL_282;
      case 0x79u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v113 = (unsigned __int8 *)*v4;
        unint64_t v114 = *v5;
        goto LABEL_1711;
      case 0x7Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v115 = (unsigned __int8 *)*v4;
        unint64_t v114 = *v5;
        goto LABEL_1720;
      case 0x7Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_282;
        }
        v116 = (char *)*v4;
        unint64_t v114 = *v5;
        goto LABEL_1729;
      default:
        int v12 = TagFallback & 7;
LABEL_282:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 1360);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 1360);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_208;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_209;
  }
LABEL_208:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_210;
  }
LABEL_209:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_211;
  }
LABEL_210:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_212;
  }
LABEL_211:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 1360);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_212:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 48), a3);
  if ((*(_DWORD *)(v5 + 1360) & 0x80) != 0) {
LABEL_9:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 52), a3);
LABEL_10:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 80) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 88));
  }
  if ((*(unsigned char *)(v5 + 1361) & 4) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 432), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(void *)(*(void *)(v5 + 104) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 112));
  }
  if (*(int *)(v5 + 136) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(*(void *)(v5 + 128) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 136));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(void *)(*(void *)(v5 + 152) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 184) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 176) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 184));
  }
  if (*(int *)(v5 + 208) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 200) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 208));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(void *)(*(void *)(v5 + 224) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 232));
  }
  if (*(int *)(v5 + 256) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(void *)(*(void *)(v5 + 248) + 8 * v15++), a2, a4);
    while (v15 < *(int *)(v5 + 256));
  }
  if (*(int *)(v5 + 280) >= 1)
  {
    uint64_t v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(void *)(*(void *)(v5 + 272) + 8 * v16++), a2, a4);
    while (v16 < *(int *)(v5 + 280));
  }
  if (*(int *)(v5 + 304) >= 1)
  {
    uint64_t v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(void *)(*(void *)(v5 + 296) + 8 * v17++), a2, a4);
    while (v17 < *(int *)(v5 + 304));
  }
  if (*(int *)(v5 + 328) >= 1)
  {
    uint64_t v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(void *)(*(void *)(v5 + 320) + 8 * v18++), a2, a4);
    while (v18 < *(int *)(v5 + 328));
  }
  if (*(int *)(v5 + 352) >= 1)
  {
    uint64_t v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(void *)(*(void *)(v5 + 344) + 8 * v19++), a2, a4);
    while (v19 < *(int *)(v5 + 352));
  }
  if (*(int *)(v5 + 376) >= 1)
  {
    uint64_t v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(void *)(*(void *)(v5 + 368) + 8 * v20++), a2, a4);
    while (v20 < *(int *)(v5 + 376));
  }
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x800000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(void *)(v5 + 392), (uint64_t)a2, a4);
    int v21 = *(_DWORD *)(v5 + 1360);
    if ((v21 & 0x1000000) == 0)
    {
LABEL_56:
      if ((v21 & 0x2000000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_216;
    }
  }
  else if ((v21 & 0x1000000) == 0)
  {
    goto LABEL_56;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(void *)(v5 + 400), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x2000000) == 0)
  {
LABEL_57:
    if ((v21 & 0x4000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_217;
  }
LABEL_216:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(void *)(v5 + 408), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x4000000) == 0)
  {
LABEL_58:
    if ((v21 & 0x8000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_218;
  }
LABEL_217:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(void *)(v5 + 416), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x8000000) == 0)
  {
LABEL_59:
    if ((v21 & 0x10000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_219;
  }
LABEL_218:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(void *)(v5 + 424), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x10000000) == 0)
  {
LABEL_60:
    if ((v21 & 0x20000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_220;
  }
LABEL_219:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned __int8 *)(v5 + 576), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x20000000) == 0)
  {
LABEL_61:
    if ((v21 & 0x40000000) == 0) {
      goto LABEL_62;
    }
LABEL_221:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(void *)(v5 + 440), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 1360) & 0x80000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_222;
  }
LABEL_220:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 577), (uint64_t)a2, a4);
  int v21 = *(_DWORD *)(v5 + 1360);
  if ((v21 & 0x40000000) != 0) {
    goto LABEL_221;
  }
LABEL_62:
  if ((v21 & 0x80000000) == 0) {
    goto LABEL_63;
  }
LABEL_222:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(void *)(v5 + 448), (uint64_t)a2, a4);
LABEL_63:
  int v22 = *(_DWORD *)(v5 + 1364);
  if (v22)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(void *)(v5 + 456), (uint64_t)a2, a4);
    int v22 = *(_DWORD *)(v5 + 1364);
    if ((v22 & 2) == 0)
    {
LABEL_65:
      if ((v22 & 4) == 0) {
        goto LABEL_66;
      }
      goto LABEL_225;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_65;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(void *)(v5 + 464), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 4) == 0)
  {
LABEL_66:
    if ((v22 & 8) == 0) {
      goto LABEL_67;
    }
    goto LABEL_226;
  }
LABEL_225:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(void *)(v5 + 472), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 8) == 0)
  {
LABEL_67:
    if ((v22 & 0x10) == 0) {
      goto LABEL_68;
    }
    goto LABEL_227;
  }
LABEL_226:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(void *)(v5 + 480), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x10) == 0)
  {
LABEL_68:
    if ((v22 & 0x20) == 0) {
      goto LABEL_69;
    }
    goto LABEL_228;
  }
LABEL_227:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(void *)(v5 + 488), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x20) == 0)
  {
LABEL_69:
    if ((v22 & 0x40) == 0) {
      goto LABEL_70;
    }
    goto LABEL_229;
  }
LABEL_228:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, *(void *)(v5 + 496), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x40) == 0)
  {
LABEL_70:
    if ((v22 & 0x80) == 0) {
      goto LABEL_71;
    }
    goto LABEL_230;
  }
LABEL_229:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(void *)(v5 + 504), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x80) == 0)
  {
LABEL_71:
    if ((v22 & 0x100) == 0) {
      goto LABEL_72;
    }
    goto LABEL_231;
  }
LABEL_230:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(void *)(v5 + 512), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x100) == 0)
  {
LABEL_72:
    if ((v22 & 0x200) == 0) {
      goto LABEL_73;
    }
    goto LABEL_232;
  }
LABEL_231:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(void *)(v5 + 520), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x200) == 0)
  {
LABEL_73:
    if ((v22 & 0x400) == 0) {
      goto LABEL_74;
    }
    goto LABEL_233;
  }
LABEL_232:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(void *)(v5 + 528), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x400) == 0)
  {
LABEL_74:
    if ((v22 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_234;
  }
LABEL_233:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(void *)(v5 + 536), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x800) == 0)
  {
LABEL_75:
    if ((v22 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_235;
  }
LABEL_234:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(void *)(v5 + 544), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x1000) == 0)
  {
LABEL_76:
    if ((v22 & 0x2000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_236;
  }
LABEL_235:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(void *)(v5 + 552), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x2000) == 0)
  {
LABEL_77:
    if ((v22 & 0x4000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_237;
  }
LABEL_236:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(void *)(v5 + 560), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x4000) == 0)
  {
LABEL_78:
    if ((v22 & 0x8000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_238;
  }
LABEL_237:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(void *)(v5 + 568), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x8000) == 0)
  {
LABEL_79:
    if ((v22 & 0x10000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_239;
  }
LABEL_238:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(unsigned int *)(v5 + 436), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x10000) == 0)
  {
LABEL_80:
    if ((v22 & 0x20000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_240;
  }
LABEL_239:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 580), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x20000) == 0)
  {
LABEL_81:
    if ((v22 & 0x40000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_241;
  }
LABEL_240:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, *(unsigned int *)(v5 + 584), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x40000) == 0)
  {
LABEL_82:
    if ((v22 & 0x80000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_242;
  }
LABEL_241:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, *(unsigned int *)(v5 + 588), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x80000) == 0)
  {
LABEL_83:
    if ((v22 & 0x100000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_243;
  }
LABEL_242:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 592), (uint64_t)a2, a4);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x100000) == 0)
  {
LABEL_84:
    if ((v22 & 0x200000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_244;
  }
LABEL_243:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(float *)(v5 + 596), a3);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x200000) == 0)
  {
LABEL_85:
    if ((v22 & 0x400000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_245;
  }
LABEL_244:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, (uint64_t)a2, *(float *)(v5 + 600), a3);
  int v22 = *(_DWORD *)(v5 + 1364);
  if ((v22 & 0x400000) == 0)
  {
LABEL_86:
    if ((v22 & 0x800000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
LABEL_245:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 604), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1364) & 0x800000) != 0) {
LABEL_87:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned __int8 *)(v5 + 578), (uint64_t)a2, a4);
LABEL_88:
  if (*(int *)(v5 + 616) >= 1)
  {
    uint64_t v23 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x39, *(void *)(*(void *)(v5 + 608) + 8 * v23++), a2, a4);
    while (v23 < *(int *)(v5 + 616));
  }
  if ((*(unsigned char *)(v5 + 1367) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3A, *(void *)(v5 + 632), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 648) >= 1)
  {
    uint64_t v24 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3B, *(void *)(*(void *)(v5 + 640) + 8 * v24++), a2, a4);
    while (v24 < *(int *)(v5 + 648));
  }
  int v25 = *(_DWORD *)(v5 + 1364);
  if ((v25 & 0x8000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, *(void *)(v5 + 664), (uint64_t)a2, a4);
    int v25 = *(_DWORD *)(v5 + 1364);
    if ((v25 & 0x10000000) == 0)
    {
LABEL_98:
      if ((v25 & 0x20000000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_99;
    }
  }
  else if ((v25 & 0x10000000) == 0)
  {
    goto LABEL_98;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(void *)(v5 + 672), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1364) & 0x20000000) != 0) {
LABEL_99:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, *(void *)(v5 + 680), (uint64_t)a2, a4);
LABEL_100:
  if (*(int *)(v5 + 696) >= 1)
  {
    uint64_t v26 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, *(void *)(*(void *)(v5 + 688) + 8 * v26++), a2, a4);
    while (v26 < *(int *)(v5 + 696));
  }
  if ((*(_DWORD *)(v5 + 1364) & 0x80000000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, *(unsigned int *)(v5 + 808), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 720) >= 1)
  {
    uint64_t v27 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, *(void *)(*(void *)(v5 + 712) + 8 * v27++), a2, a4);
    while (v27 < *(int *)(v5 + 720));
  }
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, *(void *)(v5 + 736), (uint64_t)a2, a4);
    int v28 = *(_DWORD *)(v5 + 1368);
    if ((v28 & 4) == 0)
    {
LABEL_110:
      if ((v28 & 8) == 0) {
        goto LABEL_111;
      }
      goto LABEL_252;
    }
  }
  else if ((v28 & 4) == 0)
  {
    goto LABEL_110;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, *(void *)(v5 + 744), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 8) == 0)
  {
LABEL_111:
    if ((v28 & 0x10) == 0) {
      goto LABEL_112;
    }
    goto LABEL_253;
  }
LABEL_252:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x44, *(void *)(v5 + 752), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x10) == 0)
  {
LABEL_112:
    if ((v28 & 0x20) == 0) {
      goto LABEL_113;
    }
    goto LABEL_254;
  }
LABEL_253:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x45, *(void *)(v5 + 760), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x20) == 0)
  {
LABEL_113:
    if ((v28 & 0x40) == 0) {
      goto LABEL_114;
    }
    goto LABEL_255;
  }
LABEL_254:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(void *)(v5 + 768), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x40) == 0)
  {
LABEL_114:
    if ((v28 & 0x80) == 0) {
      goto LABEL_115;
    }
    goto LABEL_256;
  }
LABEL_255:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, *(void *)(v5 + 776), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x80) == 0)
  {
LABEL_115:
    if ((v28 & 0x100) == 0) {
      goto LABEL_116;
    }
    goto LABEL_257;
  }
LABEL_256:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(void *)(v5 + 784), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x100) == 0)
  {
LABEL_116:
    if ((v28 & 0x200) == 0) {
      goto LABEL_117;
    }
    goto LABEL_258;
  }
LABEL_257:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(void *)(v5 + 792), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x200) == 0)
  {
LABEL_117:
    if ((v28 & 0x400) == 0) {
      goto LABEL_118;
    }
    goto LABEL_259;
  }
LABEL_258:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(void *)(v5 + 800), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x400) == 0)
  {
LABEL_118:
    if ((v28 & 0x800) == 0) {
      goto LABEL_119;
    }
    goto LABEL_260;
  }
LABEL_259:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(void *)(v5 + 816), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x800) == 0)
  {
LABEL_119:
    if ((v28 & 0x1000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_261;
  }
LABEL_260:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, *(void *)(v5 + 824), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x1000) == 0)
  {
LABEL_120:
    if ((v28 & 0x2000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_262;
  }
LABEL_261:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, *(void *)(v5 + 832), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x2000) == 0)
  {
LABEL_121:
    if ((v28 & 0x4000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_263;
  }
LABEL_262:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4E, *(void *)(v5 + 840), (uint64_t)a2, a4);
  int v28 = *(_DWORD *)(v5 + 1368);
  if ((v28 & 0x4000) == 0)
  {
LABEL_122:
    if ((v28 & 0x8000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_123;
  }
LABEL_263:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4F, *(void *)(v5 + 848), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1368) & 0x8000) != 0) {
LABEL_123:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned __int8 *)(v5 + 579), (uint64_t)a2, a4);
LABEL_124:
  if (*(int *)(v5 + 864) >= 1)
  {
    uint64_t v29 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x51, *(void *)(*(void *)(v5 + 856) + 8 * v29++), a2, a4);
    while (v29 < *(int *)(v5 + 864));
  }
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x20000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x52, *(void *)(v5 + 880), (uint64_t)a2, a4);
    int v30 = *(_DWORD *)(v5 + 1368);
    if ((v30 & 0x40000) == 0)
    {
LABEL_129:
      if ((v30 & 0x80000) == 0) {
        goto LABEL_130;
      }
      goto LABEL_267;
    }
  }
  else if ((v30 & 0x40000) == 0)
  {
    goto LABEL_129;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x53, *(void *)(v5 + 888), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x80000) == 0)
  {
LABEL_130:
    if ((v30 & 0x100000) == 0) {
      goto LABEL_131;
    }
    goto LABEL_268;
  }
LABEL_267:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x54, *(unsigned __int8 *)(v5 + 1044), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x100000) == 0)
  {
LABEL_131:
    if ((v30 & 0x200000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_269;
  }
LABEL_268:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x55, *(unsigned int *)(v5 + 812), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x200000) == 0)
  {
LABEL_132:
    if ((v30 & 0x400000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_270;
  }
LABEL_269:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x56, *(unsigned int *)(v5 + 896), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x400000) == 0)
  {
LABEL_133:
    if ((v30 & 0x800000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_271;
  }
LABEL_270:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x57, *(unsigned int *)(v5 + 900), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x800000) == 0)
  {
LABEL_134:
    if ((v30 & 0x1000000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_272;
  }
LABEL_271:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x58, *(void *)(v5 + 904), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x1000000) == 0)
  {
LABEL_135:
    if ((v30 & 0x2000000) == 0) {
      goto LABEL_136;
    }
    goto LABEL_275;
  }
LABEL_272:
  uint64_t v50 = *(void *)(v5 + 912);
  if (!v50) {
    uint64_t v50 = *(void *)(awd::metrics::LocationGPSSessionStatistics::default_instance_ + 912);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x59, v50, a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x2000000) == 0)
  {
LABEL_136:
    if ((v30 & 0x4000000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_276;
  }
LABEL_275:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5A, *(unsigned int *)(v5 + 920), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x4000000) == 0)
  {
LABEL_137:
    if ((v30 & 0x8000000) == 0) {
      goto LABEL_138;
    }
    goto LABEL_277;
  }
LABEL_276:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5B, *(unsigned int *)(v5 + 924), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x8000000) == 0)
  {
LABEL_138:
    if ((v30 & 0x10000000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_278;
  }
LABEL_277:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5C, *(unsigned int *)(v5 + 928), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x10000000) == 0)
  {
LABEL_139:
    if ((v30 & 0x20000000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_279;
  }
LABEL_278:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5D, *(unsigned int *)(v5 + 932), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x20000000) == 0)
  {
LABEL_140:
    if ((v30 & 0x40000000) == 0) {
      goto LABEL_141;
    }
LABEL_280:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5F, *(unsigned int *)(v5 + 940), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 1368) & 0x80000000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_281;
  }
LABEL_279:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x5E, *(unsigned int *)(v5 + 936), (uint64_t)a2, a4);
  int v30 = *(_DWORD *)(v5 + 1368);
  if ((v30 & 0x40000000) != 0) {
    goto LABEL_280;
  }
LABEL_141:
  if ((v30 & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_281:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x60, *(unsigned int *)(v5 + 944), (uint64_t)a2, a4);
LABEL_142:
  int v31 = *(_DWORD *)(v5 + 1372);
  if (v31)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x61, *(unsigned int *)(v5 + 948), (uint64_t)a2, a4);
    int v31 = *(_DWORD *)(v5 + 1372);
    if ((v31 & 2) == 0)
    {
LABEL_144:
      if ((v31 & 4) == 0) {
        goto LABEL_145;
      }
      goto LABEL_284;
    }
  }
  else if ((v31 & 2) == 0)
  {
    goto LABEL_144;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x62, *(unsigned int *)(v5 + 952), (uint64_t)a2, a4);
  int v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 4) == 0)
  {
LABEL_145:
    if ((v31 & 8) == 0) {
      goto LABEL_146;
    }
    goto LABEL_285;
  }
LABEL_284:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x63, *(unsigned int *)(v5 + 956), (uint64_t)a2, a4);
  int v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 8) == 0)
  {
LABEL_146:
    if ((v31 & 0x10) == 0) {
      goto LABEL_147;
    }
    goto LABEL_286;
  }
LABEL_285:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x64, *(unsigned int *)(v5 + 960), (uint64_t)a2, a4);
  int v31 = *(_DWORD *)(v5 + 1372);
  if ((v31 & 0x10) == 0)
  {
LABEL_147:
    if ((v31 & 0x20) == 0) {
      goto LABEL_149;
    }
    goto LABEL_148;
  }
LABEL_286:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x65, *(unsigned int *)(v5 + 964), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 1372) & 0x20) != 0) {
LABEL_148:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x66, *(unsigned int *)(v5 + 1040), (uint64_t)a2, a4);
LABEL_149:
  if (*(int *)(v5 + 976) >= 1)
  {
    uint64_t v32 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x67, *(void *)(*(void *)(v5 + 968) + 8 * v32++), a2, a4);
    while (v32 < *(int *)(v5 + 976));
  }
  if (*(int *)(v5 + 1000) >= 1)
  {
    uint64_t v33 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x68, *(void *)(*(void *)(v5 + 992) + 8 * v33++), a2, a4);
    while (v33 < *(int *)(v5 + 1000));
  }
  if (*(int *)(v5 + 1024) >= 1)
  {
    uint64_t v34 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x69, *(void *)(*(void *)(v5 + 1016) + 8 * v34++), a2, a4);
    while (v34 < *(int *)(v5 + 1024));
  }
  if (*(int *)(v5 + 1056) >= 1)
  {
    uint64_t v35 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6A, *(void *)(*(void *)(v5 + 1048) + 8 * v35++), a2, a4);
    while (v35 < *(int *)(v5 + 1056));
  }
  if ((*(unsigned char *)(v5 + 1373) & 4) != 0)
  {
    uint64_t v36 = *(void *)(v5 + 1072);
    if (!v36) {
      uint64_t v36 = *(void *)(awd::metrics::LocationGPSSessionStatistics::default_instance_ + 1072);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6B, v36, a2, a4);
  }
  if (*(int *)(v5 + 1088) >= 1)
  {
    uint64_t v37 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6C, *(void *)(*(void *)(v5 + 1080) + 8 * v37++), a2, a4);
    while (v37 < *(int *)(v5 + 1088));
  }
  if (*(int *)(v5 + 1112) >= 1)
  {
    uint64_t v38 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6D, *(void *)(*(void *)(v5 + 1104) + 8 * v38++), a2, a4);
    while (v38 < *(int *)(v5 + 1112));
  }
  if (*(int *)(v5 + 1136) >= 1)
  {
    uint64_t v39 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6E, *(void *)(*(void *)(v5 + 1128) + 8 * v39++), a2, a4);
    while (v39 < *(int *)(v5 + 1136));
  }
  if (*(int *)(v5 + 1160) >= 1)
  {
    uint64_t v40 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x6F, *(void *)(*(void *)(v5 + 1152) + 8 * v40++), a2, a4);
    while (v40 < *(int *)(v5 + 1160));
  }
  if (*(int *)(v5 + 1184) >= 1)
  {
    uint64_t v41 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x70, *(void *)(*(void *)(v5 + 1176) + 8 * v41++), a2, a4);
    while (v41 < *(int *)(v5 + 1184));
  }
  if (*(int *)(v5 + 1208) >= 1)
  {
    uint64_t v42 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x71, *(void *)(*(void *)(v5 + 1200) + 8 * v42++), a2, a4);
    while (v42 < *(int *)(v5 + 1208));
  }
  if (*(int *)(v5 + 1232) >= 1)
  {
    uint64_t v43 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x72, *(void *)(*(void *)(v5 + 1224) + 8 * v43++), a2, a4);
    while (v43 < *(int *)(v5 + 1232));
  }
  if (*(int *)(v5 + 1256) >= 1)
  {
    uint64_t v44 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x73, *(void *)(*(void *)(v5 + 1248) + 8 * v44++), a2, a4);
    while (v44 < *(int *)(v5 + 1256));
  }
  if (*(int *)(v5 + 1280) >= 1)
  {
    uint64_t v45 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x74, *(void *)(*(void *)(v5 + 1272) + 8 * v45++), a2, a4);
    while (v45 < *(int *)(v5 + 1280));
  }
  if (*(int *)(v5 + 1304) >= 1)
  {
    uint64_t v46 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x75, *(void *)(*(void *)(v5 + 1296) + 8 * v46++), a2, a4);
    while (v46 < *(int *)(v5 + 1304));
  }
  int v47 = *(_DWORD *)(v5 + 1372);
  if ((v47 & 0x200000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x76, *(unsigned __int8 *)(v5 + 1045), (uint64_t)a2, a4);
    int v47 = *(_DWORD *)(v5 + 1372);
  }
  if ((v47 & 0x400000) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x77, *(unsigned __int8 *)(v5 + 1046), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 1328) >= 1)
  {
    uint64_t v48 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x78, *(void *)(*(void *)(v5 + 1320) + 8 * v48++), a2, a4);
    while (v48 < *(int *)(v5 + 1328));
  }
  int v49 = *(_DWORD *)(v5 + 1372);
  if ((v49 & 0x1000000) == 0)
  {
    if ((v49 & 0x2000000) == 0) {
      goto LABEL_204;
    }
LABEL_289:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7A, *(unsigned int *)(v5 + 1348), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 1372) & 0x4000000) == 0) {
      return this;
    }
    goto LABEL_290;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x79, *(unsigned int *)(v5 + 1344), (uint64_t)a2, a4);
  int v49 = *(_DWORD *)(v5 + 1372);
  if ((v49 & 0x2000000) != 0) {
    goto LABEL_289;
  }
LABEL_204:
  if ((v49 & 0x4000000) == 0) {
    return this;
  }
LABEL_290:
  uint64_t v51 = *(unsigned int *)(v5 + 1352);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x7B, v51, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics::ByteSize(awd::metrics::LocationGPSSessionStatistics *this)
{
  unsigned int v2 = *((_DWORD *)this + 340);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    if ((v2 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_29;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 340);
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    unsigned int v2 = *((_DWORD *)this + 340);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    unsigned int v2 = *((_DWORD *)this + 340);
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *((_DWORD *)this + 340);
  }
  else
  {
    int v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_20:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 4))
        + 1;
    unsigned int v2 = *((_DWORD *)this + 340);
  }
LABEL_21:
  int v11 = v3 + 5;
  if ((v2 & 0x20) == 0) {
    int v11 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v11 += 5;
  }
  if ((v2 & 0x80) != 0) {
    int v4 = v11 + 5;
  }
  else {
    int v4 = v11;
  }
  if ((v2 & 0x400) != 0)
  {
LABEL_29:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 108);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      unsigned int v2 = *((_DWORD *)this + 340);
    }
    else
    {
      int v13 = 1;
    }
    v4 += v13 + 1;
  }
LABEL_38:
  if ((v2 & 0x800000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 49))
        + 2;
    unsigned int v2 = *((_DWORD *)this + 340);
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 50))
          + 2;
      unsigned int v2 = *((_DWORD *)this + 340);
      if ((v2 & 0x2000000) == 0)
      {
LABEL_43:
        if ((v2 & 0x4000000) == 0) {
          goto LABEL_44;
        }
        goto LABEL_95;
      }
    }
    else if ((v2 & 0x2000000) == 0)
    {
      goto LABEL_43;
    }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 51))
        + 2;
    unsigned int v2 = *((_DWORD *)this + 340);
    if ((v2 & 0x4000000) == 0)
    {
LABEL_44:
      if ((v2 & 0x8000000) == 0)
      {
LABEL_46:
        int v16 = v4 + 3;
        if ((v2 & 0x10000000) == 0) {
          int v16 = v4;
        }
        if ((v2 & 0x20000000) != 0) {
          int v4 = v16 + 3;
        }
        else {
          int v4 = v16;
        }
        if ((v2 & 0x40000000) != 0)
        {
          v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 55))
              + 2;
          unsigned int v2 = *((_DWORD *)this + 340);
        }
        if ((v2 & 0x80000000) != 0) {
          v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
        }
                                                                                            + 56))
              + 2;
        goto LABEL_55;
      }
LABEL_45:
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 53))
          + 2;
      unsigned int v2 = *((_DWORD *)this + 340);
      goto LABEL_46;
    }
LABEL_95:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 52))
        + 2;
    unsigned int v2 = *((_DWORD *)this + 340);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_45;
  }
LABEL_55:
  unsigned int v17 = *((_DWORD *)this + 341);
  if (!(_BYTE)v17) {
    goto LABEL_65;
  }
  if (v17)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 57))
        + 2;
    unsigned int v17 = *((_DWORD *)this + 341);
    if ((v17 & 2) == 0)
    {
LABEL_58:
      if ((v17 & 4) == 0) {
        goto LABEL_59;
      }
      goto LABEL_77;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_58;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 58))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 4) == 0)
  {
LABEL_59:
    if ((v17 & 8) == 0) {
      goto LABEL_60;
    }
    goto LABEL_78;
  }
LABEL_77:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 59))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 8) == 0)
  {
LABEL_60:
    if ((v17 & 0x10) == 0) {
      goto LABEL_61;
    }
    goto LABEL_79;
  }
LABEL_78:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 60))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x10) == 0)
  {
LABEL_61:
    if ((v17 & 0x20) == 0) {
      goto LABEL_62;
    }
    goto LABEL_80;
  }
LABEL_79:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 61))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x20) == 0)
  {
LABEL_62:
    if ((v17 & 0x40) == 0) {
      goto LABEL_63;
    }
    goto LABEL_81;
  }
LABEL_80:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 62))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x40) == 0)
  {
LABEL_63:
    if ((v17 & 0x80) == 0) {
      goto LABEL_65;
    }
    goto LABEL_64;
  }
LABEL_81:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 63))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x80) != 0)
  {
LABEL_64:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 64))
        + 2;
    unsigned int v17 = *((_DWORD *)this + 341);
  }
LABEL_65:
  if ((v17 & 0xFF00) == 0) {
    goto LABEL_103;
  }
  if ((v17 & 0x100) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 65))
        + 2;
    unsigned int v17 = *((_DWORD *)this + 341);
    if ((v17 & 0x200) == 0)
    {
LABEL_68:
      if ((v17 & 0x400) == 0) {
        goto LABEL_69;
      }
      goto LABEL_85;
    }
  }
  else if ((v17 & 0x200) == 0)
  {
    goto LABEL_68;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 66))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x400) == 0)
  {
LABEL_69:
    if ((v17 & 0x800) == 0) {
      goto LABEL_70;
    }
    goto LABEL_86;
  }
LABEL_85:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 67))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x800) == 0)
  {
LABEL_70:
    if ((v17 & 0x1000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_87;
  }
LABEL_86:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 68))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x1000) == 0)
  {
LABEL_71:
    if ((v17 & 0x2000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_88;
  }
LABEL_87:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 69))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x2000) == 0)
  {
LABEL_72:
    if ((v17 & 0x4000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_89;
  }
LABEL_88:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 70))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x4000) == 0)
  {
LABEL_73:
    if ((v17 & 0x8000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_90;
  }
LABEL_89:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 71))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x8000) == 0) {
    goto LABEL_103;
  }
LABEL_90:
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 109);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    unsigned int v17 = *((_DWORD *)this + 341);
  }
  else
  {
    int v19 = 1;
  }
  v4 += v19 + 2;
LABEL_103:
  if ((v17 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v17 & 0x10000) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 145);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v17 = *((_DWORD *)this + 341);
    }
    else
    {
      int v21 = 1;
    }
    v4 += v21 + 2;
    if ((v17 & 0x20000) == 0)
    {
LABEL_106:
      if ((v17 & 0x40000) == 0) {
        goto LABEL_107;
      }
LABEL_121:
      uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 147);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        unsigned int v17 = *((_DWORD *)this + 341);
      }
      else
      {
        int v25 = 1;
      }
      v4 += v25 + 2;
      if ((v17 & 0x80000) == 0) {
        goto LABEL_133;
      }
      goto LABEL_127;
    }
  }
  else if ((v17 & 0x20000) == 0)
  {
    goto LABEL_106;
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 146);
  if ((v22 & 0x80000000) != 0)
  {
    int v23 = 10;
  }
  else if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    unsigned int v17 = *((_DWORD *)this + 341);
  }
  else
  {
    int v23 = 1;
  }
  v4 += v23 + 2;
  if ((v17 & 0x40000) != 0) {
    goto LABEL_121;
  }
LABEL_107:
  if ((v17 & 0x80000) != 0)
  {
LABEL_127:
    uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 148);
    if ((v26 & 0x80000000) != 0)
    {
      int v27 = 10;
    }
    else if (v26 >= 0x80)
    {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      unsigned int v17 = *((_DWORD *)this + 341);
    }
    else
    {
      int v27 = 1;
    }
    v4 += v27 + 2;
  }
LABEL_133:
  int v28 = v4 + 6;
  if ((v17 & 0x100000) == 0) {
    int v28 = v4;
  }
  if ((v17 & 0x200000) != 0) {
    int v29 = v28 + 6;
  }
  else {
    int v29 = v28;
  }
  if ((v17 & 0x400000) != 0)
  {
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 151);
    if (v30 >= 0x80)
    {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
      unsigned int v17 = *((_DWORD *)this + 341);
    }
    else
    {
      int v31 = 1;
    }
    v29 += v31 + 2;
  }
  if ((v17 & 0x800000) != 0) {
    int v4 = v29 + 3;
  }
  else {
    int v4 = v29;
  }
LABEL_146:
  if (!(v17 >> 25)) {
    goto LABEL_163;
  }
  if ((v17 & 0x2000000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 79))
        + 2;
    unsigned int v17 = *((_DWORD *)this + 341);
    if ((v17 & 0x8000000) == 0)
    {
LABEL_149:
      if ((v17 & 0x10000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_155;
    }
  }
  else if ((v17 & 0x8000000) == 0)
  {
    goto LABEL_149;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 83))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x10000000) == 0)
  {
LABEL_150:
    if ((v17 & 0x20000000) == 0) {
      goto LABEL_151;
    }
LABEL_156:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 85))
        + 2;
    if ((*((_DWORD *)this + 341) & 0x80000000) == 0) {
      goto LABEL_163;
    }
    goto LABEL_157;
  }
LABEL_155:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 84))
      + 2;
  unsigned int v17 = *((_DWORD *)this + 341);
  if ((v17 & 0x20000000) != 0) {
    goto LABEL_156;
  }
LABEL_151:
  if ((v17 & 0x80000000) == 0) {
    goto LABEL_163;
  }
LABEL_157:
  uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 202);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 10;
  }
  else if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
  }
  else
  {
    int v33 = 1;
  }
  v4 += v33 + 2;
LABEL_163:
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x1FE) == 0) {
    goto LABEL_172;
  }
  if ((v34 & 2) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 92))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
    if ((v34 & 4) == 0)
    {
LABEL_166:
      if ((v34 & 8) == 0) {
        goto LABEL_167;
      }
      goto LABEL_207;
    }
  }
  else if ((v34 & 4) == 0)
  {
    goto LABEL_166;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 93))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 8) == 0)
  {
LABEL_167:
    if ((v34 & 0x10) == 0) {
      goto LABEL_168;
    }
    goto LABEL_208;
  }
LABEL_207:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 94))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x10) == 0)
  {
LABEL_168:
    if ((v34 & 0x20) == 0) {
      goto LABEL_169;
    }
    goto LABEL_209;
  }
LABEL_208:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 95))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x20) == 0)
  {
LABEL_169:
    if ((v34 & 0x40) == 0) {
      goto LABEL_170;
    }
    goto LABEL_210;
  }
LABEL_209:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 96))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x40) == 0)
  {
LABEL_170:
    if ((v34 & 0x80) == 0) {
      goto LABEL_172;
    }
    goto LABEL_171;
  }
LABEL_210:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 97))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x80) != 0)
  {
LABEL_171:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 98))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
  }
LABEL_172:
  if ((v34 & 0xFF00) == 0) {
    goto LABEL_183;
  }
  if ((v34 & 0x100) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 99))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
    if ((v34 & 0x200) == 0)
    {
LABEL_175:
      if ((v34 & 0x400) == 0) {
        goto LABEL_176;
      }
      goto LABEL_214;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_175;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 100))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x400) == 0)
  {
LABEL_176:
    if ((v34 & 0x800) == 0) {
      goto LABEL_177;
    }
    goto LABEL_215;
  }
LABEL_214:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 102))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x800) == 0)
  {
LABEL_177:
    if ((v34 & 0x1000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_216;
  }
LABEL_215:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 103))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x1000) == 0)
  {
LABEL_178:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_217;
  }
LABEL_216:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 104))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x2000) == 0)
  {
LABEL_179:
    if ((v34 & 0x4000) == 0) {
      goto LABEL_181;
    }
    goto LABEL_180;
  }
LABEL_217:
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 105))
      + 2;
  unsigned int v34 = *((_DWORD *)this + 342);
  if ((v34 & 0x4000) != 0)
  {
LABEL_180:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 106))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
  }
LABEL_181:
  if ((v34 & 0x8000) != 0) {
    v4 += 3;
  }
LABEL_183:
  if ((v34 & 0x1FE0000) == 0) {
    goto LABEL_195;
  }
  if ((v34 & 0x20000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 110))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  if ((v34 & 0x40000) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 111))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  if ((v34 & 0x80000) != 0) {
    v4 += 3;
  }
  if ((v34 & 0x100000) != 0)
  {
    uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 203);
    if ((v35 & 0x80000000) != 0)
    {
      int v36 = 10;
    }
    else if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      unsigned int v34 = *((_DWORD *)this + 342);
    }
    else
    {
      int v36 = 1;
    }
    v4 += v36 + 2;
    if ((v34 & 0x200000) == 0)
    {
LABEL_192:
      if ((v34 & 0x400000) == 0) {
        goto LABEL_193;
      }
      goto LABEL_263;
    }
  }
  else if ((v34 & 0x200000) == 0)
  {
    goto LABEL_192;
  }
  v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 224);
  if ((v55 & 0x80000000) != 0)
  {
    int v56 = 10;
  }
  else if (v55 >= 0x80)
  {
    int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v56 = 1;
  }
  v4 += v56 + 2;
  if ((v34 & 0x400000) == 0)
  {
LABEL_193:
    if ((v34 & 0x800000) == 0) {
      goto LABEL_195;
    }
    goto LABEL_194;
  }
LABEL_263:
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 225);
  if ((v57 & 0x80000000) != 0)
  {
    int v58 = 10;
  }
  else if (v57 >= 0x80)
  {
    int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v58 = 1;
  }
  v4 += v58 + 2;
  if ((v34 & 0x800000) != 0)
  {
LABEL_194:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 113))
        + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
  }
LABEL_195:
  if (!HIBYTE(v34)) {
    goto LABEL_272;
  }
  if ((v34 & 0x1000000) != 0)
  {
    uint64_t v37 = (awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *)*((void *)this + 114);
    if (!v37) {
      uint64_t v37 = *(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
    }
                                                                                           + 912);
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::ByteSize(v37);
    int v39 = (int)v38;
    if (v38 >= 0x80) {
      int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    }
    else {
      int v40 = 1;
    }
    v4 += v39 + v40 + 2;
    unsigned int v34 = *((_DWORD *)this + 342);
    if ((v34 & 0x2000000) == 0)
    {
LABEL_198:
      if ((v34 & 0x4000000) == 0) {
        goto LABEL_199;
      }
      goto LABEL_232;
    }
  }
  else if ((v34 & 0x2000000) == 0)
  {
    goto LABEL_198;
  }
  uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 230);
  if (v41 >= 0x80)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v42 = 1;
  }
  v4 += v42 + 2;
  if ((v34 & 0x4000000) == 0)
  {
LABEL_199:
    if ((v34 & 0x8000000) == 0) {
      goto LABEL_200;
    }
    goto LABEL_236;
  }
LABEL_232:
  uint64_t v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 231);
  if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v44 = 1;
  }
  v4 += v44 + 2;
  if ((v34 & 0x8000000) == 0)
  {
LABEL_200:
    if ((v34 & 0x10000000) == 0) {
      goto LABEL_201;
    }
    goto LABEL_240;
  }
LABEL_236:
  uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 232);
  if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v46 = 1;
  }
  v4 += v46 + 2;
  if ((v34 & 0x10000000) == 0)
  {
LABEL_201:
    if ((v34 & 0x20000000) == 0) {
      goto LABEL_202;
    }
    goto LABEL_244;
  }
LABEL_240:
  int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 233);
  if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v48 = 1;
  }
  v4 += v48 + 2;
  if ((v34 & 0x20000000) == 0)
  {
LABEL_202:
    if ((v34 & 0x40000000) == 0) {
      goto LABEL_203;
    }
    goto LABEL_248;
  }
LABEL_244:
  int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 234);
  if (v49 >= 0x80)
  {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v50 = 1;
  }
  v4 += v50 + 2;
  if ((v34 & 0x40000000) == 0)
  {
LABEL_203:
    if ((v34 & 0x80000000) == 0) {
      goto LABEL_272;
    }
    goto LABEL_252;
  }
LABEL_248:
  uint64_t v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 235);
  if (v51 >= 0x80)
  {
    int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
    unsigned int v34 = *((_DWORD *)this + 342);
  }
  else
  {
    int v52 = 1;
  }
  v4 += v52 + 2;
  if ((v34 & 0x80000000) != 0)
  {
LABEL_252:
    v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 236);
    if (v53 >= 0x80) {
      int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
    }
    else {
      int v54 = 1;
    }
    v4 += v54 + 2;
  }
LABEL_272:
  unsigned int v59 = *((_DWORD *)this + 343);
  if (!(_BYTE)v59) {
    goto LABEL_279;
  }
  if (v59)
  {
    v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 237);
    if (v60 >= 0x80)
    {
      int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
      unsigned int v59 = *((_DWORD *)this + 343);
    }
    else
    {
      int v61 = 1;
    }
    v4 += v61 + 2;
    if ((v59 & 2) == 0)
    {
LABEL_275:
      if ((v59 & 4) == 0) {
        goto LABEL_276;
      }
      goto LABEL_289;
    }
  }
  else if ((v59 & 2) == 0)
  {
    goto LABEL_275;
  }
  unint64_t v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 238);
  if (v62 >= 0x80)
  {
    int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62);
    unsigned int v59 = *((_DWORD *)this + 343);
  }
  else
  {
    int v63 = 1;
  }
  v4 += v63 + 2;
  if ((v59 & 4) == 0)
  {
LABEL_276:
    if ((v59 & 8) == 0) {
      goto LABEL_277;
    }
    goto LABEL_293;
  }
LABEL_289:
  unint64_t v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 239);
  if (v64 >= 0x80)
  {
    int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
    unsigned int v59 = *((_DWORD *)this + 343);
  }
  else
  {
    int v65 = 1;
  }
  v4 += v65 + 2;
  if ((v59 & 8) == 0)
  {
LABEL_277:
    if ((v59 & 0x10) == 0) {
      goto LABEL_278;
    }
    goto LABEL_297;
  }
LABEL_293:
  v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 240);
  if (v66 >= 0x80)
  {
    int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66);
    unsigned int v59 = *((_DWORD *)this + 343);
  }
  else
  {
    int v67 = 1;
  }
  v4 += v67 + 2;
  if ((v59 & 0x10) == 0)
  {
LABEL_278:
    if ((v59 & 0x20) == 0) {
      goto LABEL_279;
    }
LABEL_301:
    unint64_t v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 260);
    if (v70 >= 0x80)
    {
      int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70);
      unsigned int v59 = *((_DWORD *)this + 343);
    }
    else
    {
      int v71 = 1;
    }
    v4 += v71 + 2;
    if ((v59 & 0x400) == 0) {
      goto LABEL_311;
    }
    goto LABEL_305;
  }
LABEL_297:
  unint64_t v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 241);
  if (v68 >= 0x80)
  {
    int v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
    unsigned int v59 = *((_DWORD *)this + 343);
  }
  else
  {
    int v69 = 1;
  }
  v4 += v69 + 2;
  if ((v59 & 0x20) != 0) {
    goto LABEL_301;
  }
LABEL_279:
  if ((v59 & 0x400) == 0) {
    goto LABEL_311;
  }
LABEL_305:
  v72 = (awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *)*((void *)this + 134);
  if (!v72) {
    v72 = *(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo **)(awd::metrics::LocationGPSSessionStatistics::default_instance_
  }
                                                                                         + 1072);
  v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::ByteSize(v72);
  int v74 = (int)v73;
  if (v73 >= 0x80) {
    int v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v73);
  }
  else {
    int v75 = 1;
  }
  v4 += v74 + v75 + 2;
  unsigned int v59 = *((_DWORD *)this + 343);
LABEL_311:
  int v76 = v4 + 3;
  if ((v59 & 0x200000) == 0) {
    int v76 = v4;
  }
  if ((v59 & 0x400000) != 0) {
    v76 += 3;
  }
  if ((v59 & 0x1FE00000) != 0) {
    int v77 = v76;
  }
  else {
    int v77 = v4;
  }
  if (HIBYTE(v59))
  {
    if ((v59 & 0x1000000) != 0)
    {
      v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 336);
      if ((v78 & 0x80000000) != 0)
      {
        int v79 = 10;
      }
      else if (v78 >= 0x80)
      {
        int v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
        unsigned int v59 = *((_DWORD *)this + 343);
      }
      else
      {
        int v79 = 1;
      }
      v77 += v79 + 2;
      if ((v59 & 0x2000000) == 0)
      {
LABEL_321:
        if ((v59 & 0x4000000) == 0) {
          goto LABEL_341;
        }
        goto LABEL_335;
      }
    }
    else if ((v59 & 0x2000000) == 0)
    {
      goto LABEL_321;
    }
    v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 337);
    if ((v80 & 0x80000000) != 0)
    {
      int v81 = 10;
    }
    else if (v80 >= 0x80)
    {
      int v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
      unsigned int v59 = *((_DWORD *)this + 343);
    }
    else
    {
      int v81 = 1;
    }
    v77 += v81 + 2;
    if ((v59 & 0x4000000) != 0)
    {
LABEL_335:
      v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 338);
      if ((v82 & 0x80000000) != 0)
      {
        int v83 = 10;
      }
      else if (v82 >= 0x80)
      {
        int v83 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
      }
      else
      {
        int v83 = 1;
      }
      v77 += v83 + 2;
    }
  }
LABEL_341:
  int v84 = *((_DWORD *)this + 16);
  int v85 = v84 + v77;
  if (v84 >= 1)
  {
    uint64_t v86 = 0;
    do
    {
      v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((void *)this + 7) + 8 * v86));
      int v88 = (int)v87;
      if (v87 >= 0x80) {
        int v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
      }
      else {
        int v89 = 1;
      }
      v85 += v88 + v89;
      ++v86;
    }
    while (v86 < *((int *)this + 16));
  }
  int v90 = *((_DWORD *)this + 22);
  int v91 = v90 + v85;
  if (v90 >= 1)
  {
    uint64_t v92 = 0;
    do
    {
      int v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData **)(*((void *)this + 10) + 8 * v92));
      int v94 = (int)v93;
      if (v93 >= 0x80) {
        int v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93);
      }
      else {
        int v95 = 1;
      }
      v91 += v94 + v95;
      ++v92;
    }
    while (v92 < *((int *)this + 22));
  }
  int v96 = *((_DWORD *)this + 28);
  int v97 = v96 + v91;
  if (v96 >= 1)
  {
    uint64_t v98 = 0;
    do
    {
      v99 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData **)(*((void *)this + 13) + 8 * v98));
      int v100 = (int)v99;
      if (v99 >= 0x80) {
        int v101 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v99);
      }
      else {
        int v101 = 1;
      }
      v97 += v100 + v101;
      ++v98;
    }
    while (v98 < *((int *)this + 28));
  }
  int v102 = *((_DWORD *)this + 34);
  int v103 = v102 + v97;
  if (v102 >= 1)
  {
    uint64_t v104 = 0;
    do
    {
      v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 16) + 8 * v104));
      int v106 = (int)v105;
      if (v105 >= 0x80) {
        int v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
      }
      else {
        int v107 = 1;
      }
      v103 += v106 + v107;
      ++v104;
    }
    while (v104 < *((int *)this + 34));
  }
  int v108 = *((_DWORD *)this + 40);
  int v109 = v108 + v103;
  if (v108 >= 1)
  {
    uint64_t v110 = 0;
    do
    {
      unint64_t v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 19) + 8 * v110));
      int v112 = (int)v111;
      if (v111 >= 0x80) {
        int v113 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
      }
      else {
        int v113 = 1;
      }
      v109 += v112 + v113;
      ++v110;
    }
    while (v110 < *((int *)this + 40));
  }
  int v114 = *((_DWORD *)this + 46);
  int v115 = v114 + v109;
  if (v114 >= 1)
  {
    uint64_t v116 = 0;
    do
    {
      v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 22) + 8 * v116));
      int v118 = (int)v117;
      if (v117 >= 0x80) {
        int v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
      }
      else {
        int v119 = 1;
      }
      v115 += v118 + v119;
      ++v116;
    }
    while (v116 < *((int *)this + 46));
  }
  int v120 = *((_DWORD *)this + 52);
  int v121 = v115 + 2 * v120;
  if (v120 >= 1)
  {
    uint64_t v122 = 0;
    do
    {
      int v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 25) + 8 * v122));
      int v124 = (int)v123;
      if (v123 >= 0x80) {
        int v125 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
      }
      else {
        int v125 = 1;
      }
      v121 += v124 + v125;
      ++v122;
    }
    while (v122 < *((int *)this + 52));
  }
  int v126 = *((_DWORD *)this + 58);
  int v127 = v121 + 2 * v126;
  if (v126 >= 1)
  {
    uint64_t v128 = 0;
    do
    {
      unsigned int v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 28) + 8 * v128));
      int v130 = (int)v129;
      if (v129 >= 0x80) {
        int v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
      }
      else {
        int v131 = 1;
      }
      v127 += v130 + v131;
      ++v128;
    }
    while (v128 < *((int *)this + 58));
  }
  int v132 = *((_DWORD *)this + 64);
  int v133 = v127 + 2 * v132;
  if (v132 >= 1)
  {
    uint64_t v134 = 0;
    do
    {
      v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 31) + 8 * v134));
      int v136 = (int)v135;
      if (v135 >= 0x80) {
        int v137 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v135);
      }
      else {
        int v137 = 1;
      }
      v133 += v136 + v137;
      ++v134;
    }
    while (v134 < *((int *)this + 64));
  }
  int v138 = *((_DWORD *)this + 70);
  int v139 = v133 + 2 * v138;
  if (v138 >= 1)
  {
    uint64_t v140 = 0;
    do
    {
      v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 34) + 8 * v140));
      int v142 = (int)v141;
      if (v141 >= 0x80) {
        int v143 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v141);
      }
      else {
        int v143 = 1;
      }
      v139 += v142 + v143;
      ++v140;
    }
    while (v140 < *((int *)this + 70));
  }
  int v144 = *((_DWORD *)this + 76);
  int v145 = v139 + 2 * v144;
  if (v144 >= 1)
  {
    uint64_t v146 = 0;
    do
    {
      v147 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 37) + 8 * v146));
      int v148 = (int)v147;
      if (v147 >= 0x80) {
        int v149 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v147);
      }
      else {
        int v149 = 1;
      }
      v145 += v148 + v149;
      ++v146;
    }
    while (v146 < *((int *)this + 76));
  }
  int v150 = *((_DWORD *)this + 82);
  int v151 = v145 + 2 * v150;
  if (v150 >= 1)
  {
    uint64_t v152 = 0;
    do
    {
      int v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MotionActivityData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MotionActivityData **)(*((void *)this + 40) + 8 * v152));
      int v154 = (int)v153;
      if (v153 >= 0x80) {
        int v155 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153);
      }
      else {
        int v155 = 1;
      }
      v151 += v154 + v155;
      ++v152;
    }
    while (v152 < *((int *)this + 82));
  }
  int v156 = *((_DWORD *)this + 88);
  int v157 = v151 + 2 * v156;
  if (v156 >= 1)
  {
    uint64_t v158 = 0;
    do
    {
      int v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MovingStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MovingStateData **)(*((void *)this + 43) + 8 * v158));
      int v160 = (int)v159;
      if (v159 >= 0x80) {
        int v161 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v159);
      }
      else {
        int v161 = 1;
      }
      v157 += v160 + v161;
      ++v158;
    }
    while (v158 < *((int *)this + 88));
  }
  int v162 = *((_DWORD *)this + 94);
  int v163 = v157 + 2 * v162;
  if (v162 >= 1)
  {
    uint64_t v164 = 0;
    do
    {
      int v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_MountedStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_MountedStateData **)(*((void *)this + 46) + 8 * v164));
      int v166 = (int)v165;
      if (v165 >= 0x80) {
        int v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v165);
      }
      else {
        int v167 = 1;
      }
      v163 += v166 + v167;
      ++v164;
    }
    while (v164 < *((int *)this + 94));
  }
  int v168 = *((_DWORD *)this + 154);
  int v169 = v163 + 2 * v168;
  if (v168 >= 1)
  {
    uint64_t v170 = 0;
    do
    {
      int v171 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((void *)this + 76) + 8 * v170));
      int v172 = (int)v171;
      if (v171 >= 0x80) {
        int v173 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v171);
      }
      else {
        int v173 = 1;
      }
      v169 += v172 + v173;
      ++v170;
    }
    while (v170 < *((int *)this + 154));
  }
  int v174 = *((_DWORD *)this + 162);
  int v175 = v169 + 2 * v174;
  if (v174 >= 1)
  {
    uint64_t v176 = 0;
    do
    {
      uint64_t v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_PowerStateData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_PowerStateData **)(*((void *)this + 80) + 8 * v176));
      int v178 = (int)v177;
      if (v177 >= 0x80) {
        int v179 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v177);
      }
      else {
        int v179 = 1;
      }
      v175 += v178 + v179;
      ++v176;
    }
    while (v176 < *((int *)this + 162));
  }
  int v180 = *((_DWORD *)this + 174);
  int v181 = v175 + 2 * v180;
  if (v180 >= 1)
  {
    uint64_t v182 = 0;
    do
    {
      int v183 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData **)(*((void *)this + 86) + 8 * v182));
      int v184 = (int)v183;
      if (v183 >= 0x80) {
        int v185 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v183);
      }
      else {
        int v185 = 1;
      }
      v181 += v184 + v185;
      ++v182;
    }
    while (v182 < *((int *)this + 174));
  }
  int v186 = *((_DWORD *)this + 180);
  int v187 = v181 + 2 * v186;
  if (v186 >= 1)
  {
    uint64_t v188 = 0;
    do
    {
      v189 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData **)(*((void *)this + 89) + 8 * v188));
      int v190 = (int)v189;
      if (v189 >= 0x80) {
        int v191 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v189);
      }
      else {
        int v191 = 1;
      }
      v187 += v190 + v191;
      ++v188;
    }
    while (v188 < *((int *)this + 180));
  }
  int v192 = *((_DWORD *)this + 216);
  int v193 = v187 + 2 * v192;
  if (v192 >= 1)
  {
    uint64_t v194 = 0;
    do
    {
      int v195 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChecksumData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChecksumData **)(*((void *)this + 107) + 8 * v194));
      int v196 = (int)v195;
      if (v195 >= 0x80) {
        int v197 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v195);
      }
      else {
        int v197 = 1;
      }
      v193 += v196 + v197;
      ++v194;
    }
    while (v194 < *((int *)this + 216));
  }
  int v198 = *((_DWORD *)this + 244);
  int v199 = v193 + 2 * v198;
  if (v198 >= 1)
  {
    uint64_t v200 = 0;
    do
    {
      int v201 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 121) + 8 * v200));
      int v202 = (int)v201;
      if (v201 >= 0x80) {
        int v203 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v201);
      }
      else {
        int v203 = 1;
      }
      v199 += v202 + v203;
      ++v200;
    }
    while (v200 < *((int *)this + 244));
  }
  int v204 = *((_DWORD *)this + 250);
  int v205 = v199 + 2 * v204;
  if (v204 >= 1)
  {
    uint64_t v206 = 0;
    do
    {
      v207 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 124) + 8 * v206));
      int v208 = (int)v207;
      if (v207 >= 0x80) {
        int v209 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v207);
      }
      else {
        int v209 = 1;
      }
      v205 += v208 + v209;
      ++v206;
    }
    while (v206 < *((int *)this + 250));
  }
  int v210 = *((_DWORD *)this + 256);
  int v211 = v205 + 2 * v210;
  if (v210 >= 1)
  {
    uint64_t v212 = 0;
    do
    {
      int v213 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData **)(*((void *)this + 127) + 8 * v212));
      int v214 = (int)v213;
      if (v213 >= 0x80) {
        int v215 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v213);
      }
      else {
        int v215 = 1;
      }
      v211 += v214 + v215;
      ++v212;
    }
    while (v212 < *((int *)this + 256));
  }
  int v216 = *((_DWORD *)this + 264);
  int v217 = v211 + 2 * v216;
  if (v216 >= 1)
  {
    uint64_t v218 = 0;
    do
    {
      int v219 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData **)(*((void *)this + 131) + 8 * v218));
      int v220 = (int)v219;
      if (v219 >= 0x80) {
        int v221 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v219);
      }
      else {
        int v221 = 1;
      }
      v217 += v220 + v221;
      ++v218;
    }
    while (v218 < *((int *)this + 264));
  }
  int v222 = *((_DWORD *)this + 272);
  int v223 = v217 + 2 * v222;
  if (v222 >= 1)
  {
    uint64_t v224 = 0;
    do
    {
      int v225 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason **)(*((void *)this + 135) + 8 * v224));
      int v226 = (int)v225;
      if (v225 >= 0x80) {
        int v227 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v225);
      }
      else {
        int v227 = 1;
      }
      v223 += v226 + v227;
      ++v224;
    }
    while (v224 < *((int *)this + 272));
  }
  int v228 = *((_DWORD *)this + 278);
  int v229 = v223 + 2 * v228;
  if (v228 >= 1)
  {
    uint64_t v230 = 0;
    do
    {
      int v231 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_NSOnOffState::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_NSOnOffState **)(*((void *)this + 138) + 8 * v230));
      int v232 = (int)v231;
      if (v231 >= 0x80) {
        int v233 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v231);
      }
      else {
        int v233 = 1;
      }
      v229 += v232 + v233;
      ++v230;
    }
    while (v230 < *((int *)this + 278));
  }
  int v234 = *((_DWORD *)this + 284);
  int v235 = v229 + 2 * v234;
  if (v234 >= 1)
  {
    uint64_t v236 = 0;
    do
    {
      v237 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 141) + 8 * v236));
      int v238 = (int)v237;
      if (v237 >= 0x80) {
        int v239 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v237);
      }
      else {
        int v239 = 1;
      }
      v235 += v238 + v239;
      ++v236;
    }
    while (v236 < *((int *)this + 284));
  }
  int v240 = *((_DWORD *)this + 290);
  int v241 = v235 + 2 * v240;
  if (v240 >= 1)
  {
    uint64_t v242 = 0;
    do
    {
      int v243 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 144) + 8 * v242));
      int v244 = (int)v243;
      if (v243 >= 0x80) {
        int v245 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v243);
      }
      else {
        int v245 = 1;
      }
      v241 += v244 + v245;
      ++v242;
    }
    while (v242 < *((int *)this + 290));
  }
  int v246 = *((_DWORD *)this + 296);
  int v247 = v241 + 2 * v246;
  if (v246 >= 1)
  {
    uint64_t v248 = 0;
    do
    {
      int v249 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 147) + 8 * v248));
      int v250 = (int)v249;
      if (v249 >= 0x80) {
        int v251 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v249);
      }
      else {
        int v251 = 1;
      }
      v247 += v250 + v251;
      ++v248;
    }
    while (v248 < *((int *)this + 296));
  }
  int v252 = *((_DWORD *)this + 302);
  int v253 = v247 + 2 * v252;
  if (v252 >= 1)
  {
    uint64_t v254 = 0;
    do
    {
      int v255 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData **)(*((void *)this + 150) + 8 * v254));
      int v256 = (int)v255;
      if (v255 >= 0x80) {
        int v257 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v255);
      }
      else {
        int v257 = 1;
      }
      v253 += v256 + v257;
      ++v254;
    }
    while (v254 < *((int *)this + 302));
  }
  int v258 = *((_DWORD *)this + 308);
  int v259 = v253 + 2 * v258;
  if (v258 >= 1)
  {
    uint64_t v260 = 0;
    do
    {
      int v261 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 153) + 8 * v260));
      int v262 = (int)v261;
      if (v261 >= 0x80) {
        int v263 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v261);
      }
      else {
        int v263 = 1;
      }
      v259 += v262 + v263;
      ++v260;
    }
    while (v260 < *((int *)this + 308));
  }
  int v264 = *((_DWORD *)this + 314);
  int v265 = v259 + 2 * v264;
  if (v264 >= 1)
  {
    uint64_t v266 = 0;
    do
    {
      v267 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 156) + 8 * v266));
      int v268 = (int)v267;
      if (v267 >= 0x80) {
        int v269 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v267);
      }
      else {
        int v269 = 1;
      }
      v265 += v268 + v269;
      ++v266;
    }
    while (v266 < *((int *)this + 314));
  }
  int v270 = *((_DWORD *)this + 320);
  int v271 = v265 + 2 * v270;
  if (v270 >= 1)
  {
    uint64_t v272 = 0;
    do
    {
      int v273 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 159) + 8 * v272));
      int v274 = (int)v273;
      if (v273 >= 0x80) {
        int v275 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v273);
      }
      else {
        int v275 = 1;
      }
      v271 += v274 + v275;
      ++v272;
    }
    while (v272 < *((int *)this + 320));
  }
  int v276 = *((_DWORD *)this + 326);
  int v277 = v271 + 2 * v276;
  if (v276 >= 1)
  {
    uint64_t v278 = 0;
    do
    {
      int v279 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData **)(*((void *)this + 162) + 8 * v278));
      int v280 = (int)v279;
      if (v279 >= 0x80) {
        int v281 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v279);
      }
      else {
        int v281 = 1;
      }
      v277 += v280 + v281;
      ++v278;
    }
    while (v278 < *((int *)this + 326));
  }
  int v282 = *((_DWORD *)this + 332);
  uint64_t v283 = (v277 + 2 * v282);
  if (v282 >= 1)
  {
    uint64_t v284 = 0;
    do
    {
      v285 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::ByteSize(*(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal **)(*((void *)this + 165) + 8 * v284));
      int v286 = (int)v285;
      if (v285 >= 0x80) {
        int v287 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v285);
      }
      else {
        int v287 = 1;
      }
      uint64_t v283 = (v286 + v283 + v287);
      ++v284;
    }
    while (v284 < *((int *)this + 332));
  }
  *((_DWORD *)this + 339) = v283;
  return v283;
}

void awd::metrics::LocationGPSSessionStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGPSSessionStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGPSSessionStatistics::CopyFrom(awd::metrics::LocationGPSSessionStatistics *this, const awd::metrics::LocationGPSSessionStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGPSSessionStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationGPSSessionStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGPSSessionStatistics::IsInitialized(awd::metrics::LocationGPSSessionStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGPSSessionStatistics::Swap(uint64_t this, awd::metrics::LocationGPSSessionStatistics *a2)
{
  if (a2 != (awd::metrics::LocationGPSSessionStatistics *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    uint64_t v5 = *(void *)(this + 16);
    uint64_t v6 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    uint64_t v7 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
    uint64_t v8 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    int v9 = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v9;
    int v10 = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v10;
    int v11 = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v12 = *(_DWORD *)(v3 + 432);
    *(_DWORD *)(v3 + 432) = *((_DWORD *)a2 + 108);
    *((_DWORD *)a2 + 108) = v12;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v13 = *(void *)(v3 + 392);
    *(void *)(v3 + 392) = *((void *)a2 + 49);
    *((void *)a2 + 49) = v13;
    uint64_t v14 = *(void *)(v3 + 400);
    *(void *)(v3 + 400) = *((void *)a2 + 50);
    *((void *)a2 + 50) = v14;
    uint64_t v15 = *(void *)(v3 + 408);
    *(void *)(v3 + 408) = *((void *)a2 + 51);
    *((void *)a2 + 51) = v15;
    uint64_t v16 = *(void *)(v3 + 416);
    *(void *)(v3 + 416) = *((void *)a2 + 52);
    *((void *)a2 + 52) = v16;
    uint64_t v17 = *(void *)(v3 + 424);
    *(void *)(v3 + 424) = *((void *)a2 + 53);
    *((void *)a2 + 53) = v17;
    LOBYTE(v17) = *(unsigned char *)(v3 + 576);
    *(unsigned char *)(v3 + 576) = *((unsigned char *)a2 + 576);
    *((unsigned char *)a2 + 576) = v17;
    LOBYTE(v17) = *(unsigned char *)(v3 + 577);
    *(unsigned char *)(v3 + 577) = *((unsigned char *)a2 + 577);
    *((unsigned char *)a2 + 577) = v17;
    uint64_t v18 = *(void *)(v3 + 440);
    *(void *)(v3 + 440) = *((void *)a2 + 55);
    *((void *)a2 + 55) = v18;
    uint64_t v19 = *(void *)(v3 + 448);
    *(void *)(v3 + 448) = *((void *)a2 + 56);
    *((void *)a2 + 56) = v19;
    uint64_t v20 = *(void *)(v3 + 456);
    *(void *)(v3 + 456) = *((void *)a2 + 57);
    *((void *)a2 + 57) = v20;
    uint64_t v21 = *(void *)(v3 + 464);
    *(void *)(v3 + 464) = *((void *)a2 + 58);
    *((void *)a2 + 58) = v21;
    uint64_t v22 = *(void *)(v3 + 472);
    *(void *)(v3 + 472) = *((void *)a2 + 59);
    *((void *)a2 + 59) = v22;
    uint64_t v23 = *(void *)(v3 + 480);
    *(void *)(v3 + 480) = *((void *)a2 + 60);
    *((void *)a2 + 60) = v23;
    uint64_t v24 = *(void *)(v3 + 488);
    *(void *)(v3 + 488) = *((void *)a2 + 61);
    *((void *)a2 + 61) = v24;
    uint64_t v25 = *(void *)(v3 + 496);
    *(void *)(v3 + 496) = *((void *)a2 + 62);
    *((void *)a2 + 62) = v25;
    uint64_t v26 = *(void *)(v3 + 504);
    *(void *)(v3 + 504) = *((void *)a2 + 63);
    *((void *)a2 + 63) = v26;
    uint64_t v27 = *(void *)(v3 + 512);
    *(void *)(v3 + 512) = *((void *)a2 + 64);
    *((void *)a2 + 64) = v27;
    uint64_t v28 = *(void *)(v3 + 520);
    *(void *)(v3 + 520) = *((void *)a2 + 65);
    *((void *)a2 + 65) = v28;
    uint64_t v29 = *(void *)(v3 + 528);
    *(void *)(v3 + 528) = *((void *)a2 + 66);
    *((void *)a2 + 66) = v29;
    uint64_t v30 = *(void *)(v3 + 536);
    *(void *)(v3 + 536) = *((void *)a2 + 67);
    *((void *)a2 + 67) = v30;
    uint64_t v31 = *(void *)(v3 + 544);
    *(void *)(v3 + 544) = *((void *)a2 + 68);
    *((void *)a2 + 68) = v31;
    uint64_t v32 = *(void *)(v3 + 552);
    *(void *)(v3 + 552) = *((void *)a2 + 69);
    *((void *)a2 + 69) = v32;
    uint64_t v33 = *(void *)(v3 + 560);
    *(void *)(v3 + 560) = *((void *)a2 + 70);
    *((void *)a2 + 70) = v33;
    uint64_t v34 = *(void *)(v3 + 568);
    *(void *)(v3 + 568) = *((void *)a2 + 71);
    *((void *)a2 + 71) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 436);
    *(_DWORD *)(v3 + 436) = *((_DWORD *)a2 + 109);
    *((_DWORD *)a2 + 109) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 580);
    *(_DWORD *)(v3 + 580) = *((_DWORD *)a2 + 145);
    *((_DWORD *)a2 + 145) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 584);
    *(_DWORD *)(v3 + 584) = *((_DWORD *)a2 + 146);
    *((_DWORD *)a2 + 146) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 588);
    *(_DWORD *)(v3 + 588) = *((_DWORD *)a2 + 147);
    *((_DWORD *)a2 + 147) = v34;
    LODWORD(v34) = *(_DWORD *)(v3 + 592);
    *(_DWORD *)(v3 + 592) = *((_DWORD *)a2 + 148);
    *((_DWORD *)a2 + 148) = v34;
    int v35 = *(_DWORD *)(v3 + 596);
    *(_DWORD *)(v3 + 596) = *((_DWORD *)a2 + 149);
    *((_DWORD *)a2 + 149) = v35;
    int v36 = *(_DWORD *)(v3 + 600);
    *(_DWORD *)(v3 + 600) = *((_DWORD *)a2 + 150);
    *((_DWORD *)a2 + 150) = v36;
    LODWORD(v34) = *(_DWORD *)(v3 + 604);
    *(_DWORD *)(v3 + 604) = *((_DWORD *)a2 + 151);
    *((_DWORD *)a2 + 151) = v34;
    LOBYTE(v34) = *(unsigned char *)(v3 + 578);
    *(unsigned char *)(v3 + 578) = *((unsigned char *)a2 + 578);
    *((unsigned char *)a2 + 578) = v34;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v37 = *(void *)(v3 + 632);
    *(void *)(v3 + 632) = *((void *)a2 + 79);
    *((void *)a2 + 79) = v37;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v38 = *(void *)(v3 + 664);
    *(void *)(v3 + 664) = *((void *)a2 + 83);
    *((void *)a2 + 83) = v38;
    uint64_t v39 = *(void *)(v3 + 672);
    *(void *)(v3 + 672) = *((void *)a2 + 84);
    *((void *)a2 + 84) = v39;
    uint64_t v40 = *(void *)(v3 + 680);
    *(void *)(v3 + 680) = *((void *)a2 + 85);
    *((void *)a2 + 85) = v40;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v41 = *(_DWORD *)(v3 + 808);
    *(_DWORD *)(v3 + 808) = *((_DWORD *)a2 + 202);
    *((_DWORD *)a2 + 202) = v41;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v42 = *(void *)(v3 + 736);
    *(void *)(v3 + 736) = *((void *)a2 + 92);
    *((void *)a2 + 92) = v42;
    uint64_t v43 = *(void *)(v3 + 744);
    *(void *)(v3 + 744) = *((void *)a2 + 93);
    *((void *)a2 + 93) = v43;
    uint64_t v44 = *(void *)(v3 + 752);
    *(void *)(v3 + 752) = *((void *)a2 + 94);
    *((void *)a2 + 94) = v44;
    uint64_t v45 = *(void *)(v3 + 760);
    *(void *)(v3 + 760) = *((void *)a2 + 95);
    *((void *)a2 + 95) = v45;
    uint64_t v46 = *(void *)(v3 + 768);
    *(void *)(v3 + 768) = *((void *)a2 + 96);
    *((void *)a2 + 96) = v46;
    uint64_t v47 = *(void *)(v3 + 776);
    *(void *)(v3 + 776) = *((void *)a2 + 97);
    *((void *)a2 + 97) = v47;
    uint64_t v48 = *(void *)(v3 + 784);
    *(void *)(v3 + 784) = *((void *)a2 + 98);
    *((void *)a2 + 98) = v48;
    uint64_t v49 = *(void *)(v3 + 792);
    *(void *)(v3 + 792) = *((void *)a2 + 99);
    *((void *)a2 + 99) = v49;
    uint64_t v50 = *(void *)(v3 + 800);
    *(void *)(v3 + 800) = *((void *)a2 + 100);
    *((void *)a2 + 100) = v50;
    uint64_t v51 = *(void *)(v3 + 816);
    *(void *)(v3 + 816) = *((void *)a2 + 102);
    *((void *)a2 + 102) = v51;
    uint64_t v52 = *(void *)(v3 + 824);
    *(void *)(v3 + 824) = *((void *)a2 + 103);
    *((void *)a2 + 103) = v52;
    uint64_t v53 = *(void *)(v3 + 832);
    *(void *)(v3 + 832) = *((void *)a2 + 104);
    *((void *)a2 + 104) = v53;
    uint64_t v54 = *(void *)(v3 + 840);
    *(void *)(v3 + 840) = *((void *)a2 + 105);
    *((void *)a2 + 105) = v54;
    uint64_t v55 = *(void *)(v3 + 848);
    *(void *)(v3 + 848) = *((void *)a2 + 106);
    *((void *)a2 + 106) = v55;
    LOBYTE(v55) = *(unsigned char *)(v3 + 579);
    *(unsigned char *)(v3 + 579) = *((unsigned char *)a2 + 579);
    *((unsigned char *)a2 + 579) = v55;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v56 = *(void *)(v3 + 880);
    *(void *)(v3 + 880) = *((void *)a2 + 110);
    *((void *)a2 + 110) = v56;
    uint64_t v57 = *(void *)(v3 + 888);
    *(void *)(v3 + 888) = *((void *)a2 + 111);
    *((void *)a2 + 111) = v57;
    LOBYTE(v57) = *(unsigned char *)(v3 + 1044);
    *(unsigned char *)(v3 + 1044) = *((unsigned char *)a2 + 1044);
    *((unsigned char *)a2 + 1044) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 812);
    *(_DWORD *)(v3 + 812) = *((_DWORD *)a2 + 203);
    *((_DWORD *)a2 + 203) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 896);
    *(_DWORD *)(v3 + 896) = *((_DWORD *)a2 + 224);
    *((_DWORD *)a2 + 224) = v57;
    LODWORD(v57) = *(_DWORD *)(v3 + 900);
    *(_DWORD *)(v3 + 900) = *((_DWORD *)a2 + 225);
    *((_DWORD *)a2 + 225) = v57;
    uint64_t v58 = *(void *)(v3 + 904);
    *(void *)(v3 + 904) = *((void *)a2 + 113);
    *((void *)a2 + 113) = v58;
    uint64_t v59 = *(void *)(v3 + 912);
    *(void *)(v3 + 912) = *((void *)a2 + 114);
    *((void *)a2 + 114) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 920);
    *(_DWORD *)(v3 + 920) = *((_DWORD *)a2 + 230);
    *((_DWORD *)a2 + 230) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 924);
    *(_DWORD *)(v3 + 924) = *((_DWORD *)a2 + 231);
    *((_DWORD *)a2 + 231) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 928);
    *(_DWORD *)(v3 + 928) = *((_DWORD *)a2 + 232);
    *((_DWORD *)a2 + 232) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 932);
    *(_DWORD *)(v3 + 932) = *((_DWORD *)a2 + 233);
    *((_DWORD *)a2 + 233) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 936);
    *(_DWORD *)(v3 + 936) = *((_DWORD *)a2 + 234);
    *((_DWORD *)a2 + 234) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 940);
    *(_DWORD *)(v3 + 940) = *((_DWORD *)a2 + 235);
    *((_DWORD *)a2 + 235) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 944);
    *(_DWORD *)(v3 + 944) = *((_DWORD *)a2 + 236);
    *((_DWORD *)a2 + 236) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 948);
    *(_DWORD *)(v3 + 948) = *((_DWORD *)a2 + 237);
    *((_DWORD *)a2 + 237) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 952);
    *(_DWORD *)(v3 + 952) = *((_DWORD *)a2 + 238);
    *((_DWORD *)a2 + 238) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 956);
    *(_DWORD *)(v3 + 956) = *((_DWORD *)a2 + 239);
    *((_DWORD *)a2 + 239) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 960);
    *(_DWORD *)(v3 + 960) = *((_DWORD *)a2 + 240);
    *((_DWORD *)a2 + 240) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 964);
    *(_DWORD *)(v3 + 964) = *((_DWORD *)a2 + 241);
    *((_DWORD *)a2 + 241) = v59;
    LODWORD(v59) = *(_DWORD *)(v3 + 1040);
    *(_DWORD *)(v3 + 1040) = *((_DWORD *)a2 + 260);
    *((_DWORD *)a2 + 260) = v59;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v60 = *(void *)(v3 + 1072);
    *(void *)(v3 + 1072) = *((void *)a2 + 134);
    *((void *)a2 + 134) = v60;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    char v61 = *(unsigned char *)(v3 + 1045);
    *(unsigned char *)(v3 + 1045) = *((unsigned char *)a2 + 1045);
    *((unsigned char *)a2 + 1045) = v61;
    char v62 = *(unsigned char *)(v3 + 1046);
    *(unsigned char *)(v3 + 1046) = *((unsigned char *)a2 + 1046);
    *((unsigned char *)a2 + 1046) = v62;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v63 = *(_DWORD *)(v3 + 1344);
    *(_DWORD *)(v3 + 1344) = *((_DWORD *)a2 + 336);
    *((_DWORD *)a2 + 336) = v63;
    int v64 = *(_DWORD *)(v3 + 1348);
    *(_DWORD *)(v3 + 1348) = *((_DWORD *)a2 + 337);
    *((_DWORD *)a2 + 337) = v64;
    int v65 = *(_DWORD *)(v3 + 1352);
    *(_DWORD *)(v3 + 1352) = *((_DWORD *)a2 + 338);
    *((_DWORD *)a2 + 338) = v65;
    int v66 = *(_DWORD *)(v3 + 1360);
    *(_DWORD *)(v3 + 1360) = *((_DWORD *)a2 + 340);
    *((_DWORD *)a2 + 340) = v66;
    int v67 = *(_DWORD *)(v3 + 1364);
    *(_DWORD *)(v3 + 1364) = *((_DWORD *)a2 + 341);
    *((_DWORD *)a2 + 341) = v67;
    int v68 = *(_DWORD *)(v3 + 1368);
    *(_DWORD *)(v3 + 1368) = *((_DWORD *)a2 + 342);
    *((_DWORD *)a2 + 342) = v68;
    int v69 = *(_DWORD *)(v3 + 1372);
    *(_DWORD *)(v3 + 1372) = *((_DWORD *)a2 + 343);
    *((_DWORD *)a2 + 343) = v69;
    int v70 = *(_DWORD *)(v3 + 1356);
    *(_DWORD *)(v3 + 1356) = *((_DWORD *)a2 + 339);
    *((_DWORD *)a2 + 339) = v70;
  }
  return this;
}

void *awd::metrics::LocationGPSSessionStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGPSSessionStatistics");
}

double awd::metrics::LocationCellTileUsage::SharedCtor(awd::metrics::LocationCellTileUsage *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationCellTileUsage *awd::metrics::LocationCellTileUsage::LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  *(void *)this = &unk_26D7BC0E8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  awd::metrics::LocationCellTileUsage::MergeFrom(this, a2);
  return this;
}

void sub_224964B90(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCellTileUsage::MergeFrom(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 15) |= 2u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 15) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 15) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  if ((*((_DWORD *)a2 + 15) & 0x400) == 0) {
    return;
  }
LABEL_17:
  int v6 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 15) |= 0x400u;
  *((_DWORD *)this + 13) = v6;
}

void sub_224964D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationCellTileUsage::~LocationCellTileUsage(awd::metrics::LocationCellTileUsage *this)
{
  *(void *)this = &unk_26D7BC0E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC0E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC0E8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationCellTileUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationCellTileUsage::default_instance(awd::metrics::LocationCellTileUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationCellTileUsage::default_instance_;
  if (!awd::metrics::LocationCellTileUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationCellTileUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationCellTileUsage::New(awd::metrics::LocationCellTileUsage *this)
{
}

uint64_t awd::metrics::LocationCellTileUsage::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(_DWORD *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::LocationCellTileUsage::MergePartialFromCodedStream(awd::metrics::LocationCellTileUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v39 = (unint64_t *)((char *)this + 8);
  uint64_t v40 = (unsigned int *)((char *)this + 16);
  int v41 = (unsigned int *)((char *)this + 20);
  int v4 = (unsigned int *)((char *)this + 24);
  int v5 = (unsigned int *)((char *)this + 28);
  int v6 = (unsigned int *)((char *)this + 32);
  uint64_t v7 = (unsigned int *)((char *)this + 36);
  int v8 = (unsigned int *)((char *)this + 40);
  int v9 = (unsigned int *)((char *)this + 44);
  int v10 = (unsigned int *)((char *)this + 48);
  int v11 = (unsigned int *)((char *)this + 52);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v39 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_38:
          *((_DWORD *)this + 15) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            uint64_t v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v39);
        if (result)
        {
          uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_41:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v40 = *v18;
          uint64_t v28 = v18 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        uint64_t v19 = v28 + 1;
        *((void *)a2 + 1) = v19;
LABEL_49:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v41 = *v19;
          uint64_t v29 = v19 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32) {
          continue;
        }
        uint64_t v20 = v29 + 1;
        *((void *)a2 + 1) = v20;
LABEL_57:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v20;
          uint64_t v30 = v20 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40) {
          continue;
        }
        uint64_t v21 = v30 + 1;
        *((void *)a2 + 1) = v21;
LABEL_65:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v21;
          uint64_t v31 = v21 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v31 >= v15 || *v31 != 48) {
          continue;
        }
        uint64_t v22 = v31 + 1;
        *((void *)a2 + 1) = v22;
LABEL_73:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v22;
          uint64_t v32 = v22 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if ((unint64_t)v32 >= v15 || *v32 != 56) {
          continue;
        }
        uint64_t v23 = v32 + 1;
        *((void *)a2 + 1) = v23;
LABEL_81:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v23;
          uint64_t v33 = v23 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 15) |= 0x40u;
        if ((unint64_t)v33 >= v15 || *v33 != 64) {
          continue;
        }
        uint64_t v24 = v33 + 1;
        *((void *)a2 + 1) = v24;
LABEL_89:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v24;
          uint64_t v34 = v24 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 15) |= 0x80u;
        if ((unint64_t)v34 >= v15 || *v34 != 72) {
          continue;
        }
        uint64_t v25 = v34 + 1;
        *((void *)a2 + 1) = v25;
LABEL_97:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v25;
          int v35 = v25 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 15) |= 0x100u;
        if ((unint64_t)v35 >= v15 || *v35 != 80) {
          continue;
        }
        uint64_t v26 = v35 + 1;
        *((void *)a2 + 1) = v26;
LABEL_105:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v26;
          int v36 = v26 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 15) |= 0x200u;
        if ((unint64_t)v36 >= v15 || *v36 != 88) {
          continue;
        }
        uint64_t v27 = v36 + 1;
        *((void *)a2 + 1) = v27;
LABEL_113:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          uint64_t v37 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v27;
          uint64_t v37 = (unsigned __int8 *)(v27 + 1);
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 15) |= 0x400u;
        if (v37 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_49;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_57;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_65;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_73;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_81;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_89;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_97;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_105;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v27 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_113;
      default:
        int v14 = TagFallback & 7;
LABEL_32:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationCellTileUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[15];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
    if ((v5[15] & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[15];
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  uint64_t v7 = v5[13];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationCellTileUsage::ByteSize(awd::metrics::LocationCellTileUsage *this)
{
  int v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_42;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_59;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_59;
      }
      goto LABEL_55;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_55:
    uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if (v22 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    }
    else {
      int v23 = 2;
    }
    uint64_t v3 = (v23 + v3);
  }
LABEL_59:
  *((_DWORD *)this + 14) = v3;
  return v3;
}

void awd::metrics::LocationCellTileUsage::CheckTypeAndMergeFrom(awd::metrics::LocationCellTileUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationCellTileUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationCellTileUsage::CopyFrom(awd::metrics::LocationCellTileUsage *this, const awd::metrics::LocationCellTileUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationCellTileUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationCellTileUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationCellTileUsage::IsInitialized(awd::metrics::LocationCellTileUsage *this)
{
  return 1;
}

uint64_t awd::metrics::LocationCellTileUsage::Swap(uint64_t this, awd::metrics::LocationCellTileUsage *a2)
{
  if (a2 != (awd::metrics::LocationCellTileUsage *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return this;
}

void *awd::metrics::LocationCellTileUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationCellTileUsage");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(void *)(this + 24) = 0;
  *(void *)(this + 8) = v1;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC160;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, a2);
  return this;
}

void sub_224965B38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    int v5 = (std::string *)MEMORY[0x263F8C740];
    if (*((unsigned char *)a2 + 32))
    {
      unsigned int v6 = (const std::string *)*((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      int v7 = (std::string *)*((void *)this + 1);
      if (v7 == v5) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_12:
    int v9 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 8) |= 4u;
    int v10 = (std::string *)*((void *)this + 2);
    if (v10 == v5) {
      operator new();
    }
    std::string::operator=(v10, v9);
  }
}

void sub_224965C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::~LocationGnssSWRecoveryStatistics_LocationRecoveryPoint(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  *(void *)this = &unk_26D7BC160;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC160;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC160;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 8);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    uint64_t v1 = MEMORY[0x263F8C740];
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 24);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v6 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if (v9 != 2) {
            goto LABEL_25;
          }
          *((_DWORD *)this + 8) |= 1u;
          if (*((void *)this + 1) == v5) {
            operator new();
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
          if ((unint64_t)v13 < v12 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_21;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_21:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        int v10 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + 8) = v10;
        if ((unint64_t)v15 < v12 && *v15 == 26)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_33;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_25;
      }
      int v10 = *((_DWORD *)this + 8);
LABEL_33:
      *((_DWORD *)this + 8) = v10 | 4;
      if (*((void *)this + 2) == v5) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_25:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_29;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      int v2 = *((_DWORD *)this + 8);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v9 + v5);
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v3 = (v12 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    uint64_t v13 = *((void *)this + 2);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    char v15 = v14;
    uint64_t v16 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      unint64_t v17 = v16;
    }
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v16 = *(void *)(v13 + 8);
      char v15 = *(unsigned char *)(v13 + 23);
    }
    else
    {
      int v18 = 1;
    }
    if (v15 < 0) {
      int v14 = v16;
    }
    uint64_t v3 = (v3 + v18 + v14 + 1);
  }
LABEL_29:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *))(*(void *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *a2)
{
  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationRecoveryPoint");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SharedCtor(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 11) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  *(void *)this = &unk_26D7BC1D8;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 2) = 0;
  *(_DWORD *)((char *)this + 11) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, a2);
  return this;
}

void sub_224966560(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      char v6 = *((unsigned char *)a2 + 12);
      *((_DWORD *)this + 5) |= 1u;
      *((unsigned char *)this + 12) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 5) |= 2u;
    *((_DWORD *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *((unsigned char *)a2 + 13);
    *((_DWORD *)this + 5) |= 4u;
    *((unsigned char *)this + 13) = v8;
    if ((*((_DWORD *)a2 + 5) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *((unsigned char *)a2 + 14);
    *((_DWORD *)this + 5) |= 8u;
    *((unsigned char *)this + 14) = v5;
  }
}

void sub_224966668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::~LocationGnssSWRecoveryStatistics_LocationRecoveryStatus(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  *(void *)this = &unk_26D7BC1D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC1D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC1D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    *(_DWORD *)(this + 11) = 0;
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  while (2)
  {
    char v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v23 = 0;
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
LABEL_24:
          *((unsigned char *)this + 12) = v10 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
        if (result)
        {
          unsigned int v10 = v23;
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
LABEL_27:
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          char v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v12;
          char v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v15 >= v8 || *v15 != 24) {
          continue;
        }
        uint64_t v13 = v15 + 1;
        *((void *)a2 + 1) = v13;
LABEL_35:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v16 = v22;
          unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v13;
          unint64_t v17 = v13 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((unsigned char *)this + 13) = v16 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v17 >= v8 || *v17 != 32) {
          continue;
        }
        int v14 = v17 + 1;
        *((void *)a2 + 1) = v14;
LABEL_43:
        unsigned int v21 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v18 = v21;
          int v19 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          int v19 = (unsigned __int8 *)(v14 + 1);
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 14) = v18 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if (v19 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_43;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 12), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 20) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 14);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  int v2 = *((_DWORD *)this + 5);
  if ((_BYTE)v2)
  {
    int v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 5);
      }
      else
      {
        int v5 = 2;
      }
      v3 += v5;
    }
    unsigned int v7 = v3 + 2;
    if ((v2 & 4) == 0) {
      unsigned int v7 = v3;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v7 + 2;
    }
    else {
      uint64_t result = v7;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *))(*(void *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *a2)
{
  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)this)
  {
    char v2 = *(unsigned char *)(this + 12);
    *(unsigned char *)(this + 12) = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = v2;
    int v3 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v3;
    LOBYTE(v3) = *(unsigned char *)(this + 13);
    *(unsigned char *)(this + 13) = *((unsigned char *)a2 + 13);
    *((unsigned char *)a2 + 13) = v3;
    LOBYTE(v3) = *(unsigned char *)(this + 14);
    *(unsigned char *)(this + 14) = *((unsigned char *)a2 + 14);
    *((unsigned char *)a2 + 14) = v3;
    int v4 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationRecoveryStatus");
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  *(void *)this = &unk_26D7BC250;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, a2);
  return this;
}

void sub_224966DD4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergeFrom(*(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if ((*((unsigned char *)a2 + 44) & 2) != 0)
  {
    *((_DWORD *)this + 11) |= 2u;
    int v9 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((void *)this + 4);
    if (!v9) {
      operator new();
    }
    unsigned int v10 = (const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((void *)a2 + 4);
    if (!v10) {
      unsigned int v10 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus **)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
    }
                                                                                            + 32);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergeFrom(v9, v10);
  }
}

void sub_224966FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::~LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  *(void *)this = &unk_26D7BC250;
  if ((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 4);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::~LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ != this)
  {
    this = (void *)this[4];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::New(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Clear(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  if ((*((unsigned char *)this + 44) & 2) != 0)
  {
    uint64_t v2 = *((void *)this + 4);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 20))
      {
        *(_DWORD *)(v2 + 11) = 0;
        *(_DWORD *)(v2 + 8) = 0;
      }
      *(_DWORD *)(v2 + 20) = 0;
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>((uint64_t)this + 8);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)((char *)this + 8);
  do
  {
    while (1)
    {
LABEL_2:
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2)
      {
        while (1)
        {
          int v10 = *((_DWORD *)this + 5);
          uint64_t v11 = *((int *)this + 4);
          if ((int)v11 >= v10)
          {
            if (v10 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v10 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v11 + 1;
          uint64_t v13 = *(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(v12 + 8 * v11);
          unsigned int v27 = 0;
          int v14 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
          }
            }
          else
          {
            unsigned int v27 = *v14;
            *((void *)a2 + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)a2 + 14);
          int v16 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v17 = *((_DWORD *)a2 + 14);
          BOOL v18 = __OFSUB__(v17, 1);
          int v19 = v17 - 1;
          if (v19 < 0 == v18) {
            *((_DWORD *)a2 + 14) = v19;
          }
          uint64_t v20 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v20 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v21 = *v20;
          if (v21 != 10)
          {
            if (v21 != 18) {
              goto LABEL_2;
            }
            *((void *)a2 + 1) = v20 + 1;
            goto LABEL_10;
          }
          *((void *)a2 + 1) = v20 + 1;
        }
      }
LABEL_34:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
    if (TagFallback >> 3 != 2)
    {
      int v7 = TagFallback & 7;
      goto LABEL_34;
    }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_34;
    }
LABEL_10:
    *((_DWORD *)this + 11) |= 2u;
    uint64_t v8 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((void *)this + 4);
    if (!v8) {
      operator new();
    }
    unsigned int v28 = 0;
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28)) {
        return 0;
      }
    }
    else
    {
      unsigned int v28 = *v9;
      *((void *)a2 + 1) = v9 + 1;
    }
    int v22 = *((_DWORD *)a2 + 14);
    int v23 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v22 + 1;
    if (v22 >= v23) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v24 = *((_DWORD *)a2 + 14);
    BOOL v18 = __OFSUB__(v24, 1);
    int v25 = v24 - 1;
    if (v25 < 0 == v18) {
      *((_DWORD *)a2 + 14) = v25;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 44) & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 32);
    if (!v7) {
      uint64_t v7 = *(void *)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  if ((*((unsigned char *)this + 44) & 2) != 0)
  {
    int v3 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *)*((void *)this + 4);
    if (!v3) {
      int v3 = *(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus **)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::default_instance_
    }
                                                                                     + 32);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  int v7 = *((_DWORD *)this + 4);
  uint64_t v8 = (v7 + v2);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::ByteSize(*(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint **)(*((void *)this + 1) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *))(*(void *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  return 1;
}

awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Swap(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this, awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    this = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 4);
    *((void *)v3 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
  }
  return this;
}

void *awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics.LocationGnssRecoveryInfo");
}

void *awd::metrics::LocationGnssSWRecoveryStatistics::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  this[4] = 0;
  return this;
}

awd::metrics::LocationGnssSWRecoveryStatistics *awd::metrics::LocationGnssSWRecoveryStatistics::LocationGnssSWRecoveryStatistics(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  *(void *)this = &unk_26D7BC2C8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, a2);
  return this;
}

void sub_2249678D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    int v7 = (std::string *)*((void *)this + 2);
    if (v7 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v7, v6);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_12:
      *((_DWORD *)this + 9) |= 4u;
      uint64_t v8 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((void *)this + 3);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = (const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((void *)a2 + 3);
      if (!v9) {
        uint64_t v9 = *(const awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo **)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_
      }
                                                                                               + 24);
      awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergeFrom(v8, v9);
    }
  }
}

void sub_224967A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::~LocationGnssSWRecoveryStatistics(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  *(void *)this = &unk_26D7BC2C8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC2C8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC2C8;
  awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationGnssSWRecoveryStatistics::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  if ((void *)awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ != v1)
  {
    this = (void *)v1[3];
    if (this)
    {
      int v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::default_instance(awd::metrics::LocationGnssSWRecoveryStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_;
  if (!awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationGnssSWRecoveryStatistics::New(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 36);
  if (v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 36) & 4) != 0)
    {
      this = *(void *)(this + 24);
      if (this) {
        this = awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::Clear((awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)this);
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::MergePartialFromCodedStream(awd::metrics::LocationGnssSWRecoveryStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v11 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *int v4 = *v11;
            int v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
          }
          int v13 = *((_DWORD *)this + 9) | 1;
          *((_DWORD *)this + 9) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_19;
        }
        int v13 = *((_DWORD *)this + 9);
LABEL_27:
        *((_DWORD *)this + 9) = v13 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 26)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_33;
        }
      }
      if (v8 != 3)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }
      int v9 = TagFallback & 7;
      if (v9 == 2) {
        break;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_33:
    *((_DWORD *)this + 9) |= 4u;
    int v16 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((void *)this + 3);
    if (!v16) {
      operator new();
    }
    unsigned int v23 = 0;
    int v17 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v17;
      *((void *)a2 + 1) = v17 + 1;
    }
    int v18 = *((_DWORD *)a2 + 14);
    int v19 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v20 = *((_DWORD *)a2 + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)a2 + 14) = v22;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_ + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::ByteSize(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_23;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v4 = *((void *)this + 2);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v2 = *((_DWORD *)this + 9);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v3 + v9 + v5 + 1);
    goto LABEL_16;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 36) & 2) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = (awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *)*((void *)this + 3);
    if (!v10) {
      unint64_t v10 = *(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo **)(awd::metrics::LocationGnssSWRecoveryStatistics::default_instance_
    }
                                                                                        + 24);
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::ByteSize(v10);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    }
    else {
      int v13 = 1;
    }
    uint64_t v3 = (v3 + v12 + v13 + 1);
  }
LABEL_23:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CopyFrom(awd::metrics::LocationGnssSWRecoveryStatistics *this, const awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationGnssSWRecoveryStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationGnssSWRecoveryStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::IsInitialized(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::Swap(uint64_t this, awd::metrics::LocationGnssSWRecoveryStatistics *a2)
{
  if (a2 != (awd::metrics::LocationGnssSWRecoveryStatistics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

void *awd::metrics::LocationGnssSWRecoveryStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationGnssSWRecoveryStatistics");
}

BOOL awd::metrics::LocationVisibilityAssertion_InvalidationReason_IsValid(awd::metrics *this)
{
  return this < 2;
}

uint64_t awd::metrics::LocationVisibilityAssertion::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationVisibilityAssertion *awd::metrics::LocationVisibilityAssertion::LocationVisibilityAssertion(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  *(void *)this = &unk_26D7BC340;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 5) = 0;
  awd::metrics::LocationVisibilityAssertion::MergeFrom(this, a2);
  return this;
}

void sub_2249683D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationVisibilityAssertion::MergeFrom(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *((_DWORD *)a2 + 12);
  if (!(_BYTE)v4) {
    goto LABEL_12;
  }
  if (v4)
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 12) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v6 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 12) |= 2u;
  uint64_t v7 = (std::string *)*((void *)this + 2);
  if (v7 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v7, v6);
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v8 = *((void *)a2 + 3);
  *((_DWORD *)this + 12) |= 4u;
  *((void *)this + 3) = v8;
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v9 = *((unsigned char *)a2 + 32);
  *((_DWORD *)this + 12) |= 8u;
  *((unsigned char *)this + 32) = v9;
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v10 = *((unsigned char *)a2 + 33);
  *((_DWORD *)this + 12) |= 0x10u;
  *((unsigned char *)this + 33) = v10;
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v11 = *((unsigned char *)a2 + 34);
  *((_DWORD *)this + 12) |= 0x20u;
  *((unsigned char *)this + 34) = v11;
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 0x40) != 0)
  {
LABEL_22:
    char v12 = *((unsigned char *)a2 + 35);
    *((_DWORD *)this + 12) |= 0x40u;
    *((unsigned char *)this + 35) = v12;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x80) != 0) {
      goto LABEL_23;
    }
LABEL_12:
    if ((v4 & 0x100) == 0) {
      return;
    }
    goto LABEL_25;
  }
LABEL_11:
  if ((v4 & 0x80) == 0) {
    goto LABEL_12;
  }
LABEL_23:
  unsigned int v13 = *((_DWORD *)a2 + 9);
  if (v13 >= 2) {
    awd::metrics::LocationVisibilityAssertion::MergeFrom();
  }
  *((_DWORD *)this + 12) |= 0x80u;
  *((_DWORD *)this + 9) = v13;
  if ((*((_DWORD *)a2 + 12) & 0x100) != 0)
  {
LABEL_25:
    unsigned int v14 = *((_DWORD *)a2 + 10);
    if (v14 >= 3) {
      awd::metrics::LocationVisibilityAssertion::MergeFrom();
    }
    *((_DWORD *)this + 12) |= 0x100u;
    *((_DWORD *)this + 10) = v14;
  }
}

void sub_2249685E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationVisibilityAssertion::~LocationVisibilityAssertion(awd::metrics::LocationVisibilityAssertion *this)
{
  *(void *)this = &unk_26D7BC340;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC340;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC340;
  awd::metrics::LocationVisibilityAssertion::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationVisibilityAssertion::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::default_instance(awd::metrics::LocationVisibilityAssertion *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationVisibilityAssertion::default_instance_;
  if (!awd::metrics::LocationVisibilityAssertion::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationVisibilityAssertion::default_instance_;
  }
  return result;
}

void awd::metrics::LocationVisibilityAssertion::New(awd::metrics::LocationVisibilityAssertion *this)
{
}

uint64_t awd::metrics::LocationVisibilityAssertion::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 48);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    int v1 = *(_DWORD *)(this + 48);
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationVisibilityAssertion::MergePartialFromCodedStream(awd::metrics::LocationVisibilityAssertion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 24);
  uint64_t v6 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        char v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          char v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_34:
          int v13 = *((_DWORD *)this + 12) | 1;
          *((_DWORD *)this + 12) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          char v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        int v13 = *((_DWORD *)this + 12);
LABEL_37:
        *((_DWORD *)this + 12) = v13 | 2;
        if (*((void *)this + 2) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v14 || *v24 != 24) {
          continue;
        }
        int v15 = v24 + 1;
        *((void *)a2 + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v15;
          int v25 = v15 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v25 >= v14 || *v25 != 32) {
          continue;
        }
        int v16 = v25 + 1;
        *((void *)a2 + 1) = v16;
LABEL_51:
        unsigned int v39 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v26 = v39;
          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v16;
          unsigned int v27 = v16 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((unsigned char *)this + 32) = v26 != 0;
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v27 >= v14 || *v27 != 40) {
          continue;
        }
        int v17 = v27 + 1;
        *((void *)a2 + 1) = v17;
LABEL_59:
        unsigned int v39 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v28 = v39;
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v17;
          uint64_t v29 = v17 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 33) = v28 != 0;
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v29 >= v14 || *v29 != 48) {
          continue;
        }
        int v18 = v29 + 1;
        *((void *)a2 + 1) = v18;
LABEL_67:
        unsigned int v39 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v30 = v39;
          uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v18;
          uint64_t v31 = v18 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((unsigned char *)this + 34) = v30 != 0;
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v31 >= v14 || *v31 != 56) {
          continue;
        }
        int v19 = v31 + 1;
        *((void *)a2 + 1) = v19;
LABEL_75:
        unsigned int v39 = 0;
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v32 = v39;
        }
        else
        {
          unsigned int v32 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        if (v32 <= 1)
        {
          *((_DWORD *)this + 12) |= 0x80u;
          *((_DWORD *)this + 9) = v32;
        }
        uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v33 >= v20 || *v33 != 64) {
          continue;
        }
        BOOL v21 = v33 + 1;
        *((void *)a2 + 1) = v21;
LABEL_85:
        unsigned int v39 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v34 = v39;
        }
        else
        {
          unsigned int v34 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        if (v34 <= 2)
        {
          *((_DWORD *)this + 12) |= 0x100u;
          *((_DWORD *)this + 10) = v34;
        }
        int v35 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        if ((unint64_t)v35 >= v22 || *v35 != 72) {
          continue;
        }
        unsigned int v23 = v35 + 1;
        *((void *)a2 + 1) = v23;
LABEL_95:
        unsigned int v39 = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v36 = v39;
          uint64_t v37 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v36 = *v23;
          uint64_t v37 = (unsigned __int8 *)(v23 + 1);
          *((void *)a2 + 1) = v37;
        }
        *((unsigned char *)this + 35) = v36 != 0;
        *((_DWORD *)this + 12) |= 0x40u;
        if (v37 != (unsigned __int8 *)v22 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_51;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_59;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_67;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_75;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_85;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_95;
      default:
        int v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationVisibilityAssertion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 33), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 34), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x40) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x100) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 35);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationVisibilityAssertion::ByteSize(awd::metrics::LocationVisibilityAssertion *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_34;
  }
  if ((v2 & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v5 = *((void *)this + 2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v2 = *((_DWORD *)this + 12);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    v3 += v10 + v6 + 1;
    goto LABEL_16;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 3))
        + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  unsigned int v11 = v3 + 2;
  if ((v2 & 8) == 0) {
    unsigned int v11 = v3;
  }
  if ((v2 & 0x10) != 0) {
    v11 += 2;
  }
  if ((v2 & 0x20) != 0) {
    v11 += 2;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t v4 = v11 + 2;
  }
  else {
    uint64_t v4 = v11;
  }
  if ((v2 & 0x80) != 0)
  {
    char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_34:
  if ((v2 & 0x100) != 0)
  {
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

void awd::metrics::LocationVisibilityAssertion::CheckTypeAndMergeFrom(awd::metrics::LocationVisibilityAssertion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationVisibilityAssertion::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationVisibilityAssertion::CopyFrom(awd::metrics::LocationVisibilityAssertion *this, const awd::metrics::LocationVisibilityAssertion *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationVisibilityAssertion *))(*(void *)this + 32))(this);
    awd::metrics::LocationVisibilityAssertion::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationVisibilityAssertion::IsInitialized(awd::metrics::LocationVisibilityAssertion *this)
{
  return 1;
}

uint64_t awd::metrics::LocationVisibilityAssertion::Swap(uint64_t this, awd::metrics::LocationVisibilityAssertion *a2)
{
  if (a2 != (awd::metrics::LocationVisibilityAssertion *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 32);
    *(unsigned char *)(this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 33);
    *(unsigned char *)(this + 33) = *((unsigned char *)a2 + 33);
    *((unsigned char *)a2 + 33) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 34);
    *(unsigned char *)(this + 34) = *((unsigned char *)a2 + 34);
    *((unsigned char *)a2 + 34) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 35);
    *(unsigned char *)(this + 35) = *((unsigned char *)a2 + 35);
    *((unsigned char *)a2 + 35) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

void *awd::metrics::LocationVisibilityAssertion::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationVisibilityAssertion");
}

BOOL awd::metrics::LocationPhoneNumberAvailability_SubscriptionAndPhoneNumberStatus_IsValid(awd::metrics *this)
{
  return this < 6;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 29) = 0;
  return this;
}

awd::metrics::LocationPhoneNumberAvailability *awd::metrics::LocationPhoneNumberAvailability::LocationPhoneNumberAvailability(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  *(void *)this = &unk_26D7BC3B8;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  *(void *)((char *)this + 29) = 0;
  awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, a2);
  return this;
}

void sub_224969308(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPhoneNumberAvailability::MergeFrom(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 14) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 14) |= 2u;
  unint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_20:
  unsigned int v10 = *((_DWORD *)a2 + 6);
  if (v10 >= 6) {
    awd::metrics::LocationPhoneNumberAvailability::MergeFrom();
  }
  *((_DWORD *)this + 14) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    char v13 = *((unsigned char *)a2 + 36);
    *((_DWORD *)this + 14) |= 0x20u;
    *((unsigned char *)this + 36) = v13;
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 14) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 14) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 14) |= 0x100u;
    *((_DWORD *)this + 12) = v6;
  }
}

void sub_224969500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPhoneNumberAvailability::~LocationPhoneNumberAvailability(awd::metrics::LocationPhoneNumberAvailability *this)
{
  *(void *)this = &unk_26D7BC3B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC3B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC3B8;
  awd::metrics::LocationPhoneNumberAvailability::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::default_instance(awd::metrics::LocationPhoneNumberAvailability *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPhoneNumberAvailability::default_instance_;
  if (!awd::metrics::LocationPhoneNumberAvailability::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPhoneNumberAvailability::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPhoneNumberAvailability::New(awd::metrics::LocationPhoneNumberAvailability *this)
{
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 40) = 0;
    *(void *)(this + 24) = 0;
    *(void *)(this + 29) = 0;
    int v1 = *(_DWORD *)(this + 56);
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::MergePartialFromCodedStream(awd::metrics::LocationPhoneNumberAvailability *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_34:
          int v13 = *((_DWORD *)this + 14) | 1;
          *((_DWORD *)this + 14) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_28;
        }
        int v13 = *((_DWORD *)this + 14);
LABEL_37:
        *((_DWORD *)this + 14) = v13 | 2;
        if (*((void *)this + 2) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v14 || *v23 != 24) {
          continue;
        }
        int v15 = v23 + 1;
        *((void *)a2 + 1) = v15;
LABEL_43:
        unsigned int v38 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v24 = v38;
        }
        else
        {
          unsigned int v24 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v24 <= 5)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 6) = v24;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v25 >= v16 || *v25 != 32) {
          continue;
        }
        int v17 = v25 + 1;
        *((void *)a2 + 1) = v17;
LABEL_53:
        unsigned int v38 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v26 = v38;
          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          unsigned int v27 = v17 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 7) = v26;
        *((_DWORD *)this + 14) |= 8u;
        if ((unint64_t)v27 >= v16 || *v27 != 40) {
          continue;
        }
        int v18 = v27 + 1;
        *((void *)a2 + 1) = v18;
LABEL_61:
        unsigned int v38 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v28 = v38;
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v18;
          uint64_t v29 = v18 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 8) = v28;
        *((_DWORD *)this + 14) |= 0x10u;
        if ((unint64_t)v29 >= v16 || *v29 != 48) {
          continue;
        }
        int v19 = v29 + 1;
        *((void *)a2 + 1) = v19;
LABEL_69:
        unsigned int v38 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v30 = v38;
          uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v19;
          uint64_t v31 = v19 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((unsigned char *)this + 36) = v30 != 0;
        *((_DWORD *)this + 14) |= 0x20u;
        if ((unint64_t)v31 >= v16 || *v31 != 56) {
          continue;
        }
        unint64_t v20 = v31 + 1;
        *((void *)a2 + 1) = v20;
LABEL_77:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v20;
          unsigned int v32 = v20 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v32 >= v16 || *v32 != 64) {
          continue;
        }
        BOOL v21 = v32 + 1;
        *((void *)a2 + 1) = v21;
LABEL_85:
        unsigned int v38 = 0;
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v33 = v38;
          unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v21;
          unsigned int v34 = v21 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 11) = v33;
        *((_DWORD *)this + 14) |= 0x80u;
        if ((unint64_t)v34 >= v16 || *v34 != 72) {
          continue;
        }
        unint64_t v22 = v34 + 1;
        *((void *)a2 + 1) = v22;
LABEL_93:
        unsigned int v38 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v35 = v38;
          unsigned int v36 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v22;
          unsigned int v36 = (unsigned __int8 *)(v22 + 1);
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 12) = v35;
        *((_DWORD *)this + 14) |= 0x100u;
        if (v36 != (unsigned __int8 *)v16 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_53;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_61;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_69;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_77;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v21 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_85;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_93;
      default:
        int v9 = TagFallback & 7;
LABEL_28:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x100) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v7 = *(unsigned int *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::ByteSize(awd::metrics::LocationPhoneNumberAvailability *this)
{
  int v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_62;
    }
    goto LABEL_56;
  }
  if (v2)
  {
    LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 1))
                + 1;
    int v2 = *((_DWORD *)this + 14);
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 14);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  LODWORD(v3) = v3 + v9 + v5 + 1;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v11 = 2;
    }
    LODWORD(v3) = v11 + v3;
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 14);
  }
  else
  {
    int v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x10) != 0)
  {
LABEL_33:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_39:
  if ((v2 & 0x20) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x40) != 0)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
    if ((v2 & 0x80) == 0)
    {
LABEL_44:
      if ((v2 & 0x100) == 0) {
        goto LABEL_62;
      }
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_44;
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 11;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 14);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v3 = (v19 + v3);
  if ((v2 & 0x100) != 0)
  {
LABEL_56:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
  }
LABEL_62:
  *((_DWORD *)this + 13) = v3;
  return v3;
}

void awd::metrics::LocationPhoneNumberAvailability::CheckTypeAndMergeFrom(awd::metrics::LocationPhoneNumberAvailability *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPhoneNumberAvailability::CopyFrom(awd::metrics::LocationPhoneNumberAvailability *this, const awd::metrics::LocationPhoneNumberAvailability *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPhoneNumberAvailability *))(*(void *)this + 32))(this);
    awd::metrics::LocationPhoneNumberAvailability::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::IsInitialized(awd::metrics::LocationPhoneNumberAvailability *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::Swap(uint64_t this, awd::metrics::LocationPhoneNumberAvailability *a2)
{
  if (a2 != (awd::metrics::LocationPhoneNumberAvailability *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 36);
    *(unsigned char *)(this + 36) = *((unsigned char *)a2 + 36);
    *((unsigned char *)a2 + 36) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
  }
  return this;
}

void *awd::metrics::LocationPhoneNumberAvailability::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPhoneNumberAvailability");
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetEvent_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetType_IsValid(awd::metrics *this)
{
  return this < 2;
}

BOOL awd::metrics::LocationMobileAssetStatistics_AssetComponent_IsValid(awd::metrics *this)
{
  return this < 6;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 8) = v1;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::LocationMobileAssetStatistics_CarrierSettingsStatus(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC430;
  *((void *)this + 1) = v3;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, a2);
  return this;
}

void sub_22496A2C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      char v6 = (const std::string *)*((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      uint64_t v7 = (std::string *)*((void *)this + 1);
      if (v7 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 6) = v10;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_18:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 7) = v11;
    if ((*((_DWORD *)a2 + 10) & 0x20) == 0) {
      return;
    }
LABEL_10:
    char v5 = *((unsigned char *)a2 + 32);
    *((_DWORD *)this + 10) |= 0x20u;
    *((unsigned char *)this + 32) = v5;
  }
}

void sub_22496A44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::~LocationMobileAssetStatistics_CarrierSettingsStatus(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  *(void *)this = &unk_26D7BC430;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC430;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC430;
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 8);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::New(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    if (*(unsigned char *)(this + 40))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(unsigned char *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (2)
  {
    char v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 10) |= 1u;
        if (*((void *)this + 1) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v10 < v9 && *v10 == 16)
          {
            int v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_18:
        unsigned int v26 = 0;
        if ((unint64_t)v11 < v9 && (*v11 & 0x80000000) == 0)
        {
          unsigned int v12 = *v11;
          int v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
LABEL_34:
          *((_DWORD *)this + 4) = v12;
          *((_DWORD *)this + 10) |= 2u;
          if ((unint64_t)v13 < v9 && *v13 == 24)
          {
            unint64_t v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
        if (result)
        {
          unsigned int v12 = v26;
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          goto LABEL_34;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_37:
        unsigned int v26 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v18 = v26;
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v14;
          int v19 = v14 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v9 || *v19 != 32) {
          continue;
        }
        int v15 = v19 + 1;
        *((void *)a2 + 1) = v15;
LABEL_45:
        unsigned int v26 = 0;
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26;
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v20 = *v15;
          int v21 = v15 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 6) = v20;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v21 >= v9 || *v21 != 40) {
          continue;
        }
        unint64_t v16 = v21 + 1;
        *((void *)a2 + 1) = v16;
LABEL_53:
        unsigned int v26 = 0;
        if ((unint64_t)v16 >= v9 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v22 = v26;
          unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v16;
          unsigned int v23 = v16 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 7) = v22;
        *((_DWORD *)this + 10) |= 0x10u;
        if ((unint64_t)v23 >= v9 || *v23 != 48) {
          continue;
        }
        int v17 = v23 + 1;
        *((void *)a2 + 1) = v17;
LABEL_61:
        unsigned int v26 = 0;
        if ((unint64_t)v17 >= v9 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v24 = v26;
          int v25 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v17;
          int v25 = (unsigned __int8 *)(v17 + 1);
          *((void *)a2 + 1) = v25;
        }
        *((unsigned char *)this + 32) = v24 != 0;
        *((_DWORD *)this + 10) |= 0x20u;
        if (v25 != (unsigned __int8 *)v9 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_45;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_53;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_61;
      default:
        int v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_46;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 1);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v2 = *((_DWORD *)this + 10);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  unsigned int v3 = v10 + v6;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v13 = 2;
    }
    v3 += v13;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_31:
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v17 = 2;
    }
    v3 += v17;
    if ((v2 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v19 = 2;
    }
    v3 += v19;
  }
LABEL_43:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_46:
  *((_DWORD *)this + 9) = result;
  return result;
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CheckTypeAndMergeFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CopyFrom(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this, const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *))(*(void *)this + 32))(this);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::IsInitialized(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Swap(uint64_t this, awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *a2)
{
  if (a2 != (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 32);
    *(unsigned char *)(this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
  }
  return this;
}

void *awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMobileAssetStatistics.CarrierSettingsStatus");
}

double awd::metrics::LocationMobileAssetStatistics::SharedCtor(awd::metrics::LocationMobileAssetStatistics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

awd::metrics::LocationMobileAssetStatistics *awd::metrics::LocationMobileAssetStatistics::LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  *(void *)this = &unk_26D7BC4A8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 13) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 54) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, a2);
  return this;
}

void sub_22496AF80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics::MergeFrom(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  int v4 = *((_DWORD *)a2 + 27);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v6 = *((void *)a2 + 1);
    *((_DWORD *)this + 27) |= 1u;
    *((void *)this + 1) = v6;
    int v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v7 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 27) |= 2u;
  uint64_t v8 = (std::string *)*((void *)this + 2);
  if (v8 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v8, v7);
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_27:
  unsigned int v9 = *((_DWORD *)a2 + 6);
  if (v9 >= 7) {
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  }
  *((_DWORD *)this + 27) |= 4u;
  *((_DWORD *)this + 6) = v9;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_29:
  unsigned int v10 = *((_DWORD *)a2 + 7);
  if (v10 >= 2) {
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  }
  *((_DWORD *)this + 27) |= 8u;
  *((_DWORD *)this + 7) = v10;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_33:
    int v12 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 27) |= 0x20u;
    *((_DWORD *)this + 9) = v12;
    int v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_31:
  unsigned int v11 = *((_DWORD *)a2 + 8);
  if (v11 >= 6) {
    awd::metrics::LocationMobileAssetStatistics::MergeFrom();
  }
  *((_DWORD *)this + 27) |= 0x10u;
  *((_DWORD *)this + 8) = v11;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_34:
  int v13 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 27) |= 0x40u;
  *((_DWORD *)this + 10) = v13;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 27) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 27);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_48;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 27) |= 0x100u;
    *((_DWORD *)this + 12) = v14;
    int v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_38;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 27) |= 0x200u;
  *((_DWORD *)this + 13) = v15;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v16 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 27) |= 0x400u;
  *((_DWORD *)this + 14) = v16;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v17 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 27) |= 0x800u;
  *((_DWORD *)this + 15) = v17;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v18 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 27) |= 0x1000u;
  *((_DWORD *)this + 16) = v18;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_41:
  char v19 = *((unsigned char *)a2 + 68);
  *((_DWORD *)this + 27) |= 0x2000u;
  *((unsigned char *)this + 68) = v19;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v20 = *((unsigned char *)a2 + 69);
  *((_DWORD *)this + 27) |= 0x4000u;
  *((unsigned char *)this + 69) = v20;
  int v4 = *((_DWORD *)a2 + 27);
  if ((v4 & 0x8000) == 0) {
    goto LABEL_48;
  }
LABEL_43:
  *((_DWORD *)this + 27) |= 0x8000u;
  int v21 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 9);
  if (!v21) {
    operator new();
  }
  unsigned int v22 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)a2 + 9);
  if (!v22) {
    unsigned int v22 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
  }
                                                                                      + 72);
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(v21, v22);
  int v4 = *((_DWORD *)a2 + 27);
LABEL_48:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    *((_DWORD *)this + 27) |= 0x10000u;
    unsigned int v23 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 10);
    if (!v23) {
      operator new();
    }
    unsigned int v24 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)a2 + 10);
    if (!v24) {
      unsigned int v24 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
    }
                                                                                        + 80);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(v23, v24);
    int v4 = *((_DWORD *)a2 + 27);
    if ((v4 & 0x20000) == 0)
    {
LABEL_51:
      if ((v4 & 0x40000) == 0) {
        return;
      }
      goto LABEL_63;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_51;
  }
  *((_DWORD *)this + 27) |= 0x20000u;
  int v25 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 11);
  if (!v25) {
    operator new();
  }
  unsigned int v26 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)a2 + 11);
  if (!v26) {
    unsigned int v26 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
  }
                                                                                      + 88);
  awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(v25, v26);
  if ((*((_DWORD *)a2 + 27) & 0x40000) != 0)
  {
LABEL_63:
    *((_DWORD *)this + 27) |= 0x40000u;
    unsigned int v27 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 12);
    if (!v27) {
      operator new();
    }
    unsigned int v28 = (const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)a2 + 12);
    if (!v28) {
      unsigned int v28 = *(const awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
    }
                                                                                        + 96);
    awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergeFrom(v27, v28);
  }
}

void sub_22496B474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMobileAssetStatistics::~LocationMobileAssetStatistics(awd::metrics::LocationMobileAssetStatistics *this)
{
  *(void *)this = &unk_26D7BC4A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC4A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC4A8;
  awd::metrics::LocationMobileAssetStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationMobileAssetStatistics::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  if ((void *)awd::metrics::LocationMobileAssetStatistics::default_instance_ != v1)
  {
    uint64_t v4 = v1[9];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[10];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[11];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    this = (void *)v1[12];
    if (this)
    {
      char v7 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v7();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::default_instance(awd::metrics::LocationMobileAssetStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMobileAssetStatistics::default_instance_;
  if (!awd::metrics::LocationMobileAssetStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMobileAssetStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMobileAssetStatistics::New(awd::metrics::LocationMobileAssetStatistics *this)
{
}

uint64_t awd::metrics::LocationMobileAssetStatistics::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 108);
  if ((_BYTE)v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
    int v2 = *(_DWORD *)(this + 108);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(void *)(this + 62) = 0;
    if ((v2 & 0x8000) != 0)
    {
      this = *(void *)(this + 72);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        int v2 = *(_DWORD *)(v1 + 108);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        int v2 = *(_DWORD *)(v1 + 108);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
        int v2 = *(_DWORD *)(v1 + 108);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this) {
        this = awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 108) = 0;
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::MergePartialFromCodedStream(awd::metrics::LocationMobileAssetStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v10;
          unsigned int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        int v12 = *((_DWORD *)this + 27) | 1;
        *((_DWORD *)this + 27) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_56;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_48;
        }
        int v12 = *((_DWORD *)this + 27);
LABEL_56:
        *((_DWORD *)this + 27) = v12 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v32 >= v13 || *v32 != 24) {
          continue;
        }
        int v14 = v32 + 1;
        *((void *)a2 + 1) = v14;
LABEL_62:
        unsigned int v87 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v33 = v87;
        }
        else
        {
          unsigned int v33 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v33 <= 6)
        {
          *((_DWORD *)this + 27) |= 4u;
          *((_DWORD *)this + 6) = v33;
        }
        unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v15 || *v34 != 32) {
          continue;
        }
        int v16 = v34 + 1;
        *((void *)a2 + 1) = v16;
LABEL_72:
        unsigned int v87 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v35 = v87;
        }
        else
        {
          unsigned int v35 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v35 <= 1)
        {
          *((_DWORD *)this + 27) |= 8u;
          *((_DWORD *)this + 7) = v35;
        }
        unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v17 || *v36 != 40) {
          continue;
        }
        int v18 = v36 + 1;
        *((void *)a2 + 1) = v18;
LABEL_82:
        unsigned int v87 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v37 = v87;
        }
        else
        {
          unsigned int v37 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v37 <= 5)
        {
          *((_DWORD *)this + 27) |= 0x10u;
          *((_DWORD *)this + 8) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v19 || *v38 != 48) {
          continue;
        }
        char v20 = v38 + 1;
        *((void *)a2 + 1) = v20;
LABEL_92:
        unsigned int v87 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v39 = v87;
          uint64_t v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v39 = *v20;
          uint64_t v40 = v20 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 9) = v39;
        *((_DWORD *)this + 27) |= 0x20u;
        if ((unint64_t)v40 >= v19 || *v40 != 56) {
          continue;
        }
        int v21 = v40 + 1;
        *((void *)a2 + 1) = v21;
LABEL_100:
        unsigned int v87 = 0;
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v41 = v87;
          uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v41 = *v21;
          uint64_t v42 = v21 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 10) = v41;
        *((_DWORD *)this + 27) |= 0x40u;
        if ((unint64_t)v42 >= v19 || *v42 != 64) {
          continue;
        }
        unsigned int v22 = v42 + 1;
        *((void *)a2 + 1) = v22;
LABEL_108:
        unsigned int v87 = 0;
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v43 = v87;
          uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v43 = *v22;
          uint64_t v44 = v22 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 11) = v43;
        *((_DWORD *)this + 27) |= 0x80u;
        if ((unint64_t)v44 >= v19 || *v44 != 72) {
          continue;
        }
        unsigned int v23 = v44 + 1;
        *((void *)a2 + 1) = v23;
LABEL_116:
        unsigned int v87 = 0;
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v45 = v87;
          uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v23;
          uint64_t v46 = v23 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 12) = v45;
        *((_DWORD *)this + 27) |= 0x100u;
        if ((unint64_t)v46 >= v19 || *v46 != 80) {
          continue;
        }
        unsigned int v24 = v46 + 1;
        *((void *)a2 + 1) = v24;
LABEL_124:
        unsigned int v87 = 0;
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v47 = v87;
          uint64_t v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v47 = *v24;
          uint64_t v48 = v24 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 13) = v47;
        *((_DWORD *)this + 27) |= 0x200u;
        if ((unint64_t)v48 >= v19 || *v48 != 88) {
          continue;
        }
        int v25 = v48 + 1;
        *((void *)a2 + 1) = v25;
LABEL_132:
        unsigned int v87 = 0;
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v49 = v87;
          uint64_t v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v25;
          uint64_t v50 = v25 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 14) = v49;
        *((_DWORD *)this + 27) |= 0x400u;
        if ((unint64_t)v50 >= v19 || *v50 != 96) {
          continue;
        }
        unsigned int v26 = v50 + 1;
        *((void *)a2 + 1) = v26;
LABEL_140:
        unsigned int v87 = 0;
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v51 = v87;
          uint64_t v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v51 = *v26;
          uint64_t v52 = v26 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 15) = v51;
        *((_DWORD *)this + 27) |= 0x800u;
        if ((unint64_t)v52 >= v19 || *v52 != 104) {
          continue;
        }
        unsigned int v27 = v52 + 1;
        *((void *)a2 + 1) = v27;
LABEL_148:
        unsigned int v87 = 0;
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v53 = v87;
          uint64_t v54 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v53 = *v27;
          uint64_t v54 = v27 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 16) = v53;
        *((_DWORD *)this + 27) |= 0x1000u;
        if ((unint64_t)v54 >= v19 || *v54 != 112) {
          continue;
        }
        unsigned int v28 = v54 + 1;
        *((void *)a2 + 1) = v28;
LABEL_156:
        unsigned int v87 = 0;
        if ((unint64_t)v28 >= v19 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v55 = v87;
          uint64_t v56 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v55 = *v28;
          uint64_t v56 = v28 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((unsigned char *)this + 68) = v55 != 0;
        *((_DWORD *)this + 27) |= 0x2000u;
        if ((unint64_t)v56 >= v19 || *v56 != 120) {
          continue;
        }
        uint64_t v29 = v56 + 1;
        *((void *)a2 + 1) = v29;
LABEL_164:
        unsigned int v87 = 0;
        if ((unint64_t)v29 >= v19 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87);
          if (!result) {
            return result;
          }
          unsigned int v57 = v87;
          uint64_t v58 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v57 = *v29;
          uint64_t v58 = v29 + 1;
          *((void *)a2 + 1) = v58;
        }
        *((unsigned char *)this + 69) = v57 != 0;
        int v30 = *((_DWORD *)this + 27) | 0x4000;
        *((_DWORD *)this + 27) = v30;
        if ((int)v19 - (int)v58 < 2 || *v58 != 130 || v58[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v58 + 2;
LABEL_173:
        *((_DWORD *)this + 27) = v30 | 0x8000;
        uint64_t v59 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 9);
        if (!v59) {
          operator new();
        }
        unsigned int v87 = 0;
        uint64_t v60 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v60 >= *((void *)a2 + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87))return 0; {
        }
          }
        else
        {
          unsigned int v87 = *v60;
          *((void *)a2 + 1) = v60 + 1;
        }
        int v61 = *((_DWORD *)a2 + 14);
        int v62 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(v59, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v63 = *((_DWORD *)a2 + 14);
        BOOL v64 = __OFSUB__(v63, 1);
        int v65 = v63 - 1;
        if (v65 < 0 == v64) {
          *((_DWORD *)a2 + 14) = v65;
        }
        int v66 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v66 <= 1 || *v66 != 138 || v66[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v66 + 2;
LABEL_188:
        *((_DWORD *)this + 27) |= 0x10000u;
        int v67 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 10);
        if (!v67) {
          operator new();
        }
        unsigned int v87 = 0;
        int v68 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87))return 0; {
        }
          }
        else
        {
          unsigned int v87 = *v68;
          *((void *)a2 + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)a2 + 14);
        int v70 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(v67, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v71 = *((_DWORD *)a2 + 14);
        BOOL v64 = __OFSUB__(v71, 1);
        int v72 = v71 - 1;
        if (v72 < 0 == v64) {
          *((_DWORD *)a2 + 14) = v72;
        }
        v73 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v73 <= 1 || *v73 != 146 || v73[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v73 + 2;
LABEL_203:
        *((_DWORD *)this + 27) |= 0x20000u;
        int v74 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 11);
        if (!v74) {
          operator new();
        }
        unsigned int v87 = 0;
        int v75 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v75 >= *((void *)a2 + 2) || *v75 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87))return 0; {
        }
          }
        else
        {
          unsigned int v87 = *v75;
          *((void *)a2 + 1) = v75 + 1;
        }
        int v76 = *((_DWORD *)a2 + 14);
        int v77 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v76 + 1;
        if (v76 >= v77) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(v74, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v78 = *((_DWORD *)a2 + 14);
        BOOL v64 = __OFSUB__(v78, 1);
        int v79 = v78 - 1;
        if (v79 < 0 == v64) {
          *((_DWORD *)a2 + 14) = v79;
        }
        v80 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v80 <= 1 || *v80 != 154 || v80[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v80 + 2;
LABEL_218:
        *((_DWORD *)this + 27) |= 0x40000u;
        int v81 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 12);
        if (!v81) {
          operator new();
        }
        unsigned int v87 = 0;
        v82 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v82 >= *((void *)a2 + 2) || *v82 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v87))return 0; {
        }
          }
        else
        {
          unsigned int v87 = *v82;
          *((void *)a2 + 1) = v82 + 1;
        }
        int v83 = *((_DWORD *)a2 + 14);
        int v84 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v83 + 1;
        if (v83 < v84)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::MergePartialFromCodedStream(v81, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v85 = *((_DWORD *)a2 + 14);
              BOOL v64 = __OFSUB__(v85, 1);
              int v86 = v85 - 1;
              if (v86 < 0 == v64) {
                *((_DWORD *)a2 + 14) = v86;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_62;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_72;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_82;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        char v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_92;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_100;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_108;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_116;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_124;
      case 0xBu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_132;
      case 0xCu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v26 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_140;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v27 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_148;
      case 0xEu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v28 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_156;
      case 0xFu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v29 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_164;
      case 0x10u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_48;
        }
        int v30 = *((_DWORD *)this + 27);
        goto LABEL_173;
      case 0x11u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_188;
        }
        goto LABEL_48;
      case 0x12u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_203;
        }
        goto LABEL_48;
      case 0x13u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_48;
        }
        goto LABEL_218;
      default:
        int v8 = TagFallback & 7;
LABEL_48:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 108);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 69), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v7 = *(void *)(v5 + 72);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_39:
  uint64_t v8 = *(void *)(v5 + 80);
  if (!v8) {
    uint64_t v8 = *(void *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      return this;
    }
    goto LABEL_45;
  }
LABEL_42:
  uint64_t v9 = *(void *)(v5 + 88);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 0x40000) != 0)
  {
LABEL_45:
    uint64_t v10 = *(void *)(v5 + 96);
    if (!v10) {
      uint64_t v10 = *(void *)(awd::metrics::LocationMobileAssetStatistics::default_instance_ + 96);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v10, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::ByteSize(awd::metrics::LocationMobileAssetStatistics *this)
{
  int v2 = *((_DWORD *)this + 27);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_59;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 27);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 27);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      int v2 = *((_DWORD *)this + 27);
    }
    else
    {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v11 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_35:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_41:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_53;
  }
LABEL_47:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v18 & 0x80000000) != 0)
  {
    int v19 = 10;
  }
  else if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v19 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    char v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      int v2 = *((_DWORD *)this + 27);
    }
    else
    {
      int v21 = 1;
    }
    uint64_t v3 = (v3 + v21 + 1);
  }
LABEL_59:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_108;
  }
  if ((v2 & 0x100) != 0)
  {
    unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      int v2 = *((_DWORD *)this + 27);
    }
    else
    {
      int v23 = 1;
    }
    LODWORD(v3) = v3 + v23 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_62:
      if ((v2 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v25 = 1;
  }
  LODWORD(v3) = v3 + v25 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_63:
    if ((v2 & 0x800) == 0) {
      goto LABEL_64;
    }
LABEL_84:
    unsigned int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if ((v28 & 0x80000000) != 0)
    {
      int v29 = 10;
    }
    else if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
      int v2 = *((_DWORD *)this + 27);
    }
    else
    {
      int v29 = 1;
    }
    LODWORD(v3) = v3 + v29 + 1;
    if ((v2 & 0x1000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_90;
  }
LABEL_78:
  unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    int v2 = *((_DWORD *)this + 27);
  }
  else
  {
    int v27 = 1;
  }
  LODWORD(v3) = v3 + v27 + 1;
  if ((v2 & 0x800) != 0) {
    goto LABEL_84;
  }
LABEL_64:
  if ((v2 & 0x1000) != 0)
  {
LABEL_90:
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v30 & 0x80000000) != 0)
    {
      int v31 = 11;
    }
    else if (v30 >= 0x80)
    {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
      int v2 = *((_DWORD *)this + 27);
    }
    else
    {
      int v31 = 2;
    }
    LODWORD(v3) = v31 + v3;
  }
LABEL_96:
  unsigned int v32 = v3 + 2;
  if ((v2 & 0x2000) == 0) {
    unsigned int v32 = v3;
  }
  if ((v2 & 0x4000) != 0) {
    uint64_t v3 = v32 + 2;
  }
  else {
    uint64_t v3 = v32;
  }
  if ((v2 & 0x8000) != 0)
  {
    unsigned int v33 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 9);
    if (!v33) {
      unsigned int v33 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
    }
                                                                                  + 72);
    unsigned int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v33);
    int v35 = (int)v34;
    if (v34 >= 0x80) {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
    }
    else {
      int v36 = 1;
    }
    uint64_t v3 = (v3 + v35 + v36 + 2);
    int v2 = *((_DWORD *)this + 27);
  }
LABEL_108:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_131;
  }
  if ((v2 & 0x10000) != 0)
  {
    unsigned int v37 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 10);
    if (!v37) {
      unsigned int v37 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
    }
                                                                                  + 80);
    unsigned int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v37);
    int v39 = (int)v38;
    if (v38 >= 0x80) {
      int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    }
    else {
      int v40 = 1;
    }
    uint64_t v3 = (v3 + v39 + v40 + 2);
    int v2 = *((_DWORD *)this + 27);
    if ((v2 & 0x20000) == 0)
    {
LABEL_111:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_131;
      }
      goto LABEL_125;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_111;
  }
  unsigned int v41 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 11);
  if (!v41) {
    unsigned int v41 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
  }
                                                                                + 88);
  uint64_t v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v41);
  int v43 = (int)v42;
  if (v42 >= 0x80) {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
  }
  else {
    int v44 = 1;
  }
  uint64_t v3 = (v3 + v43 + v44 + 2);
  if ((*((_DWORD *)this + 27) & 0x40000) != 0)
  {
LABEL_125:
    unsigned int v45 = (awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *)*((void *)this + 12);
    if (!v45) {
      unsigned int v45 = *(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus **)(awd::metrics::LocationMobileAssetStatistics::default_instance_
    }
                                                                                  + 96);
    uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::ByteSize(v45);
    int v47 = (int)v46;
    if (v46 >= 0x80) {
      int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    }
    else {
      int v48 = 1;
    }
    uint64_t v3 = (v3 + v47 + v48 + 2);
  }
LABEL_131:
  *((_DWORD *)this + 26) = v3;
  return v3;
}

void awd::metrics::LocationMobileAssetStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMobileAssetStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMobileAssetStatistics::CopyFrom(awd::metrics::LocationMobileAssetStatistics *this, const awd::metrics::LocationMobileAssetStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMobileAssetStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMobileAssetStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMobileAssetStatistics::IsInitialized(awd::metrics::LocationMobileAssetStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMobileAssetStatistics::Swap(uint64_t this, awd::metrics::LocationMobileAssetStatistics *a2)
{
  if (a2 != (awd::metrics::LocationMobileAssetStatistics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    uint64_t v3 = *(void *)(this + 16);
    uint64_t v4 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 68);
    *(unsigned char *)(this + 68) = *((unsigned char *)a2 + 68);
    *((unsigned char *)a2 + 68) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 69);
    *(unsigned char *)(this + 69) = *((unsigned char *)a2 + 69);
    *((unsigned char *)a2 + 69) = v2;
    uint64_t v5 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v5;
    uint64_t v6 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v6;
    uint64_t v7 = *(void *)(this + 88);
    *(void *)(this + 88) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v7;
    uint64_t v8 = *(void *)(this + 96);
    *(void *)(this + 96) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 108);
    *(_DWORD *)(this + 108) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 104);
    *(_DWORD *)(this + 104) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v8;
  }
  return this;
}

void *awd::metrics::LocationMobileAssetStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMobileAssetStatistics");
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_POISource_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_POIType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_LOIQueryResult_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_SubmissionType_IsValid(awd::metrics *this)
{
  return this < 3;
}

BOOL awd::metrics::LocationEmergencyPOIStatistics_DSAResult_IsValid(awd::metrics *this)
{
  return this < 9;
}

double awd::metrics::LocationEmergencyPOIStatistics::SharedCtor(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((_DWORD *)this + 28) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

awd::metrics::LocationEmergencyPOIStatistics *awd::metrics::LocationEmergencyPOIStatistics::LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  *(void *)this = &unk_26D7BC520;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((_DWORD *)this + 28) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, a2);
  return this;
}

void sub_22496D010(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *((_DWORD *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 28) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = (const std::string *)*((void *)a2 + 2);
    *((_DWORD *)this + 28) |= 2u;
    uint64_t v7 = (std::string *)*((void *)this + 2);
    if (v7 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 28) |= 4u;
    *((_DWORD *)this + 6) = v8;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_18:
    unsigned int v9 = *((_DWORD *)a2 + 7);
    if (v9 >= 7) {
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    }
    *((_DWORD *)this + 28) |= 8u;
    *((_DWORD *)this + 7) = v9;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_20:
    unsigned int v10 = *((_DWORD *)a2 + 10);
    if (v10 >= 5) {
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    }
    *((_DWORD *)this + 28) |= 0x10u;
    *((_DWORD *)this + 10) = v10;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t v11 = *((void *)a2 + 4);
    *((_DWORD *)this + 28) |= 0x20u;
    *((void *)this + 4) = v11;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_26;
      }
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v12 = *((void *)a2 + 6);
    *((_DWORD *)this + 28) |= 0x40u;
    *((void *)this + 6) = v12;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x80) == 0) {
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v13 = *((_DWORD *)a2 + 11);
    if (v13 >= 4) {
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    }
    *((_DWORD *)this + 28) |= 0x80u;
    *((_DWORD *)this + 11) = v13;
    int v4 = *((_DWORD *)a2 + 28);
  }
LABEL_26:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_40;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v14 = *((_DWORD *)a2 + 14);
    if (v14 >= 3) {
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    }
    *((_DWORD *)this + 28) |= 0x100u;
    *((_DWORD *)this + 14) = v14;
    int v4 = *((_DWORD *)a2 + 28);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v15 = *((_DWORD *)a2 + 15);
    if (v15 >= 9) {
      awd::metrics::LocationEmergencyPOIStatistics::MergeFrom();
    }
    *((_DWORD *)this + 28) |= 0x200u;
    *((_DWORD *)this + 15) = v15;
    int v4 = *((_DWORD *)a2 + 28);
  }
  if ((v4 & 0x400) != 0)
  {
    int v19 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 28) |= 0x400u;
    *((_DWORD *)this + 16) = v19;
    int v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x800) == 0)
    {
LABEL_35:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_48;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_35;
  }
  int v20 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 28) |= 0x800u;
  *((_DWORD *)this + 17) = v20;
  int v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x1000) == 0)
  {
LABEL_36:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v21 = *((void *)a2 + 9);
  *((_DWORD *)this + 28) |= 0x1000u;
  *((void *)this + 9) = v21;
  int v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x2000) == 0)
  {
LABEL_37:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v22 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 28) |= 0x2000u;
  *((_DWORD *)this + 20) = v22;
  int v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x4000) == 0)
  {
LABEL_38:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_50:
  int v23 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 28) |= 0x4000u;
  *((_DWORD *)this + 21) = v23;
  int v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x8000) != 0)
  {
LABEL_39:
    uint64_t v16 = *((void *)a2 + 11);
    *((_DWORD *)this + 28) |= 0x8000u;
    *((void *)this + 11) = v16;
    int v4 = *((_DWORD *)a2 + 28);
  }
LABEL_40:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      uint64_t v17 = *((void *)a2 + 12);
      *((_DWORD *)this + 28) |= 0x10000u;
      *((void *)this + 12) = v17;
      int v4 = *((_DWORD *)a2 + 28);
    }
    if ((v4 & 0x20000) != 0)
    {
      int v18 = *((_DWORD *)a2 + 26);
      *((_DWORD *)this + 28) |= 0x20000u;
      *((_DWORD *)this + 26) = v18;
    }
  }
}

void sub_22496D35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationEmergencyPOIStatistics::~LocationEmergencyPOIStatistics(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  *(void *)this = &unk_26D7BC520;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC520;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC520;
  awd::metrics::LocationEmergencyPOIStatistics::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 108) = a2;
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::default_instance(awd::metrics::LocationEmergencyPOIStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationEmergencyPOIStatistics::default_instance_;
  if (!awd::metrics::LocationEmergencyPOIStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationEmergencyPOIStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationEmergencyPOIStatistics::New(awd::metrics::LocationEmergencyPOIStatistics *this)
{
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 112);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    int v1 = *(_DWORD *)(this + 112);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 88) = 0;
    *(_OWORD *)(this + 72) = 0u;
    *(_OWORD *)(this + 56) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(this + 96) = 0;
    *(_DWORD *)(this + 104) = 0;
  }
  *(_DWORD *)(this + 112) = 0;
  return this;
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::MergePartialFromCodedStream(awd::metrics::LocationEmergencyPOIStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unsigned int *)((char *)this + 104);
  uint64_t v6 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v11;
          uint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        int v13 = *((_DWORD *)this + 28) | 1;
        *((_DWORD *)this + 28) = v13;
        if ((unint64_t)v12 < v10 && *v12 == 18)
        {
          *((void *)a2 + 1) = v12 + 1;
          goto LABEL_55;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_46;
        }
        int v13 = *((_DWORD *)this + 28);
LABEL_55:
        *((_DWORD *)this + 28) = v13 | 2;
        if (*((void *)this + 2) == v6) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v14 || *v34 != 24) {
          continue;
        }
        unsigned int v15 = v34 + 1;
        *((void *)a2 + 1) = v15;
LABEL_61:
        v61[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v35 = v61[0];
          int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v15;
          int v36 = v15 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 6) = v35;
        *((_DWORD *)this + 28) |= 4u;
        if ((unint64_t)v36 >= v14 || *v36 != 32) {
          continue;
        }
        uint64_t v16 = v36 + 1;
        *((void *)a2 + 1) = v16;
LABEL_69:
        v61[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v37 = v61[0];
        }
        else
        {
          unsigned int v37 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v37 <= 6)
        {
          *((_DWORD *)this + 28) |= 8u;
          *((_DWORD *)this + 7) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v17 || *v38 != 40) {
          continue;
        }
        int v18 = v38 + 1;
        *((void *)a2 + 1) = v18;
LABEL_79:
        v61[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v39 = v61[0];
        }
        else
        {
          unsigned int v39 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v39 <= 4)
        {
          *((_DWORD *)this + 28) |= 0x10u;
          *((_DWORD *)this + 10) = v39;
        }
        int v40 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_89:
        *(void *)int v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v61) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v61;
        }
        *((_DWORD *)this + 28) |= 0x20u;
        unsigned int v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_93:
        *(void *)int v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v61) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v61;
        }
        *((_DWORD *)this + 28) |= 0x40u;
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v42 >= v19 || *v42 != 64) {
          continue;
        }
        int v20 = v42 + 1;
        *((void *)a2 + 1) = v20;
LABEL_97:
        v61[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v43 = v61[0];
        }
        else
        {
          unsigned int v43 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v43 <= 3)
        {
          *((_DWORD *)this + 28) |= 0x80u;
          *((_DWORD *)this + 11) = v43;
        }
        int v44 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v44 >= v21 || *v44 != 72) {
          continue;
        }
        int v22 = v44 + 1;
        *((void *)a2 + 1) = v22;
LABEL_107:
        v61[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v45 = v61[0];
        }
        else
        {
          unsigned int v45 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        if (v45 <= 2)
        {
          *((_DWORD *)this + 28) |= 0x100u;
          *((_DWORD *)this + 14) = v45;
        }
        uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v46 >= v23 || *v46 != 80) {
          continue;
        }
        unsigned int v24 = v46 + 1;
        *((void *)a2 + 1) = v24;
LABEL_117:
        v61[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v47 = v61[0];
        }
        else
        {
          unsigned int v47 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        if (v47 <= 8)
        {
          *((_DWORD *)this + 28) |= 0x200u;
          *((_DWORD *)this + 15) = v47;
        }
        int v48 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        if ((unint64_t)v48 >= v25 || *v48 != 88) {
          continue;
        }
        unsigned int v26 = v48 + 1;
        *((void *)a2 + 1) = v26;
LABEL_127:
        v61[0] = 0;
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v49 = v61[0];
          uint64_t v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v26;
          uint64_t v50 = v26 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 16) = v49;
        *((_DWORD *)this + 28) |= 0x400u;
        if ((unint64_t)v50 >= v25 || *v50 != 96) {
          continue;
        }
        int v27 = v50 + 1;
        *((void *)a2 + 1) = v27;
LABEL_135:
        v61[0] = 0;
        if ((unint64_t)v27 >= v25 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v51 = v61[0];
          uint64_t v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v51 = *v27;
          uint64_t v52 = v27 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 17) = v51;
        *((_DWORD *)this + 28) |= 0x800u;
        if ((unint64_t)v52 >= v25 || *v52 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_143:
        *(void *)int v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v61) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v61;
        }
        *((_DWORD *)this + 28) |= 0x1000u;
        unsigned int v53 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        if ((unint64_t)v53 >= v28 || *v53 != 112) {
          continue;
        }
        int v29 = v53 + 1;
        *((void *)a2 + 1) = v29;
LABEL_147:
        v61[0] = 0;
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v54 = v61[0];
          unsigned int v55 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v28 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v54 = *v29;
          unsigned int v55 = v29 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 20) = v54;
        *((_DWORD *)this + 28) |= 0x2000u;
        if ((unint64_t)v55 >= v28 || *v55 != 120) {
          continue;
        }
        int v30 = v55 + 1;
        *((void *)a2 + 1) = v30;
LABEL_155:
        v61[0] = 0;
        if ((unint64_t)v30 >= v28 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          unsigned int v56 = v61[0];
          unsigned int v57 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v28 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v56 = *v30;
          unsigned int v57 = v30 + 1;
          *((void *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 21) = v56;
        *((_DWORD *)this + 28) |= 0x4000u;
        if ((int)v28 - (int)v57 < 2 || *v57 != 129 || v57[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v57 + 2;
LABEL_164:
        *(void *)int v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v61) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v61;
        }
        *((_DWORD *)this + 28) |= 0x8000u;
        uint64_t v58 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v58 < 2 || *v58 != 137 || v58[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v58 + 2;
LABEL_169:
        *(void *)int v61 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v61))
        {
          *((void *)this + 12) = *(void *)v61;
          *((_DWORD *)this + 28) |= 0x10000u;
          uint64_t v59 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v31 = *((void *)a2 + 2);
          if ((int)v31 - (int)v59 >= 2 && *v59 == 144 && v59[1] == 1)
          {
            unsigned int v32 = (char *)(v59 + 2);
            *((void *)a2 + 1) = v32;
LABEL_174:
            if ((unint64_t)v32 >= v31 || *v32 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
              if (!result) {
                return result;
              }
              uint64_t v60 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v31 = *((void *)a2 + 2);
            }
            else
            {
              *uint64_t v5 = *v32;
              uint64_t v60 = (unsigned __int8 *)(v32 + 1);
              *((void *)a2 + 1) = v60;
            }
            *((_DWORD *)this + 28) |= 0x20000u;
            if (v60 == (unsigned __int8 *)v31 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_61;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_69;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_79;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_89;
        }
        goto LABEL_46;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_93;
        }
        goto LABEL_46;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_97;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_117;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v26 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_127;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_135;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_143;
        }
        goto LABEL_46;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        goto LABEL_147;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        goto LABEL_155;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_164;
        }
        goto LABEL_46;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_169;
        }
        goto LABEL_46;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v32 = (char *)*((void *)a2 + 1);
        unint64_t v31 = *((void *)a2 + 2);
        goto LABEL_174;
      default:
        int v9 = TagFallback & 7;
LABEL_46:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 112);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 96), a3);
    if ((*(_DWORD *)(v5 + 112) & 0x20000) == 0) {
      return this;
    }
    goto LABEL_37;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10000) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v6 & 0x20000) == 0) {
    return this;
  }
LABEL_37:
  uint64_t v7 = *(unsigned int *)(v5 + 104);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::ByteSize(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  int v2 = *((_DWORD *)this + 28);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_50;
  }
  if (v2)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v2 = *((_DWORD *)this + 28);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_26:
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 10;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v14 = 1;
    }
    v3 += v14 + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 10;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    int v2 = *((_DWORD *)this + 28);
  }
  else
  {
    int v12 = 1;
  }
  v3 += v12 + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
LABEL_32:
    unsigned int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 10;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v16 = 1;
    }
    v3 += v16 + 1;
  }
LABEL_38:
  unsigned int v17 = v3 + 9;
  if ((v2 & 0x20) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t v4 = v17 + 9;
  }
  else {
    uint64_t v4 = v17;
  }
  if ((v2 & 0x80) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v4 = (v4 + v19 + 1);
  }
LABEL_50:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_99;
  }
  if ((v2 & 0x100) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v21 = 1;
    }
    LODWORD(v4) = v4 + v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_53:
      if ((v2 & 0x400) == 0) {
        goto LABEL_54;
      }
LABEL_68:
      unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 11;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
        int v2 = *((_DWORD *)this + 28);
      }
      else
      {
        int v25 = 2;
      }
      LODWORD(v4) = v25 + v4;
      if ((v2 & 0x800) == 0) {
        goto LABEL_80;
      }
      goto LABEL_74;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if ((v22 & 0x80000000) != 0)
  {
    int v23 = 11;
  }
  else if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 28);
  }
  else
  {
    int v23 = 2;
  }
  LODWORD(v4) = v23 + v4;
  if ((v2 & 0x400) != 0) {
    goto LABEL_68;
  }
LABEL_54:
  if ((v2 & 0x800) != 0)
  {
LABEL_74:
    unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v26 & 0x80000000) != 0)
    {
      int v27 = 11;
    }
    else if (v26 >= 0x80)
    {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v27 = 2;
    }
    LODWORD(v4) = v27 + v4;
  }
LABEL_80:
  if ((v2 & 0x1000) != 0) {
    LODWORD(v4) = v4 + 9;
  }
  if ((v2 & 0x2000) != 0)
  {
    unint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v28 & 0x80000000) != 0)
    {
      int v29 = 11;
    }
    else if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v29 = 2;
    }
    LODWORD(v4) = v29 + v4;
  }
  if ((v2 & 0x4000) != 0)
  {
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
    if ((v30 & 0x80000000) != 0)
    {
      int v31 = 11;
    }
    else if (v30 >= 0x80)
    {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
      int v2 = *((_DWORD *)this + 28);
    }
    else
    {
      int v31 = 2;
    }
    LODWORD(v4) = v31 + v4;
  }
  if ((v2 & 0x8000) != 0) {
    uint64_t v4 = (v4 + 10);
  }
  else {
    uint64_t v4 = v4;
  }
LABEL_99:
  if ((v2 & 0xFF0000) != 0)
  {
    uint64_t v4 = (v2 & 0x10000) != 0 ? (v4 + 10) : v4;
    if ((v2 & 0x20000) != 0)
    {
      unsigned int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
      if (v32 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 2;
      }
      else {
        int v33 = 3;
      }
      uint64_t v4 = (v33 + v4);
    }
  }
  *((_DWORD *)this + 27) = v4;
  return v4;
}

void awd::metrics::LocationEmergencyPOIStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationEmergencyPOIStatistics::CopyFrom(awd::metrics::LocationEmergencyPOIStatistics *this, const awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationEmergencyPOIStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationEmergencyPOIStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::IsInitialized(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  return 1;
}

double awd::metrics::LocationEmergencyPOIStatistics::Swap(awd::metrics::LocationEmergencyPOIStatistics *this, awd::metrics::LocationEmergencyPOIStatistics *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
    uint64_t v7 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v7;
    LODWORD(v2) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    LODWORD(v2) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v2;
    uint64_t v8 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v8;
    double result = *((double *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((double *)a2 + 12) = result;
    LODWORD(v2) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v2;
    LODWORD(v2) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v2;
    LODWORD(v2) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v2;
  }
  return result;
}

void *awd::metrics::LocationEmergencyPOIStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationEmergencyPOIStatistics");
}

BOOL awd::metrics::LocationAccessory_BatteryChargingType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationAccessory_PerfRangeType_IsValid(awd::metrics *this)
{
  return this < 0xD;
}

BOOL awd::metrics::LocationAccessory_SpeedPerfRangeType_IsValid(awd::metrics *this)
{
  return this < 0xF;
}

BOOL awd::metrics::LocationAccessory_LatencyRangeType_IsValid(awd::metrics *this)
{
  return this < 6;
}

BOOL awd::metrics::LocationAccessory_NMEAscreeningLocType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::LocationAccessory_NavDynamicsType_IsValid(awd::metrics *this)
{
  return this < 7;
}

BOOL awd::metrics::LocationAccessory_PASCDTransmissionStateType_IsValid(awd::metrics *this)
{
  return this < 5;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_ChargingTypeHistogram *awd::metrics::LocationAccessory_ChargingTypeHistogram::LocationAccessory_ChargingTypeHistogram(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BC598;
  awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_22496E820(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5) {
        awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_22496E8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::~LocationAccessory_ChargingTypeHistogram(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  *(void *)this = &unk_26D7BC598;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC598;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC598;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_ChargingTypeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::New(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        unint64_t v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::ByteSize(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CopyFrom(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, const awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_ChargingTypeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::IsInitialized(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_ChargingTypeHistogram *awd::metrics::LocationAccessory_ChargingTypeHistogram::Swap(awd::metrics::LocationAccessory_ChargingTypeHistogram *this, awd::metrics::LocationAccessory_ChargingTypeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_ChargingTypeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.ChargingTypeHistogram");
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

awd::metrics::LocationAccessory_DeviceChargingStats *awd::metrics::LocationAccessory_DeviceChargingStats::LocationAccessory_DeviceChargingStats(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7BC610;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, a2);
  return this;
}

void sub_22496EEF0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationAccessory_ChargingTypeHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  if (*((unsigned char *)a2 + 40))
  {
    int v9 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 8) = v9;
  }
}

void sub_22496F088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::~LocationAccessory_DeviceChargingStats(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  *(void *)this = &unk_26D7BC610;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_DeviceChargingStats::~LocationAccessory_DeviceChargingStats(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::default_instance(awd::metrics::LocationAccessory_DeviceChargingStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  if (!awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_DeviceChargingStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_DeviceChargingStats::New(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::Clear(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  if (*((unsigned char *)this + 40)) {
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>((uint64_t)this + 8);
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_DeviceChargingStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 32);
  int v5 = (awd::metrics::LocationAccessory_DeviceChargingStats *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v9;
          unsigned int v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v10 && *v11 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v13 = *((_DWORD *)this + 5);
        uint64_t v14 = *((int *)this + 4);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            int v13 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v13 + 1;
          operator new();
        }
        uint64_t v15 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v14 + 1;
        int v16 = *(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(v15 + 8 * v14);
        unsigned int v24 = 0;
        unsigned int v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_ChargingTypeHistogram::MergePartialFromCodedStream(v16, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
        int v23 = (unsigned char *)*((void *)a2 + 2);
        if (v11 >= v23 || *v11 != 18) {
          break;
        }
LABEL_23:
        *((void *)a2 + 1) = v11 + 1;
      }
      if (v11 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 40)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::ByteSize(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  if (*((unsigned char *)this + 40))
  {
    int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v3 >= 0x80) {
      int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 4);
  uint64_t v5 = (v4 + v2);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_ChargingTypeHistogram::ByteSize(*(awd::metrics::LocationAccessory_ChargingTypeHistogram **)(*((void *)this + 1) + 8 * v6));
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 9) = v5;
  return v5;
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CopyFrom(awd::metrics::LocationAccessory_DeviceChargingStats *this, const awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_DeviceChargingStats *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::IsInitialized(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_DeviceChargingStats *awd::metrics::LocationAccessory_DeviceChargingStats::Swap(awd::metrics::LocationAccessory_DeviceChargingStats *this, awd::metrics::LocationAccessory_DeviceChargingStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationAccessory_DeviceChargingStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    int v6 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v6;
  }
  return this;
}

void *awd::metrics::LocationAccessory_DeviceChargingStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.DeviceChargingStats");
}

double awd::metrics::LocationAccessory_Statistics::SharedCtor(awd::metrics::LocationAccessory_Statistics *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationAccessory_Statistics *awd::metrics::LocationAccessory_Statistics::LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  *(void *)this = &unk_26D7BC688;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::LocationAccessory_Statistics::MergeFrom(this, a2);
  return this;
}

void sub_22496F7E0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::LocationAccessory_Statistics::MergeFrom(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      float result = *((float *)a2 + 2);
      *((_DWORD *)this + 9) |= 1u;
      *((float *)this + 2) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *((float *)a2 + 3);
    *((_DWORD *)this + 9) |= 2u;
    *((float *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    float result = *((float *)a2 + 4);
    *((_DWORD *)this + 9) |= 4u;
    *((float *)this + 4) = result;
    int v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    float result = *((float *)a2 + 5);
    *((_DWORD *)this + 9) |= 8u;
    *((float *)this + 5) = result;
    int v5 = *((_DWORD *)a2 + 9);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_16:
    float result = *((float *)a2 + 6);
    *((_DWORD *)this + 9) |= 0x10u;
    *((float *)this + 6) = result;
    if ((*((_DWORD *)a2 + 9) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    int v6 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 9) |= 0x20u;
    *((_DWORD *)this + 7) = v6;
  }
  return result;
}

void sub_22496F928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_Statistics::~LocationAccessory_Statistics(awd::metrics::LocationAccessory_Statistics *this)
{
  *(void *)this = &unk_26D7BC688;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC688;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC688;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_Statistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Statistics::default_instance(awd::metrics::LocationAccessory_Statistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_Statistics::default_instance_;
  if (!awd::metrics::LocationAccessory_Statistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_Statistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_Statistics::New(awd::metrics::LocationAccessory_Statistics *this)
{
}

uint64_t awd::metrics::LocationAccessory_Statistics::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(awd::metrics::LocationAccessory_Statistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_35;
        }
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 2) = v17;
        *((_DWORD *)this + 9) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_35;
        }
LABEL_15:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 3) = v17;
        *((_DWORD *)this + 9) |= 2u;
        int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_20:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v17;
        *((_DWORD *)this + 9) |= 4u;
        unint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_25:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v17;
        *((_DWORD *)this + 9) |= 8u;
        unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_30:
        unsigned int v17 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17))
        {
          *((_DWORD *)this + 6) = v17;
          *((_DWORD *)this + 9) |= 0x10u;
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
          if ((unint64_t)v13 < v12 && *v13 == 48)
          {
            uint64_t v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
LABEL_39:
            if ((unint64_t)v14 >= v12 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
              if (!result) {
                return result;
              }
              uint64_t v15 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v12 = *((void *)a2 + 2);
            }
            else
            {
              *int v4 = *v14;
              uint64_t v15 = (unsigned __int8 *)(v14 + 1);
              *((void *)a2 + 1) = v15;
            }
            *((_DWORD *)this + 9) |= 0x20u;
            if (v15 == (unsigned __int8 *)v12 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_20;
        }
        goto LABEL_35;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_25;
        }
        goto LABEL_35;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_30;
        }
        goto LABEL_35;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_35:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationAccessory_Statistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 36) & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = *(unsigned int *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationAccessory_Statistics::ByteSize(awd::metrics::LocationAccessory_Statistics *this)
{
  int v2 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 5;
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t v4 = v3 + 5;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if (v5 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

float awd::metrics::LocationAccessory_Statistics::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_Statistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::LocationAccessory_Statistics::MergeFrom(this, lpsrc);
}

float awd::metrics::LocationAccessory_Statistics::CopyFrom(awd::metrics::LocationAccessory_Statistics *this, const awd::metrics::LocationAccessory_Statistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_Statistics *))(*(void *)this + 32))(this);
    return awd::metrics::LocationAccessory_Statistics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_Statistics::IsInitialized(awd::metrics::LocationAccessory_Statistics *this)
{
  return 1;
}

float awd::metrics::LocationAccessory_Statistics::Swap(awd::metrics::LocationAccessory_Statistics *this, awd::metrics::LocationAccessory_Statistics *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    float result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v8;
    int v9 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v9;
  }
  return result;
}

void *awd::metrics::LocationAccessory_Statistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.Statistics");
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PerfRangeHistogram *awd::metrics::LocationAccessory_PerfRangeHistogram::LocationAccessory_PerfRangeHistogram(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BC700;
  awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224970128(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xD) {
        awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_2249701F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::~LocationAccessory_PerfRangeHistogram(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  *(void *)this = &unk_26D7BC700;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC700;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC700;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance(awd::metrics::LocationAccessory_PerfRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PerfRangeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::New(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PerfRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xC)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      unint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_PerfRangeHistogram *this, const awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PerfRangeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PerfRangeHistogram *awd::metrics::LocationAccessory_PerfRangeHistogram::Swap(awd::metrics::LocationAccessory_PerfRangeHistogram *this, awd::metrics::LocationAccessory_PerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PerfRangeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PerfRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 80) = 0;
  *(void *)(this + 88) = 0;
  *(_DWORD *)(this + 96) = 0;
  return this;
}

awd::metrics::LocationAccessory_PerformanceStats *awd::metrics::LocationAccessory_PerformanceStats::LocationAccessory_PerformanceStats(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  *(void *)this = &unk_26D7BC778;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, a2);
  return this;
}

void sub_224970828(_Unwind_Exception *a1)
{
  int v5 = v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unint64_t v10 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32));
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unsigned int v15 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)a2 + 7) + 8 * v14);
      int v16 = *((_DWORD *)this + 17);
      uint64_t v17 = *((int *)this + 16);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56));
          int v16 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v17 + 1;
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 16));
  }
  int v19 = *((_DWORD *)a2 + 24);
  if ((v19 & 0x7F8) != 0)
  {
    if ((v19 & 8) != 0)
    {
      *((_DWORD *)this + 24) |= 8u;
      int v20 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 10);
      if (!v20) {
        operator new();
      }
      BOOL v21 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 10);
      if (!v21) {
        BOOL v21 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_
      }
                                                                   + 80);
      awd::metrics::LocationAccessory_Statistics::MergeFrom(v20, v21);
      int v19 = *((_DWORD *)a2 + 24);
    }
    if ((v19 & 0x10) != 0)
    {
      int v22 = *((_DWORD *)a2 + 22);
      *((_DWORD *)this + 24) |= 0x10u;
      *((_DWORD *)this + 22) = v22;
    }
  }
}

void sub_224970C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PerformanceStats::~LocationAccessory_PerformanceStats(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  *(void *)this = &unk_26D7BC778;
  if ((awd::metrics::LocationAccessory_PerformanceStats *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 10);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_PerformanceStats::~LocationAccessory_PerformanceStats(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationAccessory_PerformanceStats::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationAccessory_PerformanceStats::default_instance_ != this)
  {
    this = (void *)this[10];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::default_instance(awd::metrics::LocationAccessory_PerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PerformanceStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PerformanceStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PerformanceStats::New(awd::metrics::LocationAccessory_PerformanceStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::Clear(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  int v2 = *((_DWORD *)this + 24);
  if ((v2 & 0x7F8) != 0)
  {
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *((void *)this + 10);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *((_DWORD *)this + 22) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t)this + 8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t)this + 32);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t)this + 56);
  *((_DWORD *)this + 24) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PerformanceStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 8);
  int v5 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 32);
  int v6 = (awd::metrics::LocationAccessory_PerformanceStats *)((char *)this + 56);
  uint64_t v7 = (unsigned int *)((char *)this + 88);
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_34;
        }
        while (1)
        {
          int v11 = *((_DWORD *)this + 5);
          uint64_t v12 = *((int *)this + 4);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v11 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v11 + 1;
            operator new();
          }
          uint64_t v13 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v12 + 1;
          uint64_t v14 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v13 + 8 * v12);
          unsigned int v54 = 0;
          unsigned int v15 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v54))return 0; {
          }
            }
          else
          {
            unsigned int v54 = *v15;
            *((void *)a2 + 1) = v15 + 1;
          }
          int v16 = *((_DWORD *)a2 + 14);
          int v17 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v16 + 1;
          if (v16 >= v17) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v14, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v18 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v20;
          }
          BOOL v21 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v21 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v22 = *v21;
          if (v22 != 10) {
            break;
          }
          *((void *)a2 + 1) = v21 + 1;
        }
        if (v22 != 18) {
          continue;
        }
        goto LABEL_39;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_34;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_58;
        }
        goto LABEL_34;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_76;
        }
        goto LABEL_34;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_90;
      default:
        int v10 = TagFallback & 7;
LABEL_34:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    break;
  }
  while (1)
  {
    int v25 = *((_DWORD *)this + 11);
    uint64_t v26 = *((int *)this + 10);
    if ((int)v26 >= v25)
    {
      if (v25 == *((_DWORD *)this + 12))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
        int v25 = *((_DWORD *)this + 11);
      }
      *((_DWORD *)this + 11) = v25 + 1;
      operator new();
    }
    uint64_t v27 = *((void *)this + 4);
    *((_DWORD *)this + 10) = v26 + 1;
    unint64_t v28 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v27 + 8 * v26);
    unsigned int v54 = 0;
    int v29 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v54)) {
        return 0;
      }
    }
    else
    {
      unsigned int v54 = *v29;
      *((void *)a2 + 1) = v29 + 1;
    }
    int v30 = *((_DWORD *)a2 + 14);
    int v31 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v30 + 1;
    if (v30 >= v31) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v28, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v32 = *((_DWORD *)a2 + 14);
    BOOL v19 = __OFSUB__(v32, 1);
    int v33 = v32 - 1;
    if (v33 < 0 == v19) {
      *((_DWORD *)a2 + 14) = v33;
    }
    BOOL v21 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v21 >= *((void *)a2 + 2)) {
      goto LABEL_2;
    }
    int v34 = *v21;
    if (v34 != 18)
    {
      if (v34 != 26) {
        goto LABEL_2;
      }
      while (1)
      {
        *((void *)a2 + 1) = v21 + 1;
LABEL_58:
        int v35 = *((_DWORD *)this + 17);
        uint64_t v36 = *((int *)this + 16);
        if ((int)v36 >= v35)
        {
          if (v35 == *((_DWORD *)this + 18))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v35 = *((_DWORD *)this + 17);
          }
          *((_DWORD *)this + 17) = v35 + 1;
          operator new();
        }
        uint64_t v37 = *((void *)this + 7);
        *((_DWORD *)this + 16) = v36 + 1;
        unsigned int v38 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v37 + 8 * v36);
        unsigned int v54 = 0;
        unsigned int v39 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v39;
          *((void *)a2 + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)a2 + 14);
        int v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v38, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v42 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v43;
        }
        BOOL v21 = (unsigned __int8 *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2)) {
          goto LABEL_2;
        }
        int v44 = *v21;
        if (v44 != 26)
        {
          if (v44 != 34) {
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v21 + 1;
LABEL_76:
          *((_DWORD *)this + 24) |= 8u;
          unsigned int v45 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 10);
          if (!v45) {
            operator new();
          }
          unsigned int v54 = 0;
          uint64_t v46 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v54))return 0; {
          }
            }
          else
          {
            unsigned int v54 = *v46;
            *((void *)a2 + 1) = v46 + 1;
          }
          int v47 = *((_DWORD *)a2 + 14);
          int v48 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v47 + 1;
          if (v47 >= v48) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v45, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v49 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v49, 1);
          int v50 = v49 - 1;
          if (v50 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v50;
          }
          unsigned int v51 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
          if ((unint64_t)v51 < v23 && *v51 == 40)
          {
            unsigned int v24 = v51 + 1;
            *((void *)a2 + 1) = v24;
LABEL_90:
            if ((unint64_t)v24 >= v23 || *v24 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
              if (!result) {
                return result;
              }
              uint64_t v52 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v23 = *((void *)a2 + 2);
            }
            else
            {
              *uint64_t v7 = *v24;
              uint64_t v52 = (unsigned __int8 *)(v24 + 1);
              *((void *)a2 + 1) = v52;
            }
            *((_DWORD *)this + 24) |= 0x10u;
            if (v52 == (unsigned __int8 *)v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          goto LABEL_2;
        }
      }
    }
LABEL_39:
    *((void *)a2 + 1) = v21 + 1;
  }
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  int v9 = *(_DWORD *)(v5 + 96);
  if ((v9 & 8) == 0)
  {
    if ((v9 & 0x10) == 0) {
      return this;
    }
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v5 + 80);
  if (!v10) {
    uint64_t v10 = *(void *)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x10) != 0)
  {
LABEL_16:
    uint64_t v11 = *(unsigned int *)(v5 + 88);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::ByteSize(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  int v2 = *((_DWORD *)this + 24);
  if ((v2 & 0x7F8) == 0)
  {
    int v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 8) == 0)
  {
    int v3 = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 10);
  if (!v4) {
    uint64_t v4 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_PerformanceStats::default_instance_
  }
                                                        + 80);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 24) & 0x10) != 0)
  {
LABEL_12:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else {
      int v9 = 2;
    }
    v3 += v9;
  }
LABEL_16:
  int v10 = *((_DWORD *)this + 4);
  int v11 = v10 + v3;
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)this + 1) + 8 * v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  int v16 = *((_DWORD *)this + 10);
  int v17 = v16 + v11;
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)this + 4) + 8 * v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  int v22 = *((_DWORD *)this + 16);
  uint64_t v23 = (v22 + v17);
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)this + 7) + 8 * v24));
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      }
      else {
        int v27 = 1;
      }
      uint64_t v23 = (v26 + v23 + v27);
      ++v24;
    }
    while (v24 < *((int *)this + 16));
  }
  *((_DWORD *)this + 23) = v23;
  return v23;
}

void awd::metrics::LocationAccessory_PerformanceStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PerformanceStats::CopyFrom(awd::metrics::LocationAccessory_PerformanceStats *this, const awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PerformanceStats *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::IsInitialized(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PerformanceStats *awd::metrics::LocationAccessory_PerformanceStats::Swap(awd::metrics::LocationAccessory_PerformanceStats *this, awd::metrics::LocationAccessory_PerformanceStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PerformanceStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 10);
    *((void *)v3 + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 22);
    *((_DWORD *)v3 + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 24);
    *((_DWORD *)v3 + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 23);
    *((_DWORD *)v3 + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v4;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PerformanceStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PerformanceStats");
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::LocationAccessory_SpeedPerfRangeHistogram(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BC7F0;
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224971A34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xF) {
        awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_224971B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::~LocationAccessory_SpeedPerfRangeHistogram(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  *(void *)this = &unk_26D7BC7F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC7F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC7F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::New(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 0xE)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          uint64_t v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::Swap(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this, awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.SpeedPerfRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_SpeedPerformanceStats *awd::metrics::LocationAccessory_SpeedPerformanceStats::LocationAccessory_SpeedPerformanceStats(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  *(void *)this = &unk_26D7BC868;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, a2);
  return this;
}

void sub_22497211C(_Unwind_Exception *a1)
{
  int v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(const awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32));
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
  int v14 = *((_DWORD *)a2 + 18);
  if ((v14 & 0x3FC) != 0)
  {
    if ((v14 & 4) != 0)
    {
      *((_DWORD *)this + 18) |= 4u;
      unsigned int v15 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 7);
      if (!v15) {
        operator new();
      }
      int v16 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 7);
      if (!v16) {
        int v16 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
      }
                                                                   + 56);
      awd::metrics::LocationAccessory_Statistics::MergeFrom(v15, v16);
      int v14 = *((_DWORD *)a2 + 18);
    }
    if ((v14 & 8) != 0)
    {
      int v17 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 8u;
      *((_DWORD *)this + 16) = v17;
    }
  }
}

void sub_224972420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::~LocationAccessory_SpeedPerformanceStats(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  *(void *)this = &unk_26D7BC868;
  if ((awd::metrics::LocationAccessory_SpeedPerformanceStats *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 7);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_SpeedPerformanceStats::~LocationAccessory_SpeedPerformanceStats(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationAccessory_SpeedPerformanceStats::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ != this)
  {
    this = (void *)this[7];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::New(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::Clear(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *((void *)this + 7);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *((_DWORD *)this + 16) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t)this + 8);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>((uint64_t)this + 32);
  *((_DWORD *)this + 18) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 8);
  int v5 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)((char *)this + 32);
  int v6 = (unsigned int *)((char *)this + 64);
LABEL_2:
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || (char)*v7 < 0) {
      break;
    }
    unint64_t TagFallback = *v7;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v7 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_32;
        }
        while (1)
        {
          int v10 = *((_DWORD *)this + 5);
          uint64_t v11 = *((int *)this + 4);
          if ((int)v11 >= v10)
          {
            if (v10 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v10 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v11 + 1;
          uint64_t v13 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v12 + 8 * v11);
          unsigned int v43 = 0;
          int v14 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
          }
            }
          else
          {
            unsigned int v43 = *v14;
            *((void *)a2 + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)a2 + 14);
          int v16 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v17 = *((_DWORD *)a2 + 14);
          BOOL v18 = __OFSUB__(v17, 1);
          int v19 = v17 - 1;
          if (v19 < 0 == v18) {
            *((_DWORD *)a2 + 14) = v19;
          }
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v20 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v21 = *v20;
          if (v21 != 10) {
            break;
          }
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v21 != 18) {
          continue;
        }
        goto LABEL_37;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_32;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_56;
        }
        goto LABEL_32;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_70;
      default:
        int v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v24 = *((_DWORD *)this + 11);
      uint64_t v25 = *((int *)this + 10);
      if ((int)v25 >= v24)
      {
        if (v24 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
          int v24 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v24 + 1;
        operator new();
      }
      uint64_t v26 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v25 + 1;
      int v27 = *(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(v26 + 8 * v25);
      unsigned int v44 = 0;
      unint64_t v28 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44)) {
          return 0;
        }
      }
      else
      {
        unsigned int v44 = *v28;
        *((void *)a2 + 1) = v28 + 1;
      }
      int v29 = *((_DWORD *)a2 + 14);
      int v30 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v29 + 1;
      if (v29 >= v30) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergePartialFromCodedStream(v27, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v31 = *((_DWORD *)a2 + 14);
      BOOL v18 = __OFSUB__(v31, 1);
      int v32 = v31 - 1;
      if (v32 < 0 == v18) {
        *((_DWORD *)a2 + 14) = v32;
      }
      int v20 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v20 >= *((void *)a2 + 2)) {
        goto LABEL_2;
      }
      int v33 = *v20;
      if (v33 != 18) {
        break;
      }
LABEL_37:
      *((void *)a2 + 1) = v20 + 1;
    }
    if (v33 != 26) {
      continue;
    }
    *((void *)a2 + 1) = v20 + 1;
LABEL_56:
    *((_DWORD *)this + 18) |= 4u;
    int v34 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 7);
    if (!v34) {
      operator new();
    }
    unsigned int v45 = 0;
    int v35 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45)) {
        return 0;
      }
    }
    else
    {
      unsigned int v45 = *v35;
      *((void *)a2 + 1) = v35 + 1;
    }
    int v36 = *((_DWORD *)a2 + 14);
    int v37 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v36 + 1;
    if (v36 >= v37) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v34, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v38 = *((_DWORD *)a2 + 14);
    BOOL v18 = __OFSUB__(v38, 1);
    int v39 = v38 - 1;
    if (v39 < 0 == v18) {
      *((_DWORD *)a2 + 14) = v39;
    }
    int v40 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v22 = *((void *)a2 + 2);
    if ((unint64_t)v40 < v22 && *v40 == 32)
    {
      uint64_t v23 = v40 + 1;
      *((void *)a2 + 1) = v23;
LABEL_70:
      if ((unint64_t)v23 >= v22 || *v23 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!result) {
          return result;
        }
        int v41 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
      }
      else
      {
        *int v6 = *v23;
        int v41 = (unsigned __int8 *)(v23 + 1);
        *((void *)a2 + 1) = v41;
      }
      *((_DWORD *)this + 18) |= 8u;
      if (v41 == (unsigned __int8 *)v22 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 4) == 0)
  {
    if ((v8 & 8) == 0) {
      return this;
    }
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 8) != 0)
  {
LABEL_13:
    uint64_t v10 = *(unsigned int *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::ByteSize(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) == 0)
  {
    int v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 4) == 0)
  {
    int v3 = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 7);
  if (!v4) {
    uint64_t v4 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_SpeedPerformanceStats::default_instance_
  }
                                                        + 56);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 18) & 8) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else {
      int v9 = 2;
    }
    v3 += v9;
  }
LABEL_16:
  int v10 = *((_DWORD *)this + 4);
  int v11 = v10 + v3;
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((void *)this + 1) + 8 * v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  int v16 = *((_DWORD *)this + 10);
  uint64_t v17 = (v16 + v11);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram **)(*((void *)this + 4) + 8 * v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  *((_DWORD *)this + 17) = v17;
  return v17;
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CopyFrom(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, const awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_SpeedPerformanceStats *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::IsInitialized(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_SpeedPerformanceStats *awd::metrics::LocationAccessory_SpeedPerformanceStats::Swap(awd::metrics::LocationAccessory_SpeedPerformanceStats *this, awd::metrics::LocationAccessory_SpeedPerformanceStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 7);
    *((void *)v3 + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v4;
  }
  return this;
}

void *awd::metrics::LocationAccessory_SpeedPerformanceStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.SpeedPerformanceStats");
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_LatencyRangeHistogram *awd::metrics::LocationAccessory_LatencyRangeHistogram::LocationAccessory_LatencyRangeHistogram(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BC8E0;
  awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224973024(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 6) {
        awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_2249730F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::~LocationAccessory_LatencyRangeHistogram(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  *(void *)this = &unk_26D7BC8E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BC8E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC8E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_LatencyRangeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::New(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 5)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          uint64_t v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::ByteSize(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CopyFrom(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, const awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_LatencyRangeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::IsInitialized(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_LatencyRangeHistogram *awd::metrics::LocationAccessory_LatencyRangeHistogram::Swap(awd::metrics::LocationAccessory_LatencyRangeHistogram *this, awd::metrics::LocationAccessory_LatencyRangeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_LatencyRangeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.LatencyRangeHistogram");
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = MEMORY[0x263F8C740];
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationAccessory_MessageHistogram *awd::metrics::LocationAccessory_MessageHistogram::LocationAccessory_MessageHistogram(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BC958;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, a2);
  return this;
}

void sub_2249736EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = (const std::string *)*((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      int v6 = (std::string *)*((void *)this + 1);
      if (v6 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 4) = v7;
    }
  }
}

void sub_2249737F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageHistogram::~LocationAccessory_MessageHistogram(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  *(void *)this = &unk_26D7BC958;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC958;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BC958;
  awd::metrics::LocationAccessory_MessageHistogram::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 8);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::default_instance(awd::metrics::LocationAccessory_MessageHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_MessageHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_MessageHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_MessageHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_MessageHistogram::New(awd::metrics::LocationAccessory_MessageHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    if (*(unsigned char *)(this + 24))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_MessageHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 16);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_22;
      }
      *((_DWORD *)this + 6) |= 1u;
      if (*((void *)this + 1) == v5) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_18:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          uint64_t v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_22:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::ByteSize(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 24);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((*((unsigned char *)this + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 24) & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 6);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
  }
LABEL_19:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_MessageHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_MessageHistogram::CopyFrom(awd::metrics::LocationAccessory_MessageHistogram *this, const awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_MessageHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::IsInitialized(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::Swap(uint64_t this, awd::metrics::LocationAccessory_MessageHistogram *a2)
{
  if (a2 != (awd::metrics::LocationAccessory_MessageHistogram *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

void *awd::metrics::LocationAccessory_MessageHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.MessageHistogram");
}

void *awd::metrics::LocationAccessory_MessageStats::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[6] = 0;
  this[7] = 0;
  return this;
}

awd::metrics::LocationAccessory_MessageStats *awd::metrics::LocationAccessory_MessageStats::LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  *(void *)this = &unk_26D7BC9D0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, a2);
  return this;
}

void sub_224973F34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(v1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

float awd::metrics::LocationAccessory_MessageStats::MergeFrom(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      char v6 = *(const awd::metrics::LocationAccessory_LatencyRangeHistogram **)(*((void *)a2 + 3) + 8 * v5);
      int v7 = *((_DWORD *)this + 9);
      uint64_t v8 = *((int *)this + 8);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24));
          int v7 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v8 + 1;
      awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 8));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 60);
  if (!(_BYTE)v10) {
    return result;
  }
  if ((*((unsigned char *)a2 + 60) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 60) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_18:
    int v12 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 15) |= 2u;
    *((_DWORD *)this + 3) = v12;
    int v10 = *((_DWORD *)a2 + 15);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 0x10) == 0) {
        return result;
      }
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  int v11 = *((_DWORD *)a2 + 2);
  *((_DWORD *)this + 15) |= 1u;
  *((_DWORD *)this + 2) = v11;
  int v10 = *((_DWORD *)a2 + 15);
  if ((v10 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_14:
  if ((v10 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_19:
  *((_DWORD *)this + 15) |= 4u;
  uint64_t v13 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 2);
  if (!v13) {
    operator new();
  }
  int v14 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 2);
  if (!v14) {
    int v14 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
  }
                                                               + 16);
  float result = awd::metrics::LocationAccessory_Statistics::MergeFrom(v13, v14);
  if ((*((_DWORD *)a2 + 15) & 0x10) != 0)
  {
LABEL_24:
    *((_DWORD *)this + 15) |= 0x10u;
    unsigned int v15 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 6);
    if (!v15) {
      operator new();
    }
    int v16 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 6);
    if (!v16) {
      int v16 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
    }
                                                                 + 48);
    return awd::metrics::LocationAccessory_Statistics::MergeFrom(v15, v16);
  }
  return result;
}

void sub_2249741EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_MessageStats::~LocationAccessory_MessageStats(awd::metrics::LocationAccessory_MessageStats *this)
{
  *(void *)this = &unk_26D7BC9D0;
  uint64_t v2 = (uint64_t *)((char *)this + 24);
  awd::metrics::LocationAccessory_MessageStats::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_MessageStats::~LocationAccessory_MessageStats(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationAccessory_MessageStats::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationAccessory_MessageStats::default_instance_ != this)
  {
    uint64_t v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    this = (void *)v1[6];
    if (this)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v3();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::default_instance(awd::metrics::LocationAccessory_MessageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_MessageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_MessageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_MessageStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_MessageStats::New(awd::metrics::LocationAccessory_MessageStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_MessageStats::Clear(awd::metrics::LocationAccessory_MessageStats *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if ((_BYTE)v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *((_DWORD *)this + 15);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *((void *)this + 6);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>((uint64_t)this + 24);
  *((_DWORD *)this + 15) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_MessageStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 8);
  uint64_t v5 = (unsigned int *)((char *)this + 12);
  char v6 = (awd::metrics::LocationAccessory_MessageStats *)((char *)this + 24);
  while (1)
  {
LABEL_2:
    int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 < *((void *)a2 + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 15) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          uint64_t v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_28:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v13;
          int v16 = v13 + 1;
          *((void *)a2 + 1) = v16;
        }
        int v14 = *((_DWORD *)this + 15) | 2;
        *((_DWORD *)this + 15) = v14;
        if ((unint64_t)v16 >= v10 || *v16 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_36:
        *((_DWORD *)this + 15) = v14 | 4;
        uint64_t v17 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v41 = 0;
        uint64_t v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v17, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 34) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v24 + 1;
LABEL_50:
          int v25 = *((_DWORD *)this + 9);
          uint64_t v26 = *((int *)this + 8);
          if ((int)v26 >= v25)
          {
            if (v25 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v25 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v25 + 1;
            operator new();
          }
          uint64_t v27 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v26 + 1;
          unint64_t v28 = *(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(v27 + 8 * v26);
          unsigned int v42 = 0;
          int v29 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
          }
            }
          else
          {
            unsigned int v42 = *v29;
            *((void *)a2 + 1) = v29 + 1;
          }
          int v30 = *((_DWORD *)a2 + 14);
          int v31 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v30 + 1;
          if (v30 >= v31) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_LatencyRangeHistogram::MergePartialFromCodedStream(v28, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v32 = *((_DWORD *)a2 + 14);
          BOOL v22 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v22) {
            *((_DWORD *)a2 + 14) = v33;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v24 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v34 = *v24;
        }
        while (v34 == 34);
        if (v34 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_68:
        *((_DWORD *)this + 15) |= 0x10u;
        int v35 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 6);
        if (!v35) {
          operator new();
        }
        unsigned int v43 = 0;
        int v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v35, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v39 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v40;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        int v14 = *((_DWORD *)this + 15);
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_50;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        goto LABEL_68;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationAccessory_MessageStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationAccessory_MessageStats::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  if ((*(unsigned char *)(v5 + 60) & 0x10) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(awd::metrics::LocationAccessory_MessageStats::default_instance_ + 48);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::ByteSize(awd::metrics::LocationAccessory_MessageStats *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_29;
  }
  if (*((unsigned char *)this + 60))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 15);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v7 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 2);
  if (!v7) {
    uint64_t v7 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
  }
                                                        + 16);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v7);
  int v9 = (int)v8;
  if (v8 >= 0x80) {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
  }
  else {
    int v10 = 1;
  }
  v3 += v9 + v10 + 1;
  if ((*((_DWORD *)this + 15) & 0x10) != 0)
  {
LABEL_23:
    int v11 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 6);
    if (!v11) {
      int v11 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory_MessageStats::default_instance_
    }
                                                           + 48);
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
  }
LABEL_29:
  int v15 = *((_DWORD *)this + 8);
  uint64_t v16 = (v15 + v3);
  if (v15 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_LatencyRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_LatencyRangeHistogram **)(*((void *)this + 3) + 8 * v17));
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      }
      else {
        int v20 = 1;
      }
      uint64_t v16 = (v19 + v16 + v20);
      ++v17;
    }
    while (v17 < *((int *)this + 8));
  }
  *((_DWORD *)this + 14) = v16;
  return v16;
}

float awd::metrics::LocationAccessory_MessageStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_MessageStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, lpsrc);
}

float awd::metrics::LocationAccessory_MessageStats::CopyFrom(awd::metrics::LocationAccessory_MessageStats *this, const awd::metrics::LocationAccessory_MessageStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_MessageStats *))(*(void *)this + 32))(this);
    return awd::metrics::LocationAccessory_MessageStats::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::IsInitialized(awd::metrics::LocationAccessory_MessageStats *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_MessageStats::Swap(uint64_t this, awd::metrics::LocationAccessory_MessageStats *a2)
{
  if (a2 != (awd::metrics::LocationAccessory_MessageStats *)this)
  {
    uint64_t v3 = this;
    int v4 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    int v5 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    uint64_t v6 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v6;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v7 = *(void *)(v3 + 48);
    *(void *)(v3 + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    LODWORD(v7) = *(_DWORD *)(v3 + 60);
    *(_DWORD *)(v3 + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *(_DWORD *)(v3 + 56);
    *(_DWORD *)(v3 + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

void *awd::metrics::LocationAccessory_MessageStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.MessageStats");
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::LocationAccessory_NMEAScreeningLocTypeHistogram(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BCA48;
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224974E90(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5) {
        awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_224974F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::~LocationAccessory_NMEAScreeningLocTypeHistogram(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  *(void *)this = &unk_26D7BCA48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BCA48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCA48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::New(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::ByteSize(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CopyFrom(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::IsInitialized(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::Swap(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this, awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.NMEAScreeningLocTypeHistogram");
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = MEMORY[0x263F8C740];
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationAccessory_LocationAppRunningTime *awd::metrics::LocationAccessory_LocationAppRunningTime::LocationAccessory_LocationAppRunningTime(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BCAC0;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, a2);
  return this;
}

void sub_224975558(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v5 = (const std::string *)*((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      int v6 = (std::string *)*((void *)this + 1);
      if (v6 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 4) = v7;
    }
  }
}

void sub_22497565C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::~LocationAccessory_LocationAppRunningTime(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  *(void *)this = &unk_26D7BCAC0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCAC0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCAC0;
  awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 8);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance(awd::metrics::LocationAccessory_LocationAppRunningTime *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_;
  if (!awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_LocationAppRunningTime::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::New(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    if (*(unsigned char *)(this + 24))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::MergePartialFromCodedStream(awd::metrics::LocationAccessory_LocationAppRunningTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 16);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_22;
      }
      *((_DWORD *)this + 6) |= 1u;
      if (*((void *)this + 1) == v5) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_18:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          int v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_22:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::ByteSize(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 24);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((*((unsigned char *)this + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 24) & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 6);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
  }
LABEL_19:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CopyFrom(awd::metrics::LocationAccessory_LocationAppRunningTime *this, const awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_LocationAppRunningTime *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::IsInitialized(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::Swap(uint64_t this, awd::metrics::LocationAccessory_LocationAppRunningTime *a2)
{
  if (a2 != (awd::metrics::LocationAccessory_LocationAppRunningTime *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

void *awd::metrics::LocationAccessory_LocationAppRunningTime::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.LocationAppRunningTime");
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_NavDynamicsHistogram *awd::metrics::LocationAccessory_NavDynamicsHistogram::LocationAccessory_NavDynamicsHistogram(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BCB38;
  awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224975D7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 7) {
        awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_224975E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::~LocationAccessory_NavDynamicsHistogram(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  *(void *)this = &unk_26D7BCB38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BCB38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCB38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_NavDynamicsHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::New(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::ByteSize(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CopyFrom(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, const awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_NavDynamicsHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::IsInitialized(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_NavDynamicsHistogram *awd::metrics::LocationAccessory_NavDynamicsHistogram::Swap(awd::metrics::LocationAccessory_NavDynamicsHistogram *this, awd::metrics::LocationAccessory_NavDynamicsHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_NavDynamicsHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.NavDynamicsHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(void *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDRavenUsageStats *awd::metrics::LocationAccessory_PASCDRavenUsageStats::LocationAccessory_PASCDRavenUsageStats(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7BCBB0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, a2);
  return this;
}

void sub_224976470(_Unwind_Exception *a1)
{
  int v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(const awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32));
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
  int v14 = *((_DWORD *)a2 + 20);
  if ((v14 & 0x3FC) != 0)
  {
    if ((v14 & 4) != 0)
    {
      int v16 = *((_DWORD *)a2 + 14);
      *((_DWORD *)this + 20) |= 4u;
      *((_DWORD *)this + 14) = v16;
      int v14 = *((_DWORD *)a2 + 20);
      if ((v14 & 8) == 0)
      {
LABEL_22:
        if ((v14 & 0x10) == 0) {
          goto LABEL_23;
        }
        goto LABEL_29;
      }
    }
    else if ((v14 & 8) == 0)
    {
      goto LABEL_22;
    }
    int v17 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 20) |= 8u;
    *((_DWORD *)this + 15) = v17;
    int v14 = *((_DWORD *)a2 + 20);
    if ((v14 & 0x10) == 0)
    {
LABEL_23:
      if ((v14 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_30;
    }
LABEL_29:
    int v18 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 20) |= 0x10u;
    *((_DWORD *)this + 16) = v18;
    int v14 = *((_DWORD *)a2 + 20);
    if ((v14 & 0x20) == 0)
    {
LABEL_24:
      if ((v14 & 0x40) == 0) {
        return;
      }
      goto LABEL_25;
    }
LABEL_30:
    int v19 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 17) = v19;
    if ((*((_DWORD *)a2 + 20) & 0x40) == 0) {
      return;
    }
LABEL_25:
    int v15 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 20) |= 0x40u;
    *((_DWORD *)this + 18) = v15;
  }
}

void sub_224976780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::~LocationAccessory_PASCDRavenUsageStats(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  *(void *)this = &unk_26D7BCBB0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_PASCDRavenUsageStats::~LocationAccessory_PASCDRavenUsageStats(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDRavenUsageStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::New(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::Clear(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  if ((*((_WORD *)this + 40) & 0x3FC) != 0)
  {
    *((void *)this + 7) = 0;
    *((void *)this + 8) = 0;
    *((_DWORD *)this + 18) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t)this + 8);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>((uint64_t)this + 32);
  *((_DWORD *)this + 20) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 8);
  int v47 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)((char *)this + 32);
  int v5 = (unsigned int *)((char *)this + 56);
  int v6 = (unsigned int *)((char *)this + 60);
  uint64_t v7 = (unsigned int *)((char *)this + 64);
  uint64_t v8 = (unsigned int *)((char *)this + 68);
  uint64_t v9 = (unsigned int *)((char *)this + 72);
LABEL_2:
  while (1)
  {
    int v10 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || (char)*v10 < 0) {
      break;
    }
    unint64_t TagFallback = *v10;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v10 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_38;
        }
        while (1)
        {
          int v13 = *((_DWORD *)this + 5);
          uint64_t v14 = *((int *)this + 4);
          if ((int)v14 >= v13)
          {
            if (v13 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v13 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v13 + 1;
            operator new();
          }
          uint64_t v15 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v14 + 1;
          int v16 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v15 + 8 * v14);
          unsigned int v48 = 0;
          int v17 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0; {
          }
            }
          else
          {
            unsigned int v48 = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v18 = *((_DWORD *)a2 + 14);
          int v19 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v18 + 1;
          if (v18 >= v19) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v16, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v20 = *((_DWORD *)a2 + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)a2 + 14) = v22;
          }
          int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v23 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v24 = *v23;
          if (v24 != 10) {
            break;
          }
          *((void *)a2 + 1) = v23 + 1;
        }
        if (v24 != 18) {
          continue;
        }
        goto LABEL_43;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_38;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_62;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v27 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_70;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unint64_t v28 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_78;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_86;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v30 = (char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_94;
      default:
        int v12 = TagFallback & 7;
LABEL_38:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v31 = *((_DWORD *)this + 11);
      uint64_t v32 = *((int *)this + 10);
      if ((int)v32 >= v31)
      {
        if (v31 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v47);
          int v31 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v31 + 1;
        operator new();
      }
      uint64_t v33 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v32 + 1;
      int v34 = *(awd::metrics::LocationAccessory_PerfRangeHistogram **)(v33 + 8 * v32);
      unsigned int v49 = 0;
      int v35 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49)) {
          return 0;
        }
      }
      else
      {
        unsigned int v49 = *v35;
        *((void *)a2 + 1) = v35 + 1;
      }
      int v36 = *((_DWORD *)a2 + 14);
      int v37 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v36 + 1;
      if (v36 >= v37) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_PerfRangeHistogram::MergePartialFromCodedStream(v34, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v38 = *((_DWORD *)a2 + 14);
      BOOL v21 = __OFSUB__(v38, 1);
      int v39 = v38 - 1;
      if (v39 < 0 == v21) {
        *((_DWORD *)a2 + 14) = v39;
      }
      int v23 = (unsigned __int8 *)*((void *)a2 + 1);
      unint64_t v25 = *((void *)a2 + 2);
      if ((unint64_t)v23 >= v25) {
        goto LABEL_2;
      }
      int v40 = *v23;
      if (v40 != 18) {
        break;
      }
LABEL_43:
      *((void *)a2 + 1) = v23 + 1;
    }
    if (v40 != 24) {
      continue;
    }
    uint64_t v26 = (char *)(v23 + 1);
    *((void *)a2 + 1) = v26;
LABEL_62:
    if ((unint64_t)v26 >= v25 || *v26 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
      if (!result) {
        return result;
      }
      unsigned int v41 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v25 = *((void *)a2 + 2);
    }
    else
    {
      *int v5 = *v26;
      unsigned int v41 = v26 + 1;
      *((void *)a2 + 1) = v41;
    }
    *((_DWORD *)this + 20) |= 4u;
    if ((unint64_t)v41 < v25 && *v41 == 32)
    {
      uint64_t v27 = v41 + 1;
      *((void *)a2 + 1) = v27;
LABEL_70:
      if ((unint64_t)v27 >= v25 || *v27 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!result) {
          return result;
        }
        unsigned int v43 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
      }
      else
      {
        *int v6 = *v27;
        unsigned int v43 = v27 + 1;
        *((void *)a2 + 1) = v43;
      }
      *((_DWORD *)this + 20) |= 8u;
      if ((unint64_t)v43 < v25 && *v43 == 40)
      {
        unint64_t v28 = v43 + 1;
        *((void *)a2 + 1) = v28;
LABEL_78:
        if ((unint64_t)v28 >= v25 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v28;
          unsigned int v44 = v28 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v44 < v25 && *v44 == 48)
        {
          int v29 = v44 + 1;
          *((void *)a2 + 1) = v29;
LABEL_86:
          if ((unint64_t)v29 >= v25 || *v29 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
            if (!result) {
              return result;
            }
            unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v25 = *((void *)a2 + 2);
          }
          else
          {
            *uint64_t v8 = *v29;
            unsigned int v45 = v29 + 1;
            *((void *)a2 + 1) = v45;
          }
          *((_DWORD *)this + 20) |= 0x20u;
          if ((unint64_t)v45 < v25 && *v45 == 56)
          {
            int v30 = v45 + 1;
            *((void *)a2 + 1) = v30;
LABEL_94:
            if ((unint64_t)v30 >= v25 || *v30 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
              if (!result) {
                return result;
              }
              uint64_t v46 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v25 = *((void *)a2 + 2);
            }
            else
            {
              *uint64_t v9 = *v30;
              uint64_t v46 = (unsigned __int8 *)(v30 + 1);
              *((void *)a2 + 1) = v46;
            }
            *((_DWORD *)this + 20) |= 0x40u;
            if (v46 == (unsigned __int8 *)v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 80);
    if ((v8 & 8) == 0)
    {
LABEL_9:
      if ((v8 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_15;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_9;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x10) == 0)
  {
LABEL_10:
    if ((v8 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 80) & 0x40) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_11:
  if ((v8 & 0x40) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v9 = *(unsigned int *)(v5 + 72);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::ByteSize(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  int v2 = *((_DWORD *)this + 20);
  if ((v2 & 0x3FC) == 0)
  {
    int v3 = 0;
    goto LABEL_30;
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 20);
      if ((v2 & 8) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 8) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 0x10) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v8 = 2;
    }
    v3 += v8;
    if ((v2 & 0x20) == 0)
    {
LABEL_16:
      if ((v2 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v10 = 2;
  }
  v3 += v10;
  if ((v2 & 0x40) != 0)
  {
LABEL_26:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else {
      int v12 = 2;
    }
    v3 += v12;
  }
LABEL_30:
  int v13 = *((_DWORD *)this + 4);
  int v14 = v13 + v3;
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)this + 1) + 8 * v15));
      int v17 = (int)v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      }
      else {
        int v18 = 1;
      }
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 4));
  }
  int v19 = *((_DWORD *)this + 10);
  uint64_t v20 = (v19 + v14);
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerfRangeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PerfRangeHistogram **)(*((void *)this + 4) + 8 * v21));
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      }
      else {
        int v24 = 1;
      }
      uint64_t v20 = (v23 + v20 + v24);
      ++v21;
    }
    while (v21 < *((int *)this + 10));
  }
  *((_DWORD *)this + 19) = v20;
  return v20;
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CopyFrom(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, const awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDRavenUsageStats *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::IsInitialized(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDRavenUsageStats *awd::metrics::LocationAccessory_PASCDRavenUsageStats::Swap(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this, awd::metrics::LocationAccessory_PASCDRavenUsageStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    int v5 = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    int v6 = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    int v7 = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    int v8 = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    int v9 = *((_DWORD *)v3 + 20);
    *((_DWORD *)v3 + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v9;
    int v10 = *((_DWORD *)v3 + 19);
    *((_DWORD *)v3 + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v10;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PASCDRavenUsageStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDRavenUsageStats");
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDTransmissionHistogram *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::LocationAccessory_PASCDTransmissionHistogram(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BCC28;
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224977494(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5) {
        awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom();
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_224977560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::~LocationAccessory_PASCDTransmissionHistogram(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  *(void *)this = &unk_26D7BCC28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BCC28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCC28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDTransmissionHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::New(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::ByteSize(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CopyFrom(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, const awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::IsInitialized(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDTransmissionHistogram *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::Swap(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this, awd::metrics::LocationAccessory_PASCDTransmissionHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PASCDTransmissionHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDTransmissionHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::LocationAccessory_PASCDSampleSizeHistogram(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BCCA0;
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, a2);
  return this;
}

void sub_224977B38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      int v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_224977BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::~LocationAccessory_PASCDSampleSizeHistogram(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  *(void *)this = &unk_26D7BCCA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BCCA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCCA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::New(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v11 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        *int v4 = *v11;
        int v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v10;
          int v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::ByteSize(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CopyFrom(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::IsInitialized(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::Swap(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this, awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDSampleSizeHistogram");
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SharedCtor(uint64_t this)
{
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationAccessory_PASCDStats *awd::metrics::LocationAccessory_PASCDStats::LocationAccessory_PASCDStats(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  *(void *)this = &unk_26D7BCD18;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, a2);
  return this;
}

void sub_2249781F0(_Unwind_Exception *a1)
{
  int v4 = v3;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDStats::MergeFrom(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(const awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32));
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
  int v14 = *((_DWORD *)a2 + 18);
  if ((v14 & 0x3FC) != 0)
  {
    if ((v14 & 4) != 0)
    {
      *((_DWORD *)this + 18) |= 4u;
      unsigned int v15 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((void *)this + 7);
      if (!v15) {
        operator new();
      }
      int v16 = (const awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((void *)a2 + 7);
      if (!v16) {
        int v16 = *(const awd::metrics::LocationAccessory_PASCDRavenUsageStats **)(awd::metrics::LocationAccessory_PASCDStats::default_instance_
      }
                                                                             + 56);
      awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergeFrom(v15, v16);
      int v14 = *((_DWORD *)a2 + 18);
    }
    if ((v14 & 8) != 0)
    {
      int v17 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 8u;
      *((_DWORD *)this + 16) = v17;
    }
  }
}

void sub_224978504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_PASCDStats::~LocationAccessory_PASCDStats(awd::metrics::LocationAccessory_PASCDStats *this)
{
  *(void *)this = &unk_26D7BCD18;
  if ((awd::metrics::LocationAccessory_PASCDStats *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 7);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory_PASCDStats::~LocationAccessory_PASCDStats(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationAccessory_PASCDStats::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationAccessory_PASCDStats::default_instance_ != this)
  {
    this = (void *)this[7];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::default_instance(awd::metrics::LocationAccessory_PASCDStats *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  if (!awd::metrics::LocationAccessory_PASCDStats::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_PASCDStats::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_PASCDStats::New(awd::metrics::LocationAccessory_PASCDStats *this)
{
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::Clear(awd::metrics::LocationAccessory_PASCDStats *this)
{
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      int v3 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((void *)this + 7);
      if (v3) {
        awd::metrics::LocationAccessory_PASCDRavenUsageStats::Clear(v3);
      }
    }
    *((_DWORD *)this + 16) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>((uint64_t)this + 8);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>((uint64_t)this + 32);
  *((_DWORD *)this + 18) = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::MergePartialFromCodedStream(awd::metrics::LocationAccessory_PASCDStats *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 8);
  int v5 = (awd::metrics::LocationAccessory_PASCDStats *)((char *)this + 32);
  int v6 = (unsigned int *)((char *)this + 64);
LABEL_2:
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || (char)*v7 < 0) {
      break;
    }
    unint64_t TagFallback = *v7;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v7 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_32;
        }
        while (1)
        {
          int v10 = *((_DWORD *)this + 5);
          uint64_t v11 = *((int *)this + 4);
          if ((int)v11 >= v10)
          {
            if (v10 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v10 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v11 + 1;
          uint64_t v13 = *(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(v12 + 8 * v11);
          unsigned int v43 = 0;
          int v14 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43))return 0; {
          }
            }
          else
          {
            unsigned int v43 = *v14;
            *((void *)a2 + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)a2 + 14);
          int v16 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v17 = *((_DWORD *)a2 + 14);
          BOOL v18 = __OFSUB__(v17, 1);
          int v19 = v17 - 1;
          if (v19 < 0 == v18) {
            *((_DWORD *)a2 + 14) = v19;
          }
          uint64_t v20 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v20 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v21 = *v20;
          if (v21 != 10) {
            break;
          }
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v21 != 18) {
          continue;
        }
        goto LABEL_37;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_32;
        }
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_56;
        }
        goto LABEL_32;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_70;
      default:
        int v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v24 = *((_DWORD *)this + 11);
      uint64_t v25 = *((int *)this + 10);
      if ((int)v25 >= v24)
      {
        if (v24 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
          int v24 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v24 + 1;
        operator new();
      }
      uint64_t v26 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v25 + 1;
      uint64_t v27 = *(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(v26 + 8 * v25);
      unsigned int v44 = 0;
      unint64_t v28 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44)) {
          return 0;
        }
      }
      else
      {
        unsigned int v44 = *v28;
        *((void *)a2 + 1) = v28 + 1;
      }
      int v29 = *((_DWORD *)a2 + 14);
      int v30 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v29 + 1;
      if (v29 >= v30) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::MergePartialFromCodedStream(v27, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v31 = *((_DWORD *)a2 + 14);
      BOOL v18 = __OFSUB__(v31, 1);
      int v32 = v31 - 1;
      if (v32 < 0 == v18) {
        *((_DWORD *)a2 + 14) = v32;
      }
      uint64_t v20 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v20 >= *((void *)a2 + 2)) {
        goto LABEL_2;
      }
      int v33 = *v20;
      if (v33 != 18) {
        break;
      }
LABEL_37:
      *((void *)a2 + 1) = v20 + 1;
    }
    if (v33 != 26) {
      continue;
    }
    *((void *)a2 + 1) = v20 + 1;
LABEL_56:
    *((_DWORD *)this + 18) |= 4u;
    int v34 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((void *)this + 7);
    if (!v34) {
      operator new();
    }
    unsigned int v45 = 0;
    int v35 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45)) {
        return 0;
      }
    }
    else
    {
      unsigned int v45 = *v35;
      *((void *)a2 + 1) = v35 + 1;
    }
    int v36 = *((_DWORD *)a2 + 14);
    int v37 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v36 + 1;
    if (v36 >= v37) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!awd::metrics::LocationAccessory_PASCDRavenUsageStats::MergePartialFromCodedStream(v34, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v38 = *((_DWORD *)a2 + 14);
    BOOL v18 = __OFSUB__(v38, 1);
    int v39 = v38 - 1;
    if (v39 < 0 == v18) {
      *((_DWORD *)a2 + 14) = v39;
    }
    int v40 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v22 = *((void *)a2 + 2);
    if ((unint64_t)v40 < v22 && *v40 == 32)
    {
      int v23 = v40 + 1;
      *((void *)a2 + 1) = v23;
LABEL_70:
      if ((unint64_t)v23 >= v22 || *v23 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!result) {
          return result;
        }
        unsigned int v41 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
      }
      else
      {
        *int v6 = *v23;
        unsigned int v41 = (unsigned __int8 *)(v23 + 1);
        *((void *)a2 + 1) = v41;
      }
      *((_DWORD *)this + 18) |= 8u;
      if (v41 == (unsigned __int8 *)v22 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 4) == 0)
  {
    if ((v8 & 8) == 0) {
      return this;
    }
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::LocationAccessory_PASCDStats::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 8) != 0)
  {
LABEL_13:
    uint64_t v10 = *(unsigned int *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::ByteSize(awd::metrics::LocationAccessory_PASCDStats *this)
{
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x3FC) == 0)
  {
    int v3 = 0;
    goto LABEL_16;
  }
  if ((v2 & 4) == 0)
  {
    int v3 = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (awd::metrics::LocationAccessory_PASCDRavenUsageStats *)*((void *)this + 7);
  if (!v4) {
    uint64_t v4 = *(awd::metrics::LocationAccessory_PASCDRavenUsageStats **)(awd::metrics::LocationAccessory_PASCDStats::default_instance_
  }
                                                                  + 56);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDRavenUsageStats::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  if ((*((_DWORD *)this + 18) & 8) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else {
      int v9 = 2;
    }
    v3 += v9;
  }
LABEL_16:
  int v10 = *((_DWORD *)this + 4);
  int v11 = v10 + v3;
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDTransmissionHistogram::ByteSize(*(awd::metrics::LocationAccessory_PASCDTransmissionHistogram **)(*((void *)this + 1) + 8 * v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 4));
  }
  int v16 = *((_DWORD *)this + 10);
  uint64_t v17 = (v16 + v11);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::ByteSize(*(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram **)(*((void *)this + 4) + 8 * v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 10));
  }
  *((_DWORD *)this + 17) = v17;
  return v17;
}

void awd::metrics::LocationAccessory_PASCDStats::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_PASCDStats *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory_PASCDStats::CopyFrom(awd::metrics::LocationAccessory_PASCDStats *this, const awd::metrics::LocationAccessory_PASCDStats *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_PASCDStats *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory_PASCDStats::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::IsInitialized(awd::metrics::LocationAccessory_PASCDStats *this)
{
  return 1;
}

awd::metrics::LocationAccessory_PASCDStats *awd::metrics::LocationAccessory_PASCDStats::Swap(awd::metrics::LocationAccessory_PASCDStats *this, awd::metrics::LocationAccessory_PASCDStats *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationAccessory_PASCDStats *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 7);
    *((void *)v3 + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    LODWORD(v4) = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v4;
  }
  return this;
}

void *awd::metrics::LocationAccessory_PASCDStats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.PASCDStats");
}

void *awd::metrics::LocationAccessory_Coordinate::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

awd::metrics::LocationAccessory_Coordinate *awd::metrics::LocationAccessory_Coordinate::LocationAccessory_Coordinate(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  *(void *)this = &unk_26D7BCD90;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, a2);
  return this;
}

void sub_22497910C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationAccessory_Coordinate::MergeFrom(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_2249791CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory_Coordinate::~LocationAccessory_Coordinate(awd::metrics::LocationAccessory_Coordinate *this)
{
  *(void *)this = &unk_26D7BCD90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BCD90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCD90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationAccessory_Coordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::default_instance(awd::metrics::LocationAccessory_Coordinate *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory_Coordinate::default_instance_;
  if (!awd::metrics::LocationAccessory_Coordinate::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory_Coordinate::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory_Coordinate::New(awd::metrics::LocationAccessory_Coordinate *this)
{
}

uint64_t awd::metrics::LocationAccessory_Coordinate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::MergePartialFromCodedStream(awd::metrics::LocationAccessory_Coordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::ByteSize(awd::metrics::LocationAccessory_Coordinate *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double awd::metrics::LocationAccessory_Coordinate::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory_Coordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationAccessory_Coordinate::CopyFrom(awd::metrics::LocationAccessory_Coordinate *this, const awd::metrics::LocationAccessory_Coordinate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory_Coordinate *))(*(void *)this + 32))(this);
    return awd::metrics::LocationAccessory_Coordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationAccessory_Coordinate::IsInitialized(awd::metrics::LocationAccessory_Coordinate *this)
{
  return 1;
}

double awd::metrics::LocationAccessory_Coordinate::Swap(awd::metrics::LocationAccessory_Coordinate *this, awd::metrics::LocationAccessory_Coordinate *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *awd::metrics::LocationAccessory_Coordinate::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory.Coordinate");
}

double awd::metrics::LocationAccessory::LocationAccessory(awd::metrics::LocationAccessory *this)
{
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0;
  *((_DWORD *)this + 48) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((void *)this + 39) = 0;
  *((_DWORD *)this + 80) = 0;
  *((_DWORD *)this + 86) = 0;
  *(void *)this = &unk_26D7BCE08;
  *((void *)this + 1) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v1;
  *((void *)this + 4) = v1;
  *((void *)this + 5) = v1;
  *((void *)this + 6) = v1;
  *((_DWORD *)this + 14) = 0;
  *((unsigned char *)this + 60) = 0;
  double result = 0.0;
  *((void *)this + 25) = 0;
  *((void *)this + 29) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((void *)this + 37) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 41) = v1;
  *((void *)this + 42) = v1;
  *(void *)((char *)this + 348) = 0;
  return result;
}

double awd::metrics::LocationAccessory::SharedCtor(awd::metrics::LocationAccessory *this)
{
  *((_DWORD *)this + 86) = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 3) = v1;
  *((void *)this + 4) = v1;
  *((void *)this + 5) = v1;
  *((void *)this + 6) = v1;
  *((_DWORD *)this + 14) = 0;
  *((unsigned char *)this + 60) = 0;
  double result = 0.0;
  *((void *)this + 25) = 0;
  *((void *)this + 29) = 0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((void *)this + 37) = 0;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((void *)this + 41) = v1;
  *((void *)this + 42) = v1;
  *(void *)((char *)this + 348) = 0;
  return result;
}

awd::metrics::LocationAccessory *awd::metrics::LocationAccessory::LocationAccessory(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0;
  *((_DWORD *)this + 48) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((void *)this + 39) = 0;
  *((_DWORD *)this + 80) = 0;
  *((_DWORD *)this + 86) = 0;
  *(void *)this = &unk_26D7BCE08;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v3;
  *((void *)this + 4) = v3;
  *((void *)this + 5) = v3;
  *((void *)this + 6) = v3;
  *((_DWORD *)this + 14) = 0;
  *((unsigned char *)this + 60) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 29) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *((void *)this + 37) = 0;
  *((void *)this + 38) = 0;
  *((void *)this + 41) = v3;
  *((void *)this + 42) = v3;
  *(void *)((char *)this + 348) = 0;
  awd::metrics::LocationAccessory::MergeFrom(this, a2);
  return this;
}

void sub_224979840(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory::MergeFrom(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v86);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 176));
  int v4 = (std::string *)MEMORY[0x263F8C740];
  if (*((int *)a2 + 46) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      double v6 = *(const awd::metrics::LocationAccessory_LocationAppRunningTime **)(*((void *)a2 + 22) + 8 * v5);
      int v7 = *((_DWORD *)this + 47);
      uint64_t v8 = *((int *)this + 46);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 176));
          int v7 = *((_DWORD *)this + 47);
        }
        *((_DWORD *)this + 47) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 22);
      *((_DWORD *)this + 46) = v8 + 1;
      awd::metrics::LocationAccessory_LocationAppRunningTime::MergeFrom(*(awd::metrics::LocationAccessory_LocationAppRunningTime **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 46));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 208));
  if (*((int *)a2 + 54) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = *(const awd::metrics::LocationAccessory_NavDynamicsHistogram **)(*((void *)a2 + 26) + 8 * v10);
      int v12 = *((_DWORD *)this + 55);
      uint64_t v13 = *((int *)this + 54);
      if ((int)v13 >= v12)
      {
        if (v12 == *((_DWORD *)this + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 208));
          int v12 = *((_DWORD *)this + 55);
        }
        *((_DWORD *)this + 55) = v12 + 1;
        operator new();
      }
      uint64_t v14 = *((void *)this + 26);
      *((_DWORD *)this + 54) = v13 + 1;
      awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom(*(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(v14 + 8 * v13), v11);
      ++v10;
    }
    while (v10 < *((int *)a2 + 54));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 240));
  if (*((int *)a2 + 62) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      int v16 = *(const awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(*((void *)a2 + 30) + 8 * v15);
      int v17 = *((_DWORD *)this + 63);
      uint64_t v18 = *((int *)this + 62);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 240));
          int v17 = *((_DWORD *)this + 63);
        }
        *((_DWORD *)this + 63) = v17 + 1;
        operator new();
      }
      uint64_t v19 = *((void *)this + 30);
      *((_DWORD *)this + 62) = v18 + 1;
      awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom(*(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *((int *)a2 + 62));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 304));
  if (*((int *)a2 + 78) >= 1)
  {
    uint64_t v20 = 0;
    do
    {
      int v21 = *(const awd::metrics::LocationAccessory_MessageHistogram **)(*((void *)a2 + 38) + 8 * v20);
      uint64_t v22 = *((int *)this + 78);
      int v23 = *((_DWORD *)this + 79);
      if ((int)v22 >= v23)
      {
        if (v23 == *((_DWORD *)this + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationAccessory *)((char *)this + 304));
          int v23 = *((_DWORD *)this + 79);
        }
        *((_DWORD *)this + 79) = v23 + 1;
        operator new();
      }
      uint64_t v24 = *((void *)this + 38);
      *((_DWORD *)this + 78) = v22 + 1;
      awd::metrics::LocationAccessory_MessageHistogram::MergeFrom(*(awd::metrics::LocationAccessory_MessageHistogram **)(v24 + 8 * v22), v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 78));
  }
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if (!(_BYTE)v25) {
    goto LABEL_45;
  }
  if (v25)
  {
    uint64_t v27 = *((void *)a2 + 1);
    *((_DWORD *)this + 87) |= 1u;
    *((void *)this + 1) = v27;
    unsigned int v25 = *((_DWORD *)a2 + 87);
    if ((v25 & 2) == 0)
    {
LABEL_38:
      if ((v25 & 4) == 0) {
        goto LABEL_39;
      }
      goto LABEL_59;
    }
  }
  else if ((v25 & 2) == 0)
  {
    goto LABEL_38;
  }
  unint64_t v28 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 87) |= 2u;
  int v29 = (std::string *)*((void *)this + 2);
  if (v29 == v4) {
    operator new();
  }
  std::string::operator=(v29, v28);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 4) == 0)
  {
LABEL_39:
    if ((v25 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_62;
  }
LABEL_59:
  int v30 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 87) |= 4u;
  int v31 = (std::string *)*((void *)this + 3);
  if (v31 == v4) {
    operator new();
  }
  std::string::operator=(v31, v30);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 8) == 0)
  {
LABEL_40:
    if ((v25 & 0x10) == 0) {
      goto LABEL_41;
    }
    goto LABEL_65;
  }
LABEL_62:
  int v32 = (const std::string *)*((void *)a2 + 4);
  *((_DWORD *)this + 87) |= 8u;
  int v33 = (std::string *)*((void *)this + 4);
  if (v33 == v4) {
    operator new();
  }
  std::string::operator=(v33, v32);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x10) == 0)
  {
LABEL_41:
    if ((v25 & 0x20) == 0) {
      goto LABEL_42;
    }
LABEL_68:
    int v36 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 87) |= 0x20u;
    int v37 = (std::string *)*((void *)this + 6);
    if (v37 == v4) {
      operator new();
    }
    std::string::operator=(v37, v36);
    unsigned int v25 = *((_DWORD *)a2 + 87);
    if ((v25 & 0x40) == 0)
    {
LABEL_43:
      if ((v25 & 0x80) == 0) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
    goto LABEL_71;
  }
LABEL_65:
  int v34 = (const std::string *)*((void *)a2 + 5);
  *((_DWORD *)this + 87) |= 0x10u;
  int v35 = (std::string *)*((void *)this + 5);
  if (v35 == v4) {
    operator new();
  }
  std::string::operator=(v35, v34);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x20) != 0) {
    goto LABEL_68;
  }
LABEL_42:
  if ((v25 & 0x40) == 0) {
    goto LABEL_43;
  }
LABEL_71:
  int v38 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 87) |= 0x40u;
  *((_DWORD *)this + 14) = v38;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x80) != 0)
  {
LABEL_44:
    char v26 = *((unsigned char *)a2 + 60);
    *((_DWORD *)this + 87) |= 0x80u;
    *((unsigned char *)this + 60) = v26;
    unsigned int v25 = *((_DWORD *)a2 + 87);
  }
LABEL_45:
  if ((v25 & 0xFF00) == 0) {
    goto LABEL_93;
  }
  if ((v25 & 0x100) != 0)
  {
    int v39 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 87) |= 0x100u;
    *((_DWORD *)this + 16) = v39;
    unsigned int v25 = *((_DWORD *)a2 + 87);
    if ((v25 & 0x200) == 0)
    {
LABEL_48:
      if ((v25 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_75;
    }
  }
  else if ((v25 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  int v40 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 87) |= 0x200u;
  *((_DWORD *)this + 17) = v40;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x400) == 0)
  {
LABEL_49:
    if ((v25 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v41 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 87) |= 0x400u;
  *((_DWORD *)this + 18) = v41;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x800) == 0)
  {
LABEL_50:
    if ((v25 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v42 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 87) |= 0x800u;
  *((_DWORD *)this + 19) = v42;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x1000) == 0)
  {
LABEL_51:
    if ((v25 & 0x2000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v43 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 87) |= 0x1000u;
  *((_DWORD *)this + 30) = v43;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x2000) == 0)
  {
LABEL_52:
    if ((v25 & 0x4000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)this + 87) |= 0x2000u;
  unsigned int v44 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 10);
  if (!v44) {
    operator new();
  }
  unsigned int v45 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((void *)a2 + 10);
  if (!v45) {
    unsigned int v45 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                     + 80);
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(v44, v45);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x4000) == 0)
  {
LABEL_53:
    if ((v25 & 0x8000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)this + 87) |= 0x4000u;
  uint64_t v46 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 11);
  if (!v46) {
    operator new();
  }
  int v47 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((void *)a2 + 11);
  if (!v47) {
    int v47 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                     + 88);
  awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(v46, v47);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x8000) != 0)
  {
LABEL_88:
    *((_DWORD *)this + 87) |= 0x8000u;
    unsigned int v48 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 12);
    if (!v48) {
      operator new();
    }
    unsigned int v49 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((void *)a2 + 12);
    if (!v49) {
      unsigned int v49 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
    }
                                                                       + 96);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(v48, v49);
    unsigned int v25 = *((_DWORD *)a2 + 87);
  }
LABEL_93:
  if ((v25 & 0xFF0000) == 0) {
    goto LABEL_103;
  }
  if ((v25 & 0x10000) != 0)
  {
    *((_DWORD *)this + 87) |= 0x10000u;
    unsigned int v57 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 13);
    if (!v57) {
      operator new();
    }
    uint64_t v58 = (const awd::metrics::LocationAccessory_PerformanceStats *)*((void *)a2 + 13);
    if (!v58) {
      uint64_t v58 = *(const awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
    }
                                                                       + 104);
    awd::metrics::LocationAccessory_PerformanceStats::MergeFrom(v57, v58);
    unsigned int v25 = *((_DWORD *)a2 + 87);
    if ((v25 & 0x20000) == 0)
    {
LABEL_96:
      if ((v25 & 0x40000) == 0) {
        goto LABEL_97;
      }
      goto LABEL_139;
    }
  }
  else if ((v25 & 0x20000) == 0)
  {
    goto LABEL_96;
  }
  *((_DWORD *)this + 87) |= 0x20000u;
  uint64_t v59 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((void *)this + 14);
  if (!v59) {
    operator new();
  }
  uint64_t v60 = (const awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((void *)a2 + 14);
  if (!v60) {
    uint64_t v60 = *(const awd::metrics::LocationAccessory_SpeedPerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                          + 112);
  awd::metrics::LocationAccessory_SpeedPerformanceStats::MergeFrom(v59, v60);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x40000) == 0)
  {
LABEL_97:
    if ((v25 & 0x80000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_144;
  }
LABEL_139:
  *((_DWORD *)this + 87) |= 0x40000u;
  int v61 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 16);
  if (!v61) {
    operator new();
  }
  int v62 = (const awd::metrics::LocationAccessory_MessageStats *)*((void *)a2 + 16);
  if (!v62) {
    int v62 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                 + 128);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom(v61, v62);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x80000) == 0)
  {
LABEL_98:
    if ((v25 & 0x100000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_149;
  }
LABEL_144:
  *((_DWORD *)this + 87) |= 0x80000u;
  int v63 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 17);
  if (!v63) {
    operator new();
  }
  BOOL v64 = (const awd::metrics::LocationAccessory_MessageStats *)*((void *)a2 + 17);
  if (!v64) {
    BOOL v64 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                 + 136);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom(v63, v64);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x100000) == 0)
  {
LABEL_99:
    if ((v25 & 0x200000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_154;
  }
LABEL_149:
  *((_DWORD *)this + 87) |= 0x100000u;
  int v65 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 18);
  if (!v65) {
    operator new();
  }
  int v66 = (const awd::metrics::LocationAccessory_MessageStats *)*((void *)a2 + 18);
  if (!v66) {
    int v66 = *(const awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                 + 144);
  awd::metrics::LocationAccessory_MessageStats::MergeFrom(v65, v66);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x200000) == 0)
  {
LABEL_100:
    if ((v25 & 0x400000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_159;
  }
LABEL_154:
  *((_DWORD *)this + 87) |= 0x200000u;
  int v67 = (awd::metrics::LocationAccessory_PASCDStats *)*((void *)this + 19);
  if (!v67) {
    operator new();
  }
  int v68 = (const awd::metrics::LocationAccessory_PASCDStats *)*((void *)a2 + 19);
  if (!v68) {
    int v68 = *(const awd::metrics::LocationAccessory_PASCDStats **)(awd::metrics::LocationAccessory::default_instance_ + 152);
  }
  awd::metrics::LocationAccessory_PASCDStats::MergeFrom(v67, v68);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x400000) == 0)
  {
LABEL_101:
    if ((v25 & 0x800000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_159:
  *((_DWORD *)this + 87) |= 0x400000u;
  int v69 = (awd::metrics::LocationAccessory_Coordinate *)*((void *)this + 20);
  if (!v69) {
    operator new();
  }
  int v70 = (const awd::metrics::LocationAccessory_Coordinate *)*((void *)a2 + 20);
  if (!v70) {
    int v70 = *(const awd::metrics::LocationAccessory_Coordinate **)(awd::metrics::LocationAccessory::default_instance_ + 160);
  }
  awd::metrics::LocationAccessory_Coordinate::MergeFrom(v69, v70);
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x800000) != 0)
  {
LABEL_102:
    int v50 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 87) |= 0x800000u;
    *((_DWORD *)this + 31) = v50;
    unsigned int v25 = *((_DWORD *)a2 + 87);
  }
LABEL_103:
  if (!HIBYTE(v25)) {
    goto LABEL_110;
  }
  if ((v25 & 0x1000000) != 0)
  {
    int v80 = *((_DWORD *)a2 + 42);
    *((_DWORD *)this + 87) |= 0x1000000u;
    *((_DWORD *)this + 42) = v80;
    unsigned int v25 = *((_DWORD *)a2 + 87);
    if ((v25 & 0x4000000) == 0)
    {
LABEL_106:
      if ((v25 & 0x8000000) == 0) {
        goto LABEL_107;
      }
      goto LABEL_186;
    }
  }
  else if ((v25 & 0x4000000) == 0)
  {
    goto LABEL_106;
  }
  int v81 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 87) |= 0x4000000u;
  *((_DWORD *)this + 43) = v81;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x8000000) == 0)
  {
LABEL_107:
    if ((v25 & 0x10000000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v82 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 87) |= 0x8000000u;
  *((_DWORD *)this + 50) = v82;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x10000000) == 0)
  {
LABEL_108:
    if ((v25 & 0x40000000) == 0) {
      goto LABEL_109;
    }
LABEL_188:
    int v84 = *((_DWORD *)a2 + 58);
    *((_DWORD *)this + 87) |= 0x40000000u;
    *((_DWORD *)this + 58) = v84;
    if ((*((_DWORD *)a2 + 87) & 0x80000000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_189;
  }
LABEL_187:
  int v83 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 87) |= 0x10000000u;
  *((_DWORD *)this + 51) = v83;
  unsigned int v25 = *((_DWORD *)a2 + 87);
  if ((v25 & 0x40000000) != 0) {
    goto LABEL_188;
  }
LABEL_109:
  if ((v25 & 0x80000000) == 0) {
    goto LABEL_110;
  }
LABEL_189:
  int v85 = *((_DWORD *)a2 + 59);
  *((_DWORD *)this + 87) |= 0x80000000;
  *((_DWORD *)this + 59) = v85;
LABEL_110:
  int v51 = *((_DWORD *)a2 + 88);
  if (!(_BYTE)v51) {
    goto LABEL_119;
  }
  if (v51)
  {
    int v71 = *((_DWORD *)a2 + 66);
    *((_DWORD *)this + 88) |= 1u;
    *((_DWORD *)this + 66) = v71;
    int v51 = *((_DWORD *)a2 + 88);
    if ((v51 & 4) == 0)
    {
LABEL_113:
      if ((v51 & 8) == 0) {
        goto LABEL_114;
      }
      goto LABEL_167;
    }
  }
  else if ((v51 & 4) == 0)
  {
    goto LABEL_113;
  }
  int v72 = *((_DWORD *)a2 + 67);
  *((_DWORD *)this + 88) |= 4u;
  *((_DWORD *)this + 67) = v72;
  int v51 = *((_DWORD *)a2 + 88);
  if ((v51 & 8) == 0)
  {
LABEL_114:
    if ((v51 & 0x10) == 0) {
      goto LABEL_115;
    }
    goto LABEL_172;
  }
LABEL_167:
  *((_DWORD *)this + 88) |= 8u;
  v73 = (awd::metrics::LocationAccessory_DeviceChargingStats *)*((void *)this + 34);
  if (!v73) {
    operator new();
  }
  int v74 = (const awd::metrics::LocationAccessory_DeviceChargingStats *)*((void *)a2 + 34);
  if (!v74) {
    int v74 = *(const awd::metrics::LocationAccessory_DeviceChargingStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                        + 272);
  awd::metrics::LocationAccessory_DeviceChargingStats::MergeFrom(v73, v74);
  int v51 = *((_DWORD *)a2 + 88);
  if ((v51 & 0x10) == 0)
  {
LABEL_115:
    if ((v51 & 0x20) == 0) {
      goto LABEL_116;
    }
    goto LABEL_177;
  }
LABEL_172:
  *((_DWORD *)this + 88) |= 0x10u;
  int v75 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 35);
  if (!v75) {
    operator new();
  }
  int v76 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 35);
  if (!v76) {
    int v76 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 280);
  }
  awd::metrics::LocationAccessory_Statistics::MergeFrom(v75, v76);
  int v51 = *((_DWORD *)a2 + 88);
  if ((v51 & 0x20) == 0)
  {
LABEL_116:
    if ((v51 & 0x40) == 0) {
      goto LABEL_117;
    }
    goto LABEL_182;
  }
LABEL_177:
  *((_DWORD *)this + 88) |= 0x20u;
  int v77 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 36);
  if (!v77) {
    operator new();
  }
  int v78 = (const awd::metrics::LocationAccessory_Statistics *)*((void *)a2 + 36);
  if (!v78) {
    int v78 = *(const awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 288);
  }
  awd::metrics::LocationAccessory_Statistics::MergeFrom(v77, v78);
  int v51 = *((_DWORD *)a2 + 88);
  if ((v51 & 0x40) == 0)
  {
LABEL_117:
    if ((v51 & 0x80) == 0) {
      goto LABEL_119;
    }
    goto LABEL_118;
  }
LABEL_182:
  int v79 = *((_DWORD *)a2 + 74);
  *((_DWORD *)this + 88) |= 0x40u;
  *((_DWORD *)this + 74) = v79;
  int v51 = *((_DWORD *)a2 + 88);
  if ((v51 & 0x80) != 0)
  {
LABEL_118:
    int v52 = *((_DWORD *)a2 + 75);
    *((_DWORD *)this + 88) |= 0x80u;
    *((_DWORD *)this + 75) = v52;
    int v51 = *((_DWORD *)a2 + 88);
  }
LABEL_119:
  if ((v51 & 0x1FE00) != 0)
  {
    if ((v51 & 0x200) != 0)
    {
      unsigned int v53 = (const std::string *)*((void *)a2 + 41);
      *((_DWORD *)this + 88) |= 0x200u;
      unsigned int v54 = (std::string *)*((void *)this + 41);
      if (v54 == v4) {
        operator new();
      }
      std::string::operator=(v54, v53);
      int v51 = *((_DWORD *)a2 + 88);
    }
    if ((v51 & 0x400) != 0)
    {
      unsigned int v55 = (const std::string *)*((void *)a2 + 42);
      *((_DWORD *)this + 88) |= 0x400u;
      unsigned int v56 = (std::string *)*((void *)this + 42);
      if (v56 == v4) {
        operator new();
      }
      std::string::operator=(v56, v55);
    }
  }
}

void sub_22497A820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationAccessory::~LocationAccessory(awd::metrics::LocationAccessory *this)
{
  *(void *)this = &unk_26D7BCE08;
  awd::metrics::LocationAccessory::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>((uint64_t *)this + 38);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>((uint64_t *)this + 30);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>((uint64_t *)this + 26);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>((uint64_t *)this + 22);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationAccessory::~LocationAccessory(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationAccessory::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x22A61A830](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[3];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x22A61A830](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[4];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x22A61A830](v7, 0x1012C40EC159624);
  }
  uint64_t v9 = v1[5];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (void *)MEMORY[0x22A61A830](v9, 0x1012C40EC159624);
  }
  uint64_t v11 = v1[6];
  if (v11 != v3 && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    this = (void *)MEMORY[0x22A61A830](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = v1[41];
  if (v12 != v3 && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    this = (void *)MEMORY[0x22A61A830](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = v1[42];
  if (v13 != v3 && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    this = (void *)MEMORY[0x22A61A830](v13, 0x1012C40EC159624);
  }
  if ((void *)awd::metrics::LocationAccessory::default_instance_ != v1)
  {
    uint64_t v14 = v1[10];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = v1[11];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = v1[12];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = v1[13];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = v1[14];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = v1[16];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = v1[17];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = v1[18];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = v1[19];
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = v1[20];
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = v1[34];
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = v1[35];
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    this = (void *)v1[36];
    if (this)
    {
      char v26 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v26();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationAccessory::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 344) = a2;
  return this;
}

uint64_t awd::metrics::LocationAccessory::default_instance(awd::metrics::LocationAccessory *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationAccessory::default_instance_;
  if (!awd::metrics::LocationAccessory::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationAccessory::default_instance_;
  }
  return result;
}

void awd::metrics::LocationAccessory::New(awd::metrics::LocationAccessory *this)
{
}

uint64_t awd::metrics::LocationAccessory::Clear(awd::metrics::LocationAccessory *this)
{
  uint64_t v2 = (char *)this + 348;
  unsigned int v3 = *((_DWORD *)this + 87);
  if ((_BYTE)v3)
  {
    *((void *)this + 1) = 0;
    uint64_t v4 = MEMORY[0x263F8C740];
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *((void *)this + 2);
      if (v5 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*v2 & 4) != 0)
    {
      uint64_t v6 = *((void *)this + 3);
      if (v6 != v4)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    if ((*v2 & 8) != 0)
    {
      uint64_t v7 = *((void *)this + 4);
      if (v7 != v4)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    if ((*v2 & 0x10) != 0)
    {
      uint64_t v8 = *((void *)this + 5);
      if (v8 != v4)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
    if ((*v2 & 0x20) != 0)
    {
      uint64_t v9 = *((void *)this + 6);
      if (v9 != v4)
      {
        if (*(char *)(v9 + 23) < 0)
        {
          **(unsigned char **)uint64_t v9 = 0;
          *(void *)(v9 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v9 = 0;
          *(unsigned char *)(v9 + 23) = 0;
        }
      }
    }
    *((_DWORD *)this + 14) = 0;
    *((unsigned char *)this + 60) = 0;
    unsigned int v3 = *((_DWORD *)this + 87);
  }
  if ((v3 & 0xFF00) != 0)
  {
    *((_DWORD *)this + 30) = 0;
    *((void *)this + 8) = 0;
    *((void *)this + 9) = 0;
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v10 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 10);
      if (v10)
      {
        awd::metrics::LocationAccessory_PerformanceStats::Clear(v10);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v11 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 11);
      if (v11)
      {
        awd::metrics::LocationAccessory_PerformanceStats::Clear(v11);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v12 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 12);
      if (v12)
      {
        awd::metrics::LocationAccessory_PerformanceStats::Clear(v12);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v13 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 13);
      if (v13)
      {
        awd::metrics::LocationAccessory_PerformanceStats::Clear(v13);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v14 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((void *)this + 14);
      if (v14)
      {
        awd::metrics::LocationAccessory_SpeedPerformanceStats::Clear(v14);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v15 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 16);
      if (v15)
      {
        awd::metrics::LocationAccessory_MessageStats::Clear(v15);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t v16 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 17);
      if (v16)
      {
        awd::metrics::LocationAccessory_MessageStats::Clear(v16);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t v17 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 18);
      if (v17)
      {
        awd::metrics::LocationAccessory_MessageStats::Clear(v17);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t v18 = (awd::metrics::LocationAccessory_PASCDStats *)*((void *)this + 19);
      if (v18)
      {
        awd::metrics::LocationAccessory_PASCDStats::Clear(v18);
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t v19 = *((void *)this + 20);
      if (v19)
      {
        if (*(unsigned char *)(v19 + 28))
        {
          *(void *)(v19 + 8) = 0;
          *(void *)(v19 + 16) = 0;
        }
        *(_DWORD *)(v19 + 28) = 0;
        unsigned int v3 = *(_DWORD *)v2;
      }
    }
    *((_DWORD *)this + 31) = 0;
  }
  if (HIBYTE(v3))
  {
    *((void *)this + 21) = 0;
    *((void *)this + 25) = 0;
    *((void *)this + 29) = 0;
  }
  int v20 = *((_DWORD *)this + 88);
  if ((_BYTE)v20)
  {
    *((void *)this + 33) = 0;
    if ((v20 & 8) != 0)
    {
      uint64_t v21 = *((void *)this + 34);
      if (v21)
      {
        if (*(unsigned char *)(v21 + 40)) {
          *(_DWORD *)(v21 + 32) = 0;
        }
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(v21 + 8);
        *(_DWORD *)(v21 + 40) = 0;
        int v20 = *((_DWORD *)this + 88);
      }
    }
    if ((v20 & 0x10) != 0)
    {
      uint64_t v22 = *((void *)this + 35);
      if (v22)
      {
        if (*(unsigned char *)(v22 + 36))
        {
          *(void *)(v22 + 8) = 0;
          *(void *)(v22 + 16) = 0;
          *(void *)(v22 + 24) = 0;
        }
        *(_DWORD *)(v22 + 36) = 0;
        int v20 = *((_DWORD *)this + 88);
      }
    }
    if ((v20 & 0x20) != 0)
    {
      uint64_t v23 = *((void *)this + 36);
      if (v23)
      {
        if (*(unsigned char *)(v23 + 36))
        {
          *(void *)(v23 + 8) = 0;
          *(void *)(v23 + 16) = 0;
          *(void *)(v23 + 24) = 0;
        }
        *(_DWORD *)(v23 + 36) = 0;
        int v20 = *((_DWORD *)this + 88);
      }
    }
    *((void *)this + 37) = 0;
  }
  if ((v20 & 0x1FE00) != 0)
  {
    if ((v20 & 0x200) != 0)
    {
      uint64_t v24 = *((void *)this + 41);
      if (v24 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v24 + 23) < 0)
        {
          **(unsigned char **)uint64_t v24 = 0;
          *(void *)(v24 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v24 = 0;
          *(unsigned char *)(v24 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 353) & 4) != 0)
    {
      uint64_t v25 = *((void *)this + 42);
      if (v25 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v25 + 23) < 0)
        {
          **(unsigned char **)uint64_t v25 = 0;
          *(void *)(v25 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v25 = 0;
          *(unsigned char *)(v25 + 23) = 0;
        }
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>((uint64_t)this + 176);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>((uint64_t)this + 208);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>((uint64_t)this + 240);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>((uint64_t)this + 304);
  *(void *)uint64_t v2 = 0;
  return result;
}

uint64_t awd::metrics::LocationAccessory::MergePartialFromCodedStream(awd::metrics::LocationAccessory *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v206 = (unint64_t *)((char *)this + 8);
  uint64_t v4 = (unsigned int *)((char *)this + 64);
  uint64_t v5 = (unsigned int *)((char *)this + 68);
  uint64_t v6 = (unsigned int *)((char *)this + 72);
  uint64_t v7 = (unsigned int *)((char *)this + 76);
  uint64_t v8 = (unsigned int *)((char *)this + 120);
  int v216 = (unsigned int *)((char *)this + 124);
  int v210 = (unsigned int *)((char *)this + 200);
  int v208 = (unsigned int *)((char *)this + 204);
  int v204 = (awd::metrics::LocationAccessory *)((char *)this + 208);
  int v205 = (awd::metrics::LocationAccessory *)((char *)this + 176);
  int v214 = (unsigned int *)((char *)this + 232);
  int v215 = (unsigned int *)((char *)this + 172);
  int v209 = (unsigned int *)((char *)this + 236);
  v207 = (unsigned int *)((char *)this + 264);
  uint64_t v212 = (unsigned int *)((char *)this + 168);
  int v213 = (unsigned int *)((char *)this + 268);
  uint64_t v9 = (unsigned int *)((char *)this + 296);
  int v211 = (unsigned int *)((char *)this + 300);
  int v202 = (awd::metrics::LocationAccessory *)((char *)this + 304);
  int v203 = (awd::metrics::LocationAccessory *)((char *)this + 240);
LABEL_2:
  while (2)
  {
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v206);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v206 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        int v16 = *((_DWORD *)this + 87) | 1;
        *((_DWORD *)this + 87) = v16;
        if ((unint64_t)v15 < v13 && *v15 == 18)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_104;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_96;
        }
        int v16 = *((_DWORD *)this + 87);
LABEL_104:
        *((_DWORD *)this + 87) = v16 | 2;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v44 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v44 + 1;
LABEL_110:
        *((_DWORD *)this + 87) |= 4u;
        if (*((void *)this + 3) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v45 + 1;
LABEL_116:
        *((_DWORD *)this + 87) |= 8u;
        if (*((void *)this + 4) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
LABEL_122:
        *((_DWORD *)this + 87) |= 0x10u;
        if (*((void *)this + 5) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v47 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_128:
        *((_DWORD *)this + 87) |= 0x20u;
        if (*((void *)this + 6) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v48 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v48 >= v17 || *v48 != 56) {
          continue;
        }
        uint64_t v18 = v48 + 1;
        *((void *)a2 + 1) = v18;
LABEL_134:
        unsigned int v217 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217);
          if (!result) {
            return result;
          }
          unsigned int v49 = v217;
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v18;
          int v50 = v18 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 14) = v49;
        *((_DWORD *)this + 87) |= 0x40u;
        if ((unint64_t)v50 >= v17 || *v50 != 64) {
          continue;
        }
        uint64_t v19 = v50 + 1;
        *((void *)a2 + 1) = v19;
LABEL_142:
        unsigned int v217 = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217);
          if (!result) {
            return result;
          }
          unsigned int v51 = v217;
          int v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v51 = *v19;
          int v52 = v19 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((unsigned char *)this + 60) = v51 != 0;
        *((_DWORD *)this + 87) |= 0x80u;
        if ((unint64_t)v52 >= v17 || *v52 != 72) {
          continue;
        }
        int v20 = v52 + 1;
        *((void *)a2 + 1) = v20;
LABEL_150:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v53 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v20;
          unsigned int v53 = v20 + 1;
          *((void *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 87) |= 0x100u;
        if ((unint64_t)v53 >= v17 || *v53 != 80) {
          continue;
        }
        uint64_t v21 = v53 + 1;
        *((void *)a2 + 1) = v21;
LABEL_158:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v54 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v21;
          unsigned int v54 = v21 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 87) |= 0x200u;
        if ((unint64_t)v54 >= v17 || *v54 != 88) {
          continue;
        }
        uint64_t v22 = v54 + 1;
        *((void *)a2 + 1) = v22;
LABEL_166:
        if ((unint64_t)v22 >= v17 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v55 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v22;
          unsigned int v55 = v22 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 87) |= 0x400u;
        if ((unint64_t)v55 >= v17 || *v55 != 96) {
          continue;
        }
        uint64_t v23 = v55 + 1;
        *((void *)a2 + 1) = v23;
LABEL_174:
        if ((unint64_t)v23 >= v17 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v56 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v23;
          unsigned int v56 = v23 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 87) |= 0x800u;
        if ((unint64_t)v56 >= v17 || *v56 != 104) {
          continue;
        }
        uint64_t v24 = v56 + 1;
        *((void *)a2 + 1) = v24;
LABEL_182:
        if ((unint64_t)v24 >= v17 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          unsigned int v57 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v24;
          unsigned int v57 = v24 + 1;
          *((void *)a2 + 1) = v57;
        }
        int v25 = *((_DWORD *)this + 87) | 0x1000;
        *((_DWORD *)this + 87) = v25;
        if ((unint64_t)v57 >= v17 || *v57 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v57 + 1;
LABEL_190:
        *((_DWORD *)this + 87) = v25 | 0x2000;
        uint64_t v58 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 10);
        if (!v58) {
          operator new();
        }
        unsigned int v217 = 0;
        uint64_t v59 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v59 >= *((void *)a2 + 2) || *v59 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v59;
          *((void *)a2 + 1) = v59 + 1;
        }
        int v60 = *((_DWORD *)a2 + 14);
        int v61 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v60 + 1;
        if (v60 >= v61) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(v58, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v62 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v62, 1);
        int v64 = v62 - 1;
        if (v64 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v64;
        }
        int v65 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v65 + 1;
LABEL_204:
        *((_DWORD *)this + 87) |= 0x4000u;
        int v66 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 11);
        if (!v66) {
          operator new();
        }
        unsigned int v217 = 0;
        int v67 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v67;
          *((void *)a2 + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)a2 + 14);
        int v69 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(v66, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v70 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v70, 1);
        int v71 = v70 - 1;
        if (v71 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v71;
        }
        int v72 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v72 <= 1 || *v72 != 130 || v72[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v72 + 2;
LABEL_219:
        *((_DWORD *)this + 87) |= 0x8000u;
        v73 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 12);
        if (!v73) {
          operator new();
        }
        unsigned int v217 = 0;
        int v74 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v74 >= *((void *)a2 + 2) || *v74 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v74;
          *((void *)a2 + 1) = v74 + 1;
        }
        int v75 = *((_DWORD *)a2 + 14);
        int v76 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v75 + 1;
        if (v75 >= v76) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(v73, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v77 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v78;
        }
        int v79 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v79 <= 1 || *v79 != 138 || v79[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v79 + 2;
LABEL_234:
        *((_DWORD *)this + 87) |= 0x10000u;
        int v80 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 13);
        if (!v80) {
          operator new();
        }
        unsigned int v217 = 0;
        int v81 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v81 >= *((void *)a2 + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v81;
          *((void *)a2 + 1) = v81 + 1;
        }
        int v82 = *((_DWORD *)a2 + 14);
        int v83 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v82 + 1;
        if (v82 >= v83) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PerformanceStats::MergePartialFromCodedStream(v80, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v84 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v84, 1);
        int v85 = v84 - 1;
        if (v85 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v85;
        }
        int v86 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v86 <= 1 || *v86 != 146 || v86[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v86 + 2;
LABEL_249:
        *((_DWORD *)this + 87) |= 0x20000u;
        unsigned int v87 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((void *)this + 14);
        if (!v87) {
          operator new();
        }
        unsigned int v217 = 0;
        int v88 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v88 >= *((void *)a2 + 2) || *v88 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v88;
          *((void *)a2 + 1) = v88 + 1;
        }
        int v89 = *((_DWORD *)a2 + 14);
        int v90 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v89 + 1;
        if (v89 >= v90) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_SpeedPerformanceStats::MergePartialFromCodedStream(v87, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v91 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v91, 1);
        int v92 = v91 - 1;
        if (v92 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v92;
        }
        int v93 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v93 <= 1 || *v93 != 154 || v93[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v93 + 2;
LABEL_264:
        *((_DWORD *)this + 87) |= 0x40000u;
        int v94 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 16);
        if (!v94) {
          operator new();
        }
        unsigned int v217 = 0;
        int v95 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v95 >= *((void *)a2 + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v95;
          *((void *)a2 + 1) = v95 + 1;
        }
        int v96 = *((_DWORD *)a2 + 14);
        int v97 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream(v94, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v98 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v98, 1);
        int v99 = v98 - 1;
        if (v99 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v99;
        }
        int v100 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v100 <= 1 || *v100 != 162 || v100[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v100 + 2;
LABEL_279:
        *((_DWORD *)this + 87) |= 0x80000u;
        int v101 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 17);
        if (!v101) {
          operator new();
        }
        unsigned int v217 = 0;
        int v102 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v102 >= *((void *)a2 + 2) || *v102 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v102;
          *((void *)a2 + 1) = v102 + 1;
        }
        int v103 = *((_DWORD *)a2 + 14);
        int v104 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v103 + 1;
        if (v103 >= v104) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream(v101, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v105 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v105, 1);
        int v106 = v105 - 1;
        if (v106 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v106;
        }
        int v107 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v107 <= 1 || *v107 != 170 || v107[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v107 + 2;
LABEL_294:
        *((_DWORD *)this + 87) |= 0x100000u;
        int v108 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 18);
        if (!v108) {
          operator new();
        }
        unsigned int v217 = 0;
        int v109 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v109 >= *((void *)a2 + 2) || *v109 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v109;
          *((void *)a2 + 1) = v109 + 1;
        }
        int v110 = *((_DWORD *)a2 + 14);
        int v111 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v110 + 1;
        if (v110 >= v111) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_MessageStats::MergePartialFromCodedStream(v108, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v112 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v112, 1);
        int v113 = v112 - 1;
        if (v113 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v113;
        }
        int v114 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v114 <= 1 || *v114 != 178 || v114[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v114 + 2;
LABEL_309:
        *((_DWORD *)this + 87) |= 0x200000u;
        int v115 = (awd::metrics::LocationAccessory_PASCDStats *)*((void *)this + 19);
        if (!v115) {
          operator new();
        }
        unsigned int v217 = 0;
        uint64_t v116 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v116 >= *((void *)a2 + 2) || *v116 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v116;
          *((void *)a2 + 1) = v116 + 1;
        }
        int v117 = *((_DWORD *)a2 + 14);
        int v118 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v117 + 1;
        if (v117 >= v118) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_PASCDStats::MergePartialFromCodedStream(v115, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v119 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v119, 1);
        int v120 = v119 - 1;
        if (v120 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v120;
        }
        int v121 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v121 <= 1 || *v121 != 186 || v121[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v121 + 2;
LABEL_324:
        *((_DWORD *)this + 87) |= 0x400000u;
        uint64_t v122 = (awd::metrics::LocationAccessory_Coordinate *)*((void *)this + 20);
        if (!v122) {
          operator new();
        }
        unsigned int v217 = 0;
        int v123 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v123 >= *((void *)a2 + 2) || *v123 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v123;
          *((void *)a2 + 1) = v123 + 1;
        }
        int v124 = *((_DWORD *)a2 + 14);
        int v125 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v124 + 1;
        if (v124 >= v125) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Coordinate::MergePartialFromCodedStream(v122, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v126 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v126, 1);
        int v127 = v126 - 1;
        if (v127 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v127;
        }
        uint64_t v128 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        if ((int)v26 - (int)v128 <= 1 || *v128 != 192 || v128[1] != 1) {
          continue;
        }
        uint64_t v27 = v128 + 2;
        *((void *)a2 + 1) = v27;
LABEL_339:
        if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v216);
          if (!result) {
            return result;
          }
          unsigned int v129 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *int v216 = *v27;
          unsigned int v129 = v27 + 1;
          *((void *)a2 + 1) = v129;
        }
        *((_DWORD *)this + 87) |= 0x800000u;
        if ((int)v26 - (int)v129 < 2 || *v129 != 200 || v129[1] != 1) {
          continue;
        }
        unint64_t v28 = v129 + 2;
        *((void *)a2 + 1) = v28;
LABEL_348:
        if ((unint64_t)v28 >= v26 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v212);
          if (!result) {
            return result;
          }
          int v130 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v212 = *v28;
          int v130 = v28 + 1;
          *((void *)a2 + 1) = v130;
        }
        *((_DWORD *)this + 87) |= 0x1000000u;
        if ((int)v26 - (int)v130 < 2 || *v130 != 210 || v130[1] != 1) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v130 + 2;
LABEL_357:
          int v131 = *((_DWORD *)this + 47);
          uint64_t v132 = *((int *)this + 46);
          if ((int)v132 >= v131)
          {
            if (v131 == *((_DWORD *)this + 48))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v205);
              int v131 = *((_DWORD *)this + 47);
            }
            *((_DWORD *)this + 47) = v131 + 1;
            operator new();
          }
          uint64_t v133 = *((void *)this + 22);
          *((_DWORD *)this + 46) = v132 + 1;
          uint64_t v134 = *(awd::metrics::LocationAccessory_LocationAppRunningTime **)(v133 + 8 * v132);
          unsigned int v217 = 0;
          v135 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v135 >= *((void *)a2 + 2) || *v135 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
          }
            }
          else
          {
            unsigned int v217 = *v135;
            *((void *)a2 + 1) = v135 + 1;
          }
          int v136 = *((_DWORD *)a2 + 14);
          int v137 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v136 + 1;
          if (v136 >= v137) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_LocationAppRunningTime::MergePartialFromCodedStream(v134, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v138 = *((_DWORD *)a2 + 14);
          BOOL v63 = __OFSUB__(v138, 1);
          int v139 = v138 - 1;
          if (v139 < 0 == v63) {
            *((_DWORD *)a2 + 14) = v139;
          }
          int v130 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v29 = *((void *)a2 + 2);
          if ((int)v29 - (int)v130 <= 1) {
            goto LABEL_2;
          }
          int v140 = *v130;
          if (v140 == 216) {
            break;
          }
          if (v140 != 210 || v130[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v130[1] != 1) {
          continue;
        }
        int v30 = v130 + 2;
        *((void *)a2 + 1) = v30;
LABEL_378:
        if ((unint64_t)v30 >= v29 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v215);
          if (!result) {
            return result;
          }
          v141 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v29 = *((void *)a2 + 2);
        }
        else
        {
          *int v215 = *v30;
          v141 = v30 + 1;
          *((void *)a2 + 1) = v141;
        }
        *((_DWORD *)this + 87) |= 0x4000000u;
        if ((int)v29 - (int)v141 < 2 || *v141 != 224 || v141[1] != 1) {
          continue;
        }
        int v31 = v141 + 2;
        *((void *)a2 + 1) = v31;
LABEL_387:
        if ((unint64_t)v31 >= v29 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v210);
          if (!result) {
            return result;
          }
          int v142 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v29 = *((void *)a2 + 2);
        }
        else
        {
          *int v210 = *v31;
          int v142 = v31 + 1;
          *((void *)a2 + 1) = v142;
        }
        *((_DWORD *)this + 87) |= 0x8000000u;
        if ((int)v29 - (int)v142 < 2 || *v142 != 232 || v142[1] != 1) {
          continue;
        }
        int v32 = v142 + 2;
        *((void *)a2 + 1) = v32;
LABEL_396:
        if ((unint64_t)v32 >= v29 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v208);
          if (!result) {
            return result;
          }
          int v143 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v29 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v208 = *v32;
          int v143 = v32 + 1;
          *((void *)a2 + 1) = v143;
        }
        *((_DWORD *)this + 87) |= 0x10000000u;
        if ((int)v29 - (int)v143 < 2 || *v143 != 242 || v143[1] != 1) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v143 + 2;
LABEL_405:
          int v144 = *((_DWORD *)this + 55);
          uint64_t v145 = *((int *)this + 54);
          if ((int)v145 >= v144)
          {
            if (v144 == *((_DWORD *)this + 56))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v204);
              int v144 = *((_DWORD *)this + 55);
            }
            *((_DWORD *)this + 55) = v144 + 1;
            operator new();
          }
          uint64_t v146 = *((void *)this + 26);
          *((_DWORD *)this + 54) = v145 + 1;
          v147 = *(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(v146 + 8 * v145);
          unsigned int v217 = 0;
          int v148 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v148 >= *((void *)a2 + 2) || *v148 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
          }
            }
          else
          {
            unsigned int v217 = *v148;
            *((void *)a2 + 1) = v148 + 1;
          }
          int v149 = *((_DWORD *)a2 + 14);
          int v150 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v149 + 1;
          if (v149 >= v150) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_NavDynamicsHistogram::MergePartialFromCodedStream(v147, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v151 = *((_DWORD *)a2 + 14);
          BOOL v63 = __OFSUB__(v151, 1);
          int v152 = v151 - 1;
          if (v152 < 0 == v63) {
            *((_DWORD *)a2 + 14) = v152;
          }
          int v143 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v33 = *((void *)a2 + 2);
          if ((int)v33 - (int)v143 <= 1) {
            goto LABEL_2;
          }
          int v153 = *v143;
          if (v153 == 248) {
            break;
          }
          if (v153 != 242 || v143[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v143[1] != 1) {
          continue;
        }
        int v34 = v143 + 2;
        *((void *)a2 + 1) = v34;
LABEL_426:
        if ((unint64_t)v34 >= v33 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v214);
          if (!result) {
            return result;
          }
          int v154 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v33 = *((void *)a2 + 2);
        }
        else
        {
          *int v214 = *v34;
          int v154 = v34 + 1;
          *((void *)a2 + 1) = v154;
        }
        *((_DWORD *)this + 87) |= 0x40000000u;
        if ((int)v33 - (int)v154 < 2 || *v154 != 128 || v154[1] != 2) {
          continue;
        }
        int v35 = v154 + 2;
        *((void *)a2 + 1) = v35;
LABEL_435:
        if ((unint64_t)v35 >= v33 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v209);
          if (!result) {
            return result;
          }
          int v155 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v33 = *((void *)a2 + 2);
        }
        else
        {
          *int v209 = *v35;
          int v155 = v35 + 1;
          *((void *)a2 + 1) = v155;
        }
        *((_DWORD *)this + 87) |= 0x80000000;
        if ((int)v33 - (int)v155 < 2 || *v155 != 136 || v155[1] != 2) {
          continue;
        }
        int v36 = v155 + 2;
        *((void *)a2 + 1) = v36;
LABEL_444:
        if ((unint64_t)v36 >= v33 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v207);
          if (!result) {
            return result;
          }
          int v156 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v33 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v207 = *v36;
          int v156 = v36 + 1;
          *((void *)a2 + 1) = v156;
        }
        *((_DWORD *)this + 88) |= 1u;
        if ((int)v33 - (int)v156 < 2 || *v156 != 146 || v156[1] != 2) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v156 + 2;
LABEL_453:
          int v157 = *((_DWORD *)this + 63);
          uint64_t v158 = *((int *)this + 62);
          if ((int)v158 >= v157)
          {
            if (v157 == *((_DWORD *)this + 64))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v203);
              int v157 = *((_DWORD *)this + 63);
            }
            *((_DWORD *)this + 63) = v157 + 1;
            operator new();
          }
          uint64_t v159 = *((void *)this + 30);
          *((_DWORD *)this + 62) = v158 + 1;
          int v160 = *(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(v159 + 8 * v158);
          unsigned int v217 = 0;
          int v161 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v161 >= *((void *)a2 + 2) || *v161 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
          }
            }
          else
          {
            unsigned int v217 = *v161;
            *((void *)a2 + 1) = v161 + 1;
          }
          int v162 = *((_DWORD *)a2 + 14);
          int v163 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v162 + 1;
          if (v162 >= v163) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergePartialFromCodedStream(v160, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v164 = *((_DWORD *)a2 + 14);
          BOOL v63 = __OFSUB__(v164, 1);
          int v165 = v164 - 1;
          if (v165 < 0 == v63) {
            *((_DWORD *)a2 + 14) = v165;
          }
          int v156 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v37 = *((void *)a2 + 2);
          if ((int)v37 - (int)v156 <= 1) {
            goto LABEL_2;
          }
          int v166 = *v156;
          if (v166 == 152) {
            break;
          }
          if (v166 != 146 || v156[1] != 2) {
            goto LABEL_2;
          }
        }
        if (v156[1] != 2) {
          continue;
        }
        int v38 = v156 + 2;
        *((void *)a2 + 1) = v38;
LABEL_474:
        if ((unint64_t)v38 >= v37 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v213);
          if (!result) {
            return result;
          }
          int v167 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v37 = *((void *)a2 + 2);
        }
        else
        {
          *int v213 = *v38;
          int v167 = v38 + 1;
          *((void *)a2 + 1) = v167;
        }
        int v39 = *((_DWORD *)this + 88) | 4;
        *((_DWORD *)this + 88) = v39;
        if ((int)v37 - (int)v167 < 2 || *v167 != 162 || v167[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v167 + 2;
LABEL_483:
        *((_DWORD *)this + 88) = v39 | 8;
        int v168 = (awd::metrics::LocationAccessory_DeviceChargingStats *)*((void *)this + 34);
        if (!v168) {
          operator new();
        }
        unsigned int v217 = 0;
        int v169 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v169 >= *((void *)a2 + 2) || *v169 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v169;
          *((void *)a2 + 1) = v169 + 1;
        }
        int v170 = *((_DWORD *)a2 + 14);
        int v171 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v170 + 1;
        if (v170 >= v171) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_DeviceChargingStats::MergePartialFromCodedStream(v168, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v172 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v172, 1);
        int v173 = v172 - 1;
        if (v173 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v173;
        }
        int v174 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v174 <= 1 || *v174 != 170 || v174[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v174 + 2;
LABEL_498:
        *((_DWORD *)this + 88) |= 0x10u;
        int v175 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 35);
        if (!v175) {
          operator new();
        }
        unsigned int v217 = 0;
        uint64_t v176 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v176 >= *((void *)a2 + 2) || *v176 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v176;
          *((void *)a2 + 1) = v176 + 1;
        }
        int v177 = *((_DWORD *)a2 + 14);
        int v178 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v177 + 1;
        if (v177 >= v178) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v175, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v179 = *((_DWORD *)a2 + 14);
        BOOL v63 = __OFSUB__(v179, 1);
        int v180 = v179 - 1;
        if (v180 < 0 == v63) {
          *((_DWORD *)a2 + 14) = v180;
        }
        int v181 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v181 <= 1 || *v181 != 178 || v181[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v181 + 2;
LABEL_513:
        *((_DWORD *)this + 88) |= 0x20u;
        uint64_t v182 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 36);
        if (!v182) {
          operator new();
        }
        unsigned int v217 = 0;
        int v183 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v183 >= *((void *)a2 + 2) || *v183 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
        }
          }
        else
        {
          unsigned int v217 = *v183;
          *((void *)a2 + 1) = v183 + 1;
        }
        int v184 = *((_DWORD *)a2 + 14);
        int v185 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v184 + 1;
        if (v184 < v185)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationAccessory_Statistics::MergePartialFromCodedStream(v182, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v186 = *((_DWORD *)a2 + 14);
              BOOL v63 = __OFSUB__(v186, 1);
              int v187 = v186 - 1;
              if (v187 < 0 == v63) {
                *((_DWORD *)a2 + 14) = v187;
              }
              uint64_t v188 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v40 = *((void *)a2 + 2);
              if ((int)v40 - (int)v188 > 1 && *v188 == 184 && v188[1] == 2)
              {
                int v41 = v188 + 2;
                *((void *)a2 + 1) = v41;
LABEL_528:
                if ((unint64_t)v41 >= v40 || (char)*v41 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                  if (!result) {
                    return result;
                  }
                  v189 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v40 = *((void *)a2 + 2);
                }
                else
                {
                  *uint64_t v9 = *v41;
                  v189 = v41 + 1;
                  *((void *)a2 + 1) = v189;
                }
                *((_DWORD *)this + 88) |= 0x40u;
                if ((int)v40 - (int)v189 >= 2 && *v189 == 192 && v189[1] == 2)
                {
                  int v42 = v189 + 2;
                  *((void *)a2 + 1) = v42;
LABEL_537:
                  if ((unint64_t)v42 >= v40 || (char)*v42 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v211);
                    if (!result) {
                      return result;
                    }
                    int v190 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v40 = *((void *)a2 + 2);
                  }
                  else
                  {
                    *int v211 = *v42;
                    int v190 = v42 + 1;
                    *((void *)a2 + 1) = v190;
                  }
                  *((_DWORD *)this + 88) |= 0x80u;
                  if ((int)v40 - (int)v190 >= 2 && *v190 == 202 && v190[1] == 2)
                  {
                    while (1)
                    {
                      *((void *)a2 + 1) = v190 + 2;
LABEL_546:
                      uint64_t v191 = *((int *)this + 78);
                      int v192 = *((_DWORD *)this + 79);
                      if ((int)v191 >= v192)
                      {
                        if (v192 == *((_DWORD *)this + 80))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v202);
                          int v192 = *((_DWORD *)this + 79);
                        }
                        *((_DWORD *)this + 79) = v192 + 1;
                        operator new();
                      }
                      uint64_t v193 = *((void *)this + 38);
                      *((_DWORD *)this + 78) = v191 + 1;
                      uint64_t v194 = *(awd::metrics::LocationAccessory_MessageHistogram **)(v193 + 8 * v191);
                      unsigned int v217 = 0;
                      int v195 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v195 >= *((void *)a2 + 2) || *v195 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v217))return 0; {
                      }
                        }
                      else
                      {
                        unsigned int v217 = *v195;
                        *((void *)a2 + 1) = v195 + 1;
                      }
                      int v196 = *((_DWORD *)a2 + 14);
                      int v197 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v196 + 1;
                      if (v196 >= v197) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationAccessory_MessageHistogram::MergePartialFromCodedStream(v194, a2)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v198 = *((_DWORD *)a2 + 14);
                      BOOL v63 = __OFSUB__(v198, 1);
                      int v199 = v198 - 1;
                      if (v199 < 0 == v63) {
                        *((_DWORD *)a2 + 14) = v199;
                      }
                      int v190 = (unsigned __int8 *)*((void *)a2 + 1);
                      if (*((_DWORD *)a2 + 4) - (int)v190 <= 1) {
                        goto LABEL_2;
                      }
                      int v200 = *v190;
                      if (v200 == 210) {
                        break;
                      }
                      if (v200 != 202 || v190[1] != 2) {
                        goto LABEL_2;
                      }
                    }
                    if (v190[1] == 2)
                    {
                      *((void *)a2 + 1) = v190 + 2;
LABEL_567:
                      *((_DWORD *)this + 88) |= 0x200u;
                      if (*((void *)this + 41) == MEMORY[0x263F8C740]) {
                        operator new();
                      }
                      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                      if (!result) {
                        return result;
                      }
                      int v201 = (unsigned __int8 *)*((void *)a2 + 1);
                      if (*((_DWORD *)a2 + 4) - (int)v201 >= 2 && *v201 == 218 && v201[1] == 2)
                      {
                        *((void *)a2 + 1) = v201 + 2;
LABEL_574:
                        *((_DWORD *)this + 88) |= 0x400u;
                        if (*((void *)this + 42) == MEMORY[0x263F8C740]) {
                          operator new();
                        }
                        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                        if (!result) {
                          return result;
                        }
                        if (*((void *)a2 + 1) == *((void *)a2 + 2)
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_110;
        }
        goto LABEL_96;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_116;
        }
        goto LABEL_96;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_122;
        }
        goto LABEL_96;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_128;
        }
        goto LABEL_96;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_134;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_142;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_150;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_158;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_166;
      case 0xCu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_174;
      case 0xDu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_182;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_96;
        }
        int v25 = *((_DWORD *)this + 87);
        goto LABEL_190;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_204;
        }
        goto LABEL_96;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_219;
        }
        goto LABEL_96;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_234;
        }
        goto LABEL_96;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_249;
        }
        goto LABEL_96;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_264;
        }
        goto LABEL_96;
      case 0x14u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_279;
        }
        goto LABEL_96;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_294;
        }
        goto LABEL_96;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_309;
        }
        goto LABEL_96;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_324;
        }
        goto LABEL_96;
      case 0x18u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        uint64_t v27 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_339;
      case 0x19u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        unint64_t v28 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_348;
      case 0x1Au:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_357;
        }
        goto LABEL_96;
      case 0x1Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_378;
      case 0x1Cu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_387;
      case 0x1Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_396;
      case 0x1Eu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_405;
        }
        goto LABEL_96;
      case 0x1Fu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v34 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v33 = *((void *)a2 + 2);
        goto LABEL_426;
      case 0x20u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v35 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v33 = *((void *)a2 + 2);
        goto LABEL_435;
      case 0x21u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v36 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v33 = *((void *)a2 + 2);
        goto LABEL_444;
      case 0x22u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_453;
        }
        goto LABEL_96;
      case 0x23u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v38 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v37 = *((void *)a2 + 2);
        goto LABEL_474;
      case 0x24u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_96;
        }
        int v39 = *((_DWORD *)this + 88);
        goto LABEL_483;
      case 0x25u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_498;
        }
        goto LABEL_96;
      case 0x26u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_513;
        }
        goto LABEL_96;
      case 0x27u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v41 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v40 = *((void *)a2 + 2);
        goto LABEL_528;
      case 0x28u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_96;
        }
        int v42 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v40 = *((void *)a2 + 2);
        goto LABEL_537;
      case 0x29u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_546;
        }
        goto LABEL_96;
      case 0x2Au:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_567;
        }
        goto LABEL_96;
      case 0x2Bu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_96;
        }
        goto LABEL_574;
      default:
        int v12 = TagFallback & 7;
LABEL_96:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationAccessory::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 348);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 348);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_61;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_72;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_75;
  }
LABEL_72:
  uint64_t v15 = *(void *)(v5 + 80);
  if (!v15) {
    uint64_t v15 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_78;
  }
LABEL_75:
  uint64_t v16 = *(void *)(v5 + 88);
  if (!v16) {
    uint64_t v16 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v17 = *(void *)(v5 + 96);
  if (!v17) {
    uint64_t v17 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_84;
  }
LABEL_81:
  uint64_t v18 = *(void *)(v5 + 104);
  if (!v18) {
    uint64_t v18 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_87;
  }
LABEL_84:
  uint64_t v19 = *(void *)(v5 + 112);
  if (!v19) {
    uint64_t v19 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_90;
  }
LABEL_87:
  uint64_t v20 = *(void *)(v5 + 128);
  if (!v20) {
    uint64_t v20 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_93;
  }
LABEL_90:
  uint64_t v21 = *(void *)(v5 + 136);
  if (!v21) {
    uint64_t v21 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_96;
  }
LABEL_93:
  uint64_t v22 = *(void *)(v5 + 144);
  if (!v22) {
    uint64_t v22 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 144);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_99;
  }
LABEL_96:
  uint64_t v23 = *(void *)(v5 + 152);
  if (!v23) {
    uint64_t v23 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 152);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_102;
  }
LABEL_99:
  uint64_t v24 = *(void *)(v5 + 160);
  if (!v24) {
    uint64_t v24 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 160);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 348);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_102:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 348) & 0x1000000) != 0) {
LABEL_26:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 168), (uint64_t)a2, a4);
LABEL_27:
  if (*(int *)(v5 + 184) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(void *)(*(void *)(v5 + 176) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 184));
  }
  int v8 = *(_DWORD *)(v5 + 348);
  if ((v8 & 0x4000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(unsigned int *)(v5 + 172), (uint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 348);
    if ((v8 & 0x8000000) == 0)
    {
LABEL_32:
      if ((v8 & 0x10000000) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
  }
  else if ((v8 & 0x8000000) == 0)
  {
    goto LABEL_32;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(unsigned int *)(v5 + 200), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 348) & 0x10000000) != 0) {
LABEL_33:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(unsigned int *)(v5 + 204), (uint64_t)a2, a4);
LABEL_34:
  if (*(int *)(v5 + 216) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(void *)(*(void *)(v5 + 208) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 216));
  }
  int v10 = *(_DWORD *)(v5 + 348);
  if ((v10 & 0x40000000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
    int v10 = *(_DWORD *)(v5 + 348);
  }
  if (v10 < 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned int *)(v5 + 236), (uint64_t)a2, a4);
  }
  if (*(unsigned char *)(v5 + 352)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, *(unsigned int *)(v5 + 264), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(void *)(*(void *)(v5 + 240) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 248));
  }
  int v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned int *)(v5 + 268), (uint64_t)a2, a4);
    int v12 = *(_DWORD *)(v5 + 352);
    if ((v12 & 8) == 0)
    {
LABEL_48:
      if ((v12 & 0x10) == 0) {
        goto LABEL_49;
      }
      goto LABEL_111;
    }
  }
  else if ((v12 & 8) == 0)
  {
    goto LABEL_48;
  }
  uint64_t v25 = *(void *)(v5 + 272);
  if (!v25) {
    uint64_t v25 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 272);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v25, a2, a4);
  int v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x10) == 0)
  {
LABEL_49:
    if ((v12 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_114;
  }
LABEL_111:
  uint64_t v26 = *(void *)(v5 + 280);
  if (!v26) {
    uint64_t v26 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 280);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v26, a2, a4);
  int v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x20) == 0)
  {
LABEL_50:
    if ((v12 & 0x40) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_114:
  uint64_t v27 = *(void *)(v5 + 288);
  if (!v27) {
    uint64_t v27 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 288);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, v27, a2, a4);
  int v12 = *(_DWORD *)(v5 + 352);
  if ((v12 & 0x40) == 0)
  {
LABEL_51:
    if ((v12 & 0x80) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_117:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 352) & 0x80) != 0) {
LABEL_52:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
LABEL_53:
  if (*(int *)(v5 + 312) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, *(void *)(*(void *)(v5 + 304) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 312));
  }
  int v14 = *(_DWORD *)(v5 + 352);
  if ((v14 & 0x200) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 352) & 0x400) == 0) {
      return this;
    }
  }
  else if ((v14 & 0x400) == 0)
  {
    return this;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t awd::metrics::LocationAccessory::ByteSize(awd::metrics::LocationAccessory *this)
{
  unsigned int v2 = *((_DWORD *)this + 87);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_67;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    unsigned int v2 = *((_DWORD *)this + 87);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    unsigned int v2 = *((_DWORD *)this + 87);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  v3 += v10 + v6 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = *((void *)this + 3);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      unsigned int v2 = *((_DWORD *)this + 87);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v17 = *((void *)this + 4);
  int v18 = *(unsigned __int8 *)(v17 + 23);
  char v19 = v18;
  uint64_t v20 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
    int v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v20 = *(void *)(v17 + 8);
    unsigned int v2 = *((_DWORD *)this + 87);
    char v19 = *(unsigned char *)(v17 + 23);
  }
  else
  {
    int v22 = 1;
  }
  if (v19 < 0) {
    int v18 = v20;
  }
  v3 += v22 + v18 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_49:
    uint64_t v29 = *((void *)this + 6);
    int v30 = *(unsigned __int8 *)(v29 + 23);
    char v31 = v30;
    uint64_t v32 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      unint64_t v33 = *(unsigned __int8 *)(v29 + 23);
    }
    else {
      unint64_t v33 = v32;
    }
    if (v33 >= 0x80)
    {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33);
      int v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v32 = *(void *)(v29 + 8);
      unsigned int v2 = *((_DWORD *)this + 87);
      char v31 = *(unsigned char *)(v29 + 23);
    }
    else
    {
      int v34 = 1;
    }
    if (v31 < 0) {
      int v30 = v32;
    }
    v3 += v34 + v30 + 1;
    if ((v2 & 0x40) == 0) {
      goto LABEL_64;
    }
    goto LABEL_58;
  }
LABEL_40:
  uint64_t v23 = *((void *)this + 5);
  int v24 = *(unsigned __int8 *)(v23 + 23);
  char v25 = v24;
  uint64_t v26 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
  }
  else {
    unint64_t v27 = v26;
  }
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v26 = *(void *)(v23 + 8);
    unsigned int v2 = *((_DWORD *)this + 87);
    char v25 = *(unsigned char *)(v23 + 23);
  }
  else
  {
    int v28 = 1;
  }
  if (v25 < 0) {
    int v24 = v26;
  }
  v3 += v28 + v24 + 1;
  if ((v2 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_20:
  if ((v2 & 0x40) != 0)
  {
LABEL_58:
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v35 & 0x80000000) != 0)
    {
      int v36 = 10;
    }
    else if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
      unsigned int v2 = *((_DWORD *)this + 87);
    }
    else
    {
      int v36 = 1;
    }
    v3 += v36 + 1;
  }
LABEL_64:
  if ((v2 & 0x80) != 0) {
    int v4 = v3 + 2;
  }
  else {
    int v4 = v3;
  }
LABEL_67:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_115;
  }
  if ((v2 & 0x100) != 0)
  {
    unint64_t v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v37 >= 0x80)
    {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      unsigned int v2 = *((_DWORD *)this + 87);
    }
    else
    {
      int v38 = 1;
    }
    v4 += v38 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_70:
      if ((v2 & 0x400) == 0) {
        goto LABEL_71;
      }
      goto LABEL_85;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_70;
  }
  int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v39 >= 0x80)
  {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v40 = 1;
  }
  v4 += v40 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_71:
    if ((v2 & 0x800) == 0) {
      goto LABEL_72;
    }
    goto LABEL_89;
  }
LABEL_85:
  int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if (v41 >= 0x80)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v42 = 1;
  }
  v4 += v42 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_72:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_93;
  }
LABEL_89:
  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v44 = 1;
  }
  v4 += v44 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_73:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_97;
  }
LABEL_93:
  unsigned int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
  if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v46 = 1;
  }
  v4 += v46 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_74:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_103;
  }
LABEL_97:
  int v47 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 10);
  if (!v47) {
    int v47 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_ + 80);
  }
  unsigned int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v47);
  int v49 = (int)v48;
  if (v48 >= 0x80) {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
  }
  else {
    int v50 = 1;
  }
  v4 += v49 + v50 + 1;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x4000) == 0)
  {
LABEL_75:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_109;
  }
LABEL_103:
  unsigned int v51 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 11);
  if (!v51) {
    unsigned int v51 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_ + 88);
  }
  int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v51);
  int v53 = (int)v52;
  if (v52 >= 0x80) {
    int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
  }
  else {
    int v54 = 1;
  }
  v4 += v53 + v54 + 1;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x8000) != 0)
  {
LABEL_109:
    unsigned int v55 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 12);
    if (!v55) {
      unsigned int v55 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
    }
                                                                 + 96);
    unsigned int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v55);
    int v57 = (int)v56;
    if (v56 >= 0x80) {
      int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
    }
    else {
      int v58 = 1;
    }
    v4 += v57 + v58 + 2;
    unsigned int v2 = *((_DWORD *)this + 87);
  }
LABEL_115:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_173;
  }
  if ((v2 & 0x10000) != 0)
  {
    uint64_t v59 = (awd::metrics::LocationAccessory_PerformanceStats *)*((void *)this + 13);
    if (!v59) {
      uint64_t v59 = *(awd::metrics::LocationAccessory_PerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
    }
                                                                 + 104);
    int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PerformanceStats::ByteSize(v59);
    int v61 = (int)v60;
    if (v60 >= 0x80) {
      int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
    }
    else {
      int v62 = 1;
    }
    v4 += v61 + v62 + 2;
    unsigned int v2 = *((_DWORD *)this + 87);
    if ((v2 & 0x20000) == 0)
    {
LABEL_118:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_119;
      }
      goto LABEL_137;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_118;
  }
  BOOL v63 = (awd::metrics::LocationAccessory_SpeedPerformanceStats *)*((void *)this + 14);
  if (!v63) {
    BOOL v63 = *(awd::metrics::LocationAccessory_SpeedPerformanceStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                    + 112);
  int v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_SpeedPerformanceStats::ByteSize(v63);
  int v65 = (int)v64;
  if (v64 >= 0x80) {
    int v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
  }
  else {
    int v66 = 1;
  }
  v4 += v65 + v66 + 2;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x40000) == 0)
  {
LABEL_119:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_143;
  }
LABEL_137:
  int v67 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 16);
  if (!v67) {
    int v67 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 128);
  }
  int v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v67);
  int v69 = (int)v68;
  if (v68 >= 0x80) {
    int v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v68);
  }
  else {
    int v70 = 1;
  }
  v4 += v69 + v70 + 2;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x80000) == 0)
  {
LABEL_120:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_149;
  }
LABEL_143:
  int v71 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 17);
  if (!v71) {
    int v71 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 136);
  }
  int v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v71);
  int v73 = (int)v72;
  if (v72 >= 0x80) {
    int v74 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72);
  }
  else {
    int v74 = 1;
  }
  v4 += v73 + v74 + 2;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x100000) == 0)
  {
LABEL_121:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_155;
  }
LABEL_149:
  int v75 = (awd::metrics::LocationAccessory_MessageStats *)*((void *)this + 18);
  if (!v75) {
    int v75 = *(awd::metrics::LocationAccessory_MessageStats **)(awd::metrics::LocationAccessory::default_instance_ + 144);
  }
  int v76 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageStats::ByteSize(v75);
  int v77 = (int)v76;
  if (v76 >= 0x80) {
    int v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v76);
  }
  else {
    int v78 = 1;
  }
  v4 += v77 + v78 + 2;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x200000) == 0)
  {
LABEL_122:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_161;
  }
LABEL_155:
  int v79 = (awd::metrics::LocationAccessory_PASCDStats *)*((void *)this + 19);
  if (!v79) {
    int v79 = *(awd::metrics::LocationAccessory_PASCDStats **)(awd::metrics::LocationAccessory::default_instance_ + 152);
  }
  int v80 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_PASCDStats::ByteSize(v79);
  int v81 = (int)v80;
  if (v80 >= 0x80) {
    int v82 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v80);
  }
  else {
    int v82 = 1;
  }
  v4 += v81 + v82 + 2;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x400000) == 0)
  {
LABEL_123:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_173;
    }
    goto LABEL_169;
  }
LABEL_161:
  uint64_t v83 = *((void *)this + 20);
  if (!v83) {
    uint64_t v83 = *(void *)(awd::metrics::LocationAccessory::default_instance_ + 160);
  }
  int v84 = *(unsigned __int8 *)(v83 + 28);
  int v85 = (v84 << 31 >> 31) & 9;
  if ((v84 & 2) != 0) {
    v85 += 9;
  }
  if (*(unsigned char *)(v83 + 28)) {
    int v86 = v85;
  }
  else {
    int v86 = 0;
  }
  *(_DWORD *)(v83 + 24) = v86;
  v4 += v86 + 3;
  unsigned int v2 = *((_DWORD *)this + 87);
  if ((v2 & 0x800000) != 0)
  {
LABEL_169:
    unsigned int v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    if (v87 >= 0x80)
    {
      int v88 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
      unsigned int v2 = *((_DWORD *)this + 87);
    }
    else
    {
      int v88 = 1;
    }
    v4 += v88 + 2;
  }
LABEL_173:
  if (!HIBYTE(v2)) {
    goto LABEL_205;
  }
  if ((v2 & 0x1000000) != 0)
  {
    int v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 42);
    if (v89 >= 0x80)
    {
      int v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v89);
      unsigned int v2 = *((_DWORD *)this + 87);
    }
    else
    {
      int v90 = 1;
    }
    v4 += v90 + 2;
    if ((v2 & 0x4000000) == 0)
    {
LABEL_176:
      if ((v2 & 0x8000000) == 0) {
        goto LABEL_177;
      }
      goto LABEL_189;
    }
  }
  else if ((v2 & 0x4000000) == 0)
  {
    goto LABEL_176;
  }
  int v91 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 43);
  if (v91 >= 0x80)
  {
    int v92 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v91);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v92 = 1;
  }
  v4 += v92 + 2;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_177:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_193;
  }
LABEL_189:
  int v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 50);
  if (v93 >= 0x80)
  {
    int v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v94 = 1;
  }
  v4 += v94 + 2;
  if ((v2 & 0x10000000) == 0)
  {
LABEL_178:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_197;
  }
LABEL_193:
  int v95 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 51);
  if (v95 >= 0x80)
  {
    int v96 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v95);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v96 = 1;
  }
  v4 += v96 + 2;
  if ((v2 & 0x40000000) == 0)
  {
LABEL_179:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_201;
  }
LABEL_197:
  int v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
  if (v97 >= 0x80)
  {
    int v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97);
    unsigned int v2 = *((_DWORD *)this + 87);
  }
  else
  {
    int v98 = 1;
  }
  v4 += v98 + 2;
  if ((v2 & 0x80000000) != 0)
  {
LABEL_201:
    int v99 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 59);
    if (v99 >= 0x80) {
      int v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v99);
    }
    else {
      int v100 = 1;
    }
    v4 += v100 + 2;
  }
LABEL_205:
  int v101 = *((_DWORD *)this + 88);
  if (!(_BYTE)v101) {
    goto LABEL_248;
  }
  if (v101)
  {
    int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 66);
    if (v102 >= 0x80)
    {
      int v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v102);
      int v101 = *((_DWORD *)this + 88);
    }
    else
    {
      int v103 = 1;
    }
    v4 += v103 + 2;
    if ((v101 & 4) == 0)
    {
LABEL_208:
      if ((v101 & 8) == 0) {
        goto LABEL_209;
      }
      goto LABEL_222;
    }
  }
  else if ((v101 & 4) == 0)
  {
    goto LABEL_208;
  }
  int v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 67);
  if (v104 >= 0x80)
  {
    int v105 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
    int v101 = *((_DWORD *)this + 88);
  }
  else
  {
    int v105 = 1;
  }
  v4 += v105 + 2;
  if ((v101 & 8) == 0)
  {
LABEL_209:
    if ((v101 & 0x10) == 0) {
      goto LABEL_210;
    }
    goto LABEL_228;
  }
LABEL_222:
  int v106 = (awd::metrics::LocationAccessory_DeviceChargingStats *)*((void *)this + 34);
  if (!v106) {
    int v106 = *(awd::metrics::LocationAccessory_DeviceChargingStats **)(awd::metrics::LocationAccessory::default_instance_
  }
                                                                   + 272);
  int v107 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_DeviceChargingStats::ByteSize(v106);
  int v108 = (int)v107;
  if (v107 >= 0x80) {
    int v109 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v107);
  }
  else {
    int v109 = 1;
  }
  v4 += v108 + v109 + 2;
  int v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x10) == 0)
  {
LABEL_210:
    if ((v101 & 0x20) == 0) {
      goto LABEL_211;
    }
    goto LABEL_234;
  }
LABEL_228:
  int v110 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 35);
  if (!v110) {
    int v110 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 280);
  }
  int v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v110);
  int v112 = (int)v111;
  if (v111 >= 0x80) {
    int v113 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v111);
  }
  else {
    int v113 = 1;
  }
  v4 += v112 + v113 + 2;
  int v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x20) == 0)
  {
LABEL_211:
    if ((v101 & 0x40) == 0) {
      goto LABEL_212;
    }
    goto LABEL_240;
  }
LABEL_234:
  int v114 = (awd::metrics::LocationAccessory_Statistics *)*((void *)this + 36);
  if (!v114) {
    int v114 = *(awd::metrics::LocationAccessory_Statistics **)(awd::metrics::LocationAccessory::default_instance_ + 288);
  }
  int v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_Statistics::ByteSize(v114);
  int v116 = (int)v115;
  if (v115 >= 0x80) {
    int v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
  }
  else {
    int v117 = 1;
  }
  v4 += v116 + v117 + 2;
  int v101 = *((_DWORD *)this + 88);
  if ((v101 & 0x40) == 0)
  {
LABEL_212:
    if ((v101 & 0x80) == 0) {
      goto LABEL_248;
    }
    goto LABEL_244;
  }
LABEL_240:
  int v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
  if (v118 >= 0x80)
  {
    int v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118);
    int v101 = *((_DWORD *)this + 88);
  }
  else
  {
    int v119 = 1;
  }
  v4 += v119 + 2;
  if ((v101 & 0x80) != 0)
  {
LABEL_244:
    int v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 75);
    if (v120 >= 0x80)
    {
      int v121 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120) + 2;
      int v101 = *((_DWORD *)this + 88);
    }
    else
    {
      int v121 = 3;
    }
    v4 += v121;
  }
LABEL_248:
  if ((v101 & 0x1FE00) != 0)
  {
    if ((v101 & 0x200) != 0)
    {
      uint64_t v122 = *((void *)this + 41);
      int v123 = *(unsigned __int8 *)(v122 + 23);
      char v124 = v123;
      uint64_t v125 = *(void *)(v122 + 8);
      if ((v123 & 0x80u) == 0) {
        unint64_t v126 = *(unsigned __int8 *)(v122 + 23);
      }
      else {
        unint64_t v126 = v125;
      }
      if (v126 >= 0x80)
      {
        int v127 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v126);
        int v123 = *(unsigned __int8 *)(v122 + 23);
        uint64_t v125 = *(void *)(v122 + 8);
        int v101 = *((_DWORD *)this + 88);
        char v124 = *(unsigned char *)(v122 + 23);
      }
      else
      {
        int v127 = 1;
      }
      if (v124 < 0) {
        int v123 = v125;
      }
      v4 += v127 + v123 + 2;
    }
    if ((v101 & 0x400) != 0)
    {
      uint64_t v128 = *((void *)this + 42);
      int v129 = *(unsigned __int8 *)(v128 + 23);
      char v130 = v129;
      uint64_t v131 = *(void *)(v128 + 8);
      if ((v129 & 0x80u) == 0) {
        unint64_t v132 = *(unsigned __int8 *)(v128 + 23);
      }
      else {
        unint64_t v132 = v131;
      }
      if (v132 >= 0x80)
      {
        int v133 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v132);
        int v129 = *(unsigned __int8 *)(v128 + 23);
        uint64_t v131 = *(void *)(v128 + 8);
        char v130 = *(unsigned char *)(v128 + 23);
      }
      else
      {
        int v133 = 1;
      }
      if (v130 < 0) {
        int v129 = v131;
      }
      v4 += v133 + v129 + 2;
    }
  }
  int v134 = *((_DWORD *)this + 46);
  int v135 = v4 + 2 * v134;
  if (v134 >= 1)
  {
    uint64_t v136 = 0;
    do
    {
      int v137 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_LocationAppRunningTime::ByteSize(*(awd::metrics::LocationAccessory_LocationAppRunningTime **)(*((void *)this + 22) + 8 * v136));
      int v138 = (int)v137;
      if (v137 >= 0x80) {
        int v139 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v137);
      }
      else {
        int v139 = 1;
      }
      v135 += v138 + v139;
      ++v136;
    }
    while (v136 < *((int *)this + 46));
  }
  int v140 = *((_DWORD *)this + 54);
  int v141 = v135 + 2 * v140;
  if (v140 >= 1)
  {
    uint64_t v142 = 0;
    do
    {
      int v143 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_NavDynamicsHistogram::ByteSize(*(awd::metrics::LocationAccessory_NavDynamicsHistogram **)(*((void *)this + 26) + 8 * v142));
      int v144 = (int)v143;
      if (v143 >= 0x80) {
        int v145 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v143);
      }
      else {
        int v145 = 1;
      }
      v141 += v144 + v145;
      ++v142;
    }
    while (v142 < *((int *)this + 54));
  }
  int v146 = *((_DWORD *)this + 62);
  int v147 = v141 + 2 * v146;
  if (v146 >= 1)
  {
    uint64_t v148 = 0;
    do
    {
      int v149 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::ByteSize(*(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram **)(*((void *)this + 30) + 8 * v148));
      int v150 = (int)v149;
      if (v149 >= 0x80) {
        int v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v149);
      }
      else {
        int v151 = 1;
      }
      v147 += v150 + v151;
      ++v148;
    }
    while (v148 < *((int *)this + 62));
  }
  int v152 = *((_DWORD *)this + 78);
  uint64_t v153 = (v147 + 2 * v152);
  if (v152 >= 1)
  {
    uint64_t v154 = 0;
    do
    {
      int v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationAccessory_MessageHistogram::ByteSize(*(awd::metrics::LocationAccessory_MessageHistogram **)(*((void *)this + 38) + 8 * v154));
      int v156 = (int)v155;
      if (v155 >= 0x80) {
        int v157 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155);
      }
      else {
        int v157 = 1;
      }
      uint64_t v153 = (v156 + v153 + v157);
      ++v154;
    }
    while (v154 < *((int *)this + 78));
  }
  *((_DWORD *)this + 86) = v153;
  return v153;
}

void awd::metrics::LocationAccessory::CheckTypeAndMergeFrom(awd::metrics::LocationAccessory *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationAccessory::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationAccessory::CopyFrom(awd::metrics::LocationAccessory *this, const awd::metrics::LocationAccessory *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationAccessory *))(*(void *)this + 32))(this);
    awd::metrics::LocationAccessory::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationAccessory::IsInitialized(awd::metrics::LocationAccessory *this)
{
  return 1;
}

uint64_t awd::metrics::LocationAccessory::Swap(uint64_t this, awd::metrics::LocationAccessory *a2)
{
  if (a2 != (awd::metrics::LocationAccessory *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    uint64_t v5 = *(void *)(this + 16);
    uint64_t v6 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    uint64_t v7 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v7;
    uint64_t v8 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    uint64_t v9 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v9;
    uint64_t v10 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v10;
    LOBYTE(v10) = *(unsigned char *)(this + 60);
    *(unsigned char *)(this + 60) = *((unsigned char *)a2 + 60);
    *((unsigned char *)a2 + 60) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 120);
    *(_DWORD *)(this + 120) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v10;
    uint64_t v11 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    uint64_t v12 = *(void *)(this + 88);
    *(void *)(this + 88) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v12;
    uint64_t v13 = *(void *)(this + 96);
    *(void *)(this + 96) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v13;
    uint64_t v14 = *(void *)(this + 104);
    *(void *)(this + 104) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v14;
    uint64_t v15 = *(void *)(this + 112);
    *(void *)(this + 112) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v15;
    uint64_t v16 = *(void *)(this + 128);
    *(void *)(this + 128) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v16;
    uint64_t v17 = *(void *)(this + 136);
    *(void *)(this + 136) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v17;
    uint64_t v18 = *(void *)(this + 144);
    *(void *)(this + 144) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v18;
    uint64_t v19 = *(void *)(this + 152);
    *(void *)(this + 152) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v19;
    uint64_t v20 = *(void *)(this + 160);
    *(void *)(this + 160) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v20;
    LODWORD(v20) = *(_DWORD *)(this + 124);
    *(_DWORD *)(this + 124) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v20;
    LODWORD(v20) = *(_DWORD *)(this + 168);
    *(_DWORD *)(this + 168) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v20;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v21 = *(_DWORD *)(v3 + 172);
    *(_DWORD *)(v3 + 172) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v21;
    int v22 = *(_DWORD *)(v3 + 200);
    *(_DWORD *)(v3 + 200) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v22;
    int v23 = *(_DWORD *)(v3 + 204);
    *(_DWORD *)(v3 + 204) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v23;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v24 = *(_DWORD *)(v3 + 232);
    *(_DWORD *)(v3 + 232) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v24;
    int v25 = *(_DWORD *)(v3 + 236);
    *(_DWORD *)(v3 + 236) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v25;
    int v26 = *(_DWORD *)(v3 + 264);
    *(_DWORD *)(v3 + 264) = *((_DWORD *)a2 + 66);
    *((_DWORD *)a2 + 66) = v26;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v27 = *(_DWORD *)(v3 + 268);
    *(_DWORD *)(v3 + 268) = *((_DWORD *)a2 + 67);
    *((_DWORD *)a2 + 67) = v27;
    uint64_t v28 = *(void *)(v3 + 272);
    *(void *)(v3 + 272) = *((void *)a2 + 34);
    *((void *)a2 + 34) = v28;
    uint64_t v29 = *(void *)(v3 + 280);
    *(void *)(v3 + 280) = *((void *)a2 + 35);
    *((void *)a2 + 35) = v29;
    uint64_t v30 = *(void *)(v3 + 288);
    *(void *)(v3 + 288) = *((void *)a2 + 36);
    *((void *)a2 + 36) = v30;
    LODWORD(v30) = *(_DWORD *)(v3 + 296);
    *(_DWORD *)(v3 + 296) = *((_DWORD *)a2 + 74);
    *((_DWORD *)a2 + 74) = v30;
    LODWORD(v30) = *(_DWORD *)(v3 + 300);
    *(_DWORD *)(v3 + 300) = *((_DWORD *)a2 + 75);
    *((_DWORD *)a2 + 75) = v30;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v31 = *(void *)(v3 + 328);
    *(void *)(v3 + 328) = *((void *)a2 + 41);
    *((void *)a2 + 41) = v31;
    uint64_t v32 = *(void *)(v3 + 336);
    *(void *)(v3 + 336) = *((void *)a2 + 42);
    *((void *)a2 + 42) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 348);
    *(_DWORD *)(v3 + 348) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 352);
    *(_DWORD *)(v3 + 352) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v32;
    LODWORD(v32) = *(_DWORD *)(v3 + 344);
    *(_DWORD *)(v3 + 344) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v32;
  }
  return this;
}

void *awd::metrics::LocationAccessory::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationAccessory");
}

double awd::metrics::BaroAltitudeCalibrationInfo::SharedCtor(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 1) = 0;
  *((void *)this + 2) = v1;
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

awd::metrics::BaroAltitudeCalibrationInfo *awd::metrics::BaroAltitudeCalibrationInfo::BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  *(void *)this = &unk_26D7BCE80;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, a2);
  return this;
}

void sub_22497EC68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v5 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((void *)this + 1) = v7;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 15) |= 2u;
  uint64_t v9 = (std::string *)*((void *)this + 2);
  if (v9 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 6) = v10;
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 15) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 15) |= 0x20u;
    *((_DWORD *)this + 9) = v13;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 15) |= 0x10u;
  *((_DWORD *)this + 8) = v12;
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 15) |= 0x40u;
  *((_DWORD *)this + 10) = v14;
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    int v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 15) |= 0x80u;
    *((_DWORD *)this + 11) = v6;
    int v5 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      float result = *((float *)a2 + 12);
      *((_DWORD *)this + 15) |= 0x100u;
      *((float *)this + 12) = result;
      int v5 = *((_DWORD *)a2 + 15);
    }
    if ((v5 & 0x200) != 0)
    {
      float result = *((float *)a2 + 13);
      *((_DWORD *)this + 15) |= 0x200u;
      *((float *)this + 13) = result;
    }
  }
  return result;
}

void sub_22497EE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::BaroAltitudeCalibrationInfo::~BaroAltitudeCalibrationInfo(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  *(void *)this = &unk_26D7BCE80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCE80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BCE80;
  awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::default_instance(awd::metrics::BaroAltitudeCalibrationInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  if (!awd::metrics::BaroAltitudeCalibrationInfo::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_Location_2eproto(0, a2, a3, a4);
    return awd::metrics::BaroAltitudeCalibrationInfo::default_instance_;
  }
  return result;
}

void awd::metrics::BaroAltitudeCalibrationInfo::New(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
    int v1 = *(_DWORD *)(this + 60);
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::MergePartialFromCodedStream(awd::metrics::BaroAltitudeCalibrationInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 24);
  int v6 = (unsigned int *)((char *)this + 28);
  uint64_t v7 = (unsigned int *)((char *)this + 32);
  uint64_t v8 = (unsigned int *)((char *)this + 36);
  uint64_t v9 = (unsigned int *)((char *)this + 40);
  int v10 = (unsigned int *)((char *)this + 44);
  uint64_t v11 = MEMORY[0x263F8C740];
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
        }
        int v18 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v18;
        if ((unint64_t)v17 < v15 && *v17 == 18)
        {
          *((void *)a2 + 1) = v17 + 1;
          goto LABEL_38;
        }
        continue;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_30;
        }
        int v18 = *((_DWORD *)this + 15);
LABEL_38:
        *((_DWORD *)this + 15) = v18 | 2;
        if (*((void *)this + 2) == v11) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v19 || *v27 != 24) {
          continue;
        }
        uint64_t v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_44:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v20;
          uint64_t v28 = v20 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 15) |= 4u;
        if ((unint64_t)v28 >= v19 || *v28 != 32) {
          continue;
        }
        int v21 = v28 + 1;
        *((void *)a2 + 1) = v21;
LABEL_52:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v21;
          uint64_t v29 = v21 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 15) |= 8u;
        if ((unint64_t)v29 >= v19 || *v29 != 40) {
          continue;
        }
        int v22 = v29 + 1;
        *((void *)a2 + 1) = v22;
LABEL_60:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v22;
          uint64_t v30 = v22 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        if ((unint64_t)v30 >= v19 || *v30 != 48) {
          continue;
        }
        int v23 = v30 + 1;
        *((void *)a2 + 1) = v23;
LABEL_68:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v23;
          uint64_t v31 = v23 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if ((unint64_t)v31 >= v19 || *v31 != 56) {
          continue;
        }
        int v24 = v31 + 1;
        *((void *)a2 + 1) = v24;
LABEL_76:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v9 = *v24;
          uint64_t v32 = v24 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 15) |= 0x40u;
        if ((unint64_t)v32 >= v19 || *v32 != 64) {
          continue;
        }
        int v25 = v32 + 1;
        *((void *)a2 + 1) = v25;
LABEL_84:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          unint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v25;
          unint64_t v33 = v25 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 15) |= 0x80u;
        if ((unint64_t)v33 >= v19 || *v33 != 77) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_92:
        unsigned int v36 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v36) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v36;
        *((_DWORD *)this + 15) |= 0x100u;
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 85) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_96:
        unsigned int v35 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v35))
        {
          *((_DWORD *)this + 13) = v35;
          *((_DWORD *)this + 15) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_44;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_52;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_60;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_68;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_76;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_84;
      case 9u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_92;
        }
        goto LABEL_30;
      case 0xAu:
        int v14 = TagFallback & 7;
        if (v14 != 5) {
          goto LABEL_30;
        }
        goto LABEL_96;
      default:
        int v14 = TagFallback & 7;
LABEL_30:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
    if ((*(_DWORD *)(v5 + 60) & 0x200) == 0) {
      return this;
    }
    goto LABEL_21;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_21:
  float v7 = *(float *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v7, a3);
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::ByteSize(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  int v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    unsigned int v3 = 0;
    goto LABEL_47;
  }
  if (v2)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *((void *)this + 2);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 15);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v19 = 2;
  }
  v3 += v19;
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v21 = 2;
    }
    v3 += v21;
  }
LABEL_47:
  unsigned int v22 = v3 + 5;
  if ((v2 & 0x100) == 0) {
    unsigned int v22 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v22 += 5;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v22;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 14) = result;
  return result;
}

float awd::metrics::BaroAltitudeCalibrationInfo::CheckTypeAndMergeFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, lpsrc);
}

float awd::metrics::BaroAltitudeCalibrationInfo::CopyFrom(awd::metrics::BaroAltitudeCalibrationInfo *this, const awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::BaroAltitudeCalibrationInfo *))(*(void *)this + 32))(this);
    return awd::metrics::BaroAltitudeCalibrationInfo::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::IsInitialized(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  return 1;
}

float awd::metrics::BaroAltitudeCalibrationInfo::Swap(awd::metrics::BaroAltitudeCalibrationInfo *this, awd::metrics::BaroAltitudeCalibrationInfo *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    int v5 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    float result = *((float *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((float *)a2 + 13) = result;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return result;
}

void *awd::metrics::BaroAltitudeCalibrationInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.BaroAltitudeCalibrationInfo");
}

uint64_t awd::metrics::LocationServicesState::GetCachedSize(awd::metrics::LocationServicesState *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationServicesApproval::GetCachedSize(awd::metrics::LocationServicesApproval *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationUpdateSession::GetCachedSize(awd::metrics::LocationUpdateSession *this)
{
  return *((unsigned int *)this + 33);
}

uint64_t awd::metrics::LocationMonitorSession::GetCachedSize(awd::metrics::LocationMonitorSession *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMonitorTrigger::GetCachedSize(awd::metrics::LocationMonitorTrigger *this)
{
  return *((unsigned int *)this + 15);
}

uint64_t awd::metrics::LocationNetworkQueries::GetCachedSize(awd::metrics::LocationNetworkQueries *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t awd::metrics::LocationWifiUsage::GetCachedSize(awd::metrics::LocationWifiUsage *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationEmergencySession::GetCachedSize(awd::metrics::LocationEmergencySession *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationEmergencySessionStatistics::GetCachedSize(awd::metrics::LocationEmergencySessionStatistics *this)
{
  return *((unsigned int *)this + 117);
}

uint64_t awd::metrics::LocationMapMatching::GetCachedSize(awd::metrics::LocationMapMatching *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationRealTimeHarvest::GetCachedSize(awd::metrics::LocationRealTimeHarvest *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationSecondaryDeviceRequest::GetCachedSize(awd::metrics::LocationSecondaryDeviceRequest *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::CompassSession_Rotation::GetCachedSize(awd::metrics::CompassSession_Rotation *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::CompassSession::GetCachedSize(awd::metrics::CompassSession *this)
{
  return *((unsigned int *)this + 52);
}

uint64_t awd::metrics::LocationCompassSaturations::GetCachedSize(awd::metrics::LocationCompassSaturations *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::MotionState::GetCachedSize(awd::metrics::MotionState *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionTrigger::GetCachedSize(awd::metrics::MotionTrigger *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::MotionGyroMiniCal::GetCachedSize(awd::metrics::MotionGyroMiniCal *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::MotionDropDetection::GetCachedSize(awd::metrics::MotionDropDetection *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::MotionPedometerCalibration::GetCachedSize(awd::metrics::MotionPedometerCalibration *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::MotionGyroBiasEstimation_EndCount::GetCachedSize(awd::metrics::MotionGyroBiasEstimation_EndCount *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionGyroBiasEstimation::GetCachedSize(awd::metrics::MotionGyroBiasEstimation *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t awd::metrics::MotionFitnessSession::GetCachedSize(awd::metrics::MotionFitnessSession *this)
{
  return *((unsigned int *)this + 112);
}

uint64_t awd::metrics::MotionFitnessAllDay::GetCachedSize(awd::metrics::MotionFitnessAllDay *this)
{
  return *((unsigned int *)this + 216);
}

uint64_t awd::metrics::MotionPressureTemperature::GetCachedSize(awd::metrics::MotionPressureTemperature *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t awd::metrics::MotionElevationAllDay::GetCachedSize(awd::metrics::MotionElevationAllDay *this)
{
  return *((unsigned int *)this + 82);
}

uint64_t awd::metrics::MotionPressureStats::GetCachedSize(awd::metrics::MotionPressureStats *this)
{
  return *((unsigned int *)this + 38);
}

uint64_t awd::metrics::MotionNoGPSRunAllDay::GetCachedSize(awd::metrics::MotionNoGPSRunAllDay *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::MotionFitnessDaily::GetCachedSize(awd::metrics::MotionFitnessDaily *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t awd::metrics::MotionFitnessPedometer::GetCachedSize(awd::metrics::MotionFitnessPedometer *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::MotionFitnessStrideCalibration::GetCachedSize(awd::metrics::MotionFitnessStrideCalibration *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::MotionFitnessAccelSampleRate::GetCachedSize(awd::metrics::MotionFitnessAccelSampleRate *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::MotionBarometerCalibration::GetCachedSize(awd::metrics::MotionBarometerCalibration *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::MotionGyroDaily::GetCachedSize(awd::metrics::MotionGyroDaily *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::MotionSOSEvent::GetCachedSize(awd::metrics::MotionSOSEvent *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationBatteryState::GetCachedSize(awd::metrics::LocationBatteryState *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationNavigationSession::GetCachedSize(awd::metrics::LocationNavigationSession *this)
{
  return *((unsigned int *)this + 23);
}

uint64_t awd::metrics::LocationMainHarvesterMetrics::GetCachedSize(awd::metrics::LocationMainHarvesterMetrics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationSubHarvesterUploadAttempt::GetCachedSize(awd::metrics::LocationSubHarvesterUploadAttempt *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationSubHarvesterMetrics::GetCachedSize(awd::metrics::LocationSubHarvesterMetrics *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::LocationBeaconMonitorSession::GetCachedSize(awd::metrics::LocationBeaconMonitorSession *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::LocationBeaconMonitorTrigger::GetCachedSize(awd::metrics::LocationBeaconMonitorTrigger *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationBeaconRangingSession::GetCachedSize(awd::metrics::LocationBeaconRangingSession *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MotionActivityData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MotionActivityData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MountedStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MountedStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_MovingStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_MovingStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerStateData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_PowerStateData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChecksumData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ChecksumData *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ChargerTypeData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_ThermalLevelData *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_NSForceOffReason *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_NSOnOffState::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_NSOnOffState *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::GetCachedSize(awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationGPSSessionStatistics::GetCachedSize(awd::metrics::LocationGPSSessionStatistics *this)
{
  return *((unsigned int *)this + 339);
}

uint64_t awd::metrics::LocationCellTileUsage::GetCachedSize(awd::metrics::LocationCellTileUsage *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationGnssSWRecoveryStatistics::GetCachedSize(awd::metrics::LocationGnssSWRecoveryStatistics *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationVisibilityAssertion::GetCachedSize(awd::metrics::LocationVisibilityAssertion *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationPhoneNumberAvailability::GetCachedSize(awd::metrics::LocationPhoneNumberAvailability *this)
{
  return *((unsigned int *)this + 13);
}

uint64_t awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::GetCachedSize(awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMobileAssetStatistics::GetCachedSize(awd::metrics::LocationMobileAssetStatistics *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t awd::metrics::LocationEmergencyPOIStatistics::GetCachedSize(awd::metrics::LocationEmergencyPOIStatistics *this)
{
  return *((unsigned int *)this + 27);
}

uint64_t awd::metrics::LocationAccessory_ChargingTypeHistogram::GetCachedSize(awd::metrics::LocationAccessory_ChargingTypeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_DeviceChargingStats::GetCachedSize(awd::metrics::LocationAccessory_DeviceChargingStats *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationAccessory_Statistics::GetCachedSize(awd::metrics::LocationAccessory_Statistics *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationAccessory_PerfRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_PerfRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PerformanceStats::GetCachedSize(awd::metrics::LocationAccessory_PerformanceStats *this)
{
  return *((unsigned int *)this + 23);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_SpeedPerfRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_SpeedPerformanceStats::GetCachedSize(awd::metrics::LocationAccessory_SpeedPerformanceStats *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationAccessory_LatencyRangeHistogram::GetCachedSize(awd::metrics::LocationAccessory_LatencyRangeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_MessageHistogram::GetCachedSize(awd::metrics::LocationAccessory_MessageHistogram *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationAccessory_MessageStats::GetCachedSize(awd::metrics::LocationAccessory_MessageStats *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::GetCachedSize(awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_LocationAppRunningTime::GetCachedSize(awd::metrics::LocationAccessory_LocationAppRunningTime *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationAccessory_NavDynamicsHistogram::GetCachedSize(awd::metrics::LocationAccessory_NavDynamicsHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDRavenUsageStats::GetCachedSize(awd::metrics::LocationAccessory_PASCDRavenUsageStats *this)
{
  return *((unsigned int *)this + 19);
}

uint64_t awd::metrics::LocationAccessory_PASCDTransmissionHistogram::GetCachedSize(awd::metrics::LocationAccessory_PASCDTransmissionHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::GetCachedSize(awd::metrics::LocationAccessory_PASCDSampleSizeHistogram *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationAccessory_PASCDStats::GetCachedSize(awd::metrics::LocationAccessory_PASCDStats *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationAccessory_Coordinate::GetCachedSize(awd::metrics::LocationAccessory_Coordinate *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t awd::metrics::LocationAccessory::GetCachedSize(awd::metrics::LocationAccessory *this)
{
  return *((unsigned int *)this + 86);
}

uint64_t awd::metrics::BaroAltitudeCalibrationInfo::GetCachedSize(awd::metrics::BaroAltitudeCalibrationInfo *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v2 = (unsigned __int8 *)*((void *)this + 1);
  if ((unint64_t)v2 >= *((void *)this + 2) || (char)*v2 < 0) {
    return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a2);
  }
  *a2 = *v2;
  *((void *)this + 1) = v2 + 1;
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<float>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      uint64_t v2 = *(void *)(*(void *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      float result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    char v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    char v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2646E5B28, MEMORY[0x263F8C060]);
}

void sub_224980DD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  float result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  if (a1[3] >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < a1[3]);
  }
  uint64_t result = *(void *)a1;
  if (*(void *)a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<unsigned int>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationBatteryState>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSubHarvesterUploadAttempt>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MotionActivityData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MovingStateData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_MountedStateData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChecksumData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerStateData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ChargerTypeData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_ThermalLevelData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSForceOffReason>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_NSOnOffState>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_ChargingTypeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PerfRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_SpeedPerfRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LatencyRangeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDTransmissionHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_PASCDSampleSizeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_LocationAppRunningTime>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NavDynamicsHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationAccessory_MessageHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void OUTLINED_FUNCTION_0()
{
  JUMPOUT(0x22A61A810);
}

uint64_t awd::metrics::protobuf_ShutdownFile_LocationAlsCacheTiles_2eproto(awd::metrics *this)
{
  if (awd::metrics::LocationTilesUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationTilesUsage::default_instance_ + 8))(awd::metrics::LocationTilesUsage::default_instance_);
  }
  if (awd::metrics::LocationALSCacheUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationALSCacheUsage::default_instance_ + 8))(awd::metrics::LocationALSCacheUsage::default_instance_);
  }
  if (awd::metrics::LocationALSNetworkUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationALSNetworkUsage::default_instance_ + 8))(awd::metrics::LocationALSNetworkUsage::default_instance_);
  }
  if (awd::metrics::LocationSessionDay::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationSessionDay::default_instance_ + 8))(awd::metrics::LocationSessionDay::default_instance_);
  }
  if (awd::metrics::LocationTileFileUsage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationTileFileUsage::default_instance_ + 8))(awd::metrics::LocationTileFileUsage::default_instance_);
  }
  if (awd::metrics::LocationTileFile::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationTileFile::default_instance_ + 8))(awd::metrics::LocationTileFile::default_instance_);
  }
  if (awd::metrics::LocationWifiAPLocationProviderSession::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationWifiAPLocationProviderSession::default_instance_
  }
                                    + 8))(awd::metrics::LocationWifiAPLocationProviderSession::default_instance_);
  uint64_t result = awd::metrics::LocationWifiTileSync::default_instance_;
  if (awd::metrics::LocationWifiTileSync::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)awd::metrics::LocationWifiTileSync::default_instance_ + 8);
    return v2();
  }
  return result;
}

void awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/LocationAlsCacheTiles.pb.cc", a4);
    operator new();
  }
}

uint64_t awd::metrics::LocationTilesUsage::LocationTilesUsage(uint64_t this)
{
  *(void *)this = &unk_26D7BD7B0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BD7B0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double awd::metrics::LocationALSCacheUsage::LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this)
{
  *(void *)this = &unk_26D7BD828;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BD828;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double awd::metrics::LocationALSNetworkUsage::LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this)
{
  *(void *)this = &unk_26D7BD8A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BD8A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double awd::metrics::LocationSessionDay::LocationSessionDay(awd::metrics::LocationSessionDay *this)
{
  *(void *)this = &unk_26D7BD918;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BD918;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

double awd::metrics::LocationTileFileUsage::LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this)
{
  *(void *)this = &unk_26D7BD990;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BD990;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0;
  return result;
}

uint64_t awd::metrics::LocationTileFile::LocationTileFile(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)this = &unk_26D7BDA08;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)this = &unk_26D7BDA08;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::LocationWifiAPLocationProviderSession(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(void *)this = &unk_26D7BDA80;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(void *)this = &unk_26D7BDA80;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double awd::metrics::LocationWifiTileSync::LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this)
{
  *(void *)this = &unk_26D7BDAF8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDAF8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

void awd::metrics::LocationSessionDay::InitAsDefaultInstance(awd::metrics::LocationSessionDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationTilesUsage::default_instance_;
  if (!awd::metrics::LocationTilesUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationTilesUsage::default_instance_;
  }
  *((void *)this + 6) = v5;
  uint64_t v6 = awd::metrics::LocationALSCacheUsage::default_instance_;
  if (!awd::metrics::LocationALSCacheUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    uint64_t v6 = awd::metrics::LocationALSCacheUsage::default_instance_;
  }
  *((void *)this + 7) = v6;
  uint64_t v7 = awd::metrics::LocationALSNetworkUsage::default_instance_;
  if (!awd::metrics::LocationALSNetworkUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(this, a2, a3, a4);
    uint64_t v7 = awd::metrics::LocationALSNetworkUsage::default_instance_;
  }
  *((void *)this + 8) = v7;
}

uint64_t awd::metrics::LocationTilesUsage::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationTilesUsage *awd::metrics::LocationTilesUsage::LocationTilesUsage(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  *(void *)this = &unk_26D7BD7B0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  awd::metrics::LocationTilesUsage::MergeFrom(this, a2);
  return this;
}

void sub_224982B98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTilesUsage::MergeFrom(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v4 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 4) |= 1u;
    *((_DWORD *)this + 2) = v4;
  }
}

void sub_224982C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTilesUsage::~LocationTilesUsage(awd::metrics::LocationTilesUsage *this)
{
  *(void *)this = &unk_26D7BD7B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BD7B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BD7B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationTilesUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::default_instance(awd::metrics::LocationTilesUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationTilesUsage::default_instance_;
  if (!awd::metrics::LocationTilesUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTilesUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationTilesUsage::New(awd::metrics::LocationTilesUsage *this)
{
}

uint64_t awd::metrics::LocationTilesUsage::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 16)) {
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::MergePartialFromCodedStream(awd::metrics::LocationTilesUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v8 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!result) {
          return result;
        }
        int v9 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
      }
      else
      {
        *int v4 = *v8;
        int v9 = (unsigned __int8 *)(v8 + 1);
        *((void *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t awd::metrics::LocationTilesUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationTilesUsage::ByteSize(awd::metrics::LocationTilesUsage *this)
{
  if (*((unsigned char *)this + 16))
  {
    int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v3 >= 0x80) {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 3) = result;
  return result;
}

void awd::metrics::LocationTilesUsage::CheckTypeAndMergeFrom(awd::metrics::LocationTilesUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationTilesUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTilesUsage::CopyFrom(awd::metrics::LocationTilesUsage *this, const awd::metrics::LocationTilesUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTilesUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationTilesUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTilesUsage::IsInitialized(awd::metrics::LocationTilesUsage *this)
{
  return 1;
}

awd::metrics::LocationTilesUsage *awd::metrics::LocationTilesUsage::Swap(awd::metrics::LocationTilesUsage *this, awd::metrics::LocationTilesUsage *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

void *awd::metrics::LocationTilesUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTilesUsage");
}

double awd::metrics::LocationALSCacheUsage::SharedCtor(awd::metrics::LocationALSCacheUsage *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationALSCacheUsage *awd::metrics::LocationALSCacheUsage::LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  *(void *)this = &unk_26D7BD828;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  awd::metrics::LocationALSCacheUsage::MergeFrom(this, a2);
  return this;
}

void sub_2249830E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSCacheUsage::MergeFrom(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 44))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 11) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_20:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x40u;
    *((_DWORD *)this + 8) = v12;
    if ((*((_DWORD *)a2 + 11) & 0x80) == 0) {
      return;
    }
LABEL_12:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_22498326C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSCacheUsage::~LocationALSCacheUsage(awd::metrics::LocationALSCacheUsage *this)
{
  *(void *)this = &unk_26D7BD828;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BD828;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BD828;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationALSCacheUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationALSCacheUsage::default_instance(awd::metrics::LocationALSCacheUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationALSCacheUsage::default_instance_;
  if (!awd::metrics::LocationALSCacheUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationALSCacheUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationALSCacheUsage::New(awd::metrics::LocationALSCacheUsage *this)
{
}

uint64_t awd::metrics::LocationALSCacheUsage::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationALSCacheUsage::MergePartialFromCodedStream(awd::metrics::LocationALSCacheUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 12);
  int v6 = (unsigned int *)((char *)this + 16);
  int v7 = (unsigned int *)((char *)this + 20);
  int v8 = (unsigned int *)((char *)this + 24);
  int v9 = (unsigned int *)((char *)this + 28);
  int v10 = (unsigned int *)((char *)this + 32);
  int v11 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *int v4 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_32:
          *((_DWORD *)this + 11) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_35:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v18;
          int v25 = v18 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v25 >= v15 || *v25 != 24) {
          continue;
        }
        int v19 = v25 + 1;
        *((void *)a2 + 1) = v19;
LABEL_43:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v19;
          int v26 = v19 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v26 >= v15 || *v26 != 32) {
          continue;
        }
        uint64_t v20 = v26 + 1;
        *((void *)a2 + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v20;
          int v27 = v20 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v27 >= v15 || *v27 != 40) {
          continue;
        }
        int v21 = v27 + 1;
        *((void *)a2 + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v21;
          uint64_t v28 = v21 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v28 >= v15 || *v28 != 48) {
          continue;
        }
        unsigned int v22 = v28 + 1;
        *((void *)a2 + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v22;
          uint64_t v29 = v22 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 11) |= 0x20u;
        if ((unint64_t)v29 >= v15 || *v29 != 56) {
          continue;
        }
        int v23 = v29 + 1;
        *((void *)a2 + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v23;
          uint64_t v30 = v23 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 11) |= 0x40u;
        if ((unint64_t)v30 >= v15 || *v30 != 64) {
          continue;
        }
        int v24 = v30 + 1;
        *((void *)a2 + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v24;
          uint64_t v31 = (unsigned __int8 *)(v24 + 1);
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 11) |= 0x80u;
        if (v31 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_43;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_51;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_59;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_67;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_75;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_83;
      default:
        int v14 = TagFallback & 7;
LABEL_26:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationALSCacheUsage::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  unsigned int v6 = this[11];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
    if ((v5[11] & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = v5[9];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationALSCacheUsage::ByteSize(awd::metrics::LocationALSCacheUsage *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_45;
  }
  if (*((unsigned char *)this + 44))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 11);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 11);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v3 = (v10 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v3 = (v12 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v3 = (v14 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v3 = (v16 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
    }
    else {
      int v18 = 2;
    }
    uint64_t v3 = (v18 + v3);
  }
LABEL_45:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationALSCacheUsage::CheckTypeAndMergeFrom(awd::metrics::LocationALSCacheUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationALSCacheUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationALSCacheUsage::CopyFrom(awd::metrics::LocationALSCacheUsage *this, const awd::metrics::LocationALSCacheUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationALSCacheUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationALSCacheUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationALSCacheUsage::IsInitialized(awd::metrics::LocationALSCacheUsage *this)
{
  return 1;
}

awd::metrics::LocationALSCacheUsage *awd::metrics::LocationALSCacheUsage::Swap(awd::metrics::LocationALSCacheUsage *this, awd::metrics::LocationALSCacheUsage *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    int v10 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v10;
    int v11 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v11;
  }
  return this;
}

void *awd::metrics::LocationALSCacheUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationALSCacheUsage");
}

double awd::metrics::LocationALSNetworkUsage::SharedCtor(awd::metrics::LocationALSNetworkUsage *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationALSNetworkUsage *awd::metrics::LocationALSNetworkUsage::LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  *(void *)this = &unk_26D7BD8A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  awd::metrics::LocationALSNetworkUsage::MergeFrom(this, a2);
  return this;
}

void sub_224983D88(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSNetworkUsage::MergeFrom(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 17);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 17) |= 1u;
    *((_DWORD *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 17) |= 2u;
  *((_DWORD *)this + 3) = v8;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 17) |= 4u;
  *((_DWORD *)this + 4) = v9;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 17) |= 8u;
  *((_DWORD *)this + 5) = v10;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    int v12 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 7) = v12;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  int v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 17) |= 0x10u;
  *((_DWORD *)this + 6) = v11;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 17) |= 0x40u;
  *((_DWORD *)this + 8) = v13;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 17) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
    int v4 = *((_DWORD *)a2 + 17);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 17) |= 0x100u;
    *((_DWORD *)this + 10) = v14;
    int v4 = *((_DWORD *)a2 + 17);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 17) |= 0x200u;
  *((_DWORD *)this + 11) = v15;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x400u;
  *((_DWORD *)this + 12) = v16;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 17) |= 0x800u;
  *((_DWORD *)this + 13) = v17;
  int v4 = *((_DWORD *)a2 + 17);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_34:
  int v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 17) |= 0x1000u;
  *((_DWORD *)this + 14) = v18;
  if ((*((_DWORD *)a2 + 17) & 0x2000) == 0) {
    return;
  }
LABEL_20:
  int v6 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 17) |= 0x2000u;
  *((_DWORD *)this + 15) = v6;
}

void sub_224983FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationALSNetworkUsage::~LocationALSNetworkUsage(awd::metrics::LocationALSNetworkUsage *this)
{
  *(void *)this = &unk_26D7BD8A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BD8A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BD8A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationALSNetworkUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t awd::metrics::LocationALSNetworkUsage::default_instance(awd::metrics::LocationALSNetworkUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationALSNetworkUsage::default_instance_;
  if (!awd::metrics::LocationALSNetworkUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationALSNetworkUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationALSNetworkUsage::New(awd::metrics::LocationALSNetworkUsage *this)
{
}

uint64_t awd::metrics::LocationALSNetworkUsage::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t awd::metrics::LocationALSNetworkUsage::MergePartialFromCodedStream(awd::metrics::LocationALSNetworkUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int v45 = (unsigned int *)((char *)this + 8);
  int v46 = (unsigned int *)((char *)this + 12);
  int v47 = (unsigned int *)((char *)this + 16);
  unsigned int v48 = (unsigned int *)((char *)this + 20);
  int v49 = (unsigned int *)((char *)this + 24);
  int v50 = (unsigned int *)((char *)this + 28);
  int v4 = (unsigned int *)((char *)this + 32);
  int v5 = (unsigned int *)((char *)this + 36);
  int v6 = (unsigned int *)((char *)this + 40);
  int v7 = (unsigned int *)((char *)this + 44);
  int v8 = (unsigned int *)((char *)this + 48);
  int v9 = (unsigned int *)((char *)this + 52);
  int v10 = (unsigned int *)((char *)this + 56);
  int v11 = (unsigned int *)((char *)this + 60);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int *v45 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_44:
          *((_DWORD *)this + 17) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_47;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_47:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v46);
          if (!result) {
            return result;
          }
          uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v46 = *v18;
          uint64_t v31 = v18 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 17) |= 2u;
        if ((unint64_t)v31 >= v15 || *v31 != 24) {
          continue;
        }
        int v19 = v31 + 1;
        *((void *)a2 + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v47);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v47 = *v19;
          uint64_t v32 = v19 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 17) |= 4u;
        if ((unint64_t)v32 >= v15 || *v32 != 32) {
          continue;
        }
        uint64_t v20 = v32 + 1;
        *((void *)a2 + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v48);
          if (!result) {
            return result;
          }
          unint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *unsigned int v48 = *v20;
          unint64_t v33 = v20 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 17) |= 8u;
        if ((unint64_t)v33 >= v15 || *v33 != 40) {
          continue;
        }
        int v21 = v33 + 1;
        *((void *)a2 + 1) = v21;
LABEL_71:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v49 = *v21;
          int v34 = v21 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 17) |= 0x10u;
        if ((unint64_t)v34 >= v15 || *v34 != 48) {
          continue;
        }
        unsigned int v22 = v34 + 1;
        *((void *)a2 + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v50);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v50 = *v22;
          unsigned int v35 = v22 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 17) |= 0x20u;
        if ((unint64_t)v35 >= v15 || *v35 != 56) {
          continue;
        }
        int v23 = v35 + 1;
        *((void *)a2 + 1) = v23;
LABEL_87:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v23;
          unsigned int v36 = v23 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v36 >= v15 || *v36 != 64) {
          continue;
        }
        int v24 = v36 + 1;
        *((void *)a2 + 1) = v24;
LABEL_95:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unint64_t v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v24;
          unint64_t v37 = v24 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 17) |= 0x80u;
        if ((unint64_t)v37 >= v15 || *v37 != 72) {
          continue;
        }
        int v25 = v37 + 1;
        *((void *)a2 + 1) = v25;
LABEL_103:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v25;
          int v38 = v25 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 17) |= 0x100u;
        if ((unint64_t)v38 >= v15 || *v38 != 80) {
          continue;
        }
        int v26 = v38 + 1;
        *((void *)a2 + 1) = v26;
LABEL_111:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v26;
          int v39 = v26 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 17) |= 0x200u;
        if ((unint64_t)v39 >= v15 || *v39 != 88) {
          continue;
        }
        int v27 = v39 + 1;
        *((void *)a2 + 1) = v27;
LABEL_119:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v27;
          int v40 = v27 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 17) |= 0x400u;
        if ((unint64_t)v40 >= v15 || *v40 != 96) {
          continue;
        }
        uint64_t v28 = v40 + 1;
        *((void *)a2 + 1) = v28;
LABEL_127:
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v28;
          int v41 = v28 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 17) |= 0x800u;
        if ((unint64_t)v41 >= v15 || *v41 != 104) {
          continue;
        }
        uint64_t v29 = v41 + 1;
        *((void *)a2 + 1) = v29;
LABEL_135:
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v29;
          int v42 = v29 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 17) |= 0x1000u;
        if ((unint64_t)v42 >= v15 || *v42 != 112) {
          continue;
        }
        uint64_t v30 = v42 + 1;
        *((void *)a2 + 1) = v30;
LABEL_143:
        if ((unint64_t)v30 >= v15 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          int v43 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v30;
          int v43 = (unsigned __int8 *)(v30 + 1);
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 17) |= 0x2000u;
        if (v43 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_55;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_63;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_71;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_79;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_87;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_95;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v26 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_119;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v28 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_127;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v29 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_135;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v30 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_143;
      default:
        int v14 = TagFallback & 7;
LABEL_38:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *awd::metrics::LocationALSNetworkUsage::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  unsigned int v6 = this[17];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], (uint64_t)a2, a4);
    if ((v5[17] & 0x2000) == 0) {
      return this;
    }
    goto LABEL_29;
  }
LABEL_27:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return this;
  }
LABEL_29:
  uint64_t v7 = v5[15];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationALSNetworkUsage::ByteSize(awd::metrics::LocationALSNetworkUsage *this)
{
  int v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_77;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_61;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_65;
  }
LABEL_61:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_69;
  }
LABEL_65:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_73;
  }
LABEL_69:
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 17);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_73:
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    if (v30 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    }
    else {
      int v31 = 2;
    }
    uint64_t v3 = (v31 + v3);
  }
LABEL_77:
  *((_DWORD *)this + 16) = v3;
  return v3;
}

void awd::metrics::LocationALSNetworkUsage::CheckTypeAndMergeFrom(awd::metrics::LocationALSNetworkUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationALSNetworkUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationALSNetworkUsage::CopyFrom(awd::metrics::LocationALSNetworkUsage *this, const awd::metrics::LocationALSNetworkUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationALSNetworkUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationALSNetworkUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationALSNetworkUsage::IsInitialized(awd::metrics::LocationALSNetworkUsage *this)
{
  return 1;
}

awd::metrics::LocationALSNetworkUsage *awd::metrics::LocationALSNetworkUsage::Swap(awd::metrics::LocationALSNetworkUsage *this, awd::metrics::LocationALSNetworkUsage *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    int v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    int v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    int v12 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v12;
    int v13 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v13;
    int v14 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v14;
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v15;
    int v16 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v16;
    int v17 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v17;
  }
  return this;
}

void *awd::metrics::LocationALSNetworkUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationALSNetworkUsage");
}

double awd::metrics::LocationSessionDay::SharedCtor(awd::metrics::LocationSessionDay *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 68) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationSessionDay *awd::metrics::LocationSessionDay::LocationSessionDay(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  *(void *)this = &unk_26D7BD918;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  awd::metrics::LocationSessionDay::MergeFrom(this, a2);
  return this;
}

void sub_224985030(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSessionDay::MergeFrom(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *((_DWORD *)a2 + 20);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v6 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 20) |= 1u;
    *((_DWORD *)this + 2) = v6;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 20) |= 2u;
  *((_DWORD *)this + 3) = v7;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 20) |= 4u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 20) |= 8u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 20) |= 0x10u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  int v12 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 20) |= 0x40u;
  *((_DWORD *)this + 8) = v12;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 20) |= 0x80u;
    *((_DWORD *)this + 9) = v5;
    int v4 = *((_DWORD *)a2 + 20);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v13 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 20) |= 0x100u;
    *((_DWORD *)this + 10) = v13;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v14 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 20) |= 0x200u;
  *((_DWORD *)this + 11) = v14;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v15 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 20) |= 0x400u;
  *((_DWORD *)this + 18) = v15;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_32:
  *((_DWORD *)this + 20) |= 0x800u;
  int v16 = (awd::metrics::LocationTilesUsage *)*((void *)this + 6);
  if (!v16) {
    operator new();
  }
  int v17 = (const awd::metrics::LocationTilesUsage *)*((void *)a2 + 6);
  if (!v17) {
    int v17 = *(const awd::metrics::LocationTilesUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  }
  awd::metrics::LocationTilesUsage::MergeFrom(v16, v17);
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_42;
  }
LABEL_37:
  *((_DWORD *)this + 20) |= 0x1000u;
  int v18 = (awd::metrics::LocationALSCacheUsage *)*((void *)this + 7);
  if (!v18) {
    operator new();
  }
  int v19 = (const awd::metrics::LocationALSCacheUsage *)*((void *)a2 + 7);
  if (!v19) {
    int v19 = *(const awd::metrics::LocationALSCacheUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  }
  awd::metrics::LocationALSCacheUsage::MergeFrom(v18, v19);
  if ((*((_DWORD *)a2 + 20) & 0x2000) != 0)
  {
LABEL_42:
    *((_DWORD *)this + 20) |= 0x2000u;
    uint64_t v20 = (awd::metrics::LocationALSNetworkUsage *)*((void *)this + 8);
    if (!v20) {
      operator new();
    }
    int v21 = (const awd::metrics::LocationALSNetworkUsage *)*((void *)a2 + 8);
    if (!v21) {
      int v21 = *(const awd::metrics::LocationALSNetworkUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 64);
    }
    awd::metrics::LocationALSNetworkUsage::MergeFrom(v20, v21);
  }
}

void sub_22498539C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationSessionDay::~LocationSessionDay(awd::metrics::LocationSessionDay *this)
{
  *(void *)this = &unk_26D7BD918;
  awd::metrics::LocationSessionDay::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BD918;
  awd::metrics::LocationSessionDay::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BD918;
  awd::metrics::LocationSessionDay::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationSessionDay::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationSessionDay::default_instance_ != this)
  {
    int v1 = this;
    uint64_t v2 = this[6];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[7];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    this = (void *)v1[8];
    if (this)
    {
      int v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationSessionDay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

uint64_t awd::metrics::LocationSessionDay::default_instance(awd::metrics::LocationSessionDay *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationSessionDay::default_instance_;
  if (!awd::metrics::LocationSessionDay::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationSessionDay::default_instance_;
  }
  return result;
}

void awd::metrics::LocationSessionDay::New(awd::metrics::LocationSessionDay *this)
{
}

uint64_t awd::metrics::LocationSessionDay::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 40) = 0;
    *(_DWORD *)(this + 72) = 0;
    if ((v1 & 0x800) != 0)
    {
      uint64_t v2 = *(void *)(this + 48);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 16)) {
          *(_DWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 16) = 0;
        int v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 0x1000) != 0)
    {
      uint64_t v3 = *(void *)(this + 56);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 44) = 0;
        int v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v4 = *(void *)(this + 64);
      if (v4)
      {
        int v5 = *(_DWORD *)(v4 + 68);
        if ((_BYTE)v5)
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        if ((v5 & 0xFF00) != 0)
        {
          *(void *)(v4 + 40) = 0;
          *(void *)(v4 + 48) = 0;
          *(void *)(v4 + 56) = 0;
        }
        *(_DWORD *)(v4 + 68) = 0;
      }
    }
  }
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t awd::metrics::LocationSessionDay::MergePartialFromCodedStream(awd::metrics::LocationSessionDay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v61 = (unsigned int *)((char *)this + 8);
  int v62 = (unsigned int *)((char *)this + 12);
  BOOL v63 = (unsigned int *)((char *)this + 16);
  int v64 = (unsigned int *)((char *)this + 24);
  int v65 = (unsigned int *)((char *)this + 28);
  uint64_t v4 = (unsigned int *)((char *)this + 32);
  int v5 = (unsigned int *)((char *)this + 36);
  int v6 = (unsigned int *)((char *)this + 40);
  int v7 = (unsigned int *)((char *)this + 44);
  int v8 = (unsigned int *)((char *)this + 72);
  int v9 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v61 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 20) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
          goto LABEL_47;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_47:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v62 = *v16;
          int v29 = v16 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 20) |= 2u;
        if ((unint64_t)v29 >= v13 || *v29 != 24) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)a2 + 1) = v17;
LABEL_55:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v63);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v63 = *v17;
          uint64_t v30 = v17 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 20) |= 4u;
        if ((unint64_t)v30 >= v13 || *v30 != 32) {
          continue;
        }
        int v18 = v30 + 1;
        *((void *)a2 + 1) = v18;
LABEL_63:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v64 = *v18;
          int v31 = v18 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v31 >= v13 || *v31 != 40) {
          continue;
        }
        int v19 = v31 + 1;
        *((void *)a2 + 1) = v19;
LABEL_71:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v65);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v65 = *v19;
          uint64_t v32 = v19 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 20) |= 0x20u;
        if ((unint64_t)v32 >= v13 || *v32 != 48) {
          continue;
        }
        uint64_t v20 = v32 + 1;
        *((void *)a2 + 1) = v20;
LABEL_79:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unint64_t v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v20;
          unint64_t v33 = v20 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 20) |= 0x40u;
        if ((unint64_t)v33 >= v13 || *v33 != 56) {
          continue;
        }
        int v21 = v33 + 1;
        *((void *)a2 + 1) = v21;
LABEL_87:
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v21;
          int v34 = v21 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 20) |= 0x80u;
        if ((unint64_t)v34 >= v13 || *v34 != 64) {
          continue;
        }
        unsigned int v22 = v34 + 1;
        *((void *)a2 + 1) = v22;
LABEL_95:
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v22;
          unsigned int v35 = v22 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 20) |= 0x100u;
        if ((unint64_t)v35 >= v13 || *v35 != 72) {
          continue;
        }
        int v23 = v35 + 1;
        *((void *)a2 + 1) = v23;
LABEL_103:
        if ((unint64_t)v23 >= v13 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v23;
          unsigned int v36 = v23 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 20) |= 0x200u;
        if ((unint64_t)v36 >= v13 || *v36 != 80) {
          continue;
        }
        int v24 = v36 + 1;
        *((void *)a2 + 1) = v24;
LABEL_111:
        if ((unint64_t)v24 >= v13 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          unint64_t v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v24;
          unint64_t v37 = v24 + 1;
          *((void *)a2 + 1) = v37;
        }
        int v25 = *((_DWORD *)this + 20) | 0x400;
        *((_DWORD *)this + 20) = v25;
        if ((unint64_t)v37 >= v13 || *v37 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_119:
        *((_DWORD *)this + 20) = v25 | 0x800;
        int v38 = (awd::metrics::LocationTilesUsage *)*((void *)this + 6);
        if (!v38) {
          operator new();
        }
        unsigned int v66 = 0;
        int v39 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v66))return 0; {
        }
          }
        else
        {
          unsigned int v66 = *v39;
          *((void *)a2 + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)a2 + 14);
        int v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationTilesUsage::MergePartialFromCodedStream(v38, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v42 = *((_DWORD *)a2 + 14);
        BOOL v43 = __OFSUB__(v42, 1);
        int v44 = v42 - 1;
        if (v44 < 0 == v43) {
          *((_DWORD *)a2 + 14) = v44;
        }
        unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v45 + 1;
LABEL_133:
        *((_DWORD *)this + 20) |= 0x1000u;
        int v46 = (awd::metrics::LocationALSCacheUsage *)*((void *)this + 7);
        if (!v46) {
          operator new();
        }
        unsigned int v67 = 0;
        int v47 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v47;
          *((void *)a2 + 1) = v47 + 1;
        }
        int v48 = *((_DWORD *)a2 + 14);
        int v49 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v48 + 1;
        if (v48 >= v49) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationALSCacheUsage::MergePartialFromCodedStream(v46, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v50 = *((_DWORD *)a2 + 14);
        BOOL v43 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v43) {
          *((_DWORD *)a2 + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_147:
        *((_DWORD *)this + 20) |= 0x2000u;
        int v53 = (awd::metrics::LocationALSNetworkUsage *)*((void *)this + 8);
        if (!v53) {
          operator new();
        }
        unsigned int v68 = 0;
        int v54 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v54 >= *((void *)a2 + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v54;
          *((void *)a2 + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)a2 + 14);
        int v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 < v56)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationALSNetworkUsage::MergePartialFromCodedStream(v53, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v57 = *((_DWORD *)a2 + 14);
              BOOL v43 = __OFSUB__(v57, 1);
              int v58 = v57 - 1;
              if (v58 < 0 == v43) {
                *((_DWORD *)a2 + 14) = v58;
              }
              uint64_t v59 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v26 = *((void *)a2 + 2);
              if ((unint64_t)v59 < v26 && *v59 == 112)
              {
                int v27 = v59 + 1;
                *((void *)a2 + 1) = v27;
LABEL_161:
                if ((unint64_t)v27 >= v26 || *v27 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                  if (!result) {
                    return result;
                  }
                  int v60 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v26 = *((void *)a2 + 2);
                }
                else
                {
                  *int v9 = *v27;
                  int v60 = (unsigned __int8 *)(v27 + 1);
                  *((void *)a2 + 1) = v60;
                }
                *((_DWORD *)this + 20) |= 8u;
                if (v60 == (unsigned __int8 *)v26
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_55;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_63;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_71;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_79;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_87;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_95;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_38;
        }
        int v25 = *((_DWORD *)this + 20);
        goto LABEL_119;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_133;
        }
        goto LABEL_38;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_147;
        }
        goto LABEL_38;
      case 0xEu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_161;
      default:
        int v12 = TagFallback & 7;
LABEL_38:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationSessionDay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x200) == 0)
  {
LABEL_10:
    if ((v6 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x800) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v7 = *(void *)(v5 + 48);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v8 = *(void *)(v5 + 56);
  if (!v8) {
    uint64_t v8 = *(void *)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v9 = *(void *)(v5 + 64);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::LocationSessionDay::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 8) != 0)
  {
LABEL_35:
    uint64_t v10 = *(unsigned int *)(v5 + 20);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v10, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationSessionDay::ByteSize(awd::metrics::LocationSessionDay *this)
{
  int v2 = *((_DWORD *)this + 20);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v19 + 1);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_86;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_61;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_65;
  }
LABEL_61:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_74;
  }
LABEL_65:
  uint64_t v26 = *((void *)this + 6);
  if (!v26) {
    uint64_t v26 = *(void *)(awd::metrics::LocationSessionDay::default_instance_ + 48);
  }
  if ((*(unsigned char *)(v26 + 16) & 1) == 0)
  {
    int v27 = 0;
LABEL_71:
    *(_DWORD *)(v26 + 12) = v27;
LABEL_72:
    int v29 = 1;
    goto LABEL_73;
  }
  uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v26 + 8);
  if (v28 <= 0x7F)
  {
    int v27 = 2;
    goto LABEL_71;
  }
  int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
  int v27 = v39 + 1;
  *(_DWORD *)(v26 + 12) = v39 + 1;
  if ((v39 + 1) < 0x80) {
    goto LABEL_72;
  }
  int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v39 + 1));
LABEL_73:
  uint64_t v3 = (v3 + v27 + v29 + 1);
  int v2 = *((_DWORD *)this + 20);
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_80;
  }
LABEL_74:
  uint64_t v30 = (awd::metrics::LocationALSCacheUsage *)*((void *)this + 7);
  if (!v30) {
    uint64_t v30 = *(awd::metrics::LocationALSCacheUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 56);
  }
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationALSCacheUsage::ByteSize(v30);
  int v32 = (int)v31;
  if (v31 >= 0x80) {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
  }
  else {
    int v33 = 1;
  }
  uint64_t v3 = (v3 + v32 + v33 + 1);
  if ((*((_DWORD *)this + 20) & 0x2000) != 0)
  {
LABEL_80:
    int v34 = (awd::metrics::LocationALSNetworkUsage *)*((void *)this + 8);
    if (!v34) {
      int v34 = *(awd::metrics::LocationALSNetworkUsage **)(awd::metrics::LocationSessionDay::default_instance_ + 64);
    }
    unsigned int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationALSNetworkUsage::ByteSize(v34);
    int v36 = (int)v35;
    if (v35 >= 0x80) {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
    }
    else {
      int v37 = 1;
    }
    uint64_t v3 = (v3 + v36 + v37 + 1);
  }
LABEL_86:
  *((_DWORD *)this + 19) = v3;
  return v3;
}

void awd::metrics::LocationSessionDay::CheckTypeAndMergeFrom(awd::metrics::LocationSessionDay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationSessionDay::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationSessionDay::CopyFrom(awd::metrics::LocationSessionDay *this, const awd::metrics::LocationSessionDay *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationSessionDay *))(*(void *)this + 32))(this);
    awd::metrics::LocationSessionDay::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationSessionDay::IsInitialized(awd::metrics::LocationSessionDay *this)
{
  return 1;
}

uint64_t awd::metrics::LocationSessionDay::Swap(uint64_t this, awd::metrics::LocationSessionDay *a2)
{
  if (a2 != (awd::metrics::LocationSessionDay *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    int v10 = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    int v11 = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    int v12 = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v12;
    uint64_t v13 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v13;
    uint64_t v14 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v14;
    uint64_t v15 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v15;
    LODWORD(v15) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v15;
    LODWORD(v15) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v15;
  }
  return this;
}

void *awd::metrics::LocationSessionDay::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationSessionDay");
}

double awd::metrics::LocationTileFileUsage::SharedCtor(awd::metrics::LocationTileFileUsage *this)
{
  *((void *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 15) = 0;
  return result;
}

awd::metrics::LocationTileFileUsage *awd::metrics::LocationTileFileUsage::LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  *(void *)this = &unk_26D7BD990;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((void *)this + 17) = 0;
  awd::metrics::LocationTileFileUsage::MergeFrom(this, a2);
  return this;
}

void sub_2249868B4(_Unwind_Exception *a1)
{
  uint64_t v4 = *((void *)v1 + 13);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8052888210);
  }
  awd::metrics::LocationTileFileUsage::LocationTileFileUsage(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFileUsage::MergeFrom(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
  }
  int v4 = *((_DWORD *)a2 + 22);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 80, *((_DWORD *)this + 22) + v4);
    memcpy((void *)(*((void *)this + 10) + 4 * *((int *)this + 22)), *((const void **)a2 + 10), 4 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  int v5 = *((_DWORD *)a2 + 28);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 104, *((_DWORD *)this + 28) + v5);
    memcpy((void *)(*((void *)this + 13) + 4 * *((int *)this + 28)), *((const void **)a2 + 13), 4 * *((int *)a2 + 28));
    *((_DWORD *)this + 28) += *((_DWORD *)a2 + 28);
  }
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if (!(_BYTE)v6) {
    goto LABEL_17;
  }
  if (v6)
  {
    int v12 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 35) |= 1u;
    *((_DWORD *)this + 2) = v12;
    unsigned int v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  int v13 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 35) |= 2u;
  *((_DWORD *)this + 3) = v13;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v14 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 35) |= 4u;
  *((_DWORD *)this + 4) = v14;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v15 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 35) |= 8u;
  *((_DWORD *)this + 5) = v15;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_46:
    int v17 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 35) |= 0x20u;
    *((_DWORD *)this + 7) = v17;
    unsigned int v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x40) == 0)
    {
LABEL_15:
      if ((v6 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_45:
  int v16 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 35) |= 0x10u;
  *((_DWORD *)this + 6) = v16;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_14:
  if ((v6 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_47:
  int v18 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 35) |= 0x40u;
  *((_DWORD *)this + 8) = v18;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x80) != 0)
  {
LABEL_16:
    int v7 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 35) |= 0x80u;
    *((_DWORD *)this + 9) = v7;
    unsigned int v6 = *((_DWORD *)a2 + 35);
  }
LABEL_17:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_27;
  }
  if ((v6 & 0x100) != 0)
  {
    int v19 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 35) |= 0x100u;
    *((_DWORD *)this + 10) = v19;
    unsigned int v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x200) == 0)
    {
LABEL_20:
      if ((v6 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_51;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  int v20 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 35) |= 0x200u;
  *((_DWORD *)this + 11) = v20;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x400) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v21 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 35) |= 0x400u;
  *((_DWORD *)this + 12) = v21;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v22 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 35) |= 0x800u;
  *((_DWORD *)this + 13) = v22;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x1000) == 0)
  {
LABEL_23:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v23 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 35) |= 0x1000u;
  *((_DWORD *)this + 14) = v23;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v24 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 35) |= 0x2000u;
  *((_DWORD *)this + 15) = v24;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_55:
  int v25 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 35) |= 0x4000u;
  *((_DWORD *)this + 16) = v25;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x8000) != 0)
  {
LABEL_26:
    int v8 = *((_DWORD *)a2 + 17);
    *((_DWORD *)this + 35) |= 0x8000u;
    *((_DWORD *)this + 17) = v8;
    unsigned int v6 = *((_DWORD *)a2 + 35);
  }
LABEL_27:
  if ((v6 & 0xFF0000) == 0) {
    goto LABEL_35;
  }
  if ((v6 & 0x10000) != 0)
  {
    int v26 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 35) |= 0x10000u;
    *((_DWORD *)this + 18) = v26;
    unsigned int v6 = *((_DWORD *)a2 + 35);
    if ((v6 & 0x20000) == 0)
    {
LABEL_30:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_59;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_30;
  }
  int v27 = *((_DWORD *)a2 + 19);
  *((_DWORD *)this + 35) |= 0x20000u;
  *((_DWORD *)this + 19) = v27;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x40000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v28 = *((_DWORD *)a2 + 24);
  *((_DWORD *)this + 35) |= 0x40000u;
  *((_DWORD *)this + 24) = v28;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x200000) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v29 = *((_DWORD *)a2 + 25);
  *((_DWORD *)this + 35) |= 0x200000u;
  *((_DWORD *)this + 25) = v29;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x400000) == 0)
  {
LABEL_33:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_61:
  int v30 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 35) |= 0x400000u;
  *((_DWORD *)this + 30) = v30;
  unsigned int v6 = *((_DWORD *)a2 + 35);
  if ((v6 & 0x800000) != 0)
  {
LABEL_34:
    int v9 = *((_DWORD *)a2 + 31);
    *((_DWORD *)this + 35) |= 0x800000u;
    *((_DWORD *)this + 31) = v9;
    unsigned int v6 = *((_DWORD *)a2 + 35);
  }
LABEL_35:
  if (HIBYTE(v6))
  {
    if ((v6 & 0x1000000) != 0)
    {
      int v10 = *((_DWORD *)a2 + 32);
      *((_DWORD *)this + 35) |= 0x1000000u;
      *((_DWORD *)this + 32) = v10;
      unsigned int v6 = *((_DWORD *)a2 + 35);
    }
    if ((v6 & 0x2000000) != 0)
    {
      int v11 = *((_DWORD *)a2 + 33);
      *((_DWORD *)this + 35) |= 0x2000000u;
      *((_DWORD *)this + 33) = v11;
    }
  }
}

void sub_224986CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFileUsage::~LocationTileFileUsage(awd::metrics::LocationTileFileUsage *this)
{
  *(void *)this = &unk_26D7BD990;
  uint64_t v2 = *((void *)this + 13);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 10);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationTileFileUsage::~LocationTileFileUsage(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationTileFileUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 136) = a2;
  return this;
}

uint64_t awd::metrics::LocationTileFileUsage::default_instance(awd::metrics::LocationTileFileUsage *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationTileFileUsage::default_instance_;
  if (!awd::metrics::LocationTileFileUsage::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTileFileUsage::default_instance_;
  }
  return result;
}

void awd::metrics::LocationTileFileUsage::New(awd::metrics::LocationTileFileUsage *this)
{
}

uint64_t awd::metrics::LocationTileFileUsage::Clear(uint64_t this)
{
  unsigned int v1 = *(_DWORD *)(this + 140);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 56) = 0u;
    *(_OWORD *)(this + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(this + 72) = 0;
    *(void *)(this + 96) = 0;
    *(void *)(this + 120) = 0;
  }
  if (HIBYTE(v1)) {
    *(void *)(this + 128) = 0;
  }
  *(_DWORD *)(this + 88) = 0;
  *(_DWORD *)(this + 112) = 0;
  *(_DWORD *)(this + 140) = 0;
  return this;
}

uint64_t awd::metrics::LocationTileFileUsage::MergePartialFromCodedStream(awd::metrics::LocationTileFileUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 104;
  unsigned int v87 = (unsigned int *)((char *)this + 8);
  int v96 = (unsigned int *)((char *)this + 12);
  int v98 = (unsigned int *)((char *)this + 16);
  int v99 = (unsigned int *)((char *)this + 20);
  int v100 = (unsigned int *)((char *)this + 24);
  int v101 = (unsigned int *)((char *)this + 28);
  int v102 = (unsigned int *)((char *)this + 32);
  int v103 = (unsigned int *)((char *)this + 36);
  int v104 = (unsigned int *)((char *)this + 40);
  int v105 = (unsigned int *)((char *)this + 44);
  int v106 = (char *)this + 80;
  int v5 = (unsigned int *)((char *)this + 48);
  unsigned int v6 = (unsigned int *)((char *)this + 52);
  int v7 = (unsigned int *)((char *)this + 56);
  int v8 = (unsigned int *)((char *)this + 60);
  int v9 = (unsigned int *)((char *)this + 64);
  int v89 = (unsigned int *)((char *)this + 96);
  int v97 = (unsigned int *)((char *)this + 100);
  int v94 = (unsigned int *)((char *)this + 120);
  int v95 = (unsigned int *)((char *)this + 68);
  int v92 = (unsigned int *)((char *)this + 124);
  int v93 = (unsigned int *)((char *)this + 72);
  int v90 = (unsigned int *)((char *)this + 128);
  int v91 = (unsigned int *)((char *)this + 76);
  int v88 = (unsigned int *)((char *)this + 132);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v87);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v87 = *v14;
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 35) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
          goto LABEL_77;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_77:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
          if (!result) {
            return result;
          }
          int v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v96 = *v16;
          int v41 = v16 + 1;
          *((void *)a2 + 1) = v41;
        }
        *((_DWORD *)this + 35) |= 2u;
        if ((unint64_t)v41 >= v13 || *v41 != 24) {
          continue;
        }
        int v17 = v41 + 1;
        *((void *)a2 + 1) = v17;
LABEL_85:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v98);
          if (!result) {
            return result;
          }
          int v42 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v98 = *v17;
          int v42 = v17 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 35) |= 4u;
        if ((unint64_t)v42 >= v13 || *v42 != 32) {
          continue;
        }
        int v18 = v42 + 1;
        *((void *)a2 + 1) = v18;
LABEL_93:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v99);
          if (!result) {
            return result;
          }
          BOOL v43 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v99 = *v18;
          BOOL v43 = v18 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 35) |= 8u;
        if ((unint64_t)v43 >= v13 || *v43 != 40) {
          continue;
        }
        int v19 = v43 + 1;
        *((void *)a2 + 1) = v19;
LABEL_101:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v100);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v100 = *v19;
          int v44 = v19 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 35) |= 0x10u;
        if ((unint64_t)v44 >= v13 || *v44 != 48) {
          continue;
        }
        int v20 = v44 + 1;
        *((void *)a2 + 1) = v20;
LABEL_109:
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v101);
          if (!result) {
            return result;
          }
          unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v101 = *v20;
          unsigned int v45 = v20 + 1;
          *((void *)a2 + 1) = v45;
        }
        *((_DWORD *)this + 35) |= 0x20u;
        if ((unint64_t)v45 >= v13 || *v45 != 56) {
          continue;
        }
        int v21 = v45 + 1;
        *((void *)a2 + 1) = v21;
LABEL_117:
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v102);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v102 = *v21;
          int v46 = v21 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 35) |= 0x40u;
        if ((unint64_t)v46 >= v13 || *v46 != 64) {
          continue;
        }
        int v22 = v46 + 1;
        *((void *)a2 + 1) = v22;
LABEL_125:
        if ((unint64_t)v22 >= v13 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!result) {
            return result;
          }
          int v47 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v103 = *v22;
          int v47 = v22 + 1;
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 35) |= 0x80u;
        if ((unint64_t)v47 >= v13 || *v47 != 72) {
          continue;
        }
        int v23 = v47 + 1;
        *((void *)a2 + 1) = v23;
LABEL_133:
        if ((unint64_t)v23 >= v13 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v104);
          if (!result) {
            return result;
          }
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v104 = *v23;
          int v48 = v23 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((_DWORD *)this + 35) |= 0x100u;
        if ((unint64_t)v48 >= v13 || *v48 != 80) {
          continue;
        }
        int v24 = v48 + 1;
        *((void *)a2 + 1) = v24;
LABEL_141:
        if ((unint64_t)v24 >= v13 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105);
          if (!result) {
            return result;
          }
          int v49 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v105 = *v24;
          int v49 = v24 + 1;
          *((void *)a2 + 1) = v49;
        }
        *((_DWORD *)this + 35) |= 0x200u;
        if ((unint64_t)v49 >= v13 || *v49 != 88) {
          continue;
        }
        int v25 = v49 + 1;
        *((void *)a2 + 1) = v25;
LABEL_149:
        if ((unint64_t)v25 >= v13 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v25;
          int v50 = v25 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((_DWORD *)this + 35) |= 0x400u;
        if ((unint64_t)v50 >= v13 || *v50 != 96) {
          continue;
        }
        int v26 = v50 + 1;
        *((void *)a2 + 1) = v26;
LABEL_157:
        if ((unint64_t)v26 >= v13 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v51 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *unsigned int v6 = *v26;
          int v51 = v26 + 1;
          *((void *)a2 + 1) = v51;
        }
        *((_DWORD *)this + 35) |= 0x800u;
        if ((unint64_t)v51 >= v13 || *v51 != 104) {
          continue;
        }
        int v27 = v51 + 1;
        *((void *)a2 + 1) = v27;
LABEL_165:
        if ((unint64_t)v27 >= v13 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v52 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v27;
          int v52 = v27 + 1;
          *((void *)a2 + 1) = v52;
        }
        *((_DWORD *)this + 35) |= 0x1000u;
        if ((unint64_t)v52 >= v13 || *v52 != 112) {
          continue;
        }
        int v28 = v52 + 1;
        *((void *)a2 + 1) = v28;
LABEL_173:
        if ((unint64_t)v28 >= v13 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v53 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v28;
          int v53 = v28 + 1;
          *((void *)a2 + 1) = v53;
        }
        *((_DWORD *)this + 35) |= 0x2000u;
        if ((unint64_t)v53 >= v13 || *v53 != 120) {
          continue;
        }
        int v29 = v53 + 1;
        *((void *)a2 + 1) = v29;
LABEL_181:
        if ((unint64_t)v29 >= v13 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v54 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v29;
          int v54 = v29 + 1;
          *((void *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 35) |= 0x4000u;
        if ((int)v13 - (int)v54 < 2 || *v54 != 128 || v54[1] != 1) {
          continue;
        }
        int v30 = v54 + 2;
        *((void *)a2 + 1) = v30;
LABEL_190:
        if ((unint64_t)v30 >= v13 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!result) {
            return result;
          }
          int v55 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v95 = *v30;
          int v55 = v30 + 1;
          *((void *)a2 + 1) = v55;
        }
        *((_DWORD *)this + 35) |= 0x8000u;
        if ((int)v13 - (int)v55 < 2 || *v55 != 136 || v55[1] != 1) {
          continue;
        }
        int v31 = v55 + 2;
        *((void *)a2 + 1) = v31;
LABEL_199:
        if ((unint64_t)v31 >= v13 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v93);
          if (!result) {
            return result;
          }
          int v56 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *int v93 = *v31;
          int v56 = v31 + 1;
          *((void *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 35) |= 0x10000u;
        if ((int)v13 - (int)v56 < 2 || *v56 != 144 || v56[1] != 1) {
          continue;
        }
        int v32 = v56 + 2;
        *((void *)a2 + 1) = v32;
LABEL_208:
        if ((unint64_t)v32 >= v13 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v91);
          if (!result) {
            return result;
          }
          int v57 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v91 = *v32;
          int v57 = v32 + 1;
          *((void *)a2 + 1) = v57;
        }
        *((_DWORD *)this + 35) |= 0x20000u;
        if ((int)v13 - (int)v57 < 2 || *v57 != 152 || v57[1] != 1) {
          continue;
        }
        int v33 = v57 + 2;
        *((void *)a2 + 1) = v33;
LABEL_217:
        if ((unint64_t)v33 >= v13 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v89);
          if (!result) {
            return result;
          }
          int v58 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v89 = *v33;
          int v58 = v33 + 1;
          *((void *)a2 + 1) = v58;
        }
        *((_DWORD *)this + 35) |= 0x40000u;
        if ((int)v13 - (int)v58 >= 2 && *v58 == 160 && v58[1] == 1) {
          goto LABEL_225;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_85;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_93;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_101;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_109;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_117;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_125;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_133;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_141;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_149;
      case 0xCu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v26 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_157;
      case 0xDu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_165;
      case 0xEu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v28 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_173;
      case 0xFu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v29 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_181;
      case 0x10u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_190;
      case 0x11u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_199;
      case 0x12u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_208;
      case 0x13u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_217;
      case 0x14u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v34 = (char *)*((void *)a2 + 1);
            unint64_t v13 = *((void *)a2 + 2);
            goto LABEL_226;
          }
          goto LABEL_64;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v106);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v58 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          if ((int)v13 - (int)v58 <= 1) {
            goto LABEL_2;
          }
          int v69 = *v58;
          if (v69 == 168)
          {
            if (v58[1] != 1) {
              goto LABEL_2;
            }
            goto LABEL_252;
          }
          if (v69 != 160 || v58[1] != 1) {
            goto LABEL_2;
          }
LABEL_225:
          int v34 = (char *)(v58 + 2);
          *((void *)a2 + 1) = v34;
LABEL_226:
          v107[0] = 0;
          if ((unint64_t)v34 >= v13 || *v34 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
            if (!result) {
              return result;
            }
            unsigned int v59 = v107[0];
          }
          else
          {
            unsigned int v59 = *v34;
            *((void *)a2 + 1) = v34 + 1;
          }
          int v60 = *((_DWORD *)this + 22);
          if (v60 == *((_DWORD *)this + 23))
          {
            wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v106, v60 + 1);
            int v60 = *((_DWORD *)this + 22);
          }
          uint64_t v61 = *((void *)this + 10);
          *((_DWORD *)this + 22) = v60 + 1;
          *(_DWORD *)(v61 + 4 * v60) = v59;
          int v62 = *((_DWORD *)this + 23) - *((_DWORD *)this + 22);
          if (v62 >= 1)
          {
            int v63 = v62 + 1;
            do
            {
              int v64 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v65 = *((void *)a2 + 2);
              if ((int)v65 - (int)v64 < 2 || *v64 != 160 || v64[1] != 1) {
                break;
              }
              *((void *)a2 + 1) = v64 + 2;
              v107[0] = 0;
              if ((unint64_t)(v64 + 2) >= v65 || (char)v64[2] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                if (!result) {
                  return result;
                }
                unsigned int v66 = v107[0];
              }
              else
              {
                unsigned int v66 = v64[2];
                *((void *)a2 + 1) = v64 + 3;
              }
              int v67 = *((_DWORD *)this + 22);
              if (v67 >= *((_DWORD *)this + 23))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v107);
                int v67 = *((_DWORD *)this + 22);
              }
              uint64_t v68 = *((void *)this + 10);
              *((_DWORD *)this + 22) = v67 + 1;
              *(_DWORD *)(v68 + 4 * v67) = v66;
              --v63;
            }
            while (v63 > 1);
          }
        }
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v58 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v13 = *((void *)a2 + 2);
            if ((int)v13 - (int)v58 <= 1) {
              goto LABEL_2;
            }
            int v80 = *v58;
            if (v80 == 176)
            {
              if (v58[1] == 1)
              {
                int v36 = v58 + 2;
                *((void *)a2 + 1) = v36;
LABEL_280:
                if ((unint64_t)v36 >= v13 || (char)*v36 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v97);
                  if (!result) {
                    return result;
                  }
                  int v81 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v13 = *((void *)a2 + 2);
                }
                else
                {
                  *int v97 = *v36;
                  int v81 = v36 + 1;
                  *((void *)a2 + 1) = v81;
                }
                *((_DWORD *)this + 35) |= 0x200000u;
                if ((int)v13 - (int)v81 >= 2 && *v81 == 184 && v81[1] == 1)
                {
                  int v37 = v81 + 2;
                  *((void *)a2 + 1) = v37;
LABEL_289:
                  if ((unint64_t)v37 >= v13 || (char)*v37 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v94);
                    if (!result) {
                      return result;
                    }
                    int v82 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v13 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int *v94 = *v37;
                    int v82 = v37 + 1;
                    *((void *)a2 + 1) = v82;
                  }
                  *((_DWORD *)this + 35) |= 0x400000u;
                  if ((int)v13 - (int)v82 >= 2 && *v82 == 192 && v82[1] == 1)
                  {
                    int v38 = v82 + 2;
                    *((void *)a2 + 1) = v38;
LABEL_298:
                    if ((unint64_t)v38 >= v13 || (char)*v38 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v92);
                      if (!result) {
                        return result;
                      }
                      uint64_t v83 = (unsigned __int8 *)*((void *)a2 + 1);
                      unint64_t v13 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int *v92 = *v38;
                      uint64_t v83 = v38 + 1;
                      *((void *)a2 + 1) = v83;
                    }
                    *((_DWORD *)this + 35) |= 0x800000u;
                    if ((int)v13 - (int)v83 >= 2 && *v83 == 200 && v83[1] == 1)
                    {
                      int v39 = v83 + 2;
                      *((void *)a2 + 1) = v39;
LABEL_307:
                      if ((unint64_t)v39 >= v13 || (char)*v39 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v90);
                        if (!result) {
                          return result;
                        }
                        int v84 = (unsigned __int8 *)*((void *)a2 + 1);
                        unint64_t v13 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unsigned int *v90 = *v39;
                        int v84 = v39 + 1;
                        *((void *)a2 + 1) = v84;
                      }
                      *((_DWORD *)this + 35) |= 0x1000000u;
                      if ((int)v13 - (int)v84 >= 2 && *v84 == 208 && v84[1] == 1)
                      {
                        int v40 = (char *)(v84 + 2);
                        *((void *)a2 + 1) = v40;
LABEL_316:
                        if ((unint64_t)v40 >= v13 || *v40 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v88);
                          if (!result) {
                            return result;
                          }
                          int v85 = (unsigned __int8 *)*((void *)a2 + 1);
                          unint64_t v13 = *((void *)a2 + 2);
                        }
                        else
                        {
                          unsigned int *v88 = *v40;
                          int v85 = (unsigned __int8 *)(v40 + 1);
                          *((void *)a2 + 1) = v85;
                        }
                        *((_DWORD *)this + 35) |= 0x2000000u;
                        if (v85 == (unsigned __int8 *)v13
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              goto LABEL_2;
            }
            if (v80 != 168 || v58[1] != 1) {
              goto LABEL_2;
            }
LABEL_252:
            unsigned int v35 = (char *)(v58 + 2);
            *((void *)a2 + 1) = v35;
LABEL_253:
            v107[0] = 0;
            if ((unint64_t)v35 >= v13 || *v35 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
              if (!result) {
                return result;
              }
              unsigned int v70 = v107[0];
            }
            else
            {
              unsigned int v70 = *v35;
              *((void *)a2 + 1) = v35 + 1;
            }
            int v71 = *((_DWORD *)this + 28);
            if (v71 == *((_DWORD *)this + 29))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v4, v71 + 1);
              int v71 = *((_DWORD *)this + 28);
            }
            uint64_t v72 = *((void *)this + 13);
            *((_DWORD *)this + 28) = v71 + 1;
            *(_DWORD *)(v72 + 4 * v71) = v70;
            int v73 = *((_DWORD *)this + 29) - *((_DWORD *)this + 28);
            if (v73 >= 1)
            {
              int v74 = v73 + 1;
              do
              {
                int v75 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v76 = *((void *)a2 + 2);
                if ((int)v76 - (int)v75 < 2 || *v75 != 168 || v75[1] != 1) {
                  break;
                }
                *((void *)a2 + 1) = v75 + 2;
                v107[0] = 0;
                if ((unint64_t)(v75 + 2) >= v76 || (char)v75[2] < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v107);
                  if (!result) {
                    return result;
                  }
                  unsigned int v77 = v107[0];
                }
                else
                {
                  unsigned int v77 = v75[2];
                  *((void *)a2 + 1) = v75 + 3;
                }
                int v78 = *((_DWORD *)this + 28);
                if (v78 >= *((_DWORD *)this + 29))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v107);
                  int v78 = *((_DWORD *)this + 28);
                }
                uint64_t v79 = *((void *)this + 13);
                *((_DWORD *)this + 28) = v78 + 1;
                *(_DWORD *)(v79 + 4 * v78) = v77;
                --v74;
              }
              while (v74 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          unsigned int v35 = (char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_253;
        }
LABEL_64:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0x16u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v36 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_280;
      case 0x17u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v37 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_289;
      case 0x18u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v38 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_298;
      case 0x19u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v39 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_307;
      case 0x1Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_64;
        }
        int v40 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_316;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_64;
    }
  }
}

void sub_224987F50(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v1 - 136));
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::LocationTileFileUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 140);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 140);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 140);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 140) & 0x40000) != 0) {
LABEL_20:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
LABEL_21:
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(*(void *)(v5 + 80) + 4 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(*(void *)(v5 + 104) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 112));
  }
  int v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x200000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
    int v9 = *(_DWORD *)(v5 + 140);
    if ((v9 & 0x400000) == 0)
    {
LABEL_29:
      if ((v9 & 0x800000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x400000) == 0)
  {
    goto LABEL_29;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x800000) == 0)
  {
LABEL_30:
    if ((v9 & 0x1000000) == 0) {
      goto LABEL_31;
    }
LABEL_55:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 140) & 0x2000000) == 0) {
      return this;
    }
    goto LABEL_56;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 140);
  if ((v9 & 0x1000000) != 0) {
    goto LABEL_55;
  }
LABEL_31:
  if ((v9 & 0x2000000) == 0) {
    return this;
  }
LABEL_56:
  uint64_t v10 = *(unsigned int *)(v5 + 132);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v10, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationTileFileUsage::ByteSize(awd::metrics::LocationTileFileUsage *this)
{
  unsigned int v2 = *((_DWORD *)this + 35);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v5 = 1;
  }
  int v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v7 = 1;
    }
    v3 += v7 + 1;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v9 = 1;
    }
    v3 += v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v11 = 1;
  }
  v3 += v11 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v13 = 1;
  }
  v3 += v13 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v19 = 1;
    }
    v3 += v19 + 1;
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_87;
  }
  if ((v2 & 0x100) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_63;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v23 = 1;
  }
  v3 += v23 + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_67;
  }
LABEL_63:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v25 = 1;
  }
  v3 += v25 + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_71;
  }
LABEL_67:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v27 = 1;
  }
  v3 += v27 + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_51:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_75;
  }
LABEL_71:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v29 = 1;
  }
  v3 += v29 + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_52:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_79;
  }
LABEL_75:
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v31 = 1;
  }
  v3 += v31 + 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_53:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_83;
  }
LABEL_79:
  int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v33 = 1;
  }
  v3 += v33 + 1;
  if ((v2 & 0x8000) != 0)
  {
LABEL_83:
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v34 >= 0x80)
    {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v35 = 1;
    }
    v3 += v35 + 2;
  }
LABEL_87:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_119;
  }
  if ((v2 & 0x10000) != 0)
  {
    int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v37 = 1;
    }
    v3 += v37 + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_90:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_103;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_90;
  }
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
  if (v38 >= 0x80)
  {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v39 = 1;
  }
  v3 += v39 + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_91:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_107;
  }
LABEL_103:
  int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
  if (v40 >= 0x80)
  {
    int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v41 = 1;
  }
  v3 += v41 + 2;
  if ((v2 & 0x200000) == 0)
  {
LABEL_92:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_111;
  }
LABEL_107:
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
  if (v42 >= 0x80)
  {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42) + 2;
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v43 = 3;
  }
  v3 += v43;
  if ((v2 & 0x400000) == 0)
  {
LABEL_93:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_115;
  }
LABEL_111:
  int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
  if (v44 >= 0x80)
  {
    int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44) + 2;
    unsigned int v2 = *((_DWORD *)this + 35);
  }
  else
  {
    int v45 = 3;
  }
  v3 += v45;
  if ((v2 & 0x800000) != 0)
  {
LABEL_115:
    int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    if (v46 >= 0x80)
    {
      int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46) + 2;
      unsigned int v2 = *((_DWORD *)this + 35);
    }
    else
    {
      int v47 = 3;
    }
    v3 += v47;
  }
LABEL_119:
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
      if (v48 >= 0x80)
      {
        int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48) + 2;
        unsigned int v2 = *((_DWORD *)this + 35);
      }
      else
      {
        int v49 = 3;
      }
      v3 += v49;
    }
    if ((v2 & 0x2000000) != 0)
    {
      int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 33);
      if (v50 >= 0x80) {
        int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50) + 2;
      }
      else {
        int v51 = 3;
      }
      v3 += v51;
    }
  }
  int v52 = *((_DWORD *)this + 22);
  if (v52 < 1)
  {
    int v54 = 0;
  }
  else
  {
    uint64_t v53 = 0;
    int v54 = 0;
    do
    {
      int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 10)
                                                                                             + 4 * v53);
      if ((v55 & 0x80000000) != 0)
      {
        int v56 = 10;
      }
      else if (v55 >= 0x80)
      {
        int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
        int v52 = *((_DWORD *)this + 22);
      }
      else
      {
        int v56 = 1;
      }
      v54 += v56;
      ++v53;
    }
    while (v53 < v52);
  }
  int v57 = *((_DWORD *)this + 28);
  if (v57 < 1)
  {
    int v59 = 0;
  }
  else
  {
    uint64_t v58 = 0;
    int v59 = 0;
    do
    {
      int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 13)
                                                                                             + 4 * v58);
      if ((v60 & 0x80000000) != 0)
      {
        int v61 = 10;
      }
      else if (v60 >= 0x80)
      {
        int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60);
        int v57 = *((_DWORD *)this + 28);
      }
      else
      {
        int v61 = 1;
      }
      v59 += v61;
      ++v58;
    }
    while (v58 < v57);
  }
  uint64_t result = (v54 + v3 + v59 + 2 * (v57 + v52));
  *((_DWORD *)this + 34) = result;
  return result;
}

void awd::metrics::LocationTileFileUsage::CheckTypeAndMergeFrom(awd::metrics::LocationTileFileUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationTileFileUsage::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTileFileUsage::CopyFrom(awd::metrics::LocationTileFileUsage *this, const awd::metrics::LocationTileFileUsage *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTileFileUsage *))(*(void *)this + 32))(this);
    awd::metrics::LocationTileFileUsage::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTileFileUsage::IsInitialized(awd::metrics::LocationTileFileUsage *this)
{
  return 1;
}

double awd::metrics::LocationTileFileUsage::Swap(awd::metrics::LocationTileFileUsage *this, awd::metrics::LocationTileFileUsage *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    int v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    int v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    int v12 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v12;
    int v13 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v13;
    int v14 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v14;
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v15;
    int v16 = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v16;
    int v17 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v17;
    int v18 = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v18;
    int v19 = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v19;
    int v20 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v20;
    uint64_t v21 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    uint64_t v22 = *((void *)a2 + 11);
    *((void *)a2 + 10) = v21;
    uint64_t v23 = *((void *)this + 11);
    *((void *)this + 11) = v22;
    *((void *)a2 + 11) = v23;
    uint64_t v24 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    double result = *((double *)a2 + 14);
    *((void *)a2 + 13) = v24;
    uint64_t v26 = *((void *)this + 14);
    *((double *)this + 14) = result;
    *((void *)a2 + 14) = v26;
    LODWORD(v24) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v24;
    LODWORD(v24) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v24;
    LODWORD(v24) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v24;
    LODWORD(v24) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v24;
    LODWORD(v24) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v24;
    LODWORD(v24) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v24;
    LODWORD(v24) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v24;
  }
  return result;
}

void *awd::metrics::LocationTileFileUsage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTileFileUsage");
}

double awd::metrics::LocationTileFile::SharedCtor(awd::metrics::LocationTileFile *this)
{
  double result = 0.0;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return result;
}

awd::metrics::LocationTileFile *awd::metrics::LocationTileFile::LocationTileFile(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *(void *)this = &unk_26D7BDA08;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationTileFile::MergeFrom(this, a2);
  return this;
}

void sub_224988BE8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFile::MergeFrom(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationTileFile *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationTileFileUsage **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationTileFile *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      awd::metrics::LocationTileFileUsage::MergeFrom(*(awd::metrics::LocationTileFileUsage **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 48))
    {
      int v11 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 12) |= 1u;
      *((_DWORD *)this + 2) = v11;
      int v9 = *((_DWORD *)a2 + 12);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          return;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 3) = v12;
    if ((*((_DWORD *)a2 + 12) & 4) == 0) {
      return;
    }
LABEL_15:
    int v10 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 10) = v10;
  }
}

void sub_224988DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationTileFile::~LocationTileFile(awd::metrics::LocationTileFile *this)
{
  *(void *)this = &unk_26D7BDA08;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationTileFile::~LocationTileFile(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationTileFile::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationTileFile::default_instance(awd::metrics::LocationTileFile *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationTileFile::default_instance_;
  if (!awd::metrics::LocationTileFile::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationTileFile::default_instance_;
  }
  return result;
}

void awd::metrics::LocationTileFile::New(awd::metrics::LocationTileFile *this)
{
}

uint64_t awd::metrics::LocationTileFile::Clear(awd::metrics::LocationTileFile *this)
{
  if (*((unsigned char *)this + 48))
  {
    *((void *)this + 1) = 0;
    *((_DWORD *)this + 10) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 12) = 0;
  return result;
}

uint64_t awd::metrics::LocationTileFile::MergePartialFromCodedStream(awd::metrics::LocationTileFile *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationTileFile *)((char *)this + 16);
  while (1)
  {
    int v5 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || (char)*v5 < 0) {
      break;
    }
    unint64_t TagFallback = *v5;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v5 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v30 = 0;
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v10 = v30;
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 2) = v10;
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 16)
        {
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
LABEL_26:
        unsigned int v30 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v15 = v30;
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 3) = v15;
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)a2 + 1) = v13;
LABEL_34:
        unsigned int v30 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v17 = v30;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 34) {
          continue;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)a2 + 1) = v18 + 1;
LABEL_42:
      int v19 = *((_DWORD *)this + 7);
      uint64_t v20 = *((int *)this + 6);
      if ((int)v20 >= v19)
      {
        if (v19 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          int v19 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v19 + 1;
        operator new();
      }
      uint64_t v21 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v20 + 1;
      uint64_t v22 = *(awd::metrics::LocationTileFileUsage **)(v21 + 8 * v20);
      unsigned int v30 = 0;
      uint64_t v23 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          return 0;
        }
      }
      else
      {
        unsigned int v30 = *v23;
        *((void *)a2 + 1) = v23 + 1;
      }
      int v24 = *((_DWORD *)a2 + 14);
      int v25 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v24 + 1;
      if (v24 >= v25) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationTileFileUsage::MergePartialFromCodedStream(v22, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v26 = *((_DWORD *)a2 + 14);
      BOOL v27 = __OFSUB__(v26, 1);
      int v28 = v26 - 1;
      if (v28 < 0 == v27) {
        *((_DWORD *)a2 + 14) = v28;
      }
      int v18 = (unsigned char *)*((void *)a2 + 1);
      int v29 = (unsigned char *)*((void *)a2 + 2);
    }
    while (v18 < v29 && *v18 == 34);
    if (v18 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationTileFile::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 4) != 0) {
LABEL_4:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t awd::metrics::LocationTileFile::ByteSize(awd::metrics::LocationTileFile *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_26;
  }
  if (*((unsigned char *)this + 48))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 12);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_19:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else
    {
      int v8 = 2;
    }
    v3 += v8;
  }
LABEL_26:
  int v9 = *((_DWORD *)this + 6);
  uint64_t v10 = (v9 + v3);
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationTileFileUsage::ByteSize(*(awd::metrics::LocationTileFileUsage **)(*((void *)this + 2) + 8 * v11));
      int v13 = (int)v12;
      if (v12 >= 0x80) {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
      }
      else {
        int v14 = 1;
      }
      uint64_t v10 = (v13 + v10 + v14);
      ++v11;
    }
    while (v11 < *((int *)this + 6));
  }
  *((_DWORD *)this + 11) = v10;
  return v10;
}

void awd::metrics::LocationTileFile::CheckTypeAndMergeFrom(awd::metrics::LocationTileFile *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationTileFile::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationTileFile::CopyFrom(awd::metrics::LocationTileFile *this, const awd::metrics::LocationTileFile *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationTileFile *))(*(void *)this + 32))(this);
    awd::metrics::LocationTileFile::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationTileFile::IsInitialized(awd::metrics::LocationTileFile *this)
{
  return 1;
}

awd::metrics::LocationTileFile *awd::metrics::LocationTileFile::Swap(awd::metrics::LocationTileFile *this, awd::metrics::LocationTileFile *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    int v5 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    int v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    this = (awd::metrics::LocationTileFile *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v7 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
    int v8 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v8;
  }
  return this;
}

void *awd::metrics::LocationTileFile::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationTileFile");
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

awd::metrics::LocationWifiAPLocationProviderSession *awd::metrics::LocationWifiAPLocationProviderSession::LocationWifiAPLocationProviderSession(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  *((void *)this + 2) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *(void *)this = &unk_26D7BDA80;
  *((void *)this + 1) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, a2);
  return this;
}

void sub_2249897A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationSessionDay **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      awd::metrics::LocationSessionDay::MergeFrom(*(awd::metrics::LocationSessionDay **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(const awd::metrics::LocationTileFile **)(*((void *)a2 + 5) + 8 * v9);
      int v11 = *((_DWORD *)this + 13);
      uint64_t v12 = *((int *)this + 12);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40));
          int v11 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v12 + 1;
      awd::metrics::LocationTileFile::MergeFrom(*(awd::metrics::LocationTileFile **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 12));
  }
  LOBYTE(v14) = *((unsigned char *)a2 + 72);
  if ((_BYTE)v14)
  {
    if (*((unsigned char *)a2 + 72))
    {
      uint64_t v15 = *((void *)a2 + 1);
      *((_DWORD *)this + 18) |= 1u;
      *((void *)this + 1) = v15;
      int v14 = *((_DWORD *)a2 + 18);
    }
    if ((v14 & 2) != 0)
    {
      int v16 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 18) |= 2u;
      *((_DWORD *)this + 16) = v16;
    }
  }
}

void sub_224989A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiAPLocationProviderSession::~LocationWifiAPLocationProviderSession(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  *(void *)this = &unk_26D7BDA80;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationWifiAPLocationProviderSession::~LocationWifiAPLocationProviderSession(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::default_instance(awd::metrics::LocationWifiAPLocationProviderSession *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationWifiAPLocationProviderSession::default_instance_;
  if (!awd::metrics::LocationWifiAPLocationProviderSession::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiAPLocationProviderSession::default_instance_;
  }
  return result;
}

void awd::metrics::LocationWifiAPLocationProviderSession::New(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::Clear(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  if (*((unsigned char *)this + 72))
  {
    *((void *)this + 1) = 0;
    *((_DWORD *)this + 16) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>((uint64_t)this + 16);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + 18) = 0;
  return result;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::MergePartialFromCodedStream(awd::metrics::LocationWifiAPLocationProviderSession *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 64);
  int v6 = (awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 16);
  uint64_t v7 = (awd::metrics::LocationWifiAPLocationProviderSession *)((char *)this + 40);
LABEL_2:
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || (char)*v8 < 0) {
      break;
    }
    unint64_t TagFallback = *v8;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v8 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 18) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_26:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v14;
          int v16 = v14 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v16 >= v11 || *v16 != 26) {
          continue;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_34;
        }
        goto LABEL_18;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        goto LABEL_52;
      default:
        int v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)a2 + 1) = v16 + 1;
LABEL_34:
      int v17 = *((_DWORD *)this + 7);
      uint64_t v18 = *((int *)this + 6);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
          int v17 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v17 + 1;
        operator new();
      }
      uint64_t v19 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v18 + 1;
      uint64_t v20 = *(awd::metrics::LocationSessionDay **)(v19 + 8 * v18);
      unsigned int v38 = 0;
      uint64_t v21 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38)) {
          return 0;
        }
      }
      else
      {
        unsigned int v38 = *v21;
        *((void *)a2 + 1) = v21 + 1;
      }
      int v22 = *((_DWORD *)a2 + 14);
      int v23 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v22 + 1;
      if (v22 >= v23) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!awd::metrics::LocationSessionDay::MergePartialFromCodedStream(v20, a2) || !*((unsigned char *)a2 + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v24 = *((_DWORD *)a2 + 14);
      BOOL v25 = __OFSUB__(v24, 1);
      int v26 = v24 - 1;
      if (v26 < 0 == v25) {
        *((_DWORD *)a2 + 14) = v26;
      }
      int v16 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v16 >= *((void *)a2 + 2)) {
        goto LABEL_2;
      }
      int v27 = *v16;
    }
    while (v27 == 26);
    if (v27 == 34)
    {
      do
      {
        *((void *)a2 + 1) = v16 + 1;
LABEL_52:
        int v28 = *((_DWORD *)this + 13);
        uint64_t v29 = *((int *)this + 12);
        if ((int)v29 >= v28)
        {
          if (v28 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
            int v28 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v28 + 1;
          operator new();
        }
        uint64_t v30 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v29 + 1;
        int v31 = *(awd::metrics::LocationTileFile **)(v30 + 8 * v29);
        unsigned int v39 = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39))return 0; {
        }
          }
        else
        {
          unsigned int v39 = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationTileFile::MergePartialFromCodedStream(v31, a2) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v35 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v36;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        int v37 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v16 < v37 && *v16 == 34);
      if (v16 == v37 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 40) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::ByteSize(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  if (!*((unsigned char *)this + 72))
  {
    int v2 = 0;
    goto LABEL_11;
  }
  if (*((unsigned char *)this + 72))
  {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 18) & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 72) & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v3 >= 0x80) {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
  }
  else {
    int v4 = 2;
  }
  v2 += v4;
LABEL_11:
  int v5 = *((_DWORD *)this + 6);
  int v6 = v5 + v2;
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationSessionDay::ByteSize(*(awd::metrics::LocationSessionDay **)(*((void *)this + 2) + 8 * v7));
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *((int *)this + 6));
  }
  int v11 = *((_DWORD *)this + 12);
  uint64_t v12 = (v11 + v6);
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationTileFile::ByteSize(*(awd::metrics::LocationTileFile **)(*((void *)this + 5) + 8 * v13));
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v16 = 1;
      }
      uint64_t v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *((int *)this + 12));
  }
  *((_DWORD *)this + 17) = v12;
  return v12;
}

void awd::metrics::LocationWifiAPLocationProviderSession::CheckTypeAndMergeFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiAPLocationProviderSession::CopyFrom(awd::metrics::LocationWifiAPLocationProviderSession *this, const awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiAPLocationProviderSession *))(*(void *)this + 32))(this);
    awd::metrics::LocationWifiAPLocationProviderSession::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::IsInitialized(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::Swap(uint64_t this, awd::metrics::LocationWifiAPLocationProviderSession *a2)
{
  if (a2 != (awd::metrics::LocationWifiAPLocationProviderSession *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *(_DWORD *)(v3 + 72);
    *(_DWORD *)(v3 + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    int v6 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(v3 + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v6;
  }
  return this;
}

void *awd::metrics::LocationWifiAPLocationProviderSession::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiAPLocationProviderSession");
}

double awd::metrics::LocationWifiTileSync::SharedCtor(awd::metrics::LocationWifiTileSync *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationWifiTileSync *awd::metrics::LocationWifiTileSync::LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  *(void *)this = &unk_26D7BDAF8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  awd::metrics::LocationWifiTileSync::MergeFrom(this, a2);
  return this;
}

void sub_22498A4FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiTileSync::MergeFrom(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 44))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v8 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 11) |= 4u;
    *((_DWORD *)this + 5) = v8;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 11) |= 8u;
    *((_DWORD *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 11) |= 0x10u;
    *((_DWORD *)this + 7) = v10;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_18:
    int v11 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 11) |= 0x20u;
    *((_DWORD *)this + 8) = v11;
    if ((*((_DWORD *)a2 + 11) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 11) |= 0x40u;
    *((_DWORD *)this + 9) = v5;
  }
}

void sub_22498A664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationWifiTileSync::~LocationWifiTileSync(awd::metrics::LocationWifiTileSync *this)
{
  *(void *)this = &unk_26D7BDAF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BDAF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDAF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationWifiTileSync::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationWifiTileSync::default_instance(awd::metrics::LocationWifiTileSync *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationWifiTileSync::default_instance_;
  if (!awd::metrics::LocationWifiTileSync::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationAlsCacheTiles_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationWifiTileSync::default_instance_;
  }
  return result;
}

void awd::metrics::LocationWifiTileSync::New(awd::metrics::LocationWifiTileSync *this)
{
}

uint64_t awd::metrics::LocationWifiTileSync::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationWifiTileSync::MergePartialFromCodedStream(awd::metrics::LocationWifiTileSync *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 16);
  uint64_t v6 = (unsigned int *)((char *)this + 20);
  int v7 = (unsigned int *)((char *)this + 24);
  int v8 = (unsigned int *)((char *)this + 28);
  int v9 = (unsigned int *)((char *)this + 32);
  int v10 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    int v11 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *int v4 = *v15;
          int v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
LABEL_30:
          *((_DWORD *)this + 11) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            int v17 = v16 + 1;
            *((void *)a2 + 1) = v17;
            goto LABEL_33;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
LABEL_33:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v17;
          int v23 = v17 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v23 >= v14 || *v23 != 24) {
          continue;
        }
        uint64_t v18 = v23 + 1;
        *((void *)a2 + 1) = v18;
LABEL_41:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v18;
          int v24 = v18 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 11) |= 4u;
        if ((unint64_t)v24 >= v14 || *v24 != 32) {
          continue;
        }
        uint64_t v19 = v24 + 1;
        *((void *)a2 + 1) = v19;
LABEL_49:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          BOOL v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v7 = *v19;
          BOOL v25 = v19 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 11) |= 8u;
        if ((unint64_t)v25 >= v14 || *v25 != 40) {
          continue;
        }
        uint64_t v20 = v25 + 1;
        *((void *)a2 + 1) = v20;
LABEL_57:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v20;
          int v26 = v20 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 11) |= 0x10u;
        if ((unint64_t)v26 >= v14 || *v26 != 48) {
          continue;
        }
        uint64_t v21 = v26 + 1;
        *((void *)a2 + 1) = v21;
LABEL_65:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v21;
          int v27 = v21 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 11) |= 0x20u;
        if ((unint64_t)v27 >= v14 || *v27 != 56) {
          continue;
        }
        int v22 = v27 + 1;
        *((void *)a2 + 1) = v22;
LABEL_73:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v28 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v10 = *v22;
          int v28 = (unsigned __int8 *)(v22 + 1);
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 11) |= 0x40u;
        if (v28 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_41;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_49;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_57;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_65;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_73;
      default:
        int v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationWifiTileSync::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
    if ((v5[11] & 0x40) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[11];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_15:
  uint64_t v7 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationWifiTileSync::ByteSize(awd::metrics::LocationWifiTileSync *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_37;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 11);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 11);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v3 = (v9 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 11);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_33:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v3 = (v15 + v3);
  }
LABEL_37:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void awd::metrics::LocationWifiTileSync::CheckTypeAndMergeFrom(awd::metrics::LocationWifiTileSync *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationWifiTileSync::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationWifiTileSync::CopyFrom(awd::metrics::LocationWifiTileSync *this, const awd::metrics::LocationWifiTileSync *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationWifiTileSync *))(*(void *)this + 32))(this);
    awd::metrics::LocationWifiTileSync::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationWifiTileSync::IsInitialized(awd::metrics::LocationWifiTileSync *this)
{
  return 1;
}

uint64_t awd::metrics::LocationWifiTileSync::Swap(uint64_t this, awd::metrics::LocationWifiTileSync *a2)
{
  if (a2 != (awd::metrics::LocationWifiTileSync *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return this;
}

void *awd::metrics::LocationWifiTileSync::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationWifiTileSync");
}

uint64_t awd::metrics::LocationTilesUsage::GetCachedSize(awd::metrics::LocationTilesUsage *this)
{
  return *((unsigned int *)this + 3);
}

uint64_t awd::metrics::LocationALSCacheUsage::GetCachedSize(awd::metrics::LocationALSCacheUsage *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationALSNetworkUsage::GetCachedSize(awd::metrics::LocationALSNetworkUsage *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t awd::metrics::LocationSessionDay::GetCachedSize(awd::metrics::LocationSessionDay *this)
{
  return *((unsigned int *)this + 19);
}

uint64_t awd::metrics::LocationTileFileUsage::GetCachedSize(awd::metrics::LocationTileFileUsage *this)
{
  return *((unsigned int *)this + 34);
}

uint64_t awd::metrics::LocationTileFile::GetCachedSize(awd::metrics::LocationTileFile *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationWifiAPLocationProviderSession::GetCachedSize(awd::metrics::LocationWifiAPLocationProviderSession *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationWifiTileSync::GetCachedSize(awd::metrics::LocationWifiTileSync *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFileUsage>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationSessionDay>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationTileFile>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t awd::metrics::protobuf_ShutdownFile_MicroLocation_2eproto(awd::metrics *this)
{
  if (awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_);
  if (awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_);
  if (awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_);
  if (awd::metrics::LocationMicroLocationEventHistogram::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationEventHistogram::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationEventHistogram::default_instance_);
  if (awd::metrics::LocationMicroLocationClusteringByModel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationClusteringByModel::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationClusteringByModel::default_instance_);
  if (awd::metrics::LocationMicroLocationMetaData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationMetaData::default_instance_ + 8))(awd::metrics::LocationMicroLocationMetaData::default_instance_);
  }
  if (awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationModelState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationModelState::default_instance_ + 8))(awd::metrics::LocationMicroLocationModelState::default_instance_);
  }
  if (awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_);
  if (awd::metrics::LocationMicroLocationLearningState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationLearningState::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationLearningState::default_instance_);
  if (awd::metrics::LocationMicroLocationAnalyticsState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationMicroLocationAnalyticsState::default_instance_
  }
                                    + 8))(awd::metrics::LocationMicroLocationAnalyticsState::default_instance_);
  uint64_t result = awd::metrics::LocationMicroLocationStatistics::default_instance_;
  if (awd::metrics::LocationMicroLocationStatistics::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)awd::metrics::LocationMicroLocationStatistics::default_instance_ + 8);
    return v2();
  }
  return result;
}

void awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/MicroLocation.pb.cc", a4);
    operator new();
  }
}

double awd::metrics::LocationMicroLocationSignificanceMetric::LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  *(void *)this = &unk_26D7BDC30;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDC30;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  *(void *)this = &unk_26D7BDCA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDCA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationEventTypeAndCount::LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  *(void *)&double result = 1;
  *((void *)this + 3) = 1;
  uint64_t v2 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BDD20;
  *((void *)this + 1) = v2;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(void *)&double result = 1;
  *((void *)this + 3) = 1;
  uint64_t v2 = MEMORY[0x263F8C740];
  *(void *)this = &unk_26D7BDD20;
  *((void *)this + 1) = v2;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationEventHistogram::LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  *(void *)this = &unk_26D7BDD98;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDD98;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationClusteringByModel::LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BDE10;
  *((_DWORD *)this + 6) = 0;
  double result = NAN;
  *((_OWORD *)this + 2) = xmmword_2249AA4A0;
  return result;
}

{
  double result;

  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BDE10;
  *((_DWORD *)this + 6) = 0;
  double result = NAN;
  *((_OWORD *)this + 2) = xmmword_2249AA4A0;
  return result;
}

void *awd::metrics::LocationMicroLocationMetaData::LocationMicroLocationMetaData(void *this)
{
  *this = &unk_26D7BDE88;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = 0;
  this[3] = 0;
  this[4] = v1;
  this[5] = 0;
  this[6] = 0;
  return this;
}

{
  uint64_t v1;

  *this = &unk_26D7BDE88;
  this[1] = 0;
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = 0;
  this[3] = 0;
  this[4] = v1;
  this[5] = 0;
  this[6] = 0;
  return this;
}

double awd::metrics::LocationMicroLocationMeasurementStatistics::LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  *(void *)this = &unk_26D7BDF00;
  *((void *)this + 1) = 0;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDF00;
  *((void *)this + 1) = 0;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

double awd::metrics::LocationMicroLocationUserEventStatistics::LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  *(void *)this = &unk_26D7BDF78;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 11) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDF78;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 11) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationEventClusteringStatistics::LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  *(void *)this = &unk_26D7BDFF0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 1) = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BDFF0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 1) = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationLocalizationStatistics::LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  *(void *)this = &unk_26D7BE068;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE068;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationModelState::LocationMicroLocationModelState(uint64_t this)
{
  *(void *)this = &unk_26D7BE0E0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 36) = 0;
  *(void *)(this + 28) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BE0E0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 36) = 0;
  *(void *)(this + 28) = 0;
  return this;
}

double awd::metrics::LocationMicroLocationClusteringStatistics::LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  *(void *)this = &unk_26D7BE158;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 10) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE158;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 10) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationLearningState::LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this)
{
  *(void *)this = &unk_26D7BE1D0;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE1D0;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationAnalyticsState::LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  *(void *)this = &unk_26D7BE248;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE248;
  *((void *)this + 1) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

double awd::metrics::LocationMicroLocationStatistics::LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this)
{
  *(void *)this = &unk_26D7BE2C0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE2C0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::InitAsDefaultInstance(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  }
  *((void *)this + 4) = v5;
}

void *awd::metrics::LocationMicroLocationClusteringStatistics::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_)
  {
    this[2] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
LABEL_4:
    v1[3] = v2;
LABEL_5:
    v1[4] = v2;
LABEL_6:
    v1[5] = v2;
LABEL_7:
    v1[7] = v2;
LABEL_8:
    v1[8] = v2;
    goto LABEL_9;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[2] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2) {
    goto LABEL_4;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[3] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2) {
    goto LABEL_5;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[4] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2) {
    goto LABEL_6;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[5] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2) {
    goto LABEL_7;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[7] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (v2) {
    goto LABEL_8;
  }
  this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
  uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  v1[8] = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (!v2)
  {
    this = (void *)awd::metrics::protobuf_AddDesc_MicroLocation_2eproto((awd::metrics *)this);
    uint64_t v2 = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  }
LABEL_9:
  v1[9] = v2;
  return this;
}

void awd::metrics::LocationMicroLocationStatistics::InitAsDefaultInstance(awd::metrics::LocationMicroLocationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  if (!awd::metrics::LocationMicroLocationMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(this, a2, a3, a4);
    uint64_t v5 = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  }
  *((void *)this + 2) = v5;
}

BOOL awd::metrics::LocationMicroLocationGenerationAlgorithm_IsValid(awd::metrics *this)
{
  return this < 4;
}

BOOL awd::metrics::LOIType_IsValid(awd::metrics *this)
{
  return (this + 1) < 3;
}

BOOL awd::metrics::LocationMicroLocationMetricType_IsValid(awd::metrics *this)
{
  return this < 5;
}

BOOL awd::metrics::MicroLocationRecordingEventType_IsValid(awd::metrics *this)
{
  return (this - 1) < 0xA;
}

BOOL awd::metrics::LocationMicroLocationModelType_IsValid(awd::metrics *this)
{
  return this < 2;
}

double awd::metrics::LocationMicroLocationSignificanceMetric::SharedCtor(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationMicroLocationSignificanceMetric *awd::metrics::LocationMicroLocationSignificanceMetric::LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  *(void *)this = &unk_26D7BDC30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, a2);
  return this;
}

void sub_22498C1C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((void *)this + 2) = v7;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *((void *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((void *)this + 3) = v5;
  }
}

void sub_22498C2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::~LocationMicroLocationSignificanceMetric(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  *(void *)this = &unk_26D7BDC30;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BDC30;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDC30;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::default_instance(awd::metrics::LocationMicroLocationSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  if (!awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationSignificanceMetric::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationSignificanceMetric::New(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationSignificanceMetric *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v13;
          unint64_t v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 9) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!result) {
          return result;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        *uint64_t v5 = *v15;
        int v16 = v15 + 1;
        *((void *)a2 + 1) = v16;
      }
      *((_DWORD *)this + 9) |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        uint64_t v12 = v16 + 1;
        *((void *)a2 + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v12;
          int v17 = (unsigned __int8 *)(v12 + 1);
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 9) |= 4u;
        if (v17 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 36) & 2) != 0)
  {
LABEL_7:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    int v2 = *((_DWORD *)this + 9);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t v3 = v3
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CopyFrom(awd::metrics::LocationMicroLocationSignificanceMetric *this, const awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationSignificanceMetric *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::IsInitialized(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::Swap(uint64_t this, awd::metrics::LocationMicroLocationSignificanceMetric *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationSignificanceMetric *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationSignificanceMetric::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationSignificanceMetric");
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::SharedCtor(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance(awd::metrics::LocationMicroLocationEventTypeAndCount *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventTypeAndCount::default_instance_;
  }
  return result;
}

awd::metrics::LocationMicroLocationEventSignificanceMetric *awd::metrics::LocationMicroLocationEventSignificanceMetric::LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  *(void *)this = &unk_26D7BDCA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, a2);
  return this;
}

void sub_22498C968(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v8 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v8;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v9 = *((void *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((void *)this + 2) = v9;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
LABEL_18:
    unsigned int v10 = *((_DWORD *)a2 + 10);
    if (v10 >= 5) {
      awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom();
    }
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 10) = v10;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
LABEL_8:
    uint64_t v5 = *((void *)a2 + 3);
    *((_DWORD *)this + 12) |= 8u;
    *((void *)this + 3) = v5;
    int v4 = *((_DWORD *)a2 + 12);
LABEL_9:
    if ((v4 & 0x10) != 0)
    {
      *((_DWORD *)this + 12) |= 0x10u;
      int v6 = (awd::metrics::LocationMicroLocationEventTypeAndCount *)*((void *)this + 4);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const awd::metrics::LocationMicroLocationEventTypeAndCount *)*((void *)a2 + 4);
      if (!v7) {
        uint64_t v7 = *(const awd::metrics::LocationMicroLocationEventTypeAndCount **)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
      }
                                                                            + 32);
      awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(v6, v7);
    }
  }
}

void sub_22498CB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::~LocationMicroLocationEventSignificanceMetric(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  *(void *)this = &unk_26D7BDCA8;
  if ((awd::metrics::LocationMicroLocationEventSignificanceMetric *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 4);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationEventSignificanceMetric::~LocationMicroLocationEventSignificanceMetric(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationMicroLocationEventSignificanceMetric::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ != this)
  {
    this = (void *)this[4];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::New(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 48);
  if (v2)
  {
    *(_DWORD *)(this + 40) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(void *)(this + 8) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 32);
      if (this) {
        this = awd::metrics::LocationMicroLocationEventTypeAndCount::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 32);
  if (v1)
  {
    *(_DWORD *)(this + 24) = 1;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  while (2)
  {
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v10;
          unint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          uint64_t v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_29:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v12;
          int v16 = v12 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)a2 + 1) = v13;
LABEL_37:
        v27[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!result) {
            return result;
          }
          unsigned int v17 = v27[0];
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v17 <= 4)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 10) = v17;
        }
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v27;
        }
        int v14 = *((_DWORD *)this + 12) | 8;
        *((_DWORD *)this + 12) = v14;
        uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_51:
        *((_DWORD *)this + 12) = v14 | 0x10;
        uint64_t v20 = (awd::metrics::LocationMicroLocationEventTypeAndCount *)*((void *)this + 4);
        if (!v20) {
          operator new();
        }
        v27[0] = 0;
        uint64_t v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 < v23)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream(v20, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v24 = *((_DWORD *)a2 + 14);
              BOOL v25 = __OFSUB__(v24, 1);
              int v26 = v24 - 1;
              if (v26 < 0 == v25) {
                *((_DWORD *)a2 + 14) = v26;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
        int v14 = *((_DWORD *)this + 12);
        goto LABEL_51;
      default:
        int v8 = TagFallback & 7;
LABEL_21:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_ + 32);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::ByteSize(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    int v2 = *((_DWORD *)this + 12);
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v5 = 2;
    }
    LODWORD(v3) = v5 + v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t v3 = (v3 + 9);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x10) != 0)
  {
    int v6 = (awd::metrics::LocationMicroLocationEventTypeAndCount *)*((void *)this + 4);
    if (!v6) {
      int v6 = *(awd::metrics::LocationMicroLocationEventTypeAndCount **)(awd::metrics::LocationMicroLocationEventSignificanceMetric::default_instance_
    }
                                                                    + 32);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(v6);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    }
    else {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v8 + v9 + 1);
  }
LABEL_25:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v5 = *((_DWORD *)a2 + 6);
      if ((v5 - 1) >= 0xA) {
        awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom();
      }
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 6) = v5;
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = (const std::string *)*((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 2u;
      uint64_t v7 = (std::string *)*((void *)this + 1);
      if (v7 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v8 = *((void *)a2 + 2);
      *((_DWORD *)this + 8) |= 4u;
      *((void *)this + 2) = v8;
    }
  }
}

void sub_22498D4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CopyFrom(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, const awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventSignificanceMetric *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::IsInitialized(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  return 1;
}

double awd::metrics::LocationMicroLocationEventSignificanceMetric::Swap(awd::metrics::LocationMicroLocationEventSignificanceMetric *this, awd::metrics::LocationMicroLocationEventSignificanceMetric *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return result;
}

void *awd::metrics::LocationMicroLocationEventSignificanceMetric::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventSignificanceMetric");
}

double awd::metrics::LocationMicroLocationEventTypeAndCount::SharedCtor(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  *(void *)&double result = 1;
  *((void *)this + 3) = 1;
  *((void *)this + 1) = MEMORY[0x263F8C740];
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

awd::metrics::LocationMicroLocationEventTypeAndCount *awd::metrics::LocationMicroLocationEventTypeAndCount::LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  uint64_t v3 = MEMORY[0x263F8C740];
  *((void *)this + 3) = 1;
  *(void *)this = &unk_26D7BDD20;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, a2);
  return this;
}

void sub_22498D698(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::~LocationMicroLocationEventTypeAndCount(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  *(void *)this = &unk_26D7BDD20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDD20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDD20;
  awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 8);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::New(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventTypeAndCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 16);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v18 = 0;
        uint64_t v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18);
          if (!result) {
            return result;
          }
          unsigned int v13 = v18;
        }
        else
        {
          unsigned int v13 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v13 - 1 <= 9)
        {
          *((_DWORD *)this + 8) |= 1u;
          *((_DWORD *)this + 6) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
        {
          *((void *)a2 + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_19;
      }
LABEL_29:
      *((_DWORD *)this + 8) |= 2u;
      if (*((void *)this + 1) == v5) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      int v15 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
      if ((unint64_t)v15 < v10 && *v15 == 24)
      {
        unint64_t v11 = v15 + 1;
        *((void *)a2 + 1) = v11;
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v16 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v11;
          int v16 = (unsigned __int8 *)(v11 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v16 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_22;
    }
LABEL_13:
    uint64_t v5 = *((void *)this + 1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v3 = (v3 + v10 + v6 + 1);
    goto LABEL_22;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v4 & 0x80000000) != 0)
  {
    uint64_t v3 = 11;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0) {
        goto LABEL_22;
      }
      goto LABEL_13;
    }
    uint64_t v3 = 2;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_22:
  if ((v2 & 4) != 0) {
    uint64_t v3 = v3
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
LABEL_24:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CopyFrom(awd::metrics::LocationMicroLocationEventTypeAndCount *this, const awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventTypeAndCount *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::IsInitialized(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::Swap(uint64_t this, awd::metrics::LocationMicroLocationEventTypeAndCount *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationEventTypeAndCount *)this)
  {
    int v2 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 8);
    uint64_t v4 = *(void *)(this + 16);
    uint64_t v5 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v5;
    *((void *)a2 + 1) = v3;
    *((void *)a2 + 2) = v4;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationEventTypeAndCount::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventTypeAndCount");
}

void *awd::metrics::LocationMicroLocationEventHistogram::SharedCtor(void *this)
{
  this[6] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::LocationMicroLocationEventHistogram *awd::metrics::LocationMicroLocationEventHistogram::LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  *(void *)this = &unk_26D7BDD98;
  *((void *)this + 6) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, a2);
  return this;
}

void sub_22498DE50(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>(v1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationMicroLocationEventTypeAndCount **)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24));
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom(*(awd::metrics::LocationMicroLocationEventTypeAndCount **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v10 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v10;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v11 = *((void *)a2 + 2);
      *((_DWORD *)this + 13) |= 2u;
      *((void *)this + 2) = v11;
    }
  }
}

void sub_22498E028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventHistogram::~LocationMicroLocationEventHistogram(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  *(void *)this = &unk_26D7BDD98;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>((uint64_t *)this + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationEventHistogram::~LocationMicroLocationEventHistogram(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::default_instance(awd::metrics::LocationMicroLocationEventHistogram *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationEventHistogram::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventHistogram::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventHistogram::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationEventHistogram::New(awd::metrics::LocationMicroLocationEventHistogram *this)
{
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::Clear(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  if (*((unsigned char *)this + 52))
  {
    *((void *)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>((uint64_t)this + 24);
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventHistogram *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  int v6 = (awd::metrics::LocationMicroLocationEventHistogram *)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v12 = (char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!result) {
              return result;
            }
            unsigned int v13 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
          }
          else
          {
            *uint64_t v4 = *v12;
            unsigned int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
          }
          *((_DWORD *)this + 13) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_27;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v14;
          int v16 = v14 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 13) |= 2u;
        if ((unint64_t)v16 < v11 && *v16 == 26) {
          goto LABEL_34;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      while (1)
      {
        int v17 = *((_DWORD *)this + 9);
        uint64_t v18 = *((int *)this + 8);
        if ((int)v18 >= v17)
        {
          if (v17 == *((_DWORD *)this + 10))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v17 = *((_DWORD *)this + 9);
          }
          *((_DWORD *)this + 9) = v17 + 1;
          operator new();
        }
        uint64_t v19 = *((void *)this + 3);
        *((_DWORD *)this + 8) = v18 + 1;
        uint64_t v20 = *(awd::metrics::LocationMicroLocationEventTypeAndCount **)(v19 + 8 * v18);
        unsigned int v28 = 0;
        uint64_t v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationEventTypeAndCount::MergePartialFromCodedStream(v20, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v26;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        int v27 = (unsigned char *)*((void *)a2 + 2);
        if (v16 >= v27 || *v16 != 26) {
          break;
        }
LABEL_34:
        *((void *)a2 + 1) = v16 + 1;
      }
      if (v16 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::ByteSize(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  if (!*((unsigned char *)this + 52))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 52))
  {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 13) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 52) & 2) != 0) {
LABEL_7:
  }
    v2 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
LABEL_8:
  int v3 = *((_DWORD *)this + 8);
  uint64_t v4 = (v3 + v2);
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventTypeAndCount::ByteSize(*(awd::metrics::LocationMicroLocationEventTypeAndCount **)(*((void *)this + 3) + 8 * v5));
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      uint64_t v4 = (v7 + v4 + v8);
      ++v5;
    }
    while (v5 < *((int *)this + 8));
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void awd::metrics::LocationMicroLocationEventHistogram::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventHistogram::CopyFrom(awd::metrics::LocationMicroLocationEventHistogram *this, const awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventHistogram *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::IsInitialized(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationEventHistogram *awd::metrics::LocationMicroLocationEventHistogram::Swap(awd::metrics::LocationMicroLocationEventHistogram *this, awd::metrics::LocationMicroLocationEventHistogram *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    this = (awd::metrics::LocationMicroLocationEventHistogram *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v6 = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    int v7 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationEventHistogram::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventHistogram");
}

double awd::metrics::LocationMicroLocationClusteringByModel::SharedCtor(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  double result = NAN;
  *((_OWORD *)this + 2) = xmmword_2249AA4A0;
  return result;
}

awd::metrics::LocationMicroLocationClusteringByModel *awd::metrics::LocationMicroLocationClusteringByModel::LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7BDE10;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_OWORD *)this + 2) = xmmword_2249AA4A0;
  awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, a2);
  return this;
}

void sub_22498E888(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationMicroLocationEventHistogram **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationMicroLocationEventHistogram::MergeFrom(*(awd::metrics::LocationMicroLocationEventHistogram **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 44))
    {
      unsigned int v10 = *((_DWORD *)a2 + 8);
      if (v10 >= 2) {
        awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom();
      }
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 8) = v10;
      int v9 = *((_DWORD *)a2 + 11);
    }
    if ((v9 & 4) != 0)
    {
      int v11 = *((_DWORD *)a2 + 9);
      if ((v11 + 1) >= 3) {
        awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom();
      }
      *((_DWORD *)this + 11) |= 4u;
      *((_DWORD *)this + 9) = v11;
    }
  }
}

void sub_22498EA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringByModel::~LocationMicroLocationClusteringByModel(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  *(void *)this = &unk_26D7BDE10;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationClusteringByModel::~LocationMicroLocationClusteringByModel(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::default_instance(awd::metrics::LocationMicroLocationClusteringByModel *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationClusteringByModel::default_instance_;
  if (!awd::metrics::LocationMicroLocationClusteringByModel::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationClusteringByModel::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationClusteringByModel::New(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::Clear(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  if (*((unsigned char *)this + 44)) {
    *((void *)this + 4) = 0xFFFFFFFF00000000;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>((uint64_t)this + 8);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationClusteringByModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationMicroLocationClusteringByModel *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      unsigned int v28 = 0;
      int v11 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v12 = v28;
      }
      else
      {
        unsigned int v12 = *v11;
        *((void *)a2 + 1) = v11 + 1;
      }
      if (v12 <= 1)
      {
        *((_DWORD *)this + 11) |= 1u;
        *((_DWORD *)this + 8) = v12;
      }
      int v14 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((void *)a2 + 1) = v14 + 1;
LABEL_29:
          int v15 = *((_DWORD *)this + 5);
          uint64_t v16 = *((int *)this + 4);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v15 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v15 + 1;
            operator new();
          }
          uint64_t v17 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v16 + 1;
          uint64_t v18 = *(awd::metrics::LocationMicroLocationEventHistogram **)(v17 + 8 * v16);
          unsigned int v29 = 0;
          uint64_t v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)a2 + 14);
          int v21 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationMicroLocationEventHistogram::MergePartialFromCodedStream(v18, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v22 = *((_DWORD *)a2 + 14);
          BOOL v23 = __OFSUB__(v22, 1);
          int v24 = v22 - 1;
          if (v24 < 0 == v23) {
            *((_DWORD *)a2 + 14) = v24;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v14 >= v10) {
            break;
          }
          int v25 = *v14;
          if (v25 != 18)
          {
            if (v25 == 24)
            {
              int v9 = v14 + 1;
              *((void *)a2 + 1) = v9;
LABEL_47:
              unsigned int v27 = 0;
              if ((unint64_t)v9 >= v10 || *v9 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
                if (!result) {
                  return result;
                }
                unsigned int v26 = v27;
              }
              else
              {
                unsigned int v26 = *v9;
                *((void *)a2 + 1) = v9 + 1;
              }
              if (v26 + 1 <= 2)
              {
                *((_DWORD *)this + 11) |= 4u;
                *((_DWORD *)this + 9) = v26;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_47;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 44) & 4) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 36);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::ByteSize(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  char v2 = *((unsigned char *)this + 44);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 4) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 4) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 4) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 44) & 4) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_19:
  int v7 = *((_DWORD *)this + 4);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventHistogram::ByteSize(*(awd::metrics::LocationMicroLocationEventHistogram **)(*((void *)this + 1) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationMicroLocationClusteringByModel::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationClusteringByModel::CopyFrom(awd::metrics::LocationMicroLocationClusteringByModel *this, const awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationClusteringByModel *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::IsInitialized(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationClusteringByModel *awd::metrics::LocationMicroLocationClusteringByModel::Swap(awd::metrics::LocationMicroLocationClusteringByModel *this, awd::metrics::LocationMicroLocationClusteringByModel *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (awd::metrics::LocationMicroLocationClusteringByModel *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationClusteringByModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationClusteringByModel");
}

void *awd::metrics::LocationMicroLocationMetaData::SharedCtor(void *this)
{
  this[1] = 0;
  this[4] = MEMORY[0x263F8C740];
  this[5] = 0;
  this[6] = 0;
  return this;
}

awd::metrics::LocationMicroLocationMetaData *awd::metrics::LocationMicroLocationMetaData::LocationMicroLocationMetaData(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  *(void *)this = &unk_26D7BDE88;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = MEMORY[0x263F8C740];
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, a2);
  return this;
}

void sub_22498F31C(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMetaData::MergeFrom(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v7 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v7;
      int v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 4) == 0)
      {
LABEL_8:
        if ((v5 & 8) == 0) {
          return;
        }
        goto LABEL_9;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 4) == 0)
    {
      goto LABEL_8;
    }
    uint64_t v8 = (const std::string *)*((void *)a2 + 4);
    *((_DWORD *)this + 13) |= 4u;
    uint64_t v9 = (std::string *)*((void *)this + 4);
    if (v9 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v9, v8);
    if ((*((_DWORD *)a2 + 13) & 8) != 0)
    {
LABEL_9:
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 13) |= 8u;
      *((void *)this + 5) = v6;
    }
  }
}

void sub_22498F4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMetaData::~LocationMicroLocationMetaData(awd::metrics::LocationMicroLocationMetaData *this)
{
  *(void *)this = &unk_26D7BDE88;
  awd::metrics::LocationMicroLocationMetaData::SharedDtor((uint64_t)this);
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationMetaData::~LocationMicroLocationMetaData(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 32);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x22A61A830);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::default_instance(awd::metrics::LocationMicroLocationMetaData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationMetaData::default_instance_;
  if (!awd::metrics::LocationMicroLocationMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationMetaData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationMetaData::New(awd::metrics::LocationMicroLocationMetaData *this)
{
}

uint64_t awd::metrics::LocationMicroLocationMetaData::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 52);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 32);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 16;
  int v5 = (unint64_t *)((char *)this + 8);
  uint64_t v6 = (unint64_t *)((char *)this + 40);
  uint64_t v7 = MEMORY[0x263F8C740];
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v11 || (char)*v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v12;
          unsigned int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 13) |= 1u;
        if ((unint64_t)v13 >= v11) {
          continue;
        }
        int v17 = *v13;
        goto LABEL_40;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
          if (!result) {
            return result;
          }
          while (1)
          {
            unsigned int v13 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
            if ((unint64_t)v13 >= v11) {
              goto LABEL_2;
            }
            int v17 = *v13;
            if (v17 == 26) {
              break;
            }
LABEL_40:
            if (v17 != 16) {
              goto LABEL_2;
            }
            int v14 = (char *)(v13 + 1);
            *((void *)a2 + 1) = v14;
LABEL_29:
            unsigned int v24 = 0;
            if ((unint64_t)v14 >= v11 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
              if (!result) {
                return result;
              }
              unsigned int v18 = v24;
            }
            else
            {
              unsigned int v18 = *v14;
              *((void *)a2 + 1) = v14 + 1;
            }
            if (v18 + 1 <= 2)
            {
              int v19 = *((_DWORD *)this + 6);
              if (v19 == *((_DWORD *)this + 7))
              {
                wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v4, v19 + 1);
                int v19 = *((_DWORD *)this + 6);
              }
              uint64_t v20 = *((void *)this + 2);
              *((_DWORD *)this + 6) = v19 + 1;
              *(_DWORD *)(v20 + 4 * v19) = v18;
            }
          }
          *((void *)a2 + 1) = v13 + 1;
LABEL_43:
          *((_DWORD *)this + 13) |= 4u;
          if (*((void *)this + 4) == v7) {
            operator new();
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          if ((unint64_t)v21 < v15 && *v21 == 32)
          {
            uint64_t v16 = v21 + 1;
            *((void *)a2 + 1) = v16;
LABEL_49:
            if ((unint64_t)v16 >= v15 || *v16 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
              if (!result) {
                return result;
              }
              int v22 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v15 = *((void *)a2 + 2);
            }
            else
            {
              *uint64_t v6 = *v16;
              int v22 = (unsigned __int8 *)(v16 + 1);
              *((void *)a2 + 1) = v22;
            }
            *((_DWORD *)this + 13) |= 8u;
            if (v22 == (unsigned __int8 *)v15 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v14 = (char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_29;
        }
LABEL_19:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_43;
        }
        goto LABEL_19;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_49;
      default:
        int v10 = TagFallback & 7;
        goto LABEL_19;
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 52)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(*(void *)(v5 + 16) + 4 * v6++), (uint64_t)a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 8) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMetaData::ByteSize(awd::metrics::LocationMicroLocationMetaData *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_18;
  }
  if (*((unsigned char *)this + 52))
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
LABEL_7:
    uint64_t v4 = *((void *)this + 4);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v2 = *((_DWORD *)this + 13);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    v3 += v9 + v5 + 1;
    goto LABEL_16;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 52) & 4) != 0) {
    goto LABEL_7;
  }
LABEL_16:
  if ((v2 & 8) != 0) {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
  }
                                                                                      + 5))
        + 1;
LABEL_18:
  int v10 = *((_DWORD *)this + 6);
  if (v10 < 1)
  {
    int v12 = 0;
  }
  else
  {
    uint64_t v11 = 0;
    int v12 = 0;
    do
    {
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                             + 4 * v11);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 10;
      }
      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        int v10 = *((_DWORD *)this + 6);
      }
      else
      {
        int v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  uint64_t result = (v12 + v3 + v10);
  *((_DWORD *)this + 12) = result;
  return result;
}

void awd::metrics::LocationMicroLocationMetaData::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationMetaData::CopyFrom(awd::metrics::LocationMicroLocationMetaData *this, const awd::metrics::LocationMicroLocationMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationMetaData *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationMetaData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationMetaData::IsInitialized(awd::metrics::LocationMicroLocationMetaData *this)
{
  return 1;
}

double awd::metrics::LocationMicroLocationMetaData::Swap(awd::metrics::LocationMicroLocationMetaData *this, awd::metrics::LocationMicroLocationMetaData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 4);
    uint64_t v6 = *((void *)this + 5);
    uint64_t v7 = *((void *)a2 + 5);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)this + 5) = v7;
    double result = *((double *)a2 + 3);
    uint64_t v9 = *((void *)this + 3);
    *((double *)this + 3) = result;
    *((void *)a2 + 3) = v9;
    *((void *)a2 + 4) = v5;
    *((void *)a2 + 5) = v6;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return result;
}

void *awd::metrics::LocationMicroLocationMetaData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationMetaData");
}

double awd::metrics::LocationMicroLocationMeasurementStatistics::SharedCtor(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

awd::metrics::LocationMicroLocationMeasurementStatistics *awd::metrics::LocationMicroLocationMeasurementStatistics::LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  *(void *)this = &unk_26D7BDF00;
  *((void *)this + 1) = 0;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, a2);
  return this;
}

void sub_22498FE18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 72);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 72))
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = *((_DWORD *)a2 + 16);
    if ((v6 + 1) >= 3) {
      awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom();
    }
    *((_DWORD *)this + 18) |= 2u;
    *((_DWORD *)this + 16) = v6;
    int v4 = *((_DWORD *)a2 + 18);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 18) |= 4u;
    *((void *)this + 2) = v8;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v9 = *((void *)a2 + 3);
  *((_DWORD *)this + 18) |= 8u;
  *((void *)this + 3) = v9;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_20:
    uint64_t v11 = *((void *)a2 + 5);
    *((_DWORD *)this + 18) |= 0x20u;
    *((void *)this + 5) = v11;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_15;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t v10 = *((void *)a2 + 4);
  *((_DWORD *)this + 18) |= 0x10u;
  *((void *)this + 4) = v10;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_21:
  uint64_t v12 = *((void *)a2 + 6);
  *((_DWORD *)this + 18) |= 0x40u;
  *((void *)this + 6) = v12;
  if ((*((_DWORD *)a2 + 18) & 0x80) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)a2 + 7);
    *((_DWORD *)this + 18) |= 0x80u;
    *((void *)this + 7) = v7;
  }
}

void sub_22498FFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::~LocationMicroLocationMeasurementStatistics(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  *(void *)this = &unk_26D7BDF00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BDF00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDF00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance(awd::metrics::LocationMicroLocationMeasurementStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationMeasurementStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::New(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 72))
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 64) = -1;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationMeasurementStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  int v6 = (unint64_t *)((char *)this + 24);
  uint64_t v7 = (unint64_t *)((char *)this + 32);
  uint64_t v8 = (unint64_t *)((char *)this + 40);
  uint64_t v9 = (unint64_t *)((char *)this + 48);
  uint64_t v10 = (unint64_t *)((char *)this + 56);
  while (2)
  {
    uint64_t v11 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *int v4 = *v15;
          uint64_t v16 = v15 + 1;
          *((void *)a2 + 1) = v16;
LABEL_32:
          *((_DWORD *)this + 18) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            int v17 = v16 + 1;
            *((void *)a2 + 1) = v17;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
LABEL_35:
        unsigned int v34 = 0;
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
          if (!result) {
            return result;
          }
          unsigned int v25 = v34;
        }
        else
        {
          unsigned int v25 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if (v25 + 1 <= 2)
        {
          *((_DWORD *)this + 18) |= 2u;
          *((_DWORD *)this + 16) = v25;
        }
        unsigned int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v18 || *v26 != 24) {
          continue;
        }
        int v19 = v26 + 1;
        *((void *)a2 + 1) = v19;
LABEL_45:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v19;
          unsigned int v27 = v19 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 18) |= 4u;
        if ((unint64_t)v27 >= v18 || *v27 != 32) {
          continue;
        }
        uint64_t v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v20;
          unsigned int v28 = v20 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 18) |= 8u;
        if ((unint64_t)v28 >= v18 || *v28 != 40) {
          continue;
        }
        int v21 = v28 + 1;
        *((void *)a2 + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v21;
          unsigned int v29 = v21 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 18) |= 0x10u;
        if ((unint64_t)v29 >= v18 || *v29 != 48) {
          continue;
        }
        int v22 = v29 + 1;
        *((void *)a2 + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v18 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v22;
          uint64_t v30 = v22 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 18) |= 0x20u;
        if ((unint64_t)v30 >= v18 || *v30 != 56) {
          continue;
        }
        BOOL v23 = v30 + 1;
        *((void *)a2 + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v18 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v9 = *v23;
          int v31 = v23 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 18) |= 0x40u;
        if ((unint64_t)v31 >= v18 || *v31 != 64) {
          continue;
        }
        unsigned int v24 = v31 + 1;
        *((void *)a2 + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v18 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v32 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v10 = *v24;
          int v32 = (unsigned __int8 *)(v24 + 1);
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 18) |= 0x80u;
        if (v32 != (unsigned __int8 *)v18 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_45;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_53;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_61;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_69;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        BOOL v23 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_77;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_85;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 48), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 56);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::ByteSize(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 72);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if (*((unsigned char *)this + 72))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 18);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 72) & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    int v2 = *((_DWORD *)this + 18);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 6))
       + 1;
    if ((*((_DWORD *)this + 18) & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_24:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 5))
     + 1;
  int v2 = *((_DWORD *)this + 18);
  if ((v2 & 0x40) != 0) {
    goto LABEL_25;
  }
LABEL_18:
  if ((v2 & 0x80) != 0) {
LABEL_19:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 7))
       + 1;
LABEL_20:
  *((_DWORD *)this + 17) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CopyFrom(awd::metrics::LocationMicroLocationMeasurementStatistics *this, const awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationMeasurementStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::IsInitialized(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationMeasurementStatistics *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationMeasurementStatistics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    LODWORD(v8) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationMeasurementStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationMeasurementStatistics");
}

double awd::metrics::LocationMicroLocationUserEventStatistics::SharedCtor(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 11) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  return result;
}

awd::metrics::LocationMicroLocationUserEventStatistics *awd::metrics::LocationMicroLocationUserEventStatistics::LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  *(void *)this = &unk_26D7BDF78;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 11) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  *((_DWORD *)this + 21) = 0;
  awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224990AB0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4) {
    goto LABEL_16;
  }
  if (v4)
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 23) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = *((_DWORD *)a2 + 12);
    if ((v6 + 1) >= 3) {
      awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom();
    }
    *((_DWORD *)this + 23) |= 2u;
    *((_DWORD *)this + 12) = v6;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v11 = *((void *)a2 + 2);
    *((_DWORD *)this + 23) |= 4u;
    *((void *)this + 2) = v11;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v12 = *((void *)a2 + 3);
  *((_DWORD *)this + 23) |= 8u;
  *((void *)this + 3) = v12;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_29:
    uint64_t v14 = *((void *)a2 + 5);
    *((_DWORD *)this + 23) |= 0x20u;
    *((void *)this + 5) = v14;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v13 = *((void *)a2 + 4);
  *((_DWORD *)this + 23) |= 0x10u;
  *((void *)this + 4) = v13;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_30:
  uint64_t v15 = *((void *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((void *)this + 7) = v15;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((void *)this + 8) = v7;
    int v4 = *((_DWORD *)a2 + 23);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
LABEL_22:
    uint64_t v9 = *((void *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x200u;
    *((void *)this + 10) = v9;
    if ((*((_DWORD *)a2 + 23) & 0x400) == 0) {
      return;
    }
    goto LABEL_23;
  }
  uint64_t v8 = *((void *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x100u;
  *((void *)this + 9) = v8;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_19:
  if ((v4 & 0x400) == 0) {
    return;
  }
LABEL_23:
  unsigned int v10 = *((_DWORD *)a2 + 13);
  if (v10 >= 2) {
    awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom();
  }
  *((_DWORD *)this + 23) |= 0x400u;
  *((_DWORD *)this + 13) = v10;
}

void sub_224990CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::~LocationMicroLocationUserEventStatistics(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  *(void *)this = &unk_26D7BDF78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BDF78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BDF78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::default_instance(awd::metrics::LocationMicroLocationUserEventStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationUserEventStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationUserEventStatistics::New(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 48) = -1;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(void *)(this + 56) = 0;
    *(void *)(this + 64) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationUserEventStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v41 = (unint64_t *)((char *)this + 8);
  int v4 = (unint64_t *)((char *)this + 16);
  uint64_t v5 = (unint64_t *)((char *)this + 24);
  int v6 = (unint64_t *)((char *)this + 32);
  uint64_t v7 = (unint64_t *)((char *)this + 40);
  uint64_t v8 = (unint64_t *)((char *)this + 56);
  uint64_t v9 = (unint64_t *)((char *)this + 64);
  unsigned int v10 = (unint64_t *)((char *)this + 72);
  uint64_t v11 = (unint64_t *)((char *)this + 80);
  while (2)
  {
    uint64_t v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v41 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_38:
          *((_DWORD *)this + 23) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            unint64_t v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v41);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_41:
        unsigned int v43 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43);
          if (!result) {
            return result;
          }
          unsigned int v29 = v43;
        }
        else
        {
          unsigned int v29 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v29 + 1 <= 2)
        {
          *((_DWORD *)this + 23) |= 2u;
          *((_DWORD *)this + 12) = v29;
        }
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v19 || *v30 != 24) {
          continue;
        }
        uint64_t v20 = v30 + 1;
        *((void *)a2 + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v20;
          int v31 = v20 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 23) |= 4u;
        if ((unint64_t)v31 >= v19 || *v31 != 32) {
          continue;
        }
        int v21 = v31 + 1;
        *((void *)a2 + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v21;
          int v32 = v21 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v32 >= v19 || *v32 != 40) {
          continue;
        }
        int v22 = v32 + 1;
        *((void *)a2 + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v22;
          int v33 = v22 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v33 >= v19 || *v33 != 48) {
          continue;
        }
        BOOL v23 = v33 + 1;
        *((void *)a2 + 1) = v23;
LABEL_75:
        if ((unint64_t)v23 >= v19 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v23;
          unsigned int v34 = v23 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        if ((unint64_t)v34 >= v19 || *v34 != 56) {
          continue;
        }
        unsigned int v24 = v34 + 1;
        *((void *)a2 + 1) = v24;
LABEL_83:
        if ((unint64_t)v24 >= v19 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v8 = *v24;
          int v35 = v24 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        if ((unint64_t)v35 >= v19 || *v35 != 64) {
          continue;
        }
        unsigned int v25 = v35 + 1;
        *((void *)a2 + 1) = v25;
LABEL_91:
        if ((unint64_t)v25 >= v19 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v9);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v9 = *v25;
          int v36 = v25 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v36 >= v19 || *v36 != 72) {
          continue;
        }
        unsigned int v26 = v36 + 1;
        *((void *)a2 + 1) = v26;
LABEL_99:
        if ((unint64_t)v26 >= v19 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v10);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v10 = *v26;
          int v37 = v26 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        if ((unint64_t)v37 >= v19 || *v37 != 80) {
          continue;
        }
        unsigned int v27 = v37 + 1;
        *((void *)a2 + 1) = v27;
LABEL_107:
        if ((unint64_t)v27 >= v19 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v11);
          if (!result) {
            return result;
          }
          unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v11 = *v27;
          unsigned int v38 = v27 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        if ((unint64_t)v38 >= v19 || *v38 != 88) {
          continue;
        }
        unsigned int v28 = v38 + 1;
        *((void *)a2 + 1) = v28;
LABEL_115:
        unsigned int v42 = 0;
        if ((unint64_t)v28 >= v19 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
          if (!result) {
            return result;
          }
          unsigned int v39 = v42;
        }
        else
        {
          unsigned int v39 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        if (v39 <= 1)
        {
          *((_DWORD *)this + 23) |= 0x400u;
          *((_DWORD *)this + 13) = v39;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_51;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_59;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_67;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        BOOL v23 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_75;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_83;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v25 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_91;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v26 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v27 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v28 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_115;
      default:
        int v14 = TagFallback & 7;
LABEL_32:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(v5 + 80), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 92) & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  uint64_t v7 = *(unsigned int *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::ByteSize(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  int v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 23);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 23);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    int v2 = *((_DWORD *)this + 23);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 4))
     + 1;
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 5))
     + 1;
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_29:
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 7))
     + 1;
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x80) != 0)
  {
LABEL_19:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 8))
       + 1;
    int v2 = *((_DWORD *)this + 23);
  }
LABEL_20:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_39;
  }
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
LABEL_32:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 10))
       + 1;
    if ((*((_DWORD *)this + 23) & 0x400) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 9))
     + 1;
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_23:
  if ((v2 & 0x400) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v3 = (v7 + v3);
LABEL_39:
  *((_DWORD *)this + 22) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CopyFrom(awd::metrics::LocationMicroLocationUserEventStatistics *this, const awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationUserEventStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::IsInitialized(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationUserEventStatistics *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationUserEventStatistics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v7;
    uint64_t v8 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v8;
    uint64_t v9 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    uint64_t v10 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v10;
    LODWORD(v10) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationUserEventStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationUserEventStatistics");
}

double awd::metrics::LocationMicroLocationEventClusteringStatistics::SharedCtor(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 1) = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0;
  return result;
}

awd::metrics::LocationMicroLocationEventClusteringStatistics *awd::metrics::LocationMicroLocationEventClusteringStatistics::LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  *(void *)this = &unk_26D7BDFF0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 1) = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0;
  awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224991A38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationMicroLocationEventSignificanceMetric **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom(*(awd::metrics::LocationMicroLocationEventSignificanceMetric **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 44))
    {
      int v10 = *((_DWORD *)a2 + 2);
      if ((v10 + 1) >= 3) {
        awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom();
      }
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 2) = v10;
      int v9 = *((_DWORD *)a2 + 11);
    }
    if ((v9 & 2) != 0)
    {
      unsigned int v11 = *((_DWORD *)a2 + 3);
      if (v11 >= 2) {
        awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom();
      }
      *((_DWORD *)this + 11) |= 2u;
      *((_DWORD *)this + 3) = v11;
    }
  }
}

void sub_224991C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::~LocationMicroLocationEventClusteringStatistics(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  *(void *)this = &unk_26D7BDFF0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationEventClusteringStatistics::~LocationMicroLocationEventClusteringStatistics(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationEventClusteringStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::New(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::Clear(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  if (*((unsigned char *)this + 44)) {
    *((void *)this + 1) = 0xFFFFFFFFLL;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationMicroLocationEventClusteringStatistics *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          unsigned int v29 = 0;
          int v9 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
            if (!result) {
              return result;
            }
            unsigned int v10 = v29;
          }
          else
          {
            unsigned int v10 = *v9;
            *((void *)a2 + 1) = v9 + 1;
          }
          if (v10 + 1 <= 2)
          {
            *((_DWORD *)this + 11) |= 1u;
            *((_DWORD *)this + 2) = v10;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            uint64_t v12 = v14 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_29;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_29:
        unsigned int v28 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v15 = v28;
        }
        else
        {
          unsigned int v15 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v15 <= 1)
        {
          *((_DWORD *)this + 11) |= 2u;
          *((_DWORD *)this + 3) = v15;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 26) {
          goto LABEL_38;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_19;
      }
      while (1)
      {
        int v17 = *((_DWORD *)this + 7);
        uint64_t v18 = *((int *)this + 6);
        if ((int)v18 >= v17)
        {
          if (v17 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v17 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v17 + 1;
          operator new();
        }
        uint64_t v19 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v18 + 1;
        uint64_t v20 = *(awd::metrics::LocationMicroLocationEventSignificanceMetric **)(v19 + 8 * v18);
        unsigned int v30 = 0;
        int v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0; {
        }
          }
        else
        {
          unsigned int v30 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationEventSignificanceMetric::MergePartialFromCodedStream(v20, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v26;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unsigned int v27 = (unsigned char *)*((void *)a2 + 2);
        if (v16 >= v27 || *v16 != 26) {
          break;
        }
LABEL_38:
        *((void *)a2 + 1) = v16 + 1;
      }
      if (v16 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
  }
  if ((v6 & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::ByteSize(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  char v2 = *((unsigned char *)this + 44);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_19:
  int v7 = *((_DWORD *)this + 6);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventSignificanceMetric::ByteSize(*(awd::metrics::LocationMicroLocationEventSignificanceMetric **)(*((void *)this + 2) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CopyFrom(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, const awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationEventClusteringStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::IsInitialized(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationEventClusteringStatistics *awd::metrics::LocationMicroLocationEventClusteringStatistics::Swap(awd::metrics::LocationMicroLocationEventClusteringStatistics *this, awd::metrics::LocationMicroLocationEventClusteringStatistics *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    int v5 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    this = (awd::metrics::LocationMicroLocationEventClusteringStatistics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationEventClusteringStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationEventClusteringStatistics");
}

double awd::metrics::LocationMicroLocationLocalizationStatistics::SharedCtor(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return result;
}

awd::metrics::LocationMicroLocationLocalizationStatistics *awd::metrics::LocationMicroLocationLocalizationStatistics::LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  *(void *)this = &unk_26D7BE068;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = 0;
  awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, a2);
  return this;
}

void sub_2249924B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 10);
      if ((v6 + 1) >= 3) {
        awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom();
      }
      *((_DWORD *)this + 12) |= 2u;
      *((_DWORD *)this + 10) = v6;
      int v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v8 = *((void *)a2 + 2);
      *((_DWORD *)this + 12) |= 4u;
      *((void *)this + 2) = v8;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 8) == 0)
      {
LABEL_11:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((v4 & 8) == 0)
    {
      goto LABEL_11;
    }
    uint64_t v9 = *((void *)a2 + 3);
    *((_DWORD *)this + 12) |= 8u;
    *((void *)this + 3) = v9;
    if ((*((_DWORD *)a2 + 12) & 0x10) != 0)
    {
LABEL_12:
      uint64_t v7 = *((void *)a2 + 4);
      *((_DWORD *)this + 12) |= 0x10u;
      *((void *)this + 4) = v7;
    }
  }
}

void sub_2249925E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::~LocationMicroLocationLocalizationStatistics(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  *(void *)this = &unk_26D7BE068;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE068;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE068;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance(awd::metrics::LocationMicroLocationLocalizationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationLocalizationStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::New(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 40) = -1;
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationLocalizationStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  int v6 = (unint64_t *)((char *)this + 24);
  uint64_t v7 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *int v4 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
LABEL_26:
          *((_DWORD *)this + 12) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_29:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v19 = v25;
        }
        else
        {
          unsigned int v19 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v19 + 1 <= 2)
        {
          *((_DWORD *)this + 12) |= 2u;
          *((_DWORD *)this + 10) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 24) {
          continue;
        }
        uint64_t v16 = v20 + 1;
        *((void *)a2 + 1) = v16;
LABEL_39:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v16;
          int v21 = v16 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v21 >= v15 || *v21 != 32) {
          continue;
        }
        int v17 = v21 + 1;
        *((void *)a2 + 1) = v17;
LABEL_47:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v17;
          int v22 = v17 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v22 >= v15 || *v22 != 40) {
          continue;
        }
        uint64_t v18 = v22 + 1;
        *((void *)a2 + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v18;
          int v23 = (unsigned __int8 *)(v18 + 1);
          *((void *)a2 + 1) = v23;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        if (v23 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_39;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_47;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_55;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::ByteSize(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (*((unsigned char *)this + 48))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_19:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
    if ((*((_DWORD *)this + 12) & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 2))
     + 1;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_15:
  if ((v2 & 0x10) != 0) {
LABEL_16:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
LABEL_17:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CopyFrom(awd::metrics::LocationMicroLocationLocalizationStatistics *this, const awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationLocalizationStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::IsInitialized(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationLocalizationStatistics *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationLocalizationStatistics *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationLocalizationStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationLocalizationStatistics");
}

uint64_t awd::metrics::LocationMicroLocationModelState::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = -1;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 20) = 0;
  *(void *)(this + 36) = 0;
  *(void *)(this + 28) = 0;
  return this;
}

awd::metrics::LocationMicroLocationModelState *awd::metrics::LocationMicroLocationModelState::LocationMicroLocationModelState(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  *(void *)this = &unk_26D7BE0E0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  *(void *)((char *)this + 20) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 28) = 0;
  awd::metrics::LocationMicroLocationModelState::MergeFrom(this, a2);
  return this;
}

void sub_224992E78(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationModelState::MergeFrom(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 + 1) >= 3) {
        awd::metrics::LocationMicroLocationModelState::MergeFrom();
      }
      *((_DWORD *)this + 12) |= 2u;
      *((_DWORD *)this + 4) = v6;
      int v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 5);
      if (v7 >= 4) {
        awd::metrics::LocationMicroLocationModelState::MergeFrom();
      }
      *((_DWORD *)this + 12) |= 4u;
      *((_DWORD *)this + 5) = v7;
      int v4 = *((_DWORD *)a2 + 12);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v8 = *((void *)a2 + 3);
      *((_DWORD *)this + 12) |= 8u;
      *((void *)this + 3) = v8;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 0x10) == 0)
      {
LABEL_14:
        if ((v4 & 0x20) == 0) {
          return;
        }
LABEL_18:
        unsigned int v10 = *((_DWORD *)a2 + 10);
        if (v10 >= 2) {
          awd::metrics::LocationMicroLocationModelState::MergeFrom();
        }
        *((_DWORD *)this + 12) |= 0x20u;
        *((_DWORD *)this + 10) = v10;
        return;
      }
    }
    else if ((v4 & 0x10) == 0)
    {
      goto LABEL_14;
    }
    uint64_t v9 = *((void *)a2 + 4);
    *((_DWORD *)this + 12) |= 0x10u;
    *((void *)this + 4) = v9;
    if ((*((_DWORD *)a2 + 12) & 0x20) == 0) {
      return;
    }
    goto LABEL_18;
  }
}

void sub_224992FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationModelState::~LocationMicroLocationModelState(awd::metrics::LocationMicroLocationModelState *this)
{
  *(void *)this = &unk_26D7BE0E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE0E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE0E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationModelState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationModelState::default_instance(awd::metrics::LocationMicroLocationModelState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationModelState::default_instance_;
  if (!awd::metrics::LocationMicroLocationModelState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationModelState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationModelState::New(awd::metrics::LocationMicroLocationModelState *this)
{
}

uint64_t awd::metrics::LocationMicroLocationModelState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = -1;
    *(void *)(this + 20) = 0;
    *(void *)(this + 36) = 0;
    *(void *)(this + 28) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationModelState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationModelState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 24);
  int v6 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    unsigned int v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_28:
          *((_DWORD *)this + 12) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            uint64_t v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_31:
        unsigned int v30 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v20 = v30;
        }
        else
        {
          unsigned int v20 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v20 + 1 <= 2)
        {
          *((_DWORD *)this + 12) |= 2u;
          *((_DWORD *)this + 4) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v21 >= v14 || *v21 != 24) {
          continue;
        }
        unint64_t v15 = v21 + 1;
        *((void *)a2 + 1) = v15;
LABEL_41:
        unsigned int v29 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
          if (!result) {
            return result;
          }
          unsigned int v22 = v29;
        }
        else
        {
          unsigned int v22 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v22 <= 3)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 5) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v16 || *v23 != 32) {
          continue;
        }
        int v17 = v23 + 1;
        *((void *)a2 + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v17;
          int v24 = v17 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v24 >= v16 || *v24 != 40) {
          continue;
        }
        uint64_t v18 = v24 + 1;
        *((void *)a2 + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v18;
          unsigned int v25 = v18 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v25 >= v16 || *v25 != 48) {
          continue;
        }
        unsigned int v19 = v25 + 1;
        *((void *)a2 + 1) = v19;
LABEL_67:
        unsigned int v28 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v26 = v28;
        }
        else
        {
          unsigned int v26 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        if (v26 <= 1)
        {
          *((_DWORD *)this + 12) |= 0x20u;
          *((_DWORD *)this + 10) = v26;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_41;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_51;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_59;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_67;
      default:
        int v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationModelState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = *(unsigned int *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationModelState::ByteSize(awd::metrics::LocationMicroLocationModelState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_32;
  }
  if (*((unsigned char *)this + 48))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_25:
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
         + 1;
      if ((*((_DWORD *)this + 12) & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v3 = v3
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 3))
     + 1;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 0x10) != 0) {
    goto LABEL_25;
  }
LABEL_16:
  if ((v2 & 0x20) == 0) {
    goto LABEL_32;
  }
LABEL_26:
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v3 = (v9 + v3);
LABEL_32:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationModelState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationModelState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationModelState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationModelState::CopyFrom(awd::metrics::LocationMicroLocationModelState *this, const awd::metrics::LocationMicroLocationModelState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationModelState *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationModelState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationModelState::IsInitialized(awd::metrics::LocationMicroLocationModelState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationModelState::Swap(uint64_t this, awd::metrics::LocationMicroLocationModelState *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationModelState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationModelState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationModelState");
}

double awd::metrics::LocationMicroLocationClusteringStatistics::SharedCtor(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 10) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  return result;
}

awd::metrics::LocationMicroLocationClusteringStatistics *awd::metrics::LocationMicroLocationClusteringStatistics::LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  *(void *)this = &unk_26D7BE158;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = -1;
  *((void *)this + 10) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 68) = 0;
  *(void *)((char *)this + 60) = 0;
  *((_DWORD *)this + 19) = 0;
  awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, a2);
  return this;
}

void sub_2249939B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *((_DWORD *)a2 + 21);
  if (!(_BYTE)v4) {
    goto LABEL_46;
  }
  if (v4)
  {
    uint64_t v5 = *((void *)a2 + 1);
    *((_DWORD *)this + 21) |= 1u;
    *((void *)this + 1) = v5;
    int v4 = *((_DWORD *)a2 + 21);
  }
  if ((v4 & 2) != 0)
  {
    int v6 = *((_DWORD *)a2 + 12);
    if ((v6 + 1) >= 3) {
      awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom();
    }
    *((_DWORD *)this + 21) |= 2u;
    *((_DWORD *)this + 12) = v6;
    int v4 = *((_DWORD *)a2 + 21);
  }
  if ((v4 & 4) != 0)
  {
    *((_DWORD *)this + 21) |= 4u;
    int v7 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 2);
    if (!v8) {
      uint64_t v8 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
    }
                                                                           + 16);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 21);
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  *((_DWORD *)this + 21) |= 8u;
  int v9 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  unint64_t v10 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 3);
  if (!v10) {
    unint64_t v10 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                          + 24);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v9, v10);
  int v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_31:
    *((_DWORD *)this + 21) |= 0x20u;
    uint64_t v13 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 5);
    if (!v13) {
      operator new();
    }
    unint64_t v14 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 5);
    if (!v14) {
      unint64_t v14 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
    }
                                                                            + 40);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v13, v14);
    int v4 = *((_DWORD *)a2 + 21);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_46;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *((_DWORD *)this + 21) |= 0x10u;
  unint64_t v11 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 4);
  if (!v11) {
    operator new();
  }
  int v12 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 4);
  if (!v12) {
    int v12 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                          + 32);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v11, v12);
  int v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_36:
  *((_DWORD *)this + 21) |= 0x40u;
  unint64_t v15 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 7);
  if (!v15) {
    operator new();
  }
  unint64_t v16 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 7);
  if (!v16) {
    unint64_t v16 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                          + 56);
  awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v15, v16);
  int v4 = *((_DWORD *)a2 + 21);
  if ((v4 & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 21) |= 0x80u;
    int v17 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 8);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 8);
    if (!v18) {
      uint64_t v18 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
    }
                                                                            + 64);
    awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v17, v18);
    int v4 = *((_DWORD *)a2 + 21);
  }
LABEL_46:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *((_DWORD *)this + 21) |= 0x100u;
      unsigned int v19 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 9);
      if (!v19) {
        operator new();
      }
      unsigned int v20 = (const awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)a2 + 9);
      if (!v20) {
        unsigned int v20 = *(const awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
      }
                                                                              + 72);
      awd::metrics::LocationMicroLocationSignificanceMetric::MergeFrom(v19, v20);
      int v4 = *((_DWORD *)a2 + 21);
    }
    if ((v4 & 0x200) != 0)
    {
      unsigned int v21 = *((_DWORD *)a2 + 13);
      if (v21 >= 2) {
        awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom();
      }
      *((_DWORD *)this + 21) |= 0x200u;
      *((_DWORD *)this + 13) = v21;
    }
  }
}

void sub_224993E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::~LocationMicroLocationClusteringStatistics(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  *(void *)this = &unk_26D7BE158;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE158;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE158;
  awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationMicroLocationClusteringStatistics::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ != this)
  {
    int v1 = this;
    uint64_t v2 = this[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    this = (void *)v1[9];
    if (this)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v8();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::default_instance(awd::metrics::LocationMicroLocationClusteringStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationClusteringStatistics::New(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 84);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 48) = -1;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(this + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(this + 40);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      uint64_t v6 = *(void *)(this + 56);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
    if ((v1 & 0x80) != 0)
    {
      uint64_t v7 = *(void *)(this + 64);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 36))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 36) = 0;
        int v1 = *(_DWORD *)(this + 84);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v8 = *(void *)(this + 72);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 36))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
        }
        *(_DWORD *)(v8 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 52) = 0;
  }
  *(_DWORD *)(this + 84) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationClusteringStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v9;
          unint64_t v10 = v9 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 21) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 16)
        {
          unint64_t v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
          goto LABEL_39;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
LABEL_39:
        unsigned int v68 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68);
          if (!result) {
            return result;
          }
          unsigned int v15 = v68;
        }
        else
        {
          unsigned int v15 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (v15 + 1 <= 2)
        {
          *((_DWORD *)this + 21) |= 2u;
          *((_DWORD *)this + 12) = v15;
        }
        unint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_49:
        *((_DWORD *)this + 21) |= 4u;
        int v17 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v68 = 0;
        uint64_t v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v17, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_63:
        *((_DWORD *)this + 21) |= 8u;
        unsigned int v25 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 3);
        if (!v25) {
          operator new();
        }
        unsigned int v68 = 0;
        unsigned int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v25, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_77:
        *((_DWORD *)this + 21) |= 0x10u;
        int v32 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 4);
        if (!v32) {
          operator new();
        }
        unsigned int v68 = 0;
        int v33 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)a2 + 14);
        int v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v32, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v36 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_91:
        *((_DWORD *)this + 21) |= 0x20u;
        unsigned int v39 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 5);
        if (!v39) {
          operator new();
        }
        unsigned int v68 = 0;
        int v40 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v39, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v43 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v44;
        }
        int v45 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v45 + 1;
LABEL_105:
        *((_DWORD *)this + 21) |= 0x40u;
        int v46 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 7);
        if (!v46) {
          operator new();
        }
        unsigned int v68 = 0;
        int v47 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v47;
          *((void *)a2 + 1) = v47 + 1;
        }
        int v48 = *((_DWORD *)a2 + 14);
        int v49 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v48 + 1;
        if (v48 >= v49) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v46, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v50 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_119:
        *((_DWORD *)this + 21) |= 0x80u;
        uint64_t v53 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 8);
        if (!v53) {
          operator new();
        }
        unsigned int v68 = 0;
        int v54 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v54 >= *((void *)a2 + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v54;
          *((void *)a2 + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)a2 + 14);
        int v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v53, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v57 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v58;
        }
        int v59 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v59 >= *((void *)a2 + 2) || *v59 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v59 + 1;
LABEL_133:
        *((_DWORD *)this + 21) |= 0x100u;
        int v60 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 9);
        if (!v60) {
          operator new();
        }
        unsigned int v68 = 0;
        int v61 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v61 >= *((void *)a2 + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68))return 0; {
        }
          }
        else
        {
          unsigned int v68 = *v61;
          *((void *)a2 + 1) = v61 + 1;
        }
        int v62 = *((_DWORD *)a2 + 14);
        int v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationSignificanceMetric::MergePartialFromCodedStream(v60, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v64 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v65;
        }
        unsigned int v66 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v66 < v12 && *v66 == 80)
        {
          uint64_t v13 = v66 + 1;
          *((void *)a2 + 1) = v13;
LABEL_147:
          unsigned int v68 = 0;
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v68);
            if (!result) {
              return result;
            }
            unsigned int v67 = v68;
          }
          else
          {
            unsigned int v67 = *v13;
            *((void *)a2 + 1) = v13 + 1;
          }
          if (v67 <= 1)
          {
            *((_DWORD *)this + 21) |= 0x200u;
            *((_DWORD *)this + 13) = v67;
          }
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_49;
        }
        goto LABEL_30;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_30;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_77;
        }
        goto LABEL_30;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_91;
        }
        goto LABEL_30;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_105;
        }
        goto LABEL_30;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_119;
        }
        goto LABEL_30;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_133;
        }
        goto LABEL_30;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_147;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 84);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11) {
    uint64_t v11 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12) {
    uint64_t v12 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      return this;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13) {
    uint64_t v13 = *(void *)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
  if ((*(_DWORD *)(v5 + 84) & 0x200) != 0)
  {
LABEL_35:
    uint64_t v14 = *(unsigned int *)(v5 + 52);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v14, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::ByteSize(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  int v2 = *((_DWORD *)this + 21);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_56;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 21);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 21);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v3 + v5 + 1);
LABEL_13:
  if ((v2 & 4) != 0)
  {
    int v6 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 2);
    if (!v6) {
      int v6 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
    }
                                                                     + 16);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v6);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    }
    else {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v8 + v9 + 1);
    int v2 = *((_DWORD *)this + 21);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v10 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 3);
  if (!v10) {
    uint64_t v10 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                    + 24);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v10);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
  }
  else {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v12 + v13 + 1);
  int v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v14 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 4);
  if (!v14) {
    uint64_t v14 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                    + 32);
  unsigned int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v14);
  int v16 = (int)v15;
  if (v15 >= 0x80) {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  }
  else {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v16 + v17 + 1);
  int v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_38:
  uint64_t v18 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 5);
  if (!v18) {
    uint64_t v18 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                    + 40);
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v18);
  int v20 = (int)v19;
  if (v19 >= 0x80) {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
  }
  else {
    int v21 = 1;
  }
  uint64_t v3 = (v3 + v20 + v21 + 1);
  int v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
LABEL_44:
  BOOL v22 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 7);
  if (!v22) {
    BOOL v22 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
  }
                                                                    + 56);
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v22);
  int v24 = (int)v23;
  if (v23 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
  }
  else {
    int v25 = 1;
  }
  uint64_t v3 = (v3 + v24 + v25 + 1);
  int v2 = *((_DWORD *)this + 21);
  if ((v2 & 0x80) != 0)
  {
LABEL_50:
    unsigned int v26 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 8);
    if (!v26) {
      unsigned int v26 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
    }
                                                                      + 64);
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v26);
    int v28 = (int)v27;
    if (v27 >= 0x80) {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
    }
    else {
      int v29 = 1;
    }
    uint64_t v3 = (v3 + v28 + v29 + 1);
    int v2 = *((_DWORD *)this + 21);
  }
LABEL_56:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v30 = (awd::metrics::LocationMicroLocationSignificanceMetric *)*((void *)this + 9);
      if (!v30) {
        int v30 = *(awd::metrics::LocationMicroLocationSignificanceMetric **)(awd::metrics::LocationMicroLocationClusteringStatistics::default_instance_
      }
                                                                        + 72);
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationSignificanceMetric::ByteSize(v30);
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        int v33 = 1;
      }
      uint64_t v3 = (v3 + v32 + v33 + 1);
      int v2 = *((_DWORD *)this + 21);
    }
    if ((v2 & 0x200) != 0)
    {
      int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if ((v34 & 0x80000000) != 0)
      {
        int v35 = 11;
      }
      else if (v34 >= 0x80)
      {
        int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34) + 1;
      }
      else
      {
        int v35 = 2;
      }
      uint64_t v3 = (v35 + v3);
    }
  }
  *((_DWORD *)this + 20) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CopyFrom(awd::metrics::LocationMicroLocationClusteringStatistics *this, const awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationClusteringStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::IsInitialized(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::Swap(uint64_t this, awd::metrics::LocationMicroLocationClusteringStatistics *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationClusteringStatistics *)this)
  {
    int v2 = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    uint64_t v3 = *(void *)(this + 8);
    uint64_t v4 = *(void *)(this + 16);
    uint64_t v5 = *((void *)a2 + 2);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *(void *)(this + 16) = v5;
    *((void *)a2 + 1) = v3;
    *((void *)a2 + 2) = v4;
    uint64_t v6 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    uint64_t v9 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v9;
    uint64_t v10 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v10;
    uint64_t v11 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v11;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationClusteringStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationClusteringStatistics");
}

double awd::metrics::LocationMicroLocationLearningState::SharedCtor(awd::metrics::LocationMicroLocationLearningState *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 3) = 0;
  return result;
}

awd::metrics::LocationMicroLocationLearningState *awd::metrics::LocationMicroLocationLearningState::LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  *(void *)this = &unk_26D7BE1D0;
  *((void *)this + 1) = 0;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, a2);
  return this;
}

void sub_2249953F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLearningState::MergeFrom(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 8);
      if ((v6 + 1) >= 3) {
        awd::metrics::LocationMicroLocationLearningState::MergeFrom();
      }
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 8) = v6;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v7 = *((void *)a2 + 2);
      *((_DWORD *)this + 10) |= 4u;
      *((void *)this + 2) = v7;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v8 = *((void *)a2 + 3);
      *((_DWORD *)this + 10) |= 8u;
      *((void *)this + 3) = v8;
    }
  }
}

void sub_2249954F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationLearningState::~LocationMicroLocationLearningState(awd::metrics::LocationMicroLocationLearningState *this)
{
  *(void *)this = &unk_26D7BE1D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE1D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE1D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationLearningState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::default_instance(awd::metrics::LocationMicroLocationLearningState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationLearningState::default_instance_;
  if (!awd::metrics::LocationMicroLocationLearningState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationLearningState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationLearningState::New(awd::metrics::LocationMicroLocationLearningState *this)
{
}

uint64_t awd::metrics::LocationMicroLocationLearningState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = -1;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationLearningState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  int v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v17 + 1 <= 2)
        {
          *((_DWORD *)this + 10) |= 2u;
          *((_DWORD *)this + 8) = v17;
        }
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v18 >= v14 || *v18 != 24) {
          continue;
        }
        unsigned int v15 = v18 + 1;
        *((void *)a2 + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v15;
          int v19 = v15 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v14 || *v19 != 32) {
          continue;
        }
        int v16 = v19 + 1;
        *((void *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v16;
          int v20 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationLearningState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationLearningState::ByteSize(awd::metrics::LocationMicroLocationLearningState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_13;
    }
LABEL_7:
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
    goto LABEL_13;
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 1))
     + 1;
  int v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    if ((*((_DWORD *)this + 10) & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if ((v2 & 8) != 0) {
LABEL_15:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_16:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationLearningState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationLearningState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationLearningState::CopyFrom(awd::metrics::LocationMicroLocationLearningState *this, const awd::metrics::LocationMicroLocationLearningState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationLearningState *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationLearningState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationLearningState::IsInitialized(awd::metrics::LocationMicroLocationLearningState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationLearningState::Swap(uint64_t this, awd::metrics::LocationMicroLocationLearningState *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationLearningState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationLearningState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationLearningState");
}

double awd::metrics::LocationMicroLocationAnalyticsState::SharedCtor(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 3) = 0;
  return result;
}

awd::metrics::LocationMicroLocationAnalyticsState *awd::metrics::LocationMicroLocationAnalyticsState::LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  *(void *)this = &unk_26D7BE248;
  *((void *)this + 1) = 0;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, a2);
  return this;
}

void sub_224995CB0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 8);
      if ((v6 + 1) >= 3) {
        awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom();
      }
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 8) = v6;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v7 = *((void *)a2 + 2);
      *((_DWORD *)this + 10) |= 4u;
      *((void *)this + 2) = v7;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v8 = *((void *)a2 + 3);
      *((_DWORD *)this + 10) |= 8u;
      *((void *)this + 3) = v8;
    }
  }
}

void sub_224995DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationAnalyticsState::~LocationMicroLocationAnalyticsState(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  *(void *)this = &unk_26D7BE248;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE248;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE248;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::default_instance(awd::metrics::LocationMicroLocationAnalyticsState *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationAnalyticsState::default_instance_;
  if (!awd::metrics::LocationMicroLocationAnalyticsState::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationAnalyticsState::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationAnalyticsState::New(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = -1;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationAnalyticsState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  int v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *int v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v17 + 1 <= 2)
        {
          *((_DWORD *)this + 10) |= 2u;
          *((_DWORD *)this + 8) = v17;
        }
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v18 >= v14 || *v18 != 24) {
          continue;
        }
        unsigned int v15 = v18 + 1;
        *((void *)a2 + 1) = v15;
LABEL_37:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v15;
          int v19 = v15 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v19 >= v14 || *v19 != 32) {
          continue;
        }
        int v16 = v19 + 1;
        *((void *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v16;
          int v20 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::ByteSize(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_13;
    }
LABEL_7:
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
    goto LABEL_13;
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                                 + 1))
     + 1;
  int v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    if ((*((_DWORD *)this + 10) & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if ((v2 & 8) != 0) {
LABEL_15:
  }
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
LABEL_16:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void awd::metrics::LocationMicroLocationAnalyticsState::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationAnalyticsState::CopyFrom(awd::metrics::LocationMicroLocationAnalyticsState *this, const awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationAnalyticsState *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::IsInitialized(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  return 1;
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::Swap(uint64_t this, awd::metrics::LocationMicroLocationAnalyticsState *a2)
{
  if (a2 != (awd::metrics::LocationMicroLocationAnalyticsState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationAnalyticsState::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationAnalyticsState");
}

void *awd::metrics::LocationMicroLocationStatistics::SharedCtor(void *this)
{
  this[30] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

awd::metrics::LocationMicroLocationStatistics *awd::metrics::LocationMicroLocationStatistics::LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  *(void *)this = &unk_26D7BE2C0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 40) = 0;
  *((_DWORD *)this + 46) = 0;
  *((void *)this + 21) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 24) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 25) = 0;
  *((_DWORD *)this + 52) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 30) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, a2);
  return this;
}

void sub_224996658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>(v16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>(v19);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(v18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>(v17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>(v15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>(v14);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>(v12);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(v11);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>(v13);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v10);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationStatistics::MergeFrom(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v43);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const awd::metrics::LocationMicroLocationMeasurementStatistics **)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24));
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom(*(awd::metrics::LocationMicroLocationMeasurementStatistics **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>((int *)this + 12, (uint64_t)a2 + 48);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72));
  if (*((int *)a2 + 20) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unint64_t v10 = *(const awd::metrics::LocationMicroLocationLocalizationStatistics **)(*((void *)a2 + 9) + 8 * v9);
      int v11 = *((_DWORD *)this + 21);
      uint64_t v12 = *((int *)this + 20);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 22))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72));
          int v11 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 9);
      *((_DWORD *)this + 20) = v12 + 1;
      awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom(*(awd::metrics::LocationMicroLocationLocalizationStatistics **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 20));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96));
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unsigned int v15 = *(const awd::metrics::LocationMicroLocationModelState **)(*((void *)a2 + 12) + 8 * v14);
      int v16 = *((_DWORD *)this + 27);
      uint64_t v17 = *((int *)this + 26);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96));
          int v16 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 12);
      *((_DWORD *)this + 26) = v17 + 1;
      awd::metrics::LocationMicroLocationModelState::MergeFrom(*(awd::metrics::LocationMicroLocationModelState **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 26));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120));
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const awd::metrics::LocationMicroLocationLearningState **)(*((void *)a2 + 15) + 8 * v19);
      int v21 = *((_DWORD *)this + 33);
      uint64_t v22 = *((int *)this + 32);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 34))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120));
          int v21 = *((_DWORD *)this + 33);
        }
        *((_DWORD *)this + 33) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *((void *)this + 15);
      *((_DWORD *)this + 32) = v22 + 1;
      awd::metrics::LocationMicroLocationLearningState::MergeFrom(*(awd::metrics::LocationMicroLocationLearningState **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 32));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144));
  if (*((int *)a2 + 38) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = *(const awd::metrics::LocationMicroLocationAnalyticsState **)(*((void *)a2 + 18) + 8 * v24);
      int v26 = *((_DWORD *)this + 39);
      uint64_t v27 = *((int *)this + 38);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144));
          int v26 = *((_DWORD *)this + 39);
        }
        *((_DWORD *)this + 39) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *((void *)this + 18);
      *((_DWORD *)this + 38) = v27 + 1;
      awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom(*(awd::metrics::LocationMicroLocationAnalyticsState **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 38));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>((int *)this + 42, (uint64_t)a2 + 168);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192));
  if (*((int *)a2 + 50) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      int v30 = *(const awd::metrics::LocationMicroLocationClusteringByModel **)(*((void *)a2 + 24) + 8 * v29);
      int v31 = *((_DWORD *)this + 51);
      uint64_t v32 = *((int *)this + 50);
      if ((int)v32 >= v31)
      {
        if (v31 == *((_DWORD *)this + 52))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192));
          int v31 = *((_DWORD *)this + 51);
        }
        *((_DWORD *)this + 51) = v31 + 1;
        operator new();
      }
      uint64_t v33 = *((void *)this + 24);
      *((_DWORD *)this + 50) = v32 + 1;
      awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom(*(awd::metrics::LocationMicroLocationClusteringByModel **)(v33 + 8 * v32), v30);
      ++v29;
    }
    while (v29 < *((int *)a2 + 50));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216));
  if (*((int *)a2 + 56) >= 1)
  {
    uint64_t v34 = 0;
    do
    {
      int v35 = *(const awd::metrics::LocationMicroLocationEventClusteringStatistics **)(*((void *)a2 + 27) + 8 * v34);
      int v36 = *((_DWORD *)this + 57);
      uint64_t v37 = *((int *)this + 56);
      if ((int)v37 >= v36)
      {
        if (v36 == *((_DWORD *)this + 58))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216));
          int v36 = *((_DWORD *)this + 57);
        }
        *((_DWORD *)this + 57) = v36 + 1;
        operator new();
      }
      uint64_t v38 = *((void *)this + 27);
      *((_DWORD *)this + 56) = v37 + 1;
      awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom(*(awd::metrics::LocationMicroLocationEventClusteringStatistics **)(v38 + 8 * v37), v35);
      ++v34;
    }
    while (v34 < *((int *)a2 + 56));
  }
  LOBYTE(v39) = *((unsigned char *)a2 + 244);
  if ((_BYTE)v39)
  {
    if (*((unsigned char *)a2 + 244))
    {
      uint64_t v40 = *((void *)a2 + 1);
      *((_DWORD *)this + 61) |= 1u;
      *((void *)this + 1) = v40;
      int v39 = *((_DWORD *)a2 + 61);
    }
    if ((v39 & 2) != 0)
    {
      *((_DWORD *)this + 61) |= 2u;
      int v41 = (awd::metrics::LocationMicroLocationMetaData *)*((void *)this + 2);
      if (!v41) {
        operator new();
      }
      int v42 = (const awd::metrics::LocationMicroLocationMetaData *)*((void *)a2 + 2);
      if (!v42) {
        int v42 = *(const awd::metrics::LocationMicroLocationMetaData **)(awd::metrics::LocationMicroLocationStatistics::default_instance_
      }
                                                                    + 16);
      awd::metrics::LocationMicroLocationMetaData::MergeFrom(v41, v42);
    }
  }
}

void sub_224996E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationMicroLocationStatistics::~LocationMicroLocationStatistics(awd::metrics::LocationMicroLocationStatistics *this)
{
  *(void *)this = &unk_26D7BE2C0;
  if ((awd::metrics::LocationMicroLocationStatistics *)awd::metrics::LocationMicroLocationStatistics::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>((uint64_t *)this + 27);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>((uint64_t *)this + 24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>((uint64_t *)this + 21);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>((uint64_t *)this + 18);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>((uint64_t *)this + 15);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>((uint64_t *)this + 12);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>((uint64_t *)this + 9);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>((uint64_t *)this + 6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>((uint64_t *)this + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationMicroLocationStatistics::~LocationMicroLocationStatistics(this);

  JUMPOUT(0x22A61A830);
}

void *awd::metrics::LocationMicroLocationStatistics::SharedDtor(void *this)
{
  if ((void *)awd::metrics::LocationMicroLocationStatistics::default_instance_ != this)
  {
    this = (void *)this[2];
    if (this) {
      return (void *)(*(uint64_t (**)(void))(*this + 8))();
    }
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 240) = a2;
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::default_instance(awd::metrics::LocationMicroLocationStatistics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationMicroLocationStatistics::default_instance_;
  if (!awd::metrics::LocationMicroLocationStatistics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_MicroLocation_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationMicroLocationStatistics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationMicroLocationStatistics::New(awd::metrics::LocationMicroLocationStatistics *this)
{
}

uint64_t awd::metrics::LocationMicroLocationStatistics::Clear(awd::metrics::LocationMicroLocationStatistics *this)
{
  char v2 = *((unsigned char *)this + 244);
  if (v2)
  {
    *((void *)this + 1) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3) {
        awd::metrics::LocationMicroLocationMetaData::Clear(v3);
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>((uint64_t)this + 24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>((uint64_t)this + 48);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>((uint64_t)this + 72);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>((uint64_t)this + 96);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>((uint64_t)this + 120);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>((uint64_t)this + 144);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>((uint64_t)this + 168);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>((uint64_t)this + 192);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>((uint64_t)this + 216);
  *((_DWORD *)this + 61) = 0;
  return result;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::MergePartialFromCodedStream(awd::metrics::LocationMicroLocationStatistics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  int v116 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 24);
  int v117 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 48);
  int v118 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 72);
  int v119 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 96);
  int v5 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 120);
  int v6 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 144);
  uint64_t v7 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 168);
  uint64_t v8 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 192);
  uint64_t v9 = (awd::metrics::LocationMicroLocationStatistics *)((char *)this + 216);
  while (1)
  {
LABEL_2:
    unint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
        }
        int v16 = *((_DWORD *)this + 61) | 1;
        *((_DWORD *)this + 61) = v16;
        if ((unint64_t)v15 < v13 && *v15 == 18)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_32;
        }
        int v16 = *((_DWORD *)this + 61);
LABEL_40:
        *((_DWORD *)this + 61) = v16 | 2;
        uint64_t v18 = (awd::metrics::LocationMicroLocationMetaData *)*((void *)this + 2);
        if (!v18) {
          operator new();
        }
        unsigned int v120 = 0;
        uint64_t v19 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
        }
          }
        else
        {
          unsigned int v120 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!awd::metrics::LocationMicroLocationMetaData::MergePartialFromCodedStream(v18, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 < *((void *)a2 + 2) && *v25 == 26)
        {
          do
          {
            *((void *)a2 + 1) = v25 + 1;
LABEL_54:
            int v26 = *((_DWORD *)this + 9);
            uint64_t v27 = *((int *)this + 8);
            if ((int)v27 >= v26)
            {
              if (v26 == *((_DWORD *)this + 10))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v116);
                int v26 = *((_DWORD *)this + 9);
              }
              *((_DWORD *)this + 9) = v26 + 1;
              operator new();
            }
            uint64_t v28 = *((void *)this + 3);
            *((_DWORD *)this + 8) = v27 + 1;
            uint64_t v29 = *(awd::metrics::LocationMicroLocationMeasurementStatistics **)(v28 + 8 * v27);
            unsigned int v120 = 0;
            int v30 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
            }
              }
            else
            {
              unsigned int v120 = *v30;
              *((void *)a2 + 1) = v30 + 1;
            }
            int v31 = *((_DWORD *)a2 + 14);
            int v32 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v31 + 1;
            if (v31 >= v32) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!awd::metrics::LocationMicroLocationMeasurementStatistics::MergePartialFromCodedStream(v29, a2)|| !*((unsigned char *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            int v33 = *((_DWORD *)a2 + 14);
            BOOL v23 = __OFSUB__(v33, 1);
            int v34 = v33 - 1;
            if (v34 < 0 == v23) {
              *((_DWORD *)a2 + 14) = v34;
            }
            int v25 = (unsigned char *)*((void *)a2 + 1);
            if ((unint64_t)v25 >= *((void *)a2 + 2)) {
              goto LABEL_2;
            }
            int v35 = *v25;
          }
          while (v35 == 26);
          if (v35 == 34)
          {
            do
            {
              *((void *)a2 + 1) = v25 + 1;
LABEL_72:
              int v36 = *((_DWORD *)this + 15);
              uint64_t v37 = *((int *)this + 14);
              if ((int)v37 >= v36)
              {
                if (v36 == *((_DWORD *)this + 16))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v117);
                  int v36 = *((_DWORD *)this + 15);
                }
                *((_DWORD *)this + 15) = v36 + 1;
                operator new();
              }
              uint64_t v38 = *((void *)this + 6);
              *((_DWORD *)this + 14) = v37 + 1;
              int v39 = *(awd::metrics::LocationMicroLocationUserEventStatistics **)(v38 + 8 * v37);
              unsigned int v120 = 0;
              uint64_t v40 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
              }
                }
              else
              {
                unsigned int v120 = *v40;
                *((void *)a2 + 1) = v40 + 1;
              }
              int v41 = *((_DWORD *)a2 + 14);
              int v42 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v41 + 1;
              if (v41 >= v42) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!awd::metrics::LocationMicroLocationUserEventStatistics::MergePartialFromCodedStream(v39, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v43 = *((_DWORD *)a2 + 14);
              BOOL v23 = __OFSUB__(v43, 1);
              int v44 = v43 - 1;
              if (v44 < 0 == v23) {
                *((_DWORD *)a2 + 14) = v44;
              }
              int v25 = (unsigned char *)*((void *)a2 + 1);
              if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                goto LABEL_2;
              }
              int v45 = *v25;
            }
            while (v45 == 34);
            if (v45 == 42)
            {
              do
              {
                *((void *)a2 + 1) = v25 + 1;
LABEL_90:
                int v46 = *((_DWORD *)this + 21);
                uint64_t v47 = *((int *)this + 20);
                if ((int)v47 >= v46)
                {
                  if (v46 == *((_DWORD *)this + 22))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v118);
                    int v46 = *((_DWORD *)this + 21);
                  }
                  *((_DWORD *)this + 21) = v46 + 1;
                  operator new();
                }
                uint64_t v48 = *((void *)this + 9);
                *((_DWORD *)this + 20) = v47 + 1;
                int v49 = *(awd::metrics::LocationMicroLocationLocalizationStatistics **)(v48 + 8 * v47);
                unsigned int v120 = 0;
                int v50 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                }
                  }
                else
                {
                  unsigned int v120 = *v50;
                  *((void *)a2 + 1) = v50 + 1;
                }
                int v51 = *((_DWORD *)a2 + 14);
                int v52 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v51 + 1;
                if (v51 >= v52) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!awd::metrics::LocationMicroLocationLocalizationStatistics::MergePartialFromCodedStream(v49, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v53 = *((_DWORD *)a2 + 14);
                BOOL v23 = __OFSUB__(v53, 1);
                int v54 = v53 - 1;
                if (v54 < 0 == v23) {
                  *((_DWORD *)a2 + 14) = v54;
                }
                int v25 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                  goto LABEL_2;
                }
                int v55 = *v25;
              }
              while (v55 == 42);
              if (v55 == 50)
              {
                do
                {
                  *((void *)a2 + 1) = v25 + 1;
LABEL_108:
                  int v56 = *((_DWORD *)this + 27);
                  uint64_t v57 = *((int *)this + 26);
                  if ((int)v57 >= v56)
                  {
                    if (v56 == *((_DWORD *)this + 28))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v119);
                      int v56 = *((_DWORD *)this + 27);
                    }
                    *((_DWORD *)this + 27) = v56 + 1;
                    operator new();
                  }
                  uint64_t v58 = *((void *)this + 12);
                  *((_DWORD *)this + 26) = v57 + 1;
                  int v59 = *(awd::metrics::LocationMicroLocationModelState **)(v58 + 8 * v57);
                  unsigned int v120 = 0;
                  int v60 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v60 >= *((void *)a2 + 2) || *v60 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v120 = *v60;
                    *((void *)a2 + 1) = v60 + 1;
                  }
                  int v61 = *((_DWORD *)a2 + 14);
                  int v62 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v61 + 1;
                  if (v61 >= v62) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!awd::metrics::LocationMicroLocationModelState::MergePartialFromCodedStream(v59, a2)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v63 = *((_DWORD *)a2 + 14);
                  BOOL v23 = __OFSUB__(v63, 1);
                  int v64 = v63 - 1;
                  if (v64 < 0 == v23) {
                    *((_DWORD *)a2 + 14) = v64;
                  }
                  int v25 = (unsigned char *)*((void *)a2 + 1);
                  if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                    goto LABEL_2;
                  }
                  int v65 = *v25;
                }
                while (v65 == 50);
                if (v65 == 58)
                {
                  do
                  {
                    *((void *)a2 + 1) = v25 + 1;
LABEL_126:
                    int v66 = *((_DWORD *)this + 33);
                    uint64_t v67 = *((int *)this + 32);
                    if ((int)v67 >= v66)
                    {
                      if (v66 == *((_DWORD *)this + 34))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
                        int v66 = *((_DWORD *)this + 33);
                      }
                      *((_DWORD *)this + 33) = v66 + 1;
                      operator new();
                    }
                    uint64_t v68 = *((void *)this + 15);
                    *((_DWORD *)this + 32) = v67 + 1;
                    int v69 = *(awd::metrics::LocationMicroLocationLearningState **)(v68 + 8 * v67);
                    unsigned int v120 = 0;
                    unsigned int v70 = (char *)*((void *)a2 + 1);
                    if ((unint64_t)v70 >= *((void *)a2 + 2) || *v70 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                    }
                      }
                    else
                    {
                      unsigned int v120 = *v70;
                      *((void *)a2 + 1) = v70 + 1;
                    }
                    int v71 = *((_DWORD *)a2 + 14);
                    int v72 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v71 + 1;
                    if (v71 >= v72) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!awd::metrics::LocationMicroLocationLearningState::MergePartialFromCodedStream(v69, a2)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v73 = *((_DWORD *)a2 + 14);
                    BOOL v23 = __OFSUB__(v73, 1);
                    int v74 = v73 - 1;
                    if (v74 < 0 == v23) {
                      *((_DWORD *)a2 + 14) = v74;
                    }
                    int v25 = (unsigned char *)*((void *)a2 + 1);
                    if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                      goto LABEL_2;
                    }
                    int v75 = *v25;
                  }
                  while (v75 == 58);
                  if (v75 == 66)
                  {
                    do
                    {
                      *((void *)a2 + 1) = v25 + 1;
LABEL_144:
                      int v76 = *((_DWORD *)this + 39);
                      uint64_t v77 = *((int *)this + 38);
                      if ((int)v77 >= v76)
                      {
                        if (v76 == *((_DWORD *)this + 40))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                          int v76 = *((_DWORD *)this + 39);
                        }
                        *((_DWORD *)this + 39) = v76 + 1;
                        operator new();
                      }
                      uint64_t v78 = *((void *)this + 18);
                      *((_DWORD *)this + 38) = v77 + 1;
                      uint64_t v79 = *(awd::metrics::LocationMicroLocationAnalyticsState **)(v78 + 8 * v77);
                      unsigned int v120 = 0;
                      int v80 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v80 >= *((void *)a2 + 2) || *v80 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                      }
                        }
                      else
                      {
                        unsigned int v120 = *v80;
                        *((void *)a2 + 1) = v80 + 1;
                      }
                      int v81 = *((_DWORD *)a2 + 14);
                      int v82 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v81 + 1;
                      if (v81 >= v82) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationMicroLocationAnalyticsState::MergePartialFromCodedStream(v79, a2)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v83 = *((_DWORD *)a2 + 14);
                      BOOL v23 = __OFSUB__(v83, 1);
                      int v84 = v83 - 1;
                      if (v84 < 0 == v23) {
                        *((_DWORD *)a2 + 14) = v84;
                      }
                      int v25 = (unsigned char *)*((void *)a2 + 1);
                      if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                        goto LABEL_2;
                      }
                      int v85 = *v25;
                    }
                    while (v85 == 66);
                    if (v85 == 74)
                    {
                      do
                      {
                        *((void *)a2 + 1) = v25 + 1;
LABEL_162:
                        int v86 = *((_DWORD *)this + 45);
                        uint64_t v87 = *((int *)this + 44);
                        if ((int)v87 >= v86)
                        {
                          if (v86 == *((_DWORD *)this + 46))
                          {
                            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                            int v86 = *((_DWORD *)this + 45);
                          }
                          *((_DWORD *)this + 45) = v86 + 1;
                          operator new();
                        }
                        uint64_t v88 = *((void *)this + 21);
                        *((_DWORD *)this + 44) = v87 + 1;
                        int v89 = *(awd::metrics::LocationMicroLocationClusteringStatistics **)(v88 + 8 * v87);
                        unsigned int v120 = 0;
                        int v90 = (char *)*((void *)a2 + 1);
                        if ((unint64_t)v90 >= *((void *)a2 + 2) || *v90 < 0)
                        {
                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                        }
                          }
                        else
                        {
                          unsigned int v120 = *v90;
                          *((void *)a2 + 1) = v90 + 1;
                        }
                        int v91 = *((_DWORD *)a2 + 14);
                        int v92 = *((_DWORD *)a2 + 15);
                        *((_DWORD *)a2 + 14) = v91 + 1;
                        if (v91 >= v92) {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                        if (!awd::metrics::LocationMicroLocationClusteringStatistics::MergePartialFromCodedStream(v89, a2)|| !*((unsigned char *)a2 + 36))
                        {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                        int v93 = *((_DWORD *)a2 + 14);
                        BOOL v23 = __OFSUB__(v93, 1);
                        int v94 = v93 - 1;
                        if (v94 < 0 == v23) {
                          *((_DWORD *)a2 + 14) = v94;
                        }
                        int v25 = (unsigned char *)*((void *)a2 + 1);
                        if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                          goto LABEL_2;
                        }
                        int v95 = *v25;
                      }
                      while (v95 == 74);
                      if (v95 == 82)
                      {
                        do
                        {
                          *((void *)a2 + 1) = v25 + 1;
LABEL_180:
                          int v96 = *((_DWORD *)this + 51);
                          uint64_t v97 = *((int *)this + 50);
                          if ((int)v97 >= v96)
                          {
                            if (v96 == *((_DWORD *)this + 52))
                            {
                              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                              int v96 = *((_DWORD *)this + 51);
                            }
                            *((_DWORD *)this + 51) = v96 + 1;
                            operator new();
                          }
                          uint64_t v98 = *((void *)this + 24);
                          *((_DWORD *)this + 50) = v97 + 1;
                          int v99 = *(awd::metrics::LocationMicroLocationClusteringByModel **)(v98 + 8 * v97);
                          unsigned int v120 = 0;
                          int v100 = (char *)*((void *)a2 + 1);
                          if ((unint64_t)v100 >= *((void *)a2 + 2) || *v100 < 0)
                          {
                            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                          }
                            }
                          else
                          {
                            unsigned int v120 = *v100;
                            *((void *)a2 + 1) = v100 + 1;
                          }
                          int v101 = *((_DWORD *)a2 + 14);
                          int v102 = *((_DWORD *)a2 + 15);
                          *((_DWORD *)a2 + 14) = v101 + 1;
                          if (v101 >= v102) {
                            return 0;
                          }
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                          if (!awd::metrics::LocationMicroLocationClusteringByModel::MergePartialFromCodedStream(v99, a2)|| !*((unsigned char *)a2 + 36))
                          {
                            return 0;
                          }
                          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                          int v103 = *((_DWORD *)a2 + 14);
                          BOOL v23 = __OFSUB__(v103, 1);
                          int v104 = v103 - 1;
                          if (v104 < 0 == v23) {
                            *((_DWORD *)a2 + 14) = v104;
                          }
                          int v25 = (unsigned char *)*((void *)a2 + 1);
                          if ((unint64_t)v25 >= *((void *)a2 + 2)) {
                            goto LABEL_2;
                          }
                          int v105 = *v25;
                        }
                        while (v105 == 82);
                        if (v105 == 90)
                        {
                          do
                          {
                            *((void *)a2 + 1) = v25 + 1;
LABEL_198:
                            int v106 = *((_DWORD *)this + 57);
                            uint64_t v107 = *((int *)this + 56);
                            if ((int)v107 >= v106)
                            {
                              if (v106 == *((_DWORD *)this + 58))
                              {
                                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                                int v106 = *((_DWORD *)this + 57);
                              }
                              *((_DWORD *)this + 57) = v106 + 1;
                              operator new();
                            }
                            uint64_t v108 = *((void *)this + 27);
                            *((_DWORD *)this + 56) = v107 + 1;
                            int v109 = *(awd::metrics::LocationMicroLocationEventClusteringStatistics **)(v108 + 8 * v107);
                            unsigned int v120 = 0;
                            int v110 = (char *)*((void *)a2 + 1);
                            if ((unint64_t)v110 >= *((void *)a2 + 2) || *v110 < 0)
                            {
                              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v120))return 0; {
                            }
                              }
                            else
                            {
                              unsigned int v120 = *v110;
                              *((void *)a2 + 1) = v110 + 1;
                            }
                            int v111 = *((_DWORD *)a2 + 14);
                            int v112 = *((_DWORD *)a2 + 15);
                            *((_DWORD *)a2 + 14) = v111 + 1;
                            if (v111 >= v112) {
                              return 0;
                            }
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                            if (!awd::metrics::LocationMicroLocationEventClusteringStatistics::MergePartialFromCodedStream(v109, a2)|| !*((unsigned char *)a2 + 36))
                            {
                              return 0;
                            }
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                            int v113 = *((_DWORD *)a2 + 14);
                            BOOL v23 = __OFSUB__(v113, 1);
                            int v114 = v113 - 1;
                            if (v114 < 0 == v23) {
                              *((_DWORD *)a2 + 14) = v114;
                            }
                            int v25 = (unsigned char *)*((void *)a2 + 1);
                            int v115 = (unsigned char *)*((void *)a2 + 2);
                          }
                          while (v25 < v115 && *v25 == 90);
                          if (v25 == v115 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                          {
                            *((_DWORD *)a2 + 8) = 0;
                            uint64_t result = 1;
                            *((unsigned char *)a2 + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_54;
        }
        goto LABEL_32;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_72;
        }
        goto LABEL_32;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_90;
        }
        goto LABEL_32;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_108;
        }
        goto LABEL_32;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_126;
        }
        goto LABEL_32;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_144;
        }
        goto LABEL_32;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_162;
        }
        goto LABEL_32;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_180;
        }
        goto LABEL_32;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_32;
        }
        goto LABEL_198;
      default:
        int v12 = TagFallback & 7;
LABEL_32:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationMicroLocationStatistics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 244);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 244);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(awd::metrics::LocationMicroLocationStatistics::default_instance_ + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 48) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 72) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 96) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 120) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 152) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 144) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 152));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 168) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 176));
  }
  if (*(int *)(v5 + 200) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 192) + 8 * v15++), a2, a4);
    while (v15 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    uint64_t v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(*(void *)(v5 + 216) + 8 * v16++), a2, a4);
    while (v16 < *(int *)(v5 + 224));
  }
  return this;
}

uint64_t awd::metrics::LocationMicroLocationStatistics::ByteSize(awd::metrics::LocationMicroLocationStatistics *this)
{
  if (!*((unsigned char *)this + 244))
  {
    int v2 = 0;
    goto LABEL_13;
  }
  if (*((unsigned char *)this + 244))
  {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    if ((*((_DWORD *)this + 61) & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 244) & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v3 = (awd::metrics::LocationMicroLocationMetaData *)*((void *)this + 2);
  if (!v3) {
    uint64_t v3 = *(awd::metrics::LocationMicroLocationMetaData **)(awd::metrics::LocationMicroLocationStatistics::default_instance_
  }
                                                         + 16);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationMetaData::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  v2 += v5 + v6 + 1;
LABEL_13:
  int v7 = *((_DWORD *)this + 8);
  int v8 = v7 + v2;
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationMeasurementStatistics::ByteSize(*(awd::metrics::LocationMicroLocationMeasurementStatistics **)(*((void *)this + 3) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      v8 += v11 + v12;
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  int v13 = *((_DWORD *)this + 14);
  int v14 = v13 + v8;
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationUserEventStatistics::ByteSize(*(awd::metrics::LocationMicroLocationUserEventStatistics **)(*((void *)this + 6) + 8 * v15));
      int v17 = (int)v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      }
      else {
        int v18 = 1;
      }
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 14));
  }
  int v19 = *((_DWORD *)this + 20);
  int v20 = v19 + v14;
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationLocalizationStatistics::ByteSize(*(awd::metrics::LocationMicroLocationLocalizationStatistics **)(*((void *)this + 9) + 8 * v21));
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      }
      else {
        int v24 = 1;
      }
      v20 += v23 + v24;
      ++v21;
    }
    while (v21 < *((int *)this + 20));
  }
  int v25 = *((_DWORD *)this + 26);
  int v26 = v25 + v20;
  if (v25 >= 1)
  {
    uint64_t v27 = 0;
    do
    {
      uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationModelState::ByteSize(*(awd::metrics::LocationMicroLocationModelState **)(*((void *)this + 12) + 8 * v27));
      int v29 = (int)v28;
      if (v28 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
      }
      else {
        int v30 = 1;
      }
      v26 += v29 + v30;
      ++v27;
    }
    while (v27 < *((int *)this + 26));
  }
  int v31 = *((_DWORD *)this + 32);
  int v32 = v31 + v26;
  if (v31 >= 1)
  {
    uint64_t v33 = 0;
    do
    {
      int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationLearningState::ByteSize(*(awd::metrics::LocationMicroLocationLearningState **)(*((void *)this + 15) + 8 * v33));
      int v35 = (int)v34;
      if (v34 >= 0x80) {
        int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      }
      else {
        int v36 = 1;
      }
      v32 += v35 + v36;
      ++v33;
    }
    while (v33 < *((int *)this + 32));
  }
  int v37 = *((_DWORD *)this + 38);
  int v38 = v37 + v32;
  if (v37 >= 1)
  {
    uint64_t v39 = 0;
    do
    {
      uint64_t v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationAnalyticsState::ByteSize(*(awd::metrics::LocationMicroLocationAnalyticsState **)(*((void *)this + 18) + 8 * v39));
      int v41 = (int)v40;
      if (v40 >= 0x80) {
        int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
      }
      else {
        int v42 = 1;
      }
      v38 += v41 + v42;
      ++v39;
    }
    while (v39 < *((int *)this + 38));
  }
  int v43 = *((_DWORD *)this + 44);
  int v44 = v43 + v38;
  if (v43 >= 1)
  {
    uint64_t v45 = 0;
    do
    {
      int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationClusteringStatistics::ByteSize(*(awd::metrics::LocationMicroLocationClusteringStatistics **)(*((void *)this + 21) + 8 * v45));
      int v47 = (int)v46;
      if (v46 >= 0x80) {
        int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
      }
      else {
        int v48 = 1;
      }
      v44 += v47 + v48;
      ++v45;
    }
    while (v45 < *((int *)this + 44));
  }
  int v49 = *((_DWORD *)this + 50);
  int v50 = v49 + v44;
  if (v49 >= 1)
  {
    uint64_t v51 = 0;
    do
    {
      int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationClusteringByModel::ByteSize(*(awd::metrics::LocationMicroLocationClusteringByModel **)(*((void *)this + 24) + 8 * v51));
      int v53 = (int)v52;
      if (v52 >= 0x80) {
        int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
      }
      else {
        int v54 = 1;
      }
      v50 += v53 + v54;
      ++v51;
    }
    while (v51 < *((int *)this + 50));
  }
  int v55 = *((_DWORD *)this + 56);
  uint64_t v56 = (v55 + v50);
  if (v55 >= 1)
  {
    uint64_t v57 = 0;
    do
    {
      uint64_t v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationMicroLocationEventClusteringStatistics::ByteSize(*(awd::metrics::LocationMicroLocationEventClusteringStatistics **)(*((void *)this + 27) + 8 * v57));
      int v59 = (int)v58;
      if (v58 >= 0x80) {
        int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
      }
      else {
        int v60 = 1;
      }
      uint64_t v56 = (v59 + v56 + v60);
      ++v57;
    }
    while (v57 < *((int *)this + 56));
  }
  *((_DWORD *)this + 60) = v56;
  return v56;
}

void awd::metrics::LocationMicroLocationStatistics::CheckTypeAndMergeFrom(awd::metrics::LocationMicroLocationStatistics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationMicroLocationStatistics::CopyFrom(awd::metrics::LocationMicroLocationStatistics *this, const awd::metrics::LocationMicroLocationStatistics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationMicroLocationStatistics *))(*(void *)this + 32))(this);
    awd::metrics::LocationMicroLocationStatistics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationMicroLocationStatistics::IsInitialized(awd::metrics::LocationMicroLocationStatistics *this)
{
  return 1;
}

awd::metrics::LocationMicroLocationStatistics *awd::metrics::LocationMicroLocationStatistics::Swap(awd::metrics::LocationMicroLocationStatistics *this, awd::metrics::LocationMicroLocationStatistics *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
    uint64_t v6 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v6;
    *((void *)a2 + 1) = v4;
    *((void *)a2 + 2) = v5;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationMicroLocationStatistics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v7 = *((_DWORD *)v3 + 61);
    *((_DWORD *)v3 + 61) = *((_DWORD *)a2 + 61);
    *((_DWORD *)a2 + 61) = v7;
    int v8 = *((_DWORD *)v3 + 60);
    *((_DWORD *)v3 + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v8;
  }
  return this;
}

void *awd::metrics::LocationMicroLocationStatistics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationMicroLocationStatistics");
}

uint64_t awd::metrics::LocationMicroLocationSignificanceMetric::GetCachedSize(awd::metrics::LocationMicroLocationSignificanceMetric *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationMicroLocationEventSignificanceMetric::GetCachedSize(awd::metrics::LocationMicroLocationEventSignificanceMetric *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationEventTypeAndCount::GetCachedSize(awd::metrics::LocationMicroLocationEventTypeAndCount *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationMicroLocationEventHistogram::GetCachedSize(awd::metrics::LocationMicroLocationEventHistogram *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMicroLocationClusteringByModel::GetCachedSize(awd::metrics::LocationMicroLocationClusteringByModel *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationMicroLocationMetaData::GetCachedSize(awd::metrics::LocationMicroLocationMetaData *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationMicroLocationMeasurementStatistics::GetCachedSize(awd::metrics::LocationMicroLocationMeasurementStatistics *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t awd::metrics::LocationMicroLocationUserEventStatistics::GetCachedSize(awd::metrics::LocationMicroLocationUserEventStatistics *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t awd::metrics::LocationMicroLocationEventClusteringStatistics::GetCachedSize(awd::metrics::LocationMicroLocationEventClusteringStatistics *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationMicroLocationLocalizationStatistics::GetCachedSize(awd::metrics::LocationMicroLocationLocalizationStatistics *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationModelState::GetCachedSize(awd::metrics::LocationMicroLocationModelState *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t awd::metrics::LocationMicroLocationClusteringStatistics::GetCachedSize(awd::metrics::LocationMicroLocationClusteringStatistics *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t awd::metrics::LocationMicroLocationLearningState::GetCachedSize(awd::metrics::LocationMicroLocationLearningState *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMicroLocationAnalyticsState::GetCachedSize(awd::metrics::LocationMicroLocationAnalyticsState *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t awd::metrics::LocationMicroLocationStatistics::GetCachedSize(awd::metrics::LocationMicroLocationStatistics *this)
{
  return *((unsigned int *)this + 60);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventTypeAndCount>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventHistogram>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventSignificanceMetric>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationMeasurementStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLocalizationStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationModelState>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationLearningState>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationAnalyticsState>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringByModel>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationEventClusteringStatistics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationUserEventStatistics>::TypeHandler>(int *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationMicroLocationUserEventStatistics **)(*(void *)a2 + 8 * v4);
      int v6 = a1[3];
      uint64_t v7 = a1[2];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[4])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
          int v6 = a1[3];
        }
        a1[3] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      a1[2] = v7 + 1;
      awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom(*(awd::metrics::LocationMicroLocationUserEventStatistics **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

void wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationMicroLocationClusteringStatistics>::TypeHandler>(int *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationMicroLocationClusteringStatistics **)(*(void *)a2 + 8 * v4);
      int v6 = a1[3];
      uint64_t v7 = a1[2];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[4])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
          int v6 = a1[3];
        }
        a1[3] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      a1[2] = v7 + 1;
      awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom(*(awd::metrics::LocationMicroLocationClusteringStatistics **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

uint64_t awd::metrics::protobuf_ShutdownFile_LocationPeerRanging_2eproto(awd::metrics *this)
{
  if (awd::metrics::LocationPeerRangingMetaData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingMetaData::default_instance_ + 8))(awd::metrics::LocationPeerRangingMetaData::default_instance_);
  }
  if (awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_
  }
                                    + 8))(awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_);
  if (awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_
  }
                                    + 8))(awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_);
  if (awd::metrics::LocationPeerRangingBurstMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingBurstMetrics::default_instance_ + 8))(awd::metrics::LocationPeerRangingBurstMetrics::default_instance_);
  }
  if (awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_
  }
                                    + 8))(awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_);
  if (awd::metrics::LocationPeerRangingDecision::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingDecision::default_instance_ + 8))(awd::metrics::LocationPeerRangingDecision::default_instance_);
  }
  if (awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_
  }
                                    + 8))(awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_);
  uint64_t result = awd::metrics::LocationPeerRangingMetrics::default_instance_;
  if (awd::metrics::LocationPeerRangingMetrics::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)awd::metrics::LocationPeerRangingMetrics::default_instance_ + 8);
    return v2();
  }
  return result;
}

void awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(awd::metrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(void)::already_here & 1) == 0)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"codegen/cpp/LocationPeerRanging.pb.cc", a4);
    operator new();
  }
}

void *awd::metrics::LocationPeerRangingMetaData::LocationPeerRangingMetaData(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BE4A0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_26D7BE4A0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::LocationPeerRangingEstimatorConfiguration(uint64_t this)
{
  *(void *)this = &unk_26D7BE518;
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_26D7BE518;
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

double awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  *(void *)this = &unk_26D7BE590;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((unsigned char *)this + 56) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE590;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((unsigned char *)this + 56) = 0;
  return result;
}

double awd::metrics::LocationPeerRangingBurstMetrics::LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  *(void *)this = &unk_26D7BE608;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_26D7BE608;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::LocationPeerRangingEarlyTerminateMetrics(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE680;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE680;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::LocationPeerRangingDecision(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE6F8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE6F8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::LocationPeerRangingUnlockDecisionMetrics(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE770;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_26D7BE770;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::LocationPeerRangingMetrics(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(void *)(this + 88) = 0;
  *(void *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(void *)(this + 112) = 0;
  *(void *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(void *)(this + 136) = 0;
  *(void *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(void *)(this + 160) = 0;
  *(void *)this = &unk_26D7BE7E8;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(void *)(this + 88) = 0;
  *(void *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(void *)(this + 112) = 0;
  *(void *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(void *)(this + 136) = 0;
  *(void *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(void *)(this + 160) = 0;
  *(void *)this = &unk_26D7BE7E8;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL awd::metrics::LocationPeerRangingUnlockDecisionAlgorithm_IsValid(awd::metrics *this)
{
  return this < 6;
}

BOOL awd::metrics::LocationPeerRangingDecisionReason_IsValid(awd::metrics *this)
{
  return this < 7;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMetaData *awd::metrics::LocationPeerRangingMetaData::LocationPeerRangingMetaData(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BE4A0;
  awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, a2);
  return this;
}

void sub_224999FDC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetaData::MergeFrom(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v4 = *((void *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    *((void *)this + 1) = v4;
  }
}

void sub_22499A07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetaData::~LocationPeerRangingMetaData(awd::metrics::LocationPeerRangingMetaData *this)
{
  *(void *)this = &unk_26D7BE4A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE4A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE4A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::default_instance(awd::metrics::LocationPeerRangingMetaData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingMetaData::default_instance_;
  if (!awd::metrics::LocationPeerRangingMetaData::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMetaData::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingMetaData::New(awd::metrics::LocationPeerRangingMetaData *this)
{
}

uint64_t awd::metrics::LocationPeerRangingMetaData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v8 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!result) {
          return result;
        }
        uint64_t v9 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
      }
      else
      {
        *uint64_t v4 = *v8;
        uint64_t v9 = (unsigned __int8 *)(v8 + 1);
        *((void *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 5) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  if (*((unsigned char *)this + 20)) {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  }
  else {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void awd::metrics::LocationPeerRangingMetaData::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMetaData::CopyFrom(awd::metrics::LocationPeerRangingMetaData *this, const awd::metrics::LocationPeerRangingMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMetaData *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingMetaData::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMetaData::IsInitialized(awd::metrics::LocationPeerRangingMetaData *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingMetaData::Swap(uint64_t this, awd::metrics::LocationPeerRangingMetaData *a2)
{
  if (a2 != (awd::metrics::LocationPeerRangingMetaData *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *awd::metrics::LocationPeerRangingMetaData::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMetaData");
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 8) = 0;
  *(_WORD *)(this + 12) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

awd::metrics::LocationPeerRangingEstimatorConfiguration *awd::metrics::LocationPeerRangingEstimatorConfiguration::LocationPeerRangingEstimatorConfiguration(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  *(void *)this = &unk_26D7BE518;
  *((_DWORD *)this + 2) = 0;
  *((_WORD *)this + 6) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = 0;
  awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, a2);
  return this;
}

void sub_22499A518(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 36))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 6) {
      awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom();
    }
    *((_DWORD *)this + 9) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 9);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 9) |= 4u;
    *((void *)this + 2) = v8;
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  char v7 = *((unsigned char *)a2 + 12);
  *((_DWORD *)this + 9) |= 2u;
  *((unsigned char *)this + 12) = v7;
  int v4 = *((_DWORD *)a2 + 9);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((v4 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_15:
  char v9 = *((unsigned char *)a2 + 13);
  *((_DWORD *)this + 9) |= 8u;
  *((unsigned char *)this + 13) = v9;
  if ((*((_DWORD *)a2 + 9) & 0x10) != 0)
  {
LABEL_11:
    uint64_t v6 = *((void *)a2 + 3);
    *((_DWORD *)this + 9) |= 0x10u;
    *((void *)this + 3) = v6;
  }
}

void sub_22499A648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::~LocationPeerRangingEstimatorConfiguration(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  *(void *)this = &unk_26D7BE518;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE518;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE518;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_;
  if (!awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingEstimatorConfiguration::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::New(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(_DWORD *)(this + 8) = 0;
    *(_WORD *)(this + 12) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        v20[0] = 0;
        char v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!result) {
            return result;
          }
          unsigned int v8 = v20[0];
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 5)
        {
          *((_DWORD *)this + 9) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v14 < v9 && *v14 == 16)
        {
          uint64_t v10 = v14 + 1;
          *((void *)a2 + 1) = v10;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_29:
        v20[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!result) {
            return result;
          }
          unsigned int v15 = v20[0];
          uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v10;
          uint64_t v16 = v10 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((unsigned char *)this + 12) = v15 != 0;
        *((_DWORD *)this + 9) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_37:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v20;
        }
        *((_DWORD *)this + 9) |= 4u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v17 >= v11 || *v17 != 32) {
          continue;
        }
        int v12 = v17 + 1;
        *((void *)a2 + 1) = v12;
LABEL_41:
        v20[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!result) {
            return result;
          }
          unsigned int v18 = v20[0];
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v12;
          int v19 = v12 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 13) = v18 != 0;
        *((_DWORD *)this + 9) |= 8u;
        if ((unint64_t)v19 >= v11 || *v19 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_49:
        *(void *)int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20))
        {
          *((void *)this + 3) = *(void *)v20;
          *((_DWORD *)this + 9) |= 0x10u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_37;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_41;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_19;
        }
        goto LABEL_49;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  double v7 = *(double *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, v7, a3);
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::ByteSize(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 36))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        unsigned int v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 9);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 2;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CopyFrom(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, const awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingEstimatorConfiguration *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::IsInitialized(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingEstimatorConfiguration::Swap(awd::metrics::LocationPeerRangingEstimatorConfiguration *this, awd::metrics::LocationPeerRangingEstimatorConfiguration *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 12);
    *((unsigned char *)this + 12) = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LOBYTE(v2) = *((unsigned char *)this + 13);
    *((unsigned char *)this + 13) = *((unsigned char *)a2 + 13);
    *((unsigned char *)a2 + 13) = v2;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *awd::metrics::LocationPeerRangingEstimatorConfiguration::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingEstimatorConfiguration");
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SharedCtor(uint64_t this)
{
  *(unsigned char *)(this + 56) = 0;
  *(_DWORD *)(this + 60) = 0;
  *(_DWORD *)(this + 64) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMeasurementMetrics *awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  *(void *)this = &unk_26D7BE590;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 15) = 0;
  *((_DWORD *)this + 16) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((unsigned char *)this + 56) = 0;
  awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22499AE58(_Unwind_Exception *a1)
{
  uint64_t v5 = *((void *)v1 + 5);
  if (v5) {
    MEMORY[0x22A61A810](v5, 0x1000C8000313F17);
  }
  awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(v3, v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 8, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((void *)this + 1) + 8 * *((int *)this + 4)), *((const void **)a2 + 1), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
  int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 24, *((_DWORD *)this + 8) + v5);
    memcpy((void *)(*((void *)this + 3) + 8 * *((int *)this + 8)), *((const void **)a2 + 3), 8 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  int v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)this + 40, *((_DWORD *)this + 12) + v6);
    memcpy((void *)(*((void *)this + 5) + 8 * *((int *)this + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  if ((*((unsigned char *)a2 + 64) & 2) != 0)
  {
    char v7 = *((unsigned char *)a2 + 56);
    *((_DWORD *)this + 16) |= 2u;
    *((unsigned char *)this + 56) = v7;
  }
}

void sub_22499AFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::~LocationPeerRangingMeasurementMetrics(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  *(void *)this = &unk_26D7BE590;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    MEMORY[0x22A61A810](v2, 0x1000C8000313F17);
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    MEMORY[0x22A61A810](v3, 0x1000C8000313F17);
  }
  uint64_t v4 = *((void *)this + 1);
  if (v4) {
    MEMORY[0x22A61A810](v4, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationPeerRangingMeasurementMetrics::~LocationPeerRangingMeasurementMetrics(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance(awd::metrics::LocationPeerRangingMeasurementMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMeasurementMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::New(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::Clear(uint64_t this)
{
  if ((*(_WORD *)(this + 64) & 0x1FE) != 0) {
    *(unsigned char *)(this + 56) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMeasurementMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 40;
  int v5 = (char *)this + 24;
  int v6 = (char *)this + 8;
LABEL_2:
  while (2)
  {
    char v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2)
        {
          if ((TagFallback & 7) != 0) {
            goto LABEL_20;
          }
          unint64_t v11 = (char *)*((void *)a2 + 1);
          uint64_t v10 = (char *)*((void *)a2 + 2);
          while (1)
          {
            unint64_t v51 = 0;
            if (v11 >= v10 || *v11 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
            }
              }
            else
            {
              unint64_t v51 = *v11;
              *((void *)a2 + 1) = v11 + 1;
            }
            int v16 = *((_DWORD *)this + 4);
            int v17 = *((_DWORD *)this + 5);
            if (v16 == v17)
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v6, v16 + 1);
              int v16 = *((_DWORD *)this + 4);
              int v17 = *((_DWORD *)this + 5);
            }
            unint64_t v18 = v51;
            uint64_t v19 = *((void *)this + 1);
            int v20 = v16 + 1;
            *((_DWORD *)this + 4) = v16 + 1;
            *(void *)(v19 + 8 * v16) = v18;
            if (v17 - (v16 + 1) >= 1)
            {
              int v21 = v17 - v16;
              do
              {
                int v22 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v23 = *((void *)a2 + 2);
                if ((unint64_t)v22 >= v23 || *v22 != 8) {
                  break;
                }
                *((void *)a2 + 1) = v22 + 1;
                if ((unint64_t)(v22 + 1) >= v23 || (char)v22[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
                  int v20 = *((_DWORD *)this + 4);
                  }
                }
                else
                {
                  unint64_t v51 = v22[1];
                  *((void *)a2 + 1) = v22 + 2;
                }
                if (v20 >= *((_DWORD *)this + 5))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  int v20 = *((_DWORD *)this + 4);
                }
                unint64_t v24 = v51;
                uint64_t v25 = *((void *)this + 1);
                *((_DWORD *)this + 4) = v20 + 1;
                *(void *)(v25 + 8 * v20) = v24;
                --v21;
                ++v20;
              }
              while (v21 > 1);
            }
LABEL_47:
            int v26 = (char *)*((void *)a2 + 1);
            uint64_t v10 = (char *)*((void *)a2 + 2);
            if (v26 >= v10) {
              goto LABEL_2;
            }
            int v27 = *v26;
            if (v27 == 16)
            {
              int v12 = v26 + 1;
              *((void *)a2 + 1) = v12;
              goto LABEL_52;
            }
            if (v27 != 8) {
              goto LABEL_2;
            }
            unint64_t v11 = v26 + 1;
            *((void *)a2 + 1) = v11;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v6);
        if (result) {
          goto LABEL_47;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)a2 + 1);
        uint64_t v10 = (char *)*((void *)a2 + 2);
LABEL_52:
        v52[0] = 0;
        if (v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52);
          if (!result) {
            return result;
          }
          unsigned int v28 = v52[0];
          int v29 = (char *)*((void *)a2 + 1);
          uint64_t v10 = (char *)*((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v12;
          int v29 = v12 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 56) = v28 != 0;
        *((_DWORD *)this + 16) |= 2u;
        if (v29 >= v10) {
          continue;
        }
        int v30 = *v29;
        goto LABEL_79;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v13 = (char *)*((void *)a2 + 1);
            uint64_t v10 = (char *)*((void *)a2 + 2);
            goto LABEL_59;
          }
          goto LABEL_20;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v5);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v29 = (char *)*((void *)a2 + 1);
          uint64_t v10 = (char *)*((void *)a2 + 2);
          if (v29 >= v10) {
            goto LABEL_2;
          }
          int v30 = *v29;
          if (v30 == 32) {
            goto LABEL_101;
          }
LABEL_79:
          if (v30 != 24) {
            goto LABEL_2;
          }
          int v13 = v29 + 1;
          *((void *)a2 + 1) = v13;
LABEL_59:
          unint64_t v51 = 0;
          if (v13 >= v10 || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
          }
            }
          else
          {
            unint64_t v51 = *v13;
            *((void *)a2 + 1) = v13 + 1;
          }
          int v31 = *((_DWORD *)this + 8);
          int v32 = *((_DWORD *)this + 9);
          if (v31 == v32)
          {
            wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v5, v31 + 1);
            int v31 = *((_DWORD *)this + 8);
            int v32 = *((_DWORD *)this + 9);
          }
          unint64_t v33 = v51;
          uint64_t v34 = *((void *)this + 3);
          int v35 = v31 + 1;
          *((_DWORD *)this + 8) = v31 + 1;
          *(void *)(v34 + 8 * v31) = v33;
          if (v32 - (v31 + 1) >= 1)
          {
            int v36 = v32 - v31;
            do
            {
              int v37 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v38 = *((void *)a2 + 2);
              if ((unint64_t)v37 >= v38 || *v37 != 24) {
                break;
              }
              *((void *)a2 + 1) = v37 + 1;
              if ((unint64_t)(v37 + 1) >= v38 || (char)v37[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
                int v35 = *((_DWORD *)this + 8);
                }
              }
              else
              {
                unint64_t v51 = v37[1];
                *((void *)a2 + 1) = v37 + 2;
              }
              if (v35 >= *((_DWORD *)this + 9))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                int v35 = *((_DWORD *)this + 8);
              }
              unint64_t v39 = v51;
              uint64_t v40 = *((void *)this + 3);
              *((_DWORD *)this + 8) = v35 + 1;
              *(void *)(v40 + 8 * v35) = v39;
              --v36;
              ++v35;
            }
            while (v36 > 1);
          }
        }
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned long long,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)4>(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v29 = (char *)*((void *)a2 + 1);
            uint64_t v10 = (char *)*((void *)a2 + 2);
            if (v29 >= v10 || *v29 != 32) {
              break;
            }
LABEL_101:
            int v14 = v29 + 1;
            *((void *)a2 + 1) = v14;
LABEL_81:
            unint64_t v51 = 0;
            if (v14 >= v10 || *v14 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
            }
              }
            else
            {
              unint64_t v51 = *v14;
              *((void *)a2 + 1) = v14 + 1;
            }
            int v41 = *((_DWORD *)this + 12);
            int v42 = *((_DWORD *)this + 13);
            if (v41 == v42)
            {
              wireless_diagnostics::google::protobuf::RepeatedField<unsigned long long>::Reserve((uint64_t)v4, v41 + 1);
              int v41 = *((_DWORD *)this + 12);
              int v42 = *((_DWORD *)this + 13);
            }
            unint64_t v43 = v51;
            uint64_t v44 = *((void *)this + 5);
            int v45 = v41 + 1;
            *((_DWORD *)this + 12) = v41 + 1;
            *(void *)(v44 + 8 * v41) = v43;
            if (v42 - (v41 + 1) >= 1)
            {
              int v46 = v42 - v41;
              do
              {
                int v47 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v48 = *((void *)a2 + 2);
                if ((unint64_t)v47 >= v48 || *v47 != 32) {
                  break;
                }
                *((void *)a2 + 1) = v47 + 1;
                if ((unint64_t)(v47 + 1) >= v48 || (char)v47[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v51))return 0; {
                  int v45 = *((_DWORD *)this + 12);
                  }
                }
                else
                {
                  unint64_t v51 = v47[1];
                  *((void *)a2 + 1) = v47 + 2;
                }
                if (v45 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  int v45 = *((_DWORD *)this + 12);
                }
                unint64_t v49 = v51;
                uint64_t v50 = *((void *)this + 5);
                *((_DWORD *)this + 12) = v45 + 1;
                *(void *)(v50 + 8 * v45) = v49;
                --v46;
                ++v45;
              }
              while (v46 > 1);
            }
          }
          if (v29 == v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v14 = (char *)*((void *)a2 + 1);
          uint64_t v10 = (char *)*((void *)a2 + 2);
          goto LABEL_81;
        }
LABEL_20:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

void sub_22499B7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), (uint64_t)a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 64) & 2) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 56), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v7++), (uint64_t)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 40) + 8 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::ByteSize(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  int v2 = *((_DWORD *)this + 16);
  LODWORD(v3) = *((_DWORD *)this + 4);
  if ((int)v3 < 1)
  {
    int v5 = 0;
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = 0;
    do
    {
      v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 1) + 8 * v4++));
      uint64_t v3 = *((int *)this + 4);
    }
    while (v4 < v3);
  }
  LODWORD(v6) = *((_DWORD *)this + 8);
  if ((int)v6 < 1)
  {
    int v8 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    int v8 = 0;
    do
    {
      v8 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 3) + 8 * v7++));
      uint64_t v6 = *((int *)this + 8);
    }
    while (v7 < v6);
  }
  LODWORD(v9) = *((_DWORD *)this + 12);
  if ((int)v9 < 1)
  {
    int v11 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = 0;
    do
    {
      v11 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 5) + 8 * v10++));
      uint64_t v9 = *((int *)this + 12);
    }
    while (v10 < v9);
  }
  int v12 = v2 & 2;
  if ((v2 & 0x1FE) == 0) {
    int v12 = 0;
  }
  uint64_t result = (v5 + v3 + v8 + v12 + v9 + v6 + v11);
  *((_DWORD *)this + 15) = result;
  return result;
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CopyFrom(awd::metrics::LocationPeerRangingMeasurementMetrics *this, const awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMeasurementMetrics *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::IsInitialized(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingMeasurementMetrics::Swap(awd::metrics::LocationPeerRangingMeasurementMetrics *this, awd::metrics::LocationPeerRangingMeasurementMetrics *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    uint64_t v3 = *((void *)a2 + 2);
    *((void *)a2 + 1) = v2;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = v3;
    *((void *)a2 + 2) = v4;
    LOBYTE(v2) = *((unsigned char *)this + 56);
    *((unsigned char *)this + 56) = *((unsigned char *)a2 + 56);
    *((unsigned char *)a2 + 56) = v2;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    uint64_t v6 = *((void *)a2 + 4);
    *((void *)a2 + 3) = v5;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = v6;
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    double result = *((double *)a2 + 6);
    *((void *)a2 + 5) = v8;
    uint64_t v10 = *((void *)this + 6);
    *((double *)this + 6) = result;
    *((void *)a2 + 6) = v10;
    LODWORD(v8) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v8;
    LODWORD(v8) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v8;
  }
  return result;
}

void *awd::metrics::LocationPeerRangingMeasurementMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMeasurementMetrics");
}

double awd::metrics::LocationPeerRangingBurstMetrics::SharedCtor(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

awd::metrics::LocationPeerRangingBurstMetrics *awd::metrics::LocationPeerRangingBurstMetrics::LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  *(void *)this = &unk_26D7BE608;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22499BC68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 44))
    {
      uint64_t v7 = *((void *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((void *)this + 1) = v7;
      int v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((void *)this + 2) = v8;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0) {
      return result;
    }
LABEL_8:
    uint64_t v6 = *((void *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((void *)this + 4) = v6;
  }
  return result;
}

void sub_22499BD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingBurstMetrics::~LocationPeerRangingBurstMetrics(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  *(void *)this = &unk_26D7BE608;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE608;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE608;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::default_instance(awd::metrics::LocationPeerRangingBurstMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingBurstMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingBurstMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingBurstMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingBurstMetrics::New(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingBurstMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  int v5 = (unint64_t *)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 32);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 11) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v13;
          int v17 = v13 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 11) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_35:
        unint64_t v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v20))
        {
          *((void *)this + 3) = v20;
          *((_DWORD *)this + 11) |= 4u;
          unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v14 && *v18 == 32)
          {
            unsigned int v15 = v18 + 1;
            *((void *)a2 + 1) = v15;
LABEL_39:
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
              if (!result) {
                return result;
              }
              uint64_t v19 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v14 = *((void *)a2 + 2);
            }
            else
            {
              *uint64_t v6 = *v15;
              uint64_t v19 = (unsigned __int8 *)(v15 + 1);
              *((void *)a2 + 1) = v19;
            }
            *((_DWORD *)this + 11) |= 8u;
            if (v19 == (unsigned __int8 *)v14 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_18;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_39;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::ByteSize(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((*((unsigned char *)this + 44) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  LODWORD(v3) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                            + 1))
              + 1;
  int v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    LODWORD(v3) = v3
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                              + 2))
                + 1;
    int v2 = *((_DWORD *)this + 11);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 9);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t v3 = v3
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 4))
       + 1;
LABEL_13:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

double awd::metrics::LocationPeerRangingBurstMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationPeerRangingBurstMetrics::CopyFrom(awd::metrics::LocationPeerRangingBurstMetrics *this, const awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingBurstMetrics *))(*(void *)this + 32))(this);
    return awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::IsInitialized(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingBurstMetrics::Swap(awd::metrics::LocationPeerRangingBurstMetrics *this, awd::metrics::LocationPeerRangingBurstMetrics *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

void *awd::metrics::LocationPeerRangingBurstMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingBurstMetrics");
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationPeerRangingEarlyTerminateMetrics *awd::metrics::LocationPeerRangingEarlyTerminateMetrics::LocationPeerRangingEarlyTerminateMetrics(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BE680;
  *((unsigned char *)this + 24) = 0;
  awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22499C4B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      char v7 = *((unsigned char *)a2 + 24);
      *((_DWORD *)this + 8) |= 1u;
      *((unsigned char *)this + 24) = v7;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 1);
    *((_DWORD *)this + 8) |= 2u;
    *((double *)this + 1) = result;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return result;
    }
LABEL_7:
    uint64_t v6 = *((void *)a2 + 2);
    *((_DWORD *)this + 8) |= 4u;
    *((void *)this + 2) = v6;
  }
  return result;
}

void sub_22499C5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingEarlyTerminateMetrics::~LocationPeerRangingEarlyTerminateMetrics(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  *(void *)this = &unk_26D7BE680;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE680;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE680;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingEarlyTerminateMetrics::New(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(unsigned char *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v18 = 0;
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18);
          if (!result) {
            return result;
          }
          unsigned int v13 = v18;
          unint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          unint64_t v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((unsigned char *)this + 24) = v13 != 0;
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 17)
        {
          *((void *)a2 + 1) = v14 + 1;
          goto LABEL_27;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_19;
      }
LABEL_27:
      unint64_t v19 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v19) & 1) == 0) {
        return 0;
      }
      *((void *)this + 1) = v19;
      *((_DWORD *)this + 8) |= 2u;
      int v16 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        unint64_t v10 = v16 + 1;
        *((void *)a2 + 1) = v10;
LABEL_31:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v17 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v10;
          int v17 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v17 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_31;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::ByteSize(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((_BYTE)v2)
  {
    if ((v2 & 2) != 0) {
      uint64_t v3 = (2 * (v2 & 1)) | 9u;
    }
    else {
      uint64_t v3 = 2 * (v2 & 1u);
    }
    if ((v2 & 4) != 0) {
      uint64_t v3 = v3
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, lpsrc);
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CopyFrom(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, const awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *))(*(void *)this + 32))(this);
    return awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::IsInitialized(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  return 1;
}

double awd::metrics::LocationPeerRangingEarlyTerminateMetrics::Swap(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this, awd::metrics::LocationPeerRangingEarlyTerminateMetrics *a2)
{
  if (a2 != this)
  {
    char v2 = *((unsigned char *)this + 24);
    *((unsigned char *)this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v2;
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
  }
  return result;
}

void *awd::metrics::LocationPeerRangingEarlyTerminateMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingEarlyTerminateMetrics");
}

uint64_t awd::metrics::LocationPeerRangingDecision::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

awd::metrics::LocationPeerRangingDecision *awd::metrics::LocationPeerRangingDecision::LocationPeerRangingDecision(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_26D7BE6F8;
  *((_DWORD *)this + 6) = 0;
  awd::metrics::LocationPeerRangingDecision::MergeFrom(this, a2);
  return this;
}

void sub_22499CBE4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingDecision::MergeFrom(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      if (v5 >= 7) {
        awd::metrics::LocationPeerRangingDecision::MergeFrom();
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((void *)this + 1) = v6;
    }
  }
}

void sub_22499CCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingDecision::~LocationPeerRangingDecision(awd::metrics::LocationPeerRangingDecision *this)
{
  *(void *)this = &unk_26D7BE6F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  *(void *)this = &unk_26D7BE6F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26D7BE6F8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingDecision::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::default_instance(awd::metrics::LocationPeerRangingDecision *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingDecision::default_instance_;
  if (!awd::metrics::LocationPeerRangingDecision::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingDecision::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingDecision::New(awd::metrics::LocationPeerRangingDecision *this)
{
}

uint64_t awd::metrics::LocationPeerRangingDecision::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingDecision *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      unint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 6)
      {
        *((_DWORD *)this + 6) |= 1u;
        *((_DWORD *)this + 4) = v11;
      }
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        unint64_t v9 = v12 + 1;
        *((void *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          *int v4 = *v9;
          unsigned int v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationPeerRangingDecision::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingDecision::ByteSize(awd::metrics::LocationPeerRangingDecision *this)
{
  char v2 = *((unsigned char *)this + 24);
  if (v2)
  {
    if ((*((unsigned char *)this + 24) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 24) & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    if (v4 < 0x80)
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    if ((*((_DWORD *)this + 6) & 2) != 0) {
LABEL_13:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
         + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void awd::metrics::LocationPeerRangingDecision::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingDecision *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingDecision::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingDecision::CopyFrom(awd::metrics::LocationPeerRangingDecision *this, const awd::metrics::LocationPeerRangingDecision *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingDecision *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingDecision::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingDecision::IsInitialized(awd::metrics::LocationPeerRangingDecision *this)
{
  return 1;
}

uint64_t awd::metrics::LocationPeerRangingDecision::Swap(uint64_t this, awd::metrics::LocationPeerRangingDecision *a2)
{
  if (a2 != (awd::metrics::LocationPeerRangingDecision *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *awd::metrics::LocationPeerRangingDecision::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingDecision");
}

void *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SharedCtor(void *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

awd::metrics::LocationPeerRangingUnlockDecisionMetrics *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::LocationPeerRangingUnlockDecisionMetrics(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_26D7BE770;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22499D2AC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationPeerRangingDecision **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      awd::metrics::LocationPeerRangingDecision::MergeFrom(*(awd::metrics::LocationPeerRangingDecision **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  int v9 = *((_DWORD *)a2 + 13);
  if ((v9 & 0x1FE) != 0)
  {
    if ((v9 & 2) != 0)
    {
      uint64_t v10 = *((void *)a2 + 4);
      *((_DWORD *)this + 13) |= 2u;
      *((void *)this + 4) = v10;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 4) != 0)
    {
      uint64_t v11 = *((void *)a2 + 5);
      *((_DWORD *)this + 13) |= 4u;
      *((void *)this + 5) = v11;
    }
  }
}

void sub_22499D46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::~LocationPeerRangingUnlockDecisionMetrics(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  *(void *)this = &unk_26D7BE770;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::~LocationPeerRangingUnlockDecisionMetrics(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingUnlockDecisionMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::New(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::Clear(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  if ((*((_WORD *)this + 26) & 0x1FE) != 0)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>((uint64_t)this + 8);
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 32);
  int v6 = (unint64_t *)((char *)this + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        int v10 = TagFallback & 7;
        if (v10 == 2)
        {
          while (1)
          {
            int v13 = *((_DWORD *)this + 5);
            uint64_t v14 = *((int *)this + 4);
            if ((int)v14 >= v13)
            {
              if (v13 == *((_DWORD *)this + 6))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                int v13 = *((_DWORD *)this + 5);
              }
              *((_DWORD *)this + 5) = v13 + 1;
              operator new();
            }
            uint64_t v15 = *((void *)this + 1);
            *((_DWORD *)this + 4) = v14 + 1;
            int v16 = *(awd::metrics::LocationPeerRangingDecision **)(v15 + 8 * v14);
            unsigned int v29 = 0;
            int v17 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
            }
              }
            else
            {
              unsigned int v29 = *v17;
              *((void *)a2 + 1) = v17 + 1;
            }
            int v18 = *((_DWORD *)a2 + 14);
            int v19 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v18 + 1;
            if (v18 >= v19) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!awd::metrics::LocationPeerRangingDecision::MergePartialFromCodedStream(v16, a2)
              || !*((unsigned char *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            int v20 = *((_DWORD *)a2 + 14);
            BOOL v21 = __OFSUB__(v20, 1);
            int v22 = v20 - 1;
            if (v22 < 0 == v21) {
              *((_DWORD *)a2 + 14) = v22;
            }
            unint64_t v23 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
            if ((unint64_t)v23 >= v11) {
              goto LABEL_2;
            }
            int v24 = *v23;
            if (v24 != 10)
            {
              if (v24 != 16) {
                goto LABEL_2;
              }
              uint64_t v25 = (char *)(v23 + 1);
              *((void *)a2 + 1) = v25;
              goto LABEL_32;
            }
            *((void *)a2 + 1) = v23 + 1;
          }
        }
        goto LABEL_36;
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_36;
      }
      uint64_t v25 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      if ((unint64_t)v25 >= v11 || *v25 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!result) {
          return result;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        *uint64_t v5 = *v25;
        int v26 = v25 + 1;
        *((void *)a2 + 1) = v26;
      }
      *((_DWORD *)this + 13) |= 2u;
      if ((unint64_t)v26 < v11 && *v26 == 24)
      {
        int v12 = v26 + 1;
        *((void *)a2 + 1) = v12;
LABEL_46:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v12;
          unsigned int v28 = (unsigned __int8 *)(v12 + 1);
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 4u;
        if (v28 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_46;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_36:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 32), (uint64_t)a2, a4);
    int v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::ByteSize(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    int v3 = 0;
    goto LABEL_8;
  }
  if ((v2 & 2) != 0)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v3 = 0;
  if ((v2 & 4) != 0) {
LABEL_7:
  }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
LABEL_8:
  int v4 = *((_DWORD *)this + 4);
  uint64_t v5 = (v4 + v3);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingDecision::ByteSize(*(awd::metrics::LocationPeerRangingDecision **)(*((void *)this + 1) + 8 * v6));
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CopyFrom(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, const awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::IsInitialized(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  return 1;
}

awd::metrics::LocationPeerRangingUnlockDecisionMetrics *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::Swap(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this, awd::metrics::LocationPeerRangingUnlockDecisionMetrics *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    this = (awd::metrics::LocationPeerRangingUnlockDecisionMetrics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 4);
    *((void *)v3 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *((void *)v3 + 5);
    *((void *)v3 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

void *awd::metrics::LocationPeerRangingUnlockDecisionMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingUnlockDecisionMetrics");
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 160) = 0;
  return this;
}

awd::metrics::LocationPeerRangingMetrics *awd::metrics::LocationPeerRangingMetrics::LocationPeerRangingMetrics(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 20) = 0;
  *(void *)this = &unk_26D7BE7E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 3) = 0;
  awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, a2);
  return this;
}

void sub_22499DD44(_Unwind_Exception *a1)
{
  int v8 = v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>(v8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>(v7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>(v6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetrics::MergeFrom(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const awd::metrics::LocationPeerRangingMetaData **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      awd::metrics::LocationPeerRangingMetaData::MergeFrom(*(awd::metrics::LocationPeerRangingMetaData **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(const awd::metrics::LocationPeerRangingEstimatorConfiguration **)(*((void *)a2 + 5) + 8 * v9);
      int v11 = *((_DWORD *)this + 13);
      uint64_t v12 = *((int *)this + 12);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40));
          int v11 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v12 + 1;
      awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom(*(awd::metrics::LocationPeerRangingEstimatorConfiguration **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 12));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(const awd::metrics::LocationPeerRangingMeasurementMetrics **)(*((void *)a2 + 8) + 8 * v14);
      int v16 = *((_DWORD *)this + 19);
      uint64_t v17 = *((int *)this + 18);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64));
          int v16 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v17 + 1;
      awd::metrics::LocationPeerRangingMeasurementMetrics::MergeFrom(*(awd::metrics::LocationPeerRangingMeasurementMetrics **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 18));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const awd::metrics::LocationPeerRangingBurstMetrics **)(*((void *)a2 + 11) + 8 * v19);
      int v21 = *((_DWORD *)this + 25);
      uint64_t v22 = *((int *)this + 24);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88));
          int v21 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *((void *)this + 11);
      *((_DWORD *)this + 24) = v22 + 1;
      awd::metrics::LocationPeerRangingBurstMetrics::MergeFrom(*(awd::metrics::LocationPeerRangingBurstMetrics **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 24));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = *(const awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)(*((void *)a2 + 14) + 8 * v24);
      int v26 = *((_DWORD *)this + 31);
      uint64_t v27 = *((int *)this + 30);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112));
          int v26 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *((void *)this + 14);
      *((_DWORD *)this + 30) = v27 + 1;
      awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergeFrom(*(awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      int v30 = *(const awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)(*((void *)a2 + 17) + 8 * v29);
      int v31 = *((_DWORD *)this + 37);
      uint64_t v32 = *((int *)this + 36);
      if ((int)v32 >= v31)
      {
        if (v31 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136));
          int v31 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v31 + 1;
        operator new();
      }
      uint64_t v33 = *((void *)this + 17);
      *((_DWORD *)this + 36) = v32 + 1;
      awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergeFrom(*(awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)(v33 + 8 * v32), v30);
      ++v29;
    }
    while (v29 < *((int *)a2 + 36));
  }
  if (*((unsigned char *)a2 + 164))
  {
    uint64_t v34 = *((void *)a2 + 1);
    *((_DWORD *)this + 41) |= 1u;
    *((void *)this + 1) = v34;
  }
}

void sub_22499E3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void awd::metrics::LocationPeerRangingMetrics::~LocationPeerRangingMetrics(awd::metrics::LocationPeerRangingMetrics *this)
{
  *(void *)this = &unk_26D7BE7E8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>((uint64_t *)this + 17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>((uint64_t *)this + 14);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>((uint64_t *)this + 11);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>((uint64_t *)this + 8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  awd::metrics::LocationPeerRangingMetrics::~LocationPeerRangingMetrics(this);

  JUMPOUT(0x22A61A830);
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 160) = a2;
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::default_instance(awd::metrics::LocationPeerRangingMetrics *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = awd::metrics::LocationPeerRangingMetrics::default_instance_;
  if (!awd::metrics::LocationPeerRangingMetrics::default_instance_)
  {
    awd::metrics::protobuf_AddDesc_LocationPeerRanging_2eproto(0, a2, a3, a4);
    return awd::metrics::LocationPeerRangingMetrics::default_instance_;
  }
  return result;
}

void awd::metrics::LocationPeerRangingMetrics::New(awd::metrics::LocationPeerRangingMetrics *this)
{
}

uint64_t awd::metrics::LocationPeerRangingMetrics::Clear(awd::metrics::LocationPeerRangingMetrics *this)
{
  if (*((unsigned char *)this + 164)) {
    *((void *)this + 1) = 0;
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>((uint64_t)this + 16);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>((uint64_t)this + 40);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>((uint64_t)this + 64);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>((uint64_t)this + 88);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>((uint64_t)this + 112);
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>((uint64_t)this + 136);
  *((_DWORD *)this + 41) = 0;
  return result;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::MergePartialFromCodedStream(awd::metrics::LocationPeerRangingMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v78 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 16);
  uint64_t v5 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 40);
  int v6 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 64);
  uint64_t v7 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 88);
  uint64_t v8 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 112);
  uint64_t v9 = (awd::metrics::LocationPeerRangingMetrics *)((char *)this + 136);
  while (1)
  {
LABEL_2:
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v13 >= v14 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v4 = *v13;
          uint64_t v15 = v13 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 41) |= 1u;
        if ((unint64_t)v15 >= v14 || *v15 != 18) {
          continue;
        }
        goto LABEL_31;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        while (2)
        {
          int v17 = *((_DWORD *)this + 7);
          uint64_t v18 = *((int *)this + 6);
          if ((int)v18 >= v17)
          {
            if (v17 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v78);
              int v17 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v17 + 1;
            operator new();
          }
          uint64_t v19 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v18 + 1;
          int v20 = *(awd::metrics::LocationPeerRangingMetaData **)(v19 + 8 * v18);
          unsigned int v79 = 0;
          int v21 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
          }
            }
          else
          {
            unsigned int v79 = *v21;
            *((void *)a2 + 1) = v21 + 1;
          }
          int v22 = *((_DWORD *)a2 + 14);
          int v23 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v22 + 1;
          if (v22 >= v23) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!awd::metrics::LocationPeerRangingMetaData::MergePartialFromCodedStream(v20, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v24 = *((_DWORD *)a2 + 14);
          BOOL v25 = __OFSUB__(v24, 1);
          int v26 = v24 - 1;
          if (v26 < 0 == v25) {
            *((_DWORD *)a2 + 14) = v26;
          }
          uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v15 < *((void *)a2 + 2))
          {
            int v27 = *v15;
            if (v27 == 18)
            {
LABEL_31:
              *((void *)a2 + 1) = v15 + 1;
              continue;
            }
            if (v27 == 26)
            {
              do
              {
                *((void *)a2 + 1) = v15 + 1;
LABEL_50:
                int v28 = *((_DWORD *)this + 13);
                uint64_t v29 = *((int *)this + 12);
                if ((int)v29 >= v28)
                {
                  if (v28 == *((_DWORD *)this + 14))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
                    int v28 = *((_DWORD *)this + 13);
                  }
                  *((_DWORD *)this + 13) = v28 + 1;
                  operator new();
                }
                uint64_t v30 = *((void *)this + 5);
                *((_DWORD *)this + 12) = v29 + 1;
                int v31 = *(awd::metrics::LocationPeerRangingEstimatorConfiguration **)(v30 + 8 * v29);
                unsigned int v79 = 0;
                uint64_t v32 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
                }
                  }
                else
                {
                  unsigned int v79 = *v32;
                  *((void *)a2 + 1) = v32 + 1;
                }
                int v33 = *((_DWORD *)a2 + 14);
                int v34 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v33 + 1;
                if (v33 >= v34) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!awd::metrics::LocationPeerRangingEstimatorConfiguration::MergePartialFromCodedStream(v31, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v35 = *((_DWORD *)a2 + 14);
                BOOL v25 = __OFSUB__(v35, 1);
                int v36 = v35 - 1;
                if (v36 < 0 == v25) {
                  *((_DWORD *)a2 + 14) = v36;
                }
                uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v15 >= *((void *)a2 + 2)) {
                  goto LABEL_2;
                }
                int v37 = *v15;
              }
              while (v37 == 26);
              if (v37 == 34)
              {
                do
                {
                  *((void *)a2 + 1) = v15 + 1;
LABEL_68:
                  int v38 = *((_DWORD *)this + 19);
                  uint64_t v39 = *((int *)this + 18);
                  if ((int)v39 >= v38)
                  {
                    if (v38 == *((_DWORD *)this + 20))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                      int v38 = *((_DWORD *)this + 19);
                    }
                    *((_DWORD *)this + 19) = v38 + 1;
                    operator new();
                  }
                  uint64_t v40 = *((void *)this + 8);
                  *((_DWORD *)this + 18) = v39 + 1;
                  int v41 = *(awd::metrics::LocationPeerRangingMeasurementMetrics **)(v40 + 8 * v39);
                  unsigned int v79 = 0;
                  int v42 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v79 = *v42;
                    *((void *)a2 + 1) = v42 + 1;
                  }
                  int v43 = *((_DWORD *)a2 + 14);
                  int v44 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v43 + 1;
                  if (v43 >= v44) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!awd::metrics::LocationPeerRangingMeasurementMetrics::MergePartialFromCodedStream(v41, a2)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v45 = *((_DWORD *)a2 + 14);
                  BOOL v25 = __OFSUB__(v45, 1);
                  int v46 = v45 - 1;
                  if (v46 < 0 == v25) {
                    *((_DWORD *)a2 + 14) = v46;
                  }
                  uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
                  if ((unint64_t)v15 >= *((void *)a2 + 2)) {
                    goto LABEL_2;
                  }
                  int v47 = *v15;
                }
                while (v47 == 34);
                if (v47 == 42)
                {
                  do
                  {
                    *((void *)a2 + 1) = v15 + 1;
LABEL_86:
                    int v48 = *((_DWORD *)this + 25);
                    uint64_t v49 = *((int *)this + 24);
                    if ((int)v49 >= v48)
                    {
                      if (v48 == *((_DWORD *)this + 26))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                        int v48 = *((_DWORD *)this + 25);
                      }
                      *((_DWORD *)this + 25) = v48 + 1;
                      operator new();
                    }
                    uint64_t v50 = *((void *)this + 11);
                    *((_DWORD *)this + 24) = v49 + 1;
                    unint64_t v51 = *(awd::metrics::LocationPeerRangingBurstMetrics **)(v50 + 8 * v49);
                    unsigned int v79 = 0;
                    int v52 = (char *)*((void *)a2 + 1);
                    if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
                    }
                      }
                    else
                    {
                      unsigned int v79 = *v52;
                      *((void *)a2 + 1) = v52 + 1;
                    }
                    int v53 = *((_DWORD *)a2 + 14);
                    int v54 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v53 + 1;
                    if (v53 >= v54) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!awd::metrics::LocationPeerRangingBurstMetrics::MergePartialFromCodedStream(v51, a2)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v55 = *((_DWORD *)a2 + 14);
                    BOOL v25 = __OFSUB__(v55, 1);
                    int v56 = v55 - 1;
                    if (v56 < 0 == v25) {
                      *((_DWORD *)a2 + 14) = v56;
                    }
                    uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
                    if ((unint64_t)v15 >= *((void *)a2 + 2)) {
                      goto LABEL_2;
                    }
                    int v57 = *v15;
                  }
                  while (v57 == 42);
                  if (v57 == 50)
                  {
                    do
                    {
                      *((void *)a2 + 1) = v15 + 1;
LABEL_104:
                      int v58 = *((_DWORD *)this + 31);
                      uint64_t v59 = *((int *)this + 30);
                      if ((int)v59 >= v58)
                      {
                        if (v58 == *((_DWORD *)this + 32))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                          int v58 = *((_DWORD *)this + 31);
                        }
                        *((_DWORD *)this + 31) = v58 + 1;
                        operator new();
                      }
                      uint64_t v60 = *((void *)this + 14);
                      *((_DWORD *)this + 30) = v59 + 1;
                      int v61 = *(awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)(v60 + 8 * v59);
                      unsigned int v79 = 0;
                      int v62 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
                      }
                        }
                      else
                      {
                        unsigned int v79 = *v62;
                        *((void *)a2 + 1) = v62 + 1;
                      }
                      int v63 = *((_DWORD *)a2 + 14);
                      int v64 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v63 + 1;
                      if (v63 >= v64) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!awd::metrics::LocationPeerRangingEarlyTerminateMetrics::MergePartialFromCodedStream(v61, a2)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v65 = *((_DWORD *)a2 + 14);
                      BOOL v25 = __OFSUB__(v65, 1);
                      int v66 = v65 - 1;
                      if (v66 < 0 == v25) {
                        *((_DWORD *)a2 + 14) = v66;
                      }
                      uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
                      if ((unint64_t)v15 >= *((void *)a2 + 2)) {
                        goto LABEL_2;
                      }
                      int v67 = *v15;
                    }
                    while (v67 == 50);
                    if (v67 == 58)
                    {
                      do
                      {
                        *((void *)a2 + 1) = v15 + 1;
LABEL_122:
                        int v68 = *((_DWORD *)this + 37);
                        uint64_t v69 = *((int *)this + 36);
                        if ((int)v69 >= v68)
                        {
                          if (v68 == *((_DWORD *)this + 38))
                          {
                            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                            int v68 = *((_DWORD *)this + 37);
                          }
                          *((_DWORD *)this + 37) = v68 + 1;
                          operator new();
                        }
                        uint64_t v70 = *((void *)this + 17);
                        *((_DWORD *)this + 36) = v69 + 1;
                        int v71 = *(awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)(v70 + 8 * v69);
                        unsigned int v79 = 0;
                        int v72 = (char *)*((void *)a2 + 1);
                        if ((unint64_t)v72 >= *((void *)a2 + 2) || *v72 < 0)
                        {
                          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79))return 0; {
                        }
                          }
                        else
                        {
                          unsigned int v79 = *v72;
                          *((void *)a2 + 1) = v72 + 1;
                        }
                        int v73 = *((_DWORD *)a2 + 14);
                        int v74 = *((_DWORD *)a2 + 15);
                        *((_DWORD *)a2 + 14) = v73 + 1;
                        if (v73 >= v74) {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                        if (!awd::metrics::LocationPeerRangingUnlockDecisionMetrics::MergePartialFromCodedStream(v71, a2)|| !*((unsigned char *)a2 + 36))
                        {
                          return 0;
                        }
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                        int v75 = *((_DWORD *)a2 + 14);
                        BOOL v25 = __OFSUB__(v75, 1);
                        int v76 = v75 - 1;
                        if (v76 < 0 == v25) {
                          *((_DWORD *)a2 + 14) = v76;
                        }
                        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
                        uint64_t v77 = (unsigned char *)*((void *)a2 + 2);
                      }
                      while (v15 < v77 && *v15 == 58);
                      if (v15 == v77 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          break;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_50;
        }
        goto LABEL_24;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_68;
        }
        goto LABEL_24;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_86;
        }
        goto LABEL_24;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_104;
        }
        goto LABEL_24;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        goto LABEL_122;
      default:
        int v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t awd::metrics::LocationPeerRangingMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 164)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 64) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 88) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 112) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 136) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 144));
  }
  return this;
}

uint64_t awd::metrics::LocationPeerRangingMetrics::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  if (*((unsigned char *)this + 164)) {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  }
  else {
    int v2 = 0;
  }
  int v3 = *((_DWORD *)this + 6);
  int v4 = v3 + v2;
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v6 = *((void *)this[2] + i);
      if (*(unsigned char *)(v6 + 20))
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8));
        int v7 = v8 + 1;
        *(_DWORD *)(v6 + 16) = v8 + 1;
        if ((v8 + 1) >= 0x80)
        {
          int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v8 + 1));
          goto LABEL_11;
        }
      }
      else
      {
        int v7 = 0;
        *(_DWORD *)(v6 + 16) = 0;
      }
      int v9 = 1;
LABEL_11:
      v4 += v7 + v9;
    }
  }
  int v10 = *((_DWORD *)this + 12);
  int v11 = v10 + v4;
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingEstimatorConfiguration::ByteSize(*((awd::metrics::LocationPeerRangingEstimatorConfiguration **)this[5] + v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      v11 += v14 + v15;
      ++v12;
    }
    while (v12 < *((int *)this + 12));
  }
  int v16 = *((_DWORD *)this + 18);
  int v17 = v16 + v11;
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingMeasurementMetrics::ByteSize(*((awd::metrics::LocationPeerRangingMeasurementMetrics **)this[8] + v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 18));
  }
  int v22 = *((_DWORD *)this + 24);
  int v23 = v22 + v17;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      BOOL v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingBurstMetrics::ByteSize(*((awd::metrics::LocationPeerRangingBurstMetrics **)this[11] + v24));
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      }
      else {
        int v27 = 1;
      }
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 24));
  }
  int v28 = *((_DWORD *)this + 30);
  int v29 = v28 + v23;
  if (v28 >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingEarlyTerminateMetrics::ByteSize(*((awd::metrics::LocationPeerRangingEarlyTerminateMetrics **)this[14] + v30));
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        int v33 = 1;
      }
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 30));
  }
  int v34 = *((_DWORD *)this + 36);
  uint64_t v35 = (v34 + v29);
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)awd::metrics::LocationPeerRangingUnlockDecisionMetrics::ByteSize(*((awd::metrics::LocationPeerRangingUnlockDecisionMetrics **)this[17] + v36));
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      }
      else {
        int v39 = 1;
      }
      uint64_t v35 = (v38 + v35 + v39);
      ++v36;
    }
    while (v36 < *((int *)this + 36));
  }
  *((_DWORD *)this + 40) = v35;
  return v35;
}

void awd::metrics::LocationPeerRangingMetrics::CheckTypeAndMergeFrom(awd::metrics::LocationPeerRangingMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, lpsrc);
}

void awd::metrics::LocationPeerRangingMetrics::CopyFrom(awd::metrics::LocationPeerRangingMetrics *this, const awd::metrics::LocationPeerRangingMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(awd::metrics::LocationPeerRangingMetrics *))(*(void *)this + 32))(this);
    awd::metrics::LocationPeerRangingMetrics::MergeFrom(this, a2);
  }
}

uint64_t awd::metrics::LocationPeerRangingMetrics::IsInitialized(awd::metrics::LocationPeerRangingMetrics *this)
{
  return 1;
}

awd::metrics::LocationPeerRangingMetrics *awd::metrics::LocationPeerRangingMetrics::Swap(awd::metrics::LocationPeerRangingMetrics *this, awd::metrics::LocationPeerRangingMetrics *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (awd::metrics::LocationPeerRangingMetrics *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 41);
    *((_DWORD *)v3 + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v5;
    int v6 = *((_DWORD *)v3 + 40);
    *((_DWORD *)v3 + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v6;
  }
  return this;
}

void *awd::metrics::LocationPeerRangingMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "awd.metrics.LocationPeerRangingMetrics");
}

uint64_t awd::metrics::LocationPeerRangingMetaData::GetCachedSize(awd::metrics::LocationPeerRangingMetaData *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t awd::metrics::LocationPeerRangingEstimatorConfiguration::GetCachedSize(awd::metrics::LocationPeerRangingEstimatorConfiguration *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::GetCachedSize(awd::metrics::LocationPeerRangingMeasurementMetrics *this)
{
  return *((unsigned int *)this + 15);
}

uint64_t awd::metrics::LocationPeerRangingBurstMetrics::GetCachedSize(awd::metrics::LocationPeerRangingBurstMetrics *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t awd::metrics::LocationPeerRangingEarlyTerminateMetrics::GetCachedSize(awd::metrics::LocationPeerRangingEarlyTerminateMetrics *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t awd::metrics::LocationPeerRangingDecision::GetCachedSize(awd::metrics::LocationPeerRangingDecision *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t awd::metrics::LocationPeerRangingUnlockDecisionMetrics::GetCachedSize(awd::metrics::LocationPeerRangingUnlockDecisionMetrics *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t awd::metrics::LocationPeerRangingMetrics::GetCachedSize(awd::metrics::LocationPeerRangingMetrics *this)
{
  return *((unsigned int *)this + 40);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingDecision>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMetaData>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEstimatorConfiguration>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingMeasurementMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingBurstMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingEarlyTerminateMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<awd::metrics::LocationPeerRangingUnlockDecisionMetrics>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void awd::metrics::LocationServicesState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationServicesApproval::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationUpdateSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMonitorSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMonitorTrigger::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationNetworkQueries::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencySession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencySessionStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_emergencycontactsavailability", "Location.pb.h", 25567, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_medicationsavailability", "Location.pb.h", 25544, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_allergydetailavailability", "Location.pb.h", 25521, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_medicalnotesavailability", "Location.pb.h", 25498, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_bloodtypeavailability", "Location.pb.h", 25475, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_heightavailability", "Location.pb.h", 25452, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_weightavailability", "Location.pb.h", 25429, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_ageavailability", "Location.pb.h", 25406, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_nameavailability", "Location.pb.h", 25383, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_dsaavailability", "Location.pb.h", 25360, "::awd::metrics::LocationEmergencySessionStatistics_ADRFieldAvailability_IsValid(value)");
}

{
  __assert_rtn("set_calltriggertype", "Location.pb.h", 25337, "::awd::metrics::LocationEmergencySessionStatistics_CallTriggerType_IsValid(value)");
}

{
  __assert_rtn("set_callmode", "Location.pb.h", 25248, "::awd::metrics::LocationEmergencySessionStatistics_CallMode_IsValid(value)");
}

{
  __assert_rtn("set_discardedposmsgtype", "Location.pb.h", 25159, "::awd::metrics::LocationEmergencySessionStatistics_DiscardedPosMsgType_IsValid(value)");
}

{
  __assert_rtn("set_supersededcommtype", "Location.pb.h", 24600, "::awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(value)");
}

{
  __assert_rtn("set_supersededsessiontype", "Location.pb.h", 24577, "::awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(value)");
}

{
  __assert_rtn("set_abortcause", "Location.pb.h", 24554, "::awd::metrics::LocationEmergencySessionStatistics_AbortCauseType_IsValid(value)");
}

{
  __assert_rtn("set_envtype", "Location.pb.h", 24509, "::awd::metrics::LocationEmergencySessionStatistics_GnssSignalEnvironmentType_IsValid(value)");
}

{
  __assert_rtn("set_commtype", "Location.pb.h", 24486, "::awd::metrics::LocationEmergencySessionStatistics_CommunicationType_IsValid(value)");
}

{
  __assert_rtn("set_phonenumbersavailable", "Location.pb.h", 24309, "::awd::metrics::LocationEmergencySessionStatistics_PhoneNumberAvailability_IsValid(value)");
}

{
  __assert_rtn("set_tandemcapability", "Location.pb.h", 24000, "::awd::metrics::LocationEmergencySessionStatistics_TandemCapability_IsValid(value)");
}

{
  __assert_rtn("set_heloused", "Location.pb.h", 23779, "::awd::metrics::LocationEmergencySessionStatistics_HELOUsage_IsValid(value)");
}

{
  __assert_rtn("set_errorcode", "Location.pb.h", 23712, "::awd::metrics::LocationEmergencySessionStatistics_SessionErrorCode_IsValid(value)");
}

{
  __assert_rtn("set_requestedpositionreporttype", "Location.pb.h", 23645, "::awd::metrics::LocationEmergencySessionStatistics_PositionReport_IsValid(value)");
}

{
  __assert_rtn("set_rattype", "Location.pb.h", 23490, "::awd::metrics::LocationEmergencySessionStatistics_RadioAccessTechnology_IsValid(value)");
}

{
  __assert_rtn("set_protocoltype", "Location.pb.h", 23467, "::awd::metrics::LocationEmergencySessionStatistics_PositionProtocol_IsValid(value)");
}

{
  __assert_rtn("set_sessiontype", "Location.pb.h", 23444, "::awd::metrics::LocationEmergencySessionStatistics_PositionSession_IsValid(value)");
}

{
  __assert_rtn("set_methodtype", "Location.pb.h", 23421, "::awd::metrics::LocationEmergencySessionStatistics_PositionMethod_IsValid(value)");
}

void awd::metrics::LocationEmergencySessionStatistics::set_envtype()
{
}

void awd::metrics::LocationEmergencySessionStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMapMatching::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationRealTimeHarvest::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSecondaryDeviceRequest::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::CompassSession_Rotation::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::CompassSession::MergeFrom()
{
}

{
  __assert_rtn("set_initstate", "Location.pb.h", 27221, "::awd::metrics::CompassSession_CalibrationLevel_IsValid(value)");
}

void awd::metrics::CompassSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationCompassSaturations::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionTrigger::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroMiniCal::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionDropDetection::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionPedometerCalibration::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroBiasEstimation_EndCount::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroBiasEstimation::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessSession::MergeFrom()
{
}

{
  __assert_rtn("set_activitytypewhenstopdisabled", "Location.pb.h", 30953, "::awd::metrics::MotionFitnessSession_WorkoutType_IsValid(value)");
}

{
  __assert_rtn("set_runcalibrationstatus", "Location.pb.h", 29277, "::awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_walkcalibrationstatus", "Location.pb.h", 29254, "::awd::metrics::MotionFitnessSession_StrideCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_vo2maxestimationstatus", "Location.pb.h", 29143, "::awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_palestimationstatus", "Location.pb.h", 29120, "::awd::metrics::MotionFitnessSession_MotionCalibrationStatus_IsValid(value)");
}

{
  __assert_rtn("set_hrsource", "Location.pb.h", 29075, "::awd::metrics::MotionFitnessSession_HRSource_IsValid(value)");
}

{
  __assert_rtn("set_workouttype", "Location.pb.h", 28850, "::awd::metrics::MotionFitnessSession_WorkoutType_IsValid(value)");
}

void awd::metrics::MotionFitnessSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessAllDay::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::MotionPressureTemperature::MotionPressureTemperature(void *a1, void *a2, void *a3, uint64_t *a4)
{
  if (*a1) {
    OUTLINED_FUNCTION_0();
  }
  if (*a2) {
    OUTLINED_FUNCTION_0();
  }
  if (*a3) {
    OUTLINED_FUNCTION_0();
  }
  uint64_t result = *a4;
  if (*a4)
  {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void awd::metrics::MotionPressureTemperature::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionElevationAllDay::MergeFrom()
{
}

void awd::metrics::MotionElevationAllDay::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionPressureStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionNoGPSRunAllDay::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessDaily::MergeFrom()
{
}

void awd::metrics::MotionFitnessDaily::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessPedometer::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessStrideCalibration::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionFitnessAccelSampleRate::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionBarometerCalibration::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionGyroDaily::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::MotionSOSEvent::MergeFrom()
{
}

void awd::metrics::MotionSOSEvent::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBatteryState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationNavigationSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMainHarvesterMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSubHarvesterUploadAttempt::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSubHarvesterMetrics::MergeFrom()
{
}

void awd::metrics::LocationSubHarvesterMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconMonitorSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconMonitorTrigger::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationBeaconRangingSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_UncertaintyRangeData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCNORangeData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_SatelliteCountRangeData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_MotionActivityData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_SignalEnvironmentData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_MountedStateData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_MovingStateData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_PowerStateData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ChecksumData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_DeviceOrientationData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::MergeFrom()
{
}

void awd::metrics::LocationGPSSessionStatistics_PowerMeasurementData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ChargerTypeData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_ThermalLevelData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_last_gpsd_exit_category", "Location.pb.h", 39735, "::awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics_GpsdExitCategory_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics_LocationGpsPersistentStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_BarometricAltitudeDriftRateInfo::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_NSForceOffReason::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_NSOnOffState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricBucket::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics_JammingMetricDataPerSignal::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGPSSessionStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_ratoccupancy", "Location.pb.h", 41526, "::awd::metrics::LocationGPSSessionStatistics_RadioAccessTechnology_IsValid(value)");
}

void awd::metrics::LocationGPSSessionStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationCellTileUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryPoint::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationRecoveryStatus::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics_LocationGnssRecoveryInfo::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationGnssSWRecoveryStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationVisibilityAssertion::MergeFrom()
{
}

{
  __assert_rtn("set_invalidationreason", "Location.pb.h", 44131, "::awd::metrics::LocationVisibilityAssertion_InvalidationReason_IsValid(value)");
}

void awd::metrics::LocationVisibilityAssertion::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPhoneNumberAvailability::MergeFrom()
{
}

void awd::metrics::LocationPhoneNumberAvailability::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMobileAssetStatistics_CarrierSettingsStatus::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMobileAssetStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_assettype", "Location.pb.h", 44731, "::awd::metrics::LocationMobileAssetStatistics_AssetType_IsValid(value)");
}

{
  __assert_rtn("set_assetevent", "Location.pb.h", 44708, "::awd::metrics::LocationMobileAssetStatistics_AssetEvent_IsValid(value)");
}

void awd::metrics::LocationMobileAssetStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationEmergencyPOIStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_submissiontype", "Location.pb.h", 45396, "::awd::metrics::LocationEmergencyPOIStatistics_SubmissionType_IsValid(value)");
}

{
  __assert_rtn("set_loiqueryresult", "Location.pb.h", 45373, "::awd::metrics::LocationEmergencyPOIStatistics_LOIQueryResult_IsValid(value)");
}

{
  __assert_rtn("set_nearestpoitype", "Location.pb.h", 45306, "::awd::metrics::LocationEmergencyPOIStatistics_POIType_IsValid(value)");
}

{
  __assert_rtn("set_nearestpoisource", "Location.pb.h", 45283, "::awd::metrics::LocationEmergencyPOIStatistics_POISource_IsValid(value)");
}

void awd::metrics::LocationEmergencyPOIStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_ChargingTypeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_DeviceChargingStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_Statistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_PerfRangeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PerformanceStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_SpeedPerfRangeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_SpeedPerformanceStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_LatencyRangeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_MessageHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_MessageStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_NMEAScreeningLocTypeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_LocationAppRunningTime::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_NavDynamicsHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDRavenUsageStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::MergeFrom()
{
}

void awd::metrics::LocationAccessory_PASCDTransmissionHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDSampleSizeHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_PASCDStats::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory_Coordinate::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationAccessory::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::BaroAltitudeCalibrationInfo::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationTilesUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationALSCacheUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationALSNetworkUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationSessionDay::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::LocationTileFileUsage::LocationTileFileUsage(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result) {
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void awd::metrics::LocationTileFileUsage::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationTileFile::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiAPLocationProviderSession::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationWifiTileSync::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationSignificanceMetric::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationEventSignificanceMetric::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationEventTypeAndCount::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventHistogram::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationClusteringByModel::MergeFrom()
{
}

{
  __assert_rtn("set_modeltype", "MicroLocation.pb.h", 2523, "::awd::metrics::LocationMicroLocationModelType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationClusteringByModel::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationMetaData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationMeasurementStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationUserEventStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 2946, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationUserEventStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3172, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationEventClusteringStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationLocalizationStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationModelState::MergeFrom()
{
}

{
  __assert_rtn("set_generationalgorithm", "MicroLocation.pb.h", 3407, "::awd::metrics::LocationMicroLocationGenerationAlgorithm_IsValid(value)");
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3384, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationModelState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationClusteringStatistics::MergeFrom()
{
}

{
  __assert_rtn("set_loitype", "MicroLocation.pb.h", 3523, "::awd::metrics::LOIType_IsValid(value)");
}

void awd::metrics::LocationMicroLocationClusteringStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationLearningState::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationLearningState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationAnalyticsState::MergeFrom()
{
}

void awd::metrics::LocationMicroLocationAnalyticsState::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationMicroLocationStatistics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingMetaData::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::MergeFrom()
{
}

void awd::metrics::LocationPeerRangingEstimatorConfiguration::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

uint64_t awd::metrics::LocationPeerRangingMeasurementMetrics::LocationPeerRangingMeasurementMetrics(void *a1, uint64_t *a2)
{
  if (*a1)
  {
    OUTLINED_FUNCTION_0_0();
    MEMORY[0x22A61A810]();
  }
  uint64_t result = *a2;
  if (*a2)
  {
    OUTLINED_FUNCTION_0_0();
    JUMPOUT(0x22A61A810);
  }
  return result;
}

void awd::metrics::LocationPeerRangingMeasurementMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingBurstMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingEarlyTerminateMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingDecision::MergeFrom()
{
}

void awd::metrics::LocationPeerRangingDecision::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingUnlockDecisionMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void awd::metrics::LocationPeerRangingMetrics::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(wireless_diagnostics::google::protobuf::MessageLite *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9AC78](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC80](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC88](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC90](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC98](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACA0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACB8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACC0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACE0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACE8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9AD10](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage()
{
  return MEMORY[0x270F9AD78]();
}

void wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage(wireless_diagnostics::google::protobuf::internal::LogMessage *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<()
{
  return MEMORY[0x270F9AD88]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=()
{
  return MEMORY[0x270F9ADA8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::VerifyVersion(wireless_diagnostics::google::protobuf::internal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  return MEMORY[0x270F9AEF0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString()
{
  return MEMORY[0x270F9AEF8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes()
{
  return MEMORY[0x270F9AF00]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, float a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF08](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF18](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF20](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, double a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF28](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF30](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString()
{
  return MEMORY[0x270F9AF40]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF48](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF50](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF68](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline()
{
  return MEMORY[0x270F9AF80]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes()
{
  return MEMORY[0x270F9AF90]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  return MEMORY[0x270F9AF98](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA8](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap()
{
  return MEMORY[0x270F9AFC0]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  return MEMORY[0x270F9AFC8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this)
{
  return MEMORY[0x270F9AFD0](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete()
{
  return MEMORY[0x270F9AFD8]();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9B038](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98560](this, __str);
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x270F98F30](lpsrc, lpstype, lpdtype, s2d);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}