void ***wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(void ***this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  void ***v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  uint64_t v7;

  v3 = this;
  v4 = 0;
  for (i = 0; ; ++i)
  {
    v6 = *(void **)a2;
    if (*(void *)a2) {
      v7 = (v6[1] - *v6) >> 4;
    }
    else {
      LODWORD(v7) = 0;
    }
    if (i >= (int)v7) {
      break;
    }
    this = (void ***)wireless_diagnostics::google::protobuf::UnknownFieldSet::AddField(v3, (const wireless_diagnostics::google::protobuf::UnknownField *)(*v6 + v4));
    v4 += 16;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::FileOptions::~FileOptions(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  wireless_diagnostics::google::protobuf::FileOptions::~FileOptions(this);

  JUMPOUT(0x21668DB60);
}

{
  uint64_t *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F8B58;
  v2 = (uint64_t *)((char *)this + 72);
  wireless_diagnostics::google::protobuf::FileOptions::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void wireless_diagnostics::google::protobuf::anonymous namespace'::InitGeneratedPool(wireless_diagnostics::google::protobuf::_anonymous_namespace_ *this)
{
}

void sub_2135B9DA8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x1060C4032DA966FLL);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(void *this)
{
  this[2] = 0;
  *this = &unk_26C3F99B0;
  this[1] = this + 2;
  this[5] = 0;
  this[3] = 0;
  this[4] = this + 5;
  this[8] = 0;
  this[9] = 0;
  this[10] = 0;
  this[6] = 0;
  this[7] = this + 8;
  this[11] = 0;
  this[12] = 0;
  return this;
}

{
  this[2] = 0;
  *this = &unk_26C3F99B0;
  this[1] = this + 2;
  this[5] = 0;
  this[3] = 0;
  this[4] = this + 5;
  this[8] = 0;
  this[9] = 0;
  this[10] = 0;
  this[6] = 0;
  this[7] = this + 8;
  this[11] = 0;
  this[12] = 0;
  return this;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::DescriptorPool(wireless_diagnostics::google::protobuf::DescriptorPool *this, wireless_diagnostics::google::protobuf::DescriptorDatabase *a2, wireless_diagnostics::google::protobuf::DescriptorPool::ErrorCollector *a3)
{
}

void sub_2135B9F14(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::string,std::pair<void const*,int>>,std::string,std::pair<void const*,int>>(uint64_t **a1, uint64_t a2, long long *a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  long long v9 = *a3;
  std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::pair<void const*,int>>>(a1, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
  char v6 = v5;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v6 & 1;
}

void sub_2135B9FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  *(void *)this = &unk_26C3F93F8;
  v2 = (uint64_t *)((char *)this + 160);
  wireless_diagnostics::google::protobuf::FileDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 17);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 14);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 11);
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    MEMORY[0x21668DB40](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)this + 7);
  if (v4) {
    MEMORY[0x21668DB40](v4, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 8);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

void wireless_diagnostics::google::protobuf::FieldOptions::~FieldOptions(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  *(void *)this = &unk_26C3F8C08;
  v2 = (uint64_t *)((char *)this + 56);
  wireless_diagnostics::google::protobuf::FieldOptions::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::FieldOptions::~FieldOptions(this);

  JUMPOUT(0x21668DB60);
}

void wireless_diagnostics::google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  wireless_diagnostics::google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

{
  uint64_t *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F9348;
  v2 = (uint64_t *)((char *)this + 24);
  wireless_diagnostics::google::protobuf::EnumDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  *(void *)this = &unk_26C3F9AD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::Message::~Message(this);

  JUMPOUT(0x21668DB60);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26C3F9AD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  *(void *)this = &unk_26C3F9AD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void wireless_diagnostics::google::protobuf::DescriptorProto::~DescriptorProto(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  wireless_diagnostics::google::protobuf::DescriptorProto::~DescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

{
  uint64_t *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F90D0;
  v2 = (uint64_t *)((char *)this + 120);
  wireless_diagnostics::google::protobuf::DescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 12);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 9);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x21668DB40);
  }
  return result;
}

void wireless_diagnostics::google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  wireless_diagnostics::google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F9558;
  int v2 = (wireless_diagnostics::google::protobuf::FieldDescriptorProto *)((char *)this + 8);
  wireless_diagnostics::google::protobuf::FieldDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void wireless_diagnostics::google::protobuf::Message::~Message(wireless_diagnostics::google::protobuf::Message *this)
{
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  if (*(void *)this)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
    uint64_t v2 = *(void *)this;
    if (*(void *)this)
    {
      uint64_t v3 = *(void **)v2;
      if (*(void *)v2)
      {
        *(void *)(v2 + 8) = v3;
        operator delete(v3);
      }
      MEMORY[0x21668DB60](v2, 0x20C40960023A9);
    }
  }
}

void *wireless_diagnostics::google::protobuf::FieldDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[4];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x21668DB60](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[5];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x21668DB60](v7, 0x1012C40EC159624);
  }
  uint64_t v9 = v1[6];
  if (v9 != v3 && v9 != 0)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (void *)MEMORY[0x21668DB60](v9, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[7];
    if (this)
    {
      v11 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v11();
    }
  }
  return this;
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

{
  wireless_diagnostics::google::protobuf::UnknownFieldSet *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F9880;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)((char *)this + 8);
  wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

void *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[3];
    if (this)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

void *wireless_diagnostics::google::protobuf::DescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[18];
    if (this)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

void *wireless_diagnostics::google::protobuf::EnumDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[6];
    if (this)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 48);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x21668DB60);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  if (a1[3] >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < a1[3]);
  }
  uint64_t result = *(void *)a1;
  if (*(void *)a1)
  {
    JUMPOUT(0x21668DB40);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddFile(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v21 = a3;
  *((void *)&v21 + 1) = a4;
  if ((wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::string,std::pair<void const*,int>>,std::string,std::pair<void const*,int>>(a1, *(void *)(a2 + 16), &v21) & 1) == 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v20);
    return 0;
  }
  if ((*(unsigned char *)(a2 + 204) & 2) != 0)
  {
    uint64_t v7 = *(long long **)(a2 + 24);
    if (*((char *)v7 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v20, *(const std::string::value_type **)v7, *((void *)v7 + 1));
    }
    else
    {
      long long v8 = *v7;
      v20.__r_.__value_.__r.__words[2] = *((void *)v7 + 2);
      *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v8;
    }
  }
  else
  {
    memset(&v20, 0, sizeof(v20));
  }
  std::string::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v20.__r_.__value_.__l.__size_;
  }
  if (size) {
    std::string::push_back(&v20, 46);
  }
  if (*(int *)(a2 + 96) < 1)
  {
LABEL_19:
    if (*(int *)(a2 + 120) < 1)
    {
LABEL_25:
      if (*(int *)(a2 + 168) < 1)
      {
LABEL_32:
        if (*(int *)(a2 + 144) < 1)
        {
          uint64_t v6 = 1;
        }
        else
        {
          uint64_t v16 = 0;
          do
          {
            std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v20.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 136) + 8 * v16) + 16), (uint64_t)__p);
            uint64_t v6 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddSymbol((uint64_t)a1, (uint64_t)__p, v21, *((uint64_t *)&v21 + 1));
            if (v19 < 0) {
              operator delete(__p[0]);
            }
            if ((v6 & 1) == 0) {
              break;
            }
            ++v16;
          }
          while (v16 < *(int *)(a2 + 144));
        }
        goto LABEL_40;
      }
      uint64_t v14 = 0;
      while (1)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v20.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 160) + 8 * v14) + 16), (uint64_t)__p);
        char v15 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddSymbol((uint64_t)a1, (uint64_t)__p, v21, *((uint64_t *)&v21 + 1));
        if (v19 < 0) {
          operator delete(__p[0]);
        }
        if ((v15 & 1) == 0
          || (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddExtension((uint64_t)a1, *(void *)(*(void *)(a2 + 160) + 8 * v14), v21, *((uint64_t *)&v21 + 1)) & 1) == 0)
        {
          break;
        }
        if (++v14 >= *(int *)(a2 + 168)) {
          goto LABEL_32;
        }
      }
    }
    else
    {
      uint64_t v12 = 0;
      while (1)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v20.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 112) + 8 * v12) + 16), (uint64_t)__p);
        char v13 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddSymbol((uint64_t)a1, (uint64_t)__p, v21, *((uint64_t *)&v21 + 1));
        if (v19 < 0) {
          operator delete(__p[0]);
        }
        if ((v13 & 1) == 0) {
          break;
        }
        if (++v12 >= *(int *)(a2 + 120)) {
          goto LABEL_25;
        }
      }
    }
  }
  else
  {
    uint64_t v10 = 0;
    while (1)
    {
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v20.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 88) + 8 * v10) + 16), (uint64_t)__p);
      char v11 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddSymbol((uint64_t)a1, (uint64_t)__p, v21, *((uint64_t *)&v21 + 1));
      if (v19 < 0) {
        operator delete(__p[0]);
      }
      if ((v11 & 1) == 0
        || (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddNestedExtensions((uint64_t)a1, *(void *)(*(void *)(a2 + 88) + 8 * v10), v21, *((uint64_t *)&v21 + 1)) & 1) == 0)
      {
        break;
      }
      if (++v10 >= *(int *)(a2 + 96)) {
        goto LABEL_19;
      }
    }
  }
  uint64_t v6 = 0;
LABEL_40:
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_2135BACC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddNestedExtensions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(int *)(a2 + 80) < 1)
  {
LABEL_5:
    if (*(int *)(a2 + 56) < 1)
    {
      return 1;
    }
    else
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t result = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddExtension(a1, *(void *)(*(void *)(a2 + 48) + 8 * v9), a3, a4);
        if ((result & 1) == 0) {
          break;
        }
        ++v9;
      }
      while (v9 < *(int *)(a2 + 56));
    }
  }
  else
  {
    uint64_t v8 = 0;
    while ((wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddNestedExtensions(a1, *(void *)(*(void *)(a2 + 72) + 8 * v8), a3, a4) & 1) != 0)
    {
      if (++v8 >= *(int *)(a2 + 80)) {
        goto LABEL_5;
      }
    }
    return 0;
  }
  return result;
}

uint64_t std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = std::string::basic_string[abi:ne180100](a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v8 = (char *)result;
  }
  else {
    uint64_t v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  uint64_t v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      char v11 = a2;
    }
    else {
      char v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

uint64_t std::string::basic_string[abi:ne180100](uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    size_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddSymbol(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::ValidateSymbolName(a1, (uint64_t *)a2))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    goto LABEL_6;
  }
  LastLessOrEqual = (unsigned __int8 *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindLastLessOrEqual(a1, (const void **)a2);
  if ((unsigned __int8 *)(a1 + 32) == LastLessOrEqual)
  {
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v14 = *(std::string *)a2;
    }
    uint64_t v15 = a3;
    uint64_t v16 = a4;
    std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::pair<void const*,int>>>((uint64_t **)(a1 + 24), (const void **)&v14.__r_.__value_.__l.__data_, (uint64_t)&v14);
    goto LABEL_22;
  }
  uint64_t v9 = LastLessOrEqual;
  if (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, LastLessOrEqual + 32, (unsigned __int8 *)a2))
  {
    goto LABEL_4;
  }
  char v11 = (unsigned __int8 *)*((void *)v9 + 1);
  if (v11)
  {
    do
    {
      uint64_t v12 = v11;
      char v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  else
  {
    do
    {
      uint64_t v12 = (unsigned __int8 *)*((void *)v9 + 2);
      BOOL v13 = *(void *)v12 == (void)v9;
      uint64_t v9 = v12;
    }
    while (!v13);
  }
  if (v12 != (unsigned __int8 *)(a1 + 32)
    && wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, (unsigned __int8 *)a2, v12 + 32))
  {
LABEL_4:
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
LABEL_6:
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v14);
    return 0;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v14 = *(std::string *)a2;
  }
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::pair<void const*,int>>>((uint64_t **)(a1 + 24), (uint64_t *)v12, (const void **)&v14.__r_.__value_.__l.__data_, (uint64_t)&v14);
LABEL_22:
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_2135BB1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

BOOL wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  size_t v5 = a2[23];
  size_t v6 = *((void *)a2 + 1);
  if ((v5 & 0x80u) == 0) {
    uint64_t v7 = a2[23];
  }
  else {
    uint64_t v7 = *((void *)a2 + 1);
  }
  size_t v8 = a3[23];
  size_t v9 = *((void *)a3 + 1);
  if ((v8 & 0x80u) == 0) {
    size_t v10 = a3[23];
  }
  else {
    size_t v10 = *((void *)a3 + 1);
  }
  if (v7 != v10) {
    goto LABEL_17;
  }
  if ((v8 & 0x80u) == 0) {
    char v11 = a3;
  }
  else {
    char v11 = *(unsigned __int8 **)a3;
  }
  if ((v5 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a2, v11, v6))
    {
LABEL_21:
      if (v10 < v6) {
        return 0;
      }
      goto LABEL_22;
    }
    return 1;
  }
  if (!v5) {
    return 1;
  }
  uint64_t v12 = a2;
  size_t v13 = v5;
  while (*v12 == *v11)
  {
    ++v12;
    ++v11;
    if (!--v13) {
      return 1;
    }
  }
LABEL_17:
  if ((v5 & 0x80) != 0) {
    goto LABEL_21;
  }
  size_t v6 = v5;
  if (v10 < v5) {
    return 0;
  }
LABEL_22:
  if ((v8 & 0x80) != 0)
  {
    if (v6 != -1)
    {
      if (v9 >= v6) {
        size_t v9 = v6;
      }
      uint64_t v15 = *(const void **)a3;
      goto LABEL_33;
    }
LABEL_43:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if (v6 == -1) {
    goto LABEL_43;
  }
  if (v8 >= v6) {
    size_t v9 = v6;
  }
  else {
    size_t v9 = v8;
  }
  uint64_t v15 = a3;
LABEL_33:
  if ((v5 & 0x80u) == 0) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = *(const void **)a2;
  }
  int v17 = memcmp(v15, v16, v9);
  BOOL result = 0;
  if (v9 == v6 && !v17)
  {
    if ((v8 & 0x80u) == 0) {
      v18 = a3;
    }
    else {
      v18 = *(unsigned __int8 **)a3;
    }
    return v18[v7] == 46;
  }
  return result;
}

__n128 std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__construct_node<std::pair<std::string const,std::pair<void const*,int>>>@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(v6 + 56) = result;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2135BB3F8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    size_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

BOOL wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::ValidateSymbolName(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = *((unsigned __int8 *)a2 + 23);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    unint64_t v2 = a2[1];
  }
  if (v2)
  {
    uint64_t v4 = 0;
    BOOL v5 = 0;
    if (v3 >= 0) {
      std::string::size_type v6 = a2;
    }
    else {
      std::string::size_type v6 = (uint64_t *)*a2;
    }
    do
    {
      int v7 = *((unsigned __int8 *)v6 + v4);
      if (v7 != 46
        && v7 != 95
        && (v7 - 58) <= 0xFFFFFFF5
        && *((unsigned __int8 *)v6 + v4) - 91 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v6 + v4) - 123 < 0xFFFFFFE6)
      {
        break;
      }
      BOOL v5 = v2 <= ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    return 1;
  }
  return v5;
}

const void **std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::string>(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  size_t v9 = (const void **)(a1 + 1);
  if (a1 + 1 != a2 && !std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
    {
      *a3 = (const void **)a2;
      *a4 = (uint64_t)a2;
      return (const void **)a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      std::string v14 = (const void **)a2[1];
      do
      {
        uint64_t v15 = v14;
        std::string v14 = (const void **)*v14;
      }
      while (v14);
    }
    else
    {
      v18 = (const void **)a2;
      do
      {
        uint64_t v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, v15 + 4)) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (const void **)a2;
    }
    return (const void **)a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    uint64_t v12 = (const void **)a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = (const void **)a2;
      return (const void **)a2;
    }
  }
  char v11 = (const void **)*a2;
  if (*a2)
  {
    do
    {
      uint64_t v12 = v11;
      char v11 = (const void **)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      uint64_t v12 = (const void **)v16[2];
      BOOL v17 = *v12 == v16;
      uint64_t v16 = (uint64_t *)v12;
    }
    while (v17);
  }
  if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), v12 + 4, a5)) {
    goto LABEL_16;
  }
LABEL_28:

  return (const void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, a3, a5);
}

void *wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindLastLessOrEqual(uint64_t a1, const void **a2)
{
  int v3 = (void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    do
    {
      BOOL v6 = std::less<std::string>::operator()[abi:ne180100](a1 + 40, a2, (const void **)(v4 + 32));
      int v7 = (uint64_t *)(v4 + 8);
      if (v6)
      {
        int v7 = (uint64_t *)v4;
        int v3 = (void *)v4;
      }
      uint64_t v4 = *v7;
    }
    while (*v7);
  }
  if (v3 == *(void **)(a1 + 24)) {
    return v3;
  }
  size_t v8 = (void *)*v3;
  if (*v3)
  {
    do
    {
      __n128 result = v8;
      size_t v8 = (void *)v8[1];
    }
    while (v8);
  }
  else
  {
    do
    {
      __n128 result = (void *)v3[2];
      BOOL v10 = *result == (void)v3;
      int v3 = result;
    }
    while (v10);
  }
  return result;
}

BOOL std::less<std::string>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    BOOL v6 = a2;
  }
  else {
    BOOL v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    size_t v8 = a3;
  }
  else {
    size_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

uint64_t *std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::pair<void const*,int>>>(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  BOOL v6 = (uint64_t **)std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::string>(a1, a2, &v10, &v9, a3);
  __n128 result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__construct_node<std::pair<std::string const,std::pair<void const*,int>>>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  size_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  __n128 result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      unint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      int v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), size_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            uint64_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            uint64_t v9 = (uint64_t **)v2[1];
            int v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              int v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *uint64_t v9 = v2;
            v2[2] = (uint64_t)v9;
            int v3 = v9[2];
            unint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *int v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), size_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            int v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          int v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        unint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *size_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)this + 24);
  uint64_t v7 = (void ***)((char *)this + 8);
  uint64_t v8 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v9;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v9 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v11 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_22;
      }
      *((_DWORD *)this + 15) |= 1u;
      if (*((void *)this + 2) == v8) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      std::string v14 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((void *)a2 + 1) = v14 + 1;
LABEL_26:
          int v15 = *((_DWORD *)this + 9);
          uint64_t v16 = *((int *)this + 8);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v15 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v15 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumValueDescriptorProto>::New();
          }
          uint64_t v17 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v16 + 1;
          v18 = *(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto **)(v17 + 8 * v16);
          unsigned int v36 = 0;
          char v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
          }
            }
          else
          {
            unsigned int v36 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)a2 + 14);
          int v21 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergePartialFromCodedStream(v18, a2, v22, v23)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v24 = *((_DWORD *)a2 + 14);
          BOOL v25 = __OFSUB__(v24, 1);
          int v26 = v24 - 1;
          if (v26 < 0 == v25) {
            *((_DWORD *)a2 + 14) = v26;
          }
          std::string v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v27 = *v14;
          if (v27 != 18)
          {
            if (v27 == 26)
            {
              *((void *)a2 + 1) = v14 + 1;
LABEL_44:
              *((_DWORD *)this + 15) |= 4u;
              v28 = (wireless_diagnostics::google::protobuf::EnumOptions *)*((void *)this + 6);
              if (!v28) {
                operator new();
              }
              unsigned int v37 = 0;
              v29 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0; {
              }
                }
              else
              {
                unsigned int v37 = *v29;
                *((void *)a2 + 1) = v29 + 1;
              }
              int v30 = *((_DWORD *)a2 + 14);
              int v31 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v30 + 1;
              if (v30 >= v31) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!wireless_diagnostics::google::protobuf::EnumOptions::MergePartialFromCodedStream(v28, a2, v32, v33)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v34 = *((_DWORD *)a2 + 14);
              BOOL v25 = __OFSUB__(v34, 1);
              int v35 = v34 - 1;
              if (v35 < 0 == v25) {
                *((_DWORD *)a2 + 14) = v35;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v11 == 2)
    {
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
    if (v11 == 3)
    {
      int v12 = TagFallback & 7;
      if (v12 == 2) {
        goto LABEL_44;
      }
    }
    else
    {
      int v12 = TagFallback & 7;
    }
LABEL_22:
    if (v12 == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
  }
    }
}

void sub_2135BBE10(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumValueDescriptorProto>::New()
{
}

void sub_2135BBE74(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406601F8D4);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9880;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v2;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_2135BBEF0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (void ***)((char *)this + 8);
  uint64_t v7 = MEMORY[0x263F8C740];
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v8 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v8;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v8 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v10 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v11 = TagFallback & 7;
          if (v11 != 2) {
            goto LABEL_25;
          }
          *((_DWORD *)this + 10) |= 1u;
          if (*((void *)this + 2) == v7) {
            operator new();
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          if ((unint64_t)v15 < v14 && *v15 == 16)
          {
            uint64_t v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
            goto LABEL_21;
          }
        }
        if (v10 == 2) {
          break;
        }
        if (v10 == 3)
        {
          int v11 = TagFallback & 7;
          if (v11 == 2)
          {
            int v12 = *((_DWORD *)this + 10);
            goto LABEL_33;
          }
        }
        else
        {
          int v11 = TagFallback & 7;
        }
LABEL_25:
        if (v11 == 4) {
          return 1;
        }
        if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
      }
        }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_25;
      }
      uint64_t v16 = (char *)*((void *)a2 + 1);
      unint64_t v14 = *((void *)a2 + 2);
LABEL_21:
      unsigned int v28 = 0;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v17 = v28;
        v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v17 = *v16;
        v18 = v16 + 1;
        *((void *)a2 + 1) = v18;
      }
      *((_DWORD *)this + 8) = v17;
      int v12 = *((_DWORD *)this + 10) | 2;
      *((_DWORD *)this + 10) = v12;
    }
    while ((unint64_t)v18 >= v14 || *v18 != 26);
    *((void *)a2 + 1) = v18 + 1;
LABEL_33:
    *((_DWORD *)this + 10) = v12 | 4;
    char v19 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)*((void *)this + 3);
    if (!v19) {
      operator new();
    }
    unsigned int v29 = 0;
    int v20 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29)) {
        return 0;
      }
    }
    else
    {
      unsigned int v29 = *v20;
      *((void *)a2 + 1) = v20 + 1;
    }
    int v21 = *((_DWORD *)a2 + 14);
    int v22 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v21 + 1;
    if (v21 >= v22) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!wireless_diagnostics::google::protobuf::EnumValueOptions::MergePartialFromCodedStream(v19, a2, v23, v24)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v25 = *((_DWORD *)a2 + 14);
    BOOL v26 = __OFSUB__(v25, 1);
    int v27 = v25 - 1;
    if (v27 < 0 == v26) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

void sub_2135BC1D8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::DescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 24);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 72);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 96);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 120);
  unsigned int v10 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 48);
  int v11 = (void ***)((char *)this + 8);
LABEL_2:
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 39) |= 1u;
        if (*((void *)this + 2) == MEMORY[0x263F8C740]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 18) {
            continue;
          }
          goto LABEL_30;
        }
        return result;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_27;
        }
        while (1)
        {
          int v17 = *((_DWORD *)this + 9);
          uint64_t v18 = *((int *)this + 8);
          if ((int)v18 >= v17)
          {
            if (v17 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v17 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v17 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
          }
          uint64_t v19 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v18 + 1;
          int v20 = *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v19 + 8 * v18);
          unsigned int v84 = 0;
          int v21 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84))return 0; {
          }
            }
          else
          {
            unsigned int v84 = *v21;
            *((void *)a2 + 1) = v21 + 1;
          }
          int v22 = *((_DWORD *)a2 + 14);
          int v23 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v22 + 1;
          if (v22 >= v23) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergePartialFromCodedStream(v20, a2, v24, v25)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v26 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v26, 1);
          int v28 = v26 - 1;
          if (v28 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v28;
          }
          uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v29 = *v16;
          if (v29 != 18) {
            break;
          }
LABEL_30:
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v29 != 26) {
          continue;
        }
        goto LABEL_48;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_27;
        }
        break;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_67;
        }
        goto LABEL_27;
      case 5u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_85;
        }
        goto LABEL_27;
      case 6u:
        int v14 = TagFallback & 7;
        if (v14 == 2) {
          goto LABEL_103;
        }
        goto LABEL_27;
      case 7u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_27;
        }
        goto LABEL_121;
      default:
        int v14 = TagFallback & 7;
LABEL_27:
        if (v14 == 4) {
          return 1;
        }
        if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v11, a4))return 0; {
        continue;
        }
    }
    break;
  }
  while (1)
  {
    int v30 = *((_DWORD *)this + 21);
    uint64_t v31 = *((int *)this + 20);
    if ((int)v31 >= v30)
    {
      if (v30 == *((_DWORD *)this + 22))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
        int v30 = *((_DWORD *)this + 21);
      }
      *((_DWORD *)this + 21) = v30 + 1;
      wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
    }
    uint64_t v32 = *((void *)this + 9);
    *((_DWORD *)this + 20) = v31 + 1;
    v33 = *(wireless_diagnostics::google::protobuf::DescriptorProto **)(v32 + 8 * v31);
    unsigned int v84 = 0;
    int v34 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84)) {
        return 0;
      }
    }
    else
    {
      unsigned int v84 = *v34;
      *((void *)a2 + 1) = v34 + 1;
    }
    int v35 = *((_DWORD *)a2 + 14);
    int v36 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v35 + 1;
    if (v35 >= v36) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!wireless_diagnostics::google::protobuf::DescriptorProto::MergePartialFromCodedStream(v33, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v37 = *((_DWORD *)a2 + 14);
    BOOL v27 = __OFSUB__(v37, 1);
    int v38 = v37 - 1;
    if (v38 < 0 == v27) {
      *((_DWORD *)a2 + 14) = v38;
    }
    uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v16 >= *((void *)a2 + 2)) {
      goto LABEL_2;
    }
    int v39 = *v16;
    if (v39 != 26)
    {
      if (v39 != 34) {
        goto LABEL_2;
      }
      while (1)
      {
        *((void *)a2 + 1) = v16 + 1;
LABEL_67:
        int v40 = *((_DWORD *)this + 27);
        uint64_t v41 = *((int *)this + 26);
        if ((int)v41 >= v40)
        {
          if (v40 == *((_DWORD *)this + 28))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
            int v40 = *((_DWORD *)this + 27);
          }
          *((_DWORD *)this + 27) = v40 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
        }
        uint64_t v42 = *((void *)this + 12);
        *((_DWORD *)this + 26) = v41 + 1;
        v43 = *(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v42 + 8 * v41);
        unsigned int v84 = 0;
        v44 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84))return 0; {
        }
          }
        else
        {
          unsigned int v84 = *v44;
          *((void *)a2 + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergePartialFromCodedStream(v43, a2, v47, v48)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v49 = *((_DWORD *)a2 + 14);
        BOOL v27 = __OFSUB__(v49, 1);
        int v50 = v49 - 1;
        if (v50 < 0 == v27) {
          *((_DWORD *)a2 + 14) = v50;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2)) {
          goto LABEL_2;
        }
        int v51 = *v16;
        if (v51 != 34)
        {
          if (v51 != 42) {
            goto LABEL_2;
          }
          while (1)
          {
            *((void *)a2 + 1) = v16 + 1;
LABEL_85:
            int v52 = *((_DWORD *)this + 33);
            uint64_t v53 = *((int *)this + 32);
            if ((int)v53 >= v52)
            {
              if (v52 == *((_DWORD *)this + 34))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                int v52 = *((_DWORD *)this + 33);
              }
              *((_DWORD *)this + 33) = v52 + 1;
              wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange>::New();
            }
            uint64_t v54 = *((void *)this + 15);
            *((_DWORD *)this + 32) = v53 + 1;
            v55 = *(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange **)(v54 + 8 * v53);
            unsigned int v84 = 0;
            v56 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84))return 0; {
            }
              }
            else
            {
              unsigned int v84 = *v56;
              *((void *)a2 + 1) = v56 + 1;
            }
            int v57 = *((_DWORD *)a2 + 14);
            int v58 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v57 + 1;
            if (v57 >= v58) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergePartialFromCodedStream(v55, a2, v59, v60)|| !*((unsigned char *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            int v61 = *((_DWORD *)a2 + 14);
            BOOL v27 = __OFSUB__(v61, 1);
            int v62 = v61 - 1;
            if (v62 < 0 == v27) {
              *((_DWORD *)a2 + 14) = v62;
            }
            uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
            if ((unint64_t)v16 >= *((void *)a2 + 2)) {
              goto LABEL_2;
            }
            int v63 = *v16;
            if (v63 != 42)
            {
              if (v63 != 50) {
                goto LABEL_2;
              }
              while (1)
              {
                *((void *)a2 + 1) = v16 + 1;
LABEL_103:
                int v64 = *((_DWORD *)this + 15);
                uint64_t v65 = *((int *)this + 14);
                if ((int)v65 >= v64)
                {
                  if (v64 == *((_DWORD *)this + 16))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10);
                    int v64 = *((_DWORD *)this + 15);
                  }
                  *((_DWORD *)this + 15) = v64 + 1;
                  wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
                }
                uint64_t v66 = *((void *)this + 6);
                *((_DWORD *)this + 14) = v65 + 1;
                v67 = *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v66 + 8 * v65);
                unsigned int v84 = 0;
                v68 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84))return 0; {
                }
                  }
                else
                {
                  unsigned int v84 = *v68;
                  *((void *)a2 + 1) = v68 + 1;
                }
                int v69 = *((_DWORD *)a2 + 14);
                int v70 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v69 + 1;
                if (v69 >= v70) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergePartialFromCodedStream(v67, a2, v71, v72)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v73 = *((_DWORD *)a2 + 14);
                BOOL v27 = __OFSUB__(v73, 1);
                int v74 = v73 - 1;
                if (v74 < 0 == v27) {
                  *((_DWORD *)a2 + 14) = v74;
                }
                uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v16 >= *((void *)a2 + 2)) {
                  goto LABEL_2;
                }
                int v75 = *v16;
                if (v75 != 50)
                {
                  if (v75 != 58) {
                    goto LABEL_2;
                  }
                  *((void *)a2 + 1) = v16 + 1;
LABEL_121:
                  *((_DWORD *)this + 39) |= 0x40u;
                  v76 = (wireless_diagnostics::google::protobuf::MessageOptions *)*((void *)this + 18);
                  if (!v76) {
                    operator new();
                  }
                  unsigned int v84 = 0;
                  v77 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v77 >= *((void *)a2 + 2) || *v77 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v84))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v84 = *v77;
                    *((void *)a2 + 1) = v77 + 1;
                  }
                  int v78 = *((_DWORD *)a2 + 14);
                  int v79 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v78 + 1;
                  if (v78 >= v79) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!wireless_diagnostics::google::protobuf::MessageOptions::MergePartialFromCodedStream(v76, a2, v80, v81)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v82 = *((_DWORD *)a2 + 14);
                  BOOL v27 = __OFSUB__(v82, 1);
                  int v83 = v82 - 1;
                  if (v83 < 0 == v27) {
                    *((_DWORD *)a2 + 14) = v83;
                  }
                  if (*((void *)a2 + 1) == *((void *)a2 + 2)
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                  goto LABEL_2;
                }
              }
            }
          }
        }
      }
    }
LABEL_48:
    *((void *)a2 + 1) = v16 + 1;
  }
}

void sub_2135BCA80(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New()
{
}

void sub_2135BCAE4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4090AC2D2CLL);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::FieldDescriptorProto *wireless_diagnostics::google::protobuf::FieldDescriptorProto::FieldDescriptorProto(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9558;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0x100000000;
  *((void *)this + 8) = 1;
  *((void *)this + 4) = v2;
  *((void *)this + 5) = v2;
  *((void *)this + 6) = v2;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_2135BCB7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet(void *this)
{
  *this = 0;
  return this;
}

{
  *this = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (void ***)((char *)this + 8);
  uint64_t v7 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 18) |= 1u;
        if (*((void *)this + 2) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v12 < *((void *)a2 + 2) && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_37;
        }
LABEL_17:
        *((_DWORD *)this + 18) |= 0x20u;
        if (*((void *)this + 5) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          if ((unint64_t)v14 < v13 && *v14 == 24)
          {
            int v15 = v14 + 1;
            *((void *)a2 + 1) = v15;
            goto LABEL_25;
          }
          continue;
        }
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_25:
        unsigned int v36 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36);
          if (!result) {
            return result;
          }
          unsigned int v16 = v36;
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v15;
          int v17 = v15 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 6) = v16;
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v17 < v13 && *v17 == 32)
        {
          uint64_t v18 = v17 + 1;
          *((void *)a2 + 1) = v18;
          goto LABEL_45;
        }
        continue;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_45:
        unsigned int v36 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36);
          if (!result) {
            return result;
          }
          signed int v21 = v36;
        }
        else
        {
          signed int v21 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if ((v21 - 1) > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 4, v21);
        }
        else
        {
          *((_DWORD *)this + 18) |= 4u;
          *((_DWORD *)this + 7) = v21;
        }
        int v22 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v22 >= v19 || *v22 != 40) {
          continue;
        }
        int v20 = v22 + 1;
        *((void *)a2 + 1) = v20;
LABEL_56:
        unsigned int v36 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36);
          if (!result) {
            return result;
          }
          signed int v23 = v36;
        }
        else
        {
          signed int v23 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if ((v23 - 1) > 0x11)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 5, v23);
        }
        else
        {
          *((_DWORD *)this + 18) |= 8u;
          *((_DWORD *)this + 16) = v23;
        }
        uint64_t v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_67:
        *((_DWORD *)this + 18) |= 0x10u;
        if (*((void *)this + 4) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_73:
        *((_DWORD *)this + 18) |= 0x40u;
        if (*((void *)this + 6) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_79:
        *((_DWORD *)this + 18) |= 0x80u;
        BOOL v27 = (wireless_diagnostics::google::protobuf::FieldOptions *)*((void *)this + 7);
        if (!v27) {
          operator new();
        }
        unsigned int v36 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 < v30)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (wireless_diagnostics::google::protobuf::FieldOptions::MergePartialFromCodedStream(v27, a2, v31, v32))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v33 = *((_DWORD *)a2 + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)a2 + 14) = v35;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_56;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_67;
        }
        goto LABEL_37;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_73;
        }
        goto LABEL_37;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_37;
        }
        goto LABEL_79;
      default:
        int v10 = TagFallback & 7;
LABEL_37:
        if (v10 == 4) {
          return 1;
        }
        if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
        continue;
        }
    }
  }
}

void sub_2135BD124(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange>::New()
{
}

void sub_2135BD188(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40380937A6);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::DescriptorProto_ExtensionRange(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  *(void *)this = &unk_26C3F9AD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_2135BD1F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (void ***)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v19 = 0;
      int v12 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
        if (!result) {
          return result;
        }
        unsigned int v13 = v19;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v13 = *v12;
        int v14 = v12 + 1;
        *((void *)a2 + 1) = v14;
      }
      *((_DWORD *)this + 4) = v13;
      *((_DWORD *)this + 7) |= 1u;
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        int v11 = v14 + 1;
        *((void *)a2 + 1) = v11;
LABEL_24:
        unsigned int v18 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18);
          if (!result) {
            return result;
          }
          unsigned int v15 = v18;
          unsigned int v16 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v11;
          unsigned int v16 = (unsigned __int8 *)(v11 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 5) = v15;
        *((_DWORD *)this + 7) |= 2u;
        if (v16 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
  }
    }
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New()
{
}

void sub_2135BD404(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::EnumDescriptorProto *wireless_diagnostics::google::protobuf::EnumDescriptorProto::EnumDescriptorProto(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9348;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_2135BD484(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::FieldOptions *wireless_diagnostics::google::protobuf::FieldOptions::FieldOptions(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  *(void *)this = &unk_26C3F8C08;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_DWORD *)((char *)this + 43) = 0;
  *((void *)this + 6) = MEMORY[0x263F8C740];
  *((void *)this + 7) = 0;
  *((unsigned char *)this + 47) = 0;
  *((void *)this + 10) = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::FieldOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (void ***)((char *)this + 32);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 56);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8);
  uint64_t v9 = MEMORY[0x263F8C740];
LABEL_2:
  while (2)
  {
    unint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v46 = 0;
        unsigned int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v14 = v46;
        }
        else
        {
          unsigned int v14 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v14 > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v14);
        }
        else
        {
          *((_DWORD *)this + 21) |= 1u;
          *((_DWORD *)this + 10) = v14;
        }
        signed int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v23 < v15 && *v23 == 16)
        {
          unsigned int v16 = v23 + 1;
          *((void *)a2 + 1) = v16;
          goto LABEL_40;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_40:
        unsigned int v46 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v24 = v46;
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          int v25 = v16 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((unsigned char *)this + 44) = v24 != 0;
        *((_DWORD *)this + 21) |= 2u;
        if ((unint64_t)v25 >= v15 || *v25 != 24) {
          continue;
        }
        int v17 = v25 + 1;
        *((void *)a2 + 1) = v17;
LABEL_48:
        unsigned int v46 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v26 = v46;
          BOOL v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          BOOL v27 = v17 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((unsigned char *)this + 46) = v26 != 0;
        *((_DWORD *)this + 21) |= 8u;
        if ((unint64_t)v27 >= v15 || *v27 != 40) {
          continue;
        }
        unsigned int v18 = v27 + 1;
        *((void *)a2 + 1) = v18;
LABEL_56:
        unsigned int v46 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v28 = v46;
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v18;
          int v29 = v18 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 45) = v28 != 0;
        int v19 = *((_DWORD *)this + 21) | 4;
        *((_DWORD *)this + 21) = v19;
        if ((unint64_t)v29 >= v15 || *v29 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_64:
        *((_DWORD *)this + 21) = v19 | 0x10;
        if (*((void *)this + 6) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v20 || *v30 != 80) {
          continue;
        }
        signed int v21 = v30 + 1;
        *((void *)a2 + 1) = v21;
LABEL_70:
        unsigned int v46 = 0;
        if ((unint64_t)v21 >= v20 || (char)*v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46);
          if (!result) {
            return result;
          }
          unsigned int v31 = v46;
          uint64_t v32 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v21;
          uint64_t v32 = v21 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((unsigned char *)this + 47) = v31 != 0;
        *((_DWORD *)this + 21) |= 0x20u;
        if ((int)v20 - (int)v32 >= 2 && *v32 == 186 && v32[1] == 62) {
          goto LABEL_78;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_48;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        goto LABEL_15;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_56;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_25;
        }
        int v19 = *((_DWORD *)this + 21);
        goto LABEL_64;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        signed int v21 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_70;
      default:
        if (TagFallback >> 3 != 999)
        {
LABEL_15:
          int v12 = TagFallback & 7;
LABEL_25:
          if (v12 == 4) {
            return 1;
          }
          if (TagFallback >> 6 < 0x7D)
          {
            if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
          }
            }
          else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::FieldOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v6) & 1) == 0)
          {
            return 0;
          }
          continue;
        }
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_25;
        }
        while (2)
        {
          int v33 = *((_DWORD *)this + 17);
          uint64_t v34 = *((int *)this + 16);
          if ((int)v34 >= v33)
          {
            if (v33 == *((_DWORD *)this + 18))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              int v33 = *((_DWORD *)this + 17);
            }
            *((_DWORD *)this + 17) = v33 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
          }
          uint64_t v35 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v34 + 1;
          unsigned int v36 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v35 + 8 * v34);
          unsigned int v46 = 0;
          int v37 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0; {
          }
            }
          else
          {
            unsigned int v46 = *v37;
            *((void *)a2 + 1) = v37 + 1;
          }
          int v38 = *((_DWORD *)a2 + 14);
          int v39 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v38 + 1;
          if (v38 < v39)
          {
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v36, a2, v40, v41))
            {
              if (*((unsigned char *)a2 + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v42 = *((_DWORD *)a2 + 14);
                BOOL v43 = __OFSUB__(v42, 1);
                int v44 = v42 - 1;
                if (v44 < 0 == v43) {
                  *((_DWORD *)a2 + 14) = v44;
                }
                uint64_t v32 = (unsigned __int8 *)*((void *)a2 + 1);
                int v45 = (unsigned __int8 *)*((void *)a2 + 2);
                if ((int)v45 - (int)v32 > 1 && *v32 == 186 && v32[1] == 62)
                {
LABEL_78:
                  *((void *)a2 + 1) = v32 + 2;
                  continue;
                }
                if (v32 == v45 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
    }
  }
}

uint64_t *std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::pair<void const*,int>>>(uint64_t **a1, const void **a2, uint64_t a3)
{
  size_t v5 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__construct_node<std::pair<std::string const,std::pair<void const*,int>>>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *std::__tree<std::string>::__find_equal<std::string>(uint64_t a1, void *a2, const void **a3)
{
  size_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        uint64_t v8 = (void *)v4;
        uint64_t v9 = (const void **)(v4 + 32);
        if (!std::less<std::string>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        size_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, v9, a3)) {
        break;
      }
      size_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *wireless_diagnostics::google::protobuf::FileDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[3];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x21668DB60](v5, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ != v1)
  {
    uint64_t v7 = v1[23];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    this = (void *)v1[24];
    if (this)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v8();
    }
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 40);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 48);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = MEMORY[0x21668DB60](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = *(void *)(v1 + 64);
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    JUMPOUT(0x21668DB60);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  if (*((int *)this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*((void *)this + 11) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
    }
    while (++v2 < *((int *)this + 24));
  }
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)this + 14) + 8 * v4);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) == 0) {
        return 0;
      }
    }
    while (++v4 < *((int *)this + 30));
  }
  if (*((int *)this + 36) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*((void *)this + 17) + 8 * v6);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7) & 1) == 0) {
        return 0;
      }
    }
    while (++v6 < *((int *)this + 36));
  }
  if (*((int *)this + 42) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(*((void *)this + 20) + 8 * v8);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v9 + 40))(v9) & 1) == 0) {
        return 0;
      }
    }
    while (++v8 < *((int *)this + 42));
  }
  if ((*((unsigned char *)this + 205) & 2) == 0) {
    return 1;
  }
  uint64_t v10 = *((void *)this + 23);
  if (!v10) {
    uint64_t v10 = *(void *)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ + 184);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 40))(v10);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*((void *)this + 3) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
    }
    while (++v2 < *((int *)this + 8));
  }
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*((void *)this + 6) + 8 * v4);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) == 0) {
        return 0;
      }
    }
    while (++v4 < *((int *)this + 14));
  }
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*((void *)this + 9) + 8 * v6);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7) & 1) == 0) {
        return 0;
      }
    }
    while (++v6 < *((int *)this + 20));
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(*((void *)this + 12) + 8 * v8);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v9 + 40))(v9) & 1) == 0) {
        return 0;
      }
    }
    while (++v8 < *((int *)this + 26));
  }
  if ((*((unsigned char *)this + 156) & 0x40) == 0) {
    return 1;
  }
  uint64_t v10 = *((void *)this + 18);
  if (!v10) {
    uint64_t v10 = *(void *)(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_ + 144);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 40))(v10);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  if ((*((unsigned char *)this + 72) & 0x80) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 7);
  if (!v1) {
    uint64_t v1 = *(void *)(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_ + 56);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  if (*((int *)this + 8) < 1)
  {
LABEL_5:
    if ((*((unsigned char *)this + 60) & 4) == 0) {
      return 1;
    }
    uint64_t v4 = *((void *)this + 6);
    if (!v4) {
      uint64_t v4 = *(void *)(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_ + 48);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
    if (result) {
      return 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 3) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 8)) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  if ((*((unsigned char *)this + 40) & 4) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 3);
  if (!v1) {
    uint64_t v1 = *(void *)(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_ + 24);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::IsInitialized(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  if (*((int *)this + 16) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 7) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 16)) {
        goto LABEL_5;
      }
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::IsInitialized(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  if (*((int *)this + 20) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 9) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 20)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileDescriptorProto::Clear(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  if (*((unsigned char *)this + 204))
  {
    uint64_t v2 = MEMORY[0x263F8C740];
    if (*((unsigned char *)this + 204))
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 204) & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 3);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
  }
  int v5 = *((_DWORD *)this + 51);
  if ((v5 & 0x1FE00) != 0)
  {
    if ((v5 & 0x200) != 0)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::FileOptions *)*((void *)this + 23);
      if (v6)
      {
        wireless_diagnostics::google::protobuf::FileOptions::Clear(v6);
        int v5 = *((_DWORD *)this + 51);
      }
    }
    if ((v5 & 0x400) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)*((void *)this + 24);
      if (v7) {
        wireless_diagnostics::google::protobuf::SourceCodeInfo::Clear(v7);
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 32);
  *((_DWORD *)this + 16) = 0;
  *((_DWORD *)this + 20) = 0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 88);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 112);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 136);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 160);
  uint64_t v10 = *((void *)this + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 8);
  *((_DWORD *)v9 + 49) = 0;
  if (v10)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      uint64_t v2 = *(void *)(*(void *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + 8) = 0;
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile(wireless_diagnostics::google::protobuf::DescriptorPool *this, const void *a2)
{
  unsigned int v2 = a2;
  __dmb(0xBu);
  if (v4 != 2)
  {
    v5[0] = MEMORY[0x263F8C768] + 16;
    char v6 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v5);
  }
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
}

void sub_2135BE760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::Add(uint64_t **this, const void *a2, unsigned int a3)
{
  wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v10);
  if (wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray((wireless_diagnostics::google::protobuf::MessageLite *)v10, a2))
  {
    uint64_t v6 = std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::string>((uint64_t)(this + 1), v11);
    if (this + 2 != (uint64_t **)v6 && *(void *)(v6 + 56))
    {
      if (*(_DWORD *)(v6 + 64) == a3 && !memcmp(*(const void **)(v6 + 56), a2, (int)a3))
      {
        uint64_t v7 = 1;
        goto LABEL_9;
      }
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    }
    uint64_t v7 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddFile(this + 1, (uint64_t)v10, (uint64_t)a2, a3);
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    uint64_t v7 = 0;
  }
LABEL_9:
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v10);
  return v7;
}

void sub_2135BE8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)va1);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::string>(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = std::less<std::string>::operator()[abi:ne180100](v5, (const void **)(v3 + 32), a2);
    uint64_t v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || std::less<std::string>::operator()[abi:ne180100](v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

void wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(wireless_diagnostics::google::protobuf *this, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(void)::already_here & 1) == 0)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(void)::already_here = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/AWDMetrics_protobuf/google/protobuf/descriptor.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_21361983C, (const void *)0x1027);
    operator new();
  }
}

void sub_2135BEE80(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x21668DB60](v2, 0x10B1C40E36E17E1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::FileDescriptorProto *wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  *(void *)this = &unk_26C3F93F8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_DWORD *)this + 26) = 0;
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v2;
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 23) = 0;
  return this;
}

void sub_2135BF0B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  *(void *)this = &unk_26C3F99F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 24) = 0;
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_2135BF120(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  *(void *)this = &unk_26C3F97D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = v2;
  *((void *)this + 9) = v2;
  *((void *)this + 10) = 0;
  return this;
}

void sub_2135BF190(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::ServiceDescriptorProto *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9720;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_2135BF200(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::MethodDescriptorProto *wireless_diagnostics::google::protobuf::MethodDescriptorProto::MethodDescriptorProto(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9630;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v2;
  *((void *)this + 4) = v2;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_2135BF26C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UninterpretedOption *wireless_diagnostics::google::protobuf::UninterpretedOption::UninterpretedOption(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  *(void *)this = &unk_26C3F94A8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 5) = MEMORY[0x263F8C740];
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = v2;
  *((void *)this + 10) = v2;
  *((void *)this + 11) = 0;
  return this;
}

void sub_2135BF2E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::MergePartialFromCodedStream(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = this;
  uint64_t v6 = (uint64_t *)(this + 72);
  BOOL v7 = (uint64_t *)(this + 56);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 88);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 112);
  v112 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 136);
  v113 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 32);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(this + 160);
  int v11 = (void ***)(this + 8);
LABEL_2:
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)this;
      *((_DWORD *)a2 + 8) = this;
      if (!this) {
        return 1;
      }
    }
    else
    {
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v12;
      *((_DWORD *)a2 + 8) = v13;
      *((void *)a2 + 1) = v12 + 1;
      if (!v13) {
        return 1;
      }
    }
    switch(v13 >> 3)
    {
      case 1u:
        int v14 = v13 & 7;
        if (v14 != 2) {
          goto LABEL_43;
        }
        *(_DWORD *)(v5 + 204) |= 1u;
        if (*(void *)(v5 + 16) == MEMORY[0x263F8C740]) {
          operator new();
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (this)
        {
          unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18)
          {
            *((void *)a2 + 1) = v15 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return this;
      case 2u:
        int v14 = v13 & 7;
        if (v14 != 2) {
          goto LABEL_43;
        }
LABEL_17:
        *(_DWORD *)(v5 + 204) |= 2u;
        if (*(void *)(v5 + 24) == MEMORY[0x263F8C740]) {
          operator new();
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (this)
        {
          unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 26) {
            continue;
          }
          goto LABEL_50;
        }
        return this;
      case 3u:
        int v14 = v13 & 7;
        if (v14 != 2) {
          goto LABEL_43;
        }
        while (1)
        {
          int v20 = *(_DWORD *)(v5 + 44);
          int v21 = *(_DWORD *)(v5 + 40);
          if (v21 >= v20)
          {
            if (v20 == *(_DWORD *)(v5 + 48))
            {
              this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v113);
              int v20 = *(_DWORD *)(v5 + 44);
            }
            *(_DWORD *)(v5 + 44) = v20 + 1;
            uint64_t v22 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)this);
            uint64_t v23 = *(void *)(v5 + 32);
            uint64_t v24 = *(int *)(v5 + 40);
            *(_DWORD *)(v5 + 40) = v24 + 1;
            *(void *)(v23 + 8 * v24) = v22;
          }
          else
          {
            *(_DWORD *)(v5 + 40) = v21 + 1;
          }
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!this) {
            return this;
          }
          unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v25 = *v16;
          if (v25 != 26)
          {
            if (v25 == 34) {
              goto LABEL_105;
            }
            goto LABEL_2;
          }
LABEL_50:
          *((void *)a2 + 1) = v16 + 1;
        }
      case 4u:
        int v14 = v13 & 7;
        if (v14 != 2) {
          goto LABEL_43;
        }
        while (1)
        {
          int v46 = *(_DWORD *)(v5 + 100);
          uint64_t v47 = *(int *)(v5 + 96);
          if ((int)v47 >= v46)
          {
            if (v46 == *(_DWORD *)(v5 + 104))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
              int v46 = *(_DWORD *)(v5 + 100);
            }
            *(_DWORD *)(v5 + 100) = v46 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
          }
          uint64_t v48 = *(void *)(v5 + 88);
          *(_DWORD *)(v5 + 96) = v47 + 1;
          int v49 = *(wireless_diagnostics::google::protobuf::DescriptorProto **)(v48 + 8 * v47);
          unsigned int v114 = 0;
          int v50 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
          }
            }
          else
          {
            unsigned int v114 = *v50;
            *((void *)a2 + 1) = v50 + 1;
          }
          int v51 = *((_DWORD *)a2 + 14);
          int v52 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v51 + 1;
          if (v51 >= v52) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::DescriptorProto::MergePartialFromCodedStream(v49, a2, v53, v54)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v55 = *((_DWORD *)a2 + 14);
          BOOL v56 = __OFSUB__(v55, 1);
          int v57 = v55 - 1;
          if (v57 < 0 == v56) {
            *((_DWORD *)a2 + 14) = v57;
          }
          unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v58 = *v16;
          if (v58 != 34) {
            break;
          }
LABEL_105:
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v58 != 42) {
          continue;
        }
        goto LABEL_123;
      case 5u:
        int v14 = v13 & 7;
        if (v14 != 2) {
          goto LABEL_43;
        }
LABEL_124:
        int v59 = *(_DWORD *)(v5 + 124);
        uint64_t v60 = *(int *)(v5 + 120);
        if ((int)v60 >= v59)
        {
          if (v59 == *(_DWORD *)(v5 + 128))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
            int v59 = *(_DWORD *)(v5 + 124);
          }
          *(_DWORD *)(v5 + 124) = v59 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
        }
        uint64_t v61 = *(void *)(v5 + 112);
        *(_DWORD *)(v5 + 120) = v60 + 1;
        int v62 = *(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v61 + 8 * v60);
        unsigned int v114 = 0;
        int v63 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
        }
          }
        else
        {
          unsigned int v114 = *v63;
          *((void *)a2 + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)a2 + 14);
        int v65 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergePartialFromCodedStream(v62, a2, v66, v67)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v68 = *((_DWORD *)a2 + 14);
        BOOL v56 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v56) {
          *((_DWORD *)a2 + 14) = v69;
        }
        unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2)) {
          continue;
        }
        int v70 = *v16;
        if (v70 == 42)
        {
LABEL_123:
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_124;
        }
        if (v70 != 50) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v16 + 1;
LABEL_142:
          int v71 = *(_DWORD *)(v5 + 148);
          uint64_t v72 = *(int *)(v5 + 144);
          if ((int)v72 >= v71)
          {
            if (v71 == *(_DWORD *)(v5 + 152))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v112);
              int v71 = *(_DWORD *)(v5 + 148);
            }
            *(_DWORD *)(v5 + 148) = v71 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::ServiceDescriptorProto>::New();
          }
          uint64_t v73 = *(void *)(v5 + 136);
          *(_DWORD *)(v5 + 144) = v72 + 1;
          int v74 = *(wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(v73 + 8 * v72);
          unsigned int v114 = 0;
          int v75 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v75 >= *((void *)a2 + 2) || *v75 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
          }
            }
          else
          {
            unsigned int v114 = *v75;
            *((void *)a2 + 1) = v75 + 1;
          }
          int v76 = *((_DWORD *)a2 + 14);
          int v77 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v76 + 1;
          if (v76 >= v77) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergePartialFromCodedStream(v74, a2, v78, v79)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v80 = *((_DWORD *)a2 + 14);
          BOOL v56 = __OFSUB__(v80, 1);
          int v81 = v80 - 1;
          if (v81 < 0 == v56) {
            *((_DWORD *)a2 + 14) = v81;
          }
          unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v82 = *v16;
          if (v82 != 50)
          {
            if (v82 == 58)
            {
              while (1)
              {
                *((void *)a2 + 1) = v16 + 1;
LABEL_160:
                int v83 = *(_DWORD *)(v5 + 172);
                uint64_t v84 = *(int *)(v5 + 168);
                if ((int)v84 >= v83)
                {
                  if (v83 == *(_DWORD *)(v5 + 176))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10);
                    int v83 = *(_DWORD *)(v5 + 172);
                  }
                  *(_DWORD *)(v5 + 172) = v83 + 1;
                  wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
                }
                uint64_t v85 = *(void *)(v5 + 160);
                *(_DWORD *)(v5 + 168) = v84 + 1;
                v86 = *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v85 + 8 * v84);
                unsigned int v114 = 0;
                v87 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v87 >= *((void *)a2 + 2) || *v87 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
                }
                  }
                else
                {
                  unsigned int v114 = *v87;
                  *((void *)a2 + 1) = v87 + 1;
                }
                int v88 = *((_DWORD *)a2 + 14);
                int v89 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v88 + 1;
                if (v88 >= v89) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergePartialFromCodedStream(v86, a2, v90, v91)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v92 = *((_DWORD *)a2 + 14);
                BOOL v56 = __OFSUB__(v92, 1);
                int v93 = v92 - 1;
                if (v93 < 0 == v56) {
                  *((_DWORD *)a2 + 14) = v93;
                }
                unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v16 >= *((void *)a2 + 2)) {
                  break;
                }
                int v94 = *v16;
                if (v94 != 58)
                {
                  if (v94 == 66)
                  {
                    *((void *)a2 + 1) = v16 + 1;
LABEL_178:
                    *(_DWORD *)(v5 + 204) |= 0x200u;
                    v95 = *(wireless_diagnostics::google::protobuf::FileOptions **)(v5 + 184);
                    if (!v95) {
                      operator new();
                    }
                    unsigned int v114 = 0;
                    v96 = (char *)*((void *)a2 + 1);
                    if ((unint64_t)v96 >= *((void *)a2 + 2) || *v96 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
                    }
                      }
                    else
                    {
                      unsigned int v114 = *v96;
                      *((void *)a2 + 1) = v96 + 1;
                    }
                    int v97 = *((_DWORD *)a2 + 14);
                    int v98 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v97 + 1;
                    if (v97 >= v98) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!wireless_diagnostics::google::protobuf::FileOptions::MergePartialFromCodedStream(v95, a2, v99, v100)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v101 = *((_DWORD *)a2 + 14);
                    BOOL v56 = __OFSUB__(v101, 1);
                    int v102 = v101 - 1;
                    if (v102 < 0 == v56) {
                      *((_DWORD *)a2 + 14) = v102;
                    }
                    v103 = (unsigned char *)*((void *)a2 + 1);
                    if ((unint64_t)v103 < *((void *)a2 + 2) && *v103 == 74)
                    {
                      *((void *)a2 + 1) = v103 + 1;
LABEL_192:
                      *(_DWORD *)(v5 + 204) |= 0x400u;
                      v104 = *(wireless_diagnostics::google::protobuf::SourceCodeInfo **)(v5 + 192);
                      if (!v104) {
                        operator new();
                      }
                      unsigned int v114 = 0;
                      v105 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v105 >= *((void *)a2 + 2) || *v105 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114))return 0; {
                      }
                        }
                      else
                      {
                        unsigned int v114 = *v105;
                        *((void *)a2 + 1) = v105 + 1;
                      }
                      int v106 = *((_DWORD *)a2 + 14);
                      int v107 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v106 + 1;
                      if (v106 >= v107) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!wireless_diagnostics::google::protobuf::SourceCodeInfo::MergePartialFromCodedStream(v104, a2, v108, v109)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      this = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v110 = *((_DWORD *)a2 + 14);
                      BOOL v56 = __OFSUB__(v110, 1);
                      int v111 = v110 - 1;
                      if (v111 < 0 == v56) {
                        *((_DWORD *)a2 + 14) = v111;
                      }
                      uint64_t v35 = (char *)*((void *)a2 + 1);
                      int v17 = (char *)*((void *)a2 + 2);
                      if (v35 < v17)
                      {
                        int v36 = *v35;
                        goto LABEL_205;
                      }
                    }
                  }
                  goto LABEL_2;
                }
              }
            }
            goto LABEL_2;
          }
        }
      case 6u:
        int v14 = v13 & 7;
        if (v14 == 2) {
          goto LABEL_142;
        }
        goto LABEL_43;
      case 7u:
        int v14 = v13 & 7;
        if (v14 == 2) {
          goto LABEL_160;
        }
        goto LABEL_43;
      case 8u:
        int v14 = v13 & 7;
        if (v14 == 2) {
          goto LABEL_178;
        }
        goto LABEL_43;
      case 9u:
        int v14 = v13 & 7;
        if (v14 == 2) {
          goto LABEL_192;
        }
        goto LABEL_43;
      case 0xAu:
        int v14 = v13 & 7;
        if (v14 != 2)
        {
          if ((v13 & 7) == 0)
          {
            unsigned int v18 = (char *)*((void *)a2 + 1);
            int v17 = (char *)*((void *)a2 + 2);
            goto LABEL_61;
          }
          goto LABEL_43;
        }
        this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v7);
        if (!this) {
          return this;
        }
        while (1)
        {
          uint64_t v35 = (char *)*((void *)a2 + 1);
          int v17 = (char *)*((void *)a2 + 2);
          if (v35 >= v17) {
            goto LABEL_2;
          }
          int v36 = *v35;
          if (v36 == 88) {
            goto LABEL_100;
          }
LABEL_205:
          if (v36 != 80) {
            goto LABEL_2;
          }
          unsigned int v18 = v35 + 1;
          *((void *)a2 + 1) = v18;
LABEL_61:
          unsigned int v114 = 0;
          if (v18 >= v17 || *v18 < 0)
          {
            this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114);
            if (!this) {
              return this;
            }
            unsigned int v26 = v114;
          }
          else
          {
            unsigned int v26 = *v18;
            *((void *)a2 + 1) = v18 + 1;
          }
          int v27 = *(_DWORD *)(v5 + 64);
          if (v27 == *(_DWORD *)(v5 + 68))
          {
            this = wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v7, v27 + 1);
            int v27 = *(_DWORD *)(v5 + 64);
          }
          uint64_t v28 = *(void *)(v5 + 56);
          *(_DWORD *)(v5 + 64) = v27 + 1;
          *(_DWORD *)(v28 + 4 * v27) = v26;
          int v29 = *(_DWORD *)(v5 + 68) - *(_DWORD *)(v5 + 64);
          if (v29 >= 1)
          {
            int v30 = v29 + 1;
            do
            {
              unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v32 = *((void *)a2 + 2);
              if ((unint64_t)v31 >= v32 || *v31 != 80) {
                break;
              }
              *((void *)a2 + 1) = v31 + 1;
              unsigned int v114 = 0;
              if ((unint64_t)(v31 + 1) >= v32 || (char)v31[1] < 0)
              {
                this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114);
                if (!this) {
                  return this;
                }
                unsigned int v33 = v114;
                uint64_t v28 = *v7;
              }
              else
              {
                unsigned int v33 = v31[1];
                *((void *)a2 + 1) = v31 + 2;
              }
              uint64_t v34 = *(int *)(v5 + 64);
              *(_DWORD *)(v5 + 64) = v34 + 1;
              *(_DWORD *)(v28 + 4 * v34) = v33;
              --v30;
            }
            while (v30 > 1);
          }
        }
      case 0xBu:
        int v14 = v13 & 7;
        if (v14 == 2)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(a2, (uint64_t)v6);
          if (!this) {
            return this;
          }
          while (1)
          {
            uint64_t v35 = (char *)*((void *)a2 + 1);
            int v17 = (char *)*((void *)a2 + 2);
            if (v35 >= v17 || *v35 != 88) {
              break;
            }
LABEL_100:
            int v19 = v35 + 1;
            *((void *)a2 + 1) = v19;
LABEL_81:
            unsigned int v114 = 0;
            if (v19 >= v17 || *v19 < 0)
            {
              this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114);
              if (!this) {
                return this;
              }
              unsigned int v37 = v114;
            }
            else
            {
              unsigned int v37 = *v19;
              *((void *)a2 + 1) = v19 + 1;
            }
            int v38 = *(_DWORD *)(v5 + 80);
            if (v38 == *(_DWORD *)(v5 + 84))
            {
              this = wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v6, v38 + 1);
              int v38 = *(_DWORD *)(v5 + 80);
            }
            uint64_t v39 = *(void *)(v5 + 72);
            *(_DWORD *)(v5 + 80) = v38 + 1;
            *(_DWORD *)(v39 + 4 * v38) = v37;
            int v40 = *(_DWORD *)(v5 + 84) - *(_DWORD *)(v5 + 80);
            if (v40 >= 1)
            {
              int v41 = v40 + 1;
              do
              {
                int v42 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v43 = *((void *)a2 + 2);
                if ((unint64_t)v42 >= v43 || *v42 != 88) {
                  break;
                }
                *((void *)a2 + 1) = v42 + 1;
                unsigned int v114 = 0;
                if ((unint64_t)(v42 + 1) >= v43 || (char)v42[1] < 0)
                {
                  this = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v114);
                  if (!this) {
                    return this;
                  }
                  unsigned int v44 = v114;
                  uint64_t v39 = *v6;
                }
                else
                {
                  unsigned int v44 = v42[1];
                  *((void *)a2 + 1) = v42 + 2;
                }
                uint64_t v45 = *(int *)(v5 + 80);
                *(_DWORD *)(v5 + 80) = v45 + 1;
                *(_DWORD *)(v39 + 4 * v45) = v44;
                --v41;
              }
              while (v41 > 1);
            }
          }
          if (v35 == v17 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            this = 1;
            *((unsigned char *)a2 + 36) = 1;
            return this;
          }
          continue;
        }
        if ((v13 & 7) == 0)
        {
          int v19 = (char *)*((void *)a2 + 1);
          int v17 = (char *)*((void *)a2 + 2);
          goto LABEL_81;
        }
LABEL_43:
        if (v14 != 4)
        {
          this = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, v13, v11, a4);
          if ((this & 1) == 0) {
            return 0;
          }
          continue;
        }
        return 1;
      default:
        int v14 = v13 & 7;
        goto LABEL_43;
    }
  }
}

void sub_2135BFF2C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New()
{
}

void sub_2135BFFA4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4073756666);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::DescriptorProto *wireless_diagnostics::google::protobuf::DescriptorProto::DescriptorProto(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  *(void *)this = &unk_26C3F90D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  return this;
}

void sub_2135C0044(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::FileOptions *wireless_diagnostics::google::protobuf::FileOptions::FileOptions(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  *(void *)this = &unk_26C3F8B58;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v2 = MEMORY[0x263F8C740];
  *((void *)this + 5) = MEMORY[0x263F8C740];
  *((void *)this + 6) = v2;
  *((void *)this + 7) = 1;
  *((void *)this + 8) = v2;
  *((unsigned char *)this + 96) = 0;
  *((_DWORD *)this + 25) = 0;
  *((_DWORD *)this + 26) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::FileDescriptorSet *wireless_diagnostics::google::protobuf::FileDescriptorSet::FileDescriptorSet(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  *(void *)this = &unk_26C3F9258;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_2135C0150(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::EnumValueOptions *wireless_diagnostics::google::protobuf::EnumValueOptions::EnumValueOptions(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  *(void *)this = &unk_26C3F9180;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::SourceCodeInfo *wireless_diagnostics::google::protobuf::SourceCodeInfo::SourceCodeInfo(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  *(void *)this = &unk_26C3F9020;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_2135C0240(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::ServiceOptions *wireless_diagnostics::google::protobuf::ServiceOptions::ServiceOptions(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  *(void *)this = &unk_26C3F8F70;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::MessageOptions *wireless_diagnostics::google::protobuf::MessageOptions::MessageOptions(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  *(void *)this = &unk_26C3F8EC0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

void wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *a1, void *a2)
{
  __p[0] = a1;
  __p[1] = a2;
  std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,wireless_diagnostics::google::protobuf::FileDescriptor const*>>(v4 + 8, (const char **)__p, __p);
  if ((v5 & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, (char *)a1);
    ((void (*)(void **))a2)(__p);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_2135C03DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,wireless_diagnostics::google::protobuf::FileDescriptor const*>>(uint64_t a1, const char **a2, _OWORD *a3)
{
  uint64_t v6 = *a2;
  char v7 = **a2;
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      unint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
  }
  else
  {
    unint64_t v8 = 0;
  }
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v11) {
        unint64_t v3 = v8 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v8;
    }
    int v14 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v8)
        {
          if (!strcmp(*((const char **)i + 2), v6)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v8;
  *((_OWORD *)i + 1) = *a3;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11) {
        unint64_t v3 = v8 % v11;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_43:
    *uint64_t v24 = i;
    goto LABEL_44;
  }
  *(void *)uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v25 >= v11) {
        v25 %= v11;
      }
    }
    else
    {
      v25 &= v11 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_2135C063C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            *unint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          unint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    int v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

wireless_diagnostics::google::protobuf::MethodOptions *wireless_diagnostics::google::protobuf::MethodOptions::MethodOptions(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  *(void *)this = &unk_26C3F8D10;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::anonymous namespace'::GeneratedMessageFactory::singleton(wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135C09B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::FileOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (void ***)((char *)this + 32);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 72);
  unint64_t v8 = (wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8);
  uint64_t v9 = MEMORY[0x263F8C740];
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
        *((_DWORD *)this + 26) |= 1u;
        if (*((void *)this + 5) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 66)
          {
            *((void *)a2 + 1) = v14 + 1;
            goto LABEL_20;
          }
          continue;
        }
        return result;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x13u:
        goto LABEL_18;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
LABEL_20:
        *((_DWORD *)this + 26) |= 2u;
        if (*((void *)this + 6) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 72) {
          continue;
        }
        float v17 = v16 + 1;
        *((void *)a2 + 1) = v17;
LABEL_28:
        unsigned int v52 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          signed int v18 = v52;
        }
        else
        {
          signed int v18 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if ((v18 - 1) > 2)
        {
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 9, v18);
        }
        else
        {
          *((_DWORD *)this + 26) |= 0x10u;
          *((_DWORD *)this + 14) = v18;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v19 || *v27 != 80) {
          continue;
        }
        unint64_t v20 = v27 + 1;
        *((void *)a2 + 1) = v20;
LABEL_57:
        unsigned int v52 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v28 = v52;
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v20;
          int v29 = v20 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 60) = v28 != 0;
        int v21 = *((_DWORD *)this + 26) | 4;
        *((_DWORD *)this + 26) = v21;
        if ((unint64_t)v29 >= v19 || *v29 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_65:
        *((_DWORD *)this + 26) = v21 | 0x20;
        if (*((void *)this + 8) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        if ((int)v22 - (int)v30 < 2 || *v30 != 128 || v30[1] != 1) {
          continue;
        }
        uint64_t v23 = v30 + 2;
        *((void *)a2 + 1) = v23;
LABEL_72:
        unsigned int v52 = 0;
        if ((unint64_t)v23 >= v22 || (char)*v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v31 = v52;
          unint64_t v32 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v31 = *v23;
          unint64_t v32 = v23 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((unsigned char *)this + 62) = v31 != 0;
        *((_DWORD *)this + 26) |= 0x40u;
        if ((int)v22 - (int)v32 < 2 || *v32 != 136 || v32[1] != 1) {
          continue;
        }
        uint64_t v24 = v32 + 2;
        *((void *)a2 + 1) = v24;
LABEL_81:
        unsigned int v52 = 0;
        if ((unint64_t)v24 >= v22 || (char)*v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v33 = v52;
          uint64_t v34 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v24;
          uint64_t v34 = v24 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((unsigned char *)this + 63) = v33 != 0;
        *((_DWORD *)this + 26) |= 0x80u;
        if ((int)v22 - (int)v34 < 2 || *v34 != 144 || v34[1] != 1) {
          continue;
        }
        unint64_t v25 = v34 + 2;
        *((void *)a2 + 1) = v25;
LABEL_90:
        unsigned int v52 = 0;
        if ((unint64_t)v25 >= v22 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v35 = v52;
          int v36 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v25;
          int v36 = v25 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((unsigned char *)this + 96) = v35 != 0;
        *((_DWORD *)this + 26) |= 0x100u;
        if ((int)v22 - (int)v36 < 2 || *v36 != 160 || v36[1] != 1) {
          continue;
        }
        unsigned int v26 = v36 + 2;
        *((void *)a2 + 1) = v26;
LABEL_99:
        unsigned int v52 = 0;
        if ((unint64_t)v26 >= v22 || (char)*v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
          if (!result) {
            return result;
          }
          unsigned int v37 = v52;
          int v38 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v37 = *v26;
          int v38 = v26 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((unsigned char *)this + 61) = v37 != 0;
        *((_DWORD *)this + 26) |= 8u;
        if ((int)v22 - (int)v38 >= 2 && *v38 == 186 && v38[1] == 62) {
          goto LABEL_107;
        }
        continue;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        float v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_28;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unint64_t v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_57;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
        int v21 = *((_DWORD *)this + 26);
        goto LABEL_65;
      case 0x10u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v23 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_72;
      case 0x11u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v24 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_81;
      case 0x12u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unint64_t v25 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_90;
      case 0x14u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v26 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_99;
      default:
        if (TagFallback >> 3 != 999)
        {
LABEL_18:
          int v12 = TagFallback & 7;
LABEL_42:
          if (v12 == 4) {
            return 1;
          }
          if (TagFallback >> 6 < 0x7D)
          {
            if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
          }
            }
          else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::FileOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v6) & 1) == 0)
          {
            return 0;
          }
          continue;
        }
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
        while (2)
        {
          int v39 = *((_DWORD *)this + 21);
          uint64_t v40 = *((int *)this + 20);
          if ((int)v40 >= v39)
          {
            if (v39 == *((_DWORD *)this + 22))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              int v39 = *((_DWORD *)this + 21);
            }
            *((_DWORD *)this + 21) = v39 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
          }
          uint64_t v41 = *((void *)this + 9);
          *((_DWORD *)this + 20) = v40 + 1;
          int v42 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v41 + 8 * v40);
          unsigned int v52 = 0;
          unint64_t v43 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0; {
          }
            }
          else
          {
            unsigned int v52 = *v43;
            *((void *)a2 + 1) = v43 + 1;
          }
          int v44 = *((_DWORD *)a2 + 14);
          int v45 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v44 + 1;
          if (v44 < v45)
          {
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v42, a2, v46, v47))
            {
              if (*((unsigned char *)a2 + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v48 = *((_DWORD *)a2 + 14);
                BOOL v49 = __OFSUB__(v48, 1);
                int v50 = v48 - 1;
                if (v50 < 0 == v49) {
                  *((_DWORD *)a2 + 14) = v50;
                }
                int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                int v51 = (unsigned __int8 *)*((void *)a2 + 2);
                if ((int)v51 - (int)v38 > 1 && *v38 == 186 && v38[1] == 62)
                {
LABEL_107:
                  *((void *)a2 + 1) = v38 + 2;
                  continue;
                }
                if (v38 == v51 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
    }
  }
}

wireless_diagnostics::google::protobuf::EnumOptions *wireless_diagnostics::google::protobuf::EnumOptions::EnumOptions(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  *(void *)this = &unk_26C3F8AA8;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((unsigned char *)this + 64) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

uint64_t _GLOBAL__sub_I_descriptor_cc()
{
  qword_26AA45B98 = 0;
  qword_26AA45BA0 = 0;
  qword_26AA45BB0 = 0;
  wireless_diagnostics::google::protobuf::FileDescriptorTables::kEmpty = 0u;
  unk_26AA45C80 = 0u;
  dword_26AA45C90 = 1065353216;
  unk_26AA45C98 = 0u;
  unk_26AA45CA8 = 0u;
  dword_26AA45CB8 = 1065353216;
  xmmword_26AA45CC0 = 0u;
  unk_26AA45CD0 = 0u;
  dword_26AA45CE0 = 1065353216;
  unk_26AA45CE8 = 0u;
  unk_26AA45CF8 = 0u;
  dword_26AA45D08 = 1065353216;
  xmmword_26AA45D10 = 0u;
  unk_26AA45D20 = 0u;
  dword_26AA45D30 = 1065353216;

  return __cxa_atexit((void (*)(void *))wireless_diagnostics::google::protobuf::FileDescriptorTables::~FileDescriptorTables, &wireless_diagnostics::google::protobuf::FileDescriptorTables::kEmpty, &dword_2135B9000);
}

void wireless_diagnostics::google::protobuf::anonymous namespace'::InitGeneratedMessageFactory(wireless_diagnostics::google::protobuf::_anonymous_namespace_ *this)
{
}

void sub_2135C133C(_Unwind_Exception *a1)
{
  std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table(v2);
  MEMORY[0x21668DB60](v1, 0x10A1C40E48A8396);
  _Unwind_Resume(a1);
}

unsigned __int8 *wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, int a2, int a3, unsigned __int8 *a4)
{
  unint64_t v5 = (char *)this + 8;
  char v4 = (char *)*((void *)this + 1);
  if (v4)
  {
    uint64_t v7 = (char *)this + 8;
    do
    {
      int v8 = *((_DWORD *)v4 + 8);
      BOOL v9 = v8 < a2;
      if (v8 >= a2) {
        int v10 = (char **)v4;
      }
      else {
        int v10 = (char **)(v4 + 8);
      }
      if (!v9) {
        uint64_t v7 = v4;
      }
      char v4 = *v10;
    }
    while (*v10);
    if (v7 != v5)
    {
      do
      {
        int v11 = *((_DWORD *)v7 + 8);
        if (v11 >= a3) {
          break;
        }
        a4 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeFieldWithCachedSizesToArray((wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension *)(v7 + 40), v11, a4, a4);
        int v12 = (char *)*((void *)v7 + 1);
        if (v12)
        {
          do
          {
            unint64_t v13 = v12;
            int v12 = *(char **)v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            unint64_t v13 = (char *)*((void *)v7 + 2);
            BOOL v14 = *(void *)v13 == (void)v7;
            uint64_t v7 = v13;
          }
          while (!v14);
        }
        uint64_t v7 = v13;
      }
      while (v13 != v5);
    }
  }
  return a4;
}

void wireless_diagnostics::google::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, long long a10, uint64_t a11)
{
  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((void *)&v11 + 1) = a10;
  *(void *)&long long v11 = a8;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v11, *((uint64_t *)&a10 + 1), a11);
}

void sub_2135C1488(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v29 = a3;
  v30[0] = a4;
  v30[1] = a5;
  v30[2] = a6;
  v30[3] = a7;
  v30[4] = a8;
  long long v31 = a9;
  uint64_t v32 = a10;
  uint64_t v33 = a11;
  uint64_t v34 = 0;
  int v11 = *a2;
  if (!*a2) {
    return;
  }
  uint64_t v12 = a3;
  BOOL v14 = this;
  int v15 = 0;
  LODWORD(v16) = 0;
  do
  {
    if (v11 != 36) {
      goto LABEL_8;
    }
    uint64_t v16 = (int)v16 + 1;
    int v17 = a2[v16];
    if ((v17 - 48) > 9)
    {
      if (v17 != 36)
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        std::string::basic_string[abi:ne180100]<0>(v28, a2);
        wireless_diagnostics::google::protobuf::CEscape();
      }
LABEL_8:
      ++v15;
      goto LABEL_9;
    }
    int v18 = *(_DWORD *)(v30[(v17 - 48) - 1] + 8);
    if (v18 == -1)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      uint64_t v20 = 0;
      do
      {
        if (*(_DWORD *)(v12 + 8) == -1) {
          break;
        }
        uint64_t v12 = v30[v20++];
      }
      while (v12);
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      std::string::basic_string[abi:ne180100]<0>(v28, a2);
      wireless_diagnostics::google::protobuf::CEscape();
    }
    v15 += v18;
LABEL_9:
    uint64_t v16 = (int)v16 + 1;
    int v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    std::string::resize(this, v15 + (int)size, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_) {
        goto LABEL_24;
      }
      BOOL v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v14->__r_.__value_.__s + 23))
    {
LABEL_24:
      BOOL v14 = 0;
    }
    int v21 = 0;
    unint64_t v22 = (char *)v14 + (int)size;
    while (2)
    {
      int v23 = a2[v21];
      if (v23 == 36)
      {
        uint64_t v24 = v21 + 1;
        uint64_t v25 = a2[v24];
        if ((v25 - 48) > 9)
        {
          if (v25 != 36) {
            goto LABEL_29;
          }
          *v22++ = 36;
        }
        else
        {
          unsigned int v26 = (const void ***)&v30[v25 - 49];
          int v27 = *v26;
          memcpy(v22, **v26, *((int *)*v26 + 2));
          v22 += *((int *)v27 + 2);
        }
      }
      else
      {
        if (!a2[v21]) {
          return;
        }
        *v22++ = v23;
LABEL_29:
        LODWORD(v24) = v21;
      }
      int v21 = v24 + 1;
      continue;
    }
  }
}

void sub_2135C17C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a23);
  _Unwind_Resume(a1);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2641B07D0, MEMORY[0x263F8C060]);
}

void sub_2135C193C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::UTF8GenericScan(unsigned int *a1, unsigned char *a2, int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 241;
  }
  unint64_t v4 = (unint64_t)&a2[a3];
  unint64_t v5 = v4 - 7;
  uint64_t v6 = *((void *)a1 + 4) + *a1;
  uint64_t v7 = *((void *)a1 + 7);
  uint64_t v8 = a2;
  while (2)
  {
    uint64_t v9 = v8 & 7;
    if ((v8 & 7) != 0 && (unint64_t)v8 < v4)
    {
      char v10 = (_BYTE)v8 + 1;
      while (!*(unsigned char *)(v7 + *v8))
      {
        ++v8;
        uint64_t v9 = v10 & 7;
        if ((v10 & 7) != 0)
        {
          ++v10;
          if ((unint64_t)v8 < v4) {
            continue;
          }
        }
        goto LABEL_9;
      }
LABEL_17:
      int v11 = v8;
      goto LABEL_18;
    }
LABEL_9:
    if (v9 || (unint64_t)v8 >= v5) {
      goto LABEL_17;
    }
    int v11 = v8 + 4;
    while (1)
    {
      unint64_t v12 = *(v11 - 1);
      if ((((v12 - a1[6]) | (v12 + a1[7]) | (*v11 - a1[6]) | (*v11 + a1[7])) & 0x80808080) != 0) {
        break;
      }
LABEL_15:
      unint64_t v13 = v11 + 2;
      BOOL v14 = v11 + 1;
      v11 += 2;
      if ((unint64_t)v14 >= v5)
      {
        int v11 = v13 - 1;
        goto LABEL_18;
      }
    }
    if (!(*(unsigned __int8 *)(v7 + BYTE1(v12)) | *(unsigned __int8 *)(v7 + v12) | *(unsigned __int8 *)(v7 + BYTE2(v12)) | *(unsigned __int8 *)(v7 + (v12 >> 24))))
    {
      if (*(unsigned __int8 *)(v7 + BYTE1(*v11)) | *(unsigned __int8 *)(v7 + *v11) | *(unsigned __int8 *)(v7 + BYTE2(*v11)) | *(unsigned __int8 *)(v7 + ((unint64_t)*v11 >> 24))) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
    --v11;
LABEL_18:
    if ((unint64_t)v11 < v4)
    {
      unint64_t v15 = v4 - (void)v11;
      uint64_t v16 = (char *)v11 - 1;
      uint64_t v17 = *((void *)a1 + 4) + *a1;
      uint64_t v8 = v11;
      while (1)
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + *v8);
        if (v18 > 0xEF) {
          break;
        }
        ++v8;
        uint64_t v17 = v6 + (int)(v18 << a1[4]);
        ++v16;
        if (!--v15)
        {
          LODWORD(v8) = v4;
          goto LABEL_29;
        }
      }
      if (a1[1] <= (int)v17 - (int)v6)
      {
        do
        {
          uint64_t v8 = v16;
          if (v16 <= a2) {
            break;
          }
          --v16;
        }
        while ((*v8 & 0xC0) == 0x80);
      }
      if (v18 != 253) {
        goto LABEL_39;
      }
      continue;
    }
    break;
  }
  LODWORD(v8) = v11;
  LODWORD(v17) = a1[8] + *a1;
LABEL_29:
  if (a1[1] <= (int)v17 - (int)v6)
  {
    if ((unint64_t)v11 <= v4) {
      unint64_t v19 = (_DWORD *)v4;
    }
    else {
      unint64_t v19 = v11;
    }
    uint64_t v20 = (char *)v19 - 1;
    do
    {
      uint64_t v8 = v20;
      if (v20 <= a2) {
        break;
      }
      --v20;
    }
    while ((*v8 & 0xC0) == 0x80);
    uint64_t v18 = 240;
  }
  else
  {
    uint64_t v18 = 241;
  }
LABEL_39:
  *a4 = v8 - a2;
  return v18;
}

uint64_t wireless_diagnostics::google::protobuf::internal::UTF8GenericScanFastAscii(unsigned int *a1, unint64_t a2, int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 241;
  }
  unint64_t v8 = a2 + a3;
  int v14 = 0;
  unint64_t v9 = a2;
  do
  {
    unint64_t v10 = v9 & 7;
    if ((v9 & 7) != 0 && v9 < v8)
    {
      char v11 = v9 + 1;
      while ((*(char *)v9 & 0x80000000) == 0)
      {
        ++v9;
        unint64_t v10 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          ++v11;
          if (v9 < v8) {
            continue;
          }
        }
        goto LABEL_9;
      }
    }
    else
    {
LABEL_9:
      if (!v10)
      {
        while (v9 < v8 - 7 && ((*(_DWORD *)(v9 + 4) | *(_DWORD *)v9) & 0x80808080) == 0)
          v9 += 8;
      }
    }
    if (v9 < v8)
    {
      unint64_t v12 = v8 - v9;
      while ((*(char *)v9 & 0x80000000) == 0)
      {
        ++v9;
        if (!--v12)
        {
          unint64_t v9 = v8;
          break;
        }
      }
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::UTF8GenericScan(a1, (unsigned char *)(a2 + (int)v9 - (int)a2), a3 - ((int)v9 - (int)a2), &v14);
    v9 += v14;
  }
  while (result == 253);
  *a4 = v9 - a2;
  return result;
}

BOOL wireless_diagnostics::google::protobuf::internal::IsStructurallyValidUTF8(wireless_diagnostics::google::protobuf::internal *this, const char *a2)
{
  int v2 = (int)a2;
  int v4 = 0;
  wireless_diagnostics::google::protobuf::internal::UTF8GenericScanFastAscii(wireless_diagnostics::google::protobuf::internal::utf8acceptnonsurrogates_obj, (unint64_t)this, (int)a2, &v4);
  return v4 == v2;
}

BOOL wireless_diagnostics::google::protobuf::Message::DebugString@<W0>(wireless_diagnostics::google::protobuf::Message *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *(int *)((char *)v3 + 3) = 0;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintToString(v3, this, (uint64_t)a2);
}

void sub_2135C1D50(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::PrintToString(const wireless_diagnostics::google::protobuf::Message *a1, uint64_t a2)
{
  *(int *)((char *)v3 + 3) = 0;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintToString(v3, a1, a2);
}

void wireless_diagnostics::google::protobuf::Message::ShortDebugString(wireless_diagnostics::google::protobuf::Message *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  __int16 v8 = 0;
  int v6 = 0;
  char v7 = 1;
  wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintToString(&v6, this, a2);
  uint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (!v4) {
      return;
    }
  }
  else
  {
    if (!*(unsigned char *)(a2 + 23)) {
      return;
    }
    uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  }
  uint64_t v5 = v4 - 1;
  if ((v3 & 0x80) != 0)
  {
    if (*(unsigned char *)(*(void *)a2 + v5) != 32) {
      return;
    }
    uint64_t v3 = *(void *)(a2 + 8);
    goto LABEL_10;
  }
  if (*(unsigned char *)(a2 + v5) == 32) {
LABEL_10:
  }
    std::string::resize((std::string *)a2, v3 - 1, 0);
}

void sub_2135C1E4C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *wireless_diagnostics::google::protobuf::TextFormat::Printer::Printer(_DWORD *this)
{
  *(_DWORD *)((char *)this + 3) = 0;
  *this = 0;
  return this;
}

{
  *(_DWORD *)((char *)this + 3) = 0;
  *this = 0;
  return this;
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintToString(int *a1, const wireless_diagnostics::google::protobuf::Message *a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream();
  BOOL v5 = wireless_diagnostics::google::protobuf::TextFormat::Printer::Print(a1, a2, (uint64_t)v7);
  MEMORY[0x21668D2A0](v7);
  return v5;
}

BOOL wireless_diagnostics::google::protobuf::Message::Utf8DebugString@<W0>(wireless_diagnostics::google::protobuf::Message *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  *(int *)((char *)v3 + 3) = 0x1000000;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintToString(v3, this, (uint64_t)a2);
}

void sub_2135C1F54(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::Message::PrintDebugString(wireless_diagnostics::google::protobuf::Message *this)
{
  wireless_diagnostics::google::protobuf::Message::DebugString(this, __p);
  if (v3 >= 0) {
    uint64_t v1 = __p;
  }
  else {
    uint64_t v1 = (void **)__p[0];
  }
  printf("%s", (const char *)v1);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void *wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::ParseInfoTree(void *this)
{
  this[1] = 0;
  *this = this + 1;
  this[5] = 0;
  this[4] = 0;
  this[2] = 0;
  this[3] = this + 4;
  return this;
}

{
  this[1] = 0;
  *this = this + 1;
  this[5] = 0;
  this[4] = 0;
  this[2] = 0;
  this[3] = this + 4;
  return this;
}

void wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::~ParseInfoTree(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *this)
{
  int v2 = (char *)this + 24;
  char v3 = (char *)*((void *)this + 3);
  uint64_t v4 = (char *)this + 32;
  if (v3 != (char *)this + 32)
  {
    do
    {
      wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **>>(*((wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **)v3 + 5), *((wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **)v3 + 6));
      *((void *)v3 + 6) = *((void *)v3 + 5);
      BOOL v5 = (char *)*((void *)v3 + 1);
      if (v5)
      {
        do
        {
          int v6 = v5;
          BOOL v5 = *(char **)v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (char *)*((void *)v3 + 2);
          BOOL v7 = *(void *)v6 == (void)v3;
          char v3 = v6;
        }
        while (!v7);
      }
      char v3 = v6;
    }
    while (v6 != v4);
  }
  std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::destroy((uint64_t)v2, *((void **)this + 4));
  std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::destroy((uint64_t)this, *((void **)this + 1));
}

void __clang_call_terminate(void *a1)
{
}

void wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::RecordLocation(uint64_t **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v19 = a2;
  uint64_t v20 = &v19;
  uint64_t v4 = std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::piecewise_construct_t const&,std::tuple<wireless_diagnostics::google::protobuf::FieldDescriptor const* const&>,std::tuple<>>(a1, &v19, (uint64_t)&std::piecewise_construct, (uint64_t **)&v20);
  BOOL v5 = (void *)v4[6];
  unint64_t v6 = v4[7];
  if ((unint64_t)v5 >= v6)
  {
    uint64_t v8 = v4[5];
    uint64_t v9 = ((uint64_t)v5 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v6 - v8;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      unint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(v4 + 7), v12);
    }
    else {
      unint64_t v13 = 0;
    }
    int v14 = &v13[8 * v9];
    unint64_t v15 = &v13[8 * v12];
    *(void *)int v14 = a3;
    BOOL v7 = v14 + 8;
    uint64_t v17 = (char *)v4[5];
    uint64_t v16 = (char *)v4[6];
    if (v16 != v17)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      uint64_t v16 = (char *)v4[5];
    }
    v4[5] = (uint64_t)v14;
    v4[6] = (uint64_t)v7;
    v4[7] = (uint64_t)v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *BOOL v5 = a3;
    BOOL v7 = v5 + 1;
  }
  v4[6] = (uint64_t)v7;
}

void wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::CreateNested(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2)
{
  int v2 = a2;
  operator new();
}

void wireless_diagnostics::google::protobuf::CheckFieldIndex(wireless_diagnostics::google::protobuf *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2)
{
  if (this)
  {
    if ((int v2 = *((_DWORD *)this + 12), a2 == -1) && v2 == 3 || a2 != -1 && v2 != 3)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v3);
    }
  }
}

void sub_2135C2404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

unint64_t wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::GetLocation(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::FieldDescriptor *a3)
{
  int v3 = (int)a3;
  wireless_diagnostics::google::protobuf::CheckFieldIndex(a2, a3);
  uint64_t v8 = (void *)*((void *)this + 1);
  BOOL v7 = (char *)this + 8;
  unint64_t v6 = v8;
  if (!v8) {
    goto LABEL_17;
  }
  uint64_t v9 = v7;
  do
  {
    unint64_t v10 = v6[4];
    BOOL v11 = v10 >= (unint64_t)a2;
    if (v10 >= (unint64_t)a2) {
      unint64_t v12 = v6;
    }
    else {
      unint64_t v12 = v6 + 1;
    }
    if (v11) {
      uint64_t v9 = (char *)v6;
    }
    unint64_t v6 = (void *)*v12;
  }
  while (*v12);
  if (v9 == v7
    || *((void *)v9 + 4) > (unint64_t)a2
    || (v3 != -1 ? (int v13 = v3) : (int v13 = 0),
        unint64_t v15 = v9 + 40,
        uint64_t v14 = *((void *)v9 + 5),
        v13 >= (unint64_t)((*((void *)v15 + 1) - v14) >> 3)))
  {
LABEL_17:
    unint64_t v16 = 0xFFFFFFFF00000000;
    uint64_t v17 = 0xFFFFFFFFLL;
  }
  else
  {
    uint64_t v17 = *(void *)(v14 + 8 * v13);
    unint64_t v16 = v17 & 0xFFFFFFFF00000000;
    uint64_t v17 = v17;
  }
  return v16 | v17;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::GetTreeForNested(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::FieldDescriptor *a3)
{
  int v3 = (int)a3;
  wireless_diagnostics::google::protobuf::CheckFieldIndex(a2, a3);
  uint64_t v8 = (void *)*((void *)this + 4);
  BOOL v7 = (char *)this + 32;
  unint64_t v6 = v8;
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v7;
  do
  {
    unint64_t v10 = v6[4];
    BOOL v11 = v10 >= (unint64_t)a2;
    if (v10 >= (unint64_t)a2) {
      unint64_t v12 = v6;
    }
    else {
      unint64_t v12 = v6 + 1;
    }
    if (v11) {
      uint64_t v9 = (char *)v6;
    }
    unint64_t v6 = (void *)*v12;
  }
  while (*v12);
  if (v9 == v7 || *((void *)v9 + 4) > (unint64_t)a2) {
    return 0;
  }
  int v13 = v3 == -1 ? 0 : v3;
  unint64_t v15 = v9 + 40;
  uint64_t v14 = *((void *)v9 + 5);
  if (v13 >= (unint64_t)((*((void *)v15 + 1) - v14) >> 3)) {
    return 0;
  }
  else {
    return *(void *)(v14 + 8 * v13);
  }
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::Parser(uint64_t this)
{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::Parse(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 32))(a3);
  uint64_t v6 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl((uint64_t)v10, v6, a2, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), 1, *(unsigned char *)(a1 + 25));
  uint64_t v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::MergeUsingImpl(a1, v7, a3, (uint64_t)v10);
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)&v12);
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)&v11);
  return v8;
}

void sub_2135C2684(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)(v1 + 40));
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)(v1 + 24));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::MergeUsingImpl(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Message *a3, uint64_t a4)
{
  while (*(_DWORD *)(a4 + 40) != 1)
  {
    if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)a4, a3) & 1) == 0)return 0; {
  }
    }
  if (*(unsigned char *)(a4 + 229)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 24)
    && ((*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 40))(a3) & 1) == 0)
  {
    memset(v13, 0, sizeof(v13));
    wireless_diagnostics::google::protobuf::Message::FindInitializationErrors((uint64_t)a3, (uint64_t)v13);
    memset(&v10, 0, sizeof(v10));
    wireless_diagnostics::google::protobuf::JoinStrings(v13, ", ", (uint64_t)&v10);
    uint64_t v8 = std::string::insert(&v10, 0, "Message missing required fields: ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a4, -1);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    __p[0] = v13;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    return 0;
  }
  return 1;
}

void sub_2135C27E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  std::string __p = &a22;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParseFromString(uint64_t a1, const void **a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  if (*((char *)a2 + 23) < 0) {
    a2 = (const void **)*a2;
  }
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v7, a2);
  uint64_t v5 = wireless_diagnostics::google::protobuf::TextFormat::Parser::Parse(a1, (uint64_t)v7, a3);
  MEMORY[0x21668D0D0](v7);
  return v5;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::Merge(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  uint64_t v6 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl((uint64_t)v10, v6, a2, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), 0, *(unsigned char *)(a1 + 25));
  uint64_t v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::MergeUsingImpl(a1, v7, a3, (uint64_t)v10);
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)&v12);
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)&v11);
  return v8;
}

void sub_2135C2970(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)(v1 + 40));
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)(v1 + 24));
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::MergeFromString(uint64_t a1, const void **a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  if (*((char *)a2 + 23) < 0) {
    a2 = (const void **)*a2;
  }
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v7, a2);
  uint64_t v5 = wireless_diagnostics::google::protobuf::TextFormat::Parser::Merge(a1, (uint64_t)v7, a3);
  MEMORY[0x21668D0D0](v7);
  return v5;
}

void wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError(uint64_t *a1, int a2)
{
  *((unsigned char *)a1 + 229) = 1;
  uint64_t v3 = *a1;
  if (v3)
  {
    uint64_t v4 = *(void (**)(void))(*(void *)v3 + 16);
    v4();
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    if ((a2 & 0x80000000) == 0)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    }
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
}

void sub_2135C2B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParseFieldValueFromString(uint64_t a1, const void **a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::Message *a4)
{
  if (*((char *)a2 + 23) < 0) {
    a2 = (const void **)*a2;
  }
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v13, a2);
  uint64_t v7 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a4 + 152))(a4);
  wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl((uint64_t)v10, v7, (uint64_t)v13, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), 0, *(unsigned char *)(a1 + 25));
  uint64_t v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParseField(v10, a3, a4);
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)&v12);
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)&v11);
  MEMORY[0x21668D0D0](v13);
  return v8;
}

void sub_2135C2C7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer((wireless_diagnostics::google::protobuf::io::Tokenizer *)(v1 + 40));
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)(v1 + 24));
  MEMORY[0x21668D0D0](v2 - 64);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParseField(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  int v6 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a2 + 11)];
  uint64_t v7 = (const wireless_diagnostics::google::protobuf::Reflection *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 144))(a3);
  if (v6 == 10)
  {
    if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(this, a3, v7, a2) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)this, a3, v7, a2);
    if (!result) {
      return result;
    }
  }
  return *((_DWORD *)this + 10) == 1;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parse(uint64_t a1, wireless_diagnostics::google::protobuf::Message *a2)
{
  memset(v3, 0, sizeof(v3));
  __int16 v4 = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::Parse((uint64_t)v3, a1, a2);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Merge(uint64_t a1, wireless_diagnostics::google::protobuf::Message *a2)
{
  memset(v3, 0, sizeof(v3));
  __int16 v4 = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::Merge((uint64_t)v3, a1, a2);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::ParseFromString(const void **a1, wireless_diagnostics::google::protobuf::Message *a2)
{
  memset(v3, 0, sizeof(v3));
  __int16 v4 = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::ParseFromString((uint64_t)v3, a1, a2);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::MergeFromString(const void **a1, wireless_diagnostics::google::protobuf::Message *a2)
{
  memset(v3, 0, sizeof(v3));
  __int16 v4 = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::MergeFromString((uint64_t)v3, a1, a2);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Printer::Print(int *a1, const wireless_diagnostics::google::protobuf::Message *a2, uint64_t a3)
{
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::TextGenerator((uint64_t)v7, a3, *a1);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::Print((wireless_diagnostics::google::protobuf::TextFormat::Printer *)a1, a2, v7);
  BOOL v5 = v7[0].__r_.__value_.__s.__data_[21] == 0;
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)v7);
  return v5;
}

void sub_2135C2EA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFieldsToString(int *a1, uint64_t **a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream();
  BOOL v5 = wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(a1, a2, (uint64_t)v7);
  MEMORY[0x21668D2A0](v7);
  return v5;
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(int *a1, uint64_t **a2, uint64_t a3)
{
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::TextGenerator((uint64_t)v7, a3, *a1);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields((wireless_diagnostics::google::protobuf::TextFormat::Printer *)a1, a2, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)v7);
  BOOL v5 = v7[21] == 0;
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)v7);
  return v5;
}

void sub_2135C2FAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::TextFormat::Printer::Print(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, const wireless_diagnostics::google::protobuf::Message *a2, std::string *a3)
{
  int v6 = (const wireless_diagnostics::google::protobuf::Reflection *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
  std::string __p = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, void **))(*(void *)v6 + 96))(v6, a2, &__p);
  uint64_t v7 = (const wireless_diagnostics::google::protobuf::FieldDescriptor **)__p;
  if (v11 != __p)
  {
    unint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintField(this, a2, v6, v7[v8++], a3);
      uint64_t v7 = (const wireless_diagnostics::google::protobuf::FieldDescriptor **)__p;
    }
    while (v8 < (v11 - (unsigned char *)__p) >> 3);
  }
  long long v9 = (uint64_t **)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v6 + 16))(v6, a2);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(this, v9, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a3);
  if (__p)
  {
    uint64_t v11 = __p;
    operator delete(__p);
  }
}

void sub_2135C30E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, uint64_t **a2, wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v45 = *MEMORY[0x263EF8340];
  unsigned int v37 = (std::string *)((char *)a3 + 24);
  while (1)
  {
    unint64_t v8 = *a2;
    if (*a2) {
      unint64_t v9 = (unint64_t)(v8[1] - *v8) >> 4;
    }
    else {
      LODWORD(v9) = 0;
    }
    if (v7 >= (int)v9) {
      break;
    }
    uint64_t v10 = *v8;
    uint64_t v11 = (_DWORD *)(*v8 + v6);
    wireless_diagnostics::google::protobuf::SimpleItoa((wireless_diagnostics::google::protobuf *)(*v11 & 0x1FFFFFFF), (char *)a3, &v39);
    switch(*v11 >> 29)
    {
      case 0:
        if ((v41 & 0x80u) == 0) {
          uint64_t v12 = (const char *)&v39;
        }
        else {
          uint64_t v12 = (const char *)v39;
        }
        if ((v41 & 0x80u) == 0) {
          int v13 = v41;
        }
        else {
          int v13 = v40;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v12, v13);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, ": ", 2);
        wireless_diagnostics::google::protobuf::SimpleItoa(*(wireless_diagnostics::google::protobuf **)(v10 + v6 + 8), v14, &__p);
        if ((v44 & 0x80u) == 0) {
          p_p = (const char *)&__p;
        }
        else {
          p_p = (const char *)__p;
        }
        if ((v44 & 0x80u) == 0) {
          int v16 = v44;
        }
        else {
          int v16 = v43;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, p_p, v16);
        if ((char)v44 < 0) {
          operator delete(__p);
        }
        if (*((unsigned char *)this + 4)) {
          uint64_t v17 = " ";
        }
        else {
          uint64_t v17 = "\n";
        }
        int v18 = 1;
        goto LABEL_73;
      case 1:
        if ((v41 & 0x80u) == 0) {
          unint64_t v19 = (const char *)&v39;
        }
        else {
          unint64_t v19 = (const char *)v39;
        }
        if ((v41 & 0x80u) == 0) {
          int v20 = v41;
        }
        else {
          int v20 = v40;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v19, v20);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, ": 0x", 4);
        unint64_t v22 = (const char *)wireless_diagnostics::google::protobuf::FastHex32ToBuffer((wireless_diagnostics::google::protobuf *)*(unsigned int *)(v10 + v6 + 8), (uint64_t)&__p, v21);
        int v23 = strlen(v22);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v22, v23);
        if (*((unsigned char *)this + 4)) {
          uint64_t v24 = " ";
        }
        else {
          uint64_t v24 = "\n";
        }
        goto LABEL_34;
      case 2:
        if ((v41 & 0x80u) == 0) {
          uint64_t v25 = (const char *)&v39;
        }
        else {
          uint64_t v25 = (const char *)v39;
        }
        if ((v41 & 0x80u) == 0) {
          int v26 = v41;
        }
        else {
          int v26 = v40;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v25, v26);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, ": 0x", 4);
        unsigned int v28 = (const char *)wireless_diagnostics::google::protobuf::FastHex64ToBuffer(*(void *)(v10 + v6 + 8), (uint64_t)&__p, v27);
        int v29 = strlen(v28);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v28, v29);
        if (*((unsigned char *)this + 4)) {
          uint64_t v24 = " ";
        }
        else {
          uint64_t v24 = "\n";
        }
LABEL_34:
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v24, 1);
        goto LABEL_79;
      case 3:
        if ((v41 & 0x80u) == 0) {
          int v30 = (const char *)&v39;
        }
        else {
          int v30 = (const char *)v39;
        }
        if ((v41 & 0x80u) == 0) {
          int v31 = v41;
        }
        else {
          int v31 = v40;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v30, v31);
        uint64_t v32 = *(const void ***)(v10 + v6 + 8);
        wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet(&v38);
        if (*((char *)v32 + 23) < 0)
        {
          if (!v32[1]) {
            goto LABEL_71;
          }
        }
        else if (!*((unsigned char *)v32 + 23))
        {
          goto LABEL_71;
        }
        if (*((char *)v32 + 23) >= 0) {
          uint64_t v35 = v32;
        }
        else {
          uint64_t v35 = *v32;
        }
        if (!wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromArray((wireless_diagnostics::google::protobuf::UnknownFieldSet *)&v38, v35))
        {
LABEL_71:
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, ": \"", 3);
          wireless_diagnostics::google::protobuf::CEscape();
        }
        if (*((unsigned char *)this + 4))
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, " { ", 3);
        }
        else
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, " {\n", 3);
          std::string::append(v37, "  ");
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(this, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)&v38, a3);
        if (*((unsigned char *)this + 4))
        {
          int v36 = "} ";
        }
        else
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Outdent(a3);
          int v36 = "}\n";
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v36, 2);
        wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)&v38);
LABEL_79:
        if ((char)v41 < 0) {
          operator delete(v39);
        }
        ++v7;
        v6 += 16;
        break;
      case 4:
        if ((v41 & 0x80u) == 0) {
          uint64_t v33 = (const char *)&v39;
        }
        else {
          uint64_t v33 = (const char *)v39;
        }
        if ((v41 & 0x80u) == 0) {
          int v34 = v41;
        }
        else {
          int v34 = v40;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v33, v34);
        if (*((unsigned char *)this + 4))
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, " { ", 3);
        }
        else
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, " {\n", 3);
          std::string::append(v37, "  ");
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(this, *(const wireless_diagnostics::google::protobuf::UnknownFieldSet **)(v10 + v6 + 8), a3);
        if (*((unsigned char *)this + 4))
        {
          int v18 = 2;
          uint64_t v17 = "} ";
        }
        else
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Outdent(a3);
          int v18 = 2;
          uint64_t v17 = "}\n";
        }
LABEL_73:
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a3, v17, v18);
        goto LABEL_79;
      default:
        goto LABEL_79;
    }
  }
}

void sub_2135C35F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)&a10);
  if (a16 < 0) {
    operator delete(a11);
  }
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::TextFormat::Printer *wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintField(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4, std::string *a5)
{
  int v10 = *((_DWORD *)a4 + 12);
  if (!*((unsigned char *)this + 5))
  {
    if (v10 == 3) {
      goto LABEL_8;
    }
LABEL_9:
    uint64_t result = (wireless_diagnostics::google::protobuf::TextFormat::Printer *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a3 + 40))(a3, a2, a4);
    goto LABEL_10;
  }
  if (v10 != 3) {
    goto LABEL_9;
  }
  if ((wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4
                                                                                                 + 11)]
                    - 9) < 2)
  {
LABEL_8:
    uint64_t result = (wireless_diagnostics::google::protobuf::TextFormat::Printer *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a3 + 48))(a3, a2, a4);
LABEL_10:
    int v14 = (int)result;
    if ((int)result < 1) {
      return result;
    }
    unsigned int v15 = 0;
    while (1)
    {
      wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldName(result, v12, v13, a4, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5);
      if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 11)] == 10)
      {
        if (!*((unsigned char *)this + 4))
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5, " {\n", 3);
          std::string::append(a5 + 1, "  ");
          goto LABEL_17;
        }
        int v16 = (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5;
        uint64_t v17 = " { ";
        int v18 = 3;
      }
      else
      {
        int v16 = (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5;
        uint64_t v17 = ": ";
        int v18 = 2;
      }
      wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(v16, v17, v18);
LABEL_17:
      if (*((_DWORD *)a4 + 12) == 3) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 0xFFFFFFFFLL;
      }
      wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValue(this, a2, a3, a4, v19, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5);
      int v20 = (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5;
      if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 11)] == 10)
      {
        if (*((unsigned char *)this + 4))
        {
          int v21 = "} ";
        }
        else
        {
          wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Outdent((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5);
          int v20 = (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5;
          int v21 = "}\n";
        }
        int v22 = 2;
      }
      else
      {
        if (*((unsigned char *)this + 4)) {
          int v21 = " ";
        }
        else {
          int v21 = "\n";
        }
        int v22 = 1;
      }
      uint64_t result = (wireless_diagnostics::google::protobuf::TextFormat::Printer *)wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(v20, v21, v22);
      if (v14 == ++v15) {
        return result;
      }
    }
  }

  return (wireless_diagnostics::google::protobuf::TextFormat::Printer *)wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintShortRepeatedField(this, a2, a3, a4, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)a5);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValueToString(int *a1, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  if (*(char *)(a5 + 23) < 0)
  {
    **(unsigned char **)a5 = 0;
    *(void *)(a5 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a5 = 0;
    *(unsigned char *)(a5 + 23) = 0;
  }
  wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream();
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::TextGenerator((uint64_t)v11, (uint64_t)v12, *a1);
  unint64_t v9 = (const wireless_diagnostics::google::protobuf::Reflection *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValue((wireless_diagnostics::google::protobuf::TextFormat::Printer *)a1, a2, v9, a3, a4, (wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)v11);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)v11);
  return MEMORY[0x21668D2A0](v12);
}

void sub_2135C399C(_Unwind_Exception *a1)
{
  MEMORY[0x21668D2A0](v1 - 48);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValue(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4, uint64_t a5, wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *a6)
{
  switch(*((_DWORD *)a4 + 11))
  {
    case 1:
      uint64_t v20 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v20 + 320))(a3, a2, a4, a5);
      }
      else {
        double v22 = (*(double (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v20 + 144))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleDtoa(v22, v21, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
      goto LABEL_64;
    case 2:
      uint64_t v23 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v23 + 312))(a3, a2, a4, a5);
      }
      else {
        float v25 = (*(float (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v23 + 136))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleFtoa(v25, v24, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
      goto LABEL_64;
    case 3:
    case 0x10:
    case 0x12:
      uint64_t v11 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        uint64_t v12 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v11 + 288))(a3, a2, a4, a5);
      }
      else {
        uint64_t v12 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v11 + 112))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleItoa(v12, v13, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
      goto LABEL_64;
    case 4:
    case 6:
      uint64_t v17 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        int v18 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v17 + 304))(a3, a2, a4, a5);
      }
      else {
        int v18 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v17 + 128))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleItoa(v18, v19, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
      goto LABEL_64;
    case 5:
    case 0xF:
    case 0x11:
      uint64_t v8 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        unint64_t v9 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v8 + 280))(a3, a2, a4, a5);
      }
      else {
        unint64_t v9 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v8 + 104))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleItoa(v9, v10, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
      goto LABEL_64;
    case 7:
    case 0xD:
      uint64_t v14 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        unsigned int v15 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v14 + 296))(a3, a2, a4, a5);
      }
      else {
        unsigned int v15 = (wireless_diagnostics::google::protobuf *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v14 + 120))(a3, a2, a4);
      }
      wireless_diagnostics::google::protobuf::SimpleItoa(v15, v16, &v38);
      if (v40 >= 0) {
        uint64_t v33 = (const char *)&v38;
      }
      else {
        uint64_t v33 = (const char *)v38;
      }
      if (v40 >= 0) {
        int v34 = HIBYTE(v40);
      }
      else {
        int v34 = v39;
      }
LABEL_64:
      wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a6, v33, v34);
      if (SHIBYTE(v40) < 0) {
        operator delete(v38);
      }
      return;
    case 8:
      uint64_t v26 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        int v27 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v26 + 328))(a3, a2, a4, a5);
      }
      else {
        int v27 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v26 + 152))(a3, a2, a4);
      }
      if (v27) {
        uint64_t v35 = "true";
      }
      else {
        uint64_t v35 = "false";
      }
      if (v27) {
        int v36 = 4;
      }
      else {
        int v36 = 5;
      }
      goto LABEL_79;
    case 9:
    case 0xC:
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v30 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void **))(v30 + 360))(a3, a2, a4, a5, &v38);
      }
      else {
        (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void **))(v30 + 184))(a3, a2, a4, &v38);
      }
      wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a6, "\"", 1);
      if (*((unsigned char *)this + 6)) {
        wireless_diagnostics::google::protobuf::strings::Utf8SafeCEscape();
      }
      wireless_diagnostics::google::protobuf::CEscape();
    case 0xA:
    case 0xB:
      uint64_t v31 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        uint64_t v32 = (const wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v31 + 352))(a3, a2, a4, a5);
      }
      else {
        uint64_t v32 = (const wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v31 + 176))(a3, a2, a4, 0);
      }
      wireless_diagnostics::google::protobuf::TextFormat::Printer::Print(this, v32, a6);
      return;
    case 0xE:
      uint64_t v28 = *(void *)a3;
      if (*((_DWORD *)a4 + 12) == 3) {
        int v29 = (const char ***)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v28 + 344))(a3, a2, a4, a5);
      }
      else {
        int v29 = (const char ***)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(v28 + 168))(a3, a2, a4);
      }
      int v37 = *((char *)*v29 + 23);
      if (v37 >= 0) {
        uint64_t v35 = (const char *)*v29;
      }
      else {
        uint64_t v35 = **v29;
      }
      if (v37 >= 0) {
        int v36 = *((unsigned __int8 *)*v29 + 23);
      }
      else {
        int v36 = *((_DWORD *)*v29 + 2);
      }
LABEL_79:
      wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a6, v35, v36);
      break;
    default:
      return;
  }
}

void sub_2135C4140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintShortRepeatedField(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4, wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *a5)
{
  wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldName(this, a2, a3, a4, a5);
  int v10 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a3 + 48))(a3, a2, a4);
  wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a5, ": [", 3);
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      if (v11) {
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a5, ", ", 2);
      }
      wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValue(this, a2, a3, a4, v11, a5);
      uint64_t v11 = (v11 + 1);
    }
    while (v10 != v11);
  }
  if (*((unsigned char *)this + 4)) {
    uint64_t v12 = "] ";
  }
  else {
    uint64_t v12 = "]\n";
  }

  return wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a5, v12, 2);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldName(wireless_diagnostics::google::protobuf::TextFormat::Printer *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4, wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *a5)
{
  if (*((unsigned char *)a4 + 52))
  {
    wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a5, "[", 1);
    if (*(unsigned char *)(*(void *)(*((void *)a4 + 7) + 32) + 64)
      && *((_DWORD *)a4 + 11) == 11
      && *((_DWORD *)a4 + 12) == 1
      && (uint64_t v7 = *((void *)a4 + 8), v7 == *((void *)a4 + 9)))
    {
      uint64_t v8 = *(void *)(v7 + 8);
    }
    else
    {
      uint64_t v8 = *((void *)a4 + 1);
    }
    int v9 = *(char *)(v8 + 23);
    if (v9 >= 0) {
      int v10 = (const char *)v8;
    }
    else {
      int v10 = *(const char **)v8;
    }
    if (v9 >= 0) {
      LODWORD(v11) = *(unsigned __int8 *)(v8 + 23);
    }
    else {
      uint64_t v11 = *(void *)(v8 + 8);
    }
    wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(a5, v10, v11);
    uint64_t v12 = "]";
    int v13 = a5;
    int v14 = 1;
  }
  else
  {
    if (*((_DWORD *)a4 + 11) == 10) {
      uint64_t v15 = **((void **)a4 + 9);
    }
    else {
      uint64_t v15 = *(void *)a4;
    }
    int v16 = *(char *)(v15 + 23);
    if (v16 >= 0) {
      uint64_t v12 = (const char *)v15;
    }
    else {
      uint64_t v12 = *(const char **)v15;
    }
    if (v16 >= 0) {
      int v14 = *(unsigned __int8 *)(v15 + 23);
    }
    else {
      int v14 = *(_DWORD *)(v15 + 8);
    }
    int v13 = a5;
  }

  return wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(v13, v12, v14);
}

void wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Outdent(wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  if (*((char *)this + 47) < 0)
  {
    unint64_t v1 = *((void *)this + 4);
    if (!v1)
    {
LABEL_6:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v3);
      return;
    }
  }
  else
  {
    unint64_t v1 = *((unsigned __int8 *)this + 47);
    if (!*((unsigned char *)this + 47)) {
      goto LABEL_6;
    }
  }
  if (v1 < 2 * *((int *)this + 12)) {
    goto LABEL_6;
  }
  uint64_t v2 = (std::string *)((char *)this + 24);

  std::string::resize(v2, v1 - 2, 0);
}

void sub_2135C448C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Print(const wireless_diagnostics::google::protobuf::Message *a1, uint64_t a2)
{
  *(int *)((char *)v3 + 3) = 0;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::Print(v3, a1, a2);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::PrintUnknownFields(uint64_t **a1, uint64_t a2)
{
  *(int *)((char *)v3 + 3) = 0;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFields(v3, a1, a2);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::PrintUnknownFieldsToString(uint64_t **a1, uint64_t a2)
{
  *(int *)((char *)v3 + 3) = 0;
  v3[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintUnknownFieldsToString(v3, a1, a2);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::PrintFieldValueToString(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, uint64_t a3, uint64_t a4)
{
  *(int *)((char *)v5 + 3) = 0;
  v5[0] = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValueToString(v5, a1, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::ParseFieldValueFromString(const void **a1, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  memset(v4, 0, sizeof(v4));
  __int16 v5 = 0;
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::ParseFieldValueFromString((uint64_t)v4, a1, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = a6;
  *(void *)(a1 + 24) = &unk_26C3F8A78;
  *(void *)(a1 + 32) = a1;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::Tokenizer *)(a1 + 40);
  wireless_diagnostics::google::protobuf::io::Tokenizer::Tokenizer(a1 + 40, a3, a1 + 24);
  *(void *)(a1 + 216) = a2;
  *(_DWORD *)(a1 + 224) = a7;
  *(unsigned char *)(a1 + 228) = a8;
  *(unsigned char *)(a1 + 229) = 0;
  *(unsigned char *)(a1 + 204) = 1;
  *(_DWORD *)(a1 + 208) = 1;
  wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v12);
  return a1;
}

void sub_2135C4658(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer(v2);
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::~ParserErrorCollector(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector *this)
{
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector(this);

  JUMPOUT(0x21668DB60);
}

void wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddError(uint64_t a1, int a2)
{
}

void wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector::AddWarning(uint64_t a1, int a2)
{
}

void wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning(uint64_t *a1, int a2)
{
  uint64_t v3 = *a1;
  if (v3)
  {
    __int16 v4 = *(void (**)(void))(*(void *)v3 + 24);
    v4();
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    if ((a2 & 0x80000000) == 0)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    }
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
}

void sub_2135C482C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this, wireless_diagnostics::google::protobuf::Message *a2)
{
  __int16 v4 = (const wireless_diagnostics::google::protobuf::Reflection *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
  uint64_t v5 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  memset(&v68, 0, sizeof(v68));
  uint64_t v6 = *((void *)this + 9);
  std::string::basic_string[abi:ne180100]<0>(__p, "[");
  int v7 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  int v8 = v7;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (v8) {
      goto LABEL_3;
    }
  }
  else if (v7)
  {
LABEL_3:
    if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v68)) {
      goto LABEL_147;
    }
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, ".");
      int v9 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (!v9) {
        break;
      }
      memset(__p, 0, 24);
      if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, __p))
      {
        if ((SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_147;
        }
        uint64_t v15 = (void *)__p[0].__r_.__value_.__r.__words[0];
        goto LABEL_146;
      }
      std::string::append(&v68, ".");
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v10 = __p;
      }
      else {
        int v10 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
      }
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
      }
      std::string::append(&v68, (const std::string::value_type *)v10, size);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
    }
    std::string::basic_string[abi:ne180100]<0>(__p, "]");
    char v13 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)__p);
    char v14 = v13;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if ((v14 & 1) == 0) {
        goto LABEL_147;
      }
    }
    else if ((v13 & 1) == 0)
    {
      goto LABEL_147;
    }
    uint64_t v16 = *((void *)this + 1);
    if (v16) {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::Message *, std::string *))(*(void *)v16 + 16))(v16, a2, &v68);
    }
    else {
      uint64_t v17 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, std::string *))(*(void *)v4 + 528))(v4, &v68);
    }
    unint64_t FieldByName = v17;
    if (v17) {
      goto LABEL_62;
    }
    if (*((unsigned char *)this + 228))
    {
      std::operator+<char>();
      int v37 = std::string::append(&v65, "\" is not defined or is not an extension of \"");
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      v66.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      uint64_t v39 = *(void *)(v5 + 8);
      int v40 = *(char *)(v39 + 23);
      if (v40 >= 0) {
        unsigned __int8 v41 = *(std::string **)(v5 + 8);
      }
      else {
        unsigned __int8 v41 = *(std::string **)v39;
      }
      if (v40 >= 0) {
        std::string::size_type v42 = *(unsigned __int8 *)(v39 + 23);
      }
      else {
        std::string::size_type v42 = *(void *)(v39 + 8);
      }
      goto LABEL_118;
    }
    std::operator+<char>();
    uint64_t v60 = std::string::append(&v65, "\" is not defined or is not an extension of \"");
    long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
    v66.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v61;
    v60->__r_.__value_.__l.__size_ = 0;
    v60->__r_.__value_.__r.__words[2] = 0;
    v60->__r_.__value_.__r.__words[0] = 0;
    uint64_t v62 = *(void *)(v5 + 8);
    int v63 = *(char *)(v62 + 23);
    if (v63 >= 0) {
      unsigned int v52 = *(std::string **)(v5 + 8);
    }
    else {
      unsigned int v52 = *(std::string **)v62;
    }
    if (v63 >= 0) {
      std::string::size_type v53 = *(unsigned __int8 *)(v62 + 23);
    }
    else {
      std::string::size_type v53 = *(void *)(v62 + 8);
    }
LABEL_138:
    uint64_t v54 = std::string::append(&v66, (const std::string::value_type *)v52, v53);
    long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v55;
    v54->__r_.__value_.__l.__size_ = 0;
    v54->__r_.__value_.__r.__words[2] = 0;
    v54->__r_.__value_.__r.__words[0] = 0;
    BOOL v56 = std::string::append(&v67, "\".");
    long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0;
    v56->__r_.__value_.__r.__words[2] = 0;
    v56->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v67.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v66.__r_.__value_.__l.__data_);
    }
    if ((SHIBYTE(v65.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_147;
    }
    uint64_t v15 = (void *)v65.__r_.__value_.__r.__words[0];
LABEL_146:
    operator delete(v15);
    goto LABEL_147;
  }
  if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v68)) {
    goto LABEL_147;
  }
  unint64_t FieldByName = wireless_diagnostics::google::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)&v68);
  if (!FieldByName)
  {
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(__p, v68.__r_.__value_.__l.__data_, v68.__r_.__value_.__l.__size_);
    }
    else {
      __p[0] = v68;
    }
    int v18 = (std::string *)((char *)__p + HIBYTE(__p[0].__r_.__value_.__r.__words[2]));
    if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      uint64_t v19 = __p;
    }
    else
    {
      int v18 = (std::string *)(__p[0].__r_.__value_.__r.__words[0] + __p[0].__r_.__value_.__l.__size_);
      uint64_t v19 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
    }
    while (v19 != v18)
    {
      int v20 = v19->__r_.__value_.__s.__data_[0];
      if ((v20 - 65) <= 0x19) {
        v19->__r_.__value_.__s.__data_[0] = v20 + 32;
      }
      uint64_t v19 = (std::string *)((char *)v19 + 1);
    }
    uint64_t v21 = wireless_diagnostics::google::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)__p);
    if (v21)
    {
      if (*(_DWORD *)(v21 + 44) == 10) {
        unint64_t FieldByName = v21;
      }
      else {
        unint64_t FieldByName = 0;
      }
    }
    else
    {
      unint64_t FieldByName = 0;
    }
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (!FieldByName)
    {
LABEL_111:
      if (!*((unsigned char *)this + 228))
      {
        std::operator+<char>();
        int v50 = std::string::append(&v65, "\" has no field named \"");
        long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        v66.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unsigned int v52 = &v68;
        }
        else {
          unsigned int v52 = (std::string *)v68.__r_.__value_.__r.__words[0];
        }
        if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v53 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v53 = v68.__r_.__value_.__l.__size_;
        }
        goto LABEL_138;
      }
      std::operator+<char>();
      int v43 = std::string::append(&v65, "\" has no field named \"");
      long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
      v66.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v44;
      v43->__r_.__value_.__l.__size_ = 0;
      v43->__r_.__value_.__r.__words[2] = 0;
      v43->__r_.__value_.__r.__words[0] = 0;
      if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned __int8 v41 = &v68;
      }
      else {
        unsigned __int8 v41 = (std::string *)v68.__r_.__value_.__r.__words[0];
      }
      if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v42 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v42 = v68.__r_.__value_.__l.__size_;
      }
LABEL_118:
      uint64_t v45 = std::string::append(&v66, (const std::string::value_type *)v41, v42);
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v67.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      uint64_t v47 = std::string::append(&v67, "\".");
      long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
      __p[0].__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v48;
      v47->__r_.__value_.__l.__size_ = 0;
      v47->__r_.__value_.__r.__words[2] = 0;
      v47->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18));
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v67.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v66.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v65.__r_.__value_.__l.__data_);
      }
      if (!*((unsigned char *)this + 228))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
      }
      std::string::basic_string[abi:ne180100]<0>(__p, ":");
      if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p))
      {
        std::string::basic_string[abi:ne180100]<0>(&v67, "{");
        if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v67))
        {
          int v49 = 0;
        }
        else
        {
          std::string::basic_string[abi:ne180100]<0>(&v66, "<");
          int v49 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v66) ^ 1;
          if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v66.__r_.__value_.__l.__data_);
          }
        }
        if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v67.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        int v49 = 0;
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p[0].__r_.__value_.__l.__data_);
        if (v49) {
          goto LABEL_157;
        }
      }
      else if (v49)
      {
LABEL_157:
        uint64_t v59 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this);
LABEL_160:
        uint64_t v33 = v59;
        goto LABEL_148;
      }
      uint64_t v59 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this);
      goto LABEL_160;
    }
  }
  if (*(_DWORD *)(FieldByName + 44) == 10)
  {
    double v22 = **(unsigned __int8 ***)(FieldByName + 72);
    uint64_t v23 = v22[23];
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v22[23];
    }
    else {
      uint64_t v24 = *((void *)v22 + 1);
    }
    std::string::size_type v25 = HIBYTE(v68.__r_.__value_.__r.__words[2]);
    if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v25 = v68.__r_.__value_.__l.__size_;
    }
    if (v24 != v25) {
      goto LABEL_111;
    }
    if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v26 = &v68;
    }
    else {
      uint64_t v26 = (std::string *)v68.__r_.__value_.__r.__words[0];
    }
    if ((v23 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v22, v26, *((void *)v22 + 1))) {
        goto LABEL_111;
      }
    }
    else if (v22[23])
    {
      while (*v22 == v26->__r_.__value_.__s.__data_[0])
      {
        ++v22;
        uint64_t v26 = (std::string *)((char *)v26 + 1);
        if (!--v23) {
          goto LABEL_62;
        }
      }
      goto LABEL_111;
    }
  }
LABEL_62:
  if (*((_DWORD *)this + 56) == 1
    && *(_DWORD *)(FieldByName + 48) != 3
    && (*(unsigned int (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, unint64_t))(*(void *)v4 + 40))(v4, a2, FieldByName))
  {
    std::operator+<char>();
    int v27 = std::string::append(&v67, "\" is specified multiple times.");
    long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v28;
    v27->__r_.__value_.__l.__size_ = 0;
    v27->__r_.__value_.__r.__words[2] = 0;
    v27->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_147;
    }
    uint64_t v15 = (void *)v67.__r_.__value_.__r.__words[0];
    goto LABEL_146;
  }
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 44)] == 10)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, ":");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage((wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **)this, a2, v4, (const wireless_diagnostics::google::protobuf::FieldDescriptor *)FieldByName) & 1) == 0)goto LABEL_147; {
    goto LABEL_90;
    }
  }
  std::string::basic_string[abi:ne180100]<0>(__p, ":");
  char v29 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if ((v29 & 1) == 0) {
    goto LABEL_147;
  }
  if (*(_DWORD *)(FieldByName + 48) == 3)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "[");
    int v30 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (v30)
    {
      while ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v4, (const wireless_diagnostics::google::protobuf::FieldDescriptor *)FieldByName) & 1) != 0)
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "]");
        char v31 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        if (v31) {
          goto LABEL_90;
        }
        std::string::basic_string[abi:ne180100]<0>(__p, ",");
        char v32 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        uint64_t v33 = 0;
        if ((v32 & 1) == 0) {
          goto LABEL_148;
        }
      }
      goto LABEL_147;
    }
  }
  if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(this, a2, v4, (const wireless_diagnostics::google::protobuf::FieldDescriptor *)FieldByName))
  {
LABEL_147:
    uint64_t v33 = 0;
    goto LABEL_148;
  }
LABEL_90:
  std::string::basic_string[abi:ne180100]<0>(__p, ";");
  if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(&v67, ",");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&v67);
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v67.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (*(unsigned char *)(*(void *)(FieldByName + 96) + 46))
  {
    std::operator+<char>();
    int v34 = std::string::append(&v67, "\"");
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportWarning((uint64_t *)this, *((_DWORD *)this + 18));
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v67.__r_.__value_.__l.__data_);
    }
  }
  int v36 = (uint64_t **)*((void *)this + 2);
  if (v36) {
    wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::RecordLocation(v36, FieldByName, v6);
  }
  uint64_t v33 = 1;
LABEL_148:
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v68.__r_.__value_.__l.__data_);
  }
  return v33;
}

void sub_2135C5394(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (*(char *)(v37 - 81) < 0) {
    operator delete(*(void **)(v37 - 104));
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 56);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  int v7 = (const void **)(a1 + 48);
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (!memcmp(*v7, a2, *(void *)(a1 + 56))) {
      goto LABEL_16;
    }
    return 0;
  }
  if (*(unsigned char *)(a1 + 71))
  {
    while (*(unsigned __int8 *)v7 == *a2)
    {
      int v7 = (const void **)((char *)v7 + 1);
      ++a2;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  wireless_diagnostics::google::protobuf::io::Tokenizer::Next((wireless_diagnostics::google::protobuf::io::Tokenizer *)(a1 + 40));
  return 1;
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier(uint64_t a1, std::string *this)
{
  uint64_t v3 = (wireless_diagnostics::google::protobuf::io::Tokenizer *)(a1 + 40);
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    std::string::operator=(this, (const std::string *)(a1 + 48));
    wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v3);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "Expected identifier.");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72));
    if (v7 < 0) {
      operator delete(__p);
    }
  }
  return v4 == 2;
}

void sub_2135C5678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = (const void **)(a1 + 48);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 71);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 56);
  }
  uint64_t v6 = a2[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v5 == v6)
  {
    if (v7 < 0) {
      a2 = *(unsigned __int8 **)a2;
    }
    if ((v4 & 0x80) == 0)
    {
      if (*(unsigned char *)(a1 + 71))
      {
        int v8 = (unsigned __int8 *)(a1 + 48);
        while (*v8 == *a2)
        {
          ++v8;
          ++a2;
          if (!--v4) {
            goto LABEL_31;
          }
        }
        goto LABEL_16;
      }
LABEL_31:
      wireless_diagnostics::google::protobuf::io::Tokenizer::Next((wireless_diagnostics::google::protobuf::io::Tokenizer *)(a1 + 40));
      return 1;
    }
    if (!memcmp(*v3, a2, *(void *)(a1 + 56))) {
      goto LABEL_31;
    }
  }
LABEL_16:
  std::operator+<char>();
  int v9 = std::string::append(&v19, "\", found \"");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  int v11 = *(char *)(a1 + 71);
  if (v11 >= 0) {
    uint64_t v12 = (const std::string::value_type *)v3;
  }
  else {
    uint64_t v12 = *(const std::string::value_type **)(a1 + 48);
  }
  if (v11 >= 0) {
    std::string::size_type v13 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    std::string::size_type v13 = *(void *)(a1 + 56);
  }
  char v14 = std::string::append(&v20, v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  uint64_t v16 = std::string::append(&v21, "\".");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v23 = v16->__r_.__value_.__r.__words[2];
  long long v22 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72));
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_2135C5844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 56);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v6 = (const void **)(a1 + 48);
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*v6, a2, *(void *)(a1 + 56)) == 0;
  }
  if (!*(unsigned char *)(a1 + 71)) {
    return 1;
  }
  uint64_t v7 = v2 - 1;
  do
  {
    int v9 = *(unsigned __int8 *)v6;
    uint64_t v6 = (const void **)((char *)v6 + 1);
    int v8 = v9;
    int v11 = *a2++;
    int v10 = v11;
    BOOL v13 = v7-- != 0;
    uint64_t result = v8 == v10;
  }
  while (v8 == v10 && v13);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this)
{
  unint64_t v1 = (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 5)
  {
    do
      wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v1);
    while (*(_DWORD *)v1 == 5);
    return 1;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "-");
  int v3 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((*(_DWORD *)v1 - 3) < 2)
  {
LABEL_7:
    wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v1);
    return 1;
  }
  if (*(_DWORD *)v1 == 2)
  {
    if (!v3) {
      goto LABEL_7;
    }
    if (*((char *)this + 71) < 0) {
      std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 6), *((void *)this + 7));
    }
    else {
      std::string __p = *(std::string *)((unsigned char *)this + 2);
    }
    int v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v7 = (std::string *)((char *)&__p + HIBYTE(__p.__r_.__value_.__r.__words[2]));
    }
    else {
      uint64_t v7 = (std::string *)(__p.__r_.__value_.__r.__words[0] + __p.__r_.__value_.__l.__size_);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    if (p_p != v7)
    {
      do
      {
        int v8 = p_p->__r_.__value_.__s.__data_[0];
        if ((v8 - 65) <= 0x19) {
          p_p->__r_.__value_.__s.__data_[0] = v8 + 32;
        }
        p_p = (std::string *)((char *)p_p + 1);
      }
      while (p_p != v7);
      int v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    if ((v5 & 0x80) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_ == 3
        && *(_WORD *)__p.__r_.__value_.__l.__data_ == 28265
        && *(unsigned char *)(__p.__r_.__value_.__r.__words[0] + 2) == 102)
      {
LABEL_53:
        if ((v5 & 0x80) == 0) {
          goto LABEL_7;
        }
LABEL_54:
        operator delete(__p.__r_.__value_.__l.__data_);
        goto LABEL_7;
      }
      if (__p.__r_.__value_.__l.__size_ == 8)
      {
        if (*(void *)__p.__r_.__value_.__l.__data_ == 0x7974696E69666E69) {
          goto LABEL_54;
        }
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      if (size != 3)
      {
LABEL_48:
        std::operator+<char>();
        wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
        if (v17 < 0) {
          operator delete(v16);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        return 0;
      }
      int v11 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (v5 != 3)
      {
        if (v5 != 8 || __p.__r_.__value_.__r.__words[0] != 0x7974696E69666E69) {
          goto LABEL_48;
        }
        goto LABEL_53;
      }
      if (LOWORD(__p.__r_.__value_.__l.__data_) == 28265 && __p.__r_.__value_.__s.__data_[2] == 102) {
        goto LABEL_7;
      }
      int v11 = &__p;
    }
    int data_low = LOWORD(v11->__r_.__value_.__l.__data_);
    int v14 = v11->__r_.__value_.__s.__data_[2];
    if (data_low != 24942 || v14 != 110) {
      goto LABEL_48;
    }
    goto LABEL_53;
  }
  return 0;
}

void sub_2135C5BB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this)
{
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v16 = 0;
  std::string::basic_string[abi:ne180100]<0>(__p, "<");
  int v2 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  int v3 = v2;
  if (v14 < 0)
  {
    operator delete(__p[0]);
    if (v3) {
      goto LABEL_3;
    }
  }
  else if (v2)
  {
LABEL_3:
    uint64_t v4 = ">";
    goto LABEL_10;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "{");
  char v5 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)__p);
  char v6 = v5;
  if (v14 < 0)
  {
    operator delete(__p[0]);
    if ((v6 & 1) == 0)
    {
LABEL_20:
      uint64_t v9 = 0;
      goto LABEL_22;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v4 = "}";
LABEL_10:
  MEMORY[0x21668DA90](v15, v4);
  while (1)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, ">");
    if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)__p))
    {
      int v7 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(v11, "}");
      int v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)v11);
      if (v12 < 0) {
        operator delete(v11[0]);
      }
      int v7 = v8 ^ 1;
    }
    if (v14 < 0) {
      operator delete(__p[0]);
    }
    if (!v7) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipField(this) & 1) == 0) {
      goto LABEL_20;
    }
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)v15);
LABEL_22:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
  return v9;
}

void sub_2135C5D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldMessage(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4)
{
  if (this[2]) {
    wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::CreateNested(this[2], a4);
  }
  memset(&v24, 0, sizeof(v24));
  std::string::basic_string[abi:ne180100]<0>(__p, "<");
  char v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  char v9 = v8;
  if (v23 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_5;
    }
  }
  else if (v8)
  {
LABEL_5:
    int v10 = ">";
    goto LABEL_12;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "{");
  char v11 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)__p);
  char v12 = v11;
  if (v23 < 0)
  {
    operator delete(__p[0]);
    if ((v12 & 1) == 0) {
      goto LABEL_26;
    }
  }
  else if ((v11 & 1) == 0)
  {
    goto LABEL_26;
  }
  int v10 = "}";
LABEL_12:
  MEMORY[0x21668DA90](&v24, v10);
  uint64_t v13 = *(void *)a3;
  if (*((_DWORD *)a4 + 12) == 3)
  {
    char v14 = (wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v13 + 520))(a3, a2, a4, 0);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v21, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
    }
    else {
      std::string v21 = v24;
    }
    char v16 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)this, v14, (unsigned __int8 *)&v21);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    {
      char v17 = (void *)v21.__r_.__value_.__r.__words[0];
      goto LABEL_25;
    }
  }
  else
  {
    long long v15 = (wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v13 + 264))(a3, a2, a4, 0);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v20, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
    }
    else {
      std::string v20 = v24;
    }
    char v16 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)this, v15, (unsigned __int8 *)&v20);
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    {
      char v17 = (void *)v20.__r_.__value_.__r.__words[0];
LABEL_25:
      operator delete(v17);
      if ((v16 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      this[2] = 0;
      uint64_t v18 = 1;
      goto LABEL_27;
    }
  }
  if (v16) {
    goto LABEL_23;
  }
LABEL_26:
  uint64_t v18 = 0;
LABEL_27:
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v18;
}

void sub_2135C5FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 49) < 0) {
    operator delete(*(void **)(v28 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeFieldValue(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Reflection *a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4)
{
  switch(*((_DWORD *)a4 + 11))
  {
    case 1:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)__p);
      if (result)
      {
        v13.n128_u64[0] = __p[0].__r_.__value_.__r.__words[0];
        uint64_t v14 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, __n128))(v14 + 488))(a3, a2, a4, v13);
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, __n128))(v14 + 232))(a3, a2, a4, v13);
        }
        return 1;
      }
      return result;
    case 2:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(this, (double *)__p);
      if (result)
      {
        v15.n128_u32[1] = HIDWORD(__p[0].__r_.__value_.__r.__words[0]);
        v15.n128_f32[0] = *(double *)&__p[0].__r_.__value_.__l.__data_;
        uint64_t v16 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, __n128))(v16 + 480))(a3, a2, a4, v15);
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, __n128))(v16 + 224))(a3, a2, a4, v15);
        }
        return 1;
      }
      return result;
    case 3:
    case 0x10:
    case 0x12:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)__p, 0x7FFFFFFFFFFFFFFFLL);
      if (result)
      {
        uint64_t v10 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string::size_type))(v10 + 456))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0]);
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string::size_type))(v10 + 200))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0]);
        }
        return 1;
      }
      return result;
    case 4:
    case 6:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, 0xFFFFFFFFFFFFFFFFLL);
      if (result)
      {
        uint64_t v12 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string::size_type))(v12 + 472))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0]);
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string::size_type))(v12 + 216))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0]);
        }
        return 1;
      }
      return result;
    case 5:
    case 0xF:
    case 0x11:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)__p, 0x7FFFFFFFLL);
      if (result)
      {
        uint64_t v9 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v9 + 448))(a3, a2, a4, LODWORD(__p[0].__r_.__value_.__l.__data_));
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v9 + 192))(a3, a2, a4, LODWORD(__p[0].__r_.__value_.__l.__data_));
        }
        return 1;
      }
      return result;
    case 7:
    case 0xD:
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, 0xFFFFFFFFuLL);
      if (result)
      {
        uint64_t v11 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v11 + 464))(a3, a2, a4, LODWORD(__p[0].__r_.__value_.__l.__data_));
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, void))(v11 + 208))(a3, a2, a4, LODWORD(__p[0].__r_.__value_.__l.__data_));
        }
        return 1;
      }
      return result;
    case 8:
      if (*((_DWORD *)this + 10) != 3)
      {
        memset(__p, 0, 24);
        if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, __p))goto LABEL_116; {
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        }
        {
          if (__p[0].__r_.__value_.__l.__size_ == 4)
          {
            char v23 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
LABEL_89:
            if (LODWORD(v23->__r_.__value_.__l.__data_) == 1702195828)
            {
LABEL_91:
              uint64_t v39 = *(void *)a3;
              if (*((_DWORD *)a4 + 12) == 3) {
                int v40 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v39 + 496);
              }
              else {
                int v40 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v39 + 240);
              }
              uint64_t v41 = 1;
LABEL_101:
              (*v40)(a3, a2, a4, v41);
              char v43 = 1;
              goto LABEL_117;
            }
          }
        }
        else if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) == 4)
        {
          char v23 = __p;
          goto LABEL_89;
        }
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(__p, "t")) {
          goto LABEL_91;
        }
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(__p, "false")
          || std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(__p, "f"))
        {
          uint64_t v42 = *(void *)a3;
          if (*((_DWORD *)a4 + 12) == 3) {
            int v40 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v42 + 496);
          }
          else {
            int v40 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v42 + 240);
          }
          uint64_t v41 = 0;
          goto LABEL_101;
        }
        std::operator+<char>();
        long long v44 = std::string::append(&v53, "\". Value: \"");
        long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v45;
        v44->__r_.__value_.__l.__size_ = 0;
        v44->__r_.__value_.__r.__words[2] = 0;
        v44->__r_.__value_.__r.__words[0] = 0;
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v46 = __p;
        }
        else {
          long long v46 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
        }
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
        }
        long long v48 = std::string::append(&v54, (const std::string::value_type *)v46, size);
        long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v49;
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        int v50 = std::string::append(&v55, "\".");
        long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v55.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
LABEL_116:
        char v43 = 0;
LABEL_117:
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        return (v43 & 1) != 0;
      }
      __p[0].__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, 1uLL);
      if (result)
      {
        uint64_t v17 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, BOOL))(v17 + 496))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0] != 0);
        }
        else {
          (*(void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, BOOL))(v17 + 240))(a3, a2, a4, __p[0].__r_.__value_.__r.__words[0] != 0);
        }
        return 1;
      }
      return result;
    case 9:
    case 0xC:
      memset(__p, 0, 24);
      BOOL v20 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString((uint64_t)this, __p, (uint64_t)a3, (unsigned int *)a4);
      if (v20)
      {
        uint64_t v21 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          long long v22 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string *))(v21 + 504);
        }
        else {
          long long v22 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, std::string *))(v21 + 248);
        }
        (*v22)(a3, a2, a4, __p);
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p[0].__r_.__value_.__l.__data_);
        if (!v20) {
          return 0;
        }
      }
      else if (!v20)
      {
        return 0;
      }
      return 1;
    case 0xA:
    case 0xB:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
      return 1;
    case 0xE:
      memset(__p, 0, 24);
      uint64_t v18 = (wireless_diagnostics::google::protobuf::EnumDescriptor *)*((void *)a4 + 10);
      if (*((_DWORD *)this + 10) == 2)
      {
        if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, __p))goto LABEL_81; {
        uint64_t ValueByName = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v18, (uint64_t)__p);
        }
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(&v56, "-");
        if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)&v56))
        {
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v56.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v24 = *((_DWORD *)this + 10);
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v56.__r_.__value_.__l.__data_);
          }
          if (v24 != 3)
          {
            std::string::basic_string[abi:ne180100]<0>(&v56, "Expected integer or identifier.");
            wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
            if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
            {
              long long v38 = (void *)v56.__r_.__value_.__r.__words[0];
              goto LABEL_80;
            }
LABEL_81:
            char v28 = 1;
            goto LABEL_82;
          }
        }
        v55.__r_.__value_.__r.__words[0] = 0;
        if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(this, (uint64_t *)&v55, 0x7FFFFFFFLL) & 1) == 0)goto LABEL_81; {
        wireless_diagnostics::google::protobuf::SimpleItoa((wireless_diagnostics::google::protobuf *)v55.__r_.__value_.__l.__data_, v25, &v56);
        }
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        __p[0] = v56;
        uint64_t ValueByName = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(v18, (int)v55.__r_.__value_.__l.__data_);
      }
      if (ValueByName)
      {
        uint64_t v26 = *(void *)a3;
        if (*((_DWORD *)a4 + 12) == 3) {
          int v27 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v26 + 512);
        }
        else {
          int v27 = (void (**)(const wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(v26 + 256);
        }
        (*v27)(a3, a2, a4, ValueByName);
        char v28 = 0;
LABEL_82:
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__p[0].__r_.__value_.__l.__data_);
          if (v28) {
            return 0;
          }
        }
        else if (v28)
        {
          return 0;
        }
        return 1;
      }
      std::operator+<char>();
      char v29 = std::string::append(&v53, "\" for field \"");
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      int v31 = *(char *)(*(void *)a4 + 23);
      if (v31 >= 0) {
        char v32 = *(const std::string::value_type **)a4;
      }
      else {
        char v32 = **(const std::string::value_type ***)a4;
      }
      if (v31 >= 0) {
        std::string::size_type v33 = *(unsigned __int8 *)(*(void *)a4 + 23);
      }
      else {
        std::string::size_type v33 = *(void *)(*(void *)a4 + 8);
      }
      int v34 = std::string::append(&v54, v32, v33);
      long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v55.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      int v36 = std::string::append(&v55, "\".");
      long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v56.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v56.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v55.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v54.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      {
        long long v38 = (void *)v53.__r_.__value_.__r.__words[0];
LABEL_80:
        operator delete(v38);
        goto LABEL_81;
      }
      goto LABEL_81;
    default:
      return 1;
  }
}

void sub_2135C6AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (*(char *)(v37 - 57) < 0) {
    operator delete(*(void **)(v37 - 80));
  }
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  unint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

BOOL std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) == 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      std::string::__throw_out_of_range[abi:ne180100]();
    return memcmp(a1, __s, v4) == 0;
  }
  return 0;
}

void std::string::__throw_out_of_range[abi:ne180100]()
{
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2641B07D8, MEMORY[0x263F8C068]);
}

void sub_2135C6CCC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipField(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this)
{
  memset(&v16, 0, sizeof(v16));
  std::string::basic_string[abi:ne180100]<0>(&__p, "[");
  int v2 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
  int v3 = v2;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v3) {
      goto LABEL_3;
    }
  }
  else if (v2)
  {
LABEL_3:
    if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v16)) {
      goto LABEL_35;
    }
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, ".");
      int v4 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (!v4) {
        break;
      }
      memset(&__p, 0, sizeof(__p));
      if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &__p))
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_35;
      }
      std::string::append(&v16, ".");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&v16, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, "]");
    char v7 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)this, (unsigned __int8 *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if ((v7 & 1) == 0) {
      goto LABEL_35;
    }
    goto LABEL_22;
  }
  if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeIdentifier((uint64_t)this, &v16)) {
    goto LABEL_35;
  }
LABEL_22:
  std::string::basic_string[abi:ne180100]<0>(&__p, ":");
  if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p))
  {
    std::string::basic_string[abi:ne180100]<0>(v13, "{");
    if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)v13))
    {
      int v8 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(v11, "<");
      int v8 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)this, (unsigned __int8 *)v11) ^ 1;
      if (v12 < 0) {
        operator delete(v11[0]);
      }
    }
    if (v14 < 0) {
      operator delete(v13[0]);
    }
  }
  else
  {
    int v8 = 0;
  }
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v8) {
      goto LABEL_34;
    }
LABEL_40:
    if (!wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldMessage(this)) {
      goto LABEL_35;
    }
    goto LABEL_41;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (!v8) {
    goto LABEL_40;
  }
LABEL_34:
  if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::SkipFieldValue(this) & 1) == 0)
  {
LABEL_35:
    uint64_t v9 = 0;
    goto LABEL_36;
  }
LABEL_41:
  std::string::basic_string[abi:ne180100]<0>(&__p, ";");
  if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(v13, ",");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)v13);
    if (v14 < 0) {
      operator delete(v13[0]);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v9 = 1;
LABEL_36:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2135C6FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeMessage(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *a1, wireless_diagnostics::google::protobuf::Message *a2, unsigned __int8 *a3)
{
  while (1)
  {
    std::string::basic_string[abi:ne180100]<0>(v11, ">");
    if (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)v11))
    {
      int v6 = 0;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "}");
      int v7 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::LookingAt((uint64_t)a1, (unsigned __int8 *)__p);
      if (v10 < 0) {
        operator delete(__p[0]);
      }
      int v6 = v7 ^ 1;
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    if (!v6) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeField(a1, a2) & 1) == 0) {
      return 0;
    }
  }
  return wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::Consume((uint64_t)a1, a3);
}

void sub_2135C711C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeSignedInteger(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this, uint64_t *a2, uint64_t a3)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "-");
  unsigned int v6 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)__p);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = 0;
  uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)__p, a3 + v6);
  if (result)
  {
    uint64_t v8 = (uint64_t)__p[0];
    if (v6) {
      uint64_t v8 = -(uint64_t)__p[0];
    }
    *a2 = v8;
  }
  return result;
}

void sub_2135C71C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this, unint64_t *a2, unint64_t a3)
{
  int v4 = (wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40);
  if (*((_DWORD *)this + 10) == 3)
  {
    if (wireless_diagnostics::google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)this + 48, a3, a2))
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
    std::string::basic_string[abi:ne180100]<0>(__p, "Integer out of range.");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Expected integer.");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
  }
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  return 0;
}

void sub_2135C729C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeDouble(wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *this, double *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "-");
  int v6 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::TryConsume((uint64_t)this, (unsigned __int8 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = *((_DWORD *)this + 10);
  switch(v7)
  {
    case 2:
      if (*((char *)this + 71) < 0) {
        std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 6), *((void *)this + 7));
      }
      else {
        std::string __p = *(std::string *)((unsigned char *)this + 2);
      }
      int v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v11 = (std::string *)((char *)&__p + HIBYTE(__p.__r_.__value_.__r.__words[2]));
      }
      else {
        uint64_t v11 = (std::string *)(__p.__r_.__value_.__r.__words[0] + __p.__r_.__value_.__l.__size_);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      if (p_p != v11)
      {
        do
        {
          int v12 = p_p->__r_.__value_.__s.__data_[0];
          if ((v12 - 65) <= 0x19) {
            p_p->__r_.__value_.__s.__data_[0] = v12 + 32;
          }
          p_p = (std::string *)((char *)p_p + 1);
        }
        while (p_p != v11);
        int v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      if ((v9 & 0x80) == 0)
      {
        if (v9 != 3)
        {
          if (v9 != 8 || __p.__r_.__value_.__r.__words[0] != 0x7974696E69666E69) {
            goto LABEL_47;
          }
          goto LABEL_52;
        }
        if (LOWORD(__p.__r_.__value_.__l.__data_) != 28265 || __p.__r_.__value_.__s.__data_[2] != 102)
        {
          __n128 v15 = &__p;
LABEL_43:
          int data_low = LOWORD(v15->__r_.__value_.__l.__data_);
          int v18 = v15->__r_.__value_.__s.__data_[2];
          if (data_low != 24942 || v18 != 110)
          {
LABEL_47:
            std::string::basic_string[abi:ne180100]<0>(&v21, "Expected double.");
            wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
            if (v22 < 0) {
              operator delete(v21);
            }
            goto LABEL_49;
          }
          uint64_t v20 = 0x7FF8000000000000;
LABEL_54:
          *(void *)a2 = v20;
          wireless_diagnostics::google::protobuf::io::Tokenizer::Next((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          goto LABEL_56;
        }
LABEL_52:
        uint64_t v20 = 0x7FF0000000000000;
        goto LABEL_54;
      }
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_ == 3
        && *(_WORD *)__p.__r_.__value_.__l.__data_ == 28265
        && *(unsigned char *)(__p.__r_.__value_.__r.__words[0] + 2) == 102)
      {
        goto LABEL_52;
      }
      if (__p.__r_.__value_.__l.__size_ == 8)
      {
        if (*(void *)__p.__r_.__value_.__l.__data_ == 0x7974696E69666E69) {
          goto LABEL_52;
        }
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      if (size != 3) {
        goto LABEL_47;
      }
      __n128 v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
      goto LABEL_43;
    case 3:
      __p.__r_.__value_.__r.__words[0] = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeUnsignedInteger(this, (unint64_t *)&__p, 0xFFFFFFFFFFFFFFFFLL);
      if (!result) {
        return result;
      }
      *a2 = (double)__p.__r_.__value_.__r.__words[0];
      goto LABEL_56;
    case 4:
      *a2 = wireless_diagnostics::google::protobuf::io::Tokenizer::ParseFloat((uint64_t)this + 48, v4, v5);
      wireless_diagnostics::google::protobuf::io::Tokenizer::Next((wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl *)((char *)this + 40));
LABEL_56:
      if (v6) {
        *a2 = -*a2;
      }
      return 1;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "Expected double.");
  wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)this, *((_DWORD *)this + 18));
LABEL_49:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_2135C758C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ConsumeString(uint64_t a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  char v5 = (wireless_diagnostics::google::protobuf::io::Tokenizer *)(a1 + 40);
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6 == 5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
    }
    if (*(_DWORD *)v5 == 5)
    {
      uint64_t v8 = (unsigned __int8 *)(a1 + 48);
      do
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::ParseStringAppend(v8, this, a3, a4);
        wireless_diagnostics::google::protobuf::io::Tokenizer::Next(v5);
      }
      while (*(_DWORD *)v5 == 5);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "Expected string.");
    wireless_diagnostics::google::protobuf::TextFormat::Parser::ParserImpl::ReportError((uint64_t *)a1, *(_DWORD *)(a1 + 72));
    if (v11 < 0) {
      operator delete(__p);
    }
  }
  return v6 == 5;
}

void sub_2135C769C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::TextGenerator(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 20) = 1;
  char v5 = (std::string *)std::string::basic_string[abi:ne180100]<0>((void *)(a1 + 24), "");
  *(_DWORD *)(a1 + 48) = a3;
  std::string::resize(v5, 2 * a3, 32);
  return a1;
}

void sub_2135C7720(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator(wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *this)
{
  if (!*((unsigned char *)this + 21) && *((int *)this + 4) >= 1) {
    (*(void (**)(void))(**(void **)this + 24))();
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Print(wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *this, const char *a2, int a3)
{
  if (a3 < 1)
  {
    int v7 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    int v7 = 0;
    do
    {
      if (a2[v6] == 10)
      {
        wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &a2[v7], v6++ - v7 + 1);
        *((unsigned char *)this + 20) = 1;
        int v7 = v6;
      }
      else
      {
        ++v6;
      }
    }
    while (v6 != a3);
  }

  return wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Write((uint64_t)this, &a2[v7], a3 - v7);
}

uint64_t wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Write(uint64_t this, const char *a2, int a3)
{
  if (a3)
  {
    int v3 = (void *)this;
    if (!*(unsigned char *)(this + 21))
    {
      int v4 = a3;
      if (!*(unsigned char *)(this + 20)
        || ((*(unsigned char *)(this + 20) = 0, *(char *)(this + 47) < 0)
          ? (uint64_t v6 = *(const char **)(this + 24), v7 = *(void *)(this + 32))
          : (uint64_t v6 = (const char *)(this + 24), LODWORD(v7) = *(unsigned __int8 *)(this + 47)),
            this = wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator::Write((wireless_diagnostics::google::protobuf::TextFormat::Printer::TextGenerator *)this, v6, v7), !*((unsigned char *)v3 + 21)))
      {
        int v8 = *((_DWORD *)v3 + 4);
        int v9 = (void *)v3[1];
        if (v8 >= v4)
        {
LABEL_11:
          this = (uint64_t)memcpy(v9, a2, v4);
          v3[1] += v4;
          *((_DWORD *)v3 + 4) -= v4;
        }
        else
        {
          while (1)
          {
            memcpy(v9, a2, v8);
            uint64_t v10 = *((int *)v3 + 4);
            __dst = 0;
            this = (*(uint64_t (**)(void, void **, void *))(*(void *)*v3 + 16))(*v3, &__dst, v3 + 2);
            *((unsigned char *)v3 + 21) = this ^ 1;
            if ((this & 1) == 0) {
              break;
            }
            v4 -= v10;
            a2 += v10;
            int v9 = __dst;
            v3[1] = __dst;
            int v8 = *((_DWORD *)v3 + 4);
            if (v4 <= v8) {
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  return this;
}

void std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::destroy(a1, a2[1]);
    int v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **>>(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *result, wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *a2)
{
  if (result != a2)
  {
    int v3 = result;
    do
    {
      int v4 = *(wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree **)v3;
      int v3 = (wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *)((char *)v3 + 8);
      uint64_t result = v4;
      if (v4)
      {
        wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree::~ParseInfoTree(result);
        uint64_t result = (wireless_diagnostics::google::protobuf::TextFormat::ParseInfoTree *)MEMORY[0x21668DB60]();
      }
    }
    while (v3 != a2);
  }
  return result;
}

uint64_t *std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::piecewise_construct_t const&,std::tuple<wireless_diagnostics::google::protobuf::FieldDescriptor const* const&>,std::tuple<>>(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    unint64_t v8 = *a2;
    while (1)
    {
      while (1)
      {
        int v9 = (uint64_t **)v6;
        unint64_t v10 = v6[4];
        if (v8 >= v10) {
          break;
        }
        uint64_t v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      uint64_t v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v9 = a1 + 1;
LABEL_10:
    char v11 = (uint64_t *)operator new(0x40uLL);
    uint64_t v12 = **a4;
    v11[6] = 0;
    v11[7] = 0;
    v11[4] = v12;
    v11[5] = 0;
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v9, v7, v11);
    return v11;
  }
  return (uint64_t *)v9;
}

void std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  int v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    int v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringSpaceUsedExcludingSelf(unint64_t a1)
{
  if (*(char *)(a1 + 23) < 0 && (*(void *)a1 >= a1 ? (BOOL v1 = *(void *)a1 > a1 + 24) : (BOOL v1 = 1), v1)) {
    return (*(_DWORD *)(a1 + 16) - 1);
  }
  else {
    return 0;
  }
}

BOOL wireless_diagnostics::google::protobuf::internal::ParseNamedEnum(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t ValueByName = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByName(a1, a2);
  if (ValueByName) {
    *a3 = *(_DWORD *)(ValueByName + 16);
  }
  return ValueByName != 0;
}

uint64_t wireless_diagnostics::google::protobuf::internal::NameOfEnum(wireless_diagnostics::google::protobuf::internal *this, const wireless_diagnostics::google::protobuf::EnumDescriptor *a2)
{
  uint64_t ValueByNumber = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(this, (int)a2);
  if (ValueByNumber) {
    return *(void *)ValueByNumber;
  }
  else {
    return MEMORY[0x263F8C740];
  }
}

wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Descriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3, const int *a4, int a5, int a6, int a7, const wireless_diagnostics::google::protobuf::DescriptorPool *a8, wireless_diagnostics::google::protobuf::MessageFactory *a9, int a10)
{
  *(void *)this = &unk_26C3F9C30;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = a3;
  *((void *)this + 3) = a4;
  *((_DWORD *)this + 8) = a5;
  *((_DWORD *)this + 9) = a6;
  *((_DWORD *)this + 10) = a7;
  *((_DWORD *)this + 11) = a10;
  if (!a8) {
    a8 = (const wireless_diagnostics::google::protobuf::DescriptorPool *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(this);
  }
  *((void *)this + 6) = a8;
  *((void *)this + 7) = a9;
  return this;
}

{
  return wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GeneratedMessageReflection(this, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2135C7CF4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Reflection::~Reflection(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::~GeneratedMessageReflection(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this)
{
  wireless_diagnostics::google::protobuf::Reflection::~Reflection(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetUnknownFields(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  return (uint64_t)a2 + *((int *)this + 9);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::MutableUnknownFields(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2)
{
  return (uint64_t)a2 + *((int *)this + 9);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SpaceUsed(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  int v4 = *((_DWORD *)this + 11);
  char v5 = (uint64_t **)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *))(*(void *)this + 16))(this);
  uint64_t v6 = wireless_diagnostics::google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(v5) + v4;
  uint64_t v7 = *((int *)this + 10);
  if (v7 != -1) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelf((const wireless_diagnostics::google::protobuf::Message *)((char *)a2 + v7))
  }
       + v6;
  uint64_t v8 = *((void *)this + 1);
  if (*(int *)(v8 + 44) >= 1)
  {
    for (uint64_t i = 0; i < *(int *)(v8 + 44); ++i)
    {
      uint64_t v10 = *(void *)(v8 + 48);
      uint64_t v11 = v10 + 120 * i;
      int v12 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v11 + 44)];
      if (*(_DWORD *)(v11 + 48) == 3)
      {
        switch(*(_DWORD *)(v11 + 44))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v21 = *(void *)(v10 + 120 * i + 64);
              if (v21) {
                char v22 = (void *)(v21 + 112);
              }
              else {
                char v22 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              }
            }
            else
            {
              char v22 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            uint64_t v37 = (char *)a2
                + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v22) >> 3)));
            if (!*(void *)v37) {
              goto LABEL_66;
            }
            int v32 = 8 * *((_DWORD *)v37 + 3);
            goto LABEL_67;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v13 = *(void *)(v10 + 120 * i + 64);
              if (v13) {
                char v14 = (void *)(v13 + 112);
              }
              else {
                char v14 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              }
            }
            else
            {
              char v14 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            int v31 = (char *)a2
                + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v14) >> 3)));
            if (!*(void *)v31) {
              goto LABEL_66;
            }
            int v32 = 4 * *((_DWORD *)v31 + 3);
            goto LABEL_67;
          case 8:
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v25 = *(void *)(v10 + 120 * i + 64);
              if (v25) {
                uint64_t v26 = (void *)(v25 + 112);
              }
              else {
                uint64_t v26 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              }
            }
            else
            {
              uint64_t v26 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            uint64_t v39 = (char *)a2
                + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v26) >> 3)));
            if (*(void *)v39) {
              int v32 = *((_DWORD *)v39 + 3);
            }
            else {
LABEL_66:
            }
              int v32 = 0;
LABEL_67:
            uint64_t v6 = (v32 + v6);
            break;
          case 9:
          case 0xC:
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v27 = *(void *)(v10 + 120 * i + 64);
              if (v27) {
                char v28 = (void *)(v27 + 112);
              }
              else {
                char v28 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              }
            }
            else
            {
              char v28 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            int v40 = (char *)a2
                + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v28) >> 3)));
            uint64_t v41 = *(unint64_t **)v40;
            if (*(void *)v40) {
              int v42 = 8 * *((_DWORD *)v40 + 4);
            }
            else {
              int v42 = 0;
            }
            uint64_t v43 = *((unsigned int *)v40 + 3);
            if ((int)v43 >= 1)
            {
              do
              {
                unint64_t v44 = *v41;
                if (*(char *)(*v41 + 23) < 0
                  && (*(void *)v44 >= v44 ? (BOOL v45 = *(void *)v44 > v44 + 24) : (BOOL v45 = 1), v45))
                {
                  int v46 = *(_DWORD *)(v44 + 16) + 23;
                }
                else
                {
                  int v46 = 24;
                }
                v42 += v46;
                ++v41;
                --v43;
              }
              while (v43);
            }
            uint64_t v6 = (v42 + v6);
            break;
          case 0xA:
          case 0xB:
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v29 = *(void *)(v10 + 120 * i + 64);
              if (v29) {
                long long v30 = (void *)(v29 + 112);
              }
              else {
                long long v30 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              }
            }
            else
            {
              long long v30 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            uint64_t v47 = (char *)a2
                + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v30) >> 3)));
            if (*(void *)v47) {
              int v48 = 8 * *((_DWORD *)v47 + 4);
            }
            else {
              int v48 = 0;
            }
            if (*((int *)v47 + 3) >= 1)
            {
              uint64_t v49 = 0;
              do
              {
                v48 += (*(uint64_t (**)(void))(**(void **)(*(void *)v47 + 8 * v49) + 128))(*(void *)(*(void *)v47 + 8 * v49));
                ++v49;
              }
              while (v49 < *((int *)v47 + 3));
            }
            uint64_t v6 = (v48 + v6);
            break;
          default:
            break;
        }
      }
      else
      {
        if (v12 == 10)
        {
          if (*((const wireless_diagnostics::google::protobuf::Message **)this + 2) != a2)
          {
            if (*(unsigned char *)(v10 + 120 * i + 52))
            {
              uint64_t v19 = *(void *)(v10 + 120 * i + 64);
              uint64_t v20 = (void *)(v19 ? v19 + 112 : *(void *)(v10 + 120 * i + 32) + 128);
            }
            else
            {
              uint64_t v20 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            }
            uint64_t v38 = *(void *)((char *)a2
                            + *(int *)(*((void *)this + 3)
                                     + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v20) >> 3))));
            if (v38) {
              uint64_t v6 = (*(unsigned int (**)(uint64_t))(*(void *)v38 + 128))(v38) + v6;
            }
          }
          goto LABEL_68;
        }
        if (v12 == 9)
        {
          uint64_t v15 = v10 + 120 * i;
          int v16 = *(unsigned __int8 *)(v15 + 52);
          if (*(unsigned char *)(v15 + 52))
          {
            uint64_t v17 = *(void *)(v10 + 120 * i + 64);
            if (v17)
            {
              int v18 = (void *)(v17 + 112);
              if (!v16)
              {
LABEL_41:
                int v24 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
                goto LABEL_44;
              }
            }
            else
            {
              int v18 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
              if (!v16) {
                goto LABEL_41;
              }
            }
          }
          else
          {
            int v18 = (void *)(*(void *)(v10 + 120 * i + 56) + 48);
            if (!v16) {
              goto LABEL_41;
            }
          }
          uint64_t v23 = *(void *)(v10 + 120 * i + 64);
          if (v23) {
            int v24 = (void *)(v23 + 112);
          }
          else {
            int v24 = (void *)(*(void *)(v10 + 120 * i + 32) + 128);
          }
LABEL_44:
          uint64_t v33 = *((void *)this + 3);
          unint64_t v34 = *(void *)((char *)a2 + *(int *)(v33 + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v18) >> 3))));
          if (v34 != *(void *)(*((void *)this + 2)
                                + *(int *)(v33 + 4 * (int)(-286331153 * ((unint64_t)(v11 - *v24) >> 3)))))
          {
            if (*(char *)(v34 + 23) < 0 && (*(void *)v34 >= v34 ? (BOOL v35 = *(void *)v34 > v34 + 24) : (BOOL v35 = 1), v35)) {
              int v36 = *(_DWORD *)(v34 + 16) - 1;
            }
            else {
              int v36 = 0;
            }
            uint64_t v6 = (v6 + v36 + 24);
          }
        }
      }
LABEL_68:
      uint64_t v8 = *((void *)this + 1);
    }
  }
  return v6;
}

uint64_t *wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::Swap(uint64_t *this, wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  if (a2 != a3)
  {
    uint64_t v5 = (uint64_t)this;
    if ((uint64_t *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2) != this)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v53);
    }
    if ((*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 144))(a3) != v5)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 152))(a3);
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v53);
    }
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t v7 = *(unsigned int *)(v6 + 44);
    if ((int)v7 >= 1)
    {
      uint64_t v8 = *(int *)(v5 + 32);
      int v9 = (int *)((char *)a2 + v8);
      uint64_t v10 = (int *)((char *)a3 + v8);
      unint64_t v11 = (unint64_t)(v7 + 31) >> 5;
      do
      {
        int v12 = *v9;
        *v9++ = *v10;
        *v10++ = v12;
        --v11;
      }
      while (v11);
      if (*(int *)(v6 + 44) >= 1)
      {
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        do
        {
          uint64_t v15 = *(void *)(v6 + 48);
          if (*(_DWORD *)(v15 + v13 + 48) == 3)
          {
            switch(*(_DWORD *)(v15 + v13 + 44))
            {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 0xD:
              case 0xE:
              case 0xF:
              case 0x10:
              case 0x11:
              case 0x12:
                uint64_t v16 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v17 = *(void *)(v16 + 64);
                  if (v17) {
                    int v18 = (void *)(v17 + 112);
                  }
                  else {
                    int v18 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  int v18 = (void *)(*(void *)(v16 + 56) + 48);
                }
                if (a2 != a3)
                {
                  uint64_t v25 = *(int *)(*(void *)(v5 + 24)
                               + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v18) >> 3)));
                  uint64_t v26 = (uint64_t *)((char *)a2 + v25);
                  uint64_t v27 = (uint64_t *)((char *)a3 + v25);
                  uint64_t v28 = *v26;
                  *uint64_t v26 = *v27;
                  uint64_t v29 = v27[1];
                  *uint64_t v27 = v28;
                  uint64_t v30 = v26[1];
                  v26[1] = v29;
                  v27[1] = v30;
                }
                break;
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
                break;
              default:
                goto LABEL_30;
            }
          }
          else
          {
            switch(*(_DWORD *)(v15 + v13 + 44))
            {
              case 1:
                uint64_t v31 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v32 = *(void *)(v31 + 64);
                  if (v32) {
                    uint64_t v33 = (void *)(v32 + 112);
                  }
                  else {
                    uint64_t v33 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  uint64_t v33 = (void *)(*(void *)(v31 + 56) + 48);
                }
                uint64_t v44 = *(int *)(*(void *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v33) >> 3)));
                uint64_t v45 = *(void *)((char *)a2 + v44);
                *(void *)((char *)a2 + v44) = *(void *)((char *)a3 + v44);
                *(void *)((char *)a3 + v44) = v45;
                break;
              case 2:
                uint64_t v34 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v35 = *(void *)(v34 + 64);
                  if (v35) {
                    int v36 = (void *)(v35 + 112);
                  }
                  else {
                    int v36 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  int v36 = (void *)(*(void *)(v34 + 56) + 48);
                }
                uint64_t v46 = *(int *)(*(void *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v36) >> 3)));
                int v47 = *(_DWORD *)((char *)a2 + v46);
                *(_DWORD *)((char *)a2 + v46) = *(_DWORD *)((char *)a3 + v46);
                *(_DWORD *)((char *)a3 + v46) = v47;
                break;
              case 3:
              case 4:
              case 6:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0x10:
              case 0x12:
                uint64_t v19 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v20 = *(void *)(v19 + 64);
                  if (v20) {
                    uint64_t v21 = (void *)(v20 + 112);
                  }
                  else {
                    uint64_t v21 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  uint64_t v21 = (void *)(*(void *)(v19 + 56) + 48);
                }
                uint64_t v40 = *(int *)(*(void *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v21) >> 3)));
                uint64_t v41 = *(void *)((char *)a2 + v40);
                *(void *)((char *)a2 + v40) = *(void *)((char *)a3 + v40);
                *(void *)((char *)a3 + v40) = v41;
                break;
              case 5:
              case 7:
              case 0xD:
              case 0xE:
              case 0xF:
              case 0x11:
                uint64_t v22 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v23 = *(void *)(v22 + 64);
                  if (v23) {
                    int v24 = (void *)(v23 + 112);
                  }
                  else {
                    int v24 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  int v24 = (void *)(*(void *)(v22 + 56) + 48);
                }
                uint64_t v42 = *(int *)(*(void *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v24) >> 3)));
                int v43 = *(_DWORD *)((char *)a2 + v42);
                *(_DWORD *)((char *)a2 + v42) = *(_DWORD *)((char *)a3 + v42);
                *(_DWORD *)((char *)a3 + v42) = v43;
                break;
              case 8:
                uint64_t v37 = v15 + v13;
                if (*(unsigned char *)(v15 + v13 + 52))
                {
                  uint64_t v38 = *(void *)(v37 + 64);
                  if (v38) {
                    uint64_t v39 = (void *)(v38 + 112);
                  }
                  else {
                    uint64_t v39 = (void *)(*(void *)(v15 + v13 + 32) + 128);
                  }
                }
                else
                {
                  uint64_t v39 = (void *)(*(void *)(v37 + 56) + 48);
                }
                uint64_t v48 = *(int *)(*(void *)(v5 + 24)
                             + 4 * (int)(-286331153 * ((unint64_t)(v13 + v15 - *v39) >> 3)));
                char v49 = *((unsigned char *)a2 + v48);
                *((unsigned char *)a2 + v48) = *((unsigned char *)a3 + v48);
                *((unsigned char *)a3 + v48) = v49;
                break;
              default:
LABEL_30:
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v53);
                break;
            }
          }
          ++v14;
          uint64_t v6 = *(void *)(v5 + 8);
          v13 += 120;
        }
        while (v14 < *(int *)(v6 + 44));
      }
    }
    uint64_t v50 = *(int *)(v5 + 40);
    if (v50 != -1) {
      MEMORY[0x21668D470]((char *)a2 + v50, (char *)a3 + v50);
    }
    long long v51 = (uint64_t *)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::Message *))(*(void *)v5 + 24))(v5, a2);
    this = (uint64_t *)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::Message *))(*(void *)v5 + 24))(v5, a3);
    uint64_t v52 = *v51;
    *long long v51 = *this;
    *this = v52;
  }
  return this;
}

void sub_2135C8A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::HasField(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (*((unsigned char *)a3 + 52))
  {
    int v9 = (char *)a2 + *((int *)this + 10);
    uint64_t v10 = *((unsigned int *)a3 + 10);
    return MEMORY[0x270F9B0A8](v9, v10);
  }
  else
  {
    int v11 = -286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    return (*(_DWORD *)((char *)a2 + 4 * (v11 / 32) + *((int *)this + 8)) >> v11) & 1;
  }
}

void wireless_diagnostics::google::protobuf::internal::anonymous namespace'::ReportReflectionUsageError(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *this, const wireless_diagnostics::google::protobuf::Descriptor *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, const char *a4, const char *a5)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
}

void sub_2135C8C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::FieldSize(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (*((unsigned char *)a3 + 52))
  {
    int v9 = (char *)a2 + *((int *)this + 10);
    uint64_t v10 = *((unsigned int *)a3 + 10);
    return MEMORY[0x270F9B040](v9, v10);
  }
  else
  {
    switch(*((_DWORD *)a3 + 11))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t result = *(unsigned int *)((char *)a2
                                 + *(int *)(*((void *)this + 3)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)))
                                 + 8);
        break;
      default:
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

void sub_2135C8DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::ClearField(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const std::string **a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (a3[7] != (const std::string *)v8) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    int v9 = (char *)a2 + *((int *)this + 10);
    uint64_t v10 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9ADD8](v9, v10);
  }
  else if (*((_DWORD *)a3 + 12) == 3)
  {
    switch(*((_DWORD *)a3 + 11))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        *(_DWORD *)((char *)a2
                  + *(int *)(*((void *)this + 3)
                           + 4
                           * (int)(-286331153 * (((unint64_t)a3 - a3[7][2].__r_.__value_.__r.__words[0]) >> 3)))
                  + 8) = 0;
        break;
      case 9:
      case 0xC:
        uint64_t v16 = (char *)a2
            + *(int *)(*((void *)this + 3)
                     + 4 * (int)(-286331153 * (((unint64_t)a3 - a3[7][2].__r_.__value_.__r.__words[0]) >> 3)));
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v16);
        break;
      case 0xA:
      case 0xB:
        uint64_t v17 = (char *)a2
            + *(int *)(*((void *)this + 3)
                     + 4 * (int)(-286331153 * (((unint64_t)a3 - a3[7][2].__r_.__value_.__r.__words[0]) >> 3)));
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)v17);
        break;
      default:
        return;
    }
  }
  else
  {
    int v11 = (char *)a2 + *((int *)this + 8);
    unint64_t v12 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)((uint64_t)a3 - a3[7][2].__r_.__value_.__r.__words[0]) >> 3);
    int v13 = v12 + 31;
    if ((v12 & 0x80000000) == 0) {
      int v13 = -286331153 * ((uint64_t)((uint64_t)a3 - a3[7][2].__r_.__value_.__r.__words[0]) >> 3);
    }
    int v14 = *(_DWORD *)&v11[4 * (v13 >> 5)];
    if (((1 << v12) & v14) != 0)
    {
      *(_DWORD *)&v11[4 * ((uint64_t)v13 >> 5)] = v14 & ~(1 << v12);
      switch(*((_DWORD *)a3 + 11))
      {
        case 1:
          *(void *)((char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) = a3[14];
          break;
        case 2:
          *(_DWORD *)((char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) = *((_DWORD *)a3 + 28);
          break;
        case 3:
        case 4:
        case 6:
        case 0x10:
        case 0x12:
          *(void *)((char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) = a3[14];
          break;
        case 5:
        case 7:
        case 0xD:
        case 0xF:
        case 0x11:
          int v15 = *((_DWORD *)a3 + 28);
          goto LABEL_26;
        case 8:
          *((unsigned char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) = *((unsigned char *)a3 + 112);
          break;
        case 9:
        case 0xC:
          uint64_t v18 = *(int *)(*((void *)this + 3) + 4 * (int)v12);
          uint64_t v19 = *(void *)((char *)a2 + v18);
          if (v19 != *(void *)(*((void *)this + 2) + v18))
          {
            if (*((unsigned char *)a3 + 104))
            {
              uint64_t v20 = a3[14];
              std::string::operator=((std::string *)v19, v20);
            }
            else if (*(char *)(v19 + 23) < 0)
            {
              **(unsigned char **)uint64_t v19 = 0;
              *(void *)(v19 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v19 = 0;
              *(unsigned char *)(v19 + 23) = 0;
            }
          }
          break;
        case 0xA:
        case 0xB:
          uint64_t v21 = *(void (**)(void))(**(void **)((char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) + 32);
          v21();
          break;
        case 0xE:
          int v15 = a3[14]->__r_.__value_.__r.__words[2];
LABEL_26:
          *(_DWORD *)((char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)v12)) = v15;
          break;
        default:
          return;
      }
    }
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::RemoveLast(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (*((unsigned char *)a3 + 52))
  {
    int v9 = (char *)a2 + *((int *)this + 10);
    uint64_t v10 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9ADB8](v9, v10);
  }
  else
  {
    switch(*((_DWORD *)a3 + 11))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        int v11 = (char *)a2
            + *(int *)(*((void *)this + 3)
                     + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
        --*((_DWORD *)v11 + 2);
        break;
      case 9:
      case 0xC:
        unint64_t v12 = (char *)a2
            + *(int *)(*((void *)this + 3)
                     + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *((int *)v12 + 2) - 1;
        *((_DWORD *)v12 + 2) = v14;
        uint64_t v15 = *(void *)(v13 + 8 * v14);
        if (*(char *)(v15 + 23) < 0)
        {
          **(unsigned char **)uint64_t v15 = 0;
          *(void *)(v15 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v15 = 0;
          *(unsigned char *)(v15 + 23) = 0;
        }
        break;
      case 0xA:
      case 0xB:
        uint64_t v16 = (char *)a2
            + *(int *)(*((void *)this + 3)
                     + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
        uint64_t v17 = *((int *)v16 + 2) - 1;
        uint64_t v18 = *(void *)(*(void *)v16 + 8 * v17);
        *((_DWORD *)v16 + 2) = v17;
        uint64_t v19 = *(void (**)(void))(*(void *)v18 + 32);
        v19();
        break;
      default:
        return;
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::ReleaseLast(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    int v9 = (char *)a2 + *((int *)this + 10);
    uint64_t v10 = *((unsigned int *)a3 + 10);
    return MEMORY[0x270F9ADC0](v9, v10);
  }
  else
  {
    int v11 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    uint64_t v12 = *(void *)v11;
    int v13 = *((_DWORD *)v11 + 3);
    uint64_t v14 = *((int *)v11 + 2);
    uint64_t result = *(void *)(*(void *)v11 + 8 * (v14 - 1));
    *((_DWORD *)v11 + 2) = v14 - 1;
    *((_DWORD *)v11 + 3) = v13 - 1;
    if ((int)v14 < v13) {
      *(void *)(v12 + 8 * (v14 - 1)) = *(void *)(v12 + 8 * (v13 - 1));
    }
  }
  return result;
}

void wireless_diagnostics::google::protobuf::internal::anonymous namespace'::ReportReflectionUsageTypeError()
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v0);
}

void sub_2135C9628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SwapElements(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (*((unsigned char *)a3 + 52))
  {
    int v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9ADC8](v11, v12, a4, a5);
  }
  else
  {
    switch(*((_DWORD *)a3 + 11))
    {
      case 1:
        uint64_t v17 = *(void *)((char *)a2
                        + *(int *)(*((void *)this + 3)
                                 + 4
                                 * (int)(-286331153
                                       * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
        uint64_t v18 = *(void *)(v17 + 8 * (int)a4);
        *(void *)(v17 + 8 * (int)a4) = *(void *)(v17 + 8 * (int)a5);
        *(void *)(v17 + 8 * (int)a5) = v18;
        break;
      case 2:
        uint64_t v19 = *(void *)((char *)a2
                        + *(int *)(*((void *)this + 3)
                                 + 4
                                 * (int)(-286331153
                                       * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
        int v20 = *(_DWORD *)(v19 + 4 * (int)a4);
        *(_DWORD *)(v19 + 4 * (int)a4) = *(_DWORD *)(v19 + 4 * (int)a5);
        *(_DWORD *)(v19 + 4 * (int)a5) = v20;
        break;
      case 3:
      case 4:
      case 6:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0x10:
      case 0x12:
        uint64_t v13 = *(void *)((char *)a2
                        + *(int *)(*((void *)this + 3)
                                 + 4
                                 * (int)(-286331153
                                       * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
        uint64_t v14 = *(void *)(v13 + 8 * (int)a4);
        *(void *)(v13 + 8 * (int)a4) = *(void *)(v13 + 8 * (int)a5);
        *(void *)(v13 + 8 * (int)a5) = v14;
        break;
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        uint64_t v15 = *(void *)((char *)a2
                        + *(int *)(*((void *)this + 3)
                                 + 4
                                 * (int)(-286331153
                                       * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
        int v16 = *(_DWORD *)(v15 + 4 * (int)a4);
        *(_DWORD *)(v15 + 4 * (int)a4) = *(_DWORD *)(v15 + 4 * (int)a5);
        *(_DWORD *)(v15 + 4 * (int)a5) = v16;
        break;
      case 8:
        uint64_t v21 = *(void *)((char *)a2
                        + *(int *)(*((void *)this + 3)
                                 + 4
                                 * (int)(-286331153
                                       * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
        char v22 = *(unsigned char *)(v21 + (int)a4);
        *(unsigned char *)(v21 + (int)a4) = *(unsigned char *)(v21 + (int)a5);
        *(unsigned char *)(v21 + (int)a5) = v22;
        break;
      default:
        return;
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::ListFields(uint64_t result, uint64_t a2, char **a3)
{
  a3[1] = *a3;
  if (*(void *)(result + 16) != a2)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(result + 8);
    if (*(int *)(v6 + 44) >= 1)
    {
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v8 = *(void *)(v6 + 48);
        uint64_t v9 = v8 + 120 * v7;
        if (*(_DWORD *)(v9 + 48) != 3) {
          break;
        }
        if ((*(int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v5 + 48))(v5, a2, v9) >= 1)
        {
          int v11 = a3[1];
          unint64_t v10 = (unint64_t)a3[2];
          if ((unint64_t)v11 >= v10)
          {
            uint64_t v12 = (v11 - *a3) >> 3;
            if ((unint64_t)(v12 + 1) >> 61) {
              goto LABEL_52;
            }
            uint64_t v13 = v10 - (void)*a3;
            uint64_t v14 = v13 >> 2;
            if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
              uint64_t v14 = v12 + 1;
            }
            if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v15 = v14;
            }
            if (v15) {
              int v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(a3 + 2), v15);
            }
            else {
              int v16 = 0;
            }
            uint64_t v25 = &v16[8 * v12];
            *(void *)uint64_t v25 = v9;
            uint64_t v21 = v25 + 8;
            uint64_t v27 = *a3;
            uint64_t v26 = a3[1];
            if (v26 != *a3)
            {
              do
              {
                uint64_t v28 = *((void *)v26 - 1);
                v26 -= 8;
                *((void *)v25 - 1) = v28;
                v25 -= 8;
              }
              while (v26 != v27);
              goto LABEL_38;
            }
            goto LABEL_39;
          }
LABEL_22:
          *(void *)int v11 = v9;
          uint64_t v21 = v11 + 8;
          goto LABEL_41;
        }
LABEL_42:
        ++v7;
        uint64_t v6 = *(void *)(v5 + 8);
        if (v7 >= *(int *)(v6 + 44)) {
          goto LABEL_43;
        }
      }
      if (*(unsigned char *)(v8 + 120 * v7 + 52))
      {
        uint64_t v17 = *(void *)(v8 + 120 * v7 + 64);
        if (v17) {
          uint64_t v18 = (void *)(v17 + 112);
        }
        else {
          uint64_t v18 = (void *)(*(void *)(v8 + 120 * v7 + 32) + 128);
        }
      }
      else
      {
        uint64_t v18 = (void *)(*(void *)(v8 + 120 * v7 + 56) + 48);
      }
      int v19 = -286331153 * ((unint64_t)(v9 - *v18) >> 3);
      if (((*(_DWORD *)(a2 + *(int *)(v5 + 32) + 4 * (v19 / 32)) >> v19) & 1) == 0) {
        goto LABEL_42;
      }
      int v11 = a3[1];
      unint64_t v20 = (unint64_t)a3[2];
      if ((unint64_t)v11 < v20) {
        goto LABEL_22;
      }
      uint64_t v22 = (v11 - *a3) >> 3;
      if ((unint64_t)(v22 + 1) >> 61) {
LABEL_52:
      }
        std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
      uint64_t v23 = v20 - (void)*a3;
      uint64_t v24 = v23 >> 2;
      if (v23 >> 2 <= (unint64_t)(v22 + 1)) {
        uint64_t v24 = v22 + 1;
      }
      if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v15 = v24;
      }
      if (v15) {
        int v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(a3 + 2), v15);
      }
      else {
        int v16 = 0;
      }
      uint64_t v25 = &v16[8 * v22];
      *(void *)uint64_t v25 = v9;
      uint64_t v21 = v25 + 8;
      uint64_t v29 = *a3;
      uint64_t v26 = a3[1];
      if (v26 != *a3)
      {
        do
        {
          uint64_t v30 = *((void *)v26 - 1);
          v26 -= 8;
          *((void *)v25 - 1) = v30;
          v25 -= 8;
        }
        while (v26 != v29);
LABEL_38:
        uint64_t v26 = *a3;
      }
LABEL_39:
      *a3 = v25;
      a3[1] = v21;
      a3[2] = &v16[8 * v15];
      if (v26) {
        operator delete(v26);
      }
LABEL_41:
      a3[1] = v21;
      goto LABEL_42;
    }
LABEL_43:
    uint64_t v31 = *(int *)(v5 + 40);
    if (v31 != -1) {
      wireless_diagnostics::google::protobuf::internal::ExtensionSet::AppendToList((void *)(a2 + v31), (const wireless_diagnostics::google::protobuf::Descriptor *)v6, *(wireless_diagnostics::google::protobuf::internal::Mutex ***)(v5 + 48), (void **)a3);
    }
    uint64_t v32 = *a3;
    uint64_t v33 = (uint64_t *)a3[1];
    unint64_t v34 = 126 - 2 * __clz(((char *)v33 - *a3) >> 3);
    if (v33 == (uint64_t *)*a3) {
      uint64_t v35 = 0;
    }
    else {
      uint64_t v35 = v34;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 1) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(unsigned int *)((char *)a2
                           + *(int *)(*((void *)this + 3)
                                    + 4
                                    * (int)(-286331153
                                          * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
  uint64_t v9 = (char *)a2 + *((int *)this + 10);
  uint64_t v10 = *((unsigned int *)a3 + 10);
  uint64_t v11 = *((unsigned int *)a3 + 28);

  return MEMORY[0x270F9B0D0](v9, v10, v11);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 1) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    MEMORY[0x270F9AE90](v10, v11, v12, a4, a3);
  }
  else
  {
    unint64_t v13 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)((char *)a2 + 4 * ((int)v13 / 32) + *((int *)this + 8)) |= 1 << v13;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 1) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(unsigned int *)(*(void *)((char *)a2
                                       + *(int *)(*((void *)this + 3)
                                                + 4
                                                * (int)(-286331153
                                                      * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                           + 4 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B068](v10, v11, a4);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 1) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9ADF8](v11, v12, a4, a5);
  }
  else
  {
    *(_DWORD *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 4 * (int)a4) = a5;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 1) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    MEMORY[0x270F9AE78](v10, v11, v12, v13, a4, a3);
  }
  else
  {
    uint64_t v14 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v15 = *((_DWORD *)v14 + 2);
    if (v15 == *((_DWORD *)v14 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v14, v15 + 1);
      int v15 = *((_DWORD *)v14 + 2);
    }
    uint64_t v16 = *(void *)v14;
    *((_DWORD *)v14 + 2) = v15 + 1;
    *(_DWORD *)(v16 + 4 * v15) = a4;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 2) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)((char *)a2
                     + *(int *)(*((void *)this + 3)
                              + 4
                              * (int)(-286331153
                                    * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
  uint64_t v9 = (char *)a2 + *((int *)this + 10);
  uint64_t v10 = *((unsigned int *)a3 + 10);
  uint64_t v11 = *((void *)a3 + 14);

  return MEMORY[0x270F9B0D8](v9, v10, v11);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 2) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    MEMORY[0x270F9AE98](v10, v11, v12, a4, a3);
  }
  else
  {
    unint64_t v13 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(void *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)((char *)a2 + 4 * ((int)v13 / 32) + *((int *)this + 8)) |= 1 << v13;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 2) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(*(void *)((char *)a2
                                 + *(int *)(*((void *)this + 3)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                     + 8 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B070](v10, v11, a4);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 2) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9AE00](v11, v12, a4, a5);
  }
  else
  {
    *(void *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 8 * (int)a4) = a5;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 2) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    MEMORY[0x270F9AE80](v10, v11, v12, v13, a4, a3);
  }
  else
  {
    uint64_t v14 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v15 = *((_DWORD *)v14 + 2);
    if (v15 == *((_DWORD *)v14 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<long long>::Reserve((uint64_t)v14, v15 + 1);
      int v15 = *((_DWORD *)v14 + 2);
    }
    uint64_t v16 = *(void *)v14;
    *((_DWORD *)v14 + 2) = v15 + 1;
    *(void *)(v16 + 8 * v15) = a4;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetUInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 3) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(unsigned int *)((char *)a2
                           + *(int *)(*((void *)this + 3)
                                    + 4
                                    * (int)(-286331153
                                          * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
  uint64_t v9 = (char *)a2 + *((int *)this + 10);
  uint64_t v10 = *((unsigned int *)a3 + 10);
  uint64_t v11 = *((unsigned int *)a3 + 28);

  return MEMORY[0x270F9B108](v9, v10, v11);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetUInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 3) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    MEMORY[0x270F9AED0](v10, v11, v12, a4, a3);
  }
  else
  {
    unint64_t v13 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)((char *)a2 + 4 * ((int)v13 / 32) + *((int *)this + 8)) |= 1 << v13;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedUInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 3) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(unsigned int *)(*(void *)((char *)a2
                                       + *(int *)(*((void *)this + 3)
                                                + 4
                                                * (int)(-286331153
                                                      * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                           + 4 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B088](v10, v11, a4);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedUInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 3) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9AE18](v11, v12, a4, a5);
  }
  else
  {
    *(_DWORD *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 4 * (int)a4) = a5;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddUInt32(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 3) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    MEMORY[0x270F9AEB0](v10, v11, v12, v13, a4, a3);
  }
  else
  {
    uint64_t v14 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v15 = *((_DWORD *)v14 + 2);
    if (v15 == *((_DWORD *)v14 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v14, v15 + 1);
      int v15 = *((_DWORD *)v14 + 2);
    }
    uint64_t v16 = *(void *)v14;
    *((_DWORD *)v14 + 2) = v15 + 1;
    *(_DWORD *)(v16 + 4 * v15) = a4;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetUInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 4) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)((char *)a2
                     + *(int *)(*((void *)this + 3)
                              + 4
                              * (int)(-286331153
                                    * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
  uint64_t v9 = (char *)a2 + *((int *)this + 10);
  uint64_t v10 = *((unsigned int *)a3 + 10);
  uint64_t v11 = *((void *)a3 + 14);

  return MEMORY[0x270F9B110](v9, v10, v11);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetUInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 4) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    MEMORY[0x270F9AED8](v10, v11, v12, a4, a3);
  }
  else
  {
    unint64_t v13 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(void *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = a4;
    *(_DWORD *)((char *)a2 + 4 * ((int)v13 / 32) + *((int *)this + 8)) |= 1 << v13;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedUInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 4) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(*(void *)((char *)a2
                                 + *(int *)(*((void *)this + 3)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                     + 8 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B090](v10, v11, a4);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedUInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 4) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9AE20](v11, v12, a4, a5);
  }
  else
  {
    *(void *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 8 * (int)a4) = a5;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddUInt64(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 4) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    MEMORY[0x270F9AEB8](v10, v11, v12, v13, a4, a3);
  }
  else
  {
    uint64_t v14 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v15 = *((_DWORD *)v14 + 2);
    if (v15 == *((_DWORD *)v14 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<long long>::Reserve((uint64_t)v14, v15 + 1);
      int v15 = *((_DWORD *)v14 + 2);
    }
    uint64_t v16 = *(void *)v14;
    *((_DWORD *)v14 + 2) = v15 + 1;
    *(void *)(v16 + 8 * v15) = a4;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetFloat(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 6) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    a4.n128_u32[0] = *((_DWORD *)a3 + 28);
    MEMORY[0x270F9B0C8](v10, v11, a4);
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetFloat(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  unsigned __int32 v6 = a4.n128_u32[0];
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 6) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    uint64_t v13 = *((unsigned __int8 *)a3 + 44);
    a4.n128_u32[0] = v6;
    MEMORY[0x270F9AE88](v11, v12, v13, a3, a4);
  }
  else
  {
    unint64_t v14 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = v6;
    *(_DWORD *)((char *)a2 + 4 * ((int)v14 / 32) + *((int *)this + 8)) |= 1 << v14;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedFloat(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 6) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9B060](v10, v11, a4);
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedFloat(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, __n128 a5, const char *a6)
{
  unsigned __int32 v6 = a5.n128_u32[0];
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v11) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 6) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v12 = (char *)a2 + *((int *)this + 10);
    uint64_t v13 = *((unsigned int *)a3 + 10);
    a5.n128_u32[0] = v6;
    MEMORY[0x270F9ADF0](v12, v13, a4, a5);
  }
  else
  {
    *(_DWORD *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 4 * (int)a4) = v6;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddFloat(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  unsigned __int32 v6 = a4.n128_u32[0];
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 6) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    uint64_t v13 = *((unsigned __int8 *)a3 + 44);
    uint64_t v14 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    a4.n128_u32[0] = v6;
    MEMORY[0x270F9AE70](v11, v12, v13, v14, a3, a4);
  }
  else
  {
    int v15 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v16 = *((_DWORD *)v15 + 2);
    if (v16 == *((_DWORD *)v15 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v15, v16 + 1);
      int v16 = *((_DWORD *)v15 + 2);
    }
    uint64_t v17 = *(void *)v15;
    *((_DWORD *)v15 + 2) = v16 + 1;
    *(_DWORD *)(v17 + 4 * v16) = v6;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetDouble(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 5) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    a4.n128_u64[0] = *((void *)a3 + 14);
    MEMORY[0x270F9B0F8](v10, v11, a4);
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetDouble(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  unint64_t v6 = a4.n128_u64[0];
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 5) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    uint64_t v13 = *((unsigned __int8 *)a3 + 44);
    a4.n128_u64[0] = v6;
    MEMORY[0x270F9AEC8](v11, v12, v13, a3, a4);
  }
  else
  {
    unint64_t v14 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(void *)((char *)a2
              + *(int *)(*((void *)this + 3)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = v6;
    *(_DWORD *)((char *)a2 + 4 * ((int)v14 / 32) + *((int *)this + 8)) |= 1 << v14;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedDouble(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 5) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9B078](v10, v11, a4);
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedDouble(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, __n128 a5, const char *a6)
{
  unint64_t v6 = a5.n128_u64[0];
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v11) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 5) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v12 = (char *)a2 + *((int *)this + 10);
    uint64_t v13 = *((unsigned int *)a3 + 10);
    a5.n128_u64[0] = v6;
    MEMORY[0x270F9AE10](v12, v13, a4, a5);
  }
  else
  {
    *(void *)(*(void *)((char *)a2
                          + *(int *)(*((void *)this + 3)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 8 * (int)a4) = v6;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddDouble(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, __n128 a4, uint64_t a5, const char *a6)
{
  unint64_t v6 = a4.n128_u64[0];
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a6);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 5) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    uint64_t v13 = *((unsigned __int8 *)a3 + 44);
    uint64_t v14 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    a4.n128_u64[0] = v6;
    MEMORY[0x270F9AEA0](v11, v12, v13, v14, a3, a4);
  }
  else
  {
    int v15 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v16 = *((_DWORD *)v15 + 2);
    if (v16 == *((_DWORD *)v15 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<long long>::Reserve((uint64_t)v15, v16 + 1);
      int v16 = *((_DWORD *)v15 + 2);
    }
    uint64_t v17 = *(void *)v15;
    *((_DWORD *)v15 + 2) = v16 + 1;
    *(void *)(v17 + 8 * v16) = v6;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetBool(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 7) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *((unsigned __int8 *)a2
           + *(int *)(*((void *)this + 3)
                    + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
  uint64_t v9 = (char *)a2 + *((int *)this + 10);
  uint64_t v10 = *((unsigned int *)a3 + 10);
  uint64_t v11 = *((unsigned __int8 *)a3 + 112);

  return MEMORY[0x270F9B0B0](v9, v10, v11);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetBool(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 7) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    MEMORY[0x270F9AE60](v10, v11, v12, a4, a3);
  }
  else
  {
    uint64_t v13 = *((void *)a3 + 7);
    uint64_t v15 = *(void *)(v13 + 48);
    uint64_t v14 = (void *)(v13 + 48);
    *((unsigned char *)a2 + *(int *)(*((void *)this + 3) + 4 * (int)(-286331153 * (((unint64_t)a3 - v15) >> 3)))) = a4;
    if (*((unsigned char *)a3 + 52))
    {
      uint64_t v16 = *((void *)a3 + 8);
      if (v16) {
        uint64_t v14 = (void *)(v16 + 112);
      }
      else {
        uint64_t v14 = (void *)(*((void *)a3 + 4) + 128);
      }
    }
    *(_DWORD *)((char *)a2 + 4 * ((int)(-286331153 * (((unint64_t)a3 - *v14) >> 3)) / 32) + *((int *)this + 8)) |= 1 << (-17 * (((unint64_t)a3 - *v14) >> 3));
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedBool(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 7) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(unsigned __int8 *)(*(void *)((char *)a2
                                          + *(int *)(*((void *)this + 3)
                                                   + 4
                                                   * (int)(-286331153
                                                         * (((unint64_t)a3
                                                           - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                              + (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B050](v10, v11, a4);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedBool(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 7) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v11 = (char *)a2 + *((int *)this + 10);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    MEMORY[0x270F9ADE0](v11, v12, a4, a5);
  }
  else
  {
    *(unsigned char *)(*(void *)((char *)a2
                         + *(int *)(*((void *)this + 3)
                                  + 4
                                  * (int)(-286331153
                                        * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
             + (int)a4) = (_BYTE)a5;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddBool(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 7) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (char *)a2 + *((int *)this + 10);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    MEMORY[0x270F9AE50](v10, v11, v12, v13, a4, a3);
  }
  else
  {
    uint64_t v14 = (char *)a2
        + *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v15 = *((_DWORD *)v14 + 2);
    if (v15 == *((_DWORD *)v14 + 3))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<BOOL>::Reserve((uint64_t)v14, v15 + 1);
      int v15 = *((_DWORD *)v14 + 2);
    }
    uint64_t v16 = *(void *)v14;
    *((_DWORD *)v14 + 2) = v15 + 1;
    *(unsigned char *)(v16 + v15) = a4;
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetString(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this@<X0>, const wireless_diagnostics::google::protobuf::Message *a2@<X1>, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3@<X2>, const char *a4@<X4>, std::string *a5@<X8>)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a4);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t String = wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetString();
    if ((*(char *)(String + 23) & 0x80000000) == 0)
    {
      long long v11 = *(_OWORD *)String;
      std::string::size_type v12 = *(void *)(String + 16);
LABEL_12:
      a5->__r_.__value_.__r.__words[2] = v12;
      *(_OWORD *)&a5->__r_.__value_.__l.__data_ = v11;
      return;
    }
    uint64_t v14 = *(const std::string::value_type **)String;
    std::string::size_type v15 = *(void *)(String + 8);
  }
  else
  {
    uint64_t v13 = *(long long **)((char *)a2
                       + *(int *)(*((void *)this + 3)
                                + 4
                                * (int)(-286331153
                                      * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
    if ((*((char *)v13 + 23) & 0x80000000) == 0)
    {
      long long v11 = *v13;
      std::string::size_type v12 = *((void *)v13 + 2);
      goto LABEL_12;
    }
    uint64_t v14 = *(const std::string::value_type **)v13;
    std::string::size_type v15 = *((void *)v13 + 1);
  }

  std::string::__init_copy_ctor_external(a5, v14, v15);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetStringReference(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(a2
                     + *(int *)(*(void *)(a1 + 24)
                              + 4
                              * (int)(-286331153
                                    * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));

  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetString();
}

std::string *wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetString(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, const std::string *a4, const char *a5)
{
  uint64_t v9 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableString((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *((unsigned int *)a3 + 10), *((unsigned __int8 *)a3 + 44), a3);
  }
  else
  {
    unint64_t v11 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v11 / 32)) |= 1 << v11;
    uint64_t v12 = *(int *)(*(void *)(a1 + 24) + 4 * (int)v11);
    uint64_t v10 = *(std::string **)(a2 + v12);
    if (v10 == *(std::string **)(*(void *)(a1 + 16) + v12)) {
      operator new();
    }
  }

  return std::string::operator=(v10, a4);
}

void sub_2135CCA10(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedString(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this@<X0>, const wireless_diagnostics::google::protobuf::Message *a2@<X1>, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3@<X2>, int a4@<W3>, const char *a5@<X4>, std::string *a6@<X8>)
{
  unint64_t v11 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v11) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    Repeateduint64_t String = wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetRepeatedString((const wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10)));
    if ((*(char *)(RepeatedString + 23) & 0x80000000) == 0)
    {
      long long v13 = *(_OWORD *)RepeatedString;
      std::string::size_type v14 = *(void *)(RepeatedString + 16);
LABEL_12:
      a6->__r_.__value_.__r.__words[2] = v14;
      *(_OWORD *)&a6->__r_.__value_.__l.__data_ = v13;
      return;
    }
    uint64_t v16 = *(const std::string::value_type **)RepeatedString;
    std::string::size_type v17 = *(void *)(RepeatedString + 8);
  }
  else
  {
    std::string::size_type v15 = *(long long **)(*(void *)((char *)a2
                                   + *(int *)(*((void *)this + 3)
                                            + 4
                                            * (int)(-286331153
                                                  * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                       + 8 * a4);
    if ((*((char *)v15 + 23) & 0x80000000) == 0)
    {
      long long v13 = *v15;
      std::string::size_type v14 = *((void *)v15 + 2);
      goto LABEL_12;
    }
    uint64_t v16 = *(const std::string::value_type **)v15;
    std::string::size_type v17 = *((void *)v15 + 1);
  }

  std::string::__init_copy_ctor_external(a6, v16, v17);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedStringReference(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, int a4, const char *a5)
{
  uint64_t v9 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(*(void *)(a2
                                 + *(int *)(*(void *)(a1 + 24)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                     + 8 * a4);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40));

  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetRepeatedString(v10);
}

std::string *wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedString(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, int a4, const std::string *a5)
{
  uint64_t v10 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      (const char *)a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (*((unsigned char *)a3 + 52))
  }
    unint64_t v11 = (std::string *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableRepeatedString((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)));
  else {
    unint64_t v11 = *(std::string **)(*(void *)(a2
  }
                                      + *(int *)(*(void *)(a1 + 24)
                                               + 4
                                               * (int)(-286331153
                                                     * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                          + 8 * a4);

  return std::string::operator=(v11, a5);
}

std::string *wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddString(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, const std::string *a4, const char *a5)
{
  uint64_t v9 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 9) {
  if (*((unsigned char *)a3 + 52))
  }
  {
    uint64_t v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::AddString((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)), *((unsigned int *)a3 + 10), *((unsigned __int8 *)a3 + 44), a3);
  }
  else
  {
    unint64_t v11 = (int *)(a2
                + *(int *)(*(void *)(a1 + 24)
                         + 4
                         * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
    int v12 = v11[3];
    uint64_t v13 = v11[2];
    if ((int)v13 >= v12)
    {
      if (v12 == v11[4])
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)v11);
        int v12 = v11[3];
      }
      v11[3] = v12 + 1;
      uint64_t v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(v9);
      uint64_t v15 = *(void *)v11;
      uint64_t v16 = v11[2];
      v11[2] = v16 + 1;
      *(void *)(v15 + 8 * v16) = v10;
    }
    else
    {
      uint64_t v14 = *(void *)v11;
      v11[2] = v13 + 1;
      uint64_t v10 = *(std::string **)(v14 + 8 * v13);
    }
  }

  return std::string::operator=(v10, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetEnum(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::EnumDescriptor **a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (a3[7] != v8) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 8) {
  if (*((unsigned char *)a3 + 52))
  }
    int Enum = wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetEnum((const wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10)));
  else {
    int Enum = *(_DWORD *)((char *)a2
  }
                     + *(int *)(*((void *)this + 3)
                              + 4 * (int)(-286331153 * (((unint64_t)a3 - *((void *)a3[7] + 6)) >> 3))));
  uint64_t ValueByNumber = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(a3[10], Enum);
  if (!ValueByNumber)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  return ValueByNumber;
}

void sub_2135CD104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetEnum(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 8) {
  if (*(void *)(a4 + 24) != *((void *)a3 + 10))
  }
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = a2 + *(int *)(a1 + 40);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned int *)(a4 + 16);
    MEMORY[0x270F9AE68](v10, v11, v12, v13, a3);
  }
  else
  {
    unint64_t v14 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)(a2
              + *(int *)(*(void *)(a1 + 24)
                       + ((uint64_t)(0xEEEEEEEF00000000 * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)) >> 30))) = *(_DWORD *)(a4 + 16);
    *(_DWORD *)(a2 + *(int *)(a1 + 32) + 4 * ((int)v14 / 32)) |= 1 << v14;
  }
}

void wireless_diagnostics::google::protobuf::internal::anonymous namespace'::ReportReflectionUsageEnumTypeError()
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v0);
}

void sub_2135CD368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedEnum(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::EnumDescriptor **a3, int a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (a3[7] != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 8) {
  if (*((unsigned char *)a3 + 52))
  }
    Repeatedint Enum = wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetRepeatedEnum((const wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10)));
  else {
    Repeatedint Enum = *(_DWORD *)(*(void *)((char *)a2
  }
                                         + *(int *)(*((void *)this + 3)
                                                  + 4
                                                  * (int)(-286331153
                                                        * (((unint64_t)a3 - *((void *)a3[7] + 6)) >> 3))))
                             + 4 * a4);
  uint64_t ValueByNumber = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(a3[10], RepeatedEnum);
  if (!ValueByNumber)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  return ValueByNumber;
}

void sub_2135CD530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::SetRepeatedEnum(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v10) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      (const char *)a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 8) {
  if (*(void *)(a5 + 24) != *((void *)a3 + 10))
  }
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v11 = a2 + *(int *)(a1 + 40);
    uint64_t v12 = *((unsigned int *)a3 + 10);
    uint64_t v13 = *(unsigned int *)(a5 + 16);
    MEMORY[0x270F9ADE8](v11, v12, a4, v13);
  }
  else
  {
    *(_DWORD *)(*(void *)(a2
                          + *(int *)(*(void *)(a1 + 24)
                                   + 4
                                   * (int)(-286331153
                                         * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
              + 4 * (int)a4) = *(_DWORD *)(a5 + 16);
  }
}

void wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddEnum(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = *(wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)(a1 + 8);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 8) {
  if (*(void *)(a4 + 24) != *((void *)a3 + 10))
  }
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = a2 + *(int *)(a1 + 40);
    uint64_t v11 = *((unsigned int *)a3 + 10);
    uint64_t v12 = *((unsigned __int8 *)a3 + 44);
    uint64_t v13 = *(unsigned __int8 *)(*((void *)a3 + 12) + 44);
    uint64_t v14 = *(unsigned int *)(a4 + 16);
    MEMORY[0x270F9AE58](v10, v11, v12, v13, v14, a3);
  }
  else
  {
    int v15 = *(_DWORD *)(a4 + 16);
    uint64_t v16 = a2
        + *(int *)(*(void *)(a1 + 24)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    int v17 = *(_DWORD *)(v16 + 8);
    if (v17 == *(_DWORD *)(v16 + 12))
    {
      wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(v16, v17 + 1);
      int v17 = *(_DWORD *)(v16 + 8);
    }
    uint64_t v18 = *(void *)v16;
    *(_DWORD *)(v16 + 8) = v17 + 1;
    *(_DWORD *)(v18 + 4 * v17) = v15;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::MessageFactory *a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!a4)
  }
    a4 = (wireless_diagnostics::google::protobuf::MessageFactory *)*((void *)this + 7);
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = (const wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10));
    int v11 = *((_DWORD *)a3 + 10);
    uint64_t v12 = (const wireless_diagnostics::google::protobuf::Descriptor *)*((void *)a3 + 9);
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetMessage(v10, v11, v12, a4);
  }
  else
  {
    uint64_t v14 = *(int *)(*((void *)this + 3)
                 + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
    uint64_t result = *(void *)((char *)a2 + v14);
    if (!result) {
      return *(void *)(*((void *)this + 2) + v14);
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::MutableMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::MessageFactory *a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!a4)
  }
    a4 = (wireless_diagnostics::google::protobuf::MessageFactory *)*((void *)this + 7);
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10));
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableMessage(v10, a3, a4);
  }
  else
  {
    unint64_t v12 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)((char *)a2 + 4 * ((int)v12 / 32) + *((int *)this + 8)) |= 1 << v12;
    uint64_t v13 = *(int *)(*((void *)this + 3) + 4 * (int)v12);
    uint64_t result = *(void *)((char *)a2 + v13);
    if (!result)
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*((void *)this + 2) + v13) + 24))(*(void *)(*((void *)this + 2) + v13));
      *(void *)((char *)a2 + v13) = result;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::ReleaseMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::MessageFactory *a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) == 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!a4)
  }
    a4 = (wireless_diagnostics::google::protobuf::MessageFactory *)*((void *)this + 7);
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10));
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::ReleaseMessage(v10, a3, a4);
  }
  else
  {
    unint64_t v12 = 0xEEEEEEEEEEEEEEEFLL * (((uint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3);
    *(_DWORD *)((char *)a2 + 4 * ((int)v12 / 32) + *((int *)this + 8)) &= ~(1 << v12);
    uint64_t v13 = *(int *)(*((void *)this + 3) + 4 * (int)v12);
    uint64_t result = *(void *)((char *)a2 + v13);
    *(void *)((char *)a2 + v13) = 0;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::GetRepeatedMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(*(void *)((char *)a2
                                 + *(int *)(*((void *)this + 3)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                     + 8 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9B098](v10, v11, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::MutableRepeatedMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, uint64_t a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!*((unsigned char *)a3 + 52))
  }
    return *(void *)(*(void *)((char *)a2
                                 + *(int *)(*((void *)this + 3)
                                          + 4
                                          * (int)(-286331153
                                                * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))))
                     + 8 * (int)a4);
  uint64_t v10 = (char *)a2 + *((int *)this + 10);
  uint64_t v11 = *((unsigned int *)a3 + 10);

  return MEMORY[0x270F9AE30](v10, v11, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::AddMessage(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::MessageFactory *a4, const char *a5)
{
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ *)*((void *)this + 1);
  if (*((wireless_diagnostics::google::protobuf::internal::_anonymous_namespace_ **)a3 + 7) != v9) {
  if (*((_DWORD *)a3 + 12) != 3)
  }
      a5);
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != 10) {
  if (!a4)
  }
    a4 = (wireless_diagnostics::google::protobuf::MessageFactory *)*((void *)this + 7);
  if (*((unsigned char *)a3 + 52))
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::Message *)((char *)a2 + *((int *)this + 10));
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::AddMessage(v10, a3, a4);
  }
  else
  {
    unint64_t v12 = (int *)((char *)a2
                + *(int *)(*((void *)this + 3)
                         + 4
                         * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3))));
    int v13 = v12[2];
    if (v13 >= v12[3] || (uint64_t v14 = v13, v15 = *(uint64_t **)v12, ++v13, v12[2] = v13, (v16 = v15[v14]) == 0))
    {
      if (v13) {
        uint64_t v17 = **(void **)v12;
      }
      else {
        uint64_t v17 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, void))(*(void *)a4 + 16))(a4, *((void *)a3 + 9));
      }
      uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 24))(v17);
      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>(v12, v16);
    }
    return v16;
  }
}

int *wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>(int *this, uint64_t a2)
{
  int v3 = this;
  uint64_t v4 = this[2];
  int v5 = this[4];
  if (v4 == v5)
  {
    this = (int *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)this);
    int v6 = v3[3] + 1;
LABEL_9:
    void v3[3] = v6;
    goto LABEL_10;
  }
  uint64_t v7 = this[3];
  if (v7 != v5)
  {
    if ((int)v4 < (int)v7) {
      *(void *)(*(void *)this + 8 * v7) = *(void *)(*(void *)this + 8 * v4);
    }
    int v6 = v7 + 1;
    goto LABEL_9;
  }
  this = *(int **)(*(void *)this + 8 * v4);
  if (this) {
    this = (int *)(*(uint64_t (**)(int *))(*(void *)this + 8))(this);
  }
LABEL_10:
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = v3[2];
  int v3[2] = v9 + 1;
  *(void *)(v8 + 8 * v9) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::MutableRawRepeatedField(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::Descriptor *a3, int a4, const char *a5, uint64_t a6)
{
  int v7 = (int)a5;
  if (*((_DWORD *)a3 + 12) != 3) {
      a5);
  }
  if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 11)] != a4) {
  if ((v7 & 0x80000000) == 0 && *(_DWORD *)(*((void *)a3 + 12) + 40) != v7)
  }
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  if (a6 && *((void *)a3 + 9) != a6)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  if (*((unsigned char *)a3 + 52)) {
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableRawRepeatedField((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + *(int *)(a1 + 40)));
  }
  else {
    return a2
  }
         + *(int *)(*(void *)(a1 + 24)
                  + 4 * (int)(-286331153 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 7) + 48)) >> 3)));
}

void sub_2135CE270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::FindKnownExtensionByName(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 40) == -1) {
    return 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByName(*(void *)(a1 + 48), a2);
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (*(void *)(result + 56) == v5) {
      return result;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  if (!*(unsigned char *)(*(void *)(v5 + 32) + 64)) {
    return 0;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::DescriptorPool::FindMessageTypeByName(*(void *)(a1 + 48), a2);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = *(unsigned int *)(result + 104);
  if ((int)v7 < 1) {
    return 0;
  }
  for (uint64_t result = *(void *)(result + 112);
        *(void *)(result + 56) != *(void *)(a1 + 8)
     || *(_DWORD *)(result + 44) != 11
     || *(_DWORD *)(result + 48) != 1
     || *(void *)(result + 72) != v6;
        result += 120)
  {
    if (!--v7) {
      return 0;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection::FindKnownExtensionByNumber(wireless_diagnostics::google::protobuf::internal::GeneratedMessageReflection *this, uint64_t a2)
{
  if (*((_DWORD *)this + 10) == -1) {
    return 0;
  }
  else {
    return wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(*((wireless_diagnostics::google::protobuf::internal::Mutex ***)this + 6), *((const wireless_diagnostics::google::protobuf::Descriptor **)this + 1), a2);
  }
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,wireless_diagnostics::google::protobuf::internal::anonymous namespace'::FieldNumberSorter &,wireless_diagnostics::google::protobuf::FieldDescriptor const**,false>(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (uint64_t *)result;
  while (2)
  {
    uint64_t v10 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = v10;
          uint64_t v11 = (char *)a2 - (char *)v10;
          unint64_t v12 = a2 - v10;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                uint64_t v40 = *(a2 - 1);
                uint64_t v41 = *v10;
                if (*(_DWORD *)(v40 + 40) < *(_DWORD *)(*v10 + 40))
                {
                  *uint64_t v10 = v40;
                  *(a2 - 1) = v41;
                }
                break;
              case 3uLL:
                break;
              case 4uLL:
                break;
              case 5uLL:
                uint64_t v42 = v10 + 1;
                int v43 = v10 + 2;
                uint64_t v44 = v10 + 3;
                uint64_t v45 = *(a2 - 1);
                uint64_t v46 = v10[3];
                if (*(_DWORD *)(v45 + 40) < *(_DWORD *)(v46 + 40))
                {
                  uint64_t *v44 = v45;
                  *(a2 - 1) = v46;
                  uint64_t v47 = *v44;
                  uint64_t v48 = *v43;
                  int v49 = *(_DWORD *)(*v44 + 40);
                  if (v49 < *(_DWORD *)(*v43 + 40))
                  {
                    uint64_t *v43 = v47;
                    uint64_t *v44 = v48;
                    uint64_t v50 = *v42;
                    if (v49 < *(_DWORD *)(*v42 + 40))
                    {
                      v10[1] = v47;
                      v10[2] = v50;
                      uint64_t v51 = *v10;
                      if (v49 < *(_DWORD *)(*v10 + 40))
                      {
                        *uint64_t v10 = v47;
                        v10[1] = v51;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v52 = v10 + 1;
            BOOL v54 = v10 == a2 || v52 == a2;
            if (a4)
            {
              if (!v54)
              {
                uint64_t v55 = 0;
                std::string v56 = v10;
                do
                {
                  uint64_t v58 = *v56;
                  uint64_t v57 = v56[1];
                  std::string v56 = v52;
                  int v59 = *(_DWORD *)(v57 + 40);
                  if (v59 < *(_DWORD *)(v58 + 40))
                  {
                    uint64_t v60 = v55;
                    while (1)
                    {
                      *(uint64_t *)((char *)v10 + v60 + 8) = v58;
                      if (!v60) {
                        break;
                      }
                      uint64_t v58 = *(uint64_t *)((char *)v10 + v60 - 8);
                      v60 -= 8;
                      if (v59 >= *(_DWORD *)(v58 + 40))
                      {
                        long long v61 = (uint64_t *)((char *)v10 + v60 + 8);
                        goto LABEL_85;
                      }
                    }
                    long long v61 = v10;
LABEL_85:
                    *long long v61 = v57;
                  }
                  uint64_t v52 = v56 + 1;
                  v55 += 8;
                }
                while (v56 + 1 != a2);
              }
            }
            else if (!v54)
            {
              do
              {
                uint64_t v92 = *v9;
                uint64_t v91 = v9[1];
                uint64_t v9 = v52;
                int v93 = *(_DWORD *)(v91 + 40);
                if (v93 < *(_DWORD *)(v92 + 40))
                {
                  do
                  {
                    *uint64_t v52 = v92;
                    uint64_t v92 = *(v52 - 2);
                    --v52;
                  }
                  while (v93 < *(_DWORD *)(v92 + 40));
                  *uint64_t v52 = v91;
                }
                uint64_t v52 = v9 + 1;
              }
              while (v9 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v62 = (v12 - 2) >> 1;
              int64_t v63 = v62;
              do
              {
                int64_t v64 = v63;
                if (v62 >= v63)
                {
                  uint64_t v65 = (2 * v63) | 1;
                  std::string v66 = &v10[v65];
                  uint64_t v67 = *v66;
                  if (2 * v64 + 2 < (uint64_t)v12)
                  {
                    uint64_t result = *(unsigned int *)(v67 + 40);
                    if ((int)result < *(_DWORD *)(v66[1] + 40))
                    {
                      uint64_t v67 = v66[1];
                      ++v66;
                      uint64_t v65 = 2 * v64 + 2;
                    }
                  }
                  std::string v68 = &v10[v64];
                  uint64_t v69 = *v68;
                  int v70 = *(_DWORD *)(*v68 + 40);
                  if (*(_DWORD *)(v67 + 40) >= v70)
                  {
                    do
                    {
                      int v71 = v66;
                      uint64_t *v68 = v67;
                      if (v62 < v65) {
                        break;
                      }
                      uint64_t result = (2 * v65) | 1;
                      std::string v66 = &v10[result];
                      uint64_t v72 = 2 * v65 + 2;
                      uint64_t v67 = *v66;
                      if (v72 < (uint64_t)v12 && *(_DWORD *)(v67 + 40) < *(_DWORD *)(v66[1] + 40))
                      {
                        uint64_t v67 = v66[1];
                        ++v66;
                        uint64_t result = v72;
                      }
                      std::string v68 = v71;
                      uint64_t v65 = result;
                    }
                    while (*(_DWORD *)(v67 + 40) >= v70);
                    *int v71 = v69;
                  }
                }
                int64_t v63 = v64 - 1;
              }
              while (v64);
              uint64_t v73 = (unint64_t)v11 >> 3;
              do
              {
                uint64_t v74 = 0;
                uint64_t v75 = *v10;
                int v76 = v10;
                do
                {
                  int v77 = &v76[v74];
                  uint64_t v80 = v77[1];
                  uint64_t v78 = v77 + 1;
                  uint64_t v79 = v80;
                  uint64_t v81 = (2 * v74) | 1;
                  uint64_t v82 = 2 * v74 + 2;
                  if (v82 < v73)
                  {
                    uint64_t result = *(unsigned int *)(v79 + 40);
                    if ((int)result < *(_DWORD *)(v78[1] + 40))
                    {
                      uint64_t v79 = v78[1];
                      ++v78;
                      uint64_t v81 = v82;
                    }
                  }
                  uint64_t *v76 = v79;
                  int v76 = v78;
                  uint64_t v74 = v81;
                }
                while (v81 <= (uint64_t)((unint64_t)(v73 - 2) >> 1));
                if (v78 == --a2)
                {
                  *uint64_t v78 = v75;
                }
                else
                {
                  *uint64_t v78 = *a2;
                  *a2 = v75;
                  uint64_t v83 = (char *)v78 - (char *)v10 + 8;
                  if (v83 >= 9)
                  {
                    unint64_t v84 = (((unint64_t)v83 >> 3) - 2) >> 1;
                    uint64_t v85 = &v10[v84];
                    uint64_t v86 = *v85;
                    uint64_t v87 = *v78;
                    int v88 = *(_DWORD *)(*v78 + 40);
                    if (*(_DWORD *)(*v85 + 40) < v88)
                    {
                      do
                      {
                        int v89 = v85;
                        *uint64_t v78 = v86;
                        if (!v84) {
                          break;
                        }
                        unint64_t v84 = (v84 - 1) >> 1;
                        uint64_t v85 = &v10[v84];
                        uint64_t v86 = *v85;
                        uint64_t v78 = v89;
                      }
                      while (*(_DWORD *)(*v85 + 40) < v88);
                      *int v89 = v87;
                    }
                  }
                }
              }
              while (v73-- > 2);
            }
            return result;
          }
          unint64_t v13 = v12 >> 1;
          uint64_t v14 = &v10[v12 >> 1];
          if ((unint64_t)v11 >= 0x401)
          {
            uint64_t v15 = *v9;
            *uint64_t v9 = *v14;
            *uint64_t v14 = v15;
          }
          else
          {
          }
          --a3;
          uint64_t v16 = *v9;
          if (a4) {
            break;
          }
          int v17 = *(_DWORD *)(v16 + 40);
          if (*(_DWORD *)(*(v9 - 1) + 40) < v17) {
            goto LABEL_13;
          }
          if (v17 >= *(_DWORD *)(*(a2 - 1) + 40))
          {
            uint64_t v32 = v9 + 1;
            do
            {
              uint64_t v10 = v32;
              if (v32 >= a2) {
                break;
              }
              ++v32;
            }
            while (v17 >= *(_DWORD *)(*v10 + 40));
          }
          else
          {
            uint64_t v10 = v9;
            do
            {
              uint64_t v31 = v10[1];
              ++v10;
            }
            while (v17 >= *(_DWORD *)(v31 + 40));
          }
          uint64_t v33 = a2;
          if (v10 < a2)
          {
            uint64_t v33 = a2;
            do
              uint64_t v34 = *--v33;
            while (v17 < *(_DWORD *)(v34 + 40));
          }
          if (v10 < v33)
          {
            uint64_t v35 = *v10;
            uint64_t v36 = *v33;
            do
            {
              *uint64_t v10 = v36;
              uint64_t *v33 = v35;
              do
              {
                uint64_t v37 = v10[1];
                ++v10;
                uint64_t v35 = v37;
              }
              while (v17 >= *(_DWORD *)(v37 + 40));
              do
              {
                uint64_t v38 = *--v33;
                uint64_t v36 = v38;
              }
              while (v17 < *(_DWORD *)(v38 + 40));
            }
            while (v10 < v33);
          }
          uint64_t v39 = v10 - 1;
          BOOL v4 = v10 - 1 >= v9;
          BOOL v5 = v10 - 1 == v9;
          if (v10 - 1 != v9) {
            *uint64_t v9 = *v39;
          }
          a4 = 0;
          *uint64_t v39 = v16;
        }
        int v17 = *(_DWORD *)(v16 + 40);
LABEL_13:
        uint64_t v18 = 0;
        do
          uint64_t v19 = v9[++v18];
        while (*(_DWORD *)(v19 + 40) < v17);
        unint64_t v20 = &v9[v18];
        uint64_t v21 = a2;
        if (v18 == 1)
        {
          uint64_t v21 = a2;
          do
          {
            if (v20 >= v21) {
              break;
            }
            uint64_t v23 = *--v21;
          }
          while (*(_DWORD *)(v23 + 40) >= v17);
        }
        else
        {
          do
            uint64_t v22 = *--v21;
          while (*(_DWORD *)(v22 + 40) >= v17);
        }
        if (v20 >= v21)
        {
          uint64_t v29 = v20 - 1;
        }
        else
        {
          uint64_t v24 = *v21;
          uint64_t v25 = &v9[v18];
          uint64_t v26 = v21;
          do
          {
            *uint64_t v25 = v24;
            *uint64_t v26 = v19;
            do
            {
              uint64_t v27 = v25[1];
              ++v25;
              uint64_t v19 = v27;
            }
            while (*(_DWORD *)(v27 + 40) < v17);
            do
            {
              uint64_t v28 = *--v26;
              uint64_t v24 = v28;
            }
            while (*(_DWORD *)(v28 + 40) >= v17);
          }
          while (v25 < v26);
          uint64_t v29 = v25 - 1;
        }
        if (v29 != v9) {
          *uint64_t v9 = *v29;
        }
        uint64_t *v29 = v16;
        if (v20 >= v21) {
          break;
        }
LABEL_34:
        a4 = 0;
        uint64_t v10 = v29 + 1;
      }
      uint64_t v10 = v29 + 1;
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_34;
      }
    }
    a2 = v29;
    if (!v30) {
      continue;
    }
    return result;
  }
}

uint64_t *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,wireless_diagnostics::google::protobuf::internal::anonymous namespace'::FieldNumberSorter &,wireless_diagnostics::google::protobuf::FieldDescriptor const**>(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *result;
  int v5 = *(_DWORD *)(*a2 + 40);
  int v6 = *(_DWORD *)(*result + 40);
  uint64_t v7 = *a3;
  int v8 = *(_DWORD *)(*a3 + 40);
  if (v5 >= v6)
  {
    if (v8 < v5)
    {
      *a2 = v7;
      *a3 = v3;
      uint64_t v9 = *result;
      if (*(_DWORD *)(*a2 + 40) < *(_DWORD *)(*result + 40))
      {
        *uint64_t result = *a2;
        *a2 = v9;
      }
    }
  }
  else
  {
    if (v8 >= v5)
    {
      *uint64_t result = v3;
      *a2 = v4;
      if (*(_DWORD *)(*a3 + 40) >= v6) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      *uint64_t result = v7;
    }
    *a3 = v4;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,wireless_diagnostics::google::protobuf::internal::anonymous namespace'::FieldNumberSorter &,wireless_diagnostics::google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (*(_DWORD *)(v6 + 40) < *(_DWORD *)(*a1 + 40))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      return 1;
    case 4:
      return 1;
    case 5:
      uint64_t v18 = a1 + 1;
      uint64_t v19 = a1 + 2;
      unint64_t v20 = a1 + 3;
      uint64_t v21 = *(a2 - 1);
      uint64_t v22 = a1[3];
      if (*(_DWORD *)(v21 + 40) < *(_DWORD *)(v22 + 40))
      {
        *unint64_t v20 = v21;
        *(a2 - 1) = v22;
        uint64_t v23 = *v20;
        uint64_t v24 = *v19;
        int v25 = *(_DWORD *)(*v20 + 40);
        if (v25 < *(_DWORD *)(*v19 + 40))
        {
          *uint64_t v19 = v23;
          *unint64_t v20 = v24;
          uint64_t v26 = *v18;
          if (v25 < *(_DWORD *)(*v18 + 40))
          {
            a1[1] = v23;
            a1[2] = v26;
            uint64_t v27 = *a1;
            if (v25 < *(_DWORD *)(*a1 + 40))
            {
              *a1 = v23;
              a1[1] = v27;
            }
          }
        }
      }
      return 1;
    default:
      int v8 = a1 + 2;
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    uint64_t v13 = *v8;
    int v14 = *(_DWORD *)(*v9 + 40);
    if (v14 < *(_DWORD *)(*v8 + 40))
    {
      uint64_t v15 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v15) = v13;
        uint64_t v16 = v15 - 8;
        if (v15 == 8) {
          break;
        }
        uint64_t v13 = *(uint64_t *)((char *)a1 + v15 - 16);
        v15 -= 8;
        if (v14 >= *(_DWORD *)(v13 + 40))
        {
          int v17 = (uint64_t *)((char *)a1 + v16);
          goto LABEL_13;
        }
      }
      int v17 = a1;
LABEL_13:
      *int v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t *std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,wireless_diagnostics::google::protobuf::internal::anonymous namespace'::FieldNumberSorter &,wireless_diagnostics::google::protobuf::FieldDescriptor const**>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v9 = *a3;
  if (*(_DWORD *)(*a4 + 40) < *(_DWORD *)(*a3 + 40))
  {
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = *a2;
    if (*(_DWORD *)(*a3 + 40) < *(_DWORD *)(*a2 + 40))
    {
      *a2 = *a3;
      *a3 = v10;
      uint64_t v11 = *a1;
      if (*(_DWORD *)(*a2 + 40) < *(_DWORD *)(*a1 + 40))
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<long long>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::RepeatedField<BOOL>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    uint64_t v3 = result;
    int v4 = 2 * v2;
    if (v4 <= a2) {
      int v4 = a2;
    }
    if (v4 <= 4) {
      int v5 = 4;
    }
    else {
      int v5 = v4;
    }
    *(_DWORD *)(v3 + 12) = v5;
    operator new[]();
  }
  return result;
}

double wireless_diagnostics::google::protobuf::DescriptorPool::Tables::Tables(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this)
{
  *((void *)this + 6) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *((_DWORD *)this + 58) = 1065353216;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_DWORD *)this + 68) = 1065353216;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((void *)this + 35) = (char *)this + 288;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 6) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *((_DWORD *)this + 58) = 1065353216;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_DWORD *)this + 68) = 1065353216;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((void *)this + 35) = (char *)this + 288;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::~Tables(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this)
{
  int v2 = (void **)((char *)this + 128);
  wireless_diagnostics::google::protobuf::STLDeleteElements<std::vector<wireless_diagnostics::google::protobuf::Message *>>((void *)this + 16);
  uint64_t v3 = *((void *)this + 22);
  if (*((void *)this + 23) != v3)
  {
    unint64_t v4 = 0;
    do
    {
      operator delete(*(void **)(v3 + 8 * v4++));
      uint64_t v3 = *((void *)this + 22);
    }
    while (v4 < (*((void *)this + 23) - v3) >> 3);
  }
  wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(*((void *)this + 13), *((uint64_t **)this + 14));
  *((void *)this + 14) = *((void *)this + 13);
  wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<wireless_diagnostics::google::protobuf::FileDescriptorTables **>>(*((wireless_diagnostics::google::protobuf::FileDescriptorTables **)this + 19), *((wireless_diagnostics::google::protobuf::FileDescriptorTables **)this + 20));
  *((void *)this + 20) = *((void *)this + 19);
  int v5 = (void *)*((void *)this + 47);
  if (v5)
  {
    *((void *)this + 48) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 44);
  if (v6)
  {
    *((void *)this + 45) = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)*((void *)this + 41);
  if (v7)
  {
    *((void *)this + 42) = v7;
    operator delete(v7);
  }
  int v8 = (void *)*((void *)this + 38);
  if (v8)
  {
    *((void *)this + 39) = v8;
    operator delete(v8);
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)this + 280, *((void **)this + 36));
  std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table((uint64_t)this + 240);
  uint64_t v9 = (void *)*((void *)this + 27);
  if (v9)
  {
    do
    {
      uint64_t v10 = (void *)*v9;
      operator delete(v9);
      uint64_t v9 = v10;
    }
    while (v10);
  }
  uint64_t v11 = (void *)*((void *)this + 25);
  *((void *)this + 25) = 0;
  if (v11) {
    operator delete(v11);
  }
  uint64_t v12 = (void *)*((void *)this + 22);
  if (v12)
  {
    *((void *)this + 23) = v12;
    operator delete(v12);
  }
  uint64_t v13 = (void *)*((void *)this + 19);
  if (v13)
  {
    *((void *)this + 20) = v13;
    operator delete(v13);
  }
  int v14 = *v2;
  if (*v2)
  {
    *((void *)this + 17) = v14;
    operator delete(v14);
  }
  uint64_t v15 = (void *)*((void *)this + 13);
  if (v15)
  {
    *((void *)this + 14) = v15;
    operator delete(v15);
  }
  std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table((uint64_t)this + 64);
  std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)this + 24);
  uint64_t v16 = (void **)this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v16);
}

void *wireless_diagnostics::google::protobuf::STLDeleteElements<std::vector<wireless_diagnostics::google::protobuf::Message *>>(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    int v2 = (void *)*result;
    uint64_t v3 = (void *)result[1];
    if ((void *)*result != v3)
    {
      do
      {
        unint64_t v4 = (void *)*v2++;
        double result = v4;
        if (v4) {
          double result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
        }
      }
      while (v2 != v3);
      int v2 = (void *)*v1;
    }
    v1[1] = v2;
  }
  return result;
}

double wireless_diagnostics::google::protobuf::FileDescriptorTables::FileDescriptorTables(wireless_diagnostics::google::protobuf::FileDescriptorTables *this)
{
  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_DWORD *)this + 28) = 1065353216;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_DWORD *)this + 38) = 1065353216;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 1065353216;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_DWORD *)this + 28) = 1065353216;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_DWORD *)this + 38) = 1065353216;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 1065353216;
  return result;
}

void wireless_diagnostics::google::protobuf::FileDescriptorTables::~FileDescriptorTables(wireless_diagnostics::google::protobuf::FileDescriptorTables *this)
{
  int v2 = (void *)*((void *)this + 22);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      int v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = (void *)*((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v4) {
    operator delete(v4);
  }
  int v5 = (void *)*((void *)this + 17);
  if (v5)
  {
    do
    {
      uint64_t v6 = (void *)*v5;
      operator delete(v5);
      int v5 = v6;
    }
    while (v6);
  }
  uint64_t v7 = (void *)*((void *)this + 15);
  *((void *)this + 15) = 0;
  if (v7) {
    operator delete(v7);
  }
  int v8 = (void *)*((void *)this + 12);
  if (v8)
  {
    do
    {
      uint64_t v9 = (void *)*v8;
      operator delete(v8);
      int v8 = v9;
    }
    while (v9);
  }
  uint64_t v10 = (void *)*((void *)this + 10);
  *((void *)this + 10) = 0;
  if (v10) {
    operator delete(v10);
  }
  uint64_t v11 = (void *)*((void *)this + 7);
  if (v11)
  {
    do
    {
      uint64_t v12 = (void *)*v11;
      operator delete(v11);
      uint64_t v11 = v12;
    }
    while (v12);
  }
  uint64_t v13 = (void *)*((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v13) {
    operator delete(v13);
  }
  int v14 = (void *)*((void *)this + 2);
  if (v14)
  {
    do
    {
      uint64_t v15 = (void *)*v14;
      operator delete(v14);
      int v14 = v15;
    }
    while (v15);
  }
  uint64_t v16 = *(void **)this;
  *(void *)this = 0;
  if (v16) {
    operator delete(v16);
  }
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddCheckpoint(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this)
{
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(v18, this);
  uint64_t v3 = (_OWORD *)*((void *)this + 39);
  unint64_t v2 = *((void *)this + 40);
  if ((unint64_t)v3 >= v2)
  {
    uint64_t v6 = *((void *)this + 38);
    uint64_t v7 = 0x6DB6DB6DB6DB6DB7 * (((uint64_t)v3 - v6) >> 2);
    unint64_t v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) > 0x924924924924924) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v2 - v6) >> 2);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x492492492492492) {
      unint64_t v10 = 0x924924924924924;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10) {
      uint64_t v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::DescriptorPool::Tables::CheckPoint>>((uint64_t)this + 320, v10);
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = &v11[28 * v7];
    uint64_t v13 = &v11[28 * v10];
    long long v14 = *(_OWORD *)v18;
    *(_OWORD *)(v12 + 12) = *(_OWORD *)&v18[12];
    *(_OWORD *)uint64_t v12 = v14;
    int v5 = v12 + 28;
    uint64_t v16 = (char *)*((void *)this + 38);
    uint64_t v15 = (char *)*((void *)this + 39);
    if (v15 != v16)
    {
      do
      {
        long long v17 = *(_OWORD *)(v15 - 28);
        *((_OWORD *)v12 - 1) = *((_OWORD *)v15 - 1);
        *(_OWORD *)(v12 - 28) = v17;
        v12 -= 28;
        v15 -= 28;
      }
      while (v15 != v16);
      uint64_t v15 = (char *)*((void *)this + 38);
    }
    *((void *)this + 38) = v12;
    *((void *)this + 39) = v5;
    *((void *)this + 40) = v13;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    long long v4 = *(_OWORD *)v18;
    *(_OWORD *)((char *)v3 + 12) = *(_OWORD *)&v18[12];
    *uint64_t v3 = v4;
    int v5 = (char *)v3 + 28;
  }
  *((void *)this + 39) = v5;
}

void *wireless_diagnostics::google::protobuf::DescriptorPool::Tables::ClearLastCheckpoint(void *this)
{
  uint64_t v1 = this[38];
  uint64_t v2 = this[39] - 28;
  this[39] = v2;
  if (v1 == v2)
  {
    this[42] = this[41];
    this[45] = this[44];
    this[48] = this[47];
  }
  return this;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v39 = *((void *)this + 39);
  unint64_t v2 = *(int *)(v39 - 12);
  uint64_t v3 = *((void *)this + 41);
  uint64_t v4 = *((void *)this + 42);
  if (v2 >= (v4 - v3) >> 3) {
    goto LABEL_55;
  }
  uint64_t v37 = (char *)this + 216;
  do
  {
    int v5 = *(const char **)(v3 + 8 * v2);
    char v6 = *v5;
    if (*v5)
    {
      unint64_t v7 = 0;
      unint64_t v8 = (unsigned __int8 *)(v5 + 1);
      do
      {
        unint64_t v7 = 5 * v7 + v6;
        int v9 = *v8++;
        char v6 = v9;
      }
      while (v9);
    }
    else
    {
      unint64_t v7 = 0;
    }
    int8x8_t v10 = *(int8x8_t *)((char *)this + 208);
    if (!*(void *)&v10) {
      goto LABEL_54;
    }
    uint8x8_t v11 = (uint8x8_t)vcnt_s8(v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v13 = v7;
      if (v7 >= *(void *)&v10) {
        unint64_t v13 = v7 % *(void *)&v10;
      }
    }
    else
    {
      unint64_t v13 = (*(void *)&v10 - 1) & v7;
    }
    long long v14 = *(void ***)(*((void *)this + 25) + 8 * v13);
    if (!v14) {
      goto LABEL_54;
    }
    uint64_t v15 = (char *)*v14;
    if (!*v14) {
      goto LABEL_54;
    }
    uint64_t v38 = *((void *)this + 25);
    uint64_t v40 = *(void *)&v10 - 1;
    while (1)
    {
      unint64_t v16 = *((void *)v15 + 1);
      if (v16 == v7) {
        break;
      }
      if (v12 > 1)
      {
        if (v16 >= *(void *)&v10) {
          v16 %= *(void *)&v10;
        }
      }
      else
      {
        v16 &= v40;
      }
      if (v16 != v13) {
        goto LABEL_54;
      }
LABEL_24:
      uint64_t v15 = *(char **)v15;
      if (!v15) {
        goto LABEL_54;
      }
    }
    if (strcmp(*((const char **)v15 + 2), v5)) {
      goto LABEL_24;
    }
    if (v12 > 1)
    {
      uint64_t v17 = v38;
      if (v7 >= *(void *)&v10) {
        v7 %= *(void *)&v10;
      }
    }
    else
    {
      v7 &= v40;
      uint64_t v17 = v38;
    }
    uint64_t v18 = *(char **)v15;
    uint64_t v19 = *(char **)(v17 + 8 * v7);
    do
    {
      unint64_t v20 = v19;
      uint64_t v19 = *(char **)v19;
    }
    while (v19 != v15);
    if (v20 == v37) {
      goto LABEL_43;
    }
    unint64_t v21 = *((void *)v20 + 1);
    if (v12 > 1)
    {
      if (v21 >= *(void *)&v10) {
        v21 %= *(void *)&v10;
      }
    }
    else
    {
      v21 &= v40;
    }
    if (v21 == v7)
    {
LABEL_45:
      if (v18)
      {
        unint64_t v22 = *((void *)v18 + 1);
        goto LABEL_47;
      }
    }
    else
    {
LABEL_43:
      if (!v18) {
        goto LABEL_44;
      }
      unint64_t v22 = *((void *)v18 + 1);
      if (v12 > 1)
      {
        unint64_t v23 = *((void *)v18 + 1);
        if (v22 >= *(void *)&v10) {
          unint64_t v23 = v22 % *(void *)&v10;
        }
      }
      else
      {
        unint64_t v23 = v22 & v40;
      }
      if (v23 != v7)
      {
LABEL_44:
        *(void *)(v17 + 8 * v7) = 0;
        uint64_t v18 = *(char **)v15;
        goto LABEL_45;
      }
LABEL_47:
      if (v12 > 1)
      {
        if (v22 >= *(void *)&v10) {
          v22 %= *(void *)&v10;
        }
      }
      else
      {
        v22 &= v40;
      }
      if (v22 != v7)
      {
        *(void *)(*((void *)this + 25) + 8 * v22) = v20;
        uint64_t v18 = *(char **)v15;
      }
    }
    *(void *)unint64_t v20 = v18;
    *(void *)uint64_t v15 = 0;
    --*((void *)this + 28);
    operator delete(v15);
    uint64_t v3 = *((void *)this + 41);
    uint64_t v4 = *((void *)this + 42);
LABEL_54:
    ++v2;
  }
  while (v2 < (v4 - v3) >> 3);
LABEL_55:
  unint64_t v24 = *(int *)(v39 - 8);
  uint64_t v25 = *((void *)this + 44);
  if (v24 < (*((void *)this + 45) - v25) >> 3)
  {
    uint64_t v26 = 8 * v24;
    do
    {
      std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__erase_unique<char const*>((void *)this + 30, (const char **)(v25 + v26));
      ++v24;
      uint64_t v25 = *((void *)this + 44);
      v26 += 8;
    }
    while (v24 < (*((void *)this + 45) - v25) >> 3);
  }
  unint64_t v27 = *(int *)(v39 - 4);
  uint64_t v28 = *((void *)this + 47);
  if (v27 < (*((void *)this + 48) - v28) >> 4)
  {
    uint64_t v29 = 16 * v27;
    do
    {
      std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>((uint64_t **)this + 35, (unint64_t *)(v28 + v29));
      ++v27;
      uint64_t v28 = *((void *)this + 47);
      v29 += 16;
    }
    while (v27 < (*((void *)this + 48) - v28) >> 4);
  }
  std::vector<char const*>::resize((uint64_t)this + 328, *(int *)(v39 - 12));
  std::vector<char const*>::resize((uint64_t)this + 352, *(int *)(v39 - 8));
  std::vector<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>::resize((uint64_t)this + 376, *(int *)(v39 - 4));
  wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(*((void *)this + 13) + 8 * *(int *)(v39 - 28), *((uint64_t **)this + 14));
  BOOL v30 = (uint64_t *)(*((void *)this + 16) + 8 * *(int *)(v39 - 24));
  uint64_t v31 = (uint64_t *)*((void *)this + 17);
  while (v30 != v31)
  {
    uint64_t v33 = *v30++;
    uint64_t v32 = v33;
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
    }
  }
  wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<wireless_diagnostics::google::protobuf::FileDescriptorTables **>>((wireless_diagnostics::google::protobuf::FileDescriptorTables *)(*((void *)this + 19) + 8 * *(int *)(v39 - 20)), *((wireless_diagnostics::google::protobuf::FileDescriptorTables **)this + 20));
  unint64_t v34 = *(int *)(v39 - 16);
  uint64_t v35 = *((void *)this + 22);
  for (uint64_t i = *((void *)this + 23); v34 < (i - v35) >> 3; uint64_t i = *((void *)this + 23))
  {
    operator delete(*(void **)(v35 + 8 * v34++));
    uint64_t v35 = *((void *)this + 22);
  }
  std::vector<char const*>::resize((uint64_t)this + 104, *(int *)(v39 - 28));
  std::vector<char const*>::resize((uint64_t)this + 128, *(int *)(v39 - 24));
  std::vector<char const*>::resize((uint64_t)this + 152, *(int *)(v39 - 20));
  std::vector<char const*>::resize((uint64_t)this + 176, *(int *)(v39 - 16));
  *((void *)this + 39) -= 28;
}

void std::vector<char const*>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    std::vector<char const*>::__append((void **)a1, a2 - v2);
  }
}

void std::vector<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    std::vector<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>::__append((void **)a1, a2 - v2);
  }
}

uint64_t wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<std::string **>>(uint64_t result, uint64_t *a2)
{
  if ((uint64_t *)result != a2)
  {
    uint64_t v3 = (uint64_t *)result;
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if (v5)
      {
        if (*(char *)(v4 + 23) < 0) {
          operator delete(*(void **)v4);
        }
        double result = MEMORY[0x21668DB60](v4, 0x1012C40EC159624);
      }
    }
    while (v3 != a2);
  }
  return result;
}

wireless_diagnostics::google::protobuf::FileDescriptorTables *wireless_diagnostics::google::protobuf::STLDeleteContainerPointers<std::__wrap_iter<wireless_diagnostics::google::protobuf::FileDescriptorTables **>>(wireless_diagnostics::google::protobuf::FileDescriptorTables *result, wireless_diagnostics::google::protobuf::FileDescriptorTables *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = *(wireless_diagnostics::google::protobuf::FileDescriptorTables **)v3;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::FileDescriptorTables *)((char *)v3 + 8);
      double result = v4;
      if (v4)
      {
        wireless_diagnostics::google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
        double result = (wireless_diagnostics::google::protobuf::FileDescriptorTables *)MEMORY[0x21668DB60]();
      }
    }
    while (v3 != a2);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddFile(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)(a1 + 30);
  uint64_t v5 = *(void **)a2;
  if (*(char *)(*(void *)a2 + 23) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  *(void *)&long long v24 = v5;
  *((void *)&v24 + 1) = a2;
  std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,wireless_diagnostics::google::protobuf::FileDescriptor const*>>(v4, (const char **)&v24, &v24);
  char v7 = v6;
  if (v6)
  {
    unint64_t v8 = *(void **)a2;
    if (*(char *)(*(void *)a2 + 23) < 0) {
      unint64_t v8 = (void *)*v8;
    }
    int8x8_t v10 = (void *)a1[45];
    unint64_t v9 = a1[46];
    if ((unint64_t)v10 >= v9)
    {
      uint64_t v12 = a1[44];
      uint64_t v13 = ((uint64_t)v10 - v12) >> 3;
      if ((unint64_t)(v13 + 1) >> 61) {
        std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v14 = v9 - v12;
      uint64_t v15 = v14 >> 2;
      if (v14 >> 2 <= (unint64_t)(v13 + 1)) {
        uint64_t v15 = v13 + 1;
      }
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v16 = v15;
      }
      if (v16) {
        uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(a1 + 46), v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v18 = &v17[8 * v13];
      uint64_t v19 = &v17[8 * v16];
      *(void *)uint64_t v18 = v8;
      uint8x8_t v11 = v18 + 8;
      unint64_t v21 = (char *)a1[44];
      unint64_t v20 = (char *)a1[45];
      if (v20 != v21)
      {
        do
        {
          uint64_t v22 = *((void *)v20 - 1);
          v20 -= 8;
          *((void *)v18 - 1) = v22;
          v18 -= 8;
        }
        while (v20 != v21);
        unint64_t v20 = (char *)a1[44];
      }
      a1[44] = v18;
      a1[45] = v11;
      a1[46] = v19;
      if (v20) {
        operator delete(v20);
      }
    }
    else
    {
      *int8x8_t v10 = v8;
      uint8x8_t v11 = v10 + 1;
    }
    a1[45] = v11;
  }
  return v7 & 1;
}

void wireless_diagnostics::google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(wireless_diagnostics::google::protobuf::FileDescriptorTables *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2)
{
  int8x8_t v10 = a2;
  if (*((unsigned char *)a2 + 52))
  {
    uint64_t v4 = *((void *)a2 + 8);
    if (v4) {
      goto LABEL_6;
    }
    uint64_t v5 = (char *)a2 + 32;
  }
  else
  {
    uint64_t v5 = (char *)a2 + 56;
  }
  uint64_t v4 = *(void *)v5;
LABEL_6:
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0) {
    uint64_t v6 = *(void *)v6;
  }
  v9[0] = v4;
  v9[1] = v6;
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0) {
    uint64_t v7 = *(void *)v7;
  }
  v8[0] = v4;
  v8[1] = v7;
}

void wireless_diagnostics::google::protobuf::InsertIfNotPresent<wireless_diagnostics::google::protobuf::hash_map<std::pair<void const*,char const*>,wireless_diagnostics::google::protobuf::FieldDescriptor const*,wireless_diagnostics::google::protobuf::anonymous namespace'::PointerStringPairHash,wireless_diagnostics::google::protobuf::anonymous namespace'::PointerStringPairEqual>,std::pair<void const*,char const*>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>(float *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *a2;
  uint64_t v5 = (const char *)a2[1];
  char v7 = *v5;
  if (*v5)
  {
    uint64_t v8 = 0;
    unint64_t v9 = (unsigned __int8 *)(v5 + 1);
    do
    {
      uint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v11 = *a3;
  uint64_t v12 = v8 - v6;
  unint64_t v13 = v12 + (v6 << 16);
  unint64_t v14 = *((void *)a1 + 1);
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      unint64_t v3 = v12 + (v6 << 16);
      if (v13 >= v14) {
        unint64_t v3 = v13 % v14;
      }
    }
    else
    {
      unint64_t v3 = (v14 - 1) & v13;
    }
    uint64_t v17 = *(uint64_t ****)(*(void *)a1 + 8 * v3);
    if (v17)
    {
      for (uint64_t i = *v17; i; uint64_t i = (uint64_t **)*i)
      {
        unint64_t v19 = (unint64_t)i[1];
        if (v19 == v13)
        {
          if (i[2] == (uint64_t *)v6 && !strcmp((const char *)i[3], v5)) {
            return;
          }
        }
        else
        {
          if (v16 > 1)
          {
            if (v19 >= v14) {
              v19 %= v14;
            }
          }
          else
          {
            v19 &= v14 - 1;
          }
          if (v19 != v3) {
            break;
          }
        }
      }
    }
  }
  unint64_t v20 = operator new(0x28uLL);
  *unint64_t v20 = 0;
  v20[1] = v13;
  v20[2] = v6;
  v20[3] = v5;
  v20[4] = v11;
  float v21 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v22 = a1[8];
  if (!v14 || (float)(v22 * (float)v14) < v21)
  {
    BOOL v23 = (v14 & (v14 - 1)) == 0;
    if (v14 < 3) {
      BOOL v23 = 0;
    }
    unint64_t v24 = (2 * v14) | !v23;
    unint64_t v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25) {
      int8x8_t prime = (int8x8_t)v25;
    }
    else {
      int8x8_t prime = (int8x8_t)v24;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v14 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v14) {
      goto LABEL_36;
    }
    if (*(void *)&prime < v14)
    {
      unint64_t v33 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v14 < 3 || (uint8x8_t v34 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v34.i16[0] = vaddlv_u8(v34), v34.u32[0] > 1uLL))
      {
        unint64_t v33 = std::__next_prime(v33);
      }
      else
      {
        uint64_t v35 = 1 << -(char)__clz(v33 - 1);
        if (v33 >= 2) {
          unint64_t v33 = v35;
        }
      }
      if (*(void *)&prime <= v33) {
        int8x8_t prime = (int8x8_t)v33;
      }
      if (*(void *)&prime >= v14)
      {
        unint64_t v14 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_36:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v27 = operator new(8 * *(void *)&prime);
          uint64_t v28 = *(void **)a1;
          *(void *)a1 = v27;
          if (v28) {
            operator delete(v28);
          }
          uint64_t v29 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v29++) = 0;
          while (*(void *)&prime != v29);
          BOOL v30 = (void *)*((void *)a1 + 2);
          if (v30)
          {
            unint64_t v31 = v30[1];
            uint8x8_t v32 = (uint8x8_t)vcnt_s8(prime);
            v32.i16[0] = vaddlv_u8(v32);
            if (v32.u32[0] > 1uLL)
            {
              if (v31 >= *(void *)&prime) {
                v31 %= *(void *)&prime;
              }
            }
            else
            {
              v31 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v31) = a1 + 4;
            uint64_t v36 = (void *)*v30;
            if (*v30)
            {
              do
              {
                unint64_t v37 = v36[1];
                if (v32.u32[0] > 1uLL)
                {
                  if (v37 >= *(void *)&prime) {
                    v37 %= *(void *)&prime;
                  }
                }
                else
                {
                  v37 &= *(void *)&prime - 1;
                }
                if (v37 != v31)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v37))
                  {
                    *(void *)(*(void *)a1 + 8 * v37) = v30;
                    goto LABEL_61;
                  }
                  *BOOL v30 = *v36;
                  *uint64_t v36 = **(void **)(*(void *)a1 + 8 * v37);
                  **(void **)(*(void *)a1 + 8 * v37) = v36;
                  uint64_t v36 = v30;
                }
                unint64_t v37 = v31;
LABEL_61:
                BOOL v30 = v36;
                uint64_t v36 = (void *)*v36;
                unint64_t v31 = v37;
              }
              while (v36);
            }
          }
          unint64_t v14 = (unint64_t)prime;
          goto LABEL_65;
        }
        uint64_t v41 = *(void **)a1;
        *(void *)a1 = 0;
        if (v41) {
          operator delete(v41);
        }
        unint64_t v14 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_65:
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14) {
        unint64_t v3 = v13 % v14;
      }
      else {
        unint64_t v3 = v13;
      }
    }
    else
    {
      unint64_t v3 = (v14 - 1) & v13;
    }
  }
  uint64_t v38 = *(void **)a1;
  uint64_t v39 = *(void **)(*(void *)a1 + 8 * v3);
  if (v39)
  {
    *unint64_t v20 = *v39;
LABEL_78:
    *uint64_t v39 = v20;
    goto LABEL_79;
  }
  *unint64_t v20 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v20;
  v38[v3] = a1 + 4;
  if (*v20)
  {
    unint64_t v40 = *(void *)(*v20 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v40 >= v14) {
        v40 %= v14;
      }
    }
    else
    {
      v40 &= v14 - 1;
    }
    uint64_t v39 = (void *)(*(void *)a1 + 8 * v40);
    goto LABEL_78;
  }
LABEL_79:
  ++*((void *)a1 + 3);
}

void sub_2135D00C4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorTables::AddFieldByNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(int *)(a2 + 40);
  unint64_t v7 = v6 - v5 + (v5 << 16);
  unint64_t v8 = *(void *)(a1 + 128);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v2 = v6 - v5 + (v5 << 16);
      if (v7 >= v8) {
        unint64_t v2 = v7 % v8;
      }
    }
    else
    {
      unint64_t v2 = (v8 - 1) & v7;
    }
    int v10 = *(uint64_t ***)(*(void *)(a1 + 120) + 8 * v2);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6) {
            return 0;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v2) {
            break;
          }
        }
      }
    }
  }
  unint64_t v14 = operator new(0x28uLL);
  *unint64_t v14 = 0;
  v14[1] = v7;
  v14[2] = v5;
  *((_DWORD *)v14 + 6) = v6;
  v14[4] = a2;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 144) + 1);
  float v16 = *(float *)(a1 + 152);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    BOOL v17 = (v8 & (v8 - 1)) == 0;
    if (v8 < 3) {
      BOOL v17 = 0;
    }
    unint64_t v18 = (2 * v8) | !v17;
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      int8x8_t prime = (int8x8_t)v19;
    }
    else {
      int8x8_t prime = (int8x8_t)v18;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v8 = *(void *)(a1 + 128);
    }
    if (*(void *)&prime > v8) {
      goto LABEL_34;
    }
    if (*(void *)&prime < v8)
    {
      unint64_t v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 144) / *(float *)(a1 + 152));
      if (v8 < 3 || (uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (*(void *)&prime <= v27) {
        int8x8_t prime = (int8x8_t)v27;
      }
      if (*(void *)&prime >= v8)
      {
        unint64_t v8 = *(void *)(a1 + 128);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          float v21 = operator new(8 * *(void *)&prime);
          float v22 = *(void **)(a1 + 120);
          *(void *)(a1 + 120) = v21;
          if (v22) {
            operator delete(v22);
          }
          uint64_t v23 = 0;
          *(int8x8_t *)(a1 + 128) = prime;
          do
            *(void *)(*(void *)(a1 + 120) + 8 * v23++) = 0;
          while (*(void *)&prime != v23);
          unint64_t v24 = *(void **)(a1 + 136);
          if (v24)
          {
            unint64_t v25 = v24[1];
            uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(void *)&prime) {
                v25 %= *(void *)&prime;
              }
            }
            else
            {
              v25 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)(a1 + 120) + 8 * v25) = a1 + 136;
            BOOL v30 = (void *)*v24;
            if (*v24)
            {
              do
              {
                unint64_t v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(void *)&prime) {
                    v31 %= *(void *)&prime;
                  }
                }
                else
                {
                  v31 &= *(void *)&prime - 1;
                }
                if (v31 != v25)
                {
                  uint64_t v32 = *(void *)(a1 + 120);
                  if (!*(void *)(v32 + 8 * v31))
                  {
                    *(void *)(v32 + 8 * v31) = v24;
                    goto LABEL_59;
                  }
                  *unint64_t v24 = *v30;
                  *BOOL v30 = **(void **)(*(void *)(a1 + 120) + 8 * v31);
                  **(void **)(*(void *)(a1 + 120) + 8 * v31) = v30;
                  BOOL v30 = v24;
                }
                unint64_t v31 = v25;
LABEL_59:
                unint64_t v24 = v30;
                BOOL v30 = (void *)*v30;
                unint64_t v25 = v31;
              }
              while (v30);
            }
          }
          unint64_t v8 = (unint64_t)prime;
          goto LABEL_63;
        }
        unint64_t v37 = *(void **)(a1 + 120);
        *(void *)(a1 + 120) = 0;
        if (v37) {
          operator delete(v37);
        }
        unint64_t v8 = 0;
        *(void *)(a1 + 128) = 0;
      }
    }
LABEL_63:
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v2 = v7 % v8;
      }
      else {
        unint64_t v2 = v6 - v5 + (v5 << 16);
      }
    }
    else
    {
      unint64_t v2 = (v8 - 1) & v7;
    }
  }
  uint64_t v33 = *(void *)(a1 + 120);
  uint8x8_t v34 = *(void **)(v33 + 8 * v2);
  if (v34)
  {
    *unint64_t v14 = *v34;
LABEL_76:
    *uint8x8_t v34 = v14;
    goto LABEL_77;
  }
  *unint64_t v14 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v14;
  *(void *)(v33 + 8 * v2) = a1 + 136;
  if (*v14)
  {
    unint64_t v35 = *(void *)(*v14 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v35 >= v8) {
        v35 %= v8;
      }
    }
    else
    {
      v35 &= v8 - 1;
    }
    uint8x8_t v34 = (void *)(*(void *)(a1 + 120) + 8 * v35);
    goto LABEL_76;
  }
LABEL_77:
  ++*(void *)(a1 + 144);
  return 1;
}

void sub_2135D04D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorTables::AddEnumValueByNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(int *)(a2 + 16);
  unint64_t v7 = v6 - v5 + (v5 << 16);
  unint64_t v8 = *(void *)(a1 + 168);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v2 = v6 - v5 + (v5 << 16);
      if (v7 >= v8) {
        unint64_t v2 = v7 % v8;
      }
    }
    else
    {
      unint64_t v2 = (v8 - 1) & v7;
    }
    int v10 = *(uint64_t ***)(*(void *)(a1 + 160) + 8 * v2);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6) {
            return 0;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v2) {
            break;
          }
        }
      }
    }
  }
  unint64_t v14 = operator new(0x28uLL);
  *unint64_t v14 = 0;
  v14[1] = v7;
  v14[2] = v5;
  *((_DWORD *)v14 + 6) = v6;
  v14[4] = a2;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 184) + 1);
  float v16 = *(float *)(a1 + 192);
  if (!v8 || (float)(v16 * (float)v8) < v15)
  {
    BOOL v17 = (v8 & (v8 - 1)) == 0;
    if (v8 < 3) {
      BOOL v17 = 0;
    }
    unint64_t v18 = (2 * v8) | !v17;
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      int8x8_t prime = (int8x8_t)v19;
    }
    else {
      int8x8_t prime = (int8x8_t)v18;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v8 = *(void *)(a1 + 168);
    }
    if (*(void *)&prime > v8) {
      goto LABEL_34;
    }
    if (*(void *)&prime < v8)
    {
      unint64_t v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 184) / *(float *)(a1 + 192));
      if (v8 < 3 || (uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v8), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (*(void *)&prime <= v27) {
        int8x8_t prime = (int8x8_t)v27;
      }
      if (*(void *)&prime >= v8)
      {
        unint64_t v8 = *(void *)(a1 + 168);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          float v21 = operator new(8 * *(void *)&prime);
          float v22 = *(void **)(a1 + 160);
          *(void *)(a1 + 160) = v21;
          if (v22) {
            operator delete(v22);
          }
          uint64_t v23 = 0;
          *(int8x8_t *)(a1 + 168) = prime;
          do
            *(void *)(*(void *)(a1 + 160) + 8 * v23++) = 0;
          while (*(void *)&prime != v23);
          unint64_t v24 = *(void **)(a1 + 176);
          if (v24)
          {
            unint64_t v25 = v24[1];
            uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(void *)&prime) {
                v25 %= *(void *)&prime;
              }
            }
            else
            {
              v25 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)(a1 + 160) + 8 * v25) = a1 + 176;
            BOOL v30 = (void *)*v24;
            if (*v24)
            {
              do
              {
                unint64_t v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(void *)&prime) {
                    v31 %= *(void *)&prime;
                  }
                }
                else
                {
                  v31 &= *(void *)&prime - 1;
                }
                if (v31 != v25)
                {
                  uint64_t v32 = *(void *)(a1 + 160);
                  if (!*(void *)(v32 + 8 * v31))
                  {
                    *(void *)(v32 + 8 * v31) = v24;
                    goto LABEL_59;
                  }
                  *unint64_t v24 = *v30;
                  *BOOL v30 = **(void **)(*(void *)(a1 + 160) + 8 * v31);
                  **(void **)(*(void *)(a1 + 160) + 8 * v31) = v30;
                  BOOL v30 = v24;
                }
                unint64_t v31 = v25;
LABEL_59:
                unint64_t v24 = v30;
                BOOL v30 = (void *)*v30;
                unint64_t v25 = v31;
              }
              while (v30);
            }
          }
          unint64_t v8 = (unint64_t)prime;
          goto LABEL_63;
        }
        unint64_t v37 = *(void **)(a1 + 160);
        *(void *)(a1 + 160) = 0;
        if (v37) {
          operator delete(v37);
        }
        unint64_t v8 = 0;
        *(void *)(a1 + 168) = 0;
      }
    }
LABEL_63:
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v2 = v7 % v8;
      }
      else {
        unint64_t v2 = v6 - v5 + (v5 << 16);
      }
    }
    else
    {
      unint64_t v2 = (v8 - 1) & v7;
    }
  }
  uint64_t v33 = *(void *)(a1 + 160);
  uint8x8_t v34 = *(void **)(v33 + 8 * v2);
  if (v34)
  {
    *unint64_t v14 = *v34;
LABEL_76:
    *uint8x8_t v34 = v14;
    goto LABEL_77;
  }
  *unint64_t v14 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v14;
  *(void *)(v33 + 8 * v2) = a1 + 176;
  if (*v14)
  {
    unint64_t v35 = *(void *)(*v14 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v35 >= v8) {
        v35 %= v8;
      }
    }
    else
    {
      v35 &= v8 - 1;
    }
    uint8x8_t v34 = (void *)(*(void *)(a1 + 160) + 8 * v35);
    goto LABEL_76;
  }
LABEL_77:
  ++*(void *)(a1 + 184);
  return 1;
}

void sub_2135D08EC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddExtension(uint64_t **this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2)
{
  unint64_t v3 = *((void *)a2 + 7);
  int v4 = *((_DWORD *)a2 + 10);
  unint64_t v21 = v3;
  int v22 = v4;
  uint64_t v23 = a2;
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::pair<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int> const,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>(this + 35, &v21, (uint64_t)&v21);
  char v6 = v5;
  if (v5)
  {
    unint64_t v8 = this[48];
    unint64_t v7 = this[49];
    if (v8 >= v7)
    {
      int v10 = this[47];
      uint64_t v11 = ((char *)v8 - (char *)v10) >> 4;
      unint64_t v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 60) {
        std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v13 = (char *)v7 - (char *)v10;
      if (v13 >> 3 > v12) {
        unint64_t v12 = v13 >> 3;
      }
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14) {
        float v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>((uint64_t)(this + 49), v14);
      }
      else {
        float v15 = 0;
      }
      float v16 = &v15[16 * v11];
      BOOL v17 = (uint64_t *)&v15[16 * v14];
      *(void *)float v16 = v3;
      *((_DWORD *)v16 + 2) = v4;
      uint8x8_t v9 = (uint64_t *)(v16 + 16);
      unint64_t v19 = this[47];
      unint64_t v18 = this[48];
      if (v18 != v19)
      {
        do
        {
          *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
          v16 -= 16;
          v18 -= 2;
        }
        while (v18 != v19);
        unint64_t v18 = this[47];
      }
      this[47] = (uint64_t *)v16;
      this[48] = v9;
      this[49] = v17;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *unint64_t v8 = v3;
      *((_DWORD *)v8 + 2) = v4;
      uint8x8_t v9 = v8 + 2;
    }
    this[48] = v9;
  }
  return v6 & 1;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString()
{
}

void sub_2135D0B58(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateFileTables(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this)
{
}

void *wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateBytes(wireless_diagnostics::google::protobuf::DescriptorPool::Tables *this, int a2)
{
  if (!a2) {
    return 0;
  }
  unint64_t v3 = operator new(a2);
  unint64_t v4 = *((void *)this + 24);
  char v5 = (void *)*((void *)this + 23);
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v7 = *((void *)this + 22);
    uint64_t v8 = ((uint64_t)v5 - v7) >> 3;
    if ((unint64_t)(v8 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v9 = v4 - v7;
    uint64_t v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1)) {
      uint64_t v10 = v8 + 1;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11) {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)this + 192, v11);
    }
    else {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[8 * v8];
    unint64_t v14 = &v12[8 * v11];
    *(void *)uint64_t v13 = v3;
    char v6 = v13 + 8;
    float v16 = (char *)*((void *)this + 22);
    float v15 = (char *)*((void *)this + 23);
    if (v15 != v16)
    {
      do
      {
        uint64_t v17 = *((void *)v15 - 1);
        v15 -= 8;
        *((void *)v13 - 1) = v17;
        v13 -= 8;
      }
      while (v15 != v16);
      float v15 = (char *)*((void *)this + 22);
    }
    *((void *)this + 22) = v13;
    *((void *)this + 23) = v6;
    *((void *)this + 24) = v14;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *char v5 = v3;
    char v6 = v5 + 1;
  }
  *((void *)this + 23) = v6;
  return v3;
}

void wireless_diagnostics::google::protobuf::DescriptorPool::DescriptorPool(wireless_diagnostics::google::protobuf::DescriptorPool *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  operator new();
}

void wireless_diagnostics::google::protobuf::DescriptorPool::DescriptorPool(wireless_diagnostics::google::protobuf::DescriptorPool *this, const wireless_diagnostics::google::protobuf::DescriptorPool *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = a2;
  operator new();
}

void wireless_diagnostics::google::protobuf::DescriptorPool::~DescriptorPool(wireless_diagnostics::google::protobuf::DescriptorPool::Tables **this)
{
  if (*this)
  {
    uint64_t v2 = MEMORY[0x21668D7D0]();
    MEMORY[0x21668DB60](v2, 0x20C4093837F09);
  }
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DescriptorPool::Tables>::~scoped_ptr(this + 4);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::InternalDontEnforceDependencies(uint64_t this)
{
  *(unsigned char *)(this + 40) = 0;
  return this;
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPool::InternalIsFileLoaded(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(wireless_diagnostics::google::protobuf::internal::Mutex **)a1;
  uint64_t v10 = v4;
  if (v4) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v4);
  }
  char v5 = (void *)(*(void *)(a1 + 32) + 240);
  if (*(char *)(a2 + 23) >= 0) {
    char v6 = (const char *)a2;
  }
  else {
    char v6 = *(const char **)a2;
  }
  unint64_t v11 = v6;
  uint64_t v7 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v5, &v11);
  if (v7) {
    BOOL v8 = v7[3] != 0;
  }
  else {
    BOOL v8 = 0;
  }
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v10);
  return v8;
}

void sub_2135D1004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, wireless_diagnostics::google::protobuf::internal::Mutex *a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(wireless_diagnostics::google::protobuf::DescriptorPool *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135D10A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::internal_generated_pool(wireless_diagnostics::google::protobuf::DescriptorPool *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135D1144(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(wireless_diagnostics::google::protobuf::internal::Mutex **a1, char *a2)
{
  char v4 = *a1;
  unint64_t v14 = v4;
  if (v4) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v4);
  }
  char v5 = (void *)((char *)a1[4] + 240);
  if (a2[23] >= 0) {
    char v6 = a2;
  }
  else {
    char v6 = *(const char **)a2;
  }
  float v15 = v6;
  uint64_t v7 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v5, &v15);
  if (!v7 || (uint64_t FileByName = (uint64_t)v7[3]) == 0)
  {
    uint64_t v9 = a1[3];
    if (!v9 || (uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v9, a2)) == 0)
    {
      if (!wireless_diagnostics::google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)a1, a2)|| ((uint64_t v10 = (void *)((char *)a1[4] + 240), a2[23] >= 0) ? (v11 = a2) : (v11 = *(const char **)a2), (v15 = v11, (v12 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v10, &v15)) == 0)|| (FileByName = (uint64_t)v12[3]) == 0))
      {
        uint64_t FileByName = 0;
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v14);
  return FileByName;
}

void sub_2135D1234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, wireless_diagnostics::google::protobuf::internal::Mutex *a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(wireless_diagnostics::google::protobuf::DescriptorPool *a1, unsigned char *a2)
{
  if (!*((void *)a1 + 1)
    || std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)a1 + 4) + 24), a2))
  {
    return 0;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v6);
  if ((*(unsigned int (**)(void, unsigned char *, unsigned char *))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1), a2, v6)&& wireless_diagnostics::google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const wireless_diagnostics::google::protobuf::FileDescriptorProto *)v6))
  {
    uint64_t v4 = 1;
  }
  else
  {
    std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((void *)a1 + 4) + 24, a2, (uint64_t)a2);
    uint64_t v4 = 0;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v6);
  return v4;
}

void sub_2135D130C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindFileContainingSymbol(wireless_diagnostics::google::protobuf::internal::Mutex **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v35 = v4;
  if (v4) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v4);
  }
  char v5 = (int8x8_t *)a1[4];
  if (*(char *)(a2 + 23) >= 0) {
    char v6 = (const char *)a2;
  }
  else {
    char v6 = *(const char **)a2;
  }
  char v7 = *v6;
  if (*v6)
  {
    unint64_t v8 = 0;
    uint64_t v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      unint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
  }
  else
  {
    unint64_t v8 = 0;
  }
  int8x8_t v11 = v5[26];
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8(v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v14 = v8;
      if (v8 >= *(void *)&v11) {
        unint64_t v14 = v8 % *(void *)&v11;
      }
    }
    else
    {
      unint64_t v14 = (*(void *)&v11 - 1) & v8;
    }
    float v15 = *(uint64_t **)(*(void *)&v5[25] + 8 * v14);
    if (!v15) {
      goto LABEL_28;
    }
    for (uint64_t i = *v15; i; uint64_t i = *(void *)i)
    {
      unint64_t v17 = *(void *)(i + 8);
      if (v8 == v17)
      {
        if (!strcmp(*(const char **)(i + 16), v6))
        {
          float v15 = (uint64_t *)(i + 24);
          goto LABEL_28;
        }
      }
      else
      {
        if (v13 > 1)
        {
          if (v17 >= *(void *)&v11) {
            v17 %= *(void *)&v11;
          }
        }
        else
        {
          v17 &= *(void *)&v11 - 1;
        }
        if (v17 != v14) {
          break;
        }
      }
    }
  }
  float v15 = 0;
LABEL_28:
  if (!v15) {
  uint64_t FileContainingSymbol = v15[1];
  }
  switch(*(_DWORD *)v15)
  {
    case 0:
      unint64_t v20 = a1[3];
      if (v20)
      {
        uint64_t FileContainingSymbol = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileContainingSymbol(v20, a2);
        if (FileContainingSymbol) {
          goto LABEL_68;
        }
      }
      if (!wireless_diagnostics::google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)a1, a2))goto LABEL_63; {
      unint64_t v21 = (int8x8_t *)a1[4];
      }
      if (*(char *)(a2 + 23) < 0) {
        a2 = *(void *)a2;
      }
      char v22 = *(unsigned char *)a2;
      if (*(unsigned char *)a2)
      {
        unint64_t v23 = 0;
        unint64_t v24 = (unsigned __int8 *)(a2 + 1);
        do
        {
          unint64_t v23 = 5 * v23 + v22;
          int v25 = *v24++;
          char v22 = v25;
        }
        while (v25);
      }
      else
      {
        unint64_t v23 = 0;
      }
      int8x8_t v26 = v21[26];
      if (!*(void *)&v26) {
        goto LABEL_58;
      }
      uint8x8_t v27 = (uint8x8_t)vcnt_s8(v26);
      v27.i16[0] = vaddlv_u8(v27);
      unint64_t v28 = v27.u32[0];
      if (v27.u32[0] > 1uLL)
      {
        unint64_t v29 = v23;
        if (v23 >= *(void *)&v26) {
          unint64_t v29 = v23 % *(void *)&v26;
        }
      }
      else
      {
        unint64_t v29 = (*(void *)&v26 - 1) & v23;
      }
      BOOL v30 = *(uint64_t **)(*(void *)&v21[25] + 8 * v29);
      if (!v30) {
        goto LABEL_59;
      }
      uint64_t v31 = *v30;
      if (!*v30) {
        goto LABEL_58;
      }
      break;
    case 1:
    case 3:
    case 5:
LABEL_31:
      unint64_t v19 = (uint64_t *)(FileContainingSymbol + 16);
      goto LABEL_67;
    case 2:
LABEL_62:
      unint64_t v19 = (uint64_t *)(FileContainingSymbol + 32);
      goto LABEL_67;
    case 4:
LABEL_64:
      uint64_t v33 = *(void *)(FileContainingSymbol + 24);
      goto LABEL_66;
    case 6:
LABEL_65:
      uint64_t v33 = *(void *)(FileContainingSymbol + 16);
LABEL_66:
      unint64_t v19 = (uint64_t *)(v33 + 16);
LABEL_67:
      uint64_t FileContainingSymbol = *v19;
      goto LABEL_68;
    case 7:
      goto LABEL_68;
    default:
LABEL_63:
      uint64_t FileContainingSymbol = 0;
      goto LABEL_68;
  }
  do
  {
    unint64_t v32 = *(void *)(v31 + 8);
    if (v23 == v32)
    {
      if (!strcmp(*(const char **)(v31 + 16), (const char *)a2))
      {
        BOOL v30 = (uint64_t *)(v31 + 24);
        goto LABEL_59;
      }
      goto LABEL_57;
    }
    if (v28 > 1)
    {
      if (v32 >= *(void *)&v26) {
        v32 %= *(void *)&v26;
      }
    }
    else
    {
      v32 &= *(void *)&v26 - 1;
    }
    if (v32 != v29) {
      break;
    }
LABEL_57:
    uint64_t v31 = *(void *)v31;
  }
  while (v31);
LABEL_58:
  BOOL v30 = 0;
LABEL_59:
  if (!v30) {
  uint64_t FileContainingSymbol = v30[1];
  }
  switch(*(_DWORD *)v30)
  {
    case 1:
    case 3:
    case 5:
      goto LABEL_31;
    case 2:
      goto LABEL_62;
    case 4:
      goto LABEL_64;
    case 6:
      goto LABEL_65;
    case 7:
      break;
    default:
      goto LABEL_63;
  }
LABEL_68:
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v35);
  return FileContainingSymbol;
}

void sub_2135D1638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((wireless_diagnostics::google::protobuf::internal::Mutex **)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(wireless_diagnostics::google::protobuf::DescriptorPool *a1, uint64_t a2)
{
  if (!*((void *)a1 + 1)
    || (wireless_diagnostics::google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, a2) & 1) != 0)
  {
    return 0;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v9);
  v4 = ((*(uint64_t (**)(void, uint64_t, unsigned char *))(**((void **)a1 + 1) + 24))(*((void *)a1 + 1), a2, v9) & 1) != 0&& ((char v5 = (void *)(*((void *)a1 + 4) + 240), *(char *)(v10 + 23) >= 0)? (v6 = (const char *)v10): (v6 = *(const char **)v10), (v11 = v6, (v7 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v5, &v11)) == 0)|| !v7[3])&& wireless_diagnostics::google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const wireless_diagnostics::google::protobuf::FileDescriptorProto *)v9) != 0;
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v9);
  return v4;
}

void sub_2135D1770(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) == 1)return v2; {
  else
  }
    return 0;
}

unint64_t wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(int8x8_t *a1, wireless_diagnostics::google::protobuf::internal::Mutex **a2, uint64_t a3)
{
  char v6 = *a2;
  unint64_t v35 = v6;
  if (v6) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v6);
  }
  if (*(char *)(a3 + 23) >= 0) {
    char v7 = (const char *)a3;
  }
  else {
    char v7 = *(const char **)a3;
  }
  char v8 = *v7;
  if (*v7)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (unsigned __int8 *)(v7 + 1);
    do
    {
      unint64_t v9 = 5 * v9 + v8;
      int v11 = *v10++;
      char v8 = v11;
    }
    while (v11);
  }
  else
  {
    unint64_t v9 = 0;
  }
  int8x8_t v12 = a1[26];
  if (!*(void *)&v12)
  {
LABEL_27:
    float v16 = 0;
    goto LABEL_28;
  }
  uint8x8_t v13 = (uint8x8_t)vcnt_s8(v12);
  v13.i16[0] = vaddlv_u8(v13);
  unint64_t v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    unint64_t v15 = v9;
    if (v9 >= *(void *)&v12) {
      unint64_t v15 = v9 % *(void *)&v12;
    }
  }
  else
  {
    unint64_t v15 = (*(void *)&v12 - 1) & v9;
  }
  float v16 = *(uint64_t **)(*(void *)&a1[25] + 8 * v15);
  if (v16)
  {
    uint64_t v17 = *v16;
    if (*v16)
    {
      while (1)
      {
        unint64_t v18 = *(void *)(v17 + 8);
        if (v9 == v18)
        {
          if (!strcmp(*(const char **)(v17 + 16), v7))
          {
            float v16 = (uint64_t *)(v17 + 24);
            goto LABEL_28;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v18 >= *(void *)&v12) {
              v18 %= *(void *)&v12;
            }
          }
          else
          {
            v18 &= *(void *)&v12 - 1;
          }
          if (v18 != v15) {
            goto LABEL_27;
          }
        }
        uint64_t v17 = *(void *)v17;
        if (!v17) {
          goto LABEL_27;
        }
      }
    }
    goto LABEL_27;
  }
LABEL_28:
  if (!v16) {
  uint64_t v19 = *v16;
  }
  unint64_t v20 = HIDWORD(*v16);
  if (!*v16)
  {
    char v22 = a2[3];
    if (!v22
      || (v23 = wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*((void *)v22 + 4), v22, a3), LODWORD(v19) = v23, unint64_t v20 = HIDWORD(v23), !v23))
    {
      if (!wireless_diagnostics::google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)a2, a3))
      {
        LODWORD(v19) = 0;
        goto LABEL_31;
      }
      if (*(char *)(a3 + 23) < 0) {
        a3 = *(void *)a3;
      }
      char v24 = *(unsigned char *)a3;
      if (*(unsigned char *)a3)
      {
        unint64_t v25 = 0;
        int8x8_t v26 = (unsigned __int8 *)(a3 + 1);
        do
        {
          unint64_t v25 = 5 * v25 + v24;
          int v27 = *v26++;
          char v24 = v27;
        }
        while (v27);
      }
      else
      {
        unint64_t v25 = 0;
      }
      int8x8_t v28 = a1[26];
      if (v28)
      {
        uint8x8_t v29 = (uint8x8_t)vcnt_s8(v28);
        v29.i16[0] = vaddlv_u8(v29);
        unint64_t v30 = v29.u32[0];
        if (v29.u32[0] > 1uLL)
        {
          unint64_t v31 = v25;
          if (v25 >= *(void *)&v28) {
            unint64_t v31 = v25 % *(void *)&v28;
          }
        }
        else
        {
          unint64_t v31 = (*(void *)&v28 - 1) & v25;
        }
        unint64_t v32 = *(uint64_t **)(*(void *)&a1[25] + 8 * v31);
        if (!v32) {
          goto LABEL_60;
        }
        for (uint64_t i = *v32; i; uint64_t i = *(void *)i)
        {
          unint64_t v34 = *(void *)(i + 8);
          if (v25 == v34)
          {
            if (!strcmp(*(const char **)(i + 16), (const char *)a3))
            {
              unint64_t v32 = (uint64_t *)(i + 24);
              goto LABEL_60;
            }
          }
          else
          {
            if (v30 > 1)
            {
              if (v34 >= *(void *)&v28) {
                v34 %= *(void *)&v28;
              }
            }
            else
            {
              v34 &= *(void *)&v28 - 1;
            }
            if (v34 != v31) {
              break;
            }
          }
        }
      }
      unint64_t v32 = 0;
LABEL_60:
      if (!v32) {
      uint64_t v19 = *v32;
      }
      unint64_t v20 = HIDWORD(*v32);
    }
  }
LABEL_31:
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v35);
  return v19 | ((unint64_t)v20 << 32);
}

void sub_2135D1A68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((wireless_diagnostics::google::protobuf::internal::Mutex **)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindFieldByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) != 2)return 0; {
  uint64_t result = v2;
  }
  if (*(unsigned char *)(v2 + 52)) {
    return 0;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) != 2)return 0; {
  uint64_t result = v2;
  }
  if (!*(unsigned char *)(v2 + 52)) {
    return 0;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindEnumTypeByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) == 3)return v2; {
  else
  }
    return 0;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindEnumValueByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) == 4)return v2; {
  else
  }
    return 0;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindServiceByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) == 5)return v2; {
  else
  }
    return 0;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindMethodByName(uint64_t a1, uint64_t a2)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(int8x8_t **)(a1 + 32), (wireless_diagnostics::google::protobuf::internal::Mutex **)a1, a2) == 6)return v2; {
  else
  }
    return 0;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(wireless_diagnostics::google::protobuf::internal::Mutex **this, const wireless_diagnostics::google::protobuf::Descriptor *a2, uint64_t a3)
{
  char v6 = *this;
  unint64_t v14 = v6;
  if (v6) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v6);
  }
  char v7 = this[4];
  unint64_t v15 = a2;
  uint64_t v16 = a3;
  char v8 = std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::find<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>((uint64_t)v7 + 280, (unint64_t *)&v15);
  if ((uint64_t *)((char *)v7 + 288) == v8 || (uint64_t ExtensionByNumber = v8[6]) == 0)
  {
    uint64_t v10 = this[3];
    if (!v10
      || (uint64_t ExtensionByNumber = wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(v10, a2, a3)) == 0)
    {
      if (!wireless_diagnostics::google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)this, a2, a3)|| (int v11 = this[4], v15 = a2, v16 = a3, v12 = std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::find<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>((uint64_t)v11 + 280, (unint64_t *)&v15), (uint64_t *)((char *)v11 + 288) == v12)|| (ExtensionByNumber = v12[6]) == 0)
      {
        uint64_t ExtensionByNumber = 0;
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v14);
  return ExtensionByNumber;
}

void sub_2135D1C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((wireless_diagnostics::google::protobuf::internal::Mutex **)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(wireless_diagnostics::google::protobuf::DescriptorPool *this, const wireless_diagnostics::google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((void *)this + 1)) {
    return 0;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v11);
  v9 = ((*(uint64_t (**)(void, void, uint64_t, const std::string **))(**((void **)this + 1) + 32))(*((void *)this + 1), *((void *)a2 + 1), a3, v11) & 1) != 0&& ((char v6 = (void *)(*((void *)this + 4) + 240), *(char *)(v12 + 23) >= 0)? (v7 = (const char *)v12): (v7 = *(const char **)v12), (v13 = v7, (v8 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v6, &v13)) == 0)|| !v8[3])&& wireless_diagnostics::google::protobuf::DescriptorPool::BuildFileFromDatabase((wireless_diagnostics::google::protobuf::internal::Mutex **)this, v11) != 0;
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v11);
  return v9;
}

void sub_2135D1D8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorPool::FindAllExtensions(uint64_t a1, wireless_diagnostics::google::protobuf::Descriptor *a2, void **a3)
{
  BOOL v4 = a2;
  char v6 = *(wireless_diagnostics::google::protobuf::internal::Mutex **)a1;
  uint64_t v17 = v6;
  unint64_t v18 = a2;
  if (v6) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v6);
  }
  if (*(void *)(a1 + 8))
  {
    char v7 = std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::find<wireless_diagnostics::google::protobuf::Descriptor const*>((void *)(*(void *)(a1 + 32) + 64), (unint64_t *)&v18);
    BOOL v4 = v18;
    if (!v7)
    {
      unint64_t v15 = 0;
      uint64_t v16 = 0;
      std::string __p = 0;
      if ((*(unsigned int (**)(void, void, void **))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8), *((void *)v18 + 1), &__p))
      {
        char v8 = (unsigned int *)__p;
        if (v15 != __p)
        {
          unint64_t v9 = 0;
          do
          {
            uint64_t v10 = v8[v9];
            uint64_t v11 = *(void *)(a1 + 32);
            v19[0] = (unint64_t)v18;
            v19[1] = v10;
            uint64_t v12 = std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::find<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>(v11 + 280, v19);
            if ((uint64_t *)(v11 + 288) == v12 || !v12[6]) {
              wireless_diagnostics::google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)a1, v18, v10);
            }
            ++v9;
            char v8 = (unsigned int *)__p;
          }
          while (v9 < (v15 - (unsigned char *)__p) >> 2);
        }
        std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const* const&>(*(void *)(a1 + 32) + 64, (unint64_t *)&v18, &v18);
      }
      if (__p)
      {
        unint64_t v15 = __p;
        operator delete(__p);
      }
      BOOL v4 = v18;
    }
  }
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindAllExtensions(*(void *)(a1 + 32), (unint64_t)v4, a3);
  uint64_t v13 = *(void *)(a1 + 24);
  if (v13) {
    wireless_diagnostics::google::protobuf::DescriptorPool::FindAllExtensions(v13, v18, a3);
  }
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v17);
}

void sub_2135D1F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, wireless_diagnostics::google::protobuf::internal::Mutex *a13)
{
  if (__p) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&a13);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::FindAllExtensions(uint64_t a1, unint64_t a2, void **a3)
{
  unint64_t v3 = *(uint64_t **)(a1 + 288);
  if (v3)
  {
    char v6 = (void *)(a1 + 288);
    char v7 = (void *)(a1 + 288);
    do
    {
      unint64_t v8 = v3[4];
      if (v8 >= a2)
      {
        if (v8 <= a2)
        {
          if (*((int *)v3 + 10) < 0) {
            ++v3;
          }
          else {
            char v7 = v3;
          }
        }
        else
        {
          char v7 = v3;
        }
      }
      else
      {
        ++v3;
      }
      unint64_t v3 = (uint64_t *)*v3;
    }
    while (v3);
    if (v7 != v6)
    {
      do
      {
        if (v7[4] != a2) {
          break;
        }
        uint64_t v10 = a3[1];
        unint64_t v9 = (unint64_t)a3[2];
        if ((unint64_t)v10 >= v9)
        {
          uint64_t v12 = ((char *)v10 - (unsigned char *)*a3) >> 3;
          if ((unint64_t)(v12 + 1) >> 61) {
            std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v13 = v9 - (void)*a3;
          uint64_t v14 = v13 >> 2;
          if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
            uint64_t v14 = v12 + 1;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v14;
          }
          if (v15) {
            uint64_t v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(a3 + 2), v15);
          }
          else {
            uint64_t v16 = 0;
          }
          uint64_t v17 = &v16[8 * v12];
          *(void *)uint64_t v17 = v7[6];
          uint64_t v11 = v17 + 8;
          uint64_t v19 = (char *)*a3;
          unint64_t v18 = (char *)a3[1];
          if (v18 != *a3)
          {
            do
            {
              uint64_t v20 = *((void *)v18 - 1);
              v18 -= 8;
              *((void *)v17 - 1) = v20;
              v17 -= 8;
            }
            while (v18 != v19);
            unint64_t v18 = (char *)*a3;
          }
          *a3 = v17;
          a3[1] = v11;
          a3[2] = &v16[8 * v15];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *uint64_t v10 = v7[6];
          uint64_t v11 = v10 + 1;
        }
        a3[1] = v11;
        unint64_t v21 = (void *)v7[1];
        if (v21)
        {
          do
          {
            char v22 = v21;
            unint64_t v21 = (void *)*v21;
          }
          while (v21);
        }
        else
        {
          do
          {
            char v22 = (void *)v7[2];
            BOOL v23 = *v22 == (void)v7;
            char v7 = v22;
          }
          while (!v23);
        }
        char v7 = v22;
      }
      while (v22 != v6);
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindFieldByNumber(wireless_diagnostics::google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[16];
  if (!*(void *)&v3) {
    return 0;
  }
  unint64_t v4 = 0xFFFFLL * (void)this + a2;
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    uint64_t v6 = 0xFFFFLL * (void)this + a2;
    if (v4 >= *(void *)&v3) {
      uint64_t v6 = v4 % *(void *)&v3;
    }
  }
  else
  {
    uint64_t v6 = (*(void *)&v3 - 1) & v4;
  }
  char v7 = *(uint64_t ***)(*(void *)&v2[15] + 8 * v6);
  if (!v7) {
    return 0;
  }
  unint64_t v8 = *v7;
  if (!v8) {
    return 0;
  }
  while (1)
  {
    unint64_t v9 = v8[1];
    if (v4 == v9) {
      break;
    }
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v6) {
      return 0;
    }
LABEL_20:
    unint64_t v8 = (uint64_t *)*v8;
    if (!v8) {
      return 0;
    }
  }
  if ((wireless_diagnostics::google::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2) {
    goto LABEL_20;
  }
  uint64_t v12 = v8[4];
  if (!v12) {
    return 0;
  }
  if (*(unsigned char *)(v12 + 52)) {
    return 0;
  }
  else {
    return v8[4];
  }
}

uint64_t *wireless_diagnostics::google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(*(void *)(a1 + 16) + 144) + 40);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

uint64_t *wireless_diagnostics::google::protobuf::Descriptor::FindFieldByCamelcaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(*(void *)(a1 + 16) + 144) + 80);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (v14) {
    uint64_t v17 = v14;
  }
  else {
  uint64_t v18 = *v17;
  }
  uint64_t v19 = *v17;
  if (v19 != 2) {
  if (!v18)
  }
    return 0;
  if (!v14) {
  uint64_t v20 = v14 + 1;
  }
  if (v19 != 2) {
    uint64_t v20 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v20;
  if (*(unsigned char *)(v21 + 52)) {
    return 0;
  }
  else {
    return v21;
  }
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindExtensionByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (v14) {
    uint64_t v17 = v14;
  }
  else {
  uint64_t v18 = *v17;
  }
  uint64_t v19 = *v17;
  if (v19 != 2) {
  if (!v18)
  }
    return 0;
  if (!v14) {
  uint64_t v20 = v14 + 1;
  }
  if (v19 != 2) {
    uint64_t v20 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v20;
  if (*(unsigned char *)(v21 + 52)) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t *wireless_diagnostics::google::protobuf::Descriptor::FindExtensionByLowercaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(*(void *)(a1 + 16) + 144) + 40);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (!*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

uint64_t *wireless_diagnostics::google::protobuf::Descriptor::FindExtensionByCamelcaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(*(void *)(a1 + 16) + 144) + 80);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (!*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindNestedTypeByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 1) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 1) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindEnumTypeByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 3) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 3) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::FindEnumValueByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 4) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 4) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 4) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 4) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(wireless_diagnostics::google::protobuf::EnumDescriptor *this, int a2)
{
  uint64_t v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[21];
  if (v3)
  {
    unint64_t v4 = 0xFFFFLL * (void)this + a2;
    uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      uint64_t v6 = 0xFFFFLL * (void)this + a2;
      if (v4 >= *(void *)&v3) {
        uint64_t v6 = v4 % *(void *)&v3;
      }
    }
    else
    {
      uint64_t v6 = (*(void *)&v3 - 1) & v4;
    }
    char v7 = *(uint64_t ***)(*(void *)&v2[20] + 8 * v6);
    if (v7)
    {
      for (uint64_t i = *v7; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v9 = i[1];
        if (v4 == v9)
        {
          if ((wireless_diagnostics::google::protobuf::EnumDescriptor *)i[2] == this && *((_DWORD *)i + 6) == a2) {
            return i[4];
          }
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(void *)&v3) {
              v9 %= *(void *)&v3;
            }
          }
          else
          {
            v9 &= *(void *)&v3 - 1;
          }
          if (v9 != v6) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptor::FindMethodByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(*(void *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 6) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 6) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::FindMessageTypeByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(a1 + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 1) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 1) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::FindEnumTypeByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(a1 + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 3) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 3) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::FindEnumValueByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(a1 + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 4) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 4) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::FindServiceByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(a1 + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (!v14) {
  uint64_t v19 = *v14;
  }
  uint64_t v17 = v14 + 1;
  int v18 = v19;
  uint64_t v20 = v19;
  if (v19 != 5) {
    uint64_t v17 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v17;
  if (v20 == 5) {
    int v22 = v18;
  }
  else {
  if (v22) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::FindExtensionByName(uint64_t a1, uint64_t a2)
{
  int8x8_t v3 = *(void **)(a1 + 144);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v4 = (const char *)a2;
  }
  else {
    unint64_t v4 = *(const char **)a2;
  }
  char v5 = *v4;
  if (*v4)
  {
    uint64_t v6 = 0;
    char v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v6 = 5 * v6 + v5;
      int v8 = *v7++;
      char v5 = v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v6 = 0;
  }
  int8x8_t v9 = (int8x8_t)v3[1];
  if (!*(void *)&v9)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = v6 - a1 + (a1 << 16);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  unint64_t v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v13 = v6 - a1 + (a1 << 16);
    if (v10 >= *(void *)&v9) {
      uint64_t v13 = v10 % *(void *)&v9;
    }
  }
  else
  {
    uint64_t v13 = (*(void *)&v9 - 1) & v10;
  }
  uint64_t v14 = *(uint64_t **)(*v3 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      while (1)
      {
        unint64_t v16 = *(void *)(v15 + 8);
        if (v10 == v16)
        {
          if (*(void *)(v15 + 16) == a1 && !strcmp(*(const char **)(v15 + 24), v4))
          {
            uint64_t v14 = (uint64_t *)(v15 + 32);
            goto LABEL_27;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v16 >= *(void *)&v9) {
              v16 %= *(void *)&v9;
            }
          }
          else
          {
            v16 &= *(void *)&v9 - 1;
          }
          if (v16 != v13) {
            goto LABEL_26;
          }
        }
        uint64_t v15 = *(void *)v15;
        if (!v15) {
          goto LABEL_26;
        }
      }
    }
    goto LABEL_26;
  }
LABEL_27:
  if (v14) {
    uint64_t v17 = v14;
  }
  else {
  uint64_t v18 = *v17;
  }
  uint64_t v19 = *v17;
  if (v19 != 2) {
  if (!v18)
  }
    return 0;
  if (!v14) {
  uint64_t v20 = v14 + 1;
  }
  if (v19 != 2) {
    uint64_t v20 = &qword_26AA45BB0;
  }
  uint64_t v21 = *v20;
  if (*(unsigned char *)(v21 + 52)) {
    return v21;
  }
  else {
    return 0;
  }
}

uint64_t *wireless_diagnostics::google::protobuf::FileDescriptor::FindExtensionByLowercaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(a1 + 144) + 40);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (!*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

uint64_t *wireless_diagnostics::google::protobuf::FileDescriptor::FindExtensionByCamelcaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(void *)(a1 + 144) + 80);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = *(void *)a2;
  }
  v5[0] = a1;
  v5[1] = v3;
  if (result)
  {
    if (!*((unsigned char *)result + 52)) {
      return 0;
    }
  }
  return result;
}

BOOL wireless_diagnostics::google::protobuf::Descriptor::IsExtensionNumber(wireless_diagnostics::google::protobuf::Descriptor *this, int a2)
{
  unint64_t v2 = *((unsigned int *)this + 22);
  if ((int)v2 < 1)
  {
    return 0;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = (_DWORD *)(*((void *)this + 12) + 4);
    BOOL v5 = 1;
    do
    {
      if (*(v4 - 1) <= a2 && *v4 > a2) {
        break;
      }
      v4 += 2;
      BOOL v5 = ++v3 < v2;
    }
    while (v2 != v3);
  }
  return v5;
}

wireless_diagnostics::google::protobuf::FileDescriptor *wireless_diagnostics::google::protobuf::DescriptorPool::BuildFileFromDatabase(wireless_diagnostics::google::protobuf::internal::Mutex **this, const std::string **a2)
{
  wireless_diagnostics::google::protobuf::internal::Mutex::AssertHeld(*this);
  unint64_t v4 = this[4];
  BOOL v5 = this[2];
  v8[0] = this;
  v8[1] = v4;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  v14[0] = 0;
  v14[1] = 0;
  uint64_t v8[2] = v5;
  memset(&v8[3], 0, 24);
  char v9 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = v14;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v6 = wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildFile((wireless_diagnostics::google::protobuf::DescriptorBuilder *)v8, a2);
  wireless_diagnostics::google::protobuf::DescriptorBuilder::~DescriptorBuilder(v8);
  return v6;
}

void sub_2135D3728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __str = *(std::string *)a2;
  }
  std::string::size_type v3 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v3 != -1)
  {
    std::string::size_type v4 = v3;
    while (1)
    {
      std::string::basic_string(&v24, &__str, 0, v4, (std::allocator<char> *)&v26);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string __str = v24;
      BOOL v5 = *(int8x8_t **)(a1 + 32);
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_str = &__str;
      }
      else {
        p_str = (std::string *)v24.__r_.__value_.__r.__words[0];
      }
      char v7 = p_str->__r_.__value_.__s.__data_[0];
      if (p_str->__r_.__value_.__s.__data_[0])
      {
        unint64_t v8 = 0;
        char v9 = &p_str->__r_.__value_.__s.__data_[1];
        do
        {
          unint64_t v8 = 5 * v8 + v7;
          int v10 = *v9++;
          char v7 = v10;
        }
        while (v10);
      }
      else
      {
        unint64_t v8 = 0;
      }
      int8x8_t v11 = v5[26];
      if (!*(void *)&v11) {
        goto LABEL_32;
      }
      uint8x8_t v12 = (uint8x8_t)vcnt_s8(v11);
      v12.i16[0] = vaddlv_u8(v12);
      unint64_t v13 = v12.u32[0];
      if (v12.u32[0] > 1uLL)
      {
        unint64_t v14 = v8;
        if (v8 >= *(void *)&v11) {
          unint64_t v14 = v8 % *(void *)&v11;
        }
      }
      else
      {
        unint64_t v14 = (*(void *)&v11 - 1) & v8;
      }
      long long v15 = *(uint64_t **)(*(void *)&v5[25] + 8 * v14);
      if (v15) {
        break;
      }
LABEL_33:
      if (!v15) {
      int v18 = *(_DWORD *)v15;
      }
      if (v18) {
        BOOL v19 = v18 == 7;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        uint64_t IsSubSymbolOfBuiltType = 1;
        goto LABEL_44;
      }
      std::string::size_type v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v4 == -1) {
        goto LABEL_41;
      }
    }
    for (uint64_t i = *v15; i; uint64_t i = *(void *)i)
    {
      unint64_t v17 = *(void *)(i + 8);
      if (v8 == v17)
      {
        if (!strcmp(*(const char **)(i + 16), (const char *)p_str))
        {
          long long v15 = (uint64_t *)(i + 24);
          goto LABEL_33;
        }
      }
      else
      {
        if (v13 > 1)
        {
          if (v17 >= *(void *)&v11) {
            v17 %= *(void *)&v11;
          }
        }
        else
        {
          v17 &= *(void *)&v11 - 1;
        }
        if (v17 != v14) {
          break;
        }
      }
    }
LABEL_32:
    long long v15 = 0;
    goto LABEL_33;
  }
LABEL_41:
  uint64_t v20 = *(void *)(a1 + 24);
  if (v20) {
    uint64_t IsSubSymbolOfBuiltType = wireless_diagnostics::google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v20, a2);
  }
  else {
    uint64_t IsSubSymbolOfBuiltType = 0;
  }
LABEL_44:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return IsSubSymbolOfBuiltType;
}

void sub_2135D396C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::FieldDescriptor::DefaultValueAsString(wireless_diagnostics::google::protobuf::FieldDescriptor *this@<X0>, char *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  int v4 = (int)a2;
  if (!*((unsigned char *)this + 104))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v14);
  }
  switch(*((_DWORD *)this + 11))
  {
    case 1:
      wireless_diagnostics::google::protobuf::SimpleDtoa(*((double *)this + 14), a2, a4);
      return;
    case 2:
      wireless_diagnostics::google::protobuf::SimpleFtoa(*((float *)this + 28), a2, a4);
      return;
    case 3:
    case 0x10:
    case 0x12:
      wireless_diagnostics::google::protobuf::SimpleItoa(*((wireless_diagnostics::google::protobuf **)this + 14), a3, a4);
      return;
    case 4:
    case 6:
      wireless_diagnostics::google::protobuf::SimpleItoa(*((wireless_diagnostics::google::protobuf **)this + 14), a3, a4);
      return;
    case 5:
    case 0xF:
    case 0x11:
      wireless_diagnostics::google::protobuf::SimpleItoa((wireless_diagnostics::google::protobuf *)*((unsigned int *)this + 28), a3, a4);
      return;
    case 7:
    case 0xD:
      wireless_diagnostics::google::protobuf::SimpleItoa((wireless_diagnostics::google::protobuf *)*((unsigned int *)this + 28), a3, a4);
      return;
    case 8:
      if (*((unsigned char *)this + 112)) {
        char v7 = "true";
      }
      else {
        char v7 = "false";
      }
      goto LABEL_18;
    case 9:
    case 0xC:
      if (v4) {
        wireless_diagnostics::google::protobuf::CEscape();
      }
      int8x8_t v11 = (long long *)*((void *)this + 14);
      if (*((_DWORD *)this + 11) == 12) {
        wireless_diagnostics::google::protobuf::CEscape();
      }
      if ((*((char *)v11 + 23) & 0x80000000) == 0)
      {
        long long v9 = *v11;
        std::string::size_type v10 = *((void *)v11 + 2);
        goto LABEL_15;
      }
      uint8x8_t v12 = *(const std::string::value_type **)v11;
      std::string::size_type v13 = *((void *)v11 + 1);
      goto LABEL_25;
    case 0xA:
    case 0xB:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v14);
      goto LABEL_17;
    case 0xE:
      unint64_t v8 = (long long *)**((void **)this + 14);
      if (*((char *)v8 + 23) < 0)
      {
        uint8x8_t v12 = *(const std::string::value_type **)v8;
        std::string::size_type v13 = *((void *)v8 + 1);
LABEL_25:
        std::string::__init_copy_ctor_external(a4, v12, v13);
      }
      else
      {
        long long v9 = *v8;
        std::string::size_type v10 = *((void *)v8 + 2);
LABEL_15:
        a4->__r_.__value_.__r.__words[2] = v10;
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v9;
      }
      return;
    default:
LABEL_17:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v14);
      char v7 = "";
LABEL_18:
      std::string::basic_string[abi:ne180100]<0>(a4, v7);
      return;
  }
}

void sub_2135D3C48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void ***wireless_diagnostics::google::protobuf::FileDescriptor::CopyTo(wireless_diagnostics::google::protobuf::FileDescriptor *this, wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 51) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  uint64_t v6 = (std::string *)MEMORY[0x263F8C740];
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v5, v4);
  uint64_t v11 = *((void *)this + 1);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_10;
  }
  *((_DWORD *)a2 + 51) |= 2u;
  uint8x8_t v12 = (std::string *)*((void *)a2 + 3);
  if (v12 == v6) {
    operator new();
  }
  char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v12, (const std::string *)v11);
LABEL_10:
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      std::string v14 = **(const std::string ***)(*((void *)this + 4) + 8 * v13);
      int v15 = *((_DWORD *)a2 + 11);
      uint64_t v16 = *((int *)a2 + 10);
      if ((int)v16 >= v15)
      {
        if (v15 == *((_DWORD *)a2 + 12))
        {
          char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 32));
          int v15 = *((_DWORD *)a2 + 11);
        }
        *((_DWORD *)a2 + 11) = v15 + 1;
        int v18 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(v7);
        uint64_t v19 = *((void *)a2 + 4);
        uint64_t v20 = *((int *)a2 + 10);
        *((_DWORD *)a2 + 10) = v20 + 1;
        *(void *)(v19 + 8 * v20) = v18;
      }
      else
      {
        uint64_t v17 = *((void *)a2 + 4);
        *((_DWORD *)a2 + 10) = v16 + 1;
        int v18 = *(std::string **)(v17 + 8 * v16);
      }
      char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v18, v14);
      ++v13;
    }
    while (v13 < *((int *)this + 6));
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      int v22 = *(_DWORD *)(*((void *)this + 6) + 4 * v21);
      int v23 = *((_DWORD *)a2 + 16);
      if (v23 == *((_DWORD *)a2 + 17))
      {
        char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)a2 + 56, v23 + 1);
        int v23 = *((_DWORD *)a2 + 16);
      }
      uint64_t v24 = *((void *)a2 + 7);
      *((_DWORD *)a2 + 16) = v23 + 1;
      *(_DWORD *)(v24 + 4 * v23) = v22;
      ++v21;
    }
    while (v21 < *((int *)this + 10));
  }
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = *(_DWORD *)(*((void *)this + 8) + 4 * v25);
      int v27 = *((_DWORD *)a2 + 20);
      if (v27 == *((_DWORD *)a2 + 21))
      {
        char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)a2 + 72, v27 + 1);
        int v27 = *((_DWORD *)a2 + 20);
      }
      uint64_t v28 = *((void *)a2 + 9);
      *((_DWORD *)a2 + 20) = v27 + 1;
      *(_DWORD *)(v28 + 4 * v27) = v26;
      ++v25;
    }
    while (v25 < *((int *)this + 14));
  }
  if (*((int *)this + 18) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = *((void *)this + 10);
      int v32 = *((_DWORD *)a2 + 25);
      uint64_t v33 = *((int *)a2 + 24);
      if ((int)v33 >= v32)
      {
        if (v32 == *((_DWORD *)a2 + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 88));
          int v32 = *((_DWORD *)a2 + 25);
        }
        *((_DWORD *)a2 + 25) = v32 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
      }
      uint64_t v34 = *((void *)a2 + 11);
      *((_DWORD *)a2 + 24) = v33 + 1;
      char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::Descriptor::CopyTo((wireless_diagnostics::google::protobuf::Descriptor *)(v31 + v29), *(wireless_diagnostics::google::protobuf::DescriptorProto **)(v34 + 8 * v33));
      ++v30;
      v29 += 120;
    }
    while (v30 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    do
    {
      uint64_t v37 = *((void *)this + 12);
      int v38 = *((_DWORD *)a2 + 31);
      uint64_t v39 = *((int *)a2 + 30);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)a2 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 112));
          int v38 = *((_DWORD *)a2 + 31);
        }
        *((_DWORD *)a2 + 31) = v38 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
      }
      uint64_t v40 = *((void *)a2 + 14);
      *((_DWORD *)a2 + 30) = v39 + 1;
      char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::EnumDescriptor::CopyTo((wireless_diagnostics::google::protobuf::EnumDescriptor *)(v37 + v35), *(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v40 + 8 * v39));
      ++v36;
      v35 += 56;
    }
    while (v36 < *((int *)this + 22));
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    do
    {
      uint64_t v43 = *((void *)this + 14);
      int v44 = *((_DWORD *)a2 + 37);
      uint64_t v45 = *((int *)a2 + 36);
      if ((int)v45 >= v44)
      {
        if (v44 == *((_DWORD *)a2 + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 136));
          int v44 = *((_DWORD *)a2 + 37);
        }
        *((_DWORD *)a2 + 37) = v44 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::ServiceDescriptorProto>::New();
      }
      uint64_t v46 = *((void *)a2 + 17);
      *((_DWORD *)a2 + 36) = v45 + 1;
      char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::ServiceDescriptor::CopyTo((wireless_diagnostics::google::protobuf::ServiceDescriptor *)(v43 + v41), *(wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(v46 + 8 * v45));
      ++v42;
      v41 += 48;
    }
    while (v42 < *((int *)this + 26));
  }
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    do
    {
      uint64_t v49 = *((void *)this + 16);
      int v50 = *((_DWORD *)a2 + 43);
      uint64_t v51 = *((int *)a2 + 42);
      if ((int)v51 >= v50)
      {
        if (v50 == *((_DWORD *)a2 + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 160));
          int v50 = *((_DWORD *)a2 + 43);
        }
        *((_DWORD *)a2 + 43) = v50 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v52 = *((void *)a2 + 20);
      *((_DWORD *)a2 + 42) = v51 + 1;
      char v7 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::FieldDescriptor::CopyTo((wireless_diagnostics::google::protobuf::FieldDescriptor *)(v49 + v47), *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v52 + 8 * v51));
      ++v48;
      v47 += 120;
    }
    while (v48 < *((int *)this + 30));
  }
  std::string v53 = (void ***)*((void *)this + 17);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::FileOptions::default_instance(v7, v8, v9, v10);
  if (v53 != result)
  {
    *((_DWORD *)a2 + 51) |= 0x200u;
    if (!*((void *)a2 + 23)) {
      operator new();
    }
    uint64_t v55 = (void ***)*((void *)this + 17);
    std::string v56 = (void ***)*((void *)a2 + 23);
    return wireless_diagnostics::google::protobuf::FileOptions::CopyFrom(v56, v55);
  }
  return result;
}

void sub_2135D41DC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::Descriptor::CopyTo(wireless_diagnostics::google::protobuf::Descriptor *this, wireless_diagnostics::google::protobuf::DescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 39) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)std::string::operator=(v5, v4);
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *((void *)this + 6);
      int v13 = *((_DWORD *)a2 + 9);
      uint64_t v14 = *((int *)a2 + 8);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a2 + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 24));
          int v13 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v13 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v15 = *((void *)a2 + 3);
      *((_DWORD *)a2 + 8) = v14 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)wireless_diagnostics::google::protobuf::FieldDescriptor::CopyTo((wireless_diagnostics::google::protobuf::FieldDescriptor *)(v12 + v10), *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v15 + 8 * v14));
      ++v11;
      v10 += 120;
    }
    while (v11 < *((int *)this + 11));
  }
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *((void *)this + 8);
      int v19 = *((_DWORD *)a2 + 21);
      uint64_t v20 = *((int *)a2 + 20);
      if ((int)v20 >= v19)
      {
        if (v19 == *((_DWORD *)a2 + 22))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 72));
          int v19 = *((_DWORD *)a2 + 21);
        }
        *((_DWORD *)a2 + 21) = v19 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
      }
      uint64_t v21 = *((void *)a2 + 9);
      *((_DWORD *)a2 + 20) = v20 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)wireless_diagnostics::google::protobuf::Descriptor::CopyTo((wireless_diagnostics::google::protobuf::Descriptor *)(v18 + v16), *(wireless_diagnostics::google::protobuf::DescriptorProto **)(v21 + 8 * v20));
      ++v17;
      v16 += 120;
    }
    while (v17 < *((int *)this + 14));
  }
  if (*((int *)this + 18) >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    do
    {
      uint64_t v24 = *((void *)this + 10);
      int v25 = *((_DWORD *)a2 + 27);
      uint64_t v26 = *((int *)a2 + 26);
      if ((int)v26 >= v25)
      {
        if (v25 == *((_DWORD *)a2 + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 96));
          int v25 = *((_DWORD *)a2 + 27);
        }
        *((_DWORD *)a2 + 27) = v25 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
      }
      uint64_t v27 = *((void *)a2 + 12);
      *((_DWORD *)a2 + 26) = v26 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)wireless_diagnostics::google::protobuf::EnumDescriptor::CopyTo((wireless_diagnostics::google::protobuf::EnumDescriptor *)(v24 + v22), *(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v27 + 8 * v26));
      ++v23;
      v22 += 56;
    }
    while (v23 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    do
    {
      int v30 = *((_DWORD *)a2 + 33);
      uint64_t v31 = *((int *)a2 + 32);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)a2 + 34))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 120));
          int v30 = *((_DWORD *)a2 + 33);
        }
        *((_DWORD *)a2 + 33) = v30 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange>::New();
      }
      uint64_t v32 = *((void *)a2 + 15);
      *((_DWORD *)a2 + 32) = v31 + 1;
      uint64_t v6 = *(wireless_diagnostics::google::protobuf::MessageOptions **)(v32 + 8 * v31);
      uint64_t v33 = (int *)(*((void *)this + 12) + v28);
      int v34 = *v33;
      int v35 = *((_DWORD *)v6 + 7);
      *((_DWORD *)v6 + 7) = v35 | 1;
      LODWORD(v33) = v33[1];
      *((_DWORD *)v6 + 7) = v35 | 3;
      *((_DWORD *)v6 + 4) = v34;
      *((_DWORD *)v6 + 5) = v33;
      ++v29;
      v28 += 8;
    }
    while (v29 < *((int *)this + 22));
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    do
    {
      uint64_t v38 = *((void *)this + 14);
      int v39 = *((_DWORD *)a2 + 15);
      uint64_t v40 = *((int *)a2 + 14);
      if ((int)v40 >= v39)
      {
        if (v39 == *((_DWORD *)a2 + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 48));
          int v39 = *((_DWORD *)a2 + 15);
        }
        *((_DWORD *)a2 + 15) = v39 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v41 = *((void *)a2 + 6);
      *((_DWORD *)a2 + 14) = v40 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)wireless_diagnostics::google::protobuf::FieldDescriptor::CopyTo((wireless_diagnostics::google::protobuf::FieldDescriptor *)(v38 + v36), *(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(v41 + 8 * v40));
      ++v37;
      v36 += 120;
    }
    while (v37 < *((int *)this + 26));
  }
  uint64_t v42 = (void ***)*((void *)this + 4);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::MessageOptions::default_instance(v6, v7, v8, v9);
  if (v42 != result)
  {
    *((_DWORD *)a2 + 39) |= 0x40u;
    if (!*((void *)a2 + 18)) {
      operator new();
    }
    int v44 = (void ***)*((void *)this + 4);
    uint64_t v45 = (void ***)*((void *)a2 + 18);
    return wireless_diagnostics::google::protobuf::MessageOptions::CopyFrom(v45, v44);
  }
  return result;
}

void sub_2135D461C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumDescriptor::CopyTo(wireless_diagnostics::google::protobuf::EnumDescriptor *this, wireless_diagnostics::google::protobuf::EnumDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 15) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::EnumOptions *)std::string::operator=(v5, v4);
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *((void *)this + 6);
      int v13 = *((_DWORD *)a2 + 9);
      uint64_t v14 = *((int *)a2 + 8);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a2 + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)a2 + 24));
          int v13 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v13 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumValueDescriptorProto>::New();
      }
      uint64_t v15 = *((void *)a2 + 3);
      *((_DWORD *)a2 + 8) = v14 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::EnumOptions *)wireless_diagnostics::google::protobuf::EnumValueDescriptor::CopyTo((wireless_diagnostics::google::protobuf::EnumValueDescriptor *)(v12 + v10), *(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto **)(v15 + 8 * v14));
      ++v11;
      v10 += 40;
    }
    while (v11 < *((int *)this + 11));
  }
  uint64_t v16 = (void ***)*((void *)this + 4);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::EnumOptions::default_instance(v6, v7, v8, v9);
  if (v16 != result)
  {
    *((_DWORD *)a2 + 15) |= 4u;
    if (!*((void *)a2 + 6)) {
      operator new();
    }
    uint64_t v18 = (void ***)*((void *)this + 4);
    int v19 = (void ***)*((void *)a2 + 6);
    return wireless_diagnostics::google::protobuf::EnumOptions::CopyFrom(v19, v18);
  }
  return result;
}

void sub_2135D47D4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::ServiceDescriptor::CopyTo(wireless_diagnostics::google::protobuf::ServiceDescriptor *this, wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 15) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::ServiceOptions *)std::string::operator=(v5, v4);
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *((void *)this + 5);
      int v13 = *((_DWORD *)a2 + 9);
      uint64_t v14 = *((int *)a2 + 8);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a2 + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)a2 + 24));
          int v13 = *((_DWORD *)a2 + 9);
        }
        *((_DWORD *)a2 + 9) = v13 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::MethodDescriptorProto>::New();
      }
      uint64_t v15 = *((void *)a2 + 3);
      *((_DWORD *)a2 + 8) = v14 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::ServiceOptions *)wireless_diagnostics::google::protobuf::MethodDescriptor::CopyTo((wireless_diagnostics::google::protobuf::MethodDescriptor *)(v12 + v10), *(wireless_diagnostics::google::protobuf::MethodDescriptorProto **)(v15 + 8 * v14));
      ++v11;
      v10 += 48;
    }
    while (v11 < *((int *)this + 8));
  }
  uint64_t v16 = (void ***)*((void *)this + 3);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::ServiceOptions::default_instance(v6, v7, v8, v9);
  if (v16 != result)
  {
    *((_DWORD *)a2 + 15) |= 4u;
    if (!*((void *)a2 + 6)) {
      operator new();
    }
    uint64_t v18 = (void ***)*((void *)this + 3);
    int v19 = (void ***)*((void *)a2 + 6);
    return wireless_diagnostics::google::protobuf::ServiceOptions::CopyFrom(v19, v18);
  }
  return result;
}

void sub_2135D498C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FieldDescriptor::CopyTo(wireless_diagnostics::google::protobuf::FieldDescriptor *this, wireless_diagnostics::google::protobuf::FieldDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 18) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  uint64_t v6 = (std::string *)MEMORY[0x263F8C740];
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  uint64_t v7 = std::string::operator=(v5, v4);
  int v11 = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 6) = *((_DWORD *)this + 10);
  *((_DWORD *)a2 + 7) = *((_DWORD *)this + 12);
  int v12 = *((_DWORD *)this + 11);
  int v13 = v11 | 0xE;
  *((_DWORD *)a2 + 18) = v11 | 0xE;
  *((_DWORD *)a2 + 16) = v12;
  if (*((unsigned char *)this + 52))
  {
    if (!*(unsigned char *)(*((void *)this + 7) + 41))
    {
      *((_DWORD *)a2 + 18) = v11 | 0x2E;
      if (*((std::string **)a2 + 5) == v6) {
        operator new();
      }
      MEMORY[0x21668DA90]();
      int v13 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v13 | 0x20;
    uint64_t v14 = (std::string *)*((void *)a2 + 5);
    if (v14 == v6) {
      operator new();
    }
    uint64_t v15 = *(void *)(*((void *)this + 7) + 8);
    int v16 = *(char *)(v15 + 23);
    if (v16 >= 0) {
      uint64_t v17 = *(const std::string::value_type **)(*((void *)this + 7) + 8);
    }
    else {
      uint64_t v17 = *(const std::string::value_type **)v15;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *(unsigned __int8 *)(v15 + 23);
    }
    else {
      std::string::size_type v18 = *(void *)(v15 + 8);
    }
    uint64_t v7 = std::string::append(v14, v17, v18);
    int v12 = *((_DWORD *)this + 11);
  }
  int v19 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v12];
  if (v19 == 8)
  {
    int v24 = *((_DWORD *)a2 + 18);
    if (!*(unsigned char *)(*((void *)this + 10) + 41))
    {
      *((_DWORD *)a2 + 18) = v24 | 0x10;
      if (*((std::string **)a2 + 4) == v6) {
        operator new();
      }
      MEMORY[0x21668DA90]();
      int v24 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v24 | 0x10;
    uint64_t v22 = (std::string *)*((void *)a2 + 4);
    if (v22 == v6) {
      operator new();
    }
    uint64_t v23 = *((void *)this + 10);
  }
  else
  {
    if (v19 != 10) {
      goto LABEL_42;
    }
    uint64_t v20 = *((void *)this + 9);
    int v21 = *((_DWORD *)a2 + 18);
    if (*(unsigned char *)(v20 + 40))
    {
      *((_DWORD *)a2 + 16) = 1;
      v21 &= ~8u;
      *((_DWORD *)a2 + 18) = v21;
    }
    if (!*(unsigned char *)(v20 + 41))
    {
      *((_DWORD *)a2 + 18) = v21 | 0x10;
      if (*((std::string **)a2 + 4) == v6) {
        operator new();
      }
      MEMORY[0x21668DA90]();
      int v21 = *((_DWORD *)a2 + 18);
    }
    *((_DWORD *)a2 + 18) = v21 | 0x10;
    uint64_t v22 = (std::string *)*((void *)a2 + 4);
    if (v22 == v6) {
      operator new();
    }
    uint64_t v23 = *((void *)this + 9);
  }
  uint64_t v25 = *(void *)(v23 + 8);
  int v26 = *(char *)(v25 + 23);
  if (v26 >= 0) {
    uint64_t v27 = (const std::string::value_type *)v25;
  }
  else {
    uint64_t v27 = *(const std::string::value_type **)v25;
  }
  if (v26 >= 0) {
    std::string::size_type v28 = *(unsigned __int8 *)(v25 + 23);
  }
  else {
    std::string::size_type v28 = *(void *)(v25 + 8);
  }
  uint64_t v7 = std::string::append(v22, v27, v28);
LABEL_42:
  if (*((unsigned char *)this + 104))
  {
    wireless_diagnostics::google::protobuf::FieldDescriptor::DefaultValueAsString(this, 0, v9, &__str);
    *((_DWORD *)a2 + 18) |= 0x40u;
    uint64_t v29 = (std::string *)*((void *)a2 + 6);
    if (v29 == v6) {
      operator new();
    }
    uint64_t v7 = std::string::operator=(v29, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  int v30 = (void ***)*((void *)this + 12);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::FieldOptions::default_instance((wireless_diagnostics::google::protobuf::FieldOptions *)v7, v8, (uint64_t)v9, v10);
  if (v30 != result)
  {
    *((_DWORD *)a2 + 18) |= 0x80u;
    uint64_t v32 = (void ***)*((void *)a2 + 7);
    if (!v32) {
      operator new();
    }
    return wireless_diagnostics::google::protobuf::FieldOptions::CopyFrom(v32, *((void ****)this + 12));
  }
  return result;
}

void sub_2135D4D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x21668DB60](v15, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FileDescriptor::CopySourceCodeInfoTo(wireless_diagnostics::google::protobuf::FileDescriptor *this, wireless_diagnostics::google::protobuf::FileDescriptorProto *a2, uint64_t a3, const char *a4)
{
  uint64_t v6 = (void ***)*((void *)this + 19);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance(this, (uint64_t)a2, a3, a4);
  if (v6 != result)
  {
    *((_DWORD *)a2 + 51) |= 0x400u;
    if (!*((void *)a2 + 24)) {
      operator new();
    }
    uint64_t v8 = (void ***)*((void *)this + 19);
    uint64_t v9 = (void ***)*((void *)a2 + 24);
    return wireless_diagnostics::google::protobuf::SourceCodeInfo::CopyFrom(v9, v8);
  }
  return result;
}

void sub_2135D4E30(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumValueDescriptor::CopyTo(wireless_diagnostics::google::protobuf::EnumValueDescriptor *this, wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 10) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  uint64_t v6 = std::string::operator=(v5, v4);
  int v7 = *((_DWORD *)this + 4);
  *((_DWORD *)a2 + 10) |= 2u;
  *((_DWORD *)a2 + 8) = v7;
  uint64_t v8 = (void ***)*((void *)this + 4);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance((wireless_diagnostics::google::protobuf::EnumValueOptions *)v6, v9, v10, v11);
  if (v8 != result)
  {
    *((_DWORD *)a2 + 10) |= 4u;
    if (!*((void *)a2 + 3)) {
      operator new();
    }
    int v13 = (void ***)*((void *)this + 4);
    uint64_t v14 = (void ***)*((void *)a2 + 3);
    return wireless_diagnostics::google::protobuf::EnumValueOptions::CopyFrom(v14, v13);
  }
  return result;
}

void sub_2135D4F54(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::MethodDescriptor::CopyTo(wireless_diagnostics::google::protobuf::MethodDescriptor *this, wireless_diagnostics::google::protobuf::MethodDescriptorProto *a2)
{
  int v4 = *(const std::string **)this;
  *((_DWORD *)a2 + 13) |= 1u;
  BOOL v5 = (std::string *)*((void *)a2 + 2);
  uint64_t v6 = (std::string *)MEMORY[0x263F8C740];
  if (v5 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v5, v4);
  if (!*(unsigned char *)(*((void *)this + 3) + 41))
  {
    *((_DWORD *)a2 + 13) |= 2u;
    if (*((std::string **)a2 + 3) == v6) {
      operator new();
    }
    MEMORY[0x21668DA90]();
  }
  *((_DWORD *)a2 + 13) |= 2u;
  int v7 = (std::string *)*((void *)a2 + 3);
  if (v7 == v6) {
    operator new();
  }
  uint64_t v8 = *(void *)(*((void *)this + 3) + 8);
  int v9 = *(char *)(v8 + 23);
  if (v9 >= 0) {
    uint64_t v10 = *(const std::string::value_type **)(*((void *)this + 3) + 8);
  }
  else {
    uint64_t v10 = *(const std::string::value_type **)v8;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(v8 + 8);
  }
  std::string::append(v7, v10, v11);
  if (!*(unsigned char *)(*((void *)this + 4) + 41))
  {
    *((_DWORD *)a2 + 13) |= 4u;
    if (*((std::string **)a2 + 4) == v6) {
      operator new();
    }
    MEMORY[0x21668DA90]();
  }
  *((_DWORD *)a2 + 13) |= 4u;
  int v12 = (std::string *)*((void *)a2 + 4);
  if (v12 == v6) {
    operator new();
  }
  uint64_t v13 = *(void *)(*((void *)this + 4) + 8);
  int v14 = *(char *)(v13 + 23);
  if (v14 >= 0) {
    uint64_t v15 = *(const std::string::value_type **)(*((void *)this + 4) + 8);
  }
  else {
    uint64_t v15 = *(const std::string::value_type **)v13;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    std::string::size_type v16 = *(void *)(v13 + 8);
  }
  uint64_t v17 = std::string::append(v12, v15, v16);
  std::string::size_type v18 = (void ***)*((void *)this + 5);
  uint64_t result = (void ***)wireless_diagnostics::google::protobuf::MethodOptions::default_instance((wireless_diagnostics::google::protobuf::MethodOptions *)v17, v19, v20, v21);
  if (v18 != result)
  {
    *((_DWORD *)a2 + 13) |= 8u;
    if (!*((void *)a2 + 5)) {
      operator new();
    }
    uint64_t v23 = (void ***)*((void *)this + 5);
    int v24 = (void ***)*((void *)a2 + 5);
    return wireless_diagnostics::google::protobuf::MethodOptions::CopyFrom(v24, v23);
  }
  return result;
}

void sub_2135D51CC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::FileDescriptor::DebugString(wireless_diagnostics::google::protobuf::FileDescriptor *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100]<0>(a2, "syntax = \"proto2\";\n\n");
  v68[0] = 0;
  v68[1] = 0;
  v66[1] = 0;
  uint64_t v67 = (uint64_t *)v68;
  uint64_t v65 = (uint64_t *)v66;
  v66[0] = 0;
  uint64_t v4 = *((int *)this + 10);
  if (v4)
  {
    BOOL v5 = (int *)*((void *)this + 6);
    uint64_t v6 = 4 * v4;
    do
    {
      std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(&v67, (uint64_t *)v68, v5, v5);
      ++v5;
      v6 -= 4;
    }
    while (v6);
  }
  uint64_t v7 = *((int *)this + 14);
  if (v7)
  {
    uint64_t v8 = (int *)*((void *)this + 8);
    uint64_t v9 = 4 * v7;
    do
    {
      std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(&v65, (uint64_t *)v66, v8, v8);
      ++v8;
      v9 -= 4;
    }
    while (v9);
  }
  if (*((int *)this + 6) < 1) {
    goto LABEL_35;
  }
  uint64_t v10 = 0;
  do
  {
    std::string::size_type v11 = v68[0];
    if (!v68[0])
    {
LABEL_14:
      uint64_t v13 = v66[0];
      if (!v66[0])
      {
LABEL_19:
        uint64_t v15 = **(void **)(*((void *)this + 4) + 8 * v10);
        int v16 = *(char *)(v15 + 23);
        uint64_t v17 = *(void *)(v15 + 8);
        if (v16 < 0) {
          uint64_t v15 = *(void *)v15;
        }
        uint64_t v87 = (void *)v15;
        int v18 = v16;
        if (v16 < 0) {
          int v18 = v17;
        }
        int v88 = v18;
        uint64_t v85 = 0;
        int v86 = -1;
        uint64_t v83 = 0;
        int v84 = -1;
        uint64_t v81 = 0;
        int v82 = -1;
        uint64_t v79 = 0;
        int v80 = -1;
        uint64_t v77 = 0;
        int v78 = -1;
        uint64_t v75 = 0;
        int v76 = -1;
        uint64_t v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        uint64_t v69 = 0;
        int v70 = -1;
        *(void *)&long long v57 = &v75;
        *((void *)&v57 + 1) = &v73;
        wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "import \"$0\";\n",
          (uint64_t)&v87,
          (uint64_t)&v85,
          (uint64_t)&v83,
          (uint64_t)&v81,
          (uint64_t)&v79,
          (uint64_t)&v77,
          v57,
          (uint64_t)&v71,
          (uint64_t)&v69);
        goto LABEL_34;
      }
      while (1)
      {
        uint64_t v14 = *((int *)v13 + 7);
        if (v10 >= v14)
        {
          if (v10 <= v14)
          {
            uint64_t v23 = **(void **)(*((void *)this + 4) + 8 * v10);
            int v24 = *(char *)(v23 + 23);
            uint64_t v25 = *(void *)(v23 + 8);
            if (v24 < 0) {
              uint64_t v23 = *(void *)v23;
            }
            uint64_t v87 = (void *)v23;
            int v26 = v24;
            if (v24 < 0) {
              int v26 = v25;
            }
            int v88 = v26;
            uint64_t v85 = 0;
            int v86 = -1;
            uint64_t v83 = 0;
            int v84 = -1;
            uint64_t v81 = 0;
            int v82 = -1;
            uint64_t v79 = 0;
            int v80 = -1;
            uint64_t v77 = 0;
            int v78 = -1;
            uint64_t v75 = 0;
            int v76 = -1;
            uint64_t v73 = 0;
            int v74 = -1;
            uint64_t v71 = 0;
            int v72 = -1;
            uint64_t v69 = 0;
            int v70 = -1;
            *(void *)&long long v59 = &v75;
            *((void *)&v59 + 1) = &v73;
            wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "import weak \"$0\";\n",
              (uint64_t)&v87,
              (uint64_t)&v85,
              (uint64_t)&v83,
              (uint64_t)&v81,
              (uint64_t)&v79,
              (uint64_t)&v77,
              v59,
              (uint64_t)&v71,
              (uint64_t)&v69);
            goto LABEL_34;
          }
          ++v13;
        }
        uint64_t v13 = (void *)*v13;
        if (!v13) {
          goto LABEL_19;
        }
      }
    }
    while (1)
    {
      uint64_t v12 = *((int *)v11 + 7);
      if (v10 >= v12) {
        break;
      }
LABEL_13:
      std::string::size_type v11 = (void *)*v11;
      if (!v11) {
        goto LABEL_14;
      }
    }
    if (v10 > v12)
    {
      ++v11;
      goto LABEL_13;
    }
    uint64_t v19 = **(void **)(*((void *)this + 4) + 8 * v10);
    int v20 = *(char *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if (v20 < 0) {
      uint64_t v19 = *(void *)v19;
    }
    uint64_t v87 = (void *)v19;
    int v22 = v20;
    if (v20 < 0) {
      int v22 = v21;
    }
    int v88 = v22;
    uint64_t v85 = 0;
    int v86 = -1;
    uint64_t v83 = 0;
    int v84 = -1;
    uint64_t v81 = 0;
    int v82 = -1;
    uint64_t v79 = 0;
    int v80 = -1;
    uint64_t v77 = 0;
    int v78 = -1;
    uint64_t v75 = 0;
    int v76 = -1;
    uint64_t v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    uint64_t v69 = 0;
    int v70 = -1;
    *(void *)&long long v58 = &v75;
    *((void *)&v58 + 1) = &v73;
    wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "import public \"$0\";\n",
      (uint64_t)&v87,
      (uint64_t)&v85,
      (uint64_t)&v83,
      (uint64_t)&v81,
      (uint64_t)&v79,
      (uint64_t)&v77,
      v58,
      (uint64_t)&v71,
      (uint64_t)&v69);
LABEL_34:
    ++v10;
  }
  while (v10 < *((int *)this + 6));
LABEL_35:
  uint64_t v27 = *((void *)this + 1);
  int v28 = *(unsigned __int8 *)(v27 + 23);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_45;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_45;
  }
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) != 0) {
    uint64_t v27 = *(void *)v27;
  }
  uint64_t v87 = (void *)v27;
  if ((v28 & 0x80u) == 0) {
    int v30 = v28;
  }
  else {
    int v30 = v29;
  }
  int v88 = v30;
  uint64_t v85 = 0;
  int v86 = -1;
  uint64_t v83 = 0;
  int v84 = -1;
  uint64_t v81 = 0;
  int v82 = -1;
  uint64_t v79 = 0;
  int v80 = -1;
  uint64_t v77 = 0;
  int v78 = -1;
  uint64_t v75 = 0;
  int v76 = -1;
  uint64_t v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  uint64_t v69 = 0;
  int v70 = -1;
  *(void *)&long long v60 = &v75;
  *((void *)&v60 + 1) = &v73;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "package $0;\n\n",
    (uint64_t)&v87,
    (uint64_t)&v85,
    (uint64_t)&v83,
    (uint64_t)&v81,
    (uint64_t)&v79,
    (uint64_t)&v77,
    v60,
    (uint64_t)&v71,
    (uint64_t)&v69);
LABEL_45:
  {
    std::string::append(a2, "\n");
  }
  if (*((int *)this + 22) >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::EnumDescriptor::DebugString((int *)(*((void *)this + 12) + v31), 0, a2);
      std::string::append(a2, "\n");
      ++v32;
      v31 += 56;
    }
    while (v32 < *((int *)this + 22));
  }
  v64[0] = 0;
  v64[1] = 0;
  int64_t v63 = (uint64_t *)v64;
  int v33 = *((_DWORD *)this + 30);
  if (v33 >= 1)
  {
    uint64_t v34 = 0;
    for (uint64_t i = 0; i < v33; ++i)
    {
      uint64_t v36 = *((void *)this + 16) + v34;
      if (*(_DWORD *)(v36 + 44) == 10)
      {
        uint64_t v87 = *(void **)(v36 + 72);
        std::__tree<wireless_diagnostics::google::protobuf::Descriptor const*>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const*>(&v63, (unint64_t *)&v87, (uint64_t *)&v87);
        int v33 = *((_DWORD *)this + 30);
      }
      v34 += 120;
    }
  }
  int v37 = *((_DWORD *)this + 18);
  if (v37 >= 1)
  {
    for (uint64_t j = 0; j < v37; ++j)
    {
      unint64_t v39 = *((void *)this + 10) + 120 * j;
      for (k = v64[0]; k; k = (void *)*k)
      {
        unint64_t v41 = k[4];
        if (v39 >= v41)
        {
          if (v41 >= v39) {
            goto LABEL_67;
          }
          ++k;
        }
      }
      uint64_t v42 = *(void **)v39;
      int v43 = *(char *)(*(void *)v39 + 23);
      uint64_t v44 = v42[1];
      if (v43 < 0) {
        uint64_t v42 = (void *)*v42;
      }
      uint64_t v87 = v42;
      int v45 = v43;
      if (v43 < 0) {
        int v45 = v44;
      }
      int v88 = v45;
      uint64_t v85 = 0;
      int v86 = -1;
      uint64_t v83 = 0;
      int v84 = -1;
      uint64_t v81 = 0;
      int v82 = -1;
      uint64_t v79 = 0;
      int v80 = -1;
      uint64_t v77 = 0;
      int v78 = -1;
      uint64_t v75 = 0;
      int v76 = -1;
      uint64_t v73 = 0;
      int v74 = -1;
      uint64_t v71 = 0;
      int v72 = -1;
      uint64_t v69 = 0;
      int v70 = -1;
      *(void *)&long long v61 = &v75;
      *((void *)&v61 + 1) = &v73;
      wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "message $0", (uint64_t)&v87, (uint64_t)&v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v61, (uint64_t)&v71, (uint64_t)&v69);
      wireless_diagnostics::google::protobuf::Descriptor::DebugString(*((void *)this + 10) + 120 * j, 0, a2);
      std::string::append(a2, "\n");
      int v37 = *((_DWORD *)this + 18);
LABEL_67:
      ;
    }
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::ServiceDescriptor::DebugString((int *)(*((void *)this + 14) + v46), a2);
      std::string::append(a2, "\n");
      ++v47;
      v46 += 48;
    }
    while (v47 < *((int *)this + 26));
  }
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 56;
    do
    {
      uint64_t v51 = *((void *)this + 16);
      if (*(void *)(v51 + v50) != v49)
      {
        uint64_t v49 = *(void *)(v51 + v50);
        if (v50 != 56)
        {
          std::string::append(a2, "}\n\n");
          uint64_t v49 = *(void *)(*((void *)this + 16) + v50);
        }
        uint64_t v52 = *(void *)(v49 + 8);
        int v53 = *(char *)(v52 + 23);
        uint64_t v54 = *(void *)(v52 + 8);
        if (v53 < 0) {
          uint64_t v52 = *(void *)v52;
        }
        uint64_t v87 = (void *)v52;
        int v55 = v53;
        if (v53 < 0) {
          int v55 = v54;
        }
        int v88 = v55;
        uint64_t v85 = 0;
        int v86 = -1;
        uint64_t v83 = 0;
        int v84 = -1;
        uint64_t v81 = 0;
        int v82 = -1;
        uint64_t v79 = 0;
        int v80 = -1;
        uint64_t v77 = 0;
        int v78 = -1;
        uint64_t v75 = 0;
        int v76 = -1;
        uint64_t v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        uint64_t v69 = 0;
        int v70 = -1;
        *(void *)&long long v62 = &v75;
        *((void *)&v62 + 1) = &v73;
        wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "extend .$0 {\n", (uint64_t)&v87, (uint64_t)&v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v62, (uint64_t)&v71, (uint64_t)&v69);
        uint64_t v51 = *((void *)this + 16);
      }
      wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString(v51 + v50 - 56, 1, a2);
      ++v48;
      uint64_t v56 = *((int *)this + 30);
      v50 += 120;
    }
    while (v48 < v56);
    if ((int)v56 > 0) {
      std::string::append(a2, "}\n\n");
    }
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&v63, v64[0]);
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&v65, v66[0]);
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&v67, v68[0]);
}

void sub_2135D59F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, void *a15, uint64_t a16, char a17, void *a18, uint64_t a19, char a20,void *a21)
{
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&a14, a15);
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&a17, a18);
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&a20, a21);
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::anonymous namespace'::FormatLineOptions(int a1, const wireless_diagnostics::google::protobuf::Message *a2, std::string *a3)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__p, 2 * a1, 32);
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v8 = v19;
  uint64_t v7 = v20;
  if (Options)
  {
    if (v20 == v19)
    {
      uint64_t v7 = v19;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v10 = 0;
      do
      {
        int v11 = v24;
        p_p = (void **)__p;
        if ((v24 & 0x80u) == 0) {
          p_p = &__p;
        }
        int v43 = p_p;
        if ((v24 & 0x80u) != 0) {
          int v11 = v23;
        }
        int v44 = v11;
        uint64_t v13 = v8 + v9;
        if (*(char *)(v8 + v9 + 23) >= 0) {
          uint64_t v14 = v8 + v9;
        }
        else {
          uint64_t v14 = *(void *)(v8 + v9);
        }
        uint64_t v41 = v14;
        int v15 = *(unsigned __int8 *)(v13 + 23);
        uint64_t v16 = *(void *)(v13 + 8);
        if ((v15 & 0x80u) == 0) {
          LODWORD(v16) = v15;
        }
        int v42 = v16;
        uint64_t v39 = 0;
        int v40 = -1;
        uint64_t v37 = 0;
        int v38 = -1;
        uint64_t v35 = 0;
        int v36 = -1;
        uint64_t v33 = 0;
        int v34 = -1;
        uint64_t v31 = 0;
        int v32 = -1;
        uint64_t v29 = 0;
        int v30 = -1;
        uint64_t v27 = 0;
        int v28 = -1;
        uint64_t v25 = 0;
        int v26 = -1;
        *((void *)&v18 + 1) = &v29;
        *(void *)&long long v18 = &v31;
        wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0option $1;\n",
          (uint64_t)&v43,
          (uint64_t)&v41,
          (uint64_t)&v39,
          (uint64_t)&v37,
          (uint64_t)&v35,
          (uint64_t)&v33,
          v18,
          (uint64_t)&v27,
          (uint64_t)&v25);
        ++v10;
        uint64_t v8 = v19;
        uint64_t v7 = v20;
        v9 += 24;
      }
      while (0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 3) > v10);
    }
  }
  int v43 = (void **)&v19;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v43);
  if ((char)v24 < 0) {
    operator delete(__p);
  }
  return v8 != v7;
}

void sub_2135D5C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  *(void *)(v21 - 144) = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 144));
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumDescriptor::DebugString(int *a1, int a2, std::string *a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__p, 2 * a2, 32);
  int v6 = v21;
  p_p = __p;
  if ((v21 & 0x80u) == 0) {
    p_p = &__p;
  }
  int v40 = p_p;
  if ((v21 & 0x80u) != 0) {
    int v6 = v20;
  }
  int v41 = v6;
  uint64_t v8 = *(uint64_t **)a1;
  int v9 = *(char *)(*(void *)a1 + 23);
  uint64_t v10 = *(void *)(*(void *)a1 + 8);
  if (v9 < 0) {
    uint64_t v8 = **(uint64_t ***)a1;
  }
  int v38 = v8;
  int v11 = v9;
  if (v9 < 0) {
    int v11 = v10;
  }
  int v39 = v11;
  uint64_t v36 = 0;
  int v37 = -1;
  uint64_t v34 = 0;
  int v35 = -1;
  uint64_t v32 = 0;
  int v33 = -1;
  uint64_t v30 = 0;
  int v31 = -1;
  uint64_t v28 = 0;
  int v29 = -1;
  uint64_t v26 = 0;
  int v27 = -1;
  uint64_t v24 = 0;
  int v25 = -1;
  uint64_t v22 = 0;
  int v23 = -1;
  *(void *)&long long v17 = &v28;
  *((void *)&v17 + 1) = &v26;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0enum $1 {\n", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, v17, (uint64_t)&v24, (uint64_t)&v22);
  int v12 = a2 + 1;
  if (a1[11] >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::EnumValueDescriptor::DebugString((uint64_t ***)(*((void *)a1 + 6) + v13), v12, a3);
      ++v14;
      v13 += 40;
    }
    while (v14 < a1[11]);
  }
  int v15 = v21;
  uint64_t v16 = &__p;
  if ((v21 & 0x80u) != 0) {
    uint64_t v16 = __p;
  }
  int v40 = v16;
  if ((v21 & 0x80u) != 0) {
    int v15 = v20;
  }
  int v41 = v15;
  int v38 = 0;
  int v39 = -1;
  uint64_t v36 = 0;
  int v37 = -1;
  uint64_t v34 = 0;
  int v35 = -1;
  uint64_t v32 = 0;
  int v33 = -1;
  uint64_t v30 = 0;
  int v31 = -1;
  uint64_t v28 = 0;
  int v29 = -1;
  uint64_t v26 = 0;
  int v27 = -1;
  uint64_t v24 = 0;
  int v25 = -1;
  uint64_t v22 = 0;
  int v23 = -1;
  *(void *)&long long v18 = &v28;
  *((void *)&v18 + 1) = &v26;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, v18, (uint64_t)&v24, (uint64_t)&v22);
  if ((char)v21 < 0) {
    operator delete(__p);
  }
}

void sub_2135D5EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::Descriptor::DebugString(uint64_t a1, int a2, std::string *a3)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__p, 2 * a2, 32);
  std::string::append(a3, " {\n");
  uint64_t v6 = (a2 + 1);
  v61[0] = 0;
  v61[1] = 0;
  long long v60 = (uint64_t *)v61;
  int v8 = *(_DWORD *)(a1 + 44);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    for (uint64_t i = 0; i < v8; ++i)
    {
      uint64_t v11 = *(void *)(a1 + 48) + v9;
      if (*(_DWORD *)(v11 + 44) == 10)
      {
        uint64_t v85 = *(void **)(v11 + 72);
        std::__tree<wireless_diagnostics::google::protobuf::Descriptor const*>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const*>(&v60, (unint64_t *)&v85, (uint64_t *)&v85);
        int v8 = *(_DWORD *)(a1 + 44);
      }
      v9 += 120;
    }
  }
  int v12 = *(_DWORD *)(a1 + 104);
  if (v12 >= 1)
  {
    uint64_t v13 = 0;
    for (uint64_t j = 0; j < v12; ++j)
    {
      uint64_t v15 = *(void *)(a1 + 112) + v13;
      if (*(_DWORD *)(v15 + 44) == 10)
      {
        uint64_t v85 = *(void **)(v15 + 72);
        std::__tree<wireless_diagnostics::google::protobuf::Descriptor const*>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const*>(&v60, (unint64_t *)&v85, (uint64_t *)&v85);
        int v12 = *(_DWORD *)(a1 + 104);
      }
      v13 += 120;
    }
  }
  int v59 = a2;
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16 >= 1)
  {
    for (uint64_t k = 0; k < v16; ++k)
    {
      unint64_t v18 = *(void *)(a1 + 64) + 120 * k;
      for (m = v61[0]; m; m = (void *)*m)
      {
        unint64_t v20 = m[4];
        if (v18 >= v20)
        {
          if (v20 >= v18) {
            goto LABEL_27;
          }
          ++m;
        }
      }
      int v21 = v64;
      p_p = __p;
      if ((v64 & 0x80u) == 0) {
        p_p = &__p;
      }
      uint64_t v85 = p_p;
      if ((v64 & 0x80u) != 0) {
        int v21 = v63;
      }
      int v86 = v21;
      int v23 = *(const char **)v18;
      int v24 = *(char *)(*(void *)v18 + 23);
      uint64_t v25 = *((void *)v23 + 1);
      if (v24 < 0) {
        int v23 = *(const char **)v23;
      }
      int v82 = v23;
      int v26 = v24;
      if (v24 < 0) {
        int v26 = v25;
      }
      int v83 = v26;
      uint64_t v79 = 0;
      int v80 = -1;
      uint64_t v77 = 0;
      int v78 = -1;
      uint64_t v75 = 0;
      int v76 = -1;
      uint64_t v73 = 0;
      int v74 = -1;
      uint64_t v71 = 0;
      int v72 = -1;
      uint64_t v69 = 0;
      int v70 = -1;
      uint64_t v67 = 0;
      int v68 = -1;
      uint64_t v65 = 0;
      int v66 = -1;
      *(void *)&long long v53 = &v71;
      *((void *)&v53 + 1) = &v69;
      wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0  message $1", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v53, (uint64_t)&v67, (uint64_t)&v65);
      wireless_diagnostics::google::protobuf::Descriptor::DebugString(*(void *)(a1 + 64) + 120 * k, v6, a3);
      int v16 = *(_DWORD *)(a1 + 56);
LABEL_27:
      ;
    }
  }
  if (*(int *)(a1 + 72) >= 1)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::EnumDescriptor::DebugString((int *)(*(void *)(a1 + 80) + v27), v6, a3);
      ++v28;
      v27 += 56;
    }
    while (v28 < *(int *)(a1 + 72));
  }
  if (*(int *)(a1 + 44) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString(*(void *)(a1 + 48) + v29, v6, a3);
      ++v30;
      v29 += 120;
    }
    while (v30 < *(int *)(a1 + 44));
  }
  if (*(int *)(a1 + 88) >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    do
    {
      int v33 = v64;
      uint64_t v34 = __p;
      if ((v64 & 0x80u) == 0) {
        uint64_t v34 = &__p;
      }
      uint64_t v85 = v34;
      if ((v64 & 0x80u) != 0) {
        int v33 = v63;
      }
      int v86 = v33;
      int v82 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer((wireless_diagnostics::google::protobuf *)*(unsigned int *)(*(void *)(a1 + 96) + v31), v84, v7);
      int v83 = strlen(v82);
      uint64_t v79 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer((wireless_diagnostics::google::protobuf *)(*(_DWORD *)(*(void *)(a1 + 96) + v31 + 4) - 1), v81, v35);
      int v80 = strlen(v79);
      uint64_t v77 = 0;
      int v78 = -1;
      uint64_t v75 = 0;
      int v76 = -1;
      uint64_t v73 = 0;
      int v74 = -1;
      uint64_t v71 = 0;
      int v72 = -1;
      uint64_t v69 = 0;
      int v70 = -1;
      uint64_t v67 = 0;
      int v68 = -1;
      uint64_t v65 = 0;
      int v66 = -1;
      *((void *)&v54 + 1) = &v69;
      *(void *)&long long v54 = &v71;
      wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0  extensions $1 to $2;\n",
        (uint64_t)&v85,
        (uint64_t)&v82,
        (uint64_t)&v79,
        (uint64_t)&v77,
        (uint64_t)&v75,
        (uint64_t)&v73,
        v54,
        (uint64_t)&v67,
        (uint64_t)&v65);
      ++v32;
      v31 += 8;
    }
    while (v32 < *(int *)(a1 + 88));
  }
  if (*(int *)(a1 + 104) >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 56;
    do
    {
      uint64_t v39 = *(void *)(a1 + 112);
      if (*(void *)(v39 + v38) != v37)
      {
        uint64_t v37 = *(void *)(v39 + v38);
        if (v38 != 56)
        {
          int v40 = v64;
          int v41 = __p;
          if ((v64 & 0x80u) == 0) {
            int v41 = &__p;
          }
          uint64_t v85 = v41;
          if ((v64 & 0x80u) != 0) {
            int v40 = v63;
          }
          int v86 = v40;
          int v82 = 0;
          int v83 = -1;
          uint64_t v79 = 0;
          int v80 = -1;
          uint64_t v77 = 0;
          int v78 = -1;
          uint64_t v75 = 0;
          int v76 = -1;
          uint64_t v73 = 0;
          int v74 = -1;
          uint64_t v71 = 0;
          int v72 = -1;
          uint64_t v69 = 0;
          int v70 = -1;
          uint64_t v67 = 0;
          int v68 = -1;
          uint64_t v65 = 0;
          int v66 = -1;
          *(void *)&long long v55 = &v71;
          *((void *)&v55 + 1) = &v69;
          wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0  }\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v55, (uint64_t)&v67, (uint64_t)&v65);
          uint64_t v37 = *(void *)(*(void *)(a1 + 112) + v38);
        }
        int v42 = v64;
        int v43 = __p;
        if ((v64 & 0x80u) == 0) {
          int v43 = &__p;
        }
        uint64_t v85 = v43;
        if ((v64 & 0x80u) != 0) {
          int v42 = v63;
        }
        int v86 = v42;
        int v44 = *(const char **)(v37 + 8);
        int v45 = v44[23];
        uint64_t v46 = *((void *)v44 + 1);
        if (v45 < 0) {
          int v44 = *(const char **)v44;
        }
        int v82 = v44;
        int v47 = v45;
        if (v45 < 0) {
          int v47 = v46;
        }
        int v83 = v47;
        uint64_t v79 = 0;
        int v80 = -1;
        uint64_t v77 = 0;
        int v78 = -1;
        uint64_t v75 = 0;
        int v76 = -1;
        uint64_t v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        uint64_t v69 = 0;
        int v70 = -1;
        uint64_t v67 = 0;
        int v68 = -1;
        uint64_t v65 = 0;
        int v66 = -1;
        *(void *)&long long v56 = &v71;
        *((void *)&v56 + 1) = &v69;
        wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0  extend .$1 {\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v56, (uint64_t)&v67, (uint64_t)&v65);
        uint64_t v39 = *(void *)(a1 + 112);
      }
      wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString(v39 + v38 - 56, (v59 + 2), a3);
      ++v36;
      uint64_t v48 = *(int *)(a1 + 104);
      v38 += 120;
    }
    while (v36 < v48);
    if ((int)v48 > 0)
    {
      int v49 = v64;
      uint64_t v50 = &__p;
      if ((v64 & 0x80u) != 0) {
        uint64_t v50 = __p;
      }
      uint64_t v85 = v50;
      if ((v64 & 0x80u) != 0) {
        int v49 = v63;
      }
      int v86 = v49;
      int v82 = 0;
      int v83 = -1;
      uint64_t v79 = 0;
      int v80 = -1;
      uint64_t v77 = 0;
      int v78 = -1;
      uint64_t v75 = 0;
      int v76 = -1;
      uint64_t v73 = 0;
      int v74 = -1;
      uint64_t v71 = 0;
      int v72 = -1;
      uint64_t v69 = 0;
      int v70 = -1;
      uint64_t v67 = 0;
      int v68 = -1;
      uint64_t v65 = 0;
      int v66 = -1;
      *(void *)&long long v57 = &v71;
      *((void *)&v57 + 1) = &v69;
      wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0  }\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v57, (uint64_t)&v67, (uint64_t)&v65);
    }
  }
  int v51 = v64;
  uint64_t v52 = &__p;
  if ((v64 & 0x80u) != 0) {
    uint64_t v52 = __p;
  }
  uint64_t v85 = v52;
  if ((v64 & 0x80u) != 0) {
    int v51 = v63;
  }
  int v86 = v51;
  int v82 = 0;
  int v83 = -1;
  uint64_t v79 = 0;
  int v80 = -1;
  uint64_t v77 = 0;
  int v78 = -1;
  uint64_t v75 = 0;
  int v76 = -1;
  uint64_t v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  uint64_t v69 = 0;
  int v70 = -1;
  uint64_t v67 = 0;
  int v68 = -1;
  uint64_t v65 = 0;
  int v66 = -1;
  *(void *)&long long v58 = &v71;
  *((void *)&v58 + 1) = &v69;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v85, (uint64_t)&v82, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v58, (uint64_t)&v67, (uint64_t)&v65);
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&v60, v61[0]);
  if ((char)v64 < 0) {
    operator delete(__p);
  }
}

void sub_2135D66CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

std::string *wireless_diagnostics::google::protobuf::ServiceDescriptor::DebugString(int *a1, std::string *this)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(uint64_t **)a1;
  int v5 = *(char *)(*(void *)a1 + 23);
  uint64_t v6 = *(void *)(*(void *)a1 + 8);
  if (v5 < 0) {
    uint64_t v4 = **(uint64_t ***)a1;
  }
  uint64_t v30 = v4;
  int v7 = v5;
  if (v5 < 0) {
    int v7 = v6;
  }
  int v31 = v7;
  uint64_t v28 = 0;
  int v29 = -1;
  uint64_t v26 = 0;
  int v27 = -1;
  uint64_t v24 = 0;
  int v25 = -1;
  uint64_t v22 = 0;
  int v23 = -1;
  uint64_t v20 = 0;
  int v21 = -1;
  uint64_t v18 = 0;
  int v19 = -1;
  uint64_t v16 = 0;
  int v17 = -1;
  uint64_t v14 = 0;
  int v15 = -1;
  uint64_t v12 = 0;
  int v13 = -1;
  *(void *)&long long v11 = &v18;
  *((void *)&v11 + 1) = &v16;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(this, "service $0 {\n", (uint64_t)&v30, (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, v11, (uint64_t)&v14, (uint64_t)&v12);
  if (a1[8] >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::MethodDescriptor::DebugString(*((void *)a1 + 5) + v8, 1, this);
      ++v9;
      v8 += 48;
    }
    while (v9 < a1[8]);
  }
  return std::string::append(this, "}\n");
}

void wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString(uint64_t a1, int a2, std::string *a3)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  memset(&__p, 0, sizeof(__p));
  uint64_t v6 = *(unsigned int *)(a1 + 44);
  if (v6 == 11 || v6 == 14)
  {
    std::operator+<char>();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v50[0];
  }
  else
  {
    MEMORY[0x21668DA90](&__p, (&wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToName)[v6]);
  }
  int v7 = v30;
  p_b = &__b;
  if ((v30 & 0x80u) != 0) {
    p_b = __b;
  }
  v50[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  if ((v30 & 0x80u) != 0) {
    int v7 = v29;
  }
  LODWORD(v50[0].__r_.__value_.__r.__words[1]) = v7;
  uint64_t v48 = (&wireless_diagnostics::google::protobuf::FieldDescriptor::kLabelToName)[*(unsigned int *)(a1 + 48)];
  int v49 = strlen(v48);
  int v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  p_p = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v46 = p_p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v10 = __p.__r_.__value_.__r.__words[1];
  }
  int v47 = v10;
  uint64_t v12 = (uint64_t **)a1;
  if (*(_DWORD *)(a1 + 44) == 10) {
    uint64_t v12 = *(uint64_t ***)(a1 + 72);
  }
  int v13 = *v12;
  int v14 = *((char *)v13 + 23);
  uint64_t v15 = v13[1];
  if (v14 < 0) {
    int v13 = (uint64_t *)*v13;
  }
  int v44 = v13;
  int v16 = v14;
  if (v14 < 0) {
    int v16 = v15;
  }
  int v45 = v16;
  int v41 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer((wireless_diagnostics::google::protobuf *)*(unsigned int *)(a1 + 40), v43, v9);
  int v42 = strlen(v41);
  uint64_t v39 = 0;
  int v40 = -1;
  uint64_t v37 = 0;
  int v38 = -1;
  uint64_t v35 = 0;
  int v36 = -1;
  uint64_t v33 = 0;
  int v34 = -1;
  uint64_t v31 = 0;
  int v32 = -1;
  *(void *)&long long v24 = &v37;
  *((void *)&v24 + 1) = &v35;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0$1 $2 $3 = $4", (uint64_t)v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v41, (uint64_t)&v39, v24, (uint64_t)&v33, (uint64_t)&v31);
  int v18 = *(unsigned __int8 *)(a1 + 104);
  if (*(unsigned char *)(a1 + 104))
  {
    wireless_diagnostics::google::protobuf::FieldDescriptor::DefaultValueAsString((wireless_diagnostics::google::protobuf::FieldDescriptor *)a1, (char *)1, v17, &v26);
    int v19 = (std::string *)v26.__r_.__value_.__r.__words[0];
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v19 = &v26;
    }
    v50[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
    int v20 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v20 = v26.__r_.__value_.__r.__words[1];
    }
    LODWORD(v50[0].__r_.__value_.__r.__words[1]) = v20;
    uint64_t v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    int v44 = 0;
    int v45 = -1;
    int v41 = 0;
    int v42 = -1;
    uint64_t v39 = 0;
    int v40 = -1;
    uint64_t v37 = 0;
    int v38 = -1;
    uint64_t v35 = 0;
    int v36 = -1;
    uint64_t v33 = 0;
    int v34 = -1;
    uint64_t v31 = 0;
    int v32 = -1;
    *(void *)&long long v25 = &v37;
    *((void *)&v25 + 1) = &v35;
    wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v41, (uint64_t)&v39, v25, (uint64_t)&v33, (uint64_t)&v31);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
  }
  memset(v50, 0, 24);
  {
    if (v18) {
      int v21 = ", ";
    }
    else {
      int v21 = " [";
    }
    std::string::append(a3, v21);
    if ((v50[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v22 = v50;
    }
    else {
      uint64_t v22 = (std::string *)v50[0].__r_.__value_.__r.__words[0];
    }
    if ((v50[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v50[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v50[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v22, size);
  }
  else if (!v18)
  {
    goto LABEL_41;
  }
  std::string::append(a3, "]");
LABEL_41:
  if (*(_DWORD *)(a1 + 44) == 10) {
    wireless_diagnostics::google::protobuf::Descriptor::DebugString(*(void *)(a1 + 72), a2, a3);
  }
  else {
    std::string::append(a3, ";\n");
  }
  if (SHIBYTE(v50[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((char)v30 < 0) {
    operator delete(__b);
  }
}

void sub_2135D6C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::Descriptor::DebugString(uint64_t ***this@<X0>, std::string *a2@<X8>)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t v4 = (uint64_t *)*this;
  int v5 = *((char *)*this + 23);
  uint64_t v6 = (*this)[1];
  if (v5 < 0) {
    uint64_t v4 = **this;
  }
  int v27 = v4;
  int v7 = v5;
  if (v5 < 0) {
    int v7 = (int)v6;
  }
  int v28 = v7;
  uint64_t v25 = 0;
  int v26 = -1;
  uint64_t v23 = 0;
  int v24 = -1;
  uint64_t v21 = 0;
  int v22 = -1;
  uint64_t v19 = 0;
  int v20 = -1;
  uint64_t v17 = 0;
  int v18 = -1;
  uint64_t v15 = 0;
  int v16 = -1;
  uint64_t v13 = 0;
  int v14 = -1;
  uint64_t v11 = 0;
  int v12 = -1;
  uint64_t v9 = 0;
  int v10 = -1;
  *(void *)&long long v8 = &v15;
  *((void *)&v8 + 1) = &v13;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "message $0", (uint64_t)&v27, (uint64_t)&v25, (uint64_t)&v23, (uint64_t)&v21, (uint64_t)&v19, (uint64_t)&v17, v8, (uint64_t)&v11, (uint64_t)&v9);
  wireless_diagnostics::google::protobuf::Descriptor::DebugString((uint64_t)this, 0, a2);
}

void sub_2135D6E24(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString(wireless_diagnostics::google::protobuf::FieldDescriptor *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v4 = *(uint64_t **)(*((void *)this + 7) + 8);
    int v5 = *((char *)v4 + 23);
    uint64_t v6 = v4[1];
    if (v5 < 0) {
      uint64_t v4 = (uint64_t *)*v4;
    }
    int v28 = v4;
    int v7 = v5;
    if (v5 < 0) {
      int v7 = v6;
    }
    int v29 = v7;
    uint64_t v26 = 0;
    int v27 = -1;
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v22 = 0;
    int v23 = -1;
    uint64_t v20 = 0;
    int v21 = -1;
    uint64_t v18 = 0;
    int v19 = -1;
    uint64_t v16 = 0;
    int v17 = -1;
    uint64_t v14 = 0;
    int v15 = -1;
    uint64_t v12 = 0;
    int v13 = -1;
    uint64_t v10 = 0;
    int v11 = -1;
    *(void *)&long long v9 = &v16;
    *((void *)&v9 + 1) = &v14;
    wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a2, "extend .$0 {\n", (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, (uint64_t)&v18, v9, (uint64_t)&v12, (uint64_t)&v10);
    int v8 = 1;
  }
  else
  {
    int v8 = 0;
  }
  wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString((uint64_t)this, v8, a2);
  if (*((unsigned char *)this + 52)) {
    std::string::append(a2, "}\n");
  }
}

void sub_2135D6F98(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL wireless_diagnostics::google::protobuf::anonymous namespace'::FormatBracketedOptions(int a1, const wireless_diagnostics::google::protobuf::Message *a2, std::string *a3)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  {
    std::string __p = 0;
    std::string::size_type v9 = 0;
    uint64_t v10 = 0;
    wireless_diagnostics::google::protobuf::JoinStrings(&v11, ", ", (uint64_t)&__p);
    if (v10 >= 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if (v10 >= 0) {
      std::string::size_type v5 = HIBYTE(v10);
    }
    else {
      std::string::size_type v5 = v9;
    }
    std::string::append(a3, p_p, v5);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p);
    }
  }
  BOOL v6 = v11 != v12;
  std::string __p = &v11;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return v6;
}

void sub_2135D7064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::string __p = &a15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumDescriptor::DebugString(wireless_diagnostics::google::protobuf::EnumDescriptor *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  wireless_diagnostics::google::protobuf::EnumDescriptor::DebugString((int *)this, 0, a2);
}

void sub_2135D70D0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptor::DebugString(uint64_t ***a1, int a2, std::string *a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  int v7 = v20;
  p_b = (std::string *)__b;
  if ((v20 & 0x80u) == 0) {
    p_b = (std::string *)&__b;
  }
  int v40 = p_b;
  if ((v20 & 0x80u) != 0) {
    int v7 = v19;
  }
  int v41 = v7;
  std::string::size_type v9 = *a1;
  int v10 = *((char *)*a1 + 23);
  uint64_t v11 = (*a1)[1];
  if (v10 < 0) {
    std::string::size_type v9 = (uint64_t **)**a1;
  }
  int v38 = v9;
  int v12 = v10;
  if (v10 < 0) {
    int v12 = (int)v11;
  }
  int v39 = v12;
  uint64_t v35 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer((wireless_diagnostics::google::protobuf *)*((unsigned int *)a1 + 4), v37, v6);
  int v36 = strlen(v35);
  uint64_t v33 = 0;
  int v34 = -1;
  uint64_t v31 = 0;
  int v32 = -1;
  uint64_t v29 = 0;
  int v30 = -1;
  uint64_t v27 = 0;
  int v28 = -1;
  uint64_t v25 = 0;
  int v26 = -1;
  uint64_t v23 = 0;
  int v24 = -1;
  uint64_t v21 = 0;
  int v22 = -1;
  *(void *)&long long v15 = &v27;
  *((void *)&v15 + 1) = &v25;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0$1 = $2", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, v15, (uint64_t)&v23, (uint64_t)&v21);
  memset(&__p, 0, sizeof(__p));
  {
    int v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v40 = p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v13 = __p.__r_.__value_.__r.__words[1];
    }
    int v41 = v13;
    int v38 = 0;
    int v39 = -1;
    uint64_t v35 = 0;
    int v36 = -1;
    uint64_t v33 = 0;
    int v34 = -1;
    uint64_t v31 = 0;
    int v32 = -1;
    uint64_t v29 = 0;
    int v30 = -1;
    uint64_t v27 = 0;
    int v28 = -1;
    uint64_t v25 = 0;
    int v26 = -1;
    uint64_t v23 = 0;
    int v24 = -1;
    uint64_t v21 = 0;
    int v22 = -1;
    *(void *)&long long v16 = &v27;
    *((void *)&v16 + 1) = &v25;
    wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, " [$0]", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, v16, (uint64_t)&v23, (uint64_t)&v21);
  }
  std::string::append(a3, ";\n");
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((char)v20 < 0) {
    operator delete(__b);
  }
}

void sub_2135D7348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptor::DebugString(uint64_t ***this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  wireless_diagnostics::google::protobuf::EnumValueDescriptor::DebugString(this, 0, a2);
}

void sub_2135D73C0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *wireless_diagnostics::google::protobuf::ServiceDescriptor::DebugString@<X0>(wireless_diagnostics::google::protobuf::ServiceDescriptor *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return wireless_diagnostics::google::protobuf::ServiceDescriptor::DebugString((int *)this, a2);
}

void sub_2135D740C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::MethodDescriptor::DebugString(uint64_t a1, int a2, std::string *a3)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  int v6 = v30;
  p_b = (std::string *)__b;
  if ((v30 & 0x80u) == 0) {
    p_b = (std::string *)&__b;
  }
  int v49 = p_b;
  if ((v30 & 0x80u) != 0) {
    int v6 = v29;
  }
  int v50 = v6;
  int v8 = *(void **)a1;
  int v9 = *(char *)(*(void *)a1 + 23);
  uint64_t v10 = *(void *)(*(void *)a1 + 8);
  if (v9 < 0) {
    int v8 = **(void ***)a1;
  }
  int v47 = v8;
  int v11 = v9;
  if (v9 < 0) {
    int v11 = v10;
  }
  int v48 = v11;
  uint64_t v12 = *(void *)(a1 + 32);
  int v13 = *(uint64_t **)(*(void *)(a1 + 24) + 8);
  int v14 = *((char *)v13 + 23);
  uint64_t v15 = v13[1];
  if (v14 < 0) {
    int v13 = (uint64_t *)*v13;
  }
  int v45 = v13;
  int v16 = v14;
  if (v14 < 0) {
    int v16 = v15;
  }
  int v46 = v16;
  int v17 = *(uint64_t **)(v12 + 8);
  int v18 = *((char *)v17 + 23);
  uint64_t v19 = v17[1];
  if (v18 < 0) {
    int v17 = (uint64_t *)*v17;
  }
  int v43 = v17;
  int v20 = v18;
  if (v18 < 0) {
    int v20 = v19;
  }
  int v44 = v20;
  uint64_t v41 = 0;
  int v42 = -1;
  uint64_t v39 = 0;
  int v40 = -1;
  uint64_t v37 = 0;
  int v38 = -1;
  uint64_t v35 = 0;
  int v36 = -1;
  uint64_t v33 = 0;
  int v34 = -1;
  uint64_t v31 = 0;
  int v32 = -1;
  *(void *)&long long v25 = &v37;
  *((void *)&v25 + 1) = &v35;
  wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, "$0rpc $1(.$2) returns (.$3)", (uint64_t)&v49, (uint64_t)&v47, (uint64_t)&v45, (uint64_t)&v43, (uint64_t)&v41, (uint64_t)&v39, v25, (uint64_t)&v33, (uint64_t)&v31);
  memset(&__p, 0, sizeof(__p));
  {
    int v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v49 = p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v21 = __p.__r_.__value_.__r.__words[1];
    }
    int v50 = v21;
    int v23 = v30;
    int v24 = &__b;
    if ((v30 & 0x80u) != 0) {
      int v24 = __b;
    }
    int v47 = v24;
    if ((v30 & 0x80u) != 0) {
      int v23 = v29;
    }
    int v48 = v23;
    int v45 = 0;
    int v46 = -1;
    int v43 = 0;
    int v44 = -1;
    uint64_t v41 = 0;
    int v42 = -1;
    uint64_t v39 = 0;
    int v40 = -1;
    uint64_t v37 = 0;
    int v38 = -1;
    uint64_t v35 = 0;
    int v36 = -1;
    uint64_t v33 = 0;
    int v34 = -1;
    uint64_t v31 = 0;
    int v32 = -1;
    *(void *)&long long v26 = &v37;
    *((void *)&v26 + 1) = &v35;
    wireless_diagnostics::google::protobuf::strings::SubstituteAndAppend(a3, " {\n$0$1}\n", (uint64_t)&v49, (uint64_t)&v47, (uint64_t)&v45, (uint64_t)&v43, (uint64_t)&v41, (uint64_t)&v39, v26, (uint64_t)&v33, (uint64_t)&v31);
  }
  else
  {
    std::string::append(a3, ";\n");
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((char)v30 < 0) {
    operator delete(__b);
  }
}

void sub_2135D76CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::MethodDescriptor::DebugString(wireless_diagnostics::google::protobuf::MethodDescriptor *this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  wireless_diagnostics::google::protobuf::MethodDescriptor::DebugString((uint64_t)this, 0, a2);
}

void sub_2135D7740(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  wireless_diagnostics::google::protobuf::internal::CheckNotNull<wireless_diagnostics::google::protobuf::SourceLocation>((uint64_t)"/Library/Caches/com.apple.xbs/Sources/AWDMetrics_protobuf/google/protobuf/descriptor.cc", 2000, (uint64_t)"'out_location' must not be NULL", a3);
  uint64_t v6 = *(void *)(a1 + 152);
  if (!v6) {
    return 0;
  }
  int v7 = *(_DWORD *)(v6 + 24);
  int v9 = *(_DWORD **)a2;
  int v8 = *(_DWORD **)(a2 + 8);
  unint64_t v10 = ((uint64_t)v8 - *(void *)a2) >> 2;
  uint64_t v11 = v10 <= 1 ? 1 : ((uint64_t)v8 - *(void *)a2) >> 2;
  if (v7 < 1) {
    return 0;
  }
  uint64_t v12 = 0;
  uint64_t v13 = v7 & ~(v7 >> 31);
  while (1)
  {
    uint64_t v14 = *(void *)(*(void *)(v6 + 16) + 8 * v12);
    if (v10 == *(_DWORD *)(v14 + 24))
    {
      if (v8 == v9) {
        goto LABEL_20;
      }
      uint64_t v15 = *(_DWORD **)(v14 + 16);
      if (*v9 == *v15)
      {
        uint64_t v16 = 1;
        do
        {
          unint64_t v17 = v16;
          if (v11 == v16) {
            break;
          }
          int v18 = v9[v16];
          int v19 = v15[v16++];
        }
        while (v18 == v19);
        if (v10 <= v17)
        {
LABEL_20:
          int v20 = *(_DWORD *)(v14 + 48);
          if ((v20 - 3) <= 1) {
            break;
          }
        }
      }
    }
    if (++v12 == v13) {
      return 0;
    }
  }
  int v22 = *(_DWORD **)(v14 + 40);
  *(_DWORD *)a3 = *v22;
  *(_DWORD *)(a3 + 8) = v22[1];
  *(_DWORD *)(a3 + 4) = v22[2 * (v20 != 3)];
  *(_DWORD *)(a3 + 12) = v22[v20 - 1];
  std::string::operator=((std::string *)(a3 + 16), *(const std::string **)(v14 + 64));
  std::string::operator=((std::string *)(a3 + 40), *(const std::string **)(*(void *)(*(void *)(v6 + 16) + 8 * v12) + 72));
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::internal::CheckNotNull<wireless_diagnostics::google::protobuf::SourceLocation>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  return a4;
}

void sub_2135D791C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::FieldDescriptor::is_packed(wireless_diagnostics::google::protobuf::FieldDescriptor *this)
{
  return *((_DWORD *)this + 12) == 3
      && (*((_DWORD *)this + 11) - 13) <= 0xFFFFFFFB
      && (uint64_t v1 = *((void *)this + 12)) != 0
      && *(unsigned char *)(v1 + 44) != 0;
}

uint64_t wireless_diagnostics::google::protobuf::Descriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::Descriptor::GetLocationPath(a1, (uint64_t)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 16), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D79D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    unint64_t v10 = (void *)(a2 + 16);
    unint64_t v9 = *(void *)(a2 + 16);
    uint64_t v11 = *(_DWORD **)(a2 + 8);
    if ((unint64_t)v11 >= v9)
    {
      int v18 = *(_DWORD **)a2;
      uint64_t v19 = ((uint64_t)v11 - *(void *)a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        int v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v22);
        int v18 = *(_DWORD **)a2;
        uint64_t v11 = *(_DWORD **)(a2 + 8);
      }
      else
      {
        int v23 = 0;
      }
      int v40 = &v23[4 * v19];
      uint64_t v41 = &v23[4 * v22];
      *(_DWORD *)int v40 = 4;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *--v11;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *(void *)a2 = v40;
      *(void *)(a2 + 8) = v8;
      *(void *)(a2 + 16) = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *uint64_t v11 = 4;
      uint64_t v8 = v11 + 1;
    }
    *(void *)(a2 + 8) = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      int v44 = (void *)(v43 + 64);
    }
    else {
      int v44 = (void *)(*(void *)(a1 + 16) + 80);
    }
    int v29 = -286331153 * ((unint64_t)(a1 - *v44) >> 3);
    if ((unint64_t)v8 >= *v10)
    {
      unsigned __int8 v30 = *(_DWORD **)a2;
      uint64_t v45 = ((uint64_t)v8 - *(void *)a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v48);
          unsigned __int8 v30 = *(_DWORD **)a2;
          uint64_t v8 = *(_DWORD **)(a2 + 8);
        }
        else
        {
          int v49 = 0;
        }
        int v36 = &v49[4 * v45];
        uint64_t v37 = &v49[4 * v48];
        *(_DWORD *)int v36 = v29;
        int v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *--v8;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *uint64_t v8 = v29;
    int v38 = v8 + 1;
    goto LABEL_69;
  }
  wireless_diagnostics::google::protobuf::Descriptor::GetLocationPath(v4, a2);
  uint64_t v6 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  int v7 = *(_DWORD **)(a2 + 8);
  if ((unint64_t)v7 >= v5)
  {
    uint64_t v12 = *(_DWORD **)a2;
    uint64_t v13 = ((uint64_t)v7 - *(void *)a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      unint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v16);
      uint64_t v12 = *(_DWORD **)a2;
      int v7 = *(_DWORD **)(a2 + 8);
    }
    else
    {
      unint64_t v17 = 0;
    }
    int v24 = &v17[4 * v13];
    long long v25 = &v17[4 * v16];
    *(_DWORD *)int v24 = 3;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *--v7;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *int v7 = 3;
    uint64_t v8 = v7 + 1;
  }
  *(void *)(a2 + 8) = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    int v28 = (void *)(v27 + 64);
  }
  else {
    int v28 = (void *)(*(void *)(a1 + 16) + 80);
  }
  int v29 = -286331153 * ((unint64_t)(a1 - *v28) >> 3);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  unsigned __int8 v30 = *(_DWORD **)a2;
  uint64_t v31 = ((uint64_t)v8 - *(void *)a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    uint64_t v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v34);
    unsigned __int8 v30 = *(_DWORD **)a2;
    uint64_t v8 = *(_DWORD **)(a2 + 8);
  }
  else
  {
    uint64_t v35 = 0;
  }
  int v36 = &v35[4 * v31];
  uint64_t v37 = &v35[4 * v34];
  *(_DWORD *)int v36 = v29;
  int v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *--v8;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 16) = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  *(void *)(a2 + 8) = v38;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::FieldDescriptor::GetLocationPath(a1, (char **)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 32), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D7D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  wireless_diagnostics::google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 56), (uint64_t)a2);
  unint64_t v5 = a2 + 2;
  unint64_t v4 = (unint64_t)a2[2];
  uint64_t v6 = a2[1];
  if ((unint64_t)v6 >= v4)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = (v6 - *a2) >> 2;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62) {
      goto LABEL_39;
    }
    uint64_t v11 = v4 - (void)v8;
    if (v11 >> 1 > v10) {
      unint64_t v10 = v11 >> 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v12);
      uint64_t v8 = *a2;
      uint64_t v6 = a2[1];
    }
    else
    {
      uint64_t v13 = 0;
    }
    unint64_t v14 = &v13[4 * v9];
    uint64_t v15 = &v13[4 * v12];
    *(_DWORD *)unint64_t v14 = 2;
    int v7 = v14 + 4;
    while (v6 != v8)
    {
      int v16 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - 1) = v16;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v15;
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *(_DWORD *)uint64_t v6 = 2;
    int v7 = v6 + 4;
  }
  a2[1] = v7;
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v17 = *(void *)(a1 + 64);
    if (v17) {
      int v18 = (void *)(v17 + 112);
    }
    else {
      int v18 = (void *)(*(void *)(a1 + 32) + 128);
    }
  }
  else
  {
    int v18 = (void *)(*(void *)(a1 + 56) + 48);
  }
  int v19 = -286331153 * ((unint64_t)(a1 - *v18) >> 3);
  if ((unint64_t)v7 < *v5)
  {
    *(_DWORD *)int v7 = v19;
    unint64_t v20 = v7 + 4;
    goto LABEL_38;
  }
  uint64_t v21 = *a2;
  uint64_t v22 = (v7 - *a2) >> 2;
  unint64_t v23 = v22 + 1;
  if ((unint64_t)(v22 + 1) >> 62) {
LABEL_39:
  }
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  uint64_t v24 = *v5 - (void)v21;
  if (v24 >> 1 > v23) {
    unint64_t v23 = v24 >> 1;
  }
  if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v25 = v23;
  }
  if (v25)
  {
    int v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v25);
    uint64_t v21 = *a2;
    int v7 = a2[1];
  }
  else
  {
    int v26 = 0;
  }
  uint64_t v27 = &v26[4 * v22];
  int v28 = &v26[4 * v25];
  *(_DWORD *)uint64_t v27 = v19;
  unint64_t v20 = v27 + 4;
  while (v7 != v21)
  {
    int v29 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v27 - 1) = v29;
    v27 -= 4;
  }
  *a2 = v27;
  a2[1] = v20;
  a2[2] = v28;
  if (v21) {
    operator delete(v21);
  }
LABEL_38:
  a2[1] = v20;
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::EnumDescriptor::GetLocationPath(a1, (char **)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 16), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D7FF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    unint64_t v10 = a2 + 2;
    unint64_t v9 = (unint64_t)a2[2];
    uint64_t v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      int v18 = *a2;
      uint64_t v19 = (v11 - *a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        unint64_t v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v22);
        int v18 = *a2;
        uint64_t v11 = a2[1];
      }
      else
      {
        unint64_t v23 = 0;
      }
      int v40 = &v23[4 * v19];
      uint64_t v41 = &v23[4 * v22];
      *(_DWORD *)int v40 = 5;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *a2 = v40;
      a2[1] = v8;
      a2[2] = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v11 = 5;
      uint64_t v8 = v11 + 4;
    }
    a2[1] = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      int v44 = (void *)(v43 + 80);
    }
    else {
      int v44 = (void *)(*(void *)(a1 + 16) + 96);
    }
    int v29 = -1227133513 * ((unint64_t)(a1 - *v44) >> 3);
    if ((unint64_t)v8 >= *v10)
    {
      unsigned __int8 v30 = *a2;
      uint64_t v45 = (v8 - *a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v48);
          unsigned __int8 v30 = *a2;
          uint64_t v8 = a2[1];
        }
        else
        {
          int v49 = 0;
        }
        int v36 = &v49[4 * v45];
        uint64_t v37 = &v49[4 * v48];
        *(_DWORD *)int v36 = v29;
        int v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *((_DWORD *)v8 - 1);
          v8 -= 4;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *(_DWORD *)uint64_t v8 = v29;
    int v38 = v8 + 4;
    goto LABEL_69;
  }
  wireless_diagnostics::google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  uint64_t v6 = a2 + 2;
  unint64_t v5 = (unint64_t)a2[2];
  int v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    unint64_t v12 = *a2;
    uint64_t v13 = (v7 - *a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v16);
      unint64_t v12 = *a2;
      int v7 = a2[1];
    }
    else
    {
      uint64_t v17 = 0;
    }
    uint64_t v24 = &v17[4 * v13];
    unint64_t v25 = &v17[4 * v16];
    *(_DWORD *)uint64_t v24 = 4;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *a2 = v24;
    a2[1] = v8;
    a2[2] = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *(_DWORD *)int v7 = 4;
    uint64_t v8 = v7 + 4;
  }
  a2[1] = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    int v28 = (void *)(v27 + 80);
  }
  else {
    int v28 = (void *)(*(void *)(a1 + 16) + 96);
  }
  int v29 = -1227133513 * ((unint64_t)(a1 - *v28) >> 3);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  unsigned __int8 v30 = *a2;
  uint64_t v31 = (v8 - *a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    uint64_t v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v34);
    unsigned __int8 v30 = *a2;
    uint64_t v8 = a2[1];
  }
  else
  {
    uint64_t v35 = 0;
  }
  int v36 = &v35[4 * v31];
  uint64_t v37 = &v35[4 * v34];
  *(_DWORD *)int v36 = v29;
  int v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *a2 = v36;
  a2[1] = v38;
  a2[2] = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  a2[1] = v38;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::MethodDescriptor::GetLocationPath(a1, (char **)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*(void *)(a1 + 16) + 16), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D83B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::MethodDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  wireless_diagnostics::google::protobuf::ServiceDescriptor::GetLocationPath(*(void *)(a1 + 16), a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    int v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v11);
      int v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 2;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    uint64_t v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 40)) >> 4);
  if (v6 < v4)
  {
    *(_DWORD *)uint64_t v6 = v15;
    unint64_t v16 = v6 + 4;
    goto LABEL_33;
  }
  uint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    unint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v21);
    uint64_t v17 = *a2;
    uint64_t v6 = a2[1];
  }
  else
  {
    unint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  unint64_t v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::ServiceDescriptor::GetLocationPath(a1, (char **)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 16), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D85E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  unint64_t v5 = a2 + 2;
  uint64_t v4 = a2[2];
  uint64_t v6 = a2[1];
  if (v6 >= v4)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = (v6 - *a2) >> 2;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v11 = v4 - v8;
    if (v11 >> 1 > v10) {
      unint64_t v10 = v11 >> 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)v5, v12);
      uint64_t v8 = *a2;
      uint64_t v6 = a2[1];
    }
    else
    {
      uint64_t v13 = 0;
    }
    int v14 = &v13[4 * v9];
    uint64_t v4 = &v13[4 * v12];
    *(_DWORD *)int v14 = 6;
    int v7 = v14 + 4;
    while (v6 != v8)
    {
      int v15 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - 1) = v15;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = *v5;
    }
  }
  else
  {
    *(_DWORD *)uint64_t v6 = 6;
    int v7 = v6 + 4;
  }
  a2[1] = v7;
  int v16 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 112)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)int v7 = v16;
    uint64_t v17 = v7 + 4;
    goto LABEL_33;
  }
  uint64_t v18 = *a2;
  uint64_t v19 = (v7 - *a2) >> 2;
  unint64_t v20 = v19 + 1;
  if ((unint64_t)(v19 + 1) >> 62) {
LABEL_34:
  }
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  uint64_t v21 = v4 - v18;
  if (v21 >> 1 > v20) {
    unint64_t v20 = v21 >> 1;
  }
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v22 = v20;
  }
  if (v22)
  {
    unint64_t v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)v5, v22);
    uint64_t v18 = *a2;
    int v7 = a2[1];
  }
  else
  {
    unint64_t v23 = 0;
  }
  uint64_t v24 = &v23[4 * v19];
  int v25 = &v23[4 * v22];
  *(_DWORD *)uint64_t v24 = v16;
  uint64_t v17 = v24 + 4;
  while (v7 != v18)
  {
    int v26 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v24 - 1) = v26;
    v24 -= 4;
  }
  *a2 = v24;
  a2[1] = v17;
  a2[2] = v25;
  if (v18) {
    operator delete(v18);
  }
LABEL_33:
  a2[1] = v17;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  wireless_diagnostics::google::protobuf::EnumValueDescriptor::GetLocationPath(a1, (char **)&__p);
  uint64_t SourceLocation = wireless_diagnostics::google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*(void *)(a1 + 24) + 16), (uint64_t)&__p, a2);
  if (__p)
  {
    int v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_2135D881C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  wireless_diagnostics::google::protobuf::EnumDescriptor::GetLocationPath(*(void *)(a1 + 24), a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    int v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v11);
      int v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 2;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    uint64_t v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -858993459 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 24) + 48)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)uint64_t v6 = v15;
    int v16 = v6 + 4;
    goto LABEL_33;
  }
  uint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    unint64_t v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v21);
    uint64_t v17 = *a2;
    uint64_t v6 = a2[1];
  }
  else
  {
    unint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  int v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

wireless_diagnostics::google::protobuf::FileDescriptor *wireless_diagnostics::google::protobuf::DescriptorPool::BuildFile(wireless_diagnostics::google::protobuf::DescriptorPool *this, const std::string **a2)
{
  if (*((void *)this + 1))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(void *)this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  uint64_t v4 = (void *)*((void *)this + 4);
  v7[0] = this;
  v7[1] = v4;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  v15[0] = 0;
  v15[1] = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  char v10 = 0;
  uint64_t v13 = 0;
  int v14 = v15;
  long long v16 = 0u;
  long long v17 = 0u;
  unint64_t v5 = wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildFile((wireless_diagnostics::google::protobuf::DescriptorBuilder *)v7, a2);
  wireless_diagnostics::google::protobuf::DescriptorBuilder::~DescriptorBuilder(v7);
  return v5;
}

void sub_2135D8B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double wireless_diagnostics::google::protobuf::DescriptorBuilder::DescriptorBuilder(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, const wireless_diagnostics::google::protobuf::DescriptorPool *a2, wireless_diagnostics::google::protobuf::DescriptorPool::Tables *a3, wireless_diagnostics::google::protobuf::DescriptorPool::ErrorCollector *a4)
{
  *(void *)this = a2;
  *((void *)this + 1) = a3;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 2) = a4;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = 0;
  *((void *)this + 12) = (char *)this + 104;
  double result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  return result;
}

{
  double result;

  *(void *)this = a2;
  *((void *)this + 1) = a3;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 2) = a4;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = 0;
  *((void *)this + 12) = (char *)this + 104;
  double result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  return result;
}

wireless_diagnostics::google::protobuf::FileDescriptor *wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildFile(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, const std::string **a2)
{
  uint64_t v66 = *MEMORY[0x263EF8340];
  uint64_t v4 = (char *)this + 56;
  std::string::operator=((std::string *)((char *)this + 56), a2[2]);
  unint64_t v5 = (void *)(*((void *)this + 1) + 240);
  if (*((char *)this + 79) >= 0) {
    std::string::size_type v6 = (std::string::size_type)v4;
  }
  else {
    std::string::size_type v6 = *((void *)this + 7);
  }
  v62.__r_.__value_.__r.__words[0] = v6;
  int v7 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v5, (const char **)&v62.__r_.__value_.__l.__data_);
  if (!v7) {
    goto LABEL_31;
  }
  long long v8 = (wireless_diagnostics::google::protobuf::FileDescriptor *)v7[3];
  if (!v8) {
    goto LABEL_31;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)&v62);
  wireless_diagnostics::google::protobuf::FileDescriptor::CopyTo(v8, (wireless_diagnostics::google::protobuf::FileDescriptorProto *)&v62);
  wireless_diagnostics::google::protobuf::MessageLite::SerializeAsString((uint64_t *)&v63, (wireless_diagnostics::google::protobuf::MessageLite *)&v62);
  wireless_diagnostics::google::protobuf::MessageLite::SerializeAsString((uint64_t *)v64, (wireless_diagnostics::google::protobuf::MessageLite *)a2);
  char v9 = HIBYTE(v63.__r_.__value_.__r.__words[2]);
  if ((v63.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v63.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v63.__r_.__value_.__l.__size_;
  }
  unint64_t v11 = v65;
  int v12 = (char)v65;
  if ((v65 & 0x80u) != 0) {
    unint64_t v11 = (unint64_t)v64[1];
  }
  if (size != v11)
  {
    BOOL v22 = 0;
    if (((char)v65 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if ((v65 & 0x80u) == 0) {
    uint64_t v13 = v64;
  }
  else {
    uint64_t v13 = (void **)v64[0];
  }
  if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
  {
    BOOL v22 = memcmp(v63.__r_.__value_.__l.__data_, v13, v63.__r_.__value_.__l.__size_) == 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)&v63.__r_.__value_.__s + 23))
  {
    uint64_t v14 = HIBYTE(v63.__r_.__value_.__r.__words[2]) - 1;
    int v15 = &v63;
    do
    {
      int v17 = v15->__r_.__value_.__s.__data_[0];
      int v15 = (std::string *)((char *)v15 + 1);
      int v16 = v17;
      int v19 = *(unsigned __int8 *)v13;
      uint64_t v13 = (void **)((char *)v13 + 1);
      int v18 = v19;
      BOOL v21 = v14-- != 0;
      BOOL v22 = v16 == v18;
    }
    while (v16 == v18 && v21);
LABEL_28:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_29;
    }
LABEL_25:
    operator delete(v64[0]);
    if ((*((unsigned char *)&v63.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
  BOOL v22 = 1;
  if ((char)v65 < 0) {
    goto LABEL_25;
  }
LABEL_29:
  if (v9 < 0) {
LABEL_26:
  }
    operator delete(v63.__r_.__value_.__l.__data_);
LABEL_30:
  wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)&v62);
  if (v22) {
    return v8;
  }
LABEL_31:
  unint64_t v23 = (uint64_t *)*((void *)this + 1);
  uint64_t v24 = *v23;
  unint64_t v61 = v23[1];
  if (v61 == *v23)
  {
LABEL_52:
    if (*(void *)(*(void *)this + 8))
    {
      unint64_t v34 = (long long *)a2[2];
      if (v61 >= v23[2])
      {
        uint64_t v35 = std::vector<std::string>::__push_back_slow_path<std::string const&>(v23, v34);
      }
      else
      {
        std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v23, v34);
        uint64_t v35 = v61 + 24;
      }
      v23[1] = v35;
      if (*((int *)a2 + 10) >= 1)
      {
        uint64_t v47 = 0;
        while (1)
        {
          uint64_t v48 = *((void *)&a2[4]->__r_.__value_.__l.__data_ + v47);
          int v49 = (void *)(*((void *)this + 1) + 240);
          if (*(char *)(v48 + 23) >= 0) {
            std::string::size_type v50 = a2[4]->__r_.__value_.__r.__words[v47];
          }
          else {
            std::string::size_type v50 = *(void *)v48;
          }
          v62.__r_.__value_.__r.__words[0] = v50;
          uint64_t v51 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(v49, (const char **)&v62.__r_.__value_.__l.__data_);
          if (v51 && v51[3]) {
            goto LABEL_84;
          }
          uint64_t v52 = *(wireless_diagnostics::google::protobuf::DescriptorPool **)this;
          if (!*(void *)(*(void *)this + 24)) {
            goto LABEL_83;
          }
          if (!wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(*(wireless_diagnostics::google::protobuf::internal::Mutex ***)(*(void *)this + 24), *(&a2[4]->__r_.__value_.__l.__data_ + v47)))break; {
LABEL_84:
          }
          if (++v47 >= *((int *)a2 + 10)) {
            goto LABEL_85;
          }
        }
        uint64_t v52 = *(wireless_diagnostics::google::protobuf::DescriptorPool **)this;
LABEL_83:
        wireless_diagnostics::google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v52, *(&a2[4]->__r_.__value_.__l.__data_ + v47));
        goto LABEL_84;
      }
LABEL_85:
      long long v53 = (uint64_t *)*((void *)this + 1);
      uint64_t v54 = v53[1];
      long long v55 = (void **)(v54 - 24);
      unint64_t v23 = v53;
      if (*(char *)(v54 - 1) < 0)
      {
        operator delete(*v55);
        unint64_t v23 = (uint64_t *)*((void *)this + 1);
      }
      v53[1] = (uint64_t)v55;
    }
    wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddCheckpoint((wireless_diagnostics::google::protobuf::DescriptorPool::Tables *)v23);
    Bytes = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateBytes(*((wireless_diagnostics::google::protobuf::DescriptorPool::Tables **)this+ 1), 160);
    *((void *)this + 10) = Bytes;
    if ((*((unsigned char *)a2 + 205) & 4) == 0)
    {
      *((void *)Bytes + 19) = wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance(Bytes, v57, v58, v59);
      wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateFileTables(*((wireless_diagnostics::google::protobuf::DescriptorPool::Tables **)this
                                                                                         + 1));
    }
    wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::SourceCodeInfo>();
  }
  uint64_t v25 = 0;
  int v26 = a2[2];
  int v27 = SHIBYTE(v26->__r_.__value_.__r.__words[2]);
  if (v27 >= 0) {
    std::string::size_type v28 = HIBYTE(v26->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v28 = v26->__r_.__value_.__l.__size_;
  }
  if ((unint64_t)((uint64_t)(v61 - v24) / 24) <= 1) {
    uint64_t v29 = 1;
  }
  else {
    uint64_t v29 = (uint64_t)(v61 - v24) / 24;
  }
  while (1)
  {
    unsigned __int8 v30 = (unsigned __int8 *)(v24 + 24 * v25);
    uint64_t v31 = v30[23];
    uint64_t v32 = (v31 & 0x80u) == 0 ? v30[23] : *((void *)v30 + 1);
    if (v32 == v28)
    {
      if (v27 >= 0) {
        uint64_t v33 = v26;
      }
      else {
        uint64_t v33 = (const std::string *)v26->__r_.__value_.__r.__words[0];
      }
      if ((v31 & 0x80) == 0)
      {
        if (!v30[23]) {
          break;
        }
        while (*v30 == v33->__r_.__value_.__s.__data_[0])
        {
          ++v30;
          uint64_t v33 = (const std::string *)((char *)v33 + 1);
          if (!--v31) {
            goto LABEL_55;
          }
        }
        goto LABEL_51;
      }
      if (!memcmp(*(const void **)v30, v33, *((void *)v30 + 1))) {
        break;
      }
    }
LABEL_51:
    if (++v25 == v29) {
      goto LABEL_52;
    }
  }
LABEL_55:
  std::string::basic_string[abi:ne180100]<0>(&v62, "File recursively imports itself: ");
  uint64_t v36 = **((void **)this + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v36) >> 3) > v25)
  {
    unint64_t v37 = v25;
    uint64_t v38 = 24 * v25;
    do
    {
      uint64_t v39 = v36 + v38;
      int v40 = *(char *)(v39 + 23);
      if (v40 >= 0) {
        uint64_t v41 = (const std::string::value_type *)v39;
      }
      else {
        uint64_t v41 = *(const std::string::value_type **)v39;
      }
      if (v40 >= 0) {
        std::string::size_type v42 = *(unsigned __int8 *)(v39 + 23);
      }
      else {
        std::string::size_type v42 = *(void *)(v39 + 8);
      }
      std::string::append(&v62, v41, v42);
      std::string::append(&v62, " -> ");
      ++v37;
      uint64_t v36 = **((void **)this + 1);
      v38 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v36) >> 3) > v37);
  }
  uint64_t v43 = a2[2];
  int v44 = SHIBYTE(v43->__r_.__value_.__r.__words[2]);
  if (v44 >= 0) {
    uint64_t v45 = (const std::string::value_type *)a2[2];
  }
  else {
    uint64_t v45 = (const std::string::value_type *)v43->__r_.__value_.__r.__words[0];
  }
  if (v44 >= 0) {
    std::string::size_type v46 = HIBYTE(v43->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v46 = v43->__r_.__value_.__l.__size_;
  }
  std::string::append(&v62, v45, v46);
  wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (uint64_t)a2[2], (uint64_t)a2, 9, (uint64_t)&v62);
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v62.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_2135D9B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, char *a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

wireless_diagnostics::google::protobuf::FileDescriptor *wireless_diagnostics::google::protobuf::DescriptorPool::BuildFileCollectingErrors(wireless_diagnostics::google::protobuf::DescriptorPool *this, const std::string **a2, wireless_diagnostics::google::protobuf::DescriptorPool::ErrorCollector *a3)
{
  if (*((void *)this + 1))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  if (*(void *)this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  std::string::size_type v6 = (void *)*((void *)this + 4);
  v9[0] = this;
  v9[1] = v6;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v9[2] = a3;
  memset(&v9[3], 0, 24);
  char v10 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = v15;
  long long v16 = 0u;
  long long v17 = 0u;
  int v7 = wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildFile((wireless_diagnostics::google::protobuf::DescriptorBuilder *)v9, a2);
  wireless_diagnostics::google::protobuf::DescriptorBuilder::~DescriptorBuilder(v9);
  return v7;
}

void sub_2135D9E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 151) < 0) {
    operator delete(this[16]);
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)(this + 12), this[13]);
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  unint64_t v2 = this[3];
  if (v2)
  {
    uint64_t v3 = (uint64_t)this[4];
    uint64_t v4 = this[3];
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 64;
      }
      while ((void *)v3 != v2);
      uint64_t v4 = this[3];
    }
    this[4] = v2;
    operator delete(v4);
  }
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v6 + 16))(v6, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    }
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  *(unsigned char *)(a1 + 48) = 1;
}

void sub_2135DA048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a1 + 120))
  {
    std::operator+<char>();
    long long v8 = std::string::append(&v28, "\" seems to be defined in \"");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = **(void **)(a1 + 120);
    int v11 = *(char *)(v10 + 23);
    if (v11 >= 0) {
      uint64_t v12 = **(const std::string::value_type ***)(a1 + 120);
    }
    else {
      uint64_t v12 = *(const std::string::value_type **)v10;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(v10 + 8);
    }
    uint64_t v14 = std::string::append(&v29, v12, v13);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    long long v16 = std::string::append(&v30, "\", which is not imported by \"");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    int v18 = *(char *)(a1 + 79);
    if (v18 >= 0) {
      int v19 = (const std::string::value_type *)(a1 + 56);
    }
    else {
      int v19 = *(const std::string::value_type **)(a1 + 56);
    }
    if (v18 >= 0) {
      std::string::size_type v20 = *(unsigned __int8 *)(a1 + 79);
    }
    else {
      std::string::size_type v20 = *(void *)(a1 + 64);
    }
    BOOL v21 = std::string::append(&v31, v19, v20);
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    unint64_t v23 = std::string::append(&v32, "\".  To use it here, please add the necessary import.");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    std::string::size_type v34 = v23->__r_.__value_.__r.__words[2];
    long long v33 = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v33);
    if (SHIBYTE(v34) < 0) {
      operator delete((void *)v33);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v25 = (void *)v28.__r_.__value_.__r.__words[0];
LABEL_30:
      operator delete(v25);
    }
  }
  else
  {
    std::operator+<char>();
    int v26 = std::string::append(&v32, "\" is not defined.");
    long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    std::string::size_type v34 = v26->__r_.__value_.__r.__words[2];
    long long v33 = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (uint64_t)&v33);
    if (SHIBYTE(v34) < 0) {
      operator delete((void *)v33);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v25 = (void *)v32.__r_.__value_.__r.__words[0];
      goto LABEL_30;
    }
  }
}

void sub_2135DA2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (*(char *)(v35 - 57) < 0) {
    operator delete(*(void **)(v35 - 80));
  }
  if (*(char *)(v35 - 89) < 0) {
    operator delete(*(void **)(v35 - 112));
  }
  _Unwind_Resume(exception_object);
}

BOOL wireless_diagnostics::google::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, const void **a3)
{
  uint64_t v4 = *(const void ***)(a2 + 8);
  size_t v5 = *((unsigned __int8 *)v4 + 23);
  if ((v5 & 0x80u) == 0) {
    size_t v6 = *((unsigned __int8 *)v4 + 23);
  }
  else {
    size_t v6 = (size_t)v4[1];
  }
  int v7 = (unsigned char *)*((unsigned __int8 *)a3 + 23);
  if (*((char *)a3 + 23) < 0)
  {
    size_t v8 = (size_t)a3[1];
    if (v6 < v8) {
      return 0;
    }
  }
  else
  {
    size_t v8 = *((unsigned __int8 *)a3 + 23);
    if (v6 < (unint64_t)v7) {
      return 0;
    }
  }
  if ((v5 & 0x80) == 0)
  {
    if (v8 != -1)
    {
      if (v5 >= v8) {
        size_t v9 = v8;
      }
      else {
        size_t v9 = *((unsigned __int8 *)v4 + 23);
      }
      uint64_t v10 = *(const void ***)(a2 + 8);
      goto LABEL_19;
    }
LABEL_34:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if (v8 == -1) {
    goto LABEL_34;
  }
  if ((unint64_t)v4[1] >= v8) {
    size_t v9 = v8;
  }
  else {
    size_t v9 = (size_t)v4[1];
  }
  uint64_t v10 = (const void **)*v4;
LABEL_19:
  if ((char)v7 >= 0) {
    int v11 = a3;
  }
  else {
    int v11 = *a3;
  }
  int v12 = memcmp(v10, v11, v9);
  if (v9 != v8 || v12 != 0) {
    return 0;
  }
  if ((v7 & 0x80) != 0) {
    int v7 = a3[1];
  }
  if ((unsigned char *)v6 == v7) {
    return 1;
  }
  if ((v5 & 0x80) != 0) {
    uint64_t v4 = (const void **)*v4;
  }
  return v7[(void)v4] == 46;
}

uint64_t *wireless_diagnostics::google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t *result, uint64_t a2)
{
  uint64_t v6 = a2;
  if (a2)
  {
    unint64_t v2 = (wireless_diagnostics::google::protobuf::DescriptorBuilder *)result;
    double result = std::__tree<wireless_diagnostics::google::protobuf::Descriptor const*>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const*>((uint64_t **)result + 12, (unint64_t *)&v6, &v6);
    if (v3)
    {
      uint64_t v4 = v6;
      if (v6)
      {
        uint64_t v5 = 0;
        do
        {
          if (v5 >= *(int *)(v4 + 40)) {
            break;
          }
          double result = (uint64_t *)wireless_diagnostics::google::protobuf::DescriptorBuilder::RecordPublicDependencies(v2, *(const wireless_diagnostics::google::protobuf::FileDescriptor **)(*(void *)(v4 + 32)+ 8* *(int *)(*(void *)(v4 + 48) + 4 * v5++)));
          uint64_t v4 = v6;
        }
        while (v6);
      }
    }
  }
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::NewPlaceholderFile(uint64_t a1)
{
  Bytes = wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateBytes(*(wireless_diagnostics::google::protobuf::DescriptorPool::Tables **)(a1 + 8), 160);
  _OWORD *Bytes = 0u;
  Bytes[1] = 0u;
  Bytes[2] = 0u;
  Bytes[3] = 0u;
  Bytes[4] = 0u;
  Bytes[5] = 0u;
  Bytes[6] = 0u;
  Bytes[7] = 0u;
  Bytes[8] = 0u;
  Bytes[9] = 0u;
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddSymbol(*(void *)(a1 + 8), (const char *)a2, 7, a4))
  {
    std::string::size_type v7 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v7 != -1)
    {
      std::string::basic_string(&v38, (const std::string *)a2, 0, v7, (std::allocator<char> *)&v37);
      wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
    }
    wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)a2, a2, a3);
    return;
  }
  size_t v8 = *(int8x8_t **)(a1 + 8);
  if (*(char *)(a2 + 23) >= 0) {
    size_t v9 = (const char *)a2;
  }
  else {
    size_t v9 = *(const char **)a2;
  }
  char v10 = *v9;
  if (*v9)
  {
    unint64_t v11 = 0;
    int v12 = (unsigned __int8 *)(v9 + 1);
    do
    {
      unint64_t v11 = 5 * v11 + v10;
      int v13 = *v12++;
      char v10 = v13;
    }
    while (v13);
  }
  else
  {
    unint64_t v11 = 0;
  }
  int8x8_t v14 = v8[26];
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8(v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      unint64_t v17 = v11;
      if (v11 >= *(void *)&v14) {
        unint64_t v17 = v11 % *(void *)&v14;
      }
    }
    else
    {
      unint64_t v17 = (*(void *)&v14 - 1) & v11;
    }
    int v18 = *(uint64_t **)(*(void *)&v8[25] + 8 * v17);
    if (!v18) {
      goto LABEL_32;
    }
    for (uint64_t i = *v18; i; uint64_t i = *(void *)i)
    {
      unint64_t v20 = *(void *)(i + 8);
      if (v11 == v20)
      {
        if (!strcmp(*(const char **)(i + 16), v9))
        {
          int v18 = (uint64_t *)(i + 24);
          goto LABEL_32;
        }
      }
      else
      {
        if (v16 > 1)
        {
          if (v20 >= *(void *)&v14) {
            v20 %= *(void *)&v14;
          }
        }
        else
        {
          v20 &= *(void *)&v14 - 1;
        }
        if (v20 != v17) {
          break;
        }
      }
    }
  }
  int v18 = 0;
LABEL_32:
  if (!v18) {
  int v21 = *(_DWORD *)v18;
  }
  if (*(_DWORD *)v18 != 7)
  {
    uint64_t v22 = v18[1];
    std::operator+<char>();
    unint64_t v23 = std::string::append(&v35, "\" is already defined (as something other than a package) in file \"");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    switch(v21)
    {
      case 2:
        uint64_t v25 = (uint64_t **)(v22 + 32);
        break;
      case 4:
        uint64_t v26 = *(void *)(v22 + 24);
        goto LABEL_40;
      case 6:
        uint64_t v26 = *(void *)(v22 + 16);
LABEL_40:
        uint64_t v25 = (uint64_t **)(v26 + 16);
        break;
      default:
        uint64_t v25 = (uint64_t **)(v22 + 16);
        break;
    }
    uint64_t v27 = **v25;
    int v28 = *(char *)(v27 + 23);
    if (v28 >= 0) {
      std::string v29 = (const std::string::value_type *)v27;
    }
    else {
      std::string v29 = *(const std::string::value_type **)v27;
    }
    if (v28 >= 0) {
      std::string::size_type v30 = *(unsigned __int8 *)(v27 + 23);
    }
    else {
      std::string::size_type v30 = *(void *)(v27 + 8);
    }
    std::string v31 = std::string::append(&v36, v29, v30);
    long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    long long v33 = std::string::append(&v37, "\".");
    long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, 0, (uint64_t)&v38);
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
  }
}

void sub_2135DA918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddSymbol(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4;
  if (a2[23] >= 0) {
    size_t v9 = a2;
  }
  else {
    size_t v9 = *(const char **)a2;
  }
  char v10 = *v9;
  if (*v9)
  {
    unint64_t v11 = 0;
    int v12 = (unsigned __int8 *)(v9 + 1);
    do
    {
      unint64_t v11 = 5 * v11 + v10;
      int v13 = *v12++;
      char v10 = v13;
    }
    while (v13);
  }
  else
  {
    unint64_t v11 = 0;
  }
  unint64_t v14 = *(void *)(a1 + 208);
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      unint64_t v4 = v11;
      if (v11 >= v14) {
        unint64_t v4 = v11 % v14;
      }
    }
    else
    {
      unint64_t v4 = (v14 - 1) & v11;
    }
    unint64_t v17 = *(uint64_t ****)(*(void *)(a1 + 200) + 8 * v4);
    if (v17)
    {
      int v18 = *v17;
      if (*v17)
      {
        while (1)
        {
          unint64_t v19 = (unint64_t)v18[1];
          if (v19 == v11)
          {
            uint64_t result = strcmp((const char *)v18[2], v9);
            if (!result) {
              return result;
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14) {
                v19 %= v14;
              }
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v4)
            {
LABEL_26:
              uint64_t v5 = a4;
              break;
            }
          }
          int v18 = (uint64_t **)*v18;
          if (!v18) {
            goto LABEL_26;
          }
        }
      }
    }
  }
  int v21 = operator new(0x28uLL);
  *int v21 = 0;
  v21[1] = v11;
  v21[2] = v9;
  v21[3] = a3;
  v21[4] = v5;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 224) + 1);
  float v23 = *(float *)(a1 + 232);
  if (v14 && (float)(v23 * (float)v14) >= v22)
  {
    unint64_t v11 = v4;
    goto LABEL_73;
  }
  BOOL v24 = (v14 & (v14 - 1)) == 0;
  if (v14 < 3) {
    BOOL v24 = 0;
  }
  unint64_t v25 = (2 * v14) | !v24;
  unint64_t v26 = vcvtps_u32_f32(v22 / v23);
  if (v25 <= v26) {
    int8x8_t prime = (int8x8_t)v26;
  }
  else {
    int8x8_t prime = (int8x8_t)v25;
  }
  if (*(void *)&prime == 1)
  {
    int8x8_t prime = (int8x8_t)2;
  }
  else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
  {
    int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    unint64_t v14 = *(void *)(a1 + 208);
  }
  if (*(void *)&prime <= v14)
  {
    if (*(void *)&prime >= v14) {
      goto LABEL_69;
    }
    unint64_t v34 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 224) / *(float *)(a1 + 232));
    if (v14 < 3 || (uint8x8_t v35 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v35.i16[0] = vaddlv_u8(v35), v35.u32[0] > 1uLL))
    {
      unint64_t v34 = std::__next_prime(v34);
    }
    else
    {
      uint64_t v36 = 1 << -(char)__clz(v34 - 1);
      if (v34 >= 2) {
        unint64_t v34 = v36;
      }
    }
    if (*(void *)&prime <= v34) {
      int8x8_t prime = (int8x8_t)v34;
    }
    if (*(void *)&prime >= v14)
    {
      unint64_t v14 = *(void *)(a1 + 208);
      goto LABEL_69;
    }
    if (!*(void *)&prime)
    {
      uint64_t v58 = *(void **)(a1 + 200);
      *(void *)(a1 + 200) = 0;
      if (v58) {
        operator delete(v58);
      }
      unint64_t v14 = 0;
      *(void *)(a1 + 208) = 0;
      goto LABEL_69;
    }
  }
  if (*(void *)&prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  int v28 = operator new(8 * *(void *)&prime);
  std::string v29 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v28;
  if (v29) {
    operator delete(v29);
  }
  uint64_t v30 = 0;
  *(int8x8_t *)(a1 + 208) = prime;
  do
    *(void *)(*(void *)(a1 + 200) + 8 * v30++) = 0;
  while (*(void *)&prime != v30);
  std::string v31 = *(void **)(a1 + 216);
  if (v31)
  {
    unint64_t v32 = v31[1];
    uint8x8_t v33 = (uint8x8_t)vcnt_s8(prime);
    v33.i16[0] = vaddlv_u8(v33);
    if (v33.u32[0] > 1uLL)
    {
      if (v32 >= *(void *)&prime) {
        v32 %= *(void *)&prime;
      }
    }
    else
    {
      v32 &= *(void *)&prime - 1;
    }
    *(void *)(*(void *)(a1 + 200) + 8 * v32) = a1 + 216;
    std::string v37 = (void *)*v31;
    if (*v31)
    {
      do
      {
        unint64_t v38 = v37[1];
        if (v33.u32[0] > 1uLL)
        {
          if (v38 >= *(void *)&prime) {
            v38 %= *(void *)&prime;
          }
        }
        else
        {
          v38 &= *(void *)&prime - 1;
        }
        if (v38 != v32)
        {
          uint64_t v39 = *(void *)(a1 + 200);
          if (!*(void *)(v39 + 8 * v38))
          {
            *(void *)(v39 + 8 * v38) = v31;
            goto LABEL_65;
          }
          *std::string v31 = *v37;
          *std::string v37 = **(void **)(*(void *)(a1 + 200) + 8 * v38);
          **(void **)(*(void *)(a1 + 200) + 8 * v38) = v37;
          std::string v37 = v31;
        }
        unint64_t v38 = v32;
LABEL_65:
        std::string v31 = v37;
        std::string v37 = (void *)*v37;
        unint64_t v32 = v38;
      }
      while (v37);
    }
  }
  unint64_t v14 = (unint64_t)prime;
LABEL_69:
  if ((v14 & (v14 - 1)) != 0)
  {
    if (v11 >= v14) {
      v11 %= v14;
    }
  }
  else
  {
    v11 &= v14 - 1;
  }
LABEL_73:
  uint64_t v40 = *(void *)(a1 + 200);
  uint64_t v41 = *(void **)(v40 + 8 * v11);
  if (v41)
  {
    *int v21 = *v41;
LABEL_81:
    *uint64_t v41 = v21;
    goto LABEL_82;
  }
  *int v21 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = v21;
  *(void *)(v40 + 8 * v11) = a1 + 216;
  if (*v21)
  {
    unint64_t v42 = *(void *)(*v21 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v42 >= v14) {
        v42 %= v14;
      }
    }
    else
    {
      v42 &= v14 - 1;
    }
    uint64_t v41 = (void *)(*(void *)(a1 + 200) + 8 * v42);
    goto LABEL_81;
  }
LABEL_82:
  ++*(void *)(a1 + 224);
  if (a2[23] >= 0) {
    uint64_t v43 = a2;
  }
  else {
    uint64_t v43 = *(const char **)a2;
  }
  uint64_t v45 = *(const char ***)(a1 + 336);
  unint64_t v44 = *(void *)(a1 + 344);
  if ((unint64_t)v45 >= v44)
  {
    uint64_t v47 = *(void *)(a1 + 328);
    uint64_t v48 = ((uint64_t)v45 - v47) >> 3;
    if ((unint64_t)(v48 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v49 = v44 - v47;
    uint64_t v50 = v49 >> 2;
    if (v49 >> 2 <= (unint64_t)(v48 + 1)) {
      uint64_t v50 = v48 + 1;
    }
    if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v51 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v51 = v50;
    }
    if (v51) {
      uint64_t v52 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>(a1 + 344, v51);
    }
    else {
      uint64_t v52 = 0;
    }
    long long v53 = &v52[8 * v48];
    uint64_t v54 = &v52[8 * v51];
    *(void *)long long v53 = v43;
    std::string::size_type v46 = v53 + 8;
    long long v56 = *(char **)(a1 + 328);
    long long v55 = *(char **)(a1 + 336);
    if (v55 != v56)
    {
      do
      {
        uint64_t v57 = *((void *)v55 - 1);
        v55 -= 8;
        *((void *)v53 - 1) = v57;
        v53 -= 8;
      }
      while (v55 != v56);
      long long v55 = *(char **)(a1 + 328);
    }
    *(void *)(a1 + 328) = v53;
    *(void *)(a1 + 336) = v46;
    *(void *)(a1 + 344) = v54;
    if (v55) {
      operator delete(v55);
    }
  }
  else
  {
    *uint64_t v45 = v43;
    std::string::size_type v46 = v45 + 1;
  }
  *(void *)(a1 + 336) = v46;
  return 1;
}

void sub_2135DAEA4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = *((unsigned __int8 *)a2 + 23);
  BOOL v8 = *((char *)a2 + 23) < 0;
  unint64_t v9 = a2[1];
  if (*((char *)a2 + 23) >= 0) {
    uint64_t v10 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v10 = a2[1];
  }
  if (v10)
  {
    for (unint64_t i = 0; i < v16; ++i)
    {
      if (v8) {
        int v13 = (uint64_t *)*a2;
      }
      else {
        int v13 = a2;
      }
      if (*((unsigned __int8 *)v13 + i) - 123 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 91 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 58 <= 0xFFFFFFF5
        && *((unsigned char *)v13 + i) != 95)
      {
        std::operator+<char>();
        unint64_t v14 = std::string::append(&v17, "\" is not a valid identifier.");
        long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        std::string::size_type v19 = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (uint64_t)__p);
        if (SHIBYTE(v19) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        unint64_t v7 = *((unsigned __int8 *)a2 + 23);
        unint64_t v9 = a2[1];
      }
      BOOL v8 = (v7 & 0x80u) != 0;
      if ((v7 & 0x80u) == 0) {
        unint64_t v16 = v7;
      }
      else {
        unint64_t v16 = v9;
      }
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Missing name.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (uint64_t)__p);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_2135DB048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateQualifiedName(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = 0;
  int v3 = 0;
  unint64_t v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80) != 0) {
    goto LABEL_4;
  }
LABEL_2:
  uint64_t v5 = a2;
  if (v2 >= v4) {
    return (v4 != 0) & ~v3;
  }
  while (1)
  {
    if (*((unsigned __int8 *)v5 + v2) - 97 >= 0x1A
      && *((unsigned __int8 *)v5 + v2) - 65 >= 0x1A
      && *((unsigned __int8 *)v5 + v2) - 48 >= 0xA)
    {
      int v6 = *((unsigned __int8 *)v5 + v2);
      if (v6 != 95) {
        break;
      }
    }
    int v3 = 0;
LABEL_10:
    ++v2;
    if ((v4 & 0x80) == 0) {
      goto LABEL_2;
    }
LABEL_4:
    uint64_t v5 = (uint64_t *)*a2;
    if (a2[1] <= v2)
    {
      unint64_t v4 = a2[1];
      return (v4 != 0) & ~v3;
    }
  }
  if (!(v3 & 1 | (v6 != 46)))
  {
    int v3 = 1;
    goto LABEL_10;
  }
  return 0;
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(const void ***)(a3 + 8);
  if (*((char *)v3 + 23) >= 0) {
    size_t v4 = *((unsigned __int8 *)v3 + 23);
  }
  else {
    size_t v4 = (size_t)v3[1];
  }
  uint64_t v5 = __p;
  std::string::basic_string[abi:ne180100]((uint64_t)__p, v4 + 6);
  if (v8 < 0) {
    uint64_t v5 = (void **)__p[0];
  }
  if (v4)
  {
    if (*((char *)v3 + 23) >= 0) {
      int v6 = v3;
    }
    else {
      int v6 = *v3;
    }
    memmove(v5, v6, v4);
  }
  strcpy((char *)v5 + v4, ".dummy");
  wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::FileDescriptor>();
}

void sub_2135DB220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::FileDescriptor>()
{
}

void sub_2135DB314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::SourceCodeInfo>()
{
}

void sub_2135DB440(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildMessage(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, const wireless_diagnostics::google::protobuf::DescriptorProto *a2, const wireless_diagnostics::google::protobuf::Descriptor *a3, wireless_diagnostics::google::protobuf::Descriptor *a4)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
}

void sub_2135DBB64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildEnum(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, const wireless_diagnostics::google::protobuf::EnumDescriptorProto *a2, const wireless_diagnostics::google::protobuf::Descriptor *a3, wireless_diagnostics::google::protobuf::EnumDescriptor *a4)
{
}

void sub_2135DBD6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildService()
{
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkFile(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::FileDescriptor *a2, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a3, const char *a4)
{
  int v6 = this;
  if (!*((void *)a2 + 17))
  {
    this = (wireless_diagnostics::google::protobuf::DescriptorBuilder *)wireless_diagnostics::google::protobuf::FileOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    *((void *)a2 + 17) = this;
  }
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkMessage(v6, (wireless_diagnostics::google::protobuf::Descriptor *)(*((void *)a2 + 10) + v7), *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a3 + 11) + 8 * v8++), a4);
      v7 += 120;
    }
    while (v8 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkField(v6, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 16) + v9), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 20) + 8 * v10++), a4);
      v9 += 120;
    }
    while (v10 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 22) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkEnum(this, (wireless_diagnostics::google::protobuf::EnumDescriptor *)(*((void *)a2 + 12) + v11), a3, a4);
      ++v12;
      v11 += 56;
    }
    while (v12 < *((int *)a2 + 22));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkService(v6, (wireless_diagnostics::google::protobuf::ServiceDescriptor *)(*((void *)a2 + 14) + v13), *(const wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(*((void *)a3 + 17) + 8 * v14++), a4);
      v13 += 48;
    }
    while (v14 < *((int *)a2 + 26));
  }
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
}

{
  wireless_diagnostics::google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 24));
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateFileOptions(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::FileDescriptor *a2, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a3, const char *a4)
{
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (wireless_diagnostics::google::protobuf::Descriptor *)(*((void *)a2 + 10) + v7), *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a3 + 11) + 8 * v8++), a4);
      v7 += 120;
    }
    while (v8 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 22) >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateEnumOptions(this, (wireless_diagnostics::google::protobuf::EnumDescriptor *)(*((void *)a2 + 12) + v9), *(const wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 14) + 8 * v10++));
      v9 += 56;
    }
    while (v10 < *((int *)a2 + 22));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateServiceOptions(this, (wireless_diagnostics::google::protobuf::ServiceDescriptor *)(*((void *)a2 + 14) + v11), *(const wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(*((void *)a3 + 17) + 8 * v12++), a4);
      v11 += 48;
    }
    while (v12 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 16) + v13), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 20) + 8 * v14++), a4);
      v13 += 120;
    }
    while (v14 < *((int *)a2 + 30));
  }
  long long v15 = (wireless_diagnostics::google::protobuf::FileOptions *)*((void *)a2 + 17);
  unint64_t v16 = (wireless_diagnostics::google::protobuf::FileOptions *)wireless_diagnostics::google::protobuf::FileOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
  if ((v15 == v16 || *(_DWORD *)(*((void *)a2 + 17) + 56) != 3) && *((int *)a2 + 6) >= 1)
  {
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *(void *)(*((void *)a2 + 4) + 8 * v20);
      if (v21)
      {
        float v22 = *(wireless_diagnostics::google::protobuf::FileOptions **)(v21 + 136);
        unint64_t v16 = (wireless_diagnostics::google::protobuf::FileOptions *)wireless_diagnostics::google::protobuf::FileOptions::default_instance(v16, v17, v18, v19);
        if (v22 != v16 && *(_DWORD *)(*(void *)(v21 + 136) + 56) == 3) {
          break;
        }
      }
      if (++v20 >= *((int *)a2 + 6)) {
        return;
      }
    }
    uint64_t v23 = *(void *)a2;
    std::operator+<char>();
    BOOL v24 = std::string::append(&v26, "\" which is.");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    std::string::size_type v28 = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v23, (uint64_t)a3, 9, (uint64_t)__p);
    if (SHIBYTE(v28) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
  }
}

void sub_2135DC2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildExtensionRange(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  int v7 = *(_DWORD *)(a2 + 16);
  *a4 = v7;
  int v8 = *(_DWORD *)(a2 + 20);
  a4[1] = v8;
  if (v7 <= 0)
  {
    uint64_t v10 = *(void *)(a3 + 8);
    std::string::basic_string[abi:ne180100]<0>(__p, "Extension numbers must be positive integers.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, v10, a2, 1, (uint64_t)__p);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    int v7 = *a4;
    int v8 = a4[1];
  }
  if (v7 >= v8)
  {
    uint64_t v11 = *(void *)(a3 + 8);
    std::string::basic_string[abi:ne180100]<0>(__p, "Extension range end number must be greater than start number.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, v11, a2, 1, (uint64_t)__p);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_2135DC3C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a3;
  if (!a3) {
    uint64_t v11 = *(uint64_t **)(a1 + 80);
  }
  if (wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddSymbol(*(void *)(a1 + 8), (const char *)a2, a6, a7))
  {
    if (wireless_diagnostics::google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(float **)(a1 + 88), v11, a4, a6, a7))return 1; {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    }
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
    return 0;
  }
  long long v15 = *(int8x8_t **)(a1 + 8);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v16 = (const char *)a2;
  }
  else {
    unint64_t v16 = *(const char **)a2;
  }
  char v17 = *v16;
  if (*v16)
  {
    unint64_t v18 = 0;
    std::string::size_type v19 = (unsigned __int8 *)(v16 + 1);
    do
    {
      unint64_t v18 = 5 * v18 + v17;
      int v20 = *v19++;
      char v17 = v20;
    }
    while (v20);
  }
  else
  {
    unint64_t v18 = 0;
  }
  int8x8_t v21 = v15[26];
  if (v21)
  {
    uint8x8_t v22 = (uint8x8_t)vcnt_s8(v21);
    v22.i16[0] = vaddlv_u8(v22);
    unint64_t v23 = v22.u32[0];
    if (v22.u32[0] > 1uLL)
    {
      unint64_t v24 = v18;
      if (v18 >= *(void *)&v21) {
        unint64_t v24 = v18 % *(void *)&v21;
      }
    }
    else
    {
      unint64_t v24 = (*(void *)&v21 - 1) & v18;
    }
    long long v25 = *(uint64_t **)(*(void *)&v15[25] + 8 * v24);
    if (!v25) {
      goto LABEL_32;
    }
    for (uint64_t i = *v25; i; uint64_t i = *(void *)i)
    {
      unint64_t v27 = *(void *)(i + 8);
      if (v18 == v27)
      {
        if (!strcmp(*(const char **)(i + 16), v16))
        {
          long long v25 = (uint64_t *)(i + 24);
          goto LABEL_32;
        }
      }
      else
      {
        if (v23 > 1)
        {
          if (v27 >= *(void *)&v21) {
            v27 %= *(void *)&v21;
          }
        }
        else
        {
          v27 &= *(void *)&v21 - 1;
        }
        if (v27 != v24) {
          break;
        }
      }
    }
  }
  long long v25 = 0;
LABEL_32:
  if (!v25) {
  std::string::size_type v28 = (const std::string::value_type ***)v25[1];
  }
  switch(*(_DWORD *)v25)
  {
    case 1:
    case 3:
    case 5:
      std::string v29 = (const std::string::value_type ****)(v28 + 2);
      goto LABEL_41;
    case 2:
      std::string v29 = (const std::string::value_type ****)(v28 + 4);
      goto LABEL_41;
    case 4:
      uint64_t v30 = v28[3];
      goto LABEL_40;
    case 6:
      uint64_t v30 = v28[2];
LABEL_40:
      std::string v29 = (const std::string::value_type ****)(v30 + 2);
LABEL_41:
      std::string::size_type v28 = *v29;
      break;
    case 7:
      break;
    default:
      std::string::size_type v28 = 0;
      break;
  }
  if (v28 == *(const std::string::value_type ****)(a1 + 80))
  {
    std::string::size_type v41 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v41 == -1)
    {
      std::operator+<char>();
      long long v53 = std::string::append(&v59, "\" is already defined.");
      long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
      std::string::size_type v61 = v53->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v54;
      v53->__r_.__value_.__l.__size_ = 0;
      v53->__r_.__value_.__r.__words[2] = 0;
      v53->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)__p);
      if (SHIBYTE(v61) < 0) {
        operator delete(__p[0]);
      }
      if ((SHIBYTE(v59.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
      uint64_t v40 = (void *)v59.__r_.__value_.__r.__words[0];
    }
    else
    {
      std::string::size_type v42 = v41;
      std::string::basic_string(&v56, (const std::string *)a2, v41 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v55);
      uint64_t v43 = std::string::insert(&v56, 0, "\"");
      long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
      v57.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v44;
      v43->__r_.__value_.__l.__size_ = 0;
      v43->__r_.__value_.__r.__words[2] = 0;
      v43->__r_.__value_.__r.__words[0] = 0;
      uint64_t v45 = std::string::append(&v57, "\" is already defined in \"");
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v58.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      std::string::basic_string(&v55, (const std::string *)a2, 0, v42, (std::allocator<char> *)v62);
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v47 = &v55;
      }
      else {
        uint64_t v47 = (std::string *)v55.__r_.__value_.__r.__words[0];
      }
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v55.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v55.__r_.__value_.__l.__size_;
      }
      uint64_t v49 = std::string::append(&v58, (const std::string::value_type *)v47, size);
      long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
      v59.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v50;
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      unint64_t v51 = std::string::append(&v59, "\".");
      long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      std::string::size_type v61 = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v52;
      v51->__r_.__value_.__l.__size_ = 0;
      v51->__r_.__value_.__r.__words[2] = 0;
      v51->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)__p);
      if (SHIBYTE(v61) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v59.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v55.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v58.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v57.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v56.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
      uint64_t v40 = (void *)v56.__r_.__value_.__r.__words[0];
    }
  }
  else
  {
    std::operator+<char>();
    std::string v31 = std::string::append(&v57, "\" is already defined in file \"");
    long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v58.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    int v33 = *((char *)*v28 + 23);
    if (v33 >= 0) {
      unint64_t v34 = (const std::string::value_type *)*v28;
    }
    else {
      unint64_t v34 = **v28;
    }
    if (v33 >= 0) {
      std::string::size_type v35 = *((unsigned __int8 *)*v28 + 23);
    }
    else {
      std::string::size_type v35 = (std::string::size_type)(*v28)[1];
    }
    uint64_t v36 = std::string::append(&v58, v34, v35);
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v59.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    unint64_t v38 = std::string::append(&v59, "\".");
    long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
    std::string::size_type v61 = v38->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v39;
    v38->__r_.__value_.__l.__size_ = 0;
    v38->__r_.__value_.__r.__words[2] = 0;
    v38->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(a1, a2, a5, 0, (uint64_t)__p);
    if (SHIBYTE(v61) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v59.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v58.__r_.__value_.__l.__data_);
    }
    if ((SHIBYTE(v57.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return 0;
    }
    uint64_t v40 = (void *)v57.__r_.__value_.__r.__words[0];
  }
  operator delete(v40);
  return 0;
}

void sub_2135DC934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildFieldOrExtension(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, const wireless_diagnostics::google::protobuf::FieldDescriptorProto *a2, const wireless_diagnostics::google::protobuf::Descriptor *a3, wireless_diagnostics::google::protobuf::FieldDescriptor *a4)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
}

void sub_2135DD594(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 113) < 0) {
    operator delete(*(void **)(v23 - 136));
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildEnumValue()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
}

void sub_2135DDA9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v42 - 113) < 0) {
    operator delete(*(void **)(v42 - 136));
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorTables::AddAliasUnderParent(float *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5;
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v10 = (const char *)a3;
  }
  else {
    uint64_t v10 = *(const char **)a3;
  }
  char v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = 0;
    char v13 = (unsigned __int8 *)(v10 + 1);
    do
    {
      uint64_t v12 = 5 * v12 + v11;
      int v14 = *v13++;
      char v11 = v14;
    }
    while (v14);
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v15 = v12 - (void)a2;
  unint64_t v16 = v15 + ((void)a2 << 16);
  unint64_t v17 = *((void *)a1 + 1);
  if (v17)
  {
    uint8x8_t v18 = (uint8x8_t)vcnt_s8((int8x8_t)v17);
    v18.i16[0] = vaddlv_u8(v18);
    unint64_t v19 = v18.u32[0];
    if (v18.u32[0] > 1uLL)
    {
      unint64_t v5 = v15 + ((void)a2 << 16);
      if (v16 >= v17) {
        unint64_t v5 = v16 % v17;
      }
    }
    else
    {
      unint64_t v5 = (v17 - 1) & v16;
    }
    int v20 = *(uint64_t ****)(*(void *)a1 + 8 * v5);
    if (v20)
    {
      int8x8_t v21 = *v20;
      if (*v20)
      {
        while (1)
        {
          unint64_t v22 = (unint64_t)v21[1];
          if (v22 == v16)
          {
            if (v21[2] == a2)
            {
              uint64_t result = strcmp((const char *)v21[3], v10);
              if (!result) {
                return result;
              }
            }
          }
          else
          {
            if (v19 > 1)
            {
              if (v22 >= v17) {
                v22 %= v17;
              }
            }
            else
            {
              v22 &= v17 - 1;
            }
            if (v22 != v5)
            {
LABEL_27:
              uint64_t v6 = a5;
              break;
            }
          }
          int8x8_t v21 = (uint64_t **)*v21;
          if (!v21) {
            goto LABEL_27;
          }
        }
      }
    }
  }
  unint64_t v24 = operator new(0x30uLL);
  *unint64_t v24 = 0;
  v24[1] = v16;
  v24[2] = a2;
  v24[3] = v10;
  v24[4] = a4;
  v24[5] = v6;
  float v25 = (float)(unint64_t)(*((void *)a1 + 3) + 1);
  float v26 = a1[8];
  if (!v17 || (float)(v26 * (float)v17) < v25)
  {
    BOOL v27 = (v17 & (v17 - 1)) == 0;
    if (v17 < 3) {
      BOOL v27 = 0;
    }
    unint64_t v28 = (2 * v17) | !v27;
    unint64_t v29 = vcvtps_u32_f32(v25 / v26);
    if (v28 <= v29) {
      int8x8_t prime = (int8x8_t)v29;
    }
    else {
      int8x8_t prime = (int8x8_t)v28;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v17 = *((void *)a1 + 1);
    }
    if (*(void *)&prime > v17) {
      goto LABEL_40;
    }
    if (*(void *)&prime < v17)
    {
      unint64_t v37 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v17 < 3 || (uint8x8_t v38 = (uint8x8_t)vcnt_s8((int8x8_t)v17), v38.i16[0] = vaddlv_u8(v38), v38.u32[0] > 1uLL))
      {
        unint64_t v37 = std::__next_prime(v37);
      }
      else
      {
        uint64_t v39 = 1 << -(char)__clz(v37 - 1);
        if (v37 >= 2) {
          unint64_t v37 = v39;
        }
      }
      if (*(void *)&prime <= v37) {
        int8x8_t prime = (int8x8_t)v37;
      }
      if (*(void *)&prime >= v17)
      {
        unint64_t v17 = *((void *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_40:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          std::string v31 = operator new(8 * *(void *)&prime);
          long long v32 = *(void **)a1;
          *(void *)a1 = v31;
          if (v32) {
            operator delete(v32);
          }
          uint64_t v33 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v33++) = 0;
          while (*(void *)&prime != v33);
          unint64_t v34 = (void *)*((void *)a1 + 2);
          if (v34)
          {
            unint64_t v35 = v34[1];
            uint8x8_t v36 = (uint8x8_t)vcnt_s8(prime);
            v36.i16[0] = vaddlv_u8(v36);
            if (v36.u32[0] > 1uLL)
            {
              if (v35 >= *(void *)&prime) {
                v35 %= *(void *)&prime;
              }
            }
            else
            {
              v35 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v35) = a1 + 4;
            uint64_t v40 = (void *)*v34;
            if (*v34)
            {
              do
              {
                unint64_t v41 = v40[1];
                if (v36.u32[0] > 1uLL)
                {
                  if (v41 >= *(void *)&prime) {
                    v41 %= *(void *)&prime;
                  }
                }
                else
                {
                  v41 &= *(void *)&prime - 1;
                }
                if (v41 != v35)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v41))
                  {
                    *(void *)(*(void *)a1 + 8 * v41) = v34;
                    goto LABEL_65;
                  }
                  *unint64_t v34 = *v40;
                  *uint64_t v40 = **(void **)(*(void *)a1 + 8 * v41);
                  **(void **)(*(void *)a1 + 8 * v41) = v40;
                  uint64_t v40 = v34;
                }
                unint64_t v41 = v35;
LABEL_65:
                unint64_t v34 = v40;
                uint64_t v40 = (void *)*v40;
                unint64_t v35 = v41;
              }
              while (v40);
            }
          }
          unint64_t v17 = (unint64_t)prime;
          goto LABEL_69;
        }
        uint64_t v45 = *(void **)a1;
        *(void *)a1 = 0;
        if (v45) {
          operator delete(v45);
        }
        unint64_t v17 = 0;
        *((void *)a1 + 1) = 0;
      }
    }
LABEL_69:
    if ((v17 & (v17 - 1)) != 0)
    {
      if (v16 >= v17) {
        unint64_t v5 = v16 % v17;
      }
      else {
        unint64_t v5 = v16;
      }
    }
    else
    {
      unint64_t v5 = (v17 - 1) & v16;
    }
  }
  uint64_t v42 = *(void **)a1;
  uint64_t v43 = *(void **)(*(void *)a1 + 8 * v5);
  if (v43)
  {
    *unint64_t v24 = *v43;
LABEL_82:
    void *v43 = v24;
    goto LABEL_83;
  }
  *unint64_t v24 = *((void *)a1 + 2);
  *((void *)a1 + 2) = v24;
  v42[v5] = a1 + 4;
  if (*v24)
  {
    unint64_t v44 = *(void *)(*v24 + 8);
    if ((v17 & (v17 - 1)) != 0)
    {
      if (v44 >= v17) {
        v44 %= v17;
      }
    }
    else
    {
      v44 &= v17 - 1;
    }
    uint64_t v43 = (void *)(*(void *)a1 + 8 * v44);
    goto LABEL_82;
  }
LABEL_83:
  ++*((void *)a1 + 3);
  return 1;
}

void sub_2135DDFB8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::BuildMethod()
{
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkMessage(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::Descriptor *a2, const wireless_diagnostics::google::protobuf::DescriptorProto *a3, const char *a4)
{
  uint64_t v6 = this;
  if (!*((void *)a2 + 4))
  {
    this = (wireless_diagnostics::google::protobuf::DescriptorBuilder *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    *((void *)a2 + 4) = this;
  }
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      this = (wireless_diagnostics::google::protobuf::DescriptorBuilder *)wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkMessage(v6, (wireless_diagnostics::google::protobuf::Descriptor *)(*((void *)a2 + 8) + v7), *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a3 + 9) + 8 * v8++));
      v7 += 120;
    }
    while (v8 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    do
    {
      this = wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkEnum(this, (wireless_diagnostics::google::protobuf::EnumDescriptor *)(*((void *)a2 + 10) + v9), a3, a4);
      ++v10;
      v9 += 56;
    }
    while (v10 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 11) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkField(v6, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 6) + v11), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 3) + 8 * v12++), a4);
      v11 += 120;
    }
    while (v12 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkField(v6, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 14) + v13), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 6) + 8 * v14++), a4);
      v13 += 120;
    }
    while (v14 < *((int *)a2 + 26));
  }
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkField(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::FieldDescriptorProto *a3, const char *a4)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  if (!*((void *)a2 + 12)) {
    *((void *)a2 + 12) = wireless_diagnostics::google::protobuf::FieldOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
  }
  if ((*((unsigned char *)a3 + 72) & 0x20) != 0)
  {
    int v18 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t)this, *((void *)a3 + 5), *((void *)a2 + 1), 2, 0);
    if (v18 != 1)
    {
      if (!v18)
      {
        uint64_t v21 = *((void *)a2 + 1);
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, v21, (uint64_t)a3, 3);
        return;
      }
      uint64_t v36 = *((void *)a2 + 1);
      std::operator+<char>();
      unint64_t v37 = std::string::append(&v103, "\" is not a message type.");
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      std::string::size_type v105 = v37->__r_.__value_.__r.__words[2];
      long long v104 = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v36, (uint64_t)a3, 3, (uint64_t)&v104);
      goto LABEL_40;
    }
    *((void *)a2 + 7) = v19;
    float v26 = (wireless_diagnostics::google::protobuf *)*((unsigned int *)a2 + 10);
    unint64_t v27 = *(unsigned int *)(v19 + 88);
    if ((int)v27 < 1) {
      goto LABEL_33;
    }
    uint64_t v28 = 0;
    unint64_t v29 = (_DWORD *)(*(void *)(v19 + 96) + 4);
    BOOL v30 = 1;
    do
    {
      if (*(v29 - 1) <= (int)v26 && *v29 > (int)v26) {
        break;
      }
      BOOL v30 = ++v28 < v27;
      v29 += 2;
    }
    while (v27 != v28);
    if (!v30)
    {
LABEL_33:
      uint64_t v31 = *((void *)a2 + 1);
      long long v32 = *(uint64_t ***)(v19 + 8);
      int v33 = *((char *)v32 + 23);
      unint64_t v34 = v32[1];
      if (v33 < 0) {
        long long v32 = (uint64_t **)*v32;
      }
      *(void *)&long long v104 = v32;
      int v35 = v33;
      if (v33 < 0) {
        int v35 = (int)v34;
      }
      DWORD2(v104) = v35;
      v103.__r_.__value_.__r.__words[0] = (std::string::size_type)wireless_diagnostics::google::protobuf::FastInt32ToBuffer(v26, &v103.__r_.__value_.__s.__data_[12], v20);
      LODWORD(v103.__r_.__value_.__r.__words[1]) = strlen(v103.__r_.__value_.__l.__data_);
      v102.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v102.__r_.__value_.__r.__words[1]) = -1;
      v101.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v101.__r_.__value_.__r.__words[1]) = -1;
      uint64_t v99 = 0;
      int v100 = -1;
      uint64_t v97 = 0;
      int v98 = -1;
      uint64_t v95 = 0;
      int v96 = -1;
      uint64_t v93 = 0;
      int v94 = -1;
      uint64_t v91 = 0;
      int v92 = -1;
      uint64_t v89 = 0;
      int v90 = -1;
      *(void *)&long long v85 = &v93;
      *((void *)&v85 + 1) = &v91;
      wireless_diagnostics::google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102, (uint64_t)&v101, (uint64_t)&v99, (uint64_t)&v97, (uint64_t)&v95, &__p, v85, (uint64_t)&v89);
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v31, (uint64_t)a3, 1, (uint64_t)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
  unsigned int v7 = *((_DWORD *)a3 + 18);
  if ((v7 & 0x10) != 0)
  {
    unsigned int v22 = (v7 >> 6) & 1;
    if (*((_DWORD *)a3 + 16) == 14) {
      uint64_t v23 = 1;
    }
    else {
      uint64_t v23 = v22;
    }
    int v24 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t)this, *((void *)a3 + 4), *((void *)a2 + 1), v23, 1);
    if (!v24)
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 2);
      return;
    }
    if ((*((unsigned char *)a3 + 72) & 8) != 0)
    {
      int v39 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a2 + 11)];
      if (v39 == 8)
      {
        if (v24 == 3)
        {
LABEL_97:
          *((void *)a2 + 10) = v25;
          if (*(unsigned char *)(v25 + 40))
          {
            *((unsigned char *)a2 + 104) = 0;
          }
          else if (*((unsigned char *)a2 + 104))
          {
            if (wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, *((std::string **)a3 + 6), *(void *)(v25 + 8), 0) == 4&& *(void *)(v69 + 24) == *((void *)a2 + 10))
            {
              *((void *)a2 + 14) = v69;
              goto LABEL_10;
            }
            uint64_t v70 = *((void *)a2 + 1);
            std::operator+<char>();
            uint64_t v71 = std::string::append(&v101, "\" has no value named \"");
            long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
            v102.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v102.__r_.__value_.__l.__data_ = v72;
            v71->__r_.__value_.__l.__size_ = 0;
            v71->__r_.__value_.__r.__words[2] = 0;
            v71->__r_.__value_.__r.__words[0] = 0;
            uint64_t v73 = *((void *)a3 + 6);
            int v74 = *(char *)(v73 + 23);
            if (v74 >= 0) {
              uint64_t v75 = (const std::string::value_type *)*((void *)a3 + 6);
            }
            else {
              uint64_t v75 = *(const std::string::value_type **)v73;
            }
            if (v74 >= 0) {
              std::string::size_type v76 = *(unsigned __int8 *)(v73 + 23);
            }
            else {
              std::string::size_type v76 = *(void *)(v73 + 8);
            }
            uint64_t v77 = std::string::append(&v102, v75, v76);
            long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
            v103.__r_.__value_.__r.__words[2] = v77->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v78;
            v77->__r_.__value_.__l.__size_ = 0;
            v77->__r_.__value_.__r.__words[2] = 0;
            v77->__r_.__value_.__r.__words[0] = 0;
            uint64_t v79 = std::string::append(&v103, "\".");
            long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
            std::string::size_type v105 = v79->__r_.__value_.__r.__words[2];
            long long v104 = v80;
            v79->__r_.__value_.__l.__size_ = 0;
            v79->__r_.__value_.__r.__words[2] = 0;
            v79->__r_.__value_.__r.__words[0] = 0;
            wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v70, (uint64_t)a3, 4, (uint64_t)&v104);
            if (SHIBYTE(v105) < 0) {
              operator delete((void *)v104);
            }
            if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v103.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v102.__r_.__value_.__l.__data_);
            }
            if ((SHIBYTE(v101.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_10;
            }
            uint64_t v9 = (void *)v101.__r_.__value_.__r.__words[0];
            goto LABEL_9;
          }
          if (*(int *)(v25 + 44) >= 1) {
            *((void *)a2 + 14) = *(void *)(v25 + 48);
          }
          goto LABEL_10;
        }
        uint64_t v81 = *((void *)a2 + 1);
        std::operator+<char>();
        int v82 = std::string::append(&v103, "\" is not an enum type.");
        long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
        std::string::size_type v105 = v82->__r_.__value_.__r.__words[2];
        long long v104 = v83;
        v82->__r_.__value_.__l.__size_ = 0;
        v82->__r_.__value_.__r.__words[2] = 0;
        v82->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v81, (uint64_t)a3, 2, (uint64_t)&v104);
LABEL_40:
        if (SHIBYTE(v105) < 0) {
          operator delete((void *)v104);
        }
        if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v103.__r_.__value_.__l.__data_);
        }
        return;
      }
      if (v39 != 10)
      {
        uint64_t v68 = *((void *)a2 + 1);
        std::string::basic_string[abi:ne180100]<0>(&v104, "Field with primitive type has type_name.");
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v68, (uint64_t)a3, 2, (uint64_t)&v104);
        goto LABEL_7;
      }
      if (v24 != 1)
      {
        uint64_t v40 = *((void *)a2 + 1);
        std::operator+<char>();
        unint64_t v41 = std::string::append(&v103, "\" is not a message type.");
        long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        std::string::size_type v105 = v41->__r_.__value_.__r.__words[2];
        long long v104 = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v40, (uint64_t)a3, 2, (uint64_t)&v104);
        goto LABEL_40;
      }
    }
    else
    {
      if (v24 != 1)
      {
        if (v24 == 3)
        {
          *((_DWORD *)a2 + 11) = 14;
          goto LABEL_97;
        }
        uint64_t v65 = *((void *)a2 + 1);
        std::operator+<char>();
        uint64_t v66 = std::string::append(&v103, "\" is not a type.");
        long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
        std::string::size_type v105 = v66->__r_.__value_.__r.__words[2];
        long long v104 = v67;
        v66->__r_.__value_.__l.__size_ = 0;
        v66->__r_.__value_.__r.__words[2] = 0;
        v66->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v65, (uint64_t)a3, 2, (uint64_t)&v104);
        goto LABEL_40;
      }
      *((_DWORD *)a2 + 11) = 11;
    }
    *((void *)a2 + 9) = v25;
    if (!*((unsigned char *)a2 + 104)) {
      goto LABEL_10;
    }
    uint64_t v64 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&v104, "Messages can't have default values.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v64, (uint64_t)a3, 4, (uint64_t)&v104);
    goto LABEL_7;
  }
  if ((wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a2 + 11)] | 2) != 0xA) {
    goto LABEL_10;
  }
  uint64_t v8 = *((void *)a2 + 1);
  std::string::basic_string[abi:ne180100]<0>(&v104, "Field with message or enum type missing type_name.");
  wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v8, (uint64_t)a3, 2, (uint64_t)&v104);
LABEL_7:
  if (SHIBYTE(v105) < 0)
  {
    uint64_t v9 = (void *)v104;
LABEL_9:
    operator delete(v9);
  }
LABEL_10:
  if ((wireless_diagnostics::google::protobuf::FileDescriptorTables::AddFieldByNumber(*((void *)this + 11), (uint64_t)a2) & 1) == 0)
  {
    uint64_t v11 = (int8x8_t *)*((void *)this + 11);
    uint64_t v12 = (wireless_diagnostics::google::protobuf *)*((int *)a2 + 10);
    int8x8_t v13 = v11[16];
    if (v13)
    {
      uint64_t v14 = *((void *)a2 + 7);
      unint64_t v15 = (unint64_t)v12 + 0x10000 * v14 - v14;
      uint8x8_t v16 = (uint8x8_t)vcnt_s8(v13);
      v16.i16[0] = vaddlv_u8(v16);
      if (v16.u32[0] > 1uLL)
      {
        unint64_t v17 = (unint64_t)v12 + 0x10000 * v14 - v14;
        if (v15 >= *(void *)&v13) {
          unint64_t v17 = v15 % *(void *)&v13;
        }
      }
      else
      {
        unint64_t v17 = (*(void *)&v13 - 1) & v15;
      }
      uint64_t v43 = *(uint64_t ***)(*(void *)&v11[15] + 8 * v17);
      if (v43)
      {
        for (uint64_t i = *v43; i; uint64_t i = (uint64_t *)*i)
        {
          uint64_t v45 = (char *)i[1];
          if ((char *)v15 == v45)
          {
            if (i[2] == v14 && *((_DWORD *)i + 6) == v12)
            {
              int v84 = (std::string::size_type *)i[4];
              goto LABEL_67;
            }
          }
          else
          {
            if (v16.u32[0] > 1uLL)
            {
              if ((unint64_t)v45 >= *(void *)&v13) {
                uint64_t v45 = (char *)((unint64_t)v45 % *(void *)&v13);
              }
            }
            else
            {
              uint64_t v45 = (char *)((unint64_t)v45 & (*(void *)&v13 - 1));
            }
            if (v45 != (char *)v17) {
              break;
            }
          }
        }
      }
    }
    int v84 = 0;
LABEL_67:
    uint64_t v47 = *((void *)a2 + 1);
    if (*((unsigned char *)a2 + 52))
    {
      *(void *)&long long v104 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer(v12, (unsigned char *)&v104 + 12, v10);
      DWORD2(v104) = strlen((const char *)v104);
      std::string::size_type v48 = *(void *)(*((void *)a2 + 7) + 8);
      int v49 = *(char *)(v48 + 23);
      uint64_t v50 = *(void *)(v48 + 8);
      if (v49 < 0) {
        std::string::size_type v48 = *(void *)v48;
      }
      v103.__r_.__value_.__r.__words[0] = v48;
      int v51 = v49;
      if (v49 < 0) {
        int v51 = v50;
      }
      LODWORD(v103.__r_.__value_.__r.__words[1]) = v51;
      std::string::size_type v52 = v84[1];
      int v53 = *(char *)(v52 + 23);
      uint64_t v54 = *(void *)(v52 + 8);
      if (v53 < 0) {
        std::string::size_type v52 = *(void *)v52;
      }
      v102.__r_.__value_.__r.__words[0] = v52;
      int v55 = v53;
      if (v53 < 0) {
        int v55 = v54;
      }
      LODWORD(v102.__r_.__value_.__r.__words[1]) = v55;
      v101.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v101.__r_.__value_.__r.__words[1]) = -1;
      uint64_t v99 = 0;
      int v100 = -1;
      uint64_t v97 = 0;
      int v98 = -1;
      uint64_t v95 = 0;
      int v96 = -1;
      uint64_t v93 = 0;
      int v94 = -1;
      uint64_t v91 = 0;
      int v92 = -1;
      uint64_t v89 = 0;
      int v90 = -1;
      *(void *)&long long v86 = &v93;
      *((void *)&v86 + 1) = &v91;
      wireless_diagnostics::google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102, (uint64_t)&v101, (uint64_t)&v99, (uint64_t)&v97, (uint64_t)&v95, &__p, v86, (uint64_t)&v89);
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a3, 1, (uint64_t)&__p);
    }
    else
    {
      *(void *)&long long v104 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer(v12, (unsigned char *)&v104 + 12, v10);
      DWORD2(v104) = strlen((const char *)v104);
      std::string::size_type v56 = *(void *)(*((void *)a2 + 7) + 8);
      int v57 = *(char *)(v56 + 23);
      uint64_t v58 = *(void *)(v56 + 8);
      if (v57 < 0) {
        std::string::size_type v56 = *(void *)v56;
      }
      v103.__r_.__value_.__r.__words[0] = v56;
      int v59 = v57;
      if (v57 < 0) {
        int v59 = v58;
      }
      LODWORD(v103.__r_.__value_.__r.__words[1]) = v59;
      std::string::size_type v60 = *v84;
      int v61 = *(char *)(*v84 + 23);
      uint64_t v62 = *(void *)(*v84 + 8);
      if (v61 < 0) {
        std::string::size_type v60 = *(void *)*v84;
      }
      v102.__r_.__value_.__r.__words[0] = v60;
      int v63 = v61;
      if (v61 < 0) {
        int v63 = v62;
      }
      LODWORD(v102.__r_.__value_.__r.__words[1]) = v63;
      v101.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v101.__r_.__value_.__r.__words[1]) = -1;
      uint64_t v99 = 0;
      int v100 = -1;
      uint64_t v97 = 0;
      int v98 = -1;
      uint64_t v95 = 0;
      int v96 = -1;
      uint64_t v93 = 0;
      int v94 = -1;
      uint64_t v91 = 0;
      int v92 = -1;
      uint64_t v89 = 0;
      int v90 = -1;
      *(void *)&long long v87 = &v93;
      *((void *)&v87 + 1) = &v91;
      wireless_diagnostics::google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102, (uint64_t)&v101, (uint64_t)&v99, (uint64_t)&v97, (uint64_t)&v95, &__p, v87, (uint64_t)&v89);
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a3, 1, (uint64_t)&__p);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*((unsigned char *)a2 + 52)) {
    wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AddExtension(*((uint64_t ***)this + 1), a2);
  }
  wireless_diagnostics::google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(*((wireless_diagnostics::google::protobuf::FileDescriptorTables **)this + 11), a2);
}

void sub_2135DEBCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (*(char *)(v17 - 89) < 0) {
    operator delete(*(void **)(v17 - 112));
  }
  if (*(char *)(v17 - 137) < 0) {
    operator delete(*(void **)(v17 - 160));
  }
  if (*(char *)(v17 - 185) < 0) {
    operator delete(*(void **)(v17 - 208));
  }
  if (*(char *)(v17 - 233) < 0) {
    operator delete(*(void **)(v17 - 256));
  }
  _Unwind_Resume(exception_object);
}

wireless_diagnostics::google::protobuf::EnumOptions *wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkEnum(wireless_diagnostics::google::protobuf::EnumOptions *this, wireless_diagnostics::google::protobuf::EnumDescriptor *a2, const wireless_diagnostics::google::protobuf::EnumDescriptorProto *a3, const char *a4)
{
  if (!*((void *)a2 + 4))
  {
    this = (wireless_diagnostics::google::protobuf::EnumOptions *)wireless_diagnostics::google::protobuf::EnumOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    *((void *)a2 + 4) = this;
  }
  int v5 = *((_DWORD *)a2 + 11);
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 32;
    do
    {
      uint64_t v8 = *((void *)a2 + 6);
      if (!*(void *)(v8 + v7))
      {
        this = (wireless_diagnostics::google::protobuf::EnumOptions *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
        *(void *)(v8 + v7) = this;
        int v5 = *((_DWORD *)a2 + 11);
      }
      ++v6;
      v7 += 40;
    }
    while (v6 < v5);
  }
  return this;
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkService(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::ServiceDescriptor *a2, const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a3, const char *a4)
{
  if (!*((void *)a2 + 3)) {
    *((void *)a2 + 3) = wireless_diagnostics::google::protobuf::ServiceOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
  }
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkMethod(this, (wireless_diagnostics::google::protobuf::MethodDescriptor *)(*((void *)a2 + 5) + v7), *(const wireless_diagnostics::google::protobuf::MethodDescriptorProto **)(*((void *)a3 + 3) + 8 * v8++), a4);
      v7 += 48;
    }
    while (v8 < *((int *)a2 + 8));
  }
}

unint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(a1, (std::string *)a2, a3, a5);
  if (v7)
  {
LABEL_12:
    unsigned int v9 = v7;
    return v7 & 0xFFFFFFFF00000000 | v9;
  }
  if (*(unsigned char *)(*(void *)a1 + 41))
  {
    if (wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateQualifiedName(v7, (uint64_t *)a2))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v8 = (unsigned char *)a2;
      }
      else {
        uint64_t v8 = *(unsigned char **)a2;
      }
      if (*v8 == 46)
      {
        std::string::basic_string(&__p, (const std::string *)a2, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v12);
        wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
      }
      wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateString();
    }
    goto LABEL_12;
  }
  unsigned int v9 = 0;
  return v7 & 0xFFFFFFFF00000000 | v9;
}

void sub_2135DF284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *__str, uint64_t a3, int a4)
{
  *(void *)(a1 + 120) = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str->__r_.__value_.__l.__size_) {
      goto LABEL_8;
    }
    uint64_t v8 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  else
  {
    uint64_t v8 = __str;
    if (!*((unsigned char *)&__str->__r_.__value_.__s + 23)) {
      goto LABEL_8;
    }
  }
  if (v8->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v21, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
    uint64_t Symbol = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbol(a1, &v21);
    goto LABEL_42;
  }
LABEL_8:
  std::string::size_type v10 = std::string::find(__str, 46, 0);
  memset(&v21, 0, sizeof(v21));
  if (v10 == -1)
  {
    std::string::operator=(&v21, __str);
  }
  else
  {
    std::string::basic_string(&__p, __str, 0, v10, (std::allocator<char> *)&v22);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    std::string v21 = __p;
  }
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __p = *(std::string *)a3;
  }
  while (1)
  {
    std::string::size_type v11 = std::string::rfind(&__p, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v11 == -1) {
      break;
    }
    std::string::erase(&__p, v11, 0xFFFFFFFFFFFFFFFFLL);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(&__p, 1uLL, 46);
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int8x8_t v13 = &v21;
    }
    else {
      int8x8_t v13 = (std::string *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v14 = v21.__r_.__value_.__l.__size_;
    }
    std::string::append(&__p, (const std::string::value_type *)v13, v14);
    uint64_t v15 = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbol(a1, &__p);
    uint64_t Symbol = v15;
    if (v15)
    {
      if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v16 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v16 = v21.__r_.__value_.__l.__size_;
      }
      std::string::size_type v17 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      if ((v17 & 0x80u) != 0) {
        std::string::size_type v17 = __str->__r_.__value_.__l.__size_;
      }
      if (v17 <= v16)
      {
        if (a4 != 1 || (v15 & 0xFFFFFFFD) == 1) {
          goto LABEL_40;
        }
      }
      else if (((v15 - 1) & 0xFFFFFFF9) == 0)
      {
        std::string::append(&__p, __str, v16, v17 - v16);
        uint64_t v18 = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbol(a1, &__p);
        goto LABEL_39;
      }
    }
    std::string::erase(&__p, size, 0xFFFFFFFFFFFFFFFFLL);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbol(a1, __str);
LABEL_39:
  uint64_t Symbol = v18;
LABEL_40:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_42:
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return Symbol;
}

void sub_2135DF538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

wireless_diagnostics::google::protobuf::EnumValueOptions *wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkEnumValue(wireless_diagnostics::google::protobuf::EnumValueOptions *this, wireless_diagnostics::google::protobuf::EnumValueDescriptor *a2, const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *a3, const char *a4)
{
  if (!*((void *)a2 + 4))
  {
    this = (wireless_diagnostics::google::protobuf::EnumValueOptions *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    *((void *)a2 + 4) = this;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::CrossLinkMethod(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::MethodDescriptor *a2, const wireless_diagnostics::google::protobuf::MethodDescriptorProto *a3, const char *a4)
{
  if (!*((void *)a2 + 5)) {
    *((void *)a2 + 5) = wireless_diagnostics::google::protobuf::MethodOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
  }
  int v7 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t)this, *((void *)a3 + 3), *((void *)a2 + 1), 0, 0);
  if (v7 == 1)
  {
    *((void *)a2 + 3) = v8;
  }
  else if (v7)
  {
    uint64_t v9 = *((void *)a2 + 1);
    std::operator+<char>();
    std::string::size_type v10 = std::string::append(&v17, "\" is not a message type.");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    std::string::size_type v19 = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v9, (uint64_t)a3, 5, (uint64_t)__p);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 5);
  }
  int v12 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t)this, *((void *)a3 + 4), *((void *)a2 + 1), 0, 0);
  if (v12 == 1)
  {
    *((void *)a2 + 4) = v13;
  }
  else if (v12)
  {
    uint64_t v14 = *((void *)a2 + 1);
    std::operator+<char>();
    uint64_t v15 = std::string::append(&v17, "\" is not a message type.");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    std::string::size_type v19 = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v14, (uint64_t)a3, 6, (uint64_t)__p);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 6);
  }
}

void sub_2135DF780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateMessageOptions(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::Descriptor *a2, const wireless_diagnostics::google::protobuf::DescriptorProto *a3, const char *a4)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  if (*((int *)a2 + 11) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 6) + v7), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 3) + 8 * v8++), a4);
      v7 += 120;
    }
    while (v8 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (wireless_diagnostics::google::protobuf::Descriptor *)(*((void *)a2 + 8) + v9), *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a3 + 9) + 8 * v10++));
      v9 += 120;
    }
    while (v10 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateEnumOptions(this, (wireless_diagnostics::google::protobuf::EnumDescriptor *)(*((void *)a2 + 10) + v11), *(const wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 12) + 8 * v12++));
      v11 += 56;
    }
    while (v12 < *((int *)a2 + 18));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (wireless_diagnostics::google::protobuf::FieldDescriptor *)(*((void *)a2 + 14) + v13), *(const wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 6) + 8 * v14++), a4);
      v13 += 120;
    }
    while (v14 < *((int *)a2 + 26));
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 64)) {
    unint64_t v15 = 0x7FFFFFFFLL;
  }
  else {
    unint64_t v15 = 0x1FFFFFFFLL;
  }
  int v16 = *((_DWORD *)a2 + 22);
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 4;
    do
    {
      if ((uint64_t)(v15 + 1) < *(int *)(*((void *)a2 + 12) + v18))
      {
        uint64_t v19 = *((void *)a2 + 1);
        uint64_t v20 = *(void *)(*((void *)a3 + 15) + 8 * v17);
        unint64_t v41 = wireless_diagnostics::google::protobuf::FastInt64ToBuffer(v15, v43, (char *)a3);
        int v42 = strlen(v41);
        uint64_t v39 = 0;
        int v40 = -1;
        uint64_t v37 = 0;
        int v38 = -1;
        uint64_t v35 = 0;
        int v36 = -1;
        uint64_t v33 = 0;
        int v34 = -1;
        uint64_t v31 = 0;
        int v32 = -1;
        uint64_t v29 = 0;
        int v30 = -1;
        uint64_t v27 = 0;
        int v28 = -1;
        uint64_t v25 = 0;
        int v26 = -1;
        uint64_t v23 = 0;
        int v24 = -1;
        *((void *)&v21 + 1) = &v25;
        *(void *)&long long v21 = &v27;
        wireless_diagnostics::google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v41, (uint64_t)&v39, (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, &__p, v21, (uint64_t)&v23);
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, v20, 1, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        int v16 = *((_DWORD *)a2 + 22);
      }
      ++v17;
      v18 += 8;
    }
    while (v17 < v16);
  }
}

void sub_2135DFA74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateEnumOptions(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::EnumDescriptor *a2, const wireless_diagnostics::google::protobuf::EnumDescriptorProto *a3)
{
  uint64_t v6 = *((void *)a2 + 4);
  if ((*(unsigned char *)(v6 + 72) & 1) == 0 || !*(unsigned char *)(v6 + 64))
  {
    v42[0] = 0;
    v42[1] = 0;
    unint64_t v41 = v42;
    if (*((int *)a2 + 11) < 1)
    {
      int v34 = 0;
    }
    else
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = *((void *)a2 + 6);
        uint64_t v9 = v8 + 40 * v7;
        int v12 = *(_DWORD *)(v9 + 16);
        uint64_t v11 = (int *)(v9 + 16);
        int v10 = v12;
        uint64_t v13 = v42[0];
        if (!v42[0]) {
          goto LABEL_14;
        }
        uint64_t v14 = v42;
        do
        {
          unint64_t v15 = (uint64_t *)v13;
          int v16 = v14;
          int v17 = *(_DWORD *)(v13 + 32);
          uint64_t v18 = (uint64_t *)(v13 + 8);
          if (v17 >= v10)
          {
            uint64_t v18 = v15;
            uint64_t v14 = v15;
          }
          uint64_t v13 = *v18;
        }
        while (v13);
        if (v14 == v42) {
          goto LABEL_14;
        }
        if (v17 < v10) {
          unint64_t v15 = v16;
        }
        if (v10 >= *((_DWORD *)v15 + 8))
        {
          std::operator+<char>();
          long long v21 = std::string::append(&v37, "\" uses the same enum value as \"");
          long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          v38.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          int v36 = *v11;
          uint64_t v43 = &v36;
          uint64_t v23 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, &v36, (uint64_t)&std::piecewise_construct, &v43);
          int v26 = v23[5];
          int v24 = v23 + 5;
          uint64_t v25 = (const std::string::value_type *)v26;
          int v27 = *((char *)v24 + 23);
          if (v27 >= 0) {
            int v28 = (const std::string::value_type *)v24;
          }
          else {
            int v28 = v25;
          }
          if (v27 >= 0) {
            std::string::size_type v29 = *((unsigned __int8 *)v24 + 23);
          }
          else {
            std::string::size_type v29 = (std::string::size_type)v24[1];
          }
          int v30 = std::string::append(&v38, v28, v29);
          long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          __p[0].__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          int v32 = std::string::append(__p, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          std::string::size_type v40 = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)uint64_t v39 = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v38.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v37.__r_.__value_.__l.__data_);
          }
          if (*(unsigned char *)(*((void *)a2 + 4) + 64))
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
          }
          else
          {
            wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((void *)a2 + 1), (uint64_t)a3, 1, (uint64_t)v39);
          }
          if (SHIBYTE(v40) < 0) {
            operator delete(v39[0]);
          }
        }
        else
        {
LABEL_14:
          uint64_t v19 = *(const std::string **)(v8 + 40 * v7 + 8);
          LODWORD(v39[0]) = v10;
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
          uint64_t v20 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v41, (int *)v39, (uint64_t)&std::piecewise_construct, __p);
          std::string::operator=((std::string *)(v20 + 5), v19);
        }
        ++v7;
      }
      while (v7 < *((int *)a2 + 11));
      int v34 = (char *)v42[0];
    }
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v41, v34);
  }
}

void sub_2135DFD54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(v37 - 128, *(char **)(v37 - 120));
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateServiceOptions(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::ServiceDescriptor *a2, const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a3, const char *a4)
{
  uint64_t v4 = *((void *)a2 + 2);
  if (v4)
  {
    uint64_t v8 = *(void *)(v4 + 136);
    if (v8 != wireless_diagnostics::google::protobuf::FileOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4)
      && *(_DWORD *)(*(void *)(v4 + 136) + 56) == 3)
    {
      uint64_t v9 = *(void *)(*((void *)a2 + 2) + 136);
      if (*(unsigned char *)(v9 + 62) || *(unsigned char *)(v9 + 63))
      {
        uint64_t v10 = *((void *)a2 + 1);
        std::string::basic_string[abi:ne180100]<0>(__p, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.");
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a3, 0, (uint64_t)__p);
        if (v12 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
}

void sub_2135DFEA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateFieldOptions(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::FieldDescriptorProto *a3, const char *a4)
{
  uint64_t v6 = this;
  uint64_t v7 = (unsigned char *)*((void *)a2 + 12);
  if ((v7[84] & 0x10) != 0)
  {
    wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateMapKey(this, a2, a3);
    uint64_t v7 = (unsigned char *)*((void *)a2 + 12);
  }
  if (v7[45] && *((_DWORD *)a2 + 11) != 11)
  {
    uint64_t v8 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[lazy = true] can only be specified for submessage fields.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)v6, v8, (uint64_t)a3, 2, (uint64_t)__p);
    if (v25 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = (unsigned char *)*((void *)a2 + 12);
  }
  if (v7[44] && (*((_DWORD *)a2 + 12) != 3 || (*((_DWORD *)a2 + 11) - 13) >= 0xFFFFFFFC))
  {
    uint64_t v9 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(__p, "[packed = true] can only be specified for repeated primitive fields.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)v6, v9, (uint64_t)a3, 2, (uint64_t)__p);
    if (v25 < 0) {
      operator delete(__p[0]);
    }
  }
  uint64_t v10 = *((void *)a2 + 7);
  if (v10)
  {
    uint64_t v11 = *(wireless_diagnostics::google::protobuf::DescriptorBuilder **)(v10 + 32);
    this = (wireless_diagnostics::google::protobuf::DescriptorBuilder *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    if (v11 != this)
    {
      if (*(unsigned char *)(*(void *)(*((void *)a2 + 7) + 32) + 64))
      {
        if (*((unsigned char *)a2 + 52))
        {
          if (*((_DWORD *)a2 + 12) == 1 && *((_DWORD *)a2 + 11) == 11) {
            goto LABEL_23;
          }
          uint64_t v12 = *((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions of MessageSets must be optional messages.");
          wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)v6, v12, (uint64_t)a3, 2, (uint64_t)__p);
        }
        else
        {
          uint64_t v13 = *((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "MessageSets cannot have fields, only extensions.");
          wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)v6, v13, (uint64_t)a3, 0, (uint64_t)__p);
        }
        if (v25 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
LABEL_23:
  uint64_t v14 = *((void *)a2 + 4);
  if (v14)
  {
    unint64_t v15 = *(wireless_diagnostics::google::protobuf::FileOptions **)(v14 + 136);
    int v16 = (wireless_diagnostics::google::protobuf::FileOptions *)wireless_diagnostics::google::protobuf::FileOptions::default_instance(this, (uint64_t)a2, (uint64_t)a3, a4);
    if (v15 != v16 && *(_DWORD *)(*(void *)(v14 + 136) + 56) == 3)
    {
      uint64_t v20 = *((void *)a2 + 7);
      if (v20)
      {
        uint64_t v21 = *(void *)(v20 + 16);
        if (!v21
          || (uint64_t v22 = *(void *)(v21 + 136),
              v22 == wireless_diagnostics::google::protobuf::FileOptions::default_instance(v16, v17, v18, v19))
          || *(_DWORD *)(*(void *)(v21 + 136) + 56) != 3)
        {
          uint64_t v23 = *((void *)a2 + 1);
          std::string::basic_string[abi:ne180100]<0>(__p, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
          wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)v6, v23, (uint64_t)a3, 3, (uint64_t)__p);
          if (v25 < 0) {
            operator delete(__p[0]);
          }
        }
      }
    }
  }
}

void sub_2135E0118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::ValidateMapKey(wireless_diagnostics::google::protobuf::DescriptorBuilder *this, wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::FieldDescriptorProto *a3)
{
  if (*((_DWORD *)a2 + 12) != 3)
  {
    uint64_t v19 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for repeated fields.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a3, 2, (uint64_t)&__p);
    goto LABEL_28;
  }
  if ((*((_DWORD *)a2 + 11) & 0xFFFFFFFE) != 0xA)
  {
    uint64_t v20 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "map type is only allowed for fields with a message type.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 2, (uint64_t)&__p);
    goto LABEL_28;
  }
  uint64_t v6 = *((void *)a2 + 9);
  if (!v6)
  {
    uint64_t v21 = *((void *)a2 + 1);
    std::string::basic_string[abi:ne180100]<0>(&__p, "Could not find field type.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v21, (uint64_t)a3, 2, (uint64_t)&__p);
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)(*((void *)a2 + 12) + 48);
  uint64_t v8 = *(const void ***)(v6 + 8);
  if (*((char *)v8 + 23) >= 0) {
    size_t v9 = *((unsigned __int8 *)v8 + 23);
  }
  else {
    size_t v9 = (size_t)v8[1];
  }
  uint64_t v10 = &v38;
  std::string::basic_string[abi:ne180100]((uint64_t)&v38, v9 + 1);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v10 = (std::string *)v38.__r_.__value_.__r.__words[0];
  }
  if (v9)
  {
    if (*((char *)v8 + 23) >= 0) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = *v8;
    }
    memmove(v10, v11, v9);
  }
  *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v9) = 46;
  int v12 = *(char *)(v7 + 23);
  if (v12 >= 0) {
    uint64_t v13 = (const std::string::value_type *)v7;
  }
  else {
    uint64_t v13 = *(const std::string::value_type **)v7;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    std::string::size_type v14 = *(void *)(v7 + 8);
  }
  unint64_t v15 = std::string::append(&v38, v13, v14);
  std::string __p = *v15;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  int v16 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t)this, v7, (uint64_t)&__p, 0, 0);
  uint64_t v18 = v17;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v38.__r_.__value_.__l.__data_);
    if (!v16) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v16)
  {
LABEL_33:
    if (*(unsigned char *)(v18 + 52)) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(v18 + 48) == 3)
    {
      uint64_t v34 = *((void *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map_key must not name a repeated field.");
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a3, 2, (uint64_t)&__p);
    }
    else
    {
      if ((*(_DWORD *)(v18 + 44) & 0xFFFFFFFE) != 0xA)
      {
        *((void *)a2 + 11) = v18;
        return;
      }
      uint64_t v35 = *((void *)a2 + 1);
      std::string::basic_string[abi:ne180100]<0>(&__p, "map key must name a scalar or string field.");
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v35, (uint64_t)a3, 2, (uint64_t)&__p);
    }
LABEL_28:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    uint64_t v22 = (void *)__p.__r_.__value_.__r.__words[0];
    goto LABEL_30;
  }
LABEL_34:
  uint64_t v23 = *((void *)a2 + 1);
  std::operator+<char>();
  int v24 = std::string::append(&v36, "\" in type \"");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  uint64_t v26 = *(void *)(v6 + 8);
  int v27 = *(char *)(v26 + 23);
  if (v27 >= 0) {
    int v28 = *(const std::string::value_type **)(v6 + 8);
  }
  else {
    int v28 = *(const std::string::value_type **)v26;
  }
  if (v27 >= 0) {
    std::string::size_type v29 = *(unsigned __int8 *)(v26 + 23);
  }
  else {
    std::string::size_type v29 = *(void *)(v26 + 8);
  }
  int v30 = std::string::append(&v37, v28, v29);
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  int v32 = std::string::append(&v38, "\".");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v23, (uint64_t)a3, 2, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v37.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v22 = (void *)v36.__r_.__value_.__r.__words[0];
LABEL_30:
    operator delete(v22);
  }
}

void sub_2135E04C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this, wireless_diagnostics::google::protobuf::DescriptorBuilder *a2)
{
  *(void *)this = a2;
  wireless_diagnostics::google::protobuf::DynamicMessageFactory::DynamicMessageFactory((wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 24));
  if (!*(void *)this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v4);
  }
  return this;
}

void sub_2135E0600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  wireless_diagnostics::google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v3);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this, wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = *((void *)this + 2);
  if (!*(_DWORD *)(v3 + 24))
  {
    std::string::basic_string[abi:ne180100]<0>(&v72, "Option must have a name.");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
LABEL_75:
    if (SHIBYTE(v73) < 0) {
      operator delete((void *)v72);
    }
    return 0;
  }
  int v5 = *(uint64_t **)(**(void **)(v3 + 16) + 16);
  int v6 = *((char *)v5 + 23);
  if (v6 < 0)
  {
    if (v5[1] != 20) {
      goto LABEL_15;
    }
    int v5 = (uint64_t *)*v5;
  }
  else if (v6 != 20)
  {
    goto LABEL_15;
  }
  uint64_t v7 = (uint64_t *)*v5;
  uint64_t v8 = v5[1];
  int v9 = *((_DWORD *)v5 + 4);
  if (v7 == (uint64_t *)0x707265746E696E75 && v8 == 0x706F5F6465746572 && v9 == 1852795252)
  {
    std::string::basic_string[abi:ne180100]<0>(&v72, "Option must not use reserved name \"uninterpreted_option\".");
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
    goto LABEL_75;
  }
LABEL_15:
  int v12 = *(wireless_diagnostics::google::protobuf::internal::Mutex ****)this;
  uint64_t v13 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  if (wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(v12, *v12, *(void *)(v13 + 8)) == 1)
  {
    unint64_t v15 = v14;
    if (!v14) {
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v15 = (const std::string::value_type **)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (!v15)
    {
LABEL_19:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v72);
    }
  }
  std::string __p = 0;
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  std::string::basic_string[abi:ne180100]<0>(&v68, "");
  uint64_t v16 = *((void *)this + 2);
  if (*(int *)(v16 + 24) < 1)
  {
    uint64_t v18 = 0;
LABEL_72:
    uint64_t v43 = __p;
    uint64_t v44 = (uint64_t)v70;
    uint64_t v45 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
    long long v46 = (uint64_t **)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::Message *))(*(void *)v45 + 16))(v45, a2);
    if (wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet((uint64_t *)this, (uint64_t)v43, v44, v18, (uint64_t)&v68, v46))operator new(); {
  }
    }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    while (1)
    {
      uint64_t v19 = *(void *)(*(void *)(v16 + 16) + 8 * v17);
      uint64_t v20 = *(void *)(v19 + 16);
      std::string::size_type size = HIBYTE(v68.__r_.__value_.__r.__words[2]);
      if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v68.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        std::string::append(&v68, ".");
        uint64_t v19 = *(void *)(*(void *)(*((void *)this + 2) + 16) + 8 * v17);
      }
      if (*(unsigned char *)(v19 + 24))
      {
        std::operator+<char>();
        uint64_t v22 = std::string::append(&v65, ")");
        long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        int64_t v73 = v22->__r_.__value_.__r.__words[2];
        long long v72 = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        if (v73 >= 0) {
          int v24 = (const std::string::value_type *)&v72;
        }
        else {
          int v24 = (const std::string::value_type *)v72;
        }
        if (v73 >= 0) {
          std::string::size_type v25 = HIBYTE(v73);
        }
        else {
          std::string::size_type v25 = *((void *)&v72 + 1);
        }
        std::string::append(&v68, v24, v25);
        if (SHIBYTE(v73) < 0) {
          operator delete((void *)v72);
        }
        if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v65.__r_.__value_.__l.__data_);
        }
        unint64_t FieldByName = (wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *)wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbol(*(void *)this, v20, *((void *)this + 1), 0, 0);
        if (FieldByName == 2) {
          uint64_t v18 = v27;
        }
        if (!v18)
        {
LABEL_78:
          if (!*(unsigned char *)(**(void **)this + 41))
          {
            std::operator+<char>();
            std::string::size_type v48 = std::string::append(&v65, "\" unknown.");
            long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
            int64_t v73 = v48->__r_.__value_.__r.__words[2];
            long long v72 = v49;
            v48->__r_.__value_.__l.__size_ = 0;
            v48->__r_.__value_.__r.__words[2] = 0;
            v48->__r_.__value_.__r.__words[0] = 0;
            wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
            goto LABEL_84;
          }
LABEL_81:
          wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(FieldByName, *((const wireless_diagnostics::google::protobuf::UninterpretedOption **)this + 2), a2);
          uint64_t v47 = 1;
          goto LABEL_103;
        }
      }
      else
      {
        int v28 = *(char *)(v20 + 23);
        if (v28 >= 0) {
          std::string::size_type v29 = (const std::string::value_type *)v20;
        }
        else {
          std::string::size_type v29 = *(const std::string::value_type **)v20;
        }
        if (v28 >= 0) {
          std::string::size_type v30 = *(unsigned __int8 *)(v20 + 23);
        }
        else {
          std::string::size_type v30 = *(void *)(v20 + 8);
        }
        std::string::append(&v68, v29, v30);
        unint64_t FieldByName = (wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *)wireless_diagnostics::google::protobuf::Descriptor::FindFieldByName((uint64_t)v15, v20);
        uint64_t v18 = (uint64_t)FieldByName;
        if (!FieldByName) {
          goto LABEL_78;
        }
      }
      uint64_t v31 = *(void *)(v18 + 56);
      if ((const std::string::value_type **)v31 != v15) {
        break;
      }
      if (*(_DWORD *)(v18 + 48) == 3)
      {
        std::operator+<char>();
        uint64_t v50 = std::string::append(&v65, "\" is repeated. Repeated options are not supported.");
        long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        int64_t v73 = v50->__r_.__value_.__r.__words[2];
        long long v72 = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
        goto LABEL_84;
      }
      uint64_t v16 = *((void *)this + 2);
      uint64_t v32 = *(int *)(v16 + 24);
      if (v17 < v32 - 1)
      {
        if ((*(_DWORD *)(v18 + 44) & 0xFFFFFFFE) != 0xA)
        {
          std::operator+<char>();
          std::string::size_type v52 = std::string::append(&v65, "\" is an atomic type, not a message.");
          long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
          int64_t v73 = v52->__r_.__value_.__r.__words[2];
          long long v72 = v53;
          v52->__r_.__value_.__l.__size_ = 0;
          v52->__r_.__value_.__r.__words[2] = 0;
          v52->__r_.__value_.__r.__words[0] = 0;
          wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
LABEL_84:
          if (SHIBYTE(v73) < 0) {
            operator delete((void *)v72);
          }
          if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v54 = (void *)v65.__r_.__value_.__r.__words[0];
LABEL_88:
            operator delete(v54);
            goto LABEL_102;
          }
          goto LABEL_102;
        }
        long long v33 = v70;
        if (v70 >= v71)
        {
          uint64_t v35 = ((char *)v70 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v35 + 1) >> 61) {
            std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v36 = ((char *)v71 - (unsigned char *)__p) >> 2;
          if (v36 <= v35 + 1) {
            unint64_t v36 = v35 + 1;
          }
          if ((unint64_t)((char *)v71 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v37 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v37 = v36;
          }
          if (v37) {
            std::string v38 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)&v71, v37);
          }
          else {
            std::string v38 = 0;
          }
          uint64_t v39 = (uint64_t *)&v38[8 * v35];
          *uint64_t v39 = v18;
          uint64_t v34 = v39 + 1;
          std::string::size_type v40 = (char *)v70;
          unint64_t v41 = (char *)__p;
          if (v70 != __p)
          {
            do
            {
              uint64_t v42 = *((void *)v40 - 1);
              v40 -= 8;
              *--uint64_t v39 = v42;
            }
            while (v40 != v41);
            std::string::size_type v40 = (char *)__p;
          }
          std::string __p = v39;
          uint64_t v70 = v34;
          uint64_t v71 = (uint64_t *)&v38[8 * v37];
          if (v40) {
            operator delete(v40);
          }
        }
        else
        {
          *uint64_t v70 = v18;
          uint64_t v34 = v33 + 1;
        }
        uint64_t v70 = v34;
        unint64_t v15 = *(const std::string::value_type ***)(v18 + 72);
        uint64_t v16 = *((void *)this + 2);
        LODWORD(v32) = *(_DWORD *)(v16 + 24);
      }
      if (++v17 >= (int)v32) {
        goto LABEL_72;
      }
    }
    if (*(unsigned char *)(v31 + 40)) {
      goto LABEL_81;
    }
    std::operator+<char>();
    int v55 = std::string::append(&v66, "\" is not a field or extension of message \"");
    long long v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v56;
    v55->__r_.__value_.__l.__size_ = 0;
    v55->__r_.__value_.__r.__words[2] = 0;
    v55->__r_.__value_.__r.__words[0] = 0;
    int v57 = (*v15)[23];
    if (v57 >= 0) {
      uint64_t v58 = *v15;
    }
    else {
      uint64_t v58 = *(const std::string::value_type **)*v15;
    }
    if (v57 >= 0) {
      std::string::size_type v59 = *((unsigned __int8 *)*v15 + 23);
    }
    else {
      std::string::size_type v59 = *((void *)*v15 + 1);
    }
    std::string::size_type v60 = std::string::append(&v67, v58, v59);
    long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
    v65.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v61;
    v60->__r_.__value_.__l.__size_ = 0;
    v60->__r_.__value_.__r.__words[2] = 0;
    v60->__r_.__value_.__r.__words[0] = 0;
    uint64_t v62 = std::string::append(&v65, "\".");
    long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
    int64_t v73 = v62->__r_.__value_.__r.__words[2];
    long long v72 = v63;
    v62->__r_.__value_.__l.__size_ = 0;
    v62->__r_.__value_.__r.__words[2] = 0;
    v62->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 7, (uint64_t)&v72);
    if (SHIBYTE(v73) < 0) {
      operator delete((void *)v72);
    }
    if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v65.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v67.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v54 = (void *)v66.__r_.__value_.__r.__words[0];
      goto LABEL_88;
    }
  }
LABEL_102:
  uint64_t v47 = 0;
LABEL_103:
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v68.__r_.__value_.__l.__data_);
  }
  if (__p)
  {
    uint64_t v70 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v47;
}

void sub_2135E0FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, wireless_diagnostics::google::protobuf::UnknownFieldSet *a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)(v39 - 144));
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::UnknownFieldSet>::~scoped_ptr(&a18);
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::UnknownFieldSet>::~scoped_ptr((wireless_diagnostics::google::protobuf::UnknownFieldSet **)&a19);
  if (a37 < 0) {
    operator delete(__p);
  }
  unint64_t v41 = a38;
  if (a38)
  {
    *(void *)(v38 + 8) = a38;
    operator delete(v41);
  }
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this, const wireless_diagnostics::google::protobuf::UninterpretedOption *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  uint64_t v5 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "uninterpreted_option");
  uint64_t FieldByName = wireless_diagnostics::google::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)__p);
  uint64_t v7 = FieldByName;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (!v7)
    {
LABEL_5:
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
    }
  }
  else if (!FieldByName)
  {
    goto LABEL_5;
  }
  uint64_t v8 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 144))(a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::Message *, uint64_t, void))(*(void *)v8 + 520))(v8, a3, v7, 0);
  return (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::UninterpretedOption *))(*(void *)v9 + 104))(v9, a2);
}

void sub_2135E1320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t **a6)
{
  if (a2 == a3)
  {
    uint64_t v21 = 0;
    uint64_t v22 = *a6;
    uint64_t v23 = -1;
    do
    {
      if (v22) {
        unint64_t v24 = (unint64_t)(v22[1] - *v22) >> 4;
      }
      else {
        LODWORD(v24) = 0;
      }
      if (++v23 >= (int)v24) {
        return 1;
      }
      int v25 = *(_DWORD *)(*v22 + v21);
      v21 += 16;
    }
    while ((v25 & 0x1FFFFFFF) != *(_DWORD *)(a4 + 40));
    std::operator+<char>();
    uint64_t v26 = std::string::append(&v33, "\" was already set.");
    long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    std::string::size_type v32 = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*a1, a1[1] + 24, a1[2], 7, (uint64_t)__p);
    if (SHIBYTE(v32) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = a2 + 8;
    while (1)
    {
      uint64_t v13 = *a6;
      if (*a6) {
        unint64_t v14 = (unint64_t)(v13[1] - *v13) >> 4;
      }
      else {
        LODWORD(v14) = 0;
      }
      BOOL v15 = v11 >= (int)v14;
      if (v11 >= (int)v14) {
        break;
      }
      uint64_t v16 = *v13;
      unsigned int v17 = *(_DWORD *)(*v13 + v10);
      if ((v17 & 0x1FFFFFFF) == *(_DWORD *)(*(void *)a2 + 40))
      {
        int v18 = *(_DWORD *)(*(void *)a2 + 44);
        if (v18 == 10)
        {
          if (v17 >> 29 == 4
            && (wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, *(void *)(v16 + v10 + 8)) & 1) == 0)
          {
            return v15;
          }
        }
        else
        {
          if (v18 != 11)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
            return 0;
          }
          if (v17 >> 29 == 3)
          {
            wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet(__p);
            uint64_t v19 = *(void *)(v16 + v10 + 8);
            if (*(char *)(v19 + 23) >= 0) {
              uint64_t v20 = *(const void **)(v16 + v10 + 8);
            }
            else {
              uint64_t v20 = *(const void **)v19;
            }
            if (wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromArray((wireless_diagnostics::google::protobuf::UnknownFieldSet *)__p, v20)&& (wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v12, a3, a4, a5, __p) & 1) == 0)
            {
              wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)__p);
              return 0;
            }
            wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)__p);
          }
        }
      }
      ++v11;
      v10 += 16;
    }
  }
  return v15;
}

void sub_2135E15C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, void ***a3)
{
  int v3 = *((_DWORD *)a2 + 11);
  switch(v3)
  {
    case 1:
      uint64_t v13 = *((void *)this + 2);
      int v14 = *(_DWORD *)(v13 + 92);
      if ((v14 & 0x10) != 0)
      {
        double v24 = *(double *)(v13 + 64);
      }
      else if ((v14 & 4) != 0)
      {
        double v24 = (double)*(unint64_t *)(v13 + 48);
      }
      else
      {
        if ((v14 & 8) == 0) {
          goto LABEL_139;
        }
        double v24 = (double)*(uint64_t *)(v13 + 56);
      }
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 10), *(uint64_t *)&v24);
      return 1;
    case 2:
      uint64_t v15 = *((void *)this + 2);
      int v16 = *(_DWORD *)(v15 + 92);
      if ((v16 & 0x10) != 0)
      {
        float v25 = *(double *)(v15 + 64);
      }
      else if ((v16 & 4) != 0)
      {
        float v25 = (float)*(unint64_t *)(v15 + 48);
      }
      else
      {
        if ((v16 & 8) == 0) {
          goto LABEL_139;
        }
        float v25 = (float)*(uint64_t *)(v15 + 56);
      }
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 10), SLODWORD(v25));
      return 1;
    case 3:
    case 16:
    case 18:
      uint64_t v9 = *((void *)this + 2);
      int v10 = *(_DWORD *)(v9 + 92);
      if ((v10 & 4) != 0)
      {
        uint64_t v21 = *(void *)(v9 + 48);
        if (v21 < 0) {
          goto LABEL_139;
        }
        int v22 = *((_DWORD *)a2 + 10);
      }
      else
      {
        if ((v10 & 8) == 0) {
          goto LABEL_139;
        }
        int v22 = *((_DWORD *)a2 + 10);
        uint64_t v21 = *(void *)(v9 + 56);
      }
      wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)this, v22, v21, v3, a3);
      return 1;
    case 4:
    case 6:
      uint64_t v12 = *((void *)this + 2);
      if ((*(unsigned char *)(v12 + 92) & 4) == 0) {
        goto LABEL_139;
      }
      wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)this, *((_DWORD *)a2 + 10), *(void *)(v12 + 48), v3, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      uint64_t v7 = *((void *)this + 2);
      int v8 = *(_DWORD *)(v7 + 92);
      if ((v8 & 4) != 0)
      {
        uint64_t v20 = *(void *)(v7 + 48);
        if ((unint64_t)v20 >> 31) {
          goto LABEL_139;
        }
        goto LABEL_46;
      }
      if ((v8 & 8) != 0)
      {
        uint64_t v20 = *(void *)(v7 + 56);
        if (v20 > (uint64_t)0xFFFFFFFF7FFFFFFFLL)
        {
LABEL_46:
          wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)this, *((_DWORD *)a2 + 10), v20, v3, a3);
          return 1;
        }
      }
      goto LABEL_139;
    case 7:
    case 13:
      uint64_t v11 = *((void *)this + 2);
      if ((*(unsigned char *)(v11 + 92) & 4) == 0) {
        goto LABEL_139;
      }
      unint64_t v23 = *(void *)(v11 + 48);
      if (HIDWORD(v23)) {
        goto LABEL_139;
      }
      wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)this, *((_DWORD *)a2 + 10), v23, v3, a3);
      return 1;
    case 8:
      uint64_t v17 = *((void *)this + 2);
      if ((*(unsigned char *)(v17 + 92) & 2) == 0) {
        goto LABEL_139;
      }
      uint64_t v26 = *(_DWORD **)(v17 + 40);
      if (*((char *)v26 + 23) < 0)
      {
        uint64_t v33 = *((void *)v26 + 1);
        if (v33 != 4 || **(_DWORD **)v26 != 1702195828)
        {
          if (v33 != 5) {
            goto LABEL_139;
          }
          uint64_t v26 = *(_DWORD **)v26;
          goto LABEL_57;
        }
      }
      else
      {
        int v27 = *((unsigned __int8 *)v26 + 23);
        if (v27 != 4)
        {
          if (v27 != 5) {
            goto LABEL_139;
          }
LABEL_57:
          int v34 = *v26;
          int v35 = *((unsigned __int8 *)v26 + 4);
          if (v34 != 1936482662 || v35 != 101)
          {
LABEL_139:
            std::operator+<char>();
            int v82 = std::string::append(&v89, "\".");
            long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
            v90.__r_.__value_.__r.__words[2] = v82->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v83;
            v82->__r_.__value_.__l.__size_ = 0;
            v82->__r_.__value_.__r.__words[2] = 0;
            v82->__r_.__value_.__r.__words[0] = 0;
            wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&v90);
            if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v90.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v81 = (void *)v89.__r_.__value_.__r.__words[0];
LABEL_143:
              operator delete(v81);
            }
            return 0;
          }
          uint64_t v37 = 0;
LABEL_146:
          int v63 = *((_DWORD *)a2 + 10);
          goto LABEL_147;
        }
        if (*v26 != 1702195828) {
          goto LABEL_139;
        }
      }
      uint64_t v37 = 1;
      goto LABEL_146;
    case 9:
    case 12:
      if ((*(unsigned char *)(*((void *)this + 2) + 92) & 0x20) != 0) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddLengthDelimited((wireless_diagnostics::google::protobuf::UnknownFieldSet *)a3);
      }
      goto LABEL_139;
    case 10:
    case 11:
      uint64_t result = wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, (const wireless_diagnostics::google::protobuf::Descriptor ***)a2, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)a3);
      if (!result) {
        return result;
      }
      return 1;
    case 14:
      uint64_t v18 = *((void *)this + 2);
      if ((*(unsigned char *)(v18 + 92) & 2) == 0) {
        goto LABEL_139;
      }
      int v28 = (void *)*((void *)a2 + 10);
      uint64_t v29 = *(void *)(v18 + 40);
      uint64_t v30 = *(void *)(v28[2] + 16);
      if (v30 == wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(this))
      {
        uint64_t ValueByName = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v28, v29);
        goto LABEL_112;
      }
      uint64_t v31 = (long long *)v28[1];
      if (*((char *)v31 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v90, *(const std::string::value_type **)v31, *((void *)v31 + 1));
      }
      else
      {
        long long v32 = *v31;
        v90.__r_.__value_.__r.__words[2] = *((void *)v31 + 2);
        *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v32;
      }
      std::string::size_type size = HIBYTE(v90.__r_.__value_.__r.__words[2]);
      if ((v90.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v90.__r_.__value_.__l.__size_;
      }
      if (*(char *)(*v28 + 23) < 0) {
        uint64_t v40 = *(void *)(*v28 + 8);
      }
      else {
        uint64_t v40 = *(unsigned __int8 *)(*v28 + 23);
      }
      std::string::resize(&v90, size - v40, 0);
      int v41 = *(char *)(v29 + 23);
      if (v41 >= 0) {
        uint64_t v42 = (const std::string::value_type *)v29;
      }
      else {
        uint64_t v42 = *(const std::string::value_type **)v29;
      }
      if (v41 >= 0) {
        std::string::size_type v43 = *(unsigned __int8 *)(v29 + 23);
      }
      else {
        std::string::size_type v43 = *(void *)(v29 + 8);
      }
      std::string::append(&v90, v42, v43);
      if (wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(*(wireless_diagnostics::google::protobuf::internal::Mutex ****)this, **(wireless_diagnostics::google::protobuf::internal::Mutex ****)this, (uint64_t)&v90) != 4)
      {
        uint64_t ValueByName = 0;
        goto LABEL_108;
      }
      uint64_t ValueByName = v44;
      if (*(void **)(v44 + 24) == v28)
      {
LABEL_108:
        char v62 = 1;
        goto LABEL_109;
      }
      std::operator+<char>();
      uint64_t v45 = std::string::append(&v84, "\" has no value named \"");
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      int v47 = *(char *)(v29 + 23);
      if (v47 >= 0) {
        std::string::size_type v48 = (const std::string::value_type *)v29;
      }
      else {
        std::string::size_type v48 = *(const std::string::value_type **)v29;
      }
      if (v47 >= 0) {
        std::string::size_type v49 = *(unsigned __int8 *)(v29 + 23);
      }
      else {
        std::string::size_type v49 = *(void *)(v29 + 8);
      }
      uint64_t v50 = std::string::append(&v85, v48, v49);
      long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v52 = std::string::append(&v86, "\" for option \"");
      long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
      v87.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v53;
      v52->__r_.__value_.__l.__size_ = 0;
      v52->__r_.__value_.__r.__words[2] = 0;
      v52->__r_.__value_.__r.__words[0] = 0;
      uint64_t v54 = *((void *)a2 + 1);
      int v55 = *(char *)(v54 + 23);
      if (v55 >= 0) {
        long long v56 = (const std::string::value_type *)*((void *)a2 + 1);
      }
      else {
        long long v56 = *(const std::string::value_type **)v54;
      }
      if (v55 >= 0) {
        std::string::size_type v57 = *(unsigned __int8 *)(v54 + 23);
      }
      else {
        std::string::size_type v57 = *(void *)(v54 + 8);
      }
      uint64_t v58 = std::string::append(&v87, v56, v57);
      long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v59;
      v58->__r_.__value_.__l.__size_ = 0;
      v58->__r_.__value_.__r.__words[2] = 0;
      v58->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v60 = std::string::append(&v88, "\". This appears to be a value from a sibling type.");
      long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v61;
      v60->__r_.__value_.__l.__size_ = 0;
      v60->__r_.__value_.__r.__words[2] = 0;
      v60->__r_.__value_.__r.__words[0] = 0;
      wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&v89);
      if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v89.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v88.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v87.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v86.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v85.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v84.__r_.__value_.__l.__data_);
      }
      char v62 = 0;
      uint64_t ValueByName = 0;
LABEL_109:
      if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v90.__r_.__value_.__l.__data_);
      }
      if ((v62 & 1) == 0) {
        return 0;
      }
LABEL_112:
      if (!ValueByName)
      {
        std::operator+<char>();
        uint64_t v64 = std::string::append(&v85, "\" has no value named \"");
        long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
        v86.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v65;
        v64->__r_.__value_.__l.__size_ = 0;
        v64->__r_.__value_.__r.__words[2] = 0;
        v64->__r_.__value_.__r.__words[0] = 0;
        int v66 = *(char *)(v29 + 23);
        if (v66 >= 0) {
          std::string v67 = (const std::string::value_type *)v29;
        }
        else {
          std::string v67 = *(const std::string::value_type **)v29;
        }
        if (v66 >= 0) {
          std::string::size_type v68 = *(unsigned __int8 *)(v29 + 23);
        }
        else {
          std::string::size_type v68 = *(void *)(v29 + 8);
        }
        uint64_t v69 = std::string::append(&v86, v67, v68);
        long long v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
        v87.__r_.__value_.__r.__words[2] = v69->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v70;
        v69->__r_.__value_.__l.__size_ = 0;
        v69->__r_.__value_.__r.__words[2] = 0;
        v69->__r_.__value_.__r.__words[0] = 0;
        uint64_t v71 = std::string::append(&v87, "\" for option \"");
        long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
        v88.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v72;
        v71->__r_.__value_.__l.__size_ = 0;
        v71->__r_.__value_.__r.__words[2] = 0;
        v71->__r_.__value_.__r.__words[0] = 0;
        uint64_t v73 = *((void *)a2 + 1);
        int v74 = *(char *)(v73 + 23);
        if (v74 >= 0) {
          uint64_t v75 = (const std::string::value_type *)*((void *)a2 + 1);
        }
        else {
          uint64_t v75 = *(const std::string::value_type **)v73;
        }
        if (v74 >= 0) {
          std::string::size_type v76 = *(unsigned __int8 *)(v73 + 23);
        }
        else {
          std::string::size_type v76 = *(void *)(v73 + 8);
        }
        uint64_t v77 = std::string::append(&v88, v75, v76);
        long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
        v89.__r_.__value_.__r.__words[2] = v77->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v78;
        v77->__r_.__value_.__l.__size_ = 0;
        v77->__r_.__value_.__r.__words[2] = 0;
        v77->__r_.__value_.__r.__words[0] = 0;
        uint64_t v79 = std::string::append(&v89, "\".");
        long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
        v90.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v80;
        v79->__r_.__value_.__l.__size_ = 0;
        v79->__r_.__value_.__r.__words[2] = 0;
        v79->__r_.__value_.__r.__words[0] = 0;
        wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)&v90);
        if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v90.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v89.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v88.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v87.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v86.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v81 = (void *)v85.__r_.__value_.__r.__words[0];
          goto LABEL_143;
        }
        return 0;
      }
      int v63 = *((_DWORD *)a2 + 10);
      uint64_t v37 = *(int *)(ValueByName + 16);
LABEL_147:
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(a3, v63, v37);
      return 1;
    default:
      return 1;
  }
}

void sub_2135E21E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::UnknownFieldSet>::reset(wireless_diagnostics::google::protobuf::UnknownFieldSet **a1, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t result = *a1;
  if (result != a2)
  {
    if (result)
    {
      wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(result);
      uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)MEMORY[0x21668DB60]();
    }
    *a1 = a2;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 17)
  {
    a3 = (2 * a3) ^ ((int)a3 >> 31);
LABEL_6:
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 15)
  {
    if (a4 != 5)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
      return;
    }
    a3 = (int)a3;
    goto LABEL_6;
  }

  wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
}

void sub_2135E2510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
      return;
    }
    goto LABEL_6;
  }

  wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_2135E25FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, int a2, unsigned int a3, int a4, void ***this)
{
  if (a4 == 7)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
}

void sub_2135E26DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, int a2, uint64_t a3, int a4, void ***this)
{
  if (a4 == 6)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
}

void sub_2135E27B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *this, const wireless_diagnostics::google::protobuf::Descriptor ***a2, wireless_diagnostics::google::protobuf::UnknownFieldSet *a3)
{
  if ((*(unsigned char *)(*((void *)this + 2) + 92) & 0x40) != 0)
  {
    uint64_t Prototype = wireless_diagnostics::google::protobuf::DynamicMessageFactory::GetPrototype((wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 24), (const wireless_diagnostics::google::protobuf::Descriptor *)a2[9]);
    double v24 = (wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(void *)Prototype
                                                                                                + 24))(Prototype);
    if (!v24)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::FieldDescriptor::DebugString((wireless_diagnostics::google::protobuf::FieldDescriptor *)a2, &v35);
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v35.__r_.__value_.__l.__data_);
      }
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
    }
    v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C3F8CB8;
    *(_OWORD *)&v35.__r_.__value_.__r.__words[1] = 0uLL;
    uint64_t v36 = 0;
    std::string::size_type v25 = *(void *)this;
    v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C3F9230;
    v39.__r_.__value_.__l.__size_ = v25;
    wireless_diagnostics::google::protobuf::TextFormat::Parser::Parser((uint64_t)&v34);
    v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v35;
    v34.__r_.__value_.__l.__size_ = (std::string::size_type)&v39;
    uint64_t v21 = wireless_diagnostics::google::protobuf::TextFormat::Parser::ParseFromString((uint64_t)&v34, *(const void ***)(*((void *)this + 2) + 80), v24);
    if (v21)
    {
      memset(&__str, 0, sizeof(__str));
      wireless_diagnostics::google::protobuf::MessageLite::SerializeToString();
      int v26 = *((_DWORD *)a2 + 11);
      if (v26 == 11) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      if (v26 != 10)
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
      }
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddGroup(a3);
    }
    std::operator+<char>();
    int v27 = std::string::append(&v40, "\": ");
    long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v28;
    v27->__r_.__value_.__l.__size_ = 0;
    v27->__r_.__value_.__r.__words[2] = 0;
    v27->__r_.__value_.__r.__words[0] = 0;
    if (v36 >= 0) {
      std::string::size_type size = &v35.__r_.__value_.__s.__data_[8];
    }
    else {
      std::string::size_type size = (const std::string::value_type *)v35.__r_.__value_.__l.__size_;
    }
    if (v36 >= 0) {
      std::string::size_type v30 = HIBYTE(v36);
    }
    else {
      std::string::size_type v30 = v35.__r_.__value_.__r.__words[2];
    }
    uint64_t v31 = std::string::append(&__str, size, v30);
    long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    std::string::size_type v38 = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)__p);
    if (SHIBYTE(v38) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    wireless_diagnostics::google::protobuf::TextFormat::Parser::~Parser((wireless_diagnostics::google::protobuf::TextFormat::Parser *)&v34);
    wireless_diagnostics::google::protobuf::TextFormat::Finder::~Finder((wireless_diagnostics::google::protobuf::TextFormat::Finder *)&v39);
    v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C3F8CB8;
    if (SHIBYTE(v36) < 0) {
      operator delete((void *)v35.__r_.__value_.__l.__size_);
    }
    wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)&v35);
    if (v24) {
      (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)v24 + 8))(v24);
    }
  }
  else
  {
    std::operator+<char>();
    uint64_t v5 = std::string::append(&v39, "\" is a message. To set the entire message, use syntax like \"");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    int v7 = *((char *)*a2 + 23);
    if (v7 >= 0) {
      int v8 = (const wireless_diagnostics::google::protobuf::Descriptor *)*a2;
    }
    else {
      int v8 = **a2;
    }
    if (v7 >= 0) {
      std::string::size_type v9 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v9 = (std::string::size_type)(*a2)[1];
    }
    int v10 = std::string::append(&v40, (const std::string::value_type *)v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *((char *)*a2 + 23);
    if (v14 >= 0) {
      uint64_t v15 = (const wireless_diagnostics::google::protobuf::Descriptor *)*a2;
    }
    else {
      uint64_t v15 = **a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v16 = (std::string::size_type)(*a2)[1];
    }
    uint64_t v17 = std::string::append(&v34, (const std::string::value_type *)v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    uint64_t v19 = std::string::append(&v35, ".foo = value\".");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    std::string::size_type v38 = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    wireless_diagnostics::google::protobuf::DescriptorBuilder::AddError(*(void *)this, *((void *)this + 1) + 24, *((void *)this + 2), 8, (uint64_t)__p);
    if (SHIBYTE(v38) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  return v21;
}

void sub_2135E2CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a23);
  if (*(char *)(v39 - 73) < 0) {
    operator delete(*(void **)(v39 - 96));
  }
  wireless_diagnostics::google::protobuf::TextFormat::Parser::~Parser((wireless_diagnostics::google::protobuf::TextFormat::Parser *)&a9);
  wireless_diagnostics::google::protobuf::TextFormat::Finder::~Finder((wireless_diagnostics::google::protobuf::TextFormat::Finder *)&a33);
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
  }
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::anonymous namespace'::AggregateErrorCollector::~AggregateErrorCollector(void **this)
{
  *this = &unk_26C3F8CB8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)this);
}

{
  uint64_t vars8;

  *this = &unk_26C3F8CB8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  wireless_diagnostics::google::protobuf::io::ErrorCollector::~ErrorCollector((wireless_diagnostics::google::protobuf::io::ErrorCollector *)this);

  JUMPOUT(0x21668DB60);
}

uint64_t std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      int v3 = (void *)*v2;
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(int a1, void **__p)
{
  if (__p)
  {
    unint64_t v2 = __p;
    do
    {
      int v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
}

_DWORD *wireless_diagnostics::google::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(_DWORD *this, const wireless_diagnostics::google::protobuf::DescriptorPool::Tables *a2)
{
  uint64_t v2 = (*((void *)a2 + 17) - *((void *)a2 + 16)) >> 3;
  *this = (*((void *)a2 + 14) - *((void *)a2 + 13)) >> 3;
  this[1] = v2;
  uint64_t v3 = (*((void *)a2 + 23) - *((void *)a2 + 22)) >> 3;
  this[2] = (*((void *)a2 + 20) - *((void *)a2 + 19)) >> 3;
  this[3] = v3;
  uint64_t v4 = (*((void *)a2 + 45) - *((void *)a2 + 44)) >> 3;
  this[4] = (*((void *)a2 + 42) - *((void *)a2 + 41)) >> 3;
  this[5] = v4;
  this[6] = (*((void *)a2 + 48) - *((void *)a2 + 47)) >> 4;
  return this;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(void *a1, const char **a2)
{
  uint64_t v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    unint64_t v4 = 0;
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v10 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v4;
  }
  long long v11 = *(uint64_t ****)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = *v11; i; uint64_t i = (uint64_t **)*i)
  {
    unint64_t v13 = (unint64_t)i[1];
    if (v4 == v13)
    {
      if (!strcmp((const char *)i[2], v2)) {
        return i;
      }
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(void *)&v7) {
          v13 %= *(void *)&v7;
        }
      }
      else
      {
        v13 &= *(void *)&v7 - 1;
      }
      if (v13 != v10) {
        return 0;
      }
    }
  }
  return i;
}

{
  const char *v2;
  char v3;
  unint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t ***v11;
  uint64_t **i;
  unint64_t v13;

  uint64_t v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    unint64_t v4 = 0;
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v10 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v4;
  }
  long long v11 = *(uint64_t ****)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = *v11; i; uint64_t i = (uint64_t **)*i)
  {
    unint64_t v13 = (unint64_t)i[1];
    if (v13 == v4)
    {
      if (!strcmp((const char *)i[2], v2)) {
        return i;
      }
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(void *)&v7) {
          v13 %= *(void *)&v7;
        }
      }
      else
      {
        v13 &= *(void *)&v7 - 1;
      }
      if (v13 != v10) {
        return 0;
      }
    }
  }
  return i;
}

void wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(wireless_diagnostics::google::protobuf::internal::Mutex **this)
{
  uint64_t v1 = *this;
  if (v1) {
    wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v1);
  }
}

uint64_t wireless_diagnostics::google::protobuf::anonymous namespace'::DeleteGeneratedPool(wireless_diagnostics::google::protobuf::_anonymous_namespace_ *this)
{
  {
    uint64_t result = MEMORY[0x21668DB60]();
  }
  return result;
}

uint64_t *std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::find<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = (uint64_t *)(a1 + 8);
  char v3 = v4;
  if (!v4) {
    return v2;
  }
  unint64_t v5 = *a2;
  int v6 = *((_DWORD *)a2 + 2);
  int8x8_t v7 = v2;
  do
  {
    unint64_t v8 = v3[4];
    if (v8 >= v5)
    {
      if (v5 >= v8)
      {
        if (*((_DWORD *)v3 + 10) < v6) {
          ++v3;
        }
        else {
          int8x8_t v7 = v3;
        }
      }
      else
      {
        int8x8_t v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    char v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2) {
    return v2;
  }
  unint64_t v9 = v7[4];
  if (v5 < v9 || v9 >= v5 && v6 < *((_DWORD *)v7 + 10)) {
    return v2;
  }
  return v7;
}

uint64_t *wireless_diagnostics::google::protobuf::FindPtrOrNull<wireless_diagnostics::google::protobuf::hash_map<std::pair<void const*,char const*>,wireless_diagnostics::google::protobuf::FieldDescriptor const*,wireless_diagnostics::google::protobuf::anonymous namespace'::PointerStringPairHash,wireless_diagnostics::google::protobuf::anonymous namespace'::PointerStringPairEqual>>(void *a1, uint64_t *a2)
{
  uint64_t v2 = (const char *)a2[1];
  char v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      uint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v4 = 0;
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (v7)
  {
    unint64_t v8 = (uint64_t *)*a2;
    unint64_t v9 = v4 - *a2 + (*a2 << 16);
    uint8x8_t v10 = (uint8x8_t)vcnt_s8(v7);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v12 = v4 - *a2 + (*a2 << 16);
      if (v9 >= *(void *)&v7) {
        uint64_t v12 = v9 % *(void *)&v7;
      }
    }
    else
    {
      uint64_t v12 = (*(void *)&v7 - 1) & v9;
    }
    unint64_t v13 = *(uint64_t ****)(*a1 + 8 * v12);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = (uint64_t **)*i)
      {
        unint64_t v15 = (unint64_t)i[1];
        if (v9 == v15)
        {
          if (i[2] == v8 && !strcmp((const char *)i[3], v2)) {
            return i[4];
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v15 >= *(void *)&v7) {
              v15 %= *(void *)&v7;
            }
          }
          else
          {
            v15 &= *(void *)&v7 - 1;
          }
          if (v15 != v12) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::ServiceDescriptorProto>::New()
{
}

void sub_2135E3398(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::MethodDescriptorProto>::New()
{
}

void sub_2135E33FC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4093195C21);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::anonymous namespace'::RetrieveOptions(int a1, const wireless_diagnostics::google::protobuf::Message *a2, uint64_t a3)
{
  v54[2] = *MEMORY[0x263EF8340];
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)a3);
  uint64_t v6 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
  std::string::size_type v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v44 = v6;
  int8x8_t v7 = a2;
  (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, void **))(*(void *)v6 + 96))(v6, a2, &v49);
  unint64_t v8 = v50;
  if (v50 != v49)
  {
    unint64_t v9 = 0;
    int v46 = a1 + 1;
    std::string::size_type __n = 2 * a1;
    unint64_t v8 = v49;
    while (1)
    {
      int v10 = *(_DWORD *)(v8[v9] + 48);
      if (v10 != 3) {
        break;
      }
      int v11 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v44 + 48))(v44, v7);
      if (v11 >= 1) {
        goto LABEL_7;
      }
LABEL_66:
      ++v9;
      unint64_t v8 = v49;
      if (v9 >= v50 - v49) {
        goto LABEL_67;
      }
    }
    int v11 = 1;
LABEL_7:
    for (unsigned int i = 0; i != v11; ++i)
    {
      memset(&v48, 0, sizeof(v48));
      unint64_t v13 = (const wireless_diagnostics::google::protobuf::FieldDescriptor *)v49[v9];
      if ((*((_DWORD *)v13 + 11) & 0xFFFFFFFE) == 0xA)
      {
        memset(&__p, 0, 24);
        wireless_diagnostics::google::protobuf::TextFormat::Printer::Printer(&v47);
        LODWORD(v47.__r_.__value_.__l.__data_) = v46;
        if (v10 == 3) {
          uint64_t v14 = i;
        }
        else {
          uint64_t v14 = 0xFFFFFFFFLL;
        }
        wireless_diagnostics::google::protobuf::TextFormat::Printer::PrintFieldValueToString((int *)&v47, v7, (const wireless_diagnostics::google::protobuf::FieldDescriptor *)v49[v9], v14, (uint64_t)&__p);
        std::string::append(&v48, "{\n");
        if (SHIBYTE(__p.__end_) >= 0) {
          std::__split_buffer<std::string>::pointer p_p = (std::__split_buffer<std::string>::pointer)&__p;
        }
        else {
          std::__split_buffer<std::string>::pointer p_p = __p.__first_;
        }
        if (SHIBYTE(__p.__end_) >= 0) {
          std::string::size_type end_high = HIBYTE(__p.__end_);
        }
        else {
          std::string::size_type end_high = (std::string::size_type)__p.__begin_;
        }
        std::string::append(&v48, (const std::string::value_type *)p_p, end_high);
        std::string::append(&v48, __n, 32);
        std::string::append(&v48, "}");
        wireless_diagnostics::google::protobuf::TextFormat::Printer::~Printer((wireless_diagnostics::google::protobuf::TextFormat::Printer *)&v47);
        if (SHIBYTE(__p.__end_) < 0) {
          operator delete(__p.__first_);
        }
      }
      else
      {
        if (v10 == 3) {
          uint64_t v17 = i;
        }
        else {
          uint64_t v17 = 0xFFFFFFFFLL;
        }
        wireless_diagnostics::google::protobuf::TextFormat::PrintFieldValueToString(v7, v13, v17, (uint64_t)&v48);
      }
      memset(&v47, 0, sizeof(v47));
      uint64_t v18 = v49[v9];
      if (*(unsigned char *)(v18 + 52))
      {
        std::operator+<char>();
        uint64_t v19 = std::string::append((std::string *)&__p, ")");
        std::string::size_type v20 = v19->__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = v19->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v19->__r_.__value_.__r.__words[1] + 7);
        char v21 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v47.__r_.__value_.__l.__data_);
        }
        v47.__r_.__value_.__r.__words[0] = v20;
        v47.__r_.__value_.__l.__size_ = v53.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v47.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7);
        *((unsigned char *)&v47.__r_.__value_.__s + 23) = v21;
        if (SHIBYTE(__p.__end_) < 0) {
          operator delete(__p.__first_);
        }
      }
      else
      {
        std::string::operator=(&v47, *(const std::string **)v18);
      }
      if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        size_t size = HIBYTE(v47.__r_.__value_.__r.__words[2]);
      }
      else {
        size_t size = v47.__r_.__value_.__l.__size_;
      }
      std::string::basic_string[abi:ne180100]((uint64_t)&v53, size + 3);
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v23 = &v53;
      }
      else {
        unint64_t v23 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      if (size)
      {
        if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          double v24 = &v47;
        }
        else {
          double v24 = (std::string *)v47.__r_.__value_.__r.__words[0];
        }
        memmove(v23, v24, size);
      }
      *(_DWORD *)((char *)&v23->__r_.__value_.__l.__data_ + size) = 2112800;
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v25 = &v48;
      }
      else {
        std::string::size_type v25 = (std::string *)v48.__r_.__value_.__r.__words[0];
      }
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v26 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v26 = v48.__r_.__value_.__l.__size_;
      }
      int v27 = std::string::append(&v53, (const std::string::value_type *)v25, v26);
      std::string::size_type v28 = v27->__r_.__value_.__r.__words[0];
      v54[0] = v27->__r_.__value_.__l.__size_;
      *(void *)((char *)v54 + 7) = *(std::string::size_type *)((char *)&v27->__r_.__value_.__r.__words[1] + 7);
      char v29 = HIBYTE(v27->__r_.__value_.__r.__words[2]);
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      unint64_t v30 = *(void *)(a3 + 8);
      unint64_t v31 = *(void *)(a3 + 16);
      if (v30 >= v31)
      {
        unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *(void *)a3) >> 3);
        unint64_t v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(void *)a3) >> 3);
        if (2 * v36 > v35) {
          unint64_t v35 = 2 * v36;
        }
        if (v36 >= 0x555555555555555) {
          unint64_t v37 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v37 = v35;
        }
        __p.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v37) {
          uint64_t v38 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3 + 16, v37);
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = v38 + v34;
        __p.__first_ = v38;
        __p.__begin_ = v39;
        __p.__end_cap_.__value_ = &v38[v37];
        std::string::size_type v40 = v54[0];
        v39->__r_.__value_.__r.__words[0] = v28;
        v39->__r_.__value_.__l.__size_ = v40;
        *(std::string::size_type *)((char *)&v39->__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v54 + 7);
        *((unsigned char *)&v39->__r_.__value_.__s + 23) = v29;
        __p.__end_ = v39 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__p);
        unint64_t v33 = *(void *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&__p);
      }
      else
      {
        uint64_t v32 = v54[0];
        *(void *)unint64_t v30 = v28;
        *(void *)(v30 + 8) = v32;
        *(void *)(v30 + 15) = *(void *)((char *)v54 + 7);
        *(unsigned char *)(v30 + 23) = v29;
        unint64_t v33 = v30 + 24;
        *(void *)(a3 + 8) = v30 + 24;
      }
      *(void *)(a3 + 8) = v33;
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v47.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v48.__r_.__value_.__l.__data_);
      }
    }
    goto LABEL_66;
  }
LABEL_67:
  uint64_t v42 = *(void *)a3;
  uint64_t v41 = *(void *)(a3 + 8);
  if (v8)
  {
    uint64_t v50 = v8;
    operator delete(v8);
  }
  return v42 != v41;
}

void sub_2135E3914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,uint64_t a28,std::__split_buffer<std::string> *a29)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      unint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        unint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, std::string *a2)
{
  unint64_t SymbolNotEnforcingDepsHelper = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper((wireless_diagnostics::google::protobuf::internal::Mutex ***)a1, *(wireless_diagnostics::google::protobuf::internal::Mutex ***)a1, (uint64_t)a2);
  unint64_t v6 = SymbolNotEnforcingDepsHelper;
  if (SymbolNotEnforcingDepsHelper && *(unsigned char *)(*(void *)a1 + 40))
  {
    uint64_t v7 = v5;
    switch((int)SymbolNotEnforcingDepsHelper)
    {
      case 1:
      case 3:
      case 5:
        unint64_t v8 = v5 + 2;
        goto LABEL_10;
      case 2:
        unint64_t v8 = v5 + 4;
        goto LABEL_10;
      case 4:
        uint64_t v9 = v5[3];
        goto LABEL_9;
      case 6:
        uint64_t v9 = v5[2];
LABEL_9:
        unint64_t v8 = (void *)(v9 + 16);
LABEL_10:
        uint64_t v7 = (void *)*v8;
        break;
      case 7:
        break;
      default:
        uint64_t v7 = 0;
        break;
    }
    uint64_t v10 = *(void *)(a1 + 80);
    if (v7 != (void *)v10)
    {
      uint64_t v12 = (void *)(a1 + 104);
      for (unsigned int i = *(void **)(a1 + 104); i; unsigned int i = (void *)*i)
      {
        unint64_t v13 = i[4];
        if ((unint64_t)v7 >= v13)
        {
          if (v13 >= (unint64_t)v7) {
            return v6;
          }
          ++i;
        }
      }
      if (SymbolNotEnforcingDepsHelper != 7) {
        goto LABEL_28;
      }
      BOOL v14 = wireless_diagnostics::google::protobuf::DescriptorBuilder::IsInPackage(SymbolNotEnforcingDepsHelper, v10, (const void **)&a2->__r_.__value_.__l.__data_);
      if (v14) {
        return v6;
      }
      long long v15 = *(void **)(a1 + 96);
      if (v15 == v12)
      {
LABEL_28:
        *(void *)(a1 + 120) = v7;
        std::string::operator=((std::string *)(a1 + 128), a2);
      }
      while (1)
      {
        uint64_t v16 = v15[4];
        if (v16)
        {
          LOBYTE(v14) = wireless_diagnostics::google::protobuf::DescriptorBuilder::IsInPackage(v14, v16, (const void **)&a2->__r_.__value_.__l.__data_);
          if (v14) {
            break;
          }
        }
        uint64_t v17 = (void *)v15[1];
        if (v17)
        {
          do
          {
            uint64_t v18 = v17;
            uint64_t v17 = (void *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            uint64_t v18 = (void *)v15[2];
            BOOL v19 = *v18 == (void)v15;
            long long v15 = v18;
          }
          while (!v19);
        }
        long long v15 = v18;
        if (v18 == v12) {
          goto LABEL_28;
        }
      }
    }
  }
  return v6;
}

unint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(wireless_diagnostics::google::protobuf::internal::Mutex ***a1, wireless_diagnostics::google::protobuf::internal::Mutex **a2, uint64_t a3)
{
  if (*a1 == a2)
  {
    unint64_t v37 = 0;
  }
  else
  {
    unint64_t v6 = *a2;
    unint64_t v37 = v6;
    if (v6) {
      wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v6);
    }
  }
  uint64_t v7 = (int8x8_t *)a2[4];
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v8 = (const char *)a3;
  }
  else {
    unint64_t v8 = *(const char **)a3;
  }
  char v9 = *v8;
  if (*v8)
  {
    unint64_t v10 = 0;
    int v11 = (unsigned __int8 *)(v8 + 1);
    do
    {
      unint64_t v10 = 5 * v10 + v9;
      int v12 = *v11++;
      char v9 = v12;
    }
    while (v12);
  }
  else
  {
    unint64_t v10 = 0;
  }
  int8x8_t v13 = v7[26];
  if (!*(void *)&v13)
  {
LABEL_29:
    uint64_t v17 = 0;
    goto LABEL_30;
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8(v13);
  v14.i16[0] = vaddlv_u8(v14);
  unint64_t v15 = v14.u32[0];
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v16 = v10;
    if (v10 >= *(void *)&v13) {
      unint64_t v16 = v10 % *(void *)&v13;
    }
  }
  else
  {
    unint64_t v16 = (*(void *)&v13 - 1) & v10;
  }
  uint64_t v17 = *(uint64_t **)(*(void *)&v7[25] + 8 * v16);
  if (v17)
  {
    uint64_t v18 = *v17;
    if (*v17)
    {
      while (1)
      {
        unint64_t v19 = *(void *)(v18 + 8);
        if (v10 == v19)
        {
          if (!strcmp(*(const char **)(v18 + 16), v8))
          {
            uint64_t v17 = (uint64_t *)(v18 + 24);
            goto LABEL_30;
          }
        }
        else
        {
          if (v15 > 1)
          {
            if (v19 >= *(void *)&v13) {
              v19 %= *(void *)&v13;
            }
          }
          else
          {
            v19 &= *(void *)&v13 - 1;
          }
          if (v19 != v16) {
            goto LABEL_29;
          }
        }
        uint64_t v18 = *(void *)v18;
        if (!v18) {
          goto LABEL_29;
        }
      }
    }
    goto LABEL_29;
  }
LABEL_30:
  if (!v17) {
  uint64_t v20 = *v17;
  }
  unint64_t v21 = HIDWORD(*v17);
  if (!*v17)
  {
    unint64_t v23 = a2[3];
    if (!v23
      || (SymbolNotEnforcingDepsHelper = wireless_diagnostics::google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v23, a3), LODWORD(v20) = SymbolNotEnforcingDepsHelper, unint64_t v21 = HIDWORD(SymbolNotEnforcingDepsHelper), !SymbolNotEnforcingDepsHelper))
    {
      if (!wireless_diagnostics::google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((wireless_diagnostics::google::protobuf::DescriptorPool *)a2, a3))
      {
        LODWORD(v20) = 0;
        goto LABEL_33;
      }
      std::string::size_type v25 = (int8x8_t *)a2[4];
      if (*(char *)(a3 + 23) < 0) {
        a3 = *(void *)a3;
      }
      char v26 = *(unsigned char *)a3;
      if (*(unsigned char *)a3)
      {
        unint64_t v27 = 0;
        std::string::size_type v28 = (unsigned __int8 *)(a3 + 1);
        do
        {
          unint64_t v27 = 5 * v27 + v26;
          int v29 = *v28++;
          char v26 = v29;
        }
        while (v29);
      }
      else
      {
        unint64_t v27 = 0;
      }
      int8x8_t v30 = v25[26];
      if (v30)
      {
        uint8x8_t v31 = (uint8x8_t)vcnt_s8(v30);
        v31.i16[0] = vaddlv_u8(v31);
        unint64_t v32 = v31.u32[0];
        if (v31.u32[0] > 1uLL)
        {
          unint64_t v33 = v27;
          if (v27 >= *(void *)&v30) {
            unint64_t v33 = v27 % *(void *)&v30;
          }
        }
        else
        {
          unint64_t v33 = (*(void *)&v30 - 1) & v27;
        }
        unint64_t v34 = *(uint64_t **)(*(void *)&v25[25] + 8 * v33);
        if (!v34) {
          goto LABEL_62;
        }
        for (uint64_t i = *v34; i; uint64_t i = *(void *)i)
        {
          unint64_t v36 = *(void *)(i + 8);
          if (v27 == v36)
          {
            if (!strcmp(*(const char **)(i + 16), (const char *)a3))
            {
              unint64_t v34 = (uint64_t *)(i + 24);
              goto LABEL_62;
            }
          }
          else
          {
            if (v32 > 1)
            {
              if (v36 >= *(void *)&v30) {
                v36 %= *(void *)&v30;
              }
            }
            else
            {
              v36 &= *(void *)&v30 - 1;
            }
            if (v36 != v33) {
              break;
            }
          }
        }
      }
      unint64_t v34 = 0;
LABEL_62:
      if (!v34) {
      uint64_t v20 = *v34;
      }
      unint64_t v21 = HIDWORD(*v34);
    }
  }
LABEL_33:
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe(&v37);
  return v20 | ((unint64_t)v21 << 32);
}

void sub_2135E40C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::MutexLockMaybe::~MutexLockMaybe((wireless_diagnostics::google::protobuf::internal::Mutex **)va);
  _Unwind_Resume(a1);
}

std::string *wireless_diagnostics::google::protobuf::anonymous namespace'::AggregateErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16)) {
LABEL_3:
  }
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  int v6 = *(char *)(a4 + 23);
  if (v6 >= 0) {
    uint64_t v7 = (const std::string::value_type *)a4;
  }
  else {
    uint64_t v7 = *(const std::string::value_type **)a4;
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v8 = *(void *)(a4 + 8);
  }

  return std::string::append(v5, v7, v8);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  wireless_diagnostics::google::protobuf::TextFormat::Finder::~Finder(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  int v6 = ***(wireless_diagnostics::google::protobuf::internal::Mutex ****)(a1 + 8);
  if (v6) {
    wireless_diagnostics::google::protobuf::internal::Mutex::AssertHeld(v6);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 152))(a2);
  int v8 = wireless_diagnostics::google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(void *)(a1 + 8), a3, *(void *)(v7 + 8), 0);
  if (v8 == 1)
  {
    if (!*(unsigned char *)(*(void *)(v7 + 32) + 64)) {
      return 0;
    }
    uint64_t v11 = *(unsigned int *)(v9 + 104);
    if ((int)v11 < 1) {
      return 0;
    }
    for (uint64_t result = *(void *)(v9 + 112);
          *(void *)(result + 56) != v7
       || *(_DWORD *)(result + 44) != 11
       || *(_DWORD *)(result + 48) != 1
       || *(void *)(result + 72) != v9;
          result += 120)
    {
      if (!--v11) {
        return 0;
      }
    }
  }
  else
  {
    if (v8 != 2) {
      return 0;
    }
    uint64_t result = v9;
    if (!*(unsigned char *)(v9 + 52)) {
      return 0;
    }
  }
  return result;
}

void std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::DescriptorPool::Tables::CheckPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x924924924924925) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(28 * a2);
}

uint64_t *std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__erase_unique<char const*>(void *a1, const char **a2)
{
  uint64_t result = (uint64_t *)std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::remove(a1, a2, (uint64_t)&__p);
  char v3 = __p;
  std::__split_buffer<std::string> __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  int v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    int v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *uint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>(uint64_t **a1, unint64_t *a2)
{
  int8x8_t v3 = std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::find<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t *std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      int8x8_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    unint64_t v4 = a2;
    do
    {
      int8x8_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      unint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  int v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int8x8_t v3 = a2;
  if (*a2)
  {
    unint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      int8x8_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      int8x8_t v3 = v4;
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  int v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    *int v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    void v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *int8x8_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      int8x8_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *int8x8_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        uint64_t result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    unint64_t v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      unint64_t v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        *uint64_t v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        void v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        std::string v7[2] = (uint64_t)v15;
        unint64_t v16 = v7;
      }
      else
      {
        unint64_t v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      double v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      *double v24 = v23;
      goto LABEL_72;
    }
    unint64_t v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      uint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    std::string v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      uint64_t result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  unint64_t v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    *uint64_t v20 = (uint64_t)v7;
    std::string v7[2] = (uint64_t)v20;
    unint64_t v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  double v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void std::vector<char const*>::__append(void **a1, unint64_t a2)
{
  int v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      int8x8_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>(v4, v12);
    }
    else {
      int8x8_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    unint64_t v16 = &v14[8 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void std::vector<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>::__append(void **a1, unint64_t a2)
{
  int v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  uint64_t v7 = *(_DWORD **)(v4 - 8);
  if (a2 <= (v6 - (unsigned char *)v7) >> 4)
  {
    if (a2)
    {
      uint64_t v14 = &v7[4 * a2];
      do
      {
        *(void *)uint64_t v7 = 0;
        std::string v7[2] = 0;
        v7 += 4;
      }
      while (v7 != v14);
      uint64_t v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = (char *)v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      int8x8_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>(v4, v12);
    }
    else {
      int8x8_t v13 = 0;
    }
    unint64_t v15 = &v13[16 * v10];
    unint64_t v16 = &v15[16 * a2];
    uint64_t v17 = v15;
    do
    {
      *(void *)uint64_t v17 = 0;
      *((_DWORD *)v17 + 2) = 0;
      v17 += 16;
    }
    while (v17 != v16);
    uint64_t v18 = &v13[16 * v12];
    uint64_t v20 = (char *)*a1;
    uint64_t v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v19 - 1);
        v15 -= 16;
        v19 -= 16;
      }
      while (v19 != v20);
      uint64_t v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v18;
    if (v19)
    {
      operator delete(v19);
    }
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

_OWORD *std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::pair<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int> const,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  int v5 = std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>((uint64_t)a1, &v9, a2);
  int v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    int v6 = operator new(0x38uLL);
    v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>(uint64_t a1, void *a2, unint64_t *a3)
{
  int v5 = *(uint64_t **)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    int v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        uint64_t v8 = v4;
        unint64_t v9 = v4[4];
        if (v6 >= v9) {
          break;
        }
LABEL_4:
        uint64_t v4 = (uint64_t *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_12;
        }
      }
      if (v9 >= v6)
      {
        int v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10) {
          goto LABEL_4;
        }
        if (v10 >= v7) {
          goto LABEL_12;
        }
      }
      uint64_t result = v8 + 1;
      uint64_t v4 = (uint64_t *)v8[1];
      if (!v4) {
        goto LABEL_12;
      }
    }
  }
  uint64_t v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

wireless_diagnostics::google::protobuf::DescriptorPool::Tables **wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DescriptorPool::Tables>::~scoped_ptr(wireless_diagnostics::google::protobuf::DescriptorPool::Tables **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    wireless_diagnostics::google::protobuf::DescriptorPool::Tables::~Tables(v2);
    MEMORY[0x21668DB60]();
  }
  return a1;
}

void *std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::find<wireless_diagnostics::google::protobuf::Descriptor const*>(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL) {
    uint64_t v5 = *(void *)&v2 <= v3 ? v3 % *(void *)&v2 : *a2;
  }
  else {
    uint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  unint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const* const&>(uint64_t a1, unint64_t *a2, void *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    unint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x18uLL);
  *uint64_t i = 0;
  i[1] = v6;
  i[2] = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t i = *v19;
LABEL_38:
    *uint64_t v19 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_2135E5134(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(void *a1, unsigned char *a2)
{
  unint64_t v3 = *(unsigned char **)a2;
  if ((char)a2[23] >= 0) {
    unint64_t v3 = a2;
  }
  char v4 = *v3;
  if (*v3)
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 + 1;
    do
    {
      unint64_t v5 = 5 * v5 + v4;
      int v7 = *v6++;
      char v4 = v7;
    }
    while (v7);
  }
  else
  {
    unint64_t v5 = 0;
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  unint64_t v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v11 = v5;
    if (v5 >= *(void *)&v8) {
      unint64_t v11 = v5 % *(void *)&v8;
    }
  }
  else
  {
    unint64_t v11 = (*(void *)&v8 - 1) & v5;
  }
  float v12 = *(unsigned __int8 ***)(*a1 + 8 * v11);
  if (!v12) {
    return 0;
  }
  float v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v15 = *((void *)v13 + 1);
      if (v5 == v15)
      {
        if (std::equal_to<std::string>::operator()[abi:ne180100](v14, v13 + 16, a2)) {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(void *)&v8) {
            v15 %= *(void *)&v8;
          }
        }
        else
        {
          v15 &= *(void *)&v8 - 1;
        }
        if (v15 != v11) {
          return 0;
        }
      }
      float v13 = *(unsigned __int8 **)v13;
    }
    while (v13);
  }
  return v13;
}

uint64_t std::equal_to<std::string>::operator()[abi:ne180100](uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    unint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

unsigned __int8 *std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  int v7 = *(unsigned char **)a2;
  if ((char)a2[23] >= 0) {
    int v7 = a2;
  }
  char v8 = *v7;
  if (*v7)
  {
    unint64_t v9 = 0;
    int v10 = v7 + 1;
    do
    {
      unint64_t v9 = 5 * v9 + v8;
      int v11 = *v10++;
      char v8 = v11;
    }
    while (v11);
  }
  else
  {
    unint64_t v9 = 0;
  }
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v12) {
        unint64_t v3 = v9 % v12;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v9;
    }
    unint64_t v15 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      for (uint64_t i = *v15; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v17 = *((void *)i + 1);
        if (v17 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12) {
              v17 %= v12;
            }
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v3) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(a1, v9, a3, (uint64_t)v27);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(a1, v23);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v9 >= v12) {
        unint64_t v3 = v9 % v12;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v9;
    }
  }
  double v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    *double v24 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12) {
          v25 %= v12;
        }
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v27[0];
  ++*(void *)(a1 + 24);
  return i;
}

void sub_2135E5598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100]((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::string,wireless_diagnostics::google::protobuf::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__construct_node_hash<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  char v8 = operator new(0x28uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *char v8 = 0;
  v8[1] = a2;
  unint64_t v9 = (std::string *)(v8 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v9->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_2135E5644(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *std::string::basic_string[abi:ne180100](void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    void *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

uint64_t *std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = std::__tree<int>::__find_equal<int>(a1, a2, &v11, &v10, a3);
  size_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    size_t v8 = (uint64_t **)v6;
    size_t v7 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v7 + 7) = *a4;
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *std::__tree<int>::__find_equal<int>(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    size_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      unint64_t v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        unint64_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      uint8x8_t v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        uint8x8_t v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unint64_t v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 28);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      unint64_t v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    unint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      unint64_t v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    float v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      float v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 7))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unint64_t v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 28);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      unint64_t v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t *std::__tree<wireless_diagnostics::google::protobuf::Descriptor const*>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Descriptor const*>(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  int v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        size_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        int v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        int v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    size_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a2);
}

void std::allocator_traits<std::allocator<wireless_diagnostics::google::protobuf::anonymous namespace'::OptionsToInterpret>>::destroy[abi:ne180100]<wireless_diagnostics::google::protobuf::anonymous namespace'::OptionsToInterpret,void>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    int8x8_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void wireless_diagnostics::google::protobuf::anonymous namespace'::OptionsToInterpret::~OptionsToInterpret(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::FileOptions>()
{
}

void sub_2135E5C2C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

void std::vector<wireless_diagnostics::google::protobuf::anonymous namespace'::OptionsToInterpret>::push_back[abi:ne180100](void **a1, long long *a2)
{
  uint64_t v4 = (char *)a1[1];
  uint64_t v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    uint64_t v9 = (v4 - (unsigned char *)*a1) >> 6;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 58) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 5 > v10) {
      unint64_t v10 = v11 >> 5;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 58) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint8x8_t v13 = (char *)operator new(v12 << 6);
    }
    else
    {
      uint8x8_t v13 = 0;
    }
    BOOL v14 = &v13[64 * v9];
    *(_OWORD *)BOOL v14 = *a2;
    *((void *)v14 + 2) = *((void *)a2 + 2);
    long long v15 = *(long long *)((char *)a2 + 24);
    *((void *)a2 + 2) = 0;
    *((void *)a2 + 3) = 0;
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    *(_OWORD *)(v14 + 24) = v15;
    *((void *)v14 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    uint64_t v16 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 == *a1)
    {
      size_t v8 = v14 + 64;
      *a1 = v14;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
    }
    else
    {
      int v18 = &v13[64 * v9];
      do
      {
        long long v19 = *((_OWORD *)v17 - 4);
        *((void *)v18 - 6) = *((void *)v17 - 6);
        *((_OWORD *)v18 - 4) = v19;
        *((void *)v17 - 7) = 0;
        *((void *)v17 - 6) = 0;
        *((void *)v17 - 8) = 0;
        long long v20 = *(_OWORD *)(v17 - 40);
        *((void *)v18 - 3) = *((void *)v17 - 3);
        *(_OWORD *)(v18 - 40) = v20;
        *((void *)v17 - 4) = 0;
        *((void *)v17 - 3) = 0;
        *((void *)v17 - 5) = 0;
        *((_OWORD *)v18 - 1) = *((_OWORD *)v17 - 1);
        v18 -= 64;
        v17 -= 64;
      }
      while (v17 != v16);
      unint64_t v17 = (char *)*a1;
      uint64_t v21 = (uint64_t)a1[1];
      size_t v8 = v14 + 64;
      *a1 = v18;
      a1[1] = v14 + 64;
      a1[2] = &v13[64 * v12];
      while ((char *)v21 != v17)
      {
        v21 -= 64;
      }
    }
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    long long v6 = *a2;
    *((void *)v4 + 2) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v6;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v4 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    size_t v8 = v4 + 64;
  }
  a1[1] = v8;
}

std::string *wireless_diagnostics::google::protobuf::anonymous namespace'::OptionsToInterpret::OptionsToInterpret(std::string *this, long long *a2, long long *a3, std::string::size_type a4, std::string::size_type a5)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v9;
  }
  unint64_t v10 = this + 1;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v10, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v11 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&v10->__r_.__value_.__l.__data_ = v11;
  }
  this[2].__r_.__value_.__r.__words[0] = a4;
  this[2].__r_.__value_.__l.__size_ = a5;
  return this;
}

void sub_2135E5E9C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_2135E5F10(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::string>::__push_back_slow_path<std::string const&>(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
  if (v9) {
    unint64_t v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  std::__split_buffer<std::string>::pointer end = v10 + v4;
  __v.__first_ = v10;
  __v.__begin_ = end;
  __v.__end_ = end;
  __v.__end_cap_.__value_ = &v10[v9];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    std::__split_buffer<std::string>::pointer end = __v.__end_;
  }
  else
  {
    long long v12 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v12;
  }
  __v.__end_ = end + 1;
  std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a1, &__v);
  uint64_t v13 = a1[1];
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v13;
}

void sub_2135E6028(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void std::__tree<std::string>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::string>::destroy(a1, *(void *)a2);
    std::__tree<std::string>::destroy(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  unint64_t v5 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_2135E61A4(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::Descriptor>()
{
}

void sub_2135E62F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::MessageOptions>()
{
}

void sub_2135E6424(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::FieldDescriptor>()
{
}

void sub_2135E6520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::FieldOptions>()
{
}

void sub_2135E664C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::EnumDescriptor>()
{
}

void sub_2135E6748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::EnumOptions>()
{
}

void sub_2135E6874(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::EnumValueDescriptor>()
{
}

void sub_2135E6970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::EnumValueOptions>()
{
}

void sub_2135E6A9C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::ServiceDescriptor>()
{
}

void sub_2135E6B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::ServiceOptions>()
{
}

void sub_2135E6CC4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DescriptorBuilder::AllocateOptionsImpl<wireless_diagnostics::google::protobuf::MethodDescriptor>()
{
}

void sub_2135E6DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void wireless_diagnostics::google::protobuf::DescriptorPool::Tables::AllocateMessage<wireless_diagnostics::google::protobuf::MethodOptions>()
{
}

void sub_2135E6EEC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *(void *)a2);
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }
}

uint64_t **std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  long long v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        long long v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      long long v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v9 = a1 + 1;
LABEL_10:
    long long v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 5) = 0;
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet **wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::UnknownFieldSet>::~scoped_ptr(wireless_diagnostics::google::protobuf::UnknownFieldSet **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
    MEMORY[0x21668DB60]();
  }
  return a1;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = *(uint64_t **)this;
  uint64_t v2 = *(void *)(*(void *)this + 8);
  if (v2 != **(void **)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v2 = **(void **)this;
    do
    {
      this = wireless_diagnostics::google::protobuf::UnknownField::Delete((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v2 + v4));
      ++v5;
      uint64_t v1 = *(uint64_t **)v3;
      uint64_t v2 = **(void **)v3;
      v4 += 16;
    }
    while (v5 < (*(void *)(*(void *)v3 + 8) - v2) >> 4);
  }
  v1[1] = v2;
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UnknownField::Delete(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  int v1 = *(_DWORD *)this >> 29;
  if (v1 == 4)
  {
    this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 1);
    if (this)
    {
      wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(this);
      goto LABEL_9;
    }
  }
  else if (v1 == 3)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
LABEL_9:
      JUMPOUT(0x21668DB60);
    }
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearAndFreeMemory(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  if (*(void *)this)
  {
    int v1 = this;
    this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
    uint64_t v2 = *(void *)v1;
    if (*(void *)v1)
    {
      uint64_t v3 = *(void **)v2;
      if (*(void *)v2)
      {
        *(void *)(v2 + 8) = v3;
        operator delete(v3);
      }
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)MEMORY[0x21668DB60](v2, 0x20C40960023A9);
    }
    *(void *)int v1 = 0;
  }
  return this;
}

_DWORD *wireless_diagnostics::google::protobuf::UnknownFieldSet::AddField(void ***this, const wireless_diagnostics::google::protobuf::UnknownField *a2)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  unint64_t v5 = (unint64_t)v4[2];
  long long v6 = v4[1];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v8 = ((char *)v6 - (unsigned char *)*v4) >> 4;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - (void)*v4;
    if (v10 >> 3 > v9) {
      unint64_t v9 = v10 >> 3;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      long long v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>((uint64_t)(v4 + 2), v11);
    }
    else {
      long long v12 = 0;
    }
    uint64_t v13 = &v12[16 * v8];
    BOOL v14 = &v12[16 * v11];
    *(_OWORD *)uint64_t v13 = *(_OWORD *)a2;
    uint64_t v7 = v13 + 16;
    uint64_t v16 = (char *)*v4;
    long long v15 = (char *)v4[1];
    if (v15 != *v4)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      long long v15 = (char *)*v4;
    }
    *uint64_t v4 = v13;
    v4[1] = v7;
    v4[2] = v14;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *long long v6 = *(_OWORD *)a2;
    uint64_t v7 = v6 + 1;
  }
  v4[1] = v7;
  unint64_t v17 = (char *)(*this)[1] - 16;

  return wireless_diagnostics::google::protobuf::UnknownField::DeepCopy(v17);
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(uint64_t **this)
{
  if (!*this) {
    return 0;
  }
  uint64_t v1 = **this;
  uint64_t v2 = (*this)[1];
  uint64_t v3 = ((v2 - v1) & 0xFFFFFFF0) + 24;
  if (v2 != v1)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(v1 + v5) >> 29;
      if (v7 == 4)
      {
        uint64_t v3 = v3
           + wireless_diagnostics::google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(*(wireless_diagnostics::google::protobuf::UnknownFieldSet **)(v1 + v5 + 8))
           + 8;
      }
      else if (v7 == 3)
      {
        uint64_t v3 = v3
           + wireless_diagnostics::google::protobuf::internal::StringSpaceUsedExcludingSelf(*(void *)(v1 + v5 + 8))
           + 24;
      }
      ++v6;
      uint64_t v1 = **this;
      v5 += 16;
    }
    while (v6 < ((*this)[1] - v1) >> 4);
  }
  return v3;
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::SpaceUsed(uint64_t **this)
{
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelf(this) + 8;
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(void ***this, int a2, uint64_t a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF;
  unint64_t v6 = (char *)v4[2];
  int v7 = (char *)v4[1];
  if (v7 >= v6)
  {
    uint64_t v9 = (v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (unsigned char *)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[16 * v9];
    long long v15 = &v13[16 * v12];
    *(_DWORD *)BOOL v14 = v5;
    *((void *)v14 + 1) = a3;
    uint64_t v8 = v14 + 16;
    unint64_t v17 = (char *)*v4;
    uint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      uint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *(_DWORD *)int v7 = v5;
    *((void *)v7 + 1) = a3;
    uint64_t v8 = v7 + 16;
  }
  v4[1] = v8;
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed32(void ***this, int a2, int a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF | 0x20000000;
  unint64_t v6 = (unint64_t)v4[2];
  int v7 = (int *)v4[1];
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = ((char *)v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (void)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint64_t v13 = 0;
    }
    BOOL v14 = (int *)&v13[16 * v9];
    long long v15 = &v13[16 * v12];
    *BOOL v14 = v5;
    void v14[2] = a3;
    uint64_t v8 = v14 + 4;
    unint64_t v17 = (char *)*v4;
    uint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 4;
        v16 -= 16;
      }
      while (v16 != v17);
      uint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *int v7 = v5;
    std::string v7[2] = a3;
    uint64_t v8 = v7 + 4;
  }
  v4[1] = v8;
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed64(void ***this, int a2, uint64_t a3)
{
  uint64_t v4 = *this;
  if (!*this) {
    operator new();
  }
  int v5 = a2 & 0x1FFFFFFF | 0x40000000;
  unint64_t v6 = (char *)v4[2];
  int v7 = (char *)v4[1];
  if (v7 >= v6)
  {
    uint64_t v9 = (v7 - (unsigned char *)*v4) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v6 - (unsigned char *)*v4;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>((uint64_t)(v4 + 2), v12);
    }
    else {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[16 * v9];
    long long v15 = &v13[16 * v12];
    *(_DWORD *)BOOL v14 = v5;
    *((void *)v14 + 1) = a3;
    uint64_t v8 = v14 + 16;
    unint64_t v17 = (char *)*v4;
    uint64_t v16 = (char *)v4[1];
    if (v16 != *v4)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      uint64_t v16 = (char *)*v4;
    }
    *uint64_t v4 = v14;
    v4[1] = v8;
    v4[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *(_DWORD *)int v7 = v5;
    *((void *)v7 + 1) = a3;
    uint64_t v8 = v7 + 16;
  }
  v4[1] = v8;
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::AddLengthDelimited(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  if (!*(void *)this) {
    operator new();
  }
  operator new();
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::AddGroup(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  if (!*(void *)this) {
    operator new();
  }
  operator new();
}

_DWORD *wireless_diagnostics::google::protobuf::UnknownField::DeepCopy(_DWORD *this)
{
  int v1 = *this >> 29;
  if (v1 == 4) {
    operator new();
  }
  if (v1 == 3) {
    operator new();
  }
  return this;
}

void sub_2135E7AE8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UnknownFieldSet::DeleteSubrange(wireless_diagnostics::google::protobuf::UnknownFieldSet *this, int a2, int a3)
{
  int v5 = this;
  if (a3 >= 1)
  {
    uint64_t v6 = 16 * a2;
    uint64_t v7 = a3;
    do
    {
      this = wireless_diagnostics::google::protobuf::UnknownField::Delete((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(**(void **)v5 + v6));
      v6 += 16;
      --v7;
    }
    while (v7);
  }
  unint64_t v8 = a3 + a2;
  uint64_t v9 = *(uint64_t **)v5;
  uint64_t v11 = **(void **)v5;
  uint64_t v10 = *(void *)(*(void *)v5 + 8);
  if (v8 < (v10 - v11) >> 4)
  {
    uint64_t v12 = 16 * v8;
    do
    {
      *(_OWORD *)(v11 + v12 - 16 * a3) = *(_OWORD *)(v11 + v12);
      ++v8;
      uint64_t v9 = *(uint64_t **)v5;
      uint64_t v11 = **(void **)v5;
      uint64_t v10 = *(void *)(*(void *)v5 + 8);
      v12 += 16;
    }
    while (v8 < (v10 - v11) >> 4);
  }
  if (a3 >= 1) {
    v9[1] = v10 - 16 * (a3 - 1) - 16;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::UnknownFieldSet::DeleteByNumber(uint64_t **this, int a2)
{
  uint64_t v3 = *this;
  if (v3)
  {
    uint64_t v4 = *v3;
    if (v3[1] == *v3)
    {
      int v8 = 0;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      int v8 = 0;
      do
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v4 + v6);
        if ((*(_DWORD *)(v4 + v6) & 0x1FFFFFFF) == a2)
        {
          wireless_diagnostics::google::protobuf::UnknownField::Delete(v9);
        }
        else
        {
          if (v7 != v8) {
            *(_OWORD *)(v4 + 16 * v8) = *(_OWORD *)v9;
          }
          ++v8;
        }
        ++v7;
        uint64_t v3 = *this;
        uint64_t v4 = **this;
        v6 += 16;
      }
      while (v7 < ((*this)[1] - v4) >> 4);
    }
    std::vector<wireless_diagnostics::google::protobuf::UnknownField>::resize((uint64_t)v3, v8);
  }
}

void std::vector<wireless_diagnostics::google::protobuf::UnknownField>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    std::vector<wireless_diagnostics::google::protobuf::UnknownField>::__append((void **)a1, a2 - v2);
  }
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFromCodedStream(void ***this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::UnknownFieldSet *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v8 = 0;
  if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipMessage(a2, &v8, a3, a4)
    && *((unsigned char *)a2 + 36))
  {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)&v8);
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = 0;
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)&v8);
  return v6;
}

void sub_2135E7D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromCodedStream(wireless_diagnostics::google::protobuf::UnknownFieldSet *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::UnknownFieldSet *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  if (*(void *)this) {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(this);
  }

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFromCodedStream((void ***)this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(wireless_diagnostics::google::protobuf::UnknownFieldSet *a1, uint64_t a2)
{
  v9[0] = a2;
  memset(&v9[1], 0, 30);
  long long v10 = xmmword_213619380;
  int v3 = *MEMORY[0x263F8C738];
  int v11 = 0;
  int v12 = v3;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v9);
  unsigned int v6 = wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromCodedStream(a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v9, v4, v5);
  if (BYTE4(v9[4])) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  MEMORY[0x21668D180](v9);
  return v7;
}

uint64_t wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromArray(wireless_diagnostics::google::protobuf::UnknownFieldSet *this, const void *a2)
{
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v5, a2);
  uint64_t v3 = wireless_diagnostics::google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(this, (uint64_t)v5);
  MEMORY[0x21668D0D0](v5);
  return v3;
}

uint64_t wireless_diagnostics::google::protobuf::UnknownField::SerializeLengthDelimitedNoTag(wireless_diagnostics::google::protobuf::UnknownField *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (char *)*((void *)this + 1);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
  if (v3[23] >= 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = *(char **)v3;
  }

  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4);
}

uint64_t wireless_diagnostics::google::protobuf::UnknownField::SerializeLengthDelimitedNoTagToArray(wireless_diagnostics::google::protobuf::UnknownField *this, unsigned __int8 *a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4 = *((void *)this + 1);
  if (*(char *)(v4 + 23) < 0) {
    int v5 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v4 + 8);
  }
  else {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v4 + 23);
  }
  if (v5 > 0x7F)
  {
    unsigned int v6 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (uint64_t)a2, a2);
  }
  else
  {
    *a2 = v5;
    unsigned int v6 = a2 + 1;
  }
  int v7 = *(char *)(v4 + 23);
  if (v7 >= 0) {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4;
  }
  else {
    int v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v4;
  }
  if (v7 >= 0) {
    uint64_t v9 = (const void *)*(unsigned __int8 *)(v4 + 23);
  }
  else {
    uint64_t v9 = (const void *)*(unsigned int *)(v4 + 8);
  }

  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v8, v9, (uint64_t)v6, a4);
}

void std::vector<wireless_diagnostics::google::protobuf::UnknownField>::__append(void **a1, unint64_t a2)
{
  unsigned int v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  int v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>>(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[16 * v10];
    long long v15 = &v13[16 * v12];
    bzero(v14, 16 * a2);
    uint64_t v16 = &v14[16 * a2];
    int v18 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v17 - 1);
        v14 -= 16;
        v17 -= 16;
      }
      while (v17 != v18);
      unint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

char *wireless_diagnostics::google::protobuf::StripString(char *__s1, char *__s2, char a3)
{
  unsigned int v6 = __s1;
  if (__s1[23] < 0) {
    unsigned int v6 = *(char **)__s1;
  }
  for (uint64_t i = v6; ; uint64_t i = result + 1)
  {
    uint64_t result = strpbrk(i, __s2);
    if (!result) {
      break;
    }
    unint64_t v9 = __s1;
    if (__s1[23] < 0) {
      unint64_t v9 = *(char **)__s1;
    }
    v9[result - v6] = a3;
  }
  return result;
}

std::string *wireless_diagnostics::google::protobuf::StringReplace(std::string *__str, uint64_t a2, uint64_t a3, char a4, std::string *this)
{
  int v5 = this;
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  uint64_t v8 = *(void *)(a2 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a2 + 8);
  }
  if (v9)
  {
    std::string::size_type v11 = 0;
    while (1)
    {
      std::string::size_type v12 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
      char v13 = v12;
      std::string::size_type size = __str->__r_.__value_.__l.__size_;
      long long v15 = (v12 & 0x80u) == 0 ? __str : (std::string *)__str->__r_.__value_.__r.__words[0];
      std::string::size_type v16 = (v12 & 0x80u) == 0 ? HIBYTE(__str->__r_.__value_.__r.__words[2]) : __str->__r_.__value_.__l.__size_;
      unint64_t v17 = (v7 & 0x80u) == 0 ? (char *)a2 : *(char **)a2;
      int64_t v18 = (v7 & 0x80u) == 0 ? v7 : v8;
      if (v16 < v11) {
        break;
      }
      std::string::size_type v19 = v11;
      if (v18)
      {
        long long v20 = (char *)v15 + v11;
        uint64_t v21 = (char *)v15 + v16;
        int64_t v22 = v16 - v11;
        if ((uint64_t)(v16 - v11) < v18) {
          break;
        }
        std::string::size_type v37 = __str->__r_.__value_.__l.__size_;
        int v23 = *v17;
        while (1)
        {
          int64_t v24 = v22 - v18;
          if (v24 == -1 || (unint64_t v25 = (char *)memchr(v20, v23, v24 + 1)) == 0)
          {
LABEL_41:
            int v5 = this;
            std::string::size_type size = v37;
            char v13 = v12;
            goto LABEL_42;
          }
          uint64_t v26 = v25;
          if (!memcmp(v25, v17, v18)) {
            break;
          }
          long long v20 = v26 + 1;
          int64_t v22 = v21 - (v26 + 1);
          if (v22 < v18) {
            goto LABEL_41;
          }
        }
        int v5 = this;
        std::string::size_type size = v37;
        char v13 = v12;
        if (v26 == v21) {
          break;
        }
        std::string::size_type v19 = v26 - (char *)v15;
      }
      if (v19 == -1) {
        break;
      }
      std::string::append(v5, __str, v11, v19 - v11);
      int v27 = *(char *)(a3 + 23);
      if (v27 >= 0) {
        std::string::size_type v28 = (const std::string::value_type *)a3;
      }
      else {
        std::string::size_type v28 = *(const std::string::value_type **)a3;
      }
      if (v27 >= 0) {
        std::string::size_type v29 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v29 = *(void *)(a3 + 8);
      }
      std::string::append(v5, v28, v29);
      uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
      uint64_t v8 = *(void *)(a2 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v30 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        uint64_t v30 = *(void *)(a2 + 8);
      }
      std::string::size_type v11 = v30 + v19;
      if ((a4 & 1) == 0)
      {
        std::string::size_type v12 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
        std::string::size_type size = __str->__r_.__value_.__l.__size_;
        char v13 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
        break;
      }
    }
LABEL_42:
    if (v13 >= 0) {
      std::string::size_type v31 = v12;
    }
    else {
      std::string::size_type v31 = size;
    }
    return std::string::append(v5, __str, v11, v31 - v11);
  }
  else
  {
    int v33 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (v33 >= 0) {
      unint64_t v34 = __str;
    }
    else {
      unint64_t v34 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    if (v33 >= 0) {
      std::string::size_type v35 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v35 = __str->__r_.__value_.__l.__size_;
    }
    return std::string::append(this, (const std::string::value_type *)v34, v35);
  }
}

std::string *wireless_diagnostics::google::protobuf::StringReplace@<X0>(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, std::string *a5@<X8>)
{
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  return wireless_diagnostics::google::protobuf::StringReplace(a1, a2, a3, a4, a5);
}

void sub_2135E8368(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::SplitStringUsing(std::string *a1, char *__s, std::vector<std::string> *a3)
{
  int v5 = *__s;
  if (*__s && !__s[1])
  {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) == 0) {
      uint64_t v30 = (unsigned __int8 *)a1;
    }
    else {
      uint64_t v30 = (unsigned __int8 *)a1->__r_.__value_.__r.__words[0];
    }
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    if (size)
    {
      std::string::size_type v31 = &v30[size];
      unint64_t v32 = &v30[size];
      do
      {
        if (*v30 == v5)
        {
          int v33 = v30 + 1;
        }
        else
        {
          unint64_t v34 = v30 + 1;
          while (v34 != v31)
          {
            int v35 = *v34++;
            if (v35 == v5)
            {
              int v33 = v34 - 1;
              goto LABEL_60;
            }
          }
          int v33 = v32;
LABEL_60:
          std::string::basic_string[abi:ne180100](&__dst, v30, v33 - v30);
          std::string::size_type v37 = a3;
          std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (long long *)&__dst);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
        }
        uint64_t v30 = v33;
      }
      while (v33 != v31);
    }
  }
  else
  {
    std::string::size_type v6 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    uint64_t v7 = (std::string *)a1->__r_.__value_.__r.__words[0];
    std::string::size_type v8 = a1->__r_.__value_.__l.__size_;
    if ((v6 & 0x80u) == 0) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = (std::string *)a1->__r_.__value_.__r.__words[0];
    }
    if ((v6 & 0x80u) == 0) {
      std::string::size_type v10 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v10 = a1->__r_.__value_.__l.__size_;
    }
    size_t v11 = strlen(__s);
    if (v10)
    {
      std::string::size_type v12 = v9;
      size_t v13 = v11;
      if (v11)
      {
        while (memchr(__s, v12->__r_.__value_.__s.__data_[0], v13))
        {
          std::string::size_type v12 = (std::string *)((char *)v12 + 1);
          if (!--v10) {
            return;
          }
        }
      }
      std::string::size_type v14 = (char *)v12 - (char *)v9;
      while (2)
      {
        if (v14 != -1)
        {
          if ((v6 & 0x80u) != 0)
          {
            std::string::size_type v15 = v8;
          }
          else
          {
            uint64_t v7 = a1;
            std::string::size_type v15 = v6;
          }
          size_t v16 = strlen(__s);
          if (v15 <= v14 || v16 == 0)
          {
LABEL_64:
            std::string::basic_string(&__dst, a1, v14, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v37);
            std::string::size_type v37 = a3;
            std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (long long *)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            int64_t v18 = (unsigned __int8 *)v7 + v14;
            std::string::size_type v19 = (unsigned __int8 *)v7 + v15;
            uint64_t v20 = -(uint64_t)v14;
LABEL_24:
            uint64_t v21 = 0;
            while (*v18 != __s[v21])
            {
              if (v16 == ++v21)
              {
                ++v18;
                --v20;
                if (v18 != v19) {
                  goto LABEL_24;
                }
                goto LABEL_64;
              }
            }
            if (v18 == v19) {
              goto LABEL_64;
            }
            int64_t v22 = (unsigned __int8 *)(v18 - (unsigned __int8 *)v7);
            if (v18 - (unsigned __int8 *)v7 == -1) {
              goto LABEL_64;
            }
            std::string::basic_string(&__dst, a1, v14, (std::string::size_type)&v22[-v14], (std::allocator<char> *)&v37);
            std::string::size_type v37 = a3;
            std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (long long *)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            std::string::size_type v6 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
            uint64_t v7 = (std::string *)a1->__r_.__value_.__r.__words[0];
            std::string::size_type v8 = a1->__r_.__value_.__l.__size_;
            if ((v6 & 0x80u) == 0) {
              int v23 = a1;
            }
            else {
              int v23 = (std::string *)a1->__r_.__value_.__r.__words[0];
            }
            if ((v6 & 0x80u) == 0) {
              unint64_t v24 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
            }
            else {
              unint64_t v24 = a1->__r_.__value_.__l.__size_;
            }
            size_t v25 = strlen(__s);
            if (v24 > (unint64_t)v22)
            {
              size_t v26 = v25;
              int v27 = &v22[(void)v23];
              if (v25)
              {
                unint64_t v28 = v24 + v20;
                while (memchr(__s, (char)*v27, v26))
                {
                  ++v27;
                  if (!--v28) {
                    return;
                  }
                }
              }
              std::string::size_type v14 = v27 - (unsigned __int8 *)v23;
              continue;
            }
          }
        }
        break;
      }
    }
  }
}

void sub_2135E8634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::SplitStringAllowEmpty(const std::string *a1, char *__s, std::vector<std::string> *a3)
{
  int v6 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
  if (v6 >= 0) {
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
  }
  size_t v8 = strlen(__s);
  std::string::size_type v9 = 0;
  if (size) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v6 >= 0) {
      uint64_t v11 = (uint64_t)a1;
    }
    else {
      uint64_t v11 = a1->__r_.__value_.__r.__words[0];
    }
LABEL_11:
    std::string::size_type v12 = (unsigned __int8 *)(v11 + v9);
    size_t v13 = (unsigned __int8 *)(v11 + size);
    while (2)
    {
      uint64_t v14 = 0;
      do
      {
        if (*v12 == __s[v14])
        {
          if (v12 == v13) {
            goto LABEL_32;
          }
          std::string::size_type v15 = &v12[-v11];
          if (v15 == (unsigned __int8 *)-1) {
            goto LABEL_32;
          }
          std::string::basic_string(&v19, a1, v9, (std::string::size_type)&v15[-v9], (std::allocator<char> *)&v18);
          int64_t v18 = a3;
          std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v18, (long long *)&v19);
          if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v19.__r_.__value_.__l.__data_);
          }
          std::string::size_type v9 = (std::string::size_type)(v15 + 1);
          int v16 = SHIBYTE(a1->__r_.__value_.__r.__words[2]);
          uint64_t v11 = v16 >= 0 ? (uint64_t)a1 : a1->__r_.__value_.__r.__words[0];
          std::string::size_type size = v16 >= 0 ? HIBYTE(a1->__r_.__value_.__r.__words[2]) : a1->__r_.__value_.__l.__size_;
          size_t v8 = strlen(__s);
          if (size <= v9 || v8 == 0) {
            goto LABEL_32;
          }
          goto LABEL_11;
        }
        ++v14;
      }
      while (v8 != v14);
      if (++v12 != v13) {
        continue;
      }
      break;
    }
  }
LABEL_32:
  std::string::basic_string(&v19, a1, v9, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v18);
  int64_t v18 = a3;
  std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v18, (long long *)&v19);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
}

void sub_2135E87BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::JoinStrings(uint64_t *a1, char *__s, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (!a3)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  int v7 = strlen(__s);
  if (v6 == v5)
  {
    std::string::reserve((std::string *)a3, 0);
  }
  else
  {
    int v8 = v7;
    uint64_t v9 = 0;
    int v10 = 0;
    uint64_t v11 = v5;
    do
    {
      if (v9) {
        int v12 = v7;
      }
      else {
        int v12 = 0;
      }
      if (*(char *)(v11 + 23) < 0) {
        uint64_t v13 = *(void *)(v5 + 8 + v9);
      }
      else {
        LODWORD(v13) = *(unsigned __int8 *)(v11 + 23);
      }
      v10 += v12 + v13;
      v11 += 24;
      v9 += 24;
    }
    while (v11 != v6);
    std::string::reserve((std::string *)a3, v10);
    uint64_t v14 = 0;
    do
    {
      if (v14) {
        std::string::append((std::string *)a3, __s, v8);
      }
      std::string::size_type v15 = (const std::string::value_type *)(v5 + v14);
      if (*(char *)(v5 + v14 + 23) < 0)
      {
        std::string::size_type v15 = *(const std::string::value_type **)(v5 + v14);
        std::string::size_type v16 = *(void *)(v5 + v14 + 8);
      }
      else
      {
        std::string::size_type v16 = *(unsigned __int8 *)(v5 + v14 + 23);
      }
      std::string::append((std::string *)a3, v15, v16);
      v14 += 24;
    }
    while (v5 + v14 != v6);
  }
}

void sub_2135E8940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2)
  {
    for (uint64_t i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    uint64_t i = a2;
  }
  while (1)
  {
    int v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1) {
        goto LABEL_57;
      }
      goto LABEL_55;
    }
    uint64_t v4 = a1 + 1;
    int v3 = (char)a1[1];
    if (v3 <= 62) {
      break;
    }
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98) {
              goto LABEL_56;
            }
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97) {
          goto LABEL_56;
        }
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      uint64_t v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63) {
      goto LABEL_54;
    }
    if (v3 != 88) {
      goto LABEL_56;
    }
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (unsigned int v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      int v12 = a1 + 1;
      while (1)
      {
        unsigned __int8 v14 = *++v12;
        unsigned __int8 v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        unsigned int v16 = v13;
        char v17 = v13 + 9;
        if (v16 <= 0x39) {
          char v17 = v16;
        }
        uint64_t v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8) {
      goto LABEL_56;
    }
    LOBYTE(v3) = v3 - 48;
    unsigned __int8 v6 = a1[2];
    uint64_t v5 = a1 + 2;
    char v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      uint64_t v4 = v5;
      LOBYTE(v3) = v7;
    }
    unsigned __int8 v8 = v4[1];
    int v9 = v8 & 0xF8;
    char v10 = v8 + 8 * v3 - 48;
    if (v9 == 48) {
      a1 = v4 + 1;
    }
    else {
      a1 = v4;
    }
    if (v9 == 48) {
      LOBYTE(v3) = v10;
    }
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39) {
    goto LABEL_54;
  }
  if (a1[1]) {
    goto LABEL_56;
  }
LABEL_57:
  *uint64_t i = 0;
  return (i - a2);
}

void wireless_diagnostics::google::protobuf::UnescapeCEscapeString()
{
}

{
  operator new[]();
}

void sub_2135E8C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  MEMORY[0x21668DB40](v3, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void sub_2135E8D7C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB40](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::CEscapeInternal(wireless_diagnostics::google::protobuf *this, const char *a2, uint64_t a3, char *a4, int a5, char a6)
{
  int v6 = (int)a4;
  if ((int)a2 >= 1)
  {
    char v9 = a5;
    char v10 = (unsigned __int8 *)this;
    char v11 = 0;
    LODWORD(v12) = 0;
    if (a5) {
      unsigned __int8 v13 = "\\x%02x";
    }
    else {
      unsigned __int8 v13 = "\\%03o";
    }
    unsigned __int8 v14 = (unsigned __int8 *)this + (int)a2;
    while (1)
    {
      if (v6 - (int)v12 < 2) {
        return 0xFFFFFFFFLL;
      }
      int v15 = (char)*v10;
      if (v15 > 33)
      {
        switch(v15)
        {
          case '""':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 8796;
            goto LABEL_20;
          case '\'':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 10076;
            goto LABEL_20;
          case '\\':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 23644;
            goto LABEL_20;
        }
      }
      else
      {
        switch(v15)
        {
          case 9:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29788;
            goto LABEL_20;
          case 10:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 28252;
            goto LABEL_20;
          case 13:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v12) = 29276;
LABEL_20:
            uint64_t v12 = (v12 + 2);
            goto LABEL_21;
        }
      }
      if (v15 < 0 && (a6 & 1) != 0
        || (v15 - 32) <= 0x5E
        && ((v11 & 1) == 0
         || (v15 - 48) >= 0xA
         && (*v10 - 65 > 0x25 || ((1 << (v15 - 65)) & 0x3F0000003FLL) == 0)))
      {
        char v11 = 0;
        *(unsigned char *)(a3 + (int)v12) = v15;
        uint64_t v12 = (v12 + 1);
      }
      else
      {
        if ((v6 - v12) < 4) {
          return 0xFFFFFFFFLL;
        }
        sprintf((char *)(a3 + (int)v12), v13, *v10);
        uint64_t v12 = (v12 + 4);
        char v11 = v9;
      }
LABEL_21:
      if (++v10 >= v14) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_34:
  if ((int)v12 >= v6) {
    return 0xFFFFFFFFLL;
  }
  *(unsigned char *)(a3 + (int)v12) = 0;
  return v12;
}

uint64_t wireless_diagnostics::google::protobuf::CEscapeString(wireless_diagnostics::google::protobuf *this, const char *a2, uint64_t a3, char *a4)
{
  return wireless_diagnostics::google::protobuf::CEscapeInternal(this, a2, a3, a4, 0, 0);
}

void wireless_diagnostics::google::protobuf::CEscape()
{
}

void sub_2135E905C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB40](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::strings::Utf8SafeCEscape()
{
}

void sub_2135E9148(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB40](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::strings::CHexEscape()
{
}

void sub_2135E9234(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB40](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::strto32_adaptor(wireless_diagnostics::google::protobuf *this, char **a2, char **a3)
{
  int v3 = (int)a3;
  int v6 = *__error();
  *__error() = 0;
  uint64_t v7 = strtol((const char *)this, a2, v3);
  if (*__error() == 34 && v7 == 0x8000000000000000) {
    return 0x80000000;
  }
  if (*__error() == 34 && v7 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x7FFFFFFFLL;
  }
  int v10 = *__error();
  char v11 = __error();
  if (!v10 && v7 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL)
  {
    *char v11 = 34;
    return 0x80000000;
  }
  int v12 = *v11;
  unsigned __int8 v13 = __error();
  if (!v12 && v7 >= 0x80000000)
  {
    *unsigned __int8 v13 = 34;
    return 0x7FFFFFFFLL;
  }
  if (!*v13) {
    *__error() = v6;
  }
  return v7;
}

unint64_t wireless_diagnostics::google::protobuf::strtou32_adaptor(wireless_diagnostics::google::protobuf *this, char **a2, char **a3)
{
  int v3 = (int)a3;
  int v6 = *__error();
  *__error() = 0;
  unint64_t v7 = strtoul((const char *)this, a2, v3);
  if (*__error() == 34 && v7 == -1) {
    return 0xFFFFFFFFLL;
  }
  int v9 = *__error();
  int v10 = __error();
  if (!v9 && HIDWORD(v7))
  {
    *int v10 = 34;
    return 0xFFFFFFFFLL;
  }
  if (!*v10) {
    *__error() = v6;
  }
  return v7;
}

unsigned char *wireless_diagnostics::google::protobuf::FastInt64ToBuffer(unint64_t this, unsigned char *a2, char *a3)
{
  unint64_t v3 = this;
  a2[21] = 0;
  if ((this & 0x8000000000000000) != 0)
  {
    if (this < 0xFFFFFFFFFFFFFFF7)
    {
      unint64_t v7 = -10 - this;
      uint64_t result = a2 + 19;
      a2[20] = (v7 % 0xA) | 0x30;
      unint64_t v8 = v7 / 0xA + 1;
      do
      {
        *result-- = (v8 % 0xA) | 0x30;
        BOOL v9 = v8 > 9;
        v8 /= 0xAuLL;
      }
      while (v9);
    }
    else
    {
      char v6 = 48 - this;
      uint64_t result = a2 + 19;
      a2[20] = v6;
    }
    *uint64_t result = 45;
  }
  else
  {
    uint64_t result = a2 + 21;
    do
    {
      *--uint64_t result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  return result;
}

unsigned char *wireless_diagnostics::google::protobuf::FastInt32ToBuffer(wireless_diagnostics::google::protobuf *this, unsigned char *a2, char *a3)
{
  unsigned int v3 = this;
  a2[11] = 0;
  if ((this & 0x80000000) != 0)
  {
    if (this < 0xFFFFFFF7)
    {
      unsigned int v7 = -10 - this;
      unsigned int v8 = (-10 - (int)this) / 0xAu;
      uint64_t result = a2 + 9;
      a2[10] = (v7 % 0xA) | 0x30;
      unsigned int v9 = v8 + 1;
      do
      {
        *result-- = (v9 % 0xA) | 0x30;
        BOOL v10 = v9 > 9;
        v9 /= 0xAu;
      }
      while (v10);
    }
    else
    {
      char v6 = 48 - (_BYTE)this;
      uint64_t result = a2 + 9;
      a2[10] = v6;
    }
    *uint64_t result = 45;
  }
  else
  {
    uint64_t result = a2 + 11;
    do
    {
      *--uint64_t result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAu;
    }
    while (v5);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FastHexToBuffer(wireless_diagnostics::google::protobuf *this, uint64_t a2, char *a3)
{
  int v4 = (int)this;
  if ((this & 0x80000000) != 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  *(unsigned char *)(a2 + 21) = 0;
  uint64_t v5 = a2 + 21;
  do
  {
    *(unsigned char *)--uint64_t v5 = a0123456789abcd[v4 & 0xF];
    BOOL v6 = v4 <= 15;
    int v4 = v4 >> 4;
  }
  while (!v6);
  return v5;
}

void sub_2135E9604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::InternalFastHexToBuffer(unint64_t this, uint64_t a2, char *a3)
{
  *(unsigned char *)(a2 + (int)a3) = 0;
  if ((int)a3 >= 1)
  {
    unint64_t v3 = a3 + 1;
    do
    {
      *(unsigned char *)(a2 + (v3 - 2)) = a0123456789abcd[this & 0xF];
      this >>= 4;
      --v3;
    }
    while (v3 > 1);
  }
  return a2;
}

uint64_t wireless_diagnostics::google::protobuf::FastHex64ToBuffer(unint64_t this, uint64_t a2, char *a3)
{
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v3 = 15;
  do
  {
    *(unsigned char *)(a2 + v3) = a0123456789abcd[this & 0xF];
    this >>= 4;
    unint64_t v4 = v3-- + 1;
  }
  while (v4 > 1);
  return a2;
}

uint64_t wireless_diagnostics::google::protobuf::FastHex32ToBuffer(wireless_diagnostics::google::protobuf *this, uint64_t a2, char *a3)
{
  unint64_t v3 = this;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v4 = 7;
  do
  {
    *(unsigned char *)(a2 + v4) = a0123456789abcd[v3 & 0xF];
    v3 >>= 4;
    unint64_t v5 = v4-- + 1;
  }
  while (v5 > 1);
  return a2;
}

unsigned char *wireless_diagnostics::google::protobuf::FastUInt32ToBufferLeft(wireless_diagnostics::google::protobuf *this, unsigned char *a2, char *a3)
{
  if (this >= 0x3B9ACA00)
  {
    unint64_t v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = wireless_diagnostics::google::protobuf::two_ASCII_digits[v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v6 = this / 0x64uLL;
      *(_WORD *)a2 = wireless_diagnostics::google::protobuf::two_ASCII_digits[v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v5 = this / 0x2710uLL;
      *(_WORD *)a2 = wireless_diagnostics::google::protobuf::two_ASCII_digits[v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = wireless_diagnostics::google::protobuf::two_ASCII_digits[v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    unsigned int v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = wireless_diagnostics::google::protobuf::two_ASCII_digits[(int)this];
  unsigned int v7 = a2 + 2;
LABEL_11:
  *unsigned int v7 = 0;
  return v7;
}

unsigned char *wireless_diagnostics::google::protobuf::FastInt32ToBufferLeft(wireless_diagnostics::google::protobuf *this, unsigned char *a2, char *a3)
{
  if ((this & 0x80000000) != 0)
  {
    *a2++ = 45;
    this = (wireless_diagnostics::google::protobuf *)-(int)this;
  }
  return wireless_diagnostics::google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
}

unsigned char *wireless_diagnostics::google::protobuf::FastUInt64ToBufferLeft(wireless_diagnostics::google::protobuf *this, unsigned char *a2, char *a3)
{
  int v3 = (int)this;
  if ((unint64_t)this >> 32)
  {
    unint64_t v5 = (unint64_t)this / 0x3B9ACA00;
    unint64_t v6 = (_WORD *)wireless_diagnostics::google::protobuf::FastUInt64ToBufferLeft((wireless_diagnostics::google::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
    unsigned int v7 = v3 - 1000000000 * v5;
    *unint64_t v6 = wireless_diagnostics::google::protobuf::two_ASCII_digits[v7 / 0x989680uLL];
    v7 %= 0x989680u;
    v6[1] = wireless_diagnostics::google::protobuf::two_ASCII_digits[v7 / 0x186A0uLL];
    v7 %= 0x186A0u;
    v6[2] = wireless_diagnostics::google::protobuf::two_ASCII_digits[v7 / 0x3E8uLL];
    v7 %= 0x3E8u;
    v6[3] = wireless_diagnostics::google::protobuf::two_ASCII_digits[v7 / 0xAuLL];
    v6[4] = (v7 % 0xA + 48);
    return (char *)v6 + 9;
  }
  else
  {
    return wireless_diagnostics::google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  }
}

unsigned char *wireless_diagnostics::google::protobuf::FastInt64ToBufferLeft(uint64_t this, unsigned char *a2, char *a3)
{
  if (this < 0)
  {
    *a2++ = 45;
    this = -this;
  }
  return wireless_diagnostics::google::protobuf::FastUInt64ToBufferLeft((wireless_diagnostics::google::protobuf *)this, a2, a3);
}

void *wireless_diagnostics::google::protobuf::SimpleItoa@<X0>(wireless_diagnostics::google::protobuf *this@<X0>, char *a2@<X2>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastInt32ToBuffer(this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastUInt32ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<char *,char *>(a3, v6, v4, v4 - v6);
}

{
  char *v4;
  unsigned char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastInt64ToBuffer((unint64_t)this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastUInt64ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<char *,char *>(a3, v6, v4, v4 - v6);
}

{
  char *v4;
  unsigned char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastInt64ToBuffer((unint64_t)this, v6, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v4);
}

{
  char *v4;
  char v6[32];
  uint64_t v7;

  uint64_t v7 = *MEMORY[0x263EF8340];
  unint64_t v4 = wireless_diagnostics::google::protobuf::FastUInt64ToBufferLeft(this, v6, a2);
  return std::string::__init_with_size[abi:ne180100]<char *,char *>(a3, v6, v4, v4 - v6);
}

void *wireless_diagnostics::google::protobuf::SimpleDtoa@<X0>(double a1@<D0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  wireless_diagnostics::google::protobuf::DoubleToBuffer((wireless_diagnostics::google::protobuf *)__s, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, __s);
}

wireless_diagnostics::google::protobuf *wireless_diagnostics::google::protobuf::DoubleToBuffer(wireless_diagnostics::google::protobuf *this, double a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (strtod((const char *)this, 0) != a2) {
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  }
  wireless_diagnostics::google::protobuf::DelocalizeRadix(this, v7);
  return this;
}

void *wireless_diagnostics::google::protobuf::SimpleFtoa@<X0>(float a1@<S0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  wireless_diagnostics::google::protobuf::FloatToBuffer((wireless_diagnostics::google::protobuf *)v6, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v6);
}

wireless_diagnostics::google::protobuf *wireless_diagnostics::google::protobuf::FloatToBuffer(wireless_diagnostics::google::protobuf *this, float a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)unsigned int v9 = 0.0;
  if (!wireless_diagnostics::google::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2) {
    snprintf((char *)this, 0x18uLL, "%.*g", 8, a2);
  }
  wireless_diagnostics::google::protobuf::DelocalizeRadix(this, v8);
  return this;
}

char *wireless_diagnostics::google::protobuf::DelocalizeRadix(wireless_diagnostics::google::protobuf *this, char *a2)
{
  uint64_t result = strchr((char *)this, 46);
  if (!result)
  {
    for (uint64_t i = (char *)this + 2; ; ++i)
    {
      int v5 = *((unsigned __int8 *)i - 2);
      if ((v5 - 48) >= 0xA
        && ((v5 - 43) > 0x3A || ((1 << (v5 - 43)) & 0x400000004000005) == 0))
      {
        break;
      }
    }
    if (*(i - 2))
    {
      unsigned int v8 = (unsigned __int8 *)(i - 1);
      int v7 = *((unsigned __int8 *)i - 1);
      *((unsigned char *)i - 2) = 46;
      if ((v7 - 48) >= 0xA
        && ((v7 - 43) > 0x3A || ((1 << (v7 - 43)) & 0x400000004000005) == 0))
      {
        if (v7)
        {
          do
          {
            unsigned int v9 = i;
            int v10 = *(unsigned __int8 *)i;
            if ((v10 - 48) < 0xA) {
              break;
            }
            ++i;
            BOOL v11 = (v10 - 43) > 0x3A || ((1 << (v10 - 43)) & 0x400000004000005) == 0;
          }
          while (v11 && v10 != 0);
          size_t v13 = strlen(v9) + 1;
          return (char *)memmove(v8, v9, v13);
        }
      }
    }
  }
  return result;
}

BOOL wireless_diagnostics::google::protobuf::safe_strtof(wireless_diagnostics::google::protobuf *this, float *a2, float *a3)
{
  unint64_t v6 = 0;
  *__error() = 0;
  *a2 = strtof((const char *)this, &v6);
  return *(unsigned char *)this && !*v6 && *__error() == 0;
}

std::string *wireless_diagnostics::google::protobuf::LocalizeRadix@<X0>(wireless_diagnostics::google::protobuf *this@<X0>, char *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v7 = sprintf(&v11, "%.1f", 1.5);
  if (v11 != 49)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  if (v12[v7 - 2] != 53)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  if (v7 >= 7)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  size_t v8 = strlen((const char *)this);
  std::string::reserve(a3, v8 + v7 - 3);
  std::string::append[abi:ne180100]<char const*,0>(a3, (char *)this, a2);
  std::string::append(a3, v12, v7 - 2);
  return std::string::append(a3, a2 + 1);
}

void sub_2135EA22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  unint64_t v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    int v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    int v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    unsigned __int8 v14 = this;
    if ((v6 & 0x80) != 0) {
      unsigned __int8 v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (uint64_t i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      *uint64_t i = v16;
    }
    *uint64_t i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<char *,char *>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      int v12 = __p;
    }
    else {
      int v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_2135EA3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double wireless_diagnostics::google::protobuf::NoLocaleStrtod(wireless_diagnostics::google::protobuf *this, char *a2, char **a3)
{
  unsigned __int8 v14 = 0;
  double v5 = strtod((const char *)this, &v14);
  unint64_t v6 = v14;
  if (a2) {
    *(void *)a2 = v14;
  }
  if (*v6 == 46)
  {
    std::__split_buffer<std::string>::pointer p_p = &__p;
    wireless_diagnostics::google::protobuf::LocalizeRadix(this, v6, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::__split_buffer<std::string>::pointer p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v12 = 0;
    double v5 = strtod((const char *)p_p, &v12);
    char v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if (a2 && v12 - (char *)p_p > v14 - (char *)this)
    {
      int v9 = strlen((const char *)this);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int v10 = __p.__r_.__value_.__r.__words[1];
      }
      *(void *)a2 = (char *)this + v12 - ((char *)p_p + v10 - v9);
    }
    if (v8 < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return v5;
}

void sub_2135EA4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    void *__dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    unint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

std::vector<std::string> **std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](std::vector<std::string> **a1, long long *a2)
{
  unint64_t v4 = *a1;
  std::vector<std::string>::pointer end = (*a1)->__end_;
  unint64_t v6 = *a1;
  value = v6->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&v6->__end_cap_;
  size_t v8 = value;
  if (end >= value)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)v4->__begin_) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v4->__begin_) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    __v.__end_cap_.__value_ = p_end_cap;
    if (v15) {
      char v16 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)p_end_cap, v15);
    }
    else {
      char v16 = 0;
    }
    std::string::size_type v17 = v16 + v12;
    __v.__first_ = v16;
    __v.__begin_ = v17;
    __v.__end_cap_.__value_ = &v16[v15];
    long long v18 = *a2;
    v17->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    __v.__end_ = v17 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(v4, &__v);
    unint64_t v11 = v4->__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
  else
  {
    long long v10 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    unint64_t v11 = end + 1;
    v4->__end_ = end + 1;
  }
  v4->__end_ = v11;
  return a1;
}

void sub_2135EA6EC(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void *std::string::__init_with_size[abi:ne180100]<char *,char *>(void *result, char *a2, char *a3, unint64_t a4)
{
  unint64_t v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t result = operator new(v8 + 1);
    v4[1] = a4;
    v4[2] = v9 | 0x8000000000000000;
    *unint64_t v4 = result;
    unint64_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)unint64_t v4 = v10;
    unint64_t v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)unint64_t v4 = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  *(void *)(a1 + 140) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 160) = -1;
  *(unsigned char *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)a1 = 0;
  wireless_diagnostics::google::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_2135EA830(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::Refresh(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 136))
  {
    *(unsigned char *)(this + 112) = 0;
  }
  else
  {
    unint64_t v2 = *(std::string **)(this + 152);
    if (v2)
    {
      uint64_t v3 = *(int *)(v1 + 160);
      int v4 = *(_DWORD *)(v1 + 128);
      if (v4 > (int)v3)
      {
        std::string::append(v2, (const std::string::value_type *)(*(void *)(v1 + 120) + v3), v4 - (int)v3);
        *(_DWORD *)(v1 + 160) = 0;
      }
    }
    size_t v7 = 0;
    *(void *)(v1 + 120) = 0;
    *(_DWORD *)(v1 + 132) = 0;
    while (1)
    {
      this = (*(uint64_t (**)(void, char **, uint64_t))(**(void **)(v1 + 96) + 16))(*(void *)(v1 + 96), &v7, v1 + 128);
      if ((this & 1) == 0) {
        break;
      }
      if (*(_DWORD *)(v1 + 128))
      {
        double v5 = v7;
        *(void *)(v1 + 120) = v7;
        char v6 = *v5;
        goto LABEL_11;
      }
    }
    char v6 = 0;
    *(_DWORD *)(v1 + 128) = 0;
    *(unsigned char *)(v1 + 136) = 1;
LABEL_11:
    *(unsigned char *)(v1 + 112) = v6;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::io::Tokenizer::~Tokenizer(wireless_diagnostics::google::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 32);
  int v3 = *((_DWORD *)this + 33);
  if (v2 > v3) {
    (*(void (**)(void, void))(**((void **)this + 12) + 24))(*((void *)this + 12), (v2 - v3));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar(uint64_t this)
{
  int v1 = *(unsigned __int8 *)(this + 112);
  if (v1 == 9)
  {
    int v2 = *(_DWORD *)(this + 144);
    if (v2 <= 0) {
      int v3 = -(-v2 & 7);
    }
    else {
      int v3 = *(_DWORD *)(this + 144) & 7;
    }
    int v4 = v2 - v3 + 8;
  }
  else
  {
    if (v1 == 10)
    {
      *(void *)(this + 140) = (*(_DWORD *)(this + 140) + 1);
      goto LABEL_10;
    }
    int v4 = *(_DWORD *)(this + 144) + 1;
  }
  *(_DWORD *)(this + 144) = v4;
LABEL_10:
  int v5 = *(_DWORD *)(this + 128);
  uint64_t v6 = *(int *)(this + 132) + 1;
  *(_DWORD *)(this + 132) = v6;
  if ((int)v6 >= v5) {
    return wireless_diagnostics::google::protobuf::io::Tokenizer::Refresh(this);
  }
  *(unsigned char *)(this + 112) = *(unsigned char *)(*(void *)(this + 120) + v6);
  return this;
}

void wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeString(wireless_diagnostics::google::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = *((char *)this + 112);
      if (v4 != 92) {
        break;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v7 = *((unsigned __int8 *)this + 112);
      BOOL v8 = (v7 - 97) > 0x15 || ((1 << (v7 - 97)) & 0x2A2023) == 0;
      if (!v8
        || (v7 - 34) <= 0x3A && ((1 << (v7 - 34)) & 0x400000020000021) != 0
        || (v7 & 0xF8) == 0x30)
      {
        goto LABEL_15;
      }
      if (*((unsigned __int8 *)this + 112) > 0x74u)
      {
        if (v7 == 117)
        {
          wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu
            && ((unsigned int v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0)
            || (wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v18 = *((unsigned __int8 *)this + 112) - 65, v18 > 0x25) || ((1 << v18) & 0x3F0000003FLL) == 0))
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
          goto LABEL_15;
        }
        if (v7 != 120) {
          goto LABEL_20;
        }
        goto LABEL_23;
      }
      if (v7 == 85)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((unsigned char *)this + 112) != 48) {
          goto LABEL_45;
        }
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((unsigned char *)this + 112) != 48) {
          goto LABEL_45;
        }
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) & 0xFE) != 0x30) {
          goto LABEL_45;
        }
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v10 = *((unsigned __int8 *)this + 112) - 65;
          if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0) {
            goto LABEL_45;
          }
        }
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v11 = *((unsigned __int8 *)this + 112) - 65;
          if (v11 > 0x25 || ((1 << v11) & 0x3F0000003FLL) == 0) {
            goto LABEL_45;
          }
        }
        if ((wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
          || (wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0)
          || (wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
              (*((unsigned char *)this + 112) - 48) >= 0xAu)
          && ((unsigned int v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0))
        {
LABEL_45:
          std::string::basic_string[abi:ne180100]<0>(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_46;
        }
        goto LABEL_15;
      }
      if (v7 == 88)
      {
LABEL_23:
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
        {
          unsigned int v9 = *((unsigned __int8 *)this + 112) - 65;
          if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0)
          {
            std::string::basic_string[abi:ne180100]<0>(__p, "Expected hex digits for escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_46;
          }
        }
LABEL_15:
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      }
      else
      {
LABEL_20:
        std::string::basic_string[abi:ne180100]<0>(__p, "Invalid escape sequence in string literal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_46:
        if (v20 < 0) {
          operator delete(__p[0]);
        }
      }
    }
    if (v4 == 10 || v4 == 0) {
      break;
    }
    int v6 = *((unsigned __int8 *)this + 112);
    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    if (v6 == a2) {
      return;
    }
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v20 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2135EAF34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeNumber(wireless_diagnostics::google::protobuf::io::Tokenizer *this, int a2, int a3)
{
  if (a2)
  {
    int v4 = *((unsigned __int8 *)this + 112);
    if ((v4 | 0x20) == 0x78)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((unsigned char *)this + 112) - 48) > 9u
        && ((unsigned int v5 = *((unsigned __int8 *)this + 112) - 65, v18 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v18)
          ? (BOOL v7 = v6 == 0)
          : (BOOL v7 = 1),
            v7))
      {
        std::string::basic_string[abi:ne180100]<0>(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        do
        {
          do
            wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((unsigned char *)this + 112) - 48) < 0xAu);
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          BOOL v18 = v8 > 0x25;
          uint64_t v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v18 && v9 != 0);
      }
LABEL_14:
      int v11 = 0;
      goto LABEL_49;
    }
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30) {
        goto LABEL_21;
      }
      do
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v12 = *((unsigned __int8 *)this + 112);
      }
      while ((v12 & 0xF8) == 0x30);
      if ((v12 - 48) <= 9)
      {
LABEL_21:
        std::string::basic_string[abi:ne180100]<0>(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_49;
        }
      }
      goto LABEL_14;
    }
  }
  int v13 = *((unsigned __int8 *)this + 112);
  unsigned int v14 = v13 - 48;
  if (a3)
  {
    if (v14 <= 9)
    {
      do
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  else
  {
    if (v14 <= 9)
    {
      do
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
    if (v13 != 46)
    {
      int v11 = 0;
      goto LABEL_35;
    }
    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v13 = *((unsigned __int8 *)this + 112);
    if ((v13 - 48) <= 9)
    {
      do
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  int v11 = 1;
LABEL_35:
  if ((v13 | 0x20) == 0x65)
  {
    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 45 || v15 == 43) {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    if (*((unsigned __int8 *)this + 112) - 48 > 9)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      do
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    int v11 = 1;
  }
  if (*((unsigned char *)this + 164))
  {
    int v16 = *((unsigned __int8 *)this + 112);
    if (v16 == 70 || v16 == 102)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v11 = 1;
    }
  }
LABEL_49:
  int v17 = *((unsigned __int8 *)this + 112);
  BOOL v18 = v17 != 95 && (v17 & 0xFFFFFFDF) - 65 > 0x19;
  if (v18)
  {
    if (v17 != 46) {
      goto LABEL_61;
    }
    if (v11) {
      std::string::basic_string[abi:ne180100]<0>(__p, "Already saw decimal point or exponent; can't have another one.");
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(__p, "Hex and octal numbers must be integers.");
    }
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Need space between number and identifier.");
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v21 < 0) {
    operator delete(__p[0]);
  }
LABEL_61:
  if (v11) {
    return 4;
  }
  else {
    return 3;
  }
}

void sub_2135EB39C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeLineComment(uint64_t this, uint64_t a2)
{
  uint64_t v3 = this;
  if (a2)
  {
    *(void *)(this + 152) = a2;
    *(_DWORD *)(this + 160) = *(_DWORD *)(this + 132);
  }
  while (*(unsigned char *)(v3 + 112))
  {
    if (*(unsigned char *)(v3 + 112) == 10)
    {
      this = wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar(v3);
      break;
    }
    this = wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar(v3);
  }
  if (a2)
  {
    int v4 = *(_DWORD *)(v3 + 132);
    uint64_t v5 = *(int *)(v3 + 160);
    if (v4 != v5) {
      this = (uint64_t)std::string::append(*(std::string **)(v3 + 152), (const std::string::value_type *)(*(void *)(v3 + 120) + v5), v4 - (int)v5);
    }
    *(void *)(v3 + 152) = 0;
    *(_DWORD *)(v3 + 160) = -1;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeBlockComment(wireless_diagnostics::google::protobuf::io::Tokenizer *this, uint64_t a2)
{
  uint64_t v4 = *((unsigned int *)this + 35);
  uint64_t v5 = (*((_DWORD *)this + 36) - 2);
  if (a2)
  {
    *((void *)this + 19) = a2;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
  }
  while (1)
  {
    while (1)
    {
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 > 0x29) {
        break;
      }
      if (*((unsigned char *)this + 112))
      {
        if (v6 != 10) {
          goto LABEL_22;
        }
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (a2)
        {
          int v7 = *((_DWORD *)this + 33);
          uint64_t v8 = *((int *)this + 40);
          if (v7 != v8) {
            std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v8), v7 - (int)v8);
          }
          *((void *)this + 19) = 0;
          *((_DWORD *)this + 40) = -1;
        }
        while (1)
        {
          uint64_t v9 = *((unsigned __int8 *)this + 112);
          if (v9 > 0x2A) {
            break;
          }
          if (((1 << v9) & 0x100003A00) == 0)
          {
            if (v9 == 42)
            {
              wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
              if (*((unsigned char *)this + 112) == 47)
              {
                wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
                return;
              }
            }
            break;
          }
          wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        }
        if (a2)
        {
          *((void *)this + 19) = a2;
          *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
        }
      }
      else
      {
LABEL_24:
        if (!v6)
        {
          std::string::basic_string[abi:ne180100]<0>(__p, "End-of-file inside block comment.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v10 = *((void *)this + 13);
          std::string::basic_string[abi:ne180100]<0>(__p, "  Comment started here.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)v10 + 16))(v10, v4, v5, __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          if (a2)
          {
            int v11 = *((_DWORD *)this + 33);
            uint64_t v12 = *((int *)this + 40);
            if (v11 != v12) {
              std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v12), v11 - (int)v12);
            }
            *((void *)this + 19) = 0;
            *((_DWORD *)this + 40) = -1;
          }
          return;
        }
      }
    }
    if (v6 == 42) {
      break;
    }
    if (v6 == 47)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 != 42) {
        goto LABEL_24;
      }
      std::string::basic_string[abi:ne180100]<0>(__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v17 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
LABEL_22:
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
  }
  wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  unsigned int v6 = *((unsigned __int8 *)this + 112);
  if (v6 != 47) {
    goto LABEL_24;
  }
  wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  if (a2)
  {
    int v13 = *((_DWORD *)this + 33);
    uint64_t v14 = *((int *)this + 40);
    if (v13 != v14) {
      std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v14), v13 - (int)v14);
    }
    *((void *)this + 19) = 0;
    *((_DWORD *)this + 40) = -1;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v15 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
    }
    std::string::erase((std::string *)a2, v15 - 2, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_2135EB760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::TryConsumeCommentStart(wireless_diagnostics::google::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 42);
  if (v2 == 1)
  {
    if (*((unsigned char *)this + 112) == 35)
    {
LABEL_8:
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      return 0;
    }
    return 3;
  }
  if (v2 || *((unsigned char *)this + 112) != 47) {
    return 3;
  }
  wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  int v3 = *((unsigned __int8 *)this + 112);
  if (v3 != 42)
  {
    if (v3 != 47)
    {
      *(_DWORD *)this = 6;
      MEMORY[0x21668DA90]((char *)this + 8, "/");
      int v4 = *((_DWORD *)this + 36);
      *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
      *((_DWORD *)this + 9) = v4 - 1;
      *((_DWORD *)this + 10) = v4;
      return 2;
    }
    goto LABEL_8;
  }
  wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::Next(wireless_diagnostics::google::protobuf::io::Tokenizer *this)
{
  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((void *)this + 10) = *((void *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  while (1)
  {
LABEL_4:
    while (1)
    {
      int v2 = *((unsigned __int8 *)this + 112);
      if ((v2 - 9) >= 5 && v2 != 32) {
        break;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v3 = wireless_diagnostics::google::protobuf::io::Tokenizer::TryConsumeCommentStart(this);
    if (!v3)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, 0);
      goto LABEL_20;
    }
    if (v3 != 1) {
      break;
    }
    wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeBlockComment(this, 0);
LABEL_20:
    if (*((unsigned char *)this + 136)) {
      goto LABEL_2;
    }
  }
  if (v3 == 2) {
    return 1;
  }
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  unsigned int v4 = *((unsigned __int8 *)this + 112);
  if (v4 > 0x1F)
  {
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((unsigned char **)this + 1) = 0;
      *((void *)this + 2) = 0;
      unsigned int v4 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((unsigned char *)this + 8) = 0;
      *((unsigned char *)this + 31) = 0;
    }
    *((void *)this + 4) = *(void *)((char *)this + 140);
    *((void *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 40) = *((_DWORD *)this + 33);
    if (v4 == 95 || (v4 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v9 = *((unsigned __int8 *)this + 112);
      if (v9 == 95 || (v9 - 48) < 0xA || (v9 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          int v10 = *((unsigned __int8 *)this + 112);
        }
        while (v10 == 95 || (v10 - 48) < 0xA || (v10 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      int v13 = 2;
      goto LABEL_65;
    }
    if (v4 == 46)
    {
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          uint64_t v14 = *((void *)this + 13);
          uint64_t v15 = *((unsigned int *)this + 35);
          uint64_t v16 = (*((_DWORD *)this + 36) - 2);
          std::string::basic_string[abi:ne180100]<0>(__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)v14 + 16))(v14, v15, v16, __p);
          if (v23 < 0) {
            operator delete(__p[0]);
          }
        }
        int v7 = this;
        int v8 = 0;
        int v17 = 1;
        goto LABEL_57;
      }
    }
    else
    {
      if (v4 == 48)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v7 = this;
        int v8 = 1;
LABEL_56:
        int v17 = 0;
LABEL_57:
        int v13 = wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeNumber(v7, v8, v17);
LABEL_65:
        *(_DWORD *)this = v13;
        int v20 = *((_DWORD *)this + 33);
        uint64_t v21 = *((int *)this + 40);
        if (v20 != v21) {
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v21), v20 - (int)v21);
        }
        *((void *)this + 19) = 0;
        *((_DWORD *)this + 40) = -1;
        int v6 = *((_DWORD *)this + 36);
        uint64_t result = 1;
        goto LABEL_24;
      }
      if (v4 - 48 <= 9)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v7 = this;
        int v8 = 0;
        goto LABEL_56;
      }
      if (v4 == 39)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        BOOL v18 = this;
        unsigned __int8 v19 = 39;
        goto LABEL_62;
      }
      if (v4 == 34)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        BOOL v18 = this;
        unsigned __int8 v19 = 34;
LABEL_62:
        wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeString(v18, v19);
        int v13 = 5;
        goto LABEL_65;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v13 = 6;
    goto LABEL_65;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "Invalid control characters encountered in text.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  if (v23 < 0) {
    operator delete(__p[0]);
  }
  while (1)
  {
    do
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
    if (*((unsigned char *)this + 136)) {
      break;
    }
    if (*((unsigned char *)this + 112)) {
      goto LABEL_4;
    }
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  uint64_t result = 0;
  int v6 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v6;
LABEL_24:
  *((_DWORD *)this + 10) = v6;
  return result;
}

void sub_2135EBC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::NextWithComments(wireless_diagnostics::google::protobuf::io::Tokenizer *this, std::string::size_type a2, uint64_t *a3, std::string::size_type a4)
{
  v21.__r_.__value_.__r.__words[0] = a2;
  v21.__r_.__value_.__l.__size_ = (std::string::size_type)a3;
  v21.__r_.__value_.__r.__words[2] = a4;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  __int16 v25 = 0;
  char v26 = 1;
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(unsigned char **)a2 = 0;
      *(void *)(a2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a2 = 0;
      *(unsigned char *)(a2 + 23) = 0;
    }
  }
  if (a3) {
    std::vector<std::string>::__clear[abi:ne180100](a3);
  }
  if (a4)
  {
    if (*(char *)(a4 + 23) < 0)
    {
      **(unsigned char **)a4 = 0;
      *(void *)(a4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
    }
  }
  if (!*(_DWORD *)this)
  {
    char v26 = 0;
    goto LABEL_34;
  }
  while (1)
  {
    unsigned int v6 = *((unsigned __int8 *)this + 112);
    BOOL v7 = v6 > 0x20;
    uint64_t v8 = (1 << v6) & 0x100003A00;
    if (v7 || v8 == 0) {
      break;
    }
    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  }
  uint64_t v10 = 1;
  switch(wireless_diagnostics::google::protobuf::io::Tokenizer::TryConsumeCommentStart(this))
  {
    case 1u:
      if ((_BYTE)v25) {
      __int16 v25 = 1;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeBlockComment(this, (uint64_t)&v22);
      break;
    case 2u:
      goto LABEL_73;
    case 3u:
      if (*((unsigned char *)this + 112) != 10) {
        goto LABEL_72;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      goto LABEL_34;
    default:
      if ((_BYTE)v25 && !HIBYTE(v25)) {
      __int16 v25 = 257;
      }
      wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, (uint64_t)&v22);
      goto LABEL_33;
  }
  while (1)
  {
    uint64_t v11 = *((unsigned __int8 *)this + 112);
    if (v11 > 0x20) {
      break;
    }
    if (((1 << v11) & 0x100003A00) == 0)
    {
      if (v11 == 10)
      {
        wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
LABEL_33:
        while (1)
        {
LABEL_34:
          while (1)
          {
            unsigned int v12 = *((unsigned __int8 *)this + 112);
            BOOL v7 = v12 > 0x20;
            uint64_t v13 = (1 << v12) & 0x100003A00;
            if (v7 || v13 == 0) {
              break;
            }
LABEL_38:
            wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          }
          switch(wireless_diagnostics::google::protobuf::io::Tokenizer::TryConsumeCommentStart(this))
          {
            case 1u:
              if ((_BYTE)v25) {
              __int16 v25 = 1;
              }
              wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeBlockComment(this, (uint64_t)&v22);
              while (2)
              {
                uint64_t v16 = *((unsigned __int8 *)this + 112);
                if (v16 <= 0x20)
                {
                  if (((1 << v16) & 0x100003A00) != 0)
                  {
                    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
                    continue;
                  }
                  if (v16 == 10) {
                    goto LABEL_38;
                  }
                }
                goto LABEL_34;
              }
            case 2u:
              goto LABEL_69;
            case 3u:
              if (*((unsigned char *)this + 112) != 10)
              {
                uint64_t v10 = wireless_diagnostics::google::protobuf::io::Tokenizer::Next(this);
                if (!v10) {
                  goto LABEL_68;
                }
                int v17 = *((char *)this + 31);
                if (v17 < 0)
                {
                  if (*((void *)this + 2) == 1)
                  {
                    unsigned __int8 v19 = (unsigned __int8 *)*((void *)this + 1);
                    if ((*v19 | 0x20) != 0x7D)
                    {
                      int v18 = *v19;
                      goto LABEL_67;
                    }
                    goto LABEL_68;
                  }
                }
                else if (v17 == 1)
                {
                  int v18 = *((unsigned __int8 *)this + 8);
                  if ((v18 | 0x20) == 0x7D) {
                    goto LABEL_68;
                  }
LABEL_67:
                  if (v18 == 41)
                  {
LABEL_68:
                    goto LABEL_73;
                  }
                }
LABEL_69:
                uint64_t v10 = 1;
                goto LABEL_73;
              }
              wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
              char v26 = 0;
              break;
            default:
              if ((_BYTE)v25) {
                BOOL v15 = HIBYTE(v25) == 0;
              }
              else {
                BOOL v15 = 0;
              }
              if (v15) {
              __int16 v25 = 257;
              }
              wireless_diagnostics::google::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, (uint64_t)&v22);
              continue;
          }
        }
      }
      break;
    }
    wireless_diagnostics::google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  }
  if (SHIBYTE(v24) < 0)
  {
    *int64_t v22 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    LOBYTE(v22) = 0;
    HIBYTE(v24) = 0;
  }
  LOBYTE(v25) = 0;
LABEL_72:
  uint64_t v10 = wireless_diagnostics::google::protobuf::io::Tokenizer::Next(this);
LABEL_73:
  return v10;
}

void sub_2135EBFD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _Unwind_Resume(a1);
}

std::string *wireless_diagnostics::google::protobuf::io::anonymous namespace'::CommentCollector::Flush(std::string *this)
{
  if (this[2].__r_.__value_.__s.__data_[0])
  {
    int v1 = this;
    if (this[2].__r_.__value_.__s.__data_[2])
    {
      this = (std::string *)this->__r_.__value_.__r.__words[0];
      if (v1->__r_.__value_.__r.__words[0])
      {
        int v2 = SHIBYTE(v1[1].__r_.__value_.__r.__words[2]);
        if (v2 >= 0) {
          data = (const std::string::value_type *)&v1[1];
        }
        else {
          data = v1[1].__r_.__value_.__l.__data_;
        }
        if (v2 >= 0) {
          std::string::size_type size = HIBYTE(v1[1].__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v1[1].__r_.__value_.__l.__size_;
        }
        this = std::string::append(this, data, size);
      }
      v1[2].__r_.__value_.__s.__data_[2] = 0;
    }
    else
    {
      std::string::size_type v5 = this->__r_.__value_.__l.__size_;
      if (v5)
      {
        unsigned int v6 = (long long *)&this[1];
        BOOL v7 = *(std::string **)(v5 + 8);
        uint64_t v8 = (uint64_t *)this->__r_.__value_.__l.__size_;
        if ((unint64_t)v7 >= *(void *)(v5 + 16))
        {
          this = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(v8, v6);
        }
        else
        {
          std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v8, v6);
          this = v7 + 1;
        }
        *(void *)(v5 + 8) = this;
      }
    }
    if (SHIBYTE(v1[1].__r_.__value_.__r.__words[2]) < 0)
    {
      *v1[1].__r_.__value_.__l.__data_ = 0;
      v1[1].__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v1[1].__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&v1[1].__r_.__value_.__s + 23) = 0;
    }
    v1[2].__r_.__value_.__s.__data_[0] = 0;
  }
  return this;
}

void wireless_diagnostics::google::protobuf::io::anonymous namespace'::CommentCollector::~CommentCollector(wireless_diagnostics::google::protobuf::io::_anonymous_namespace_::CommentCollector *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (v1 && *((unsigned char *)this + 48))
  {
    uint64_t v2 = *((void *)this + 5);
    long long v3 = *(_OWORD *)((char *)this + 24);
    uint64_t v4 = *(void *)(v1 + 16);
    *(_OWORD *)((char *)this + 24) = *(_OWORD *)v1;
    *((void *)this + 5) = v4;
    *(_OWORD *)uint64_t v1 = v3;
    *(void *)(v1 + 16) = v2;
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
}

uint64_t wireless_diagnostics::google::protobuf::io::Tokenizer::ParseInteger(unsigned __int8 *a1, unint64_t a2, unint64_t *a3)
{
  long long v3 = *(unsigned __int8 **)a1;
  if ((a1[23] & 0x80u) == 0) {
    long long v3 = a1;
  }
  int v4 = *v3;
  if (v4 == 48)
  {
    if ((v3[1] | 0x20) == 0x78)
    {
      int v5 = v3[2];
      v3 += 2;
      LOBYTE(v4) = v5;
      unsigned int v6 = 16;
      if (!v5)
      {
LABEL_8:
        unint64_t v7 = 0;
LABEL_25:
        *a3 = v7;
        return 1;
      }
    }
    else
    {
      LOBYTE(v4) = 48;
      unsigned int v6 = 8;
    }
  }
  else
  {
    unsigned int v6 = 10;
    if (!*v3) {
      goto LABEL_8;
    }
  }
  unint64_t v7 = 0;
  unint64_t v8 = v6;
  int v9 = v3 + 1;
  while (1)
  {
    int v10 = (char)v4;
    unsigned int v11 = (v4 - 48);
    int v12 = (v10 - 65) >= 0x1A ? -1 : v10 - 55;
    int v13 = (v10 - 97) <= 0x19 ? v10 - 87 : v12;
    int v14 = v10 - 48;
    signed int v15 = v11 <= 9 ? v14 : v13;
    if (v15 >= v8)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::CEscape();
    }
    if (a2 < v15 || v7 > (a2 - v15) / v8) {
      return 0;
    }
    unint64_t v7 = v15 + v7 * v8;
    int v16 = *v9++;
    LOBYTE(v4) = v16;
    if (!v16) {
      goto LABEL_25;
    }
  }
}

void sub_2135EC2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a16);
  _Unwind_Resume(a1);
}

double wireless_diagnostics::google::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  if (*(char *)(a1 + 23) >= 0) {
    int v4 = (wireless_diagnostics::google::protobuf *)a1;
  }
  else {
    int v4 = *(wireless_diagnostics::google::protobuf **)a1;
  }
  *(void *)int v12 = 0;
  double v5 = wireless_diagnostics::google::protobuf::NoLocaleStrtod(v4, v12, a3);
  unsigned int v6 = *(unsigned __int8 **)v12;
  int v7 = **(unsigned char **)v12;
  if ((v7 | 0x20) == 0x65)
  {
    unint64_t v8 = (unsigned __int8 *)++*(void *)v12;
    int v7 = v6[1];
    if (v7 == 45 || v7 == 43)
    {
      unint64_t v8 = v6 + 2;
      *(void *)int v12 = v6 + 2;
      int v7 = v6[2];
    }
    unsigned int v6 = v8;
  }
  if ((v7 | 0x20) == 0x66) {
    *(void *)int v12 = ++v6;
  }
  uint64_t v9 = v6 - (unsigned __int8 *)v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a1 + 8);
  }
  if (v9 != v10 || *(unsigned char *)v4 == 45)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::CEscape();
  }
  return v5;
}

void sub_2135EC454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a17);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::io::Tokenizer::ParseStringAppend(unsigned __int8 *a1, std::string *this, uint64_t a3, unsigned int *a4)
{
  uint64_t v5 = a1[23];
  signed __int8 v6 = v5;
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *((void *)a1 + 1);
  }
  if (!v5)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::CEscape();
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    std::string::size_type v9 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
  }
  if (size + v5 > v9)
  {
    std::string::reserve(this, size + v5);
    signed __int8 v6 = a1[23];
  }
  if (v6 >= 0) {
    uint64_t v10 = (std::string::value_type *)a1;
  }
  else {
    uint64_t v10 = *(std::string::value_type **)a1;
  }
  while (1)
  {
    unsigned int v11 = v10;
    int v13 = v10 + 1;
    int v12 = v10[1];
    if (v12 != 92) {
      break;
    }
    v10 += 2;
    int v14 = v11[2];
    if (v11[2])
    {
      if (((char)v14 & 0xFFFFFFF8) == 0x30)
      {
        std::string::value_type v15 = v14 - 48;
        std::string::value_type v17 = v11[3];
        int v16 = v11 + 3;
        std::string::value_type v18 = v17 + 8 * (v14 - 48) - 48;
        BOOL v19 = (v17 & 0xF8) == 48;
        if ((v17 & 0xF8) == 0x30) {
          int v20 = v16;
        }
        else {
          int v20 = v10;
        }
        if (v19) {
          std::string::value_type v15 = v18;
        }
        std::string::value_type v21 = v20[1];
        int v22 = v21 & 0xF8;
        std::string::value_type v23 = v21 + 8 * v15 - 48;
        if (v22 == 48) {
          uint64_t v10 = v20 + 1;
        }
        else {
          uint64_t v10 = v20;
        }
        if (v22 == 48) {
          std::string::value_type v15 = v23;
        }
        std::string::value_type v24 = v15;
        goto LABEL_62;
      }
      if (v14 == 85 || v14 == 117)
      {
        LODWORD(__p) = 0;
        int v32 = v11[2];
        if (v32 == 117) {
          uint64_t v33 = 4;
        }
        else {
          uint64_t v33 = 8 * (v32 == 85);
        }
        if (!wireless_diagnostics::google::protobuf::io::ReadHexDigits((wireless_diagnostics::google::protobuf::io *)(v11 + 3), (const char *)v33, (unsigned int *)&__p, a4))
        {
          std::string::value_type v24 = *v10;
          goto LABEL_62;
        }
        uint64_t v35 = v33 | 3;
        unint64_t v36 = &v11[v35];
        unint64_t v37 = __p;
        if (__p >> 10 == 54)
        {
          if (*v36 == 92 && v36[1] == 117)
          {
            unsigned int v47 = 0;
            if (wireless_diagnostics::google::protobuf::io::ReadHexDigits((wireless_diagnostics::google::protobuf::io *)(v36 + 2), (const char *)4, &v47, v34)&& v47 >> 10 == 55)
            {
              LODWORD(v37) = ((v47 - 56320) | ((v37 << 10) - 56623104)) + 0x10000;
              LODWORD(__p) = v37;
              v35 += 6;
            }
          }
          unint64_t v36 = &v11[v35];
        }
        else
        {
          if (__p < 0x80)
          {
            std::string::size_type v38 = 1;
            goto LABEL_92;
          }
          if (__p <= 0x7FF)
          {
            unint64_t v37 = (4 * __p) & 0x1F00 | __p & 0x3F | 0xC080u;
            std::string::size_type v38 = 2;
            goto LABEL_92;
          }
        }
        if (!WORD1(v37))
        {
          unint64_t v37 = (4 * v37) & 0x3F00 | v37 & 0x3F | ((unsigned __int16)((unsigned __int16)v37 >> 12) << 16) | 0xE08080;
          std::string::size_type v38 = 3;
LABEL_92:
          unsigned int v47 = wireless_diagnostics::google::protobuf::ghtonl((wireless_diagnostics::google::protobuf *)v37);
          std::string::append(this, (const std::string::value_type *)&v48 - v38, v38);
          goto LABEL_93;
        }
        if (!(v37 >> 21))
        {
          unint64_t v37 = (16 * v37) & 0x3F0000 | v37 & 0x3F | (((v37 >> 18) & 7) << 24) | (((v37 >> 6) & 0x3F) << 8) | 0xF0808080;
          std::string::size_type v38 = 4;
          goto LABEL_92;
        }
        wireless_diagnostics::google::protobuf::StringAppendF();
LABEL_93:
        uint64_t v10 = v36 - 1;
      }
      else if (v14 == 120)
      {
        int v28 = v11[3];
        int v27 = v11 + 3;
        int v26 = v28;
        unsigned __int8 v29 = v28 - 48;
        unsigned __int8 v30 = v28 - 97;
        if ((v28 - 48) < 0xA || v30 < 6u)
        {
          if (v29 <= 9u)
          {
            std::string::value_type v31 = v26 - 48;
            goto LABEL_73;
          }
        }
        else if ((v26 - 65) > 5)
        {
          std::string::value_type v31 = 0;
          int v27 = v10;
          goto LABEL_73;
        }
        if ((v26 - 65) >= 0x1A) {
          char v39 = -1;
        }
        else {
          char v39 = v26 - 55;
        }
        std::string::value_type v40 = v26 - 87;
        if (v30 <= 0x19u) {
          std::string::value_type v31 = v40;
        }
        else {
          std::string::value_type v31 = v39;
        }
LABEL_73:
        int v41 = v27[1];
        if ((v41 - 48) >= 0xA && (v41 - 97) >= 6u)
        {
          if ((v41 - 65) > 5) {
            goto LABEL_85;
          }
          char v42 = 16 * v31;
LABEL_79:
          unsigned int v44 = (v41 - 97);
          if ((v41 - 65) >= 0x1A) {
            char v45 = -1;
          }
          else {
            char v45 = v41 - 55;
          }
          char v43 = v41 - 87;
          if (v44 > 0x19) {
            char v43 = v45;
          }
          goto LABEL_84;
        }
        char v42 = 16 * v31;
        if ((v41 - 48) > 9u) {
          goto LABEL_79;
        }
        char v43 = v41 - 48;
LABEL_84:
        std::string::value_type v31 = v43 + v42;
        ++v27;
LABEL_85:
        std::string::push_back(this, v31);
        uint64_t v10 = v27;
      }
      else
      {
        if ((char)v14 > 97)
        {
          switch((char)v14)
          {
            case 'n':
              std::string::value_type v24 = 10;
              break;
            case 'o':
            case 'p':
            case 'q':
            case 's':
            case 'u':
              goto LABEL_100;
            case 'r':
              std::string::value_type v24 = 13;
              break;
            case 't':
              std::string::value_type v24 = 9;
              break;
            case 'v':
              std::string::value_type v24 = 11;
              break;
            default:
              if ((char)v14 == 102)
              {
                std::string::value_type v24 = 12;
              }
              else
              {
                if ((char)v14 != 98) {
                  goto LABEL_100;
                }
                std::string::value_type v24 = 8;
              }
              break;
          }
        }
        else if ((char)v14 <= 62)
        {
          if ((char)v14 != 34)
          {
            if ((char)v14 == 39)
            {
              std::string::value_type v24 = 39;
              goto LABEL_62;
            }
            goto LABEL_100;
          }
          std::string::value_type v24 = 34;
        }
        else
        {
          if ((char)v14 == 63) {
            goto LABEL_100;
          }
          if ((char)v14 != 92)
          {
            if ((char)v14 == 97)
            {
              std::string::value_type v24 = 7;
              goto LABEL_62;
            }
LABEL_100:
            std::string::value_type v24 = 63;
            goto LABEL_62;
          }
          std::string::value_type v24 = 92;
        }
LABEL_62:
        std::string::push_back(this, v24);
      }
    }
    else
    {
LABEL_29:
      if ((a1[23] & 0x80u) == 0) {
        __int16 v25 = a1;
      }
      else {
        __int16 v25 = *(unsigned __int8 **)a1;
      }
      if (v12 != *v25 || (uint64_t v10 = v13, v11[2]))
      {
        std::string::push_back(this, v12);
        uint64_t v10 = v13;
      }
    }
  }
  if (v10[1]) {
    goto LABEL_29;
  }
}

void sub_2135EC9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a18);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::io::ReadHexDigits(wireless_diagnostics::google::protobuf::io *this, const char *a2, unsigned int *a3, unsigned int *a4)
{
  *a3 = 0;
  if (!a2) {
    return 0;
  }
  if ((int)a2 < 1) {
    return 1;
  }
  unsigned int v4 = 0;
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io *)((char *)this + (int)a2);
  do
  {
    int v6 = *(char *)this;
    BOOL v7 = *(unsigned char *)this != 0;
    if (!*(unsigned char *)this) {
      break;
    }
    int v8 = 16 * v4;
    unsigned int v9 = v6 - 48;
    unsigned int v10 = v6 - 97;
    if ((v6 - 65) >= 0x1A) {
      int v11 = -1;
    }
    else {
      int v11 = v6 - 55;
    }
    unsigned int v12 = v6 - 87;
    if (v10 > 0x19) {
      unsigned int v12 = v11;
    }
    if (v9 <= 9) {
      unsigned int v12 = v9;
    }
    unsigned int v4 = v12 + v8;
    *a3 = v4;
    this = (wireless_diagnostics::google::protobuf::io *)((char *)this + 1);
  }
  while (this < v5);
  return v7;
}

wireless_diagnostics::google::protobuf::DynamicMessage *wireless_diagnostics::google::protobuf::DynamicMessage::DynamicMessage(wireless_diagnostics::google::protobuf::DynamicMessage *this, const wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo *a2)
{
  *(void *)this = &unk_26C3F8DE8;
  *((void *)this + 1) = a2;
  *((_DWORD *)this + 4) = 0;
  uint64_t v3 = *((void *)a2 + 4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::DynamicMessage *)((char *)this + *((int *)a2 + 2)));
  uint64_t v4 = *(int *)(*((void *)this + 1) + 12);
  if (v4 != -1) {
    wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::DynamicMessage *)((char *)this + v4));
  }
  if (*(int *)(v3 + 44) >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(v3 + 48);
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = *(int *)(*(void *)(v8 + 40) + 4 * v6);
      unsigned int v10 = (char *)this + v9;
      switch(*(_DWORD *)(v7 + v5 + 44))
      {
        case 1:
          uint64_t v15 = v7 + v5;
          if (*(_DWORD *)(v15 + 48) == 3) {
            goto LABEL_21;
          }
          *(void *)unsigned int v10 = *(void *)(v15 + 112);
          break;
        case 2:
          uint64_t v17 = v7 + v5;
          if (*(_DWORD *)(v17 + 48) == 3) {
            goto LABEL_21;
          }
          *(_DWORD *)unsigned int v10 = *(_DWORD *)(v17 + 112);
          break;
        case 3:
        case 4:
        case 6:
        case 0x10:
        case 0x12:
          uint64_t v13 = v7 + v5;
          if (*(_DWORD *)(v13 + 48) == 3) {
            goto LABEL_21;
          }
          goto LABEL_9;
        case 5:
        case 7:
        case 0xD:
        case 0xF:
        case 0x11:
          uint64_t v11 = v7 + v5;
          if (*(_DWORD *)(v11 + 48) == 3) {
            goto LABEL_21;
          }
          int v12 = *(_DWORD *)(v11 + 112);
          goto LABEL_15;
        case 8:
          uint64_t v18 = v7 + v5;
          if (*(_DWORD *)(v18 + 48) == 3) {
            goto LABEL_21;
          }
          *unsigned int v10 = *(unsigned char *)(v18 + 112);
          break;
        case 9:
        case 0xC:
          if (*(_DWORD *)(v7 + v5 + 48) == 3) {
            goto LABEL_26;
          }
          BOOL v19 = *(wireless_diagnostics::google::protobuf::DynamicMessage **)(v8 + 56);
          if (v19 == this || v19 == 0)
          {
            uint64_t v13 = v7 + v5;
LABEL_9:
            uint64_t v14 = *(void *)(v13 + 112);
          }
          else
          {
            uint64_t v14 = *(void *)((char *)v19 + v9);
          }
          *(void *)unsigned int v10 = v14;
          break;
        case 0xA:
        case 0xB:
          if (*(_DWORD *)(v7 + v5 + 48) != 3) {
            goto LABEL_22;
          }
LABEL_26:
          *(void *)unsigned int v10 = 0;
          *((void *)v10 + 1) = 0;
          *((_DWORD *)v10 + 4) = 0;
          break;
        case 0xE:
          uint64_t v16 = v7 + v5;
          if (*(_DWORD *)(v16 + 48) == 3)
          {
LABEL_21:
            *((void *)v10 + 1) = 0;
LABEL_22:
            *(void *)unsigned int v10 = 0;
          }
          else
          {
            int v12 = *(_DWORD *)(*(void *)(v16 + 112) + 16);
LABEL_15:
            *(_DWORD *)unsigned int v10 = v12;
          }
          break;
        default:
          break;
      }
      ++v6;
      v5 += 120;
    }
    while (v6 < *(int *)(v3 + 44));
  }
  return this;
}

void sub_2135ECCA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DynamicMessage::~DynamicMessage(wireless_diagnostics::google::protobuf::DynamicMessage *this)
{
  *(void *)this = &unk_26C3F8DE8;
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = *(void *)(v2 + 32);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::DynamicMessage *)((char *)this + *(int *)(v2 + 8)));
  uint64_t v4 = *(int *)(*((void *)this + 1) + 12);
  if (v4 != -1) {
    MEMORY[0x21668D5C0]((char *)this + v4);
  }
  if (*(int *)(v3 + 44) >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(v3 + 48);
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = (int *)((char *)this + *(int *)(*(void *)(v8 + 40) + 4 * v6));
      int v10 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + v5 + 44)];
      if (*(_DWORD *)(v7 + v5 + 48) == 3)
      {
        switch(*(_DWORD *)(v7 + v5 + 44))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(void *)v9) {
              goto LABEL_27;
            }
            break;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            if (*(void *)v9) {
              goto LABEL_27;
            }
            break;
          case 8:
            if (*(void *)v9) {
LABEL_27:
            }
              MEMORY[0x21668DB40]();
            break;
          case 9:
          case 0xC:
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v9);
            break;
          case 0xA:
          case 0xB:
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)v9);
            break;
          default:
            break;
        }
      }
      else if (v10 == 10)
      {
        uint64_t v14 = *(wireless_diagnostics::google::protobuf::DynamicMessage **)(v8 + 56);
        if (v14 != this && v14 != 0)
        {
          uint64_t v16 = *(void *)v9;
          if (v16) {
            (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
          }
        }
      }
      else if (v10 == 9)
      {
        uint64_t v11 = *(void *)v9;
        uint64_t v12 = *(void *)(v7 + v5 + 112);
        if (*(void *)v9 && v11 != v12)
        {
          if (*(char *)(v11 + 23) < 0) {
            operator delete(*(void **)v11);
          }
          MEMORY[0x21668DB60](v11, 0x1012C40EC159624);
        }
      }
      ++v6;
      v5 += 120;
    }
    while (v6 < *(int *)(v3 + 44));
  }

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::DynamicMessage::~DynamicMessage(this);

  JUMPOUT(0x21668DB60);
}

void wireless_diagnostics::google::protobuf::DynamicMessage::CrossLinkPrototypes(wireless_diagnostics::google::protobuf::DynamicMessage *this)
{
  uint64_t v2 = (void *)*((void *)this + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::DynamicMessage *)v2[7];
  if (v3 != this && v3 != 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
    uint64_t v2 = (void *)*((void *)this + 1);
  }
  uint64_t v5 = v2[4];
  int v6 = *(_DWORD *)(v5 + 44);
  if (v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::DynamicMessageFactory *)v2[2];
    do
    {
      uint64_t v10 = *(void *)(v5 + 48);
      if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + v7 + 44)] == 10
        && *(_DWORD *)(v10 + v7 + 48) != 3)
      {
        uint64_t v11 = *(int *)(*(void *)(*((void *)this + 1) + 40) + 4 * v8);
        *(void *)((char *)this + v11) = wireless_diagnostics::google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v9, *(const wireless_diagnostics::google::protobuf::Descriptor **)(v10 + v7 + 72));
        int v6 = *(_DWORD *)(v5 + 44);
      }
      ++v8;
      v7 += 120;
    }
    while (v8 < v6);
  }
}

void sub_2135ED058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(wireless_diagnostics::google::protobuf::DynamicMessageFactory *this, const wireless_diagnostics::google::protobuf::Descriptor *a2)
{
  uint64_t v9 = a2;
  if (*((unsigned char *)this + 16)
    && (uint64_t v3 = *(wireless_diagnostics::google::protobuf::MessageFactory **)(*((void *)a2 + 2) + 16),
        uint64_t v4 = (wireless_diagnostics::google::protobuf::MessageFactory *)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(this),
        v3 == v4))
  {
    uint64_t v8 = *(uint64_t (**)(void))(*(void *)wireless_diagnostics::google::protobuf::MessageFactory::generated_factory(v4)
                             + 16);
    return v8();
  }
  else
  {
    uint64_t v5 = *((void *)this + 3);
    uint64_t v10 = &v9;
    uint64_t v6 = std::__hash_table<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,std::__unordered_map_hasher<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,std::piecewise_construct_t const&,std::tuple<wireless_diagnostics::google::protobuf::Descriptor const* const&>,std::tuple<>>(v5, (unint64_t *)&v9, (uint64_t)&std::piecewise_construct, &v10)[3];
    if (!v6) {
      operator new();
    }
    return *(void *)(v6 + 56);
  }
}

void sub_2135ED470(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10F1C40A2C4A384);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::DynamicMessage *wireless_diagnostics::google::protobuf::DynamicMessage::New(wireless_diagnostics::google::protobuf::DynamicMessage *this)
{
  uint64_t v2 = operator new(**((int **)this + 1));
  uint64_t v3 = (const wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo *)*((void *)this + 1);
  bzero(v2, *(int *)v3);

  return wireless_diagnostics::google::protobuf::DynamicMessage::DynamicMessage((wireless_diagnostics::google::protobuf::DynamicMessage *)v2, v3);
}

uint64_t wireless_diagnostics::google::protobuf::DynamicMessage::GetCachedSize(wireless_diagnostics::google::protobuf::DynamicMessage *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t wireless_diagnostics::google::protobuf::DynamicMessage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DynamicMessage::GetMetadata(wireless_diagnostics::google::protobuf::DynamicMessage *this)
{
  return *(void *)(*((void *)this + 1) + 32);
}

void wireless_diagnostics::google::protobuf::DynamicMessageFactory::DynamicMessageFactory(wireless_diagnostics::google::protobuf::DynamicMessageFactory *this)
{
  *(void *)this = &unk_26C3F9608;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 16) = 0;
  operator new();
}

void sub_2135ED5A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DynamicMessageFactory::PrototypeMap>::~scoped_ptr(v2);
  wireless_diagnostics::google::protobuf::MessageFactory::~MessageFactory(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DynamicMessageFactory::DynamicMessageFactory(wireless_diagnostics::google::protobuf::DynamicMessageFactory *this, const wireless_diagnostics::google::protobuf::DescriptorPool *a2)
{
  *(void *)this = &unk_26C3F9608;
  *((void *)this + 1) = a2;
  *((unsigned char *)this + 16) = 0;
  operator new();
}

void sub_2135ED64C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DynamicMessageFactory::PrototypeMap>::~scoped_ptr(v2);
  wireless_diagnostics::google::protobuf::MessageFactory::~MessageFactory(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(wireless_diagnostics::google::protobuf::DynamicMessageFactory *this)
{
  *(void *)this = &unk_26C3F9608;
  uint64_t v2 = (uint64_t *)((char *)this + 24);
  for (uint64_t i = *(void **)(*((void *)this + 3) + 16); i; uint64_t i = (void *)*i)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo *)i[3];
    if (v4)
    {
      wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(v4);
      MEMORY[0x21668DB60]();
    }
  }
  MEMORY[0x21668D7D0]((char *)this + 32);
  wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DynamicMessageFactory::PrototypeMap>::~scoped_ptr(v2);

  wireless_diagnostics::google::protobuf::MessageFactory::~MessageFactory(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::DynamicMessageFactory::GetPrototype(wireless_diagnostics::google::protobuf::DynamicMessageFactory *this, const wireless_diagnostics::google::protobuf::Descriptor *a2)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::DynamicMessageFactory *)((char *)this + 32);
  wireless_diagnostics::google::protobuf::internal::Mutex::Lock((wireless_diagnostics::google::protobuf::DynamicMessageFactory *)((char *)this + 32));
  PrototypeNoLocuint64_t k = wireless_diagnostics::google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(this, a2);
  wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v4);
  return PrototypeNoLock;
}

void sub_2135ED7A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::Message::GetReflection(wireless_diagnostics::google::protobuf::Message *this)
{
  (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this);
  return v1;
}

void wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo::~TypeInfo(wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo *this)
{
  uint64_t v2 = *((void *)this + 7);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 6);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 5);
  if (v4) {
    MEMORY[0x21668DB40](v4, 0x1000C8052888210);
  }
}

uint64_t *wireless_diagnostics::google::protobuf::internal::scoped_ptr<wireless_diagnostics::google::protobuf::DynamicMessageFactory::PrototypeMap>::~scoped_ptr(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    uint64_t v3 = std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table(v2);
    MEMORY[0x21668DB60](v3, 0x10A0C408EF24B1CLL);
  }
  return a1;
}

void *std::__hash_table<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,std::__unordered_map_hasher<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::DynamicMessage::TypeInfo const*>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,std::piecewise_construct_t const&,std::tuple<wireless_diagnostics::google::protobuf::Descriptor const* const&>,std::tuple<>>(uint64_t a1, unint64_t *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (void *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (i[2] == v7) {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v7;
  i[2] = **a4;
  i[3] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  int v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *uint64_t i = *v20;
LABEL_38:
    *int v20 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v21 = *(void *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    int v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_2135EDAE4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::internal::UnknownFieldSetFieldSkipper::SkipField(void ****this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, a3, this[1], a4);
}

BOOL wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, void ***a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  Varint64Fallbacuint64_t k = 0;
  int v6 = (int)a2;
  unsigned int v8 = a2 >> 3;
  switch(a2 & 7)
  {
    case 0:
      *(void *)uint64_t v19 = 0;
      uint8x8_t v9 = (char *)*((void *)this + 1);
      if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
      {
        Varint64Fallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v19);
        if (!a3) {
          return Varint64Fallback;
        }
      }
      else
      {
        *(void *)uint64_t v19 = *v9;
        *((void *)this + 1) = v9 + 1;
        Varint64Fallbacuint64_t k = 1;
        if (!a3) {
          return Varint64Fallback;
        }
      }
      if (Varint64Fallback) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(a3, v8, *(uint64_t *)v19);
      }
      return Varint64Fallback;
    case 1:
      *(void *)uint64_t v19 = 0;
      LittleEndian64Fallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19);
      Varint64Fallbacuint64_t k = LittleEndian64Fallback;
      if (a3 && LittleEndian64Fallback) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed64(a3, v8, *(uint64_t *)v19);
      }
      return Varint64Fallback;
    case 2:
      v19[0] = 0;
      uint64_t v11 = (char *)*((void *)this + 1);
      if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v19))return 0; {
      }
        }
      else
      {
        v19[0] = *v11;
        *((void *)this + 1) = v11 + 1;
      }
      if (a3) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddLengthDelimited((wireless_diagnostics::google::protobuf::UnknownFieldSet *)a3);
      }
      return (wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this) & 1) != 0;
    case 3:
      int v12 = *((_DWORD *)this + 14);
      int v13 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v12 + 1;
      if (v12 >= v13) {
        return 0;
      }
      if (a3) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddGroup((wireless_diagnostics::google::protobuf::UnknownFieldSet *)a3);
      }
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipMessage(this, 0, 0)) {
        return 0;
      }
      int v15 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)this + 14) = v17;
      }
      return *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
    case 5:
      v19[0] = 0;
      LittleEndian32Fallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v19);
      Varint64Fallbacuint64_t k = LittleEndian32Fallback;
      if (a3 && LittleEndian32Fallback) {
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddFixed32(a3, v8, v19[0]);
      }
      return Varint64Fallback;
    default:
      return Varint64Fallback;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::UnknownFieldSetFieldSkipper::SkipMessage(void ****this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::UnknownFieldSet *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormat::SkipMessage(a2, this[1], a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::SkipMessage(wireless_diagnostics::google::protobuf::internal::WireFormat *this, void ***a2, wireless_diagnostics::google::protobuf::UnknownFieldSet *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  do
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    if (TagFallback) {
      BOOL v8 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v8 = 1;
    }
    uint64_t v9 = v8;
  }
  while (!v8
       && wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a2, a4));
  return v9;
}

void wireless_diagnostics::google::protobuf::internal::UnknownFieldSetFieldSkipper::SkipUnknownEnum(void ****this, int a2, int a3)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v2 = (unsigned __int8 *)*((void *)this + 1);
  if ((unint64_t)v2 >= *((void *)this + 2) || (char)*v2 < 0) {
    return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a2);
  }
  *a2 = *v2;
  *((void *)this + 1) = v2 + 1;
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  uint64_t v2 = (unsigned __int8 *)*((void *)this + 1);
  if ((unint64_t)v2 >= *((void *)this + 2) || (char)*v2 < 0) {
    return wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, a2);
  }
  *a2 = *v2;
  *((void *)this + 1) = v2 + 1;
  return 1;
}

uint64_t **wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(uint64_t **this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  unint64_t v4 = this;
  uint64_t v5 = 0;
  for (uint64_t i = 0; ; ++i)
  {
    unint64_t v7 = *v4;
    if (*v4) {
      unint64_t v8 = (unint64_t)(v7[1] - *v7) >> 4;
    }
    else {
      LODWORD(v8) = 0;
    }
    if (i >= (int)v8) {
      break;
    }
    uint64_t v9 = *v7;
    switch(*(_DWORD *)(*v7 + v5) >> 29)
    {
      case 0:
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        break;
      case 1:
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(a2);
        break;
      case 2:
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2);
        break;
      case 3:
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        uint64_t v10 = v9 + v5;
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        uint64_t v12 = *(void *)(v10 + 8);
        if (*(char *)(v12 + 23) >= 0) {
          int v13 = *(const void **)(v10 + 8);
        }
        else {
          int v13 = *(const void **)v12;
        }
        this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRaw(a2, v13);
        break;
      case 4:
        wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(*(wireless_diagnostics::google::protobuf::internal::WireFormat **)(v9 + v5 + 8), a2, v11);
        this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        break;
      default:
        break;
    }
    v5 += 16;
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(uint64_t **this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  while (1)
  {
    unint64_t v8 = *this;
    if (*this) {
      unint64_t v9 = (unint64_t)(v8[1] - *v8) >> 4;
    }
    else {
      LODWORD(v9) = 0;
    }
    if (v7 >= (int)v9) {
      return a2;
    }
    uint64_t v10 = *v8;
    unsigned int v11 = *(_DWORD *)(*v8 + v6);
    switch(v11 >> 29)
    {
      case 0u:
        uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + v6 + 8);
        int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v11);
        if (v13 > 0x7F)
        {
          if (v13 >> 14)
          {
            float v14 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (uint64_t)a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(unsigned char *)a2 = (8 * v11) | 0x80;
            *((unsigned char *)a2 + 1) = v13 >> 7;
            float v14 = (unsigned __int8 *)a2 + 2;
          }
        }
        else
        {
          *(unsigned char *)a2 = 8 * v11;
          float v14 = (unsigned __int8 *)a2 + 1;
        }
        int v26 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (uint64_t)v14, v14);
        goto LABEL_47;
      case 1u:
        int v15 = *(_DWORD *)(v10 + v6 + 8);
        BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v11) | 5);
        if (v16 > 0x7F)
        {
          if (v16 >> 14)
          {
            int v17 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (uint64_t)a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(unsigned char *)a2 = (8 * v11) | 0x85;
            *((unsigned char *)a2 + 1) = (8 * v11) >> 7;
            int v17 = (char *)a2 + 2;
          }
        }
        else
        {
          *(unsigned char *)a2 = (8 * v11) | 5;
          int v17 = (char *)a2 + 1;
        }
        *(_DWORD *)int v17 = v15;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v17 + 4);
        goto LABEL_48;
      case 2u:
        uint64_t v18 = *(void *)(v10 + v6 + 8);
        uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v11) | 1);
        if (v19 > 0x7F)
        {
          if (v19 >> 14)
          {
            int v20 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (uint64_t)a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(unsigned char *)a2 = (8 * v11) | 0x81;
            *((unsigned char *)a2 + 1) = (8 * v11) >> 7;
            int v20 = (char *)a2 + 2;
          }
        }
        else
        {
          *(unsigned char *)a2 = (8 * v11) | 1;
          int v20 = (char *)a2 + 1;
        }
        *(void *)int v20 = v18;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v20 + 8);
        goto LABEL_48;
      case 3u:
        uint64_t v21 = *(void *)(v10 + v6 + 8);
        int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v11) | 2);
        if (v22 > 0x7F)
        {
          if (v22 >> 14)
          {
            std::string::value_type v23 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (uint64_t)a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(unsigned char *)a2 = (8 * v11) | 0x82;
            *((unsigned char *)a2 + 1) = (8 * v11) >> 7;
            std::string::value_type v23 = (unsigned __int8 *)a2 + 2;
          }
        }
        else
        {
          *(unsigned char *)a2 = (8 * v11) | 2;
          std::string::value_type v23 = (unsigned __int8 *)a2 + 1;
        }
        if (*(char *)(v21 + 23) < 0) {
          int v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
        }
        else {
          int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
        }
        if (v27 > 0x7F)
        {
          uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (uint64_t)v23, v23);
        }
        else
        {
          unsigned __int8 *v23 = v27;
          uint64_t v28 = (uint64_t)(v23 + 1);
        }
        int v29 = *(char *)(v21 + 23);
        if (v29 >= 0) {
          unsigned __int8 v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21;
        }
        else {
          unsigned __int8 v30 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v21;
        }
        if (v29 >= 0) {
          std::string::value_type v31 = (const void *)*(unsigned __int8 *)(v21 + 23);
        }
        else {
          std::string::value_type v31 = (const void *)*(unsigned int *)(v21 + 8);
        }
        int v26 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v30, v31, v28, a4);
        goto LABEL_47;
      case 4u:
        std::string::value_type v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v11) | 3);
        if (v24 > 0x7F)
        {
          if (v24 >> 14)
          {
            __int16 v25 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (uint64_t)a2, (unsigned __int8 *)a2);
          }
          else
          {
            *(unsigned char *)a2 = (8 * v11) | 0x83;
            *((unsigned char *)a2 + 1) = (8 * v11) >> 7;
            __int16 v25 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
          }
        }
        else
        {
          *(unsigned char *)a2 = (8 * v11) | 3;
          __int16 v25 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
        }
        int v32 = (int *)(v10 + v6);
        uint64_t v33 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(*((wireless_diagnostics::google::protobuf::internal::WireFormat **)v32 + 1), v25, (unsigned __int8 *)v25);
        int v34 = *v32;
        uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * *v32) | 4u);
        if (v35 > 0x7F)
        {
          if (v35 >> 14)
          {
            int v26 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, (uint64_t)v33, v33);
LABEL_47:
            a2 = v26;
          }
          else
          {
            unsigned __int8 *v33 = (8 * *(unsigned char *)v32) | 0x84;
            v33[1] = (8 * v34) >> 7;
            a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v33 + 2);
          }
        }
        else
        {
          unsigned __int8 *v33 = (8 * *(unsigned char *)v32) | 4;
          a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v33 + 1);
        }
LABEL_48:
        ++v7;
        v6 += 16;
        break;
      default:
        goto LABEL_48;
    }
  }
}

void **wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(void **this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  unint64_t v4 = this;
  uint64_t v5 = 0;
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v7 = *v4;
    if (*v4) {
      uint64_t v8 = (v7[1] - *v7) >> 4;
    }
    else {
      LODWORD(v8) = 0;
    }
    if (i >= (int)v8) {
      break;
    }
    unint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownField *)(*v7 + v5);
    if (*(_DWORD *)v9 >> 29 == 3)
    {
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
      wireless_diagnostics::google::protobuf::UnknownField::SerializeLengthDelimitedNoTag(v9, a2);
      this = (void **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    }
    v5 += 16;
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItemsToArray(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v6 = 0;
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v8 = *(void **)this;
    if (*(void *)this) {
      uint64_t v9 = (v8[1] - *v8) >> 4;
    }
    else {
      LODWORD(v9) = 0;
    }
    if (i >= (int)v9) {
      break;
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownField *)(*v8 + v6);
    if (*(_DWORD *)v10 >> 29 == 3)
    {
      *(_WORD *)a2 = 4107;
      unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(_DWORD *)v10 & 0x1FFFFFFF);
      if (v11 > 0x7F)
      {
        uint64_t v12 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (uint64_t)a2 + 2, a3);
      }
      else
      {
        *((unsigned char *)a2 + 2) = *(_DWORD *)v10;
        uint64_t v12 = (unsigned __int8 *)a2 + 3;
      }
      *uint64_t v12 = 26;
      int v13 = (unsigned char *)wireless_diagnostics::google::protobuf::UnknownField::SerializeLengthDelimitedNoTagToArray(v10, v12 + 1, (uint64_t)a3, a4);
      *int v13 = 12;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v13 + 1);
    }
    v6 += 16;
  }
  return a2;
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(uint64_t **this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = *this;
    if (*this) {
      unint64_t v7 = (unint64_t)(v6[1] - *v6) >> 4;
    }
    else {
      LODWORD(v7) = 0;
    }
    if (v4 < (int)v7)
    {
      uint64_t v8 = *v6;
      unsigned int v9 = *(_DWORD *)(*v6 + v3);
      switch(v9 >> 29)
      {
        case 0u:
          uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v9);
          if (v10 >= 0x80) {
            int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
          }
          else {
            int v11 = 1;
          }
          uint64_t v5 = v11
             + v5
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + v3 + 8));
          goto LABEL_37;
        case 1u:
          uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v9) | 5);
          if (v12 >= 0x80) {
            int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
          }
          else {
            int v13 = 1;
          }
          uint64_t v5 = (v5 + v13 + 4);
          goto LABEL_37;
        case 2u:
          int v14 = 1;
          int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v9) | 1);
          if (v15 >= 0x80) {
            int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
          }
          uint64_t v5 = (v5 + v14 + 8);
          goto LABEL_37;
        case 3u:
          BOOL v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v9) | 2);
          if (v16 >= 0x80) {
            int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
          }
          else {
            int v17 = 1;
          }
          uint64_t v20 = v8 + v3;
          uint64_t v21 = *(void *)(v20 + 8);
          LODWORD(v22) = *(unsigned __int8 *)(v21 + 23);
          if (*(char *)(v21 + 23) < 0) {
            std::string::value_type v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
          }
          else {
            std::string::value_type v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
          }
          if (v23 >= 0x80)
          {
            int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
            uint64_t v21 = *(void *)(v20 + 8);
            LODWORD(v22) = *(unsigned __int8 *)(v21 + 23);
            if ((v22 & 0x80) != 0) {
LABEL_35:
            }
              uint64_t v22 = *(void *)(v21 + 8);
          }
          else
          {
            int v28 = 1;
            if ((v22 & 0x80) != 0) {
              goto LABEL_35;
            }
          }
          uint64_t v5 = (v17 + v5 + v28 + v22);
          goto LABEL_37;
        case 4u:
          uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * v9) | 3);
          if (v18 >= 0x80) {
            int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
          }
          else {
            int v19 = 1;
          }
          std::string::value_type v24 = (_DWORD *)(v8 + v3);
          int v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(*(wireless_diagnostics::google::protobuf::internal::WireFormat **)(v8 + v3 + 8), a2);
          int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * *v24) | 4u);
          if (v26 >= 0x80) {
            int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
          }
          else {
            int v27 = 1;
          }
          uint64_t v5 = (v19 + v5 + v25 + v27);
          goto LABEL_37;
        default:
LABEL_37:
          ++v4;
          v3 += 16;
          continue;
      }
    }
    return v5;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(uint64_t **this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  int v6 = *MEMORY[0x263F8C750];
  while (1)
  {
    unint64_t v7 = *this;
    if (*this) {
      unint64_t v8 = (unint64_t)(v7[1] - *v7) >> 4;
    }
    else {
      LODWORD(v8) = 0;
    }
    if (v4 >= (int)v8) {
      break;
    }
    uint64_t v9 = *v7;
    unsigned int v10 = *(_DWORD *)(*v7 + v3);
    if (v10 >> 29 == 3)
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v10 & 0x1FFFFFFF);
      if (v11 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      }
      else {
        int v12 = 1;
      }
      uint64_t v13 = *(void *)(v9 + v3 + 8);
      if (*(char *)(v13 + 23) < 0) {
        int v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v13 + 8);
      }
      else {
        int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
      }
      if (v14 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v15 = 1;
      }
      uint64_t v5 = (v6 + v5 + v12 + v14 + v15);
    }
    ++v4;
    v3 += 16;
  }
  return v5;
}

BOOL wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergePartial(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::Descriptor *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::io::CodedInputStream *))(*(void *)a2 + 152))(a2);
  uint64_t v7 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::io::CodedInputStream *))(*(void *)a2 + 144))(a2);
  while (1)
  {
    unint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
    }
    BOOL v10 = !TagFallback || (TagFallback & 7) == 4;
    BOOL v11 = v10;
    if (v10) {
      return v11;
    }
    if (v5)
    {
      uint64_t FieldByNumber = wireless_diagnostics::google::protobuf::Descriptor::FindFieldByNumber(v5, TagFallback >> 3);
      if (FieldByNumber) {
        goto LABEL_19;
      }
      if (wireless_diagnostics::google::protobuf::Descriptor::IsExtensionNumber(v5, TagFallback >> 3))
      {
        int v14 = (wireless_diagnostics::google::protobuf::internal::Mutex **)*((void *)this + 8);
        uint64_t v15 = v14
            ? wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(v14, v5, TagFallback >> 3): (*(uint64_t (**)(uint64_t, void))(*(void *)v7 + 536))(v7, TagFallback >> 3);
        uint64_t FieldByNumber = v15;
        if (v15) {
          goto LABEL_19;
        }
      }
      uint64_t FieldByNumber = 0;
      if (TagFallback != 11 || !*(unsigned char *)(*((void *)v5 + 4) + 64)) {
        goto LABEL_19;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeMessageSetItem(this, a2, v13) & 1) == 0) {
        return v11;
      }
    }
    else
    {
      uint64_t FieldByNumber = 0;
LABEL_19:
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeField((wireless_diagnostics::google::protobuf::internal::WireFormat *)TagFallback, FieldByNumber, a2, (char **)this, v6) & 1) == 0)return v11; {
    }
      }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeMessageSetItem(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  uint64_t v7 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::io::CodedInputStream *))(*(void *)a2 + 144))(a2);
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          BOOL v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
          }
          else
          {
            unint64_t TagFallback = *v10;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v10 + 1;
          }
          if ((int)TagFallback <= 25) {
            break;
          }
          if (TagFallback != 26) {
            goto LABEL_13;
          }
          if (v8)
          {
            char v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeField(v8, v9, a2, (char **)this, v6);
LABEL_14:
            if ((v12 & 1) == 0) {
              goto LABEL_48;
            }
          }
          else
          {
            __p[0] = 0;
            __p[1] = 0;
            uint64_t v34 = 0;
            unsigned int v25 = 0;
            uint64_t v15 = (char *)*((void *)this + 1);
            if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25))goto LABEL_38; {
            }
              }
            else
            {
              unsigned int v25 = *v15;
              *((void *)this + 1) = v15 + 1;
            }
            if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadString())
            {
              wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream();
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26);
              if (v34 >= 0) {
                uint64_t v20 = __p;
              }
              else {
                uint64_t v20 = (void **)__p[0];
              }
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRaw((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26, v20);
              MEMORY[0x21668D260](v26);
              MEMORY[0x21668D2A0](v24);
              char v21 = 1;
              goto LABEL_39;
            }
LABEL_38:
            char v21 = 0;
LABEL_39:
            if (SHIBYTE(v34) < 0) {
              operator delete(__p[0]);
            }
            unint64_t v8 = 0;
            if ((v21 & 1) == 0) {
              goto LABEL_48;
            }
          }
        }
        if (!TagFallback) {
          goto LABEL_48;
        }
        if (TagFallback == 12)
        {
          uint64_t v22 = 1;
          goto LABEL_49;
        }
        if (TagFallback != 16)
        {
LABEL_13:
          char v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, 0, v5);
          goto LABEL_14;
        }
        v24[0] = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v24))goto LABEL_48; {
          uint64_t v14 = v24[0];
          }
        }
        else
        {
          uint64_t v14 = *v13;
          v24[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 536))(v7, v14);
        unint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((8 * v14) | 2u);
        if (SHIBYTE(v37) < 0) {
          break;
        }
        if (HIBYTE(v37))
        {
          BOOL v16 = &v35;
          goto LABEL_29;
        }
      }
    }
    while (!v36);
    BOOL v16 = (unsigned char **)v35;
LABEL_29:
    wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)__p, v16);
    v26[0] = (char *)__p;
    v26[2] = 0;
    v27[0] = 0;
    v26[1] = 0;
    *(void *)((char *)v27 + 6) = 0;
    long long v28 = xmmword_213619380;
    int v17 = *MEMORY[0x263F8C738];
    int v29 = 0;
    int v30 = v17;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v26);
    char v19 = wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeField(v8, v9, a2, v26, v18);
    if ((v19 & 1) == 0) {
      break;
    }
    if (SHIBYTE(v37) < 0)
    {
      *uint64_t v35 = 0;
      uint64_t v36 = 0;
    }
    else
    {
      LOBYTE(v35) = 0;
      HIBYTE(v37) = 0;
    }
    MEMORY[0x21668D180](v26);
    MEMORY[0x21668D0D0](__p);
    if ((v19 & 1) == 0) {
      goto LABEL_48;
    }
  }
  MEMORY[0x21668D180](v26);
  MEMORY[0x21668D0D0](__p);
LABEL_48:
  uint64_t v22 = 0;
LABEL_49:
  if (SHIBYTE(v37) < 0) {
    operator delete(v35);
  }
  return v22;
}

void sub_2135EECE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  MEMORY[0x21668D2A0](&a12);
  if (a30 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v30 - 89) < 0) {
    operator delete(*(void **)(v30 - 112));
  }
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergeField(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, char **a4, wireless_diagnostics::google::protobuf::io::CodedInputStream *a5)
{
  uint64_t v9 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a3 + 144))(a3);
  uint64_t v10 = v9;
  if (a2)
  {
    uint64_t v11 = *(unsigned int *)(a2 + 44);
    if ((this & 7) == *(_DWORD *)(MEMORY[0x263F8C748] + 4 * v11))
    {
      switch((int)v11)
      {
        case 1:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
          v13.n128_u64[0] = (unint64_t)__p;
          uint64_t v14 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, __n128))(v14 + 488))(v10, a3, a2, v13);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, __n128))(v14 + 232))(v10, a3, a2, v13);
          }
          return 1;
        case 2:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          v19.n128_u32[0] = __p;
          uint64_t v20 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, __n128))(v20 + 480))(v10, a3, a2, v19);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, __n128))(v20 + 224))(v10, a3, a2, v19);
          }
          return 1;
        case 3:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
          goto LABEL_66;
        case 4:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
          goto LABEL_35;
        case 5:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          goto LABEL_64;
        case 6:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
LABEL_35:
          uint64_t v21 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void *))(v21 + 472))(v10, a3, a2, __p);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void *))(v21 + 216))(v10, a3, a2, __p);
          }
          return 1;
        case 7:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          goto LABEL_57;
        case 8:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          uint64_t v22 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, BOOL))(v22 + 496))(v10, a3, a2, __p != 0);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, BOOL))(v22 + 240))(v10, a3, a2, __p != 0);
          }
          return 1;
        case 9:
          std::string __p = 0;
          uint64_t v58 = 0;
          uint64_t v59 = 0;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString() & 1) == 0) {
            goto LABEL_75;
          }
          uint64_t v23 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            std::string::value_type v24 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void **))(v23 + 504);
          }
          else {
            std::string::value_type v24 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void **))(v23 + 248);
          }
          goto LABEL_54;
        case 10:
          unsigned int v25 = a4[9];
          uint64_t v26 = *(void *)v9;
          if (*(_DWORD *)(a2 + 48) == 3) {
            uint64_t v27 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, char *))(v26 + 520))(v9, a3, a2, v25);
          }
          else {
            uint64_t v27 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, char *))(v26 + 264))(v9, a3, a2, v25);
          }
          return (wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadGroup(this >> 3, a4, v27) & 1) != 0;
        case 11:
          long long v28 = a4[9];
          uint64_t v29 = *(void *)v9;
          if (*(_DWORD *)(a2 + 48) == 3) {
            uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)(*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, char *))(v29 + 520))(v9, a3, a2, v28);
          }
          else {
            uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)(*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, char *))(v29 + 264))(v9, a3, a2, v28);
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)a4, v30, v31);
          if (result) {
            return 1;
          }
          return result;
        case 12:
          std::string __p = 0;
          uint64_t v58 = 0;
          uint64_t v59 = 0;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes() & 1) == 0)
          {
LABEL_75:
            if (SHIBYTE(v59) < 0) {
              operator delete(__p);
            }
            return 0;
          }
          uint64_t v32 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            std::string::value_type v24 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void **))(v32 + 504);
          }
          else {
            std::string::value_type v24 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void **))(v32 + 248);
          }
LABEL_54:
          (*v24)(v10, a3, a2, &__p);
          if (SHIBYTE(v59) < 0) {
            operator delete(__p);
          }
          break;
        case 13:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
LABEL_57:
          uint64_t v33 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void))(v33 + 464))(v10, a3, a2, __p);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void))(v33 + 208))(v10, a3, a2, __p);
          }
          return 1;
        case 14:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          int v34 = (int)__p;
          uint64_t ValueByNumber = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(*(wireless_diagnostics::google::protobuf::EnumDescriptor **)(a2 + 80), (int)__p);
          if (ValueByNumber)
          {
            uint64_t v36 = *(void *)v10;
            if (*(_DWORD *)(a2 + 48) == 3) {
              (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(v36 + 512))(v10, a3, a2, ValueByNumber);
            }
            else {
              (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(v36 + 256))(v10, a3, a2, ValueByNumber);
            }
          }
          else
          {
            long long v56 = (void ***)(*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)v10 + 24))(v10, a3);
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v56, this >> 3, v34);
          }
          return 1;
        case 15:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
LABEL_64:
          uint64_t v37 = __p;
          goto LABEL_69;
        case 16:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
LABEL_66:
          unint64_t v38 = (unint64_t)__p;
          goto LABEL_73;
        case 17:
          LODWORD(__p) = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p);
          if (!result) {
            return result;
          }
          uint64_t v37 = -(__p & 1) ^ (__p >> 1);
LABEL_69:
          uint64_t v39 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(v39 + 448))(v10, a3, a2, v37);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(v39 + 192))(v10, a3, a2, v37);
          }
          return 1;
        case 18:
          std::string __p = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p);
          if (!result) {
            return result;
          }
          unint64_t v38 = -(uint64_t)(__p & 1) ^ ((unint64_t)__p >> 1);
LABEL_73:
          uint64_t v40 = *(void *)v10;
          if (*(_DWORD *)(a2 + 48) == 3) {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, unint64_t))(v40 + 456))(v10, a3, a2, v38);
          }
          else {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, unint64_t))(v40 + 200))(v10, a3, a2, v38);
          }
          return 1;
        default:
          return 1;
      }
      return 1;
    }
    if ((this & 7) == 2 && (v11 - 13) <= 0xFFFFFFFB && *(_DWORD *)(a2 + 48) == 3)
    {
      unsigned int v60 = 0;
      BOOL v16 = a4[1];
      if (v16 >= a4[2] || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, &v60))return 0; {
      }
        }
      else
      {
        unsigned int v60 = *v16;
        a4[1] = v16 + 1;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4);
      switch(*(_DWORD *)(a2 + 44))
      {
        case 1:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            std::string __p = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, double))(*(void *)v10 + 488))(v10, a3, a2, *(double *)&__p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 2:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            LODWORD(__p) = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, float))(*(void *)v10 + 480))(v10, a3, a2, *(float *)&__p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 3:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            std::string __p = 0;
            int v41 = a4[1];
            if (v41 >= a4[2] || *v41 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
              unint64_t v42 = (unint64_t)__p;
              }
            }
            else
            {
              unint64_t v42 = *v41;
              a4[1] = v41 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, unint64_t))(*(void *)v10 + 456))(v10, a3, a2, v42);
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 4:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            std::string __p = 0;
            char v43 = a4[1];
            if (v43 >= a4[2] || *v43 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
            }
              }
            else
            {
              std::string __p = (void *)*v43;
              a4[1] = v43 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(*(void *)v10 + 472))(v10, a3, a2);
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 5:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            LODWORD(__p) = 0;
            unsigned int v44 = a4[1];
            if (v44 >= a4[2] || *v44 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
              uint64_t v45 = __p;
              }
            }
            else
            {
              uint64_t v45 = *v44;
              a4[1] = v44 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(*(void *)v10 + 448))(v10, a3, a2, v45);
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 6:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            std::string __p = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void *))(*(void *)v10 + 472))(v10, a3, a2, __p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 7:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            LODWORD(__p) = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void))(*(void *)v10 + 464))(v10, a3, a2, __p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 8:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            LODWORD(__p) = 0;
            int v46 = a4[1];
            if (v46 >= a4[2] || *v46 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
              int v47 = (int)__p;
              }
            }
            else
            {
              int v47 = *v46;
              a4[1] = v46 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, BOOL))(*(void *)v10 + 496))(v10, a3, a2, v47 != 0);
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          return 0;
        case 0xD:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            LODWORD(__p) = 0;
            int v48 = a4[1];
            if (v48 >= a4[2] || *v48 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
            }
              }
            else
            {
              LODWORD(__p) = *v48;
              a4[1] = v48 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t))(*(void *)v10 + 464))(v10, a3, a2);
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 0xE:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            LODWORD(__p) = 0;
            std::string::size_type v49 = a4[1];
            if (v49 >= a4[2] || *v49 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
              int v50 = (int)__p;
              }
            }
            else
            {
              int v50 = *v49;
              a4[1] = v49 + 1;
            }
            uint64_t v51 = wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(*(wireless_diagnostics::google::protobuf::EnumDescriptor **)(a2 + 80), v50);
            if (v51) {
              (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(*(void *)v10 + 512))(v10, a3, a2, v51);
            }
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 0xF:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            LODWORD(__p) = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void))(*(void *)v10 + 448))(v10, a3, a2, __p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 0x10:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          while (1)
          {
            std::string __p = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void *))(*(void *)v10 + 456))(v10, a3, a2, __p);
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) <= 0) {
              goto LABEL_170;
            }
          }
        case 0x11:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          do
          {
            LODWORD(__p) = 0;
            std::string::size_type v52 = a4[1];
            if (v52 >= a4[2] || *v52 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unsigned int *)&__p))return 0; {
              unsigned int v53 = __p;
              }
            }
            else
            {
              unsigned int v53 = *v52;
              a4[1] = v52 + 1;
            }
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void))(*(void *)v10 + 448))(v10, a3, a2, -(v53 & 1) ^ (v53 >> 1));
          }
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
          goto LABEL_170;
        case 0x12:
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) < 1) {
            goto LABEL_170;
          }
          break;
        default:
          goto LABEL_170;
      }
      do
      {
        std::string __p = 0;
        uint64_t v54 = a4[1];
        if (v54 >= a4[2] || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4, (unint64_t *)&__p))return 0; {
          unint64_t v55 = (unint64_t)__p;
          }
        }
        else
        {
          unint64_t v55 = *v54;
          a4[1] = v54 + 1;
        }
        (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, unint64_t))(*(void *)v10 + 456))(v10, a3, a2, -(uint64_t)(v55 & 1) ^ (v55 >> 1));
      }
      while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4) > 0);
LABEL_170:
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit((wireless_diagnostics::google::protobuf::io::CodedInputStream *)a4);
      return 1;
    }
  }
  int v17 = (void ***)(*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)v9 + 24))(v9, a3);

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField((wireless_diagnostics::google::protobuf::internal::WireFormat *)a4, this, v17, v18);
}

void sub_2135EFE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadGroup(int a1, _DWORD *a2, uint64_t a3)
{
  int v3 = a2[14];
  int v4 = a2[15];
  a2[14] = v3 + 1;
  if (v3 >= v4) {
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 64))(a3);
  if (result)
  {
    int v8 = a2[14];
    BOOL v9 = __OFSUB__(v8, 1);
    int v10 = v8 - 1;
    if (v10 < 0 == v9) {
      a2[14] = v10;
    }
    return a2[8] == ((8 * a1) | 4);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::MessageLite *a3)
{
  unsigned int v12 = 0;
  uint64_t v5 = (char *)*((void *)this + 1);
  if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v12 = *v5;
    *((void *)this + 1) = v5 + 1;
  }
  int v7 = *((_DWORD *)this + 14);
  int v8 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 14) = v7 + 1;
  if (v7 >= v8) {
    return 0;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  uint64_t result = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::io::CodedInputStream *, wireless_diagnostics::google::protobuf::internal::WireFormatLite *))(*(void *)a2 + 64))(a2, this);
  if (!result) {
    return result;
  }
  if (!*((unsigned char *)this + 36)) {
    return 0;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  int v9 = *((_DWORD *)this + 14);
  BOOL v10 = __OFSUB__(v9, 1);
  int v11 = v9 - 1;
  if (v11 < 0 == v10) {
    *((_DWORD *)this + 14) = v11;
  }
  return 1;
}

void wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::Message *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int)a2;
  uint64_t v7 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::WireFormat *, const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *, wireless_diagnostics::google::protobuf::io::CodedOutputStream *))(*(void *)this + 152))(this, a2, a3, a4);
  uint64_t v8 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::WireFormat *))(*(void *)this
                                                                                                 + 144))(this);
  int v10 = *((_DWORD *)a3 + 4);
  int v9 = *((_DWORD *)a3 + 5);
  std::string __p = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::WireFormat *, void **))(*(void *)v8 + 96))(v8, this, &__p);
  unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat **)__p;
  if (v21 != __p)
  {
    unint64_t v13 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeFieldWithCachedSizes(v12[v13++], this, a3, v11);
      unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat **)__p;
    }
    while (v13 < (v21 - (unsigned char *)__p) >> 3);
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*(void *)v8 + 16);
  if (*(unsigned char *)(*(void *)(v7 + 32) + 64))
  {
    uint64_t v15 = (void **)v14(v8, this);
    wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(v15, a3, v16);
  }
  else
  {
    int v17 = (uint64_t **)v14(v8, this);
    wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v17, a3, v18);
  }
  if (*((_DWORD *)a3 + 5) - *((_DWORD *)a3 + 4) != v9 + v5 - v10)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  if (__p)
  {
    uint64_t v21 = __p;
    operator delete(__p);
  }
}

void sub_2135F02A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p)
  {
    a17 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeFieldWithCachedSizes(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v7 = (uint64_t *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a2 + 144))(a2);
  int v9 = v7;
  if (*((unsigned char *)this + 52)
    && *(unsigned char *)(*(void *)(*((void *)this + 7) + 32) + 64)
    && wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 11)] == 10
    && *((_DWORD *)this + 12) != 3)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeMessageSetItemWithCachedSizes(this, a2, a3, v8);
  }
  else
  {
    uint64_t v10 = *v7;
    if (*((_DWORD *)this + 12) == 3) {
      int v11 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v10 + 48))(v7, a2, this);
    }
    else {
      int v11 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v10 + 40))(v7, a2, this);
    }
    int v12 = v11;
    uint64_t v13 = *((void *)this + 12);
    int v14 = *(unsigned __int8 *)(v13 + 44);
    if (*(unsigned char *)(v13 + 44)) {
      BOOL v15 = v11 < 1;
    }
    else {
      BOOL v15 = 1;
    }
    if (!v15)
    {
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
      wireless_diagnostics::google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v16);
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
LABEL_14:
      uint64_t v17 = 0;
      while (2)
      {
        switch(*((_DWORD *)this + 11))
        {
          case 1:
            uint64_t v18 = *v9;
            if (*((_DWORD *)this + 12) == 3)
            {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v18 + 320))(v9, a2, this, v17);
              if (v14) {
                goto LABEL_99;
              }
            }
            else
            {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v18 + 144))(v9, a2, this);
              if (v14) {
                goto LABEL_99;
              }
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), (uint64_t)a3, v20, v19);
            goto LABEL_107;
          case 2:
            uint64_t v21 = *v9;
            if (*((_DWORD *)this + 12) == 3)
            {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v21 + 312))(v9, a2, this, v17);
              if (v14) {
                goto LABEL_96;
              }
            }
            else
            {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v21 + 136))(v9, a2, this);
              if (v14) {
                goto LABEL_96;
              }
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), (uint64_t)a3, v23, v22);
            goto LABEL_107;
          case 3:
            uint64_t v24 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v25 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v24 + 288))(v9, a2, this, v17);
            }
            else {
              uint64_t v25 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v24 + 112))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_106;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v25, (uint64_t)a3, v26);
            goto LABEL_107;
          case 4:
            uint64_t v27 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v28 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v27 + 304))(v9, a2, this, v17);
            }
            else {
              uint64_t v28 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v27 + 128))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_106;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v28, (uint64_t)a3, v29);
            goto LABEL_107;
          case 5:
            uint64_t v30 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v31 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v30 + 280))(v9, a2, this, v17);
            }
            else {
              uint64_t v31 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v30 + 104))(v9, a2, this);
            }
            if (v14)
            {
              if ((v31 & 0x80000000) == 0) {
                goto LABEL_93;
              }
              goto LABEL_106;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v31, (uint64_t)a3, v32);
            goto LABEL_107;
          case 6:
            uint64_t v33 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v34 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v33 + 304))(v9, a2, this, v17);
            }
            else {
              uint64_t v34 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v33 + 128))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_99;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v34, (uint64_t)a3, v35);
            goto LABEL_107;
          case 7:
            uint64_t v36 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v37 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v36 + 296))(v9, a2, this, v17);
            }
            else {
              uint64_t v37 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v36 + 120))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_96;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v37, (uint64_t)a3, v38);
            goto LABEL_107;
          case 8:
            uint64_t v39 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v40 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v39 + 328))(v9, a2, this, v17);
            }
            else {
              uint64_t v40 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v39 + 152))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_102;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v40, (uint64_t)a3, v41);
            goto LABEL_107;
          case 9:
            std::string __p = 0;
            uint64_t v72 = 0;
            uint64_t v73 = 0;
            uint64_t v42 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t, void **))(v42 + 360))(v9, a2, this, v17, &__p);
            }
            else {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void **))(v42 + 184))(v9, a2, this, &__p);
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
            goto LABEL_86;
          case 0xA:
            char v43 = (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10);
            uint64_t v44 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v45 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v44 + 352))(v9, a2, this, v17);
            }
            else {
              uint64_t v45 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(v44 + 176))(v9, a2, this, 0);
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteGroup(v43, v45, a3, v46);
            goto LABEL_107;
          case 0xB:
            int v47 = (wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10);
            uint64_t v48 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v49 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v48 + 352))(v9, a2, this, v17);
            }
            else {
              uint64_t v49 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(v48 + 176))(v9, a2, this, 0);
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(v47, v49, a3, v50);
            goto LABEL_107;
          case 0xC:
            std::string __p = 0;
            uint64_t v72 = 0;
            uint64_t v73 = 0;
            uint64_t v51 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t, void **))(v51 + 360))(v9, a2, this, v17, &__p);
            }
            else {
              (*(void (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void **))(v51 + 184))(v9, a2, this, &__p);
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
LABEL_86:
            if (SHIBYTE(v73) < 0) {
              operator delete(__p);
            }
            goto LABEL_107;
          case 0xD:
            uint64_t v52 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v53 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v52 + 296))(v9, a2, this, v17);
            }
            else {
              uint64_t v53 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v52 + 120))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_102;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v53, (uint64_t)a3, v54);
            goto LABEL_107;
          case 0xE:
            uint64_t v55 = *v9;
            if (*((_DWORD *)this + 12) == 3)
            {
              uint64_t v56 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v55 + 344))(v9, a2, this, v17);
              if (!v14) {
                goto LABEL_46;
              }
            }
            else
            {
              uint64_t v56 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v55 + 168))(v9, a2, this);
              if (!v14)
              {
LABEL_46:
                wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), *(unsigned int *)(v56 + 16), (uint64_t)a3, v57);
                goto LABEL_107;
              }
            }
            if ((*(_DWORD *)(v56 + 16) & 0x80000000) != 0)
            {
LABEL_106:
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a3);
            }
            else
            {
LABEL_93:
              long long v70 = a3;
LABEL_103:
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(v70);
            }
LABEL_107:
            uint64_t v17 = (v17 + 1);
            if (v12 == v17) {
              return;
            }
            continue;
          case 0xF:
            uint64_t v58 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v59 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v58 + 280))(v9, a2, this, v17);
            }
            else {
              uint64_t v59 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v58 + 104))(v9, a2, this);
            }
            if (v14) {
LABEL_96:
            }
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(a3);
            else {
              wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSFixed32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v59, (uint64_t)a3, v60);
            }
            goto LABEL_107;
          case 0x10:
            uint64_t v61 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v62 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v61 + 288))(v9, a2, this, v17);
            }
            else {
              uint64_t v62 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v61 + 112))(v9, a2, this);
            }
            if (v14) {
LABEL_99:
            }
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a3);
            else {
              wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v62, (uint64_t)a3, v63);
            }
            goto LABEL_107;
          case 0x11:
            uint64_t v64 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v65 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v64 + 280))(v9, a2, this, v17);
            }
            else {
              uint64_t v65 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v64 + 104))(v9, a2, this);
            }
            if (v14)
            {
LABEL_102:
              long long v70 = a3;
              goto LABEL_103;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v65, (uint64_t)a3, v66);
            goto LABEL_107;
          case 0x12:
            uint64_t v67 = *v9;
            if (*((_DWORD *)this + 12) == 3) {
              uint64_t v68 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(v67 + 288))(v9, a2, this, v17);
            }
            else {
              uint64_t v68 = (*(uint64_t (**)(uint64_t *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v67 + 112))(v9, a2, this);
            }
            if (v14) {
              goto LABEL_106;
            }
            wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)*((unsigned int *)this + 10), v68, (uint64_t)a3, v69);
            goto LABEL_107;
          default:
            goto LABEL_107;
        }
      }
    }
    if (v11 >= 1) {
      goto LABEL_14;
    }
  }
}

void sub_2135F0F80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeMessageSetItemWithCachedSizes(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v7 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a2 + 144))(a2);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(*(void *)v7 + 176))(v7, a2, this, 0);
  (*(void (**)(uint64_t))(*(void *)v8 + 96))(v8);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
  (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v8 + 80))(v8, a3);

  return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3)
{
  int v5 = (void *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a2 + 144))(a2);
  int v6 = v5;
  uint64_t v7 = *v5;
  if (*((_DWORD *)this + 12) == 3) {
    uint64_t v8 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v7 + 48))(v5, a2, this);
  }
  else {
    uint64_t v8 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(v7 + 40))(v5, a2, this);
  }
  int v9 = v8;
  switch(*((_DWORD *)this + 11))
  {
    case 1:
    case 6:
    case 0x10:
      uint64_t v10 = (8 * v8);
      goto LABEL_91;
    case 2:
    case 7:
    case 0xF:
      uint64_t v10 = (4 * v8);
      goto LABEL_91;
    case 3:
      if (*((_DWORD *)this + 12) != 3)
      {
        uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 112))(v6, a2, this);
        goto LABEL_111;
      }
      if ((int)v8 < 1) {
        goto LABEL_90;
      }
      LODWORD(v10) = 0;
      uint64_t v21 = 0;
      do
      {
        uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 288))(v6, a2, this, v21);
        uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(v22)
            + v10;
        uint64_t v21 = (v21 + 1);
      }
      while (v9 != v21);
      goto LABEL_91;
    case 4:
      if (*((_DWORD *)this + 12) != 3)
      {
        uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 128))(v6, a2, this);
        goto LABEL_111;
      }
      if ((int)v8 < 1) {
        goto LABEL_90;
      }
      LODWORD(v10) = 0;
      uint64_t v23 = 0;
      do
      {
        uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 304))(v6, a2, this, v23);
        uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(v24)
            + v10;
        uint64_t v23 = (v23 + 1);
      }
      while (v9 != v23);
      goto LABEL_91;
    case 5:
      if (*((_DWORD *)this + 12) == 3)
      {
        if ((int)v8 < 1) {
          goto LABEL_90;
        }
        LODWORD(v10) = 0;
        uint64_t v25 = 0;
        do
        {
          uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 280))(v6, a2, this, v25);
          if ((v26 & 0x80000000) != 0)
          {
            int v27 = 10;
          }
          else if (v26 >= 0x80)
          {
            int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
          }
          else
          {
            int v27 = 1;
          }
          uint64_t v10 = (v27 + v10);
          uint64_t v25 = (v25 + 1);
        }
        while (v9 != v25);
        goto LABEL_91;
      }
      uint64_t v49 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 104))(v6, a2, this);
      if ((v49 & 0x80000000) == 0) {
        goto LABEL_105;
      }
      goto LABEL_103;
    case 8:
      uint64_t v10 = v8;
      goto LABEL_91;
    case 9:
    case 0xC:
      if ((int)v8 < 1) {
        goto LABEL_90;
      }
      LODWORD(v10) = 0;
      uint64_t v11 = 0;
      do
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v58 = 0;
        uint64_t v12 = *v6;
        if (*((_DWORD *)this + 12) == 3) {
          uint64_t v13 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t, void **))(v12 + 360))(v6, a2, this, v11, __p);
        }
        else {
          uint64_t v13 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void **))(v12 + 184))(v6, a2, this, __p);
        }
        uint64_t v14 = v13;
        int v15 = *(unsigned __int8 *)(v13 + 23);
        char v16 = v15;
        uint64_t v17 = *(void *)(v13 + 8);
        if ((v15 & 0x80u) == 0) {
          unint64_t v18 = *(unsigned __int8 *)(v13 + 23);
        }
        else {
          unint64_t v18 = v17;
        }
        if (v18 >= 0x80)
        {
          int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18);
          int v15 = *(unsigned __int8 *)(v14 + 23);
          uint64_t v17 = *(void *)(v14 + 8);
          char v16 = *(unsigned char *)(v14 + 23);
        }
        else
        {
          int v19 = 1;
        }
        if (v16 >= 0) {
          int v20 = v15;
        }
        else {
          int v20 = v17;
        }
        if (SHIBYTE(v58) < 0) {
          operator delete(__p[0]);
        }
        uint64_t v10 = (v19 + v10 + v20);
        uint64_t v11 = (v11 + 1);
      }
      while (v9 != v11);
      goto LABEL_91;
    case 0xA:
      if (*((_DWORD *)this + 12) != 3)
      {
        int v50 = *(uint64_t (**)(void))(*(void *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(*v6 + 176))(v6, a2, this, 0)+ 72);
        return v50();
      }
      if ((int)v8 < 1) {
        goto LABEL_90;
      }
      LODWORD(v10) = 0;
      uint64_t v28 = 0;
      do
      {
        uint64_t v29 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 352))(v6, a2, this, v28);
        uint64_t v10 = (*(unsigned int (**)(uint64_t))(*(void *)v29 + 72))(v29) + v10;
        uint64_t v28 = (v28 + 1);
      }
      while (v9 != v28);
      goto LABEL_91;
    case 0xB:
      if (*((_DWORD *)this + 12) == 3)
      {
        if ((int)v8 < 1) {
          goto LABEL_90;
        }
        LODWORD(v10) = 0;
        uint64_t v30 = 0;
        do
        {
          uint64_t v31 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 352))(v6, a2, this, v30);
          uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(void *)v31 + 72))(v31);
          int v33 = (int)v32;
          if (v32 >= 0x80) {
            int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
          }
          else {
            int v34 = 1;
          }
          uint64_t v10 = (v33 + v10 + v34);
          uint64_t v30 = (v30 + 1);
        }
        while (v9 != v30);
      }
      else
      {
        uint64_t v51 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(*v6 + 176))(v6, a2, this, 0);
        uint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(void *)v51 + 72))(v51);
        int v53 = (int)v52;
        if (v52 >= 0x80) {
          int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
        }
        else {
          int v54 = 1;
        }
        uint64_t v10 = (v54 + v53);
      }
      goto LABEL_91;
    case 0xD:
      if (*((_DWORD *)this + 12) != 3)
      {
        uint64_t v49 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 120))(v6, a2, this);
        goto LABEL_105;
      }
      if ((int)v8 < 1) {
        goto LABEL_90;
      }
      LODWORD(v10) = 0;
      uint64_t v35 = 0;
      do
      {
        uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 296))(v6, a2, this, v35);
        if (v36 >= 0x80) {
          int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
        }
        else {
          int v37 = 1;
        }
        uint64_t v10 = (v37 + v10);
        uint64_t v35 = (v35 + 1);
      }
      while (v9 != v35);
      goto LABEL_91;
    case 0xE:
      if (*((_DWORD *)this + 12) == 3)
      {
        if ((int)v8 < 1) {
          goto LABEL_90;
        }
        LODWORD(v10) = 0;
        uint64_t v38 = 0;
        do
        {
          uint64_t v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)((*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 344))(v6, a2, this, v38)+ 16);
          if ((v39 & 0x80000000) != 0)
          {
            int v40 = 10;
          }
          else if (v39 >= 0x80)
          {
            int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
          }
          else
          {
            int v40 = 1;
          }
          uint64_t v10 = (v40 + v10);
          uint64_t v38 = (v38 + 1);
        }
        while (v9 != v38);
      }
      else
      {
        uint64_t v49 = *(unsigned int *)((*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 168))(v6, a2, this)+ 16);
        if ((v49 & 0x80000000) == 0) {
          goto LABEL_105;
        }
LABEL_103:
        uint64_t v10 = 10;
      }
      goto LABEL_91;
    case 0x11:
      if (*((_DWORD *)this + 12) == 3)
      {
        if ((int)v8 < 1) {
          goto LABEL_90;
        }
        LODWORD(v10) = 0;
        uint64_t v41 = 0;
        do
        {
          int v42 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 280))(v6, a2, this, v41);
          char v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v42) ^ (v42 >> 31));
          if (v43 >= 0x80) {
            int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
          }
          else {
            int v44 = 1;
          }
          uint64_t v10 = (v44 + v10);
          uint64_t v41 = (v41 + 1);
        }
        while (v9 != v41);
        goto LABEL_91;
      }
      int v55 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 104))(v6, a2, this);
      uint64_t v49 = (2 * v55) ^ (v55 >> 31);
LABEL_105:
      if (v49 < 0x80)
      {
        uint64_t v10 = 1;
        goto LABEL_91;
      }
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49);
      break;
    case 0x12:
      if (*((_DWORD *)this + 12) == 3)
      {
        if ((int)v8 < 1)
        {
LABEL_90:
          uint64_t v10 = 0;
        }
        else
        {
          LODWORD(v10) = 0;
          uint64_t v45 = 0;
          do
          {
            uint64_t v46 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, uint64_t))(*v6 + 288))(v6, a2, this, v45);
            uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v46) ^ (v46 >> 63)))
                + v10;
            uint64_t v45 = (v45 + 1);
          }
          while (v9 != v45);
        }
LABEL_91:
        uint64_t result = v10;
      }
      else
      {
        uint64_t v56 = (*(uint64_t (**)(void *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*v6 + 112))(v6, a2, this);
        uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v56) ^ (v56 >> 63));
LABEL_111:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(v48);
      }
      break;
    default:
      goto LABEL_90;
  }
  return result;
}

void sub_2135F1B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::ByteSize(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::WireFormat *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  uint64_t v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::WireFormat *))(*(void *)this
                                                                                                 + 144))(this);
  std::string __p = 0;
  unint64_t v18 = 0;
  uint64_t v19 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::WireFormat *, void **))(*(void *)v4 + 96))(v4, this, &__p);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat **)__p;
  if (v18 == __p)
  {
    int v8 = 0;
  }
  else
  {
    unint64_t v7 = 0;
    int v8 = 0;
    do
    {
      v8 += wireless_diagnostics::google::protobuf::internal::WireFormat::FieldByteSize(v6[v7++], this, v5);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat **)__p;
    }
    while (v7 < (v18 - (unsigned char *)__p) >> 3);
  }
  int v9 = *(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::WireFormat *))(*(void *)v4 + 16);
  if (*(unsigned char *)(*(void *)(v3 + 32) + 64))
  {
    uint64_t v10 = (uint64_t **)v9(v4, this);
    int v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(v10, v11);
  }
  else
  {
    uint64_t v13 = (uint64_t **)v9(v4, this);
    int v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, v14);
  }
  int v15 = v12;
  if (__p)
  {
    unint64_t v18 = __p;
    operator delete(__p);
  }
  return (v15 + v8);
}

void sub_2135F1CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

wireless_diagnostics::google::protobuf::io::CodedOutputStream *wireless_diagnostics::google::protobuf::internal::WireFormat::FieldByteSize(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3)
{
  int v5 = (uint64_t *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a2 + 144))(a2);
  if (*((unsigned char *)this + 52)
    && *(unsigned char *)(*(void *)(*((void *)this + 7) + 32) + 64)
    && wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 11)] == 10
    && *((_DWORD *)this + 12) != 3)
  {
    return (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::internal::WireFormat::MessageSetItemByteSize(this, a2, v6);
  }
  else
  {
    uint64_t v7 = *v5;
    if (*((_DWORD *)this + 12) == 3) {
      int v8 = (*(uint64_t (**)(void))(v7 + 48))();
    }
    else {
      int v8 = (*(uint64_t (**)(void))(v7 + 40))();
    }
    int v10 = v8;
    uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v9);
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
    if (*(unsigned char *)(*((void *)this + 12) + 44))
    {
      if ((int)v11 >= 1)
      {
        uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * *((_DWORD *)this + 10));
        if (v13 >= 0x80) {
          int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        }
        else {
          int v14 = 1;
        }
        int v19 = v14 + v12;
        if (v12 >= 0x80) {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
        }
        else {
          int v20 = 1;
        }
        return (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v19 + v20);
      }
    }
    else
    {
      int v15 = *((_DWORD *)this + 10);
      int v16 = *((_DWORD *)this + 11);
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v15);
      if (v17 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v18 = 1;
      }
      return (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v12
                                                                                           + (v18 << (v16 == 10)) * v10);
    }
    return v12;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormat::MessageSetItemByteSize(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3)
{
  uint64_t v5 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::FieldDescriptor *))(*(void *)a2 + 144))(a2);
  int v6 = (int *)MEMORY[0x263F8C750];
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v7 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
  }
  else {
    int v8 = 1;
  }
  int v9 = *v6;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::FieldDescriptor *, wireless_diagnostics::google::protobuf::internal::WireFormat *, void))(*(void *)v5 + 176))(v5, a2, this, 0);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(void *)v10 + 72))(v10);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
  }
  else {
    int v13 = 1;
  }
  return (v8 + v9 + v12 + v13);
}

void wireless_diagnostics::google::protobuf::internal::WireFormat::VerifyUTF8StringFallback(wireless_diagnostics::google::protobuf::internal *a1, const char *a2)
{
  if (!wireless_diagnostics::google::protobuf::internal::IsStructurallyValidUTF8(a1, a2))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v2);
  }
}

void sub_2135F2050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::UnknownFieldSetFieldSkipper::~UnknownFieldSetFieldSkipper(wireless_diagnostics::google::protobuf::internal::UnknownFieldSetFieldSkipper *this)
{
}

void *wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::SimpleDescriptorDatabase(void *this)
{
  this[2] = 0;
  *this = &unk_26C3F9970;
  this[1] = this + 2;
  this[5] = 0;
  this[3] = 0;
  this[4] = this + 5;
  this[8] = 0;
  this[9] = 0;
  this[10] = 0;
  this[6] = 0;
  this[7] = this + 8;
  this[11] = 0;
  this[12] = 0;
  return this;
}

{
  this[2] = 0;
  *this = &unk_26C3F9970;
  this[1] = this + 2;
  this[5] = 0;
  this[3] = 0;
  this[4] = this + 5;
  this[8] = 0;
  this[9] = 0;
  this[10] = 0;
  this[6] = 0;
  this[7] = this + 8;
  this[11] = 0;
  this[12] = 0;
  return this;
}

void wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::~SimpleDescriptorDatabase(wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase *this)
{
  *(void *)this = &unk_26C3F9970;
  uint64_t v2 = (void **)((char *)this + 80);
  wireless_diagnostics::google::protobuf::STLDeleteElements<std::vector<wireless_diagnostics::google::protobuf::Message *>>((void *)this + 10);
  uint64_t v3 = *v2;
  if (*v2)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  std::__tree<std::string>::destroy((uint64_t)this + 56, *((char **)this + 8));
  std::__tree<std::string>::destroy((uint64_t)this + 32, *((char **)this + 5));
  std::__tree<std::string>::destroy((uint64_t)this + 8, *((char **)this + 2));
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::~SimpleDescriptorDatabase(this);

  JUMPOUT(0x21668DB60);
}

void wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::Add(wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase *this, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
}

void sub_2135F2250(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10B1C4063BD6257);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::AddAndOwn(wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase *this, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
  unint64_t v6 = *((void *)this + 12);
  uint64_t v4 = (char *)this + 96;
  unint64_t v5 = v6;
  uint64_t v7 = (void *)*((void *)v4 - 1);
  if ((unint64_t)v7 >= v6)
  {
    int v9 = (void **)(v4 - 16);
    uint64_t v10 = *((void *)v4 - 2);
    uint64_t v11 = ((uint64_t)v7 - v10) >> 3;
    if ((unint64_t)(v11 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - v10;
    uint64_t v13 = v12 >> 2;
    if (v12 >> 2 <= (unint64_t)(v11 + 1)) {
      uint64_t v13 = v11 + 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14) {
      int v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)v4, v14);
    }
    else {
      int v15 = 0;
    }
    int v16 = &v15[8 * v11];
    uint64_t v17 = &v15[8 * v14];
    *(void *)int v16 = a2;
    int v8 = v16 + 8;
    int v19 = (char *)*((void *)this + 10);
    int v18 = (char *)*((void *)this + 11);
    if (v18 != v19)
    {
      do
      {
        uint64_t v20 = *((void *)v18 - 1);
        v18 -= 8;
        *((void *)v16 - 1) = v20;
        v16 -= 8;
      }
      while (v18 != v19);
      int v18 = (char *)*v9;
    }
    *((void *)this + 10) = v16;
    *((void *)this + 11) = v8;
    *((void *)this + 12) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *uint64_t v7 = a2;
    int v8 = v7 + 1;
  }
  *((void *)this + 11) = v8;

  return wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddFile((uint64_t **)this + 1, (uint64_t)a2, (std::string::size_type)a2);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddFile(uint64_t **a1, uint64_t a2, std::string::size_type a3)
{
  std::string::size_type v20 = a3;
  if ((wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>(a1, *(void *)(a2 + 16), (uint64_t *)&v20) & 1) == 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v19);
    return 0;
  }
  if ((*(unsigned char *)(a2 + 204) & 2) != 0)
  {
    unint64_t v6 = *(long long **)(a2 + 24);
    if (*((char *)v6 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v19, *(const std::string::value_type **)v6, *((void *)v6 + 1));
    }
    else
    {
      long long v7 = *v6;
      v19.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
      *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v7;
    }
  }
  else
  {
    memset(&v19, 0, sizeof(v19));
  }
  std::string::size_type size = HIBYTE(v19.__r_.__value_.__r.__words[2]);
  if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v19.__r_.__value_.__l.__size_;
  }
  if (size) {
    std::string::push_back(&v19, 46);
  }
  if (*(int *)(a2 + 96) < 1)
  {
LABEL_19:
    if (*(int *)(a2 + 120) < 1)
    {
LABEL_25:
      if (*(int *)(a2 + 168) < 1)
      {
LABEL_32:
        if (*(int *)(a2 + 144) < 1)
        {
          uint64_t v5 = 1;
        }
        else
        {
          uint64_t v15 = 0;
          do
          {
            std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v19.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 136) + 8 * v15) + 16), (uint64_t)__p);
            uint64_t v5 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddSymbol((uint64_t)a1, (uint64_t)__p, v20);
            if (v18 < 0) {
              operator delete(__p[0]);
            }
            if ((v5 & 1) == 0) {
              break;
            }
            ++v15;
          }
          while (v15 < *(int *)(a2 + 144));
        }
        goto LABEL_40;
      }
      uint64_t v13 = 0;
      while (1)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v19.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 160) + 8 * v13) + 16), (uint64_t)__p);
        char v14 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddSymbol((uint64_t)a1, (uint64_t)__p, v20);
        if (v18 < 0) {
          operator delete(__p[0]);
        }
        if ((v14 & 1) == 0
          || (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddExtension((uint64_t)a1, *(void *)(*(void *)(a2 + 160) + 8 * v13), v20) & 1) == 0)
        {
          break;
        }
        if (++v13 >= *(int *)(a2 + 168)) {
          goto LABEL_32;
        }
      }
    }
    else
    {
      uint64_t v11 = 0;
      while (1)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v19.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 112) + 8 * v11) + 16), (uint64_t)__p);
        char v12 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddSymbol((uint64_t)a1, (uint64_t)__p, v20);
        if (v18 < 0) {
          operator delete(__p[0]);
        }
        if ((v12 & 1) == 0) {
          break;
        }
        if (++v11 >= *(int *)(a2 + 120)) {
          goto LABEL_25;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
    while (1)
    {
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&v19.__r_.__value_.__l.__data_, *(const void ***)(*(void *)(*(void *)(a2 + 88) + 8 * v9) + 16), (uint64_t)__p);
      char v10 = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddSymbol((uint64_t)a1, (uint64_t)__p, v20);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if ((v10 & 1) == 0
        || (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddNestedExtensions((uint64_t)a1, *(void *)(*(void *)(a2 + 88) + 8 * v9), v20) & 1) == 0)
      {
        break;
      }
      if (++v9 >= *(int *)(a2 + 96)) {
        goto LABEL_19;
      }
    }
  }
  uint64_t v5 = 0;
LABEL_40:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_2135F2638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::FindFileByName(uint64_t a1, const void **a2, void ***a3)
{
  uint64_t v5 = std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::string>(a1 + 8, a2);
  if (a1 + 16 == v5) {
    return 0;
  }
  unint64_t v6 = *(void ****)(v5 + 56);
  if (!v6) {
    return 0;
  }
  wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(a3, v6);
  return 1;
}

BOOL wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::MaybeCopy(wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase *this, void ***a2, void ***a3)
{
  if (a2) {
    wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(a3, a2);
  }
  return a2 != 0;
}

BOOL wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, const void **a2, void ***a3)
{
  uint64_t Symbol = (void ***)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindSymbol(a1 + 8, a2);
  if (Symbol) {
    wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(a3, Symbol);
  }
  return Symbol != 0;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindSymbol(uint64_t a1, const void **a2)
{
  LastLessOrEqual = (unsigned __int8 *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindLastLessOrEqual(a1, a2);
  if ((unsigned __int8 *)(a1 + 32) == LastLessOrEqual) {
    return 0;
  }
  uint64_t v5 = LastLessOrEqual;
  if (!wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, LastLessOrEqual + 32, (unsigned __int8 *)a2))return 0; {
  else
  }
    return *((void *)v5 + 7);
}

BOOL wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t a2, int a3, void ***a4)
{
  Extension = (void ***)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindExtension(a1 + 8, a2, a3);
  if (Extension) {
    wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(a4, Extension);
  }
  return Extension != 0;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindExtension(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a1 + 48;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  int v10 = a3;
  uint64_t v6 = std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::pair<std::string,int>>(v5, (const void **)&__p.__r_.__value_.__l.__data_);
  if (a1 + 56 == v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2135F28B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindAllExtensionNumbers(a1 + 8, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  int v35 = 0;
  uint64_t v6 = (void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 56);
  if (v7)
  {
    uint64_t v8 = a1 + 64;
    uint64_t v9 = v6;
    do
    {
      BOOL v10 = std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v8, (const void **)(v7 + 32), (const void **)&__p.__r_.__value_.__l.__data_);
      uint64_t v11 = (uint64_t *)(v7 + 8);
      if (!v10)
      {
        uint64_t v11 = (uint64_t *)v7;
        uint64_t v9 = (void *)v7;
      }
      uint64_t v7 = *v11;
    }
    while (*v11);
  }
  else
  {
    uint64_t v9 = (void *)(a1 + 56);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v9 == v6)
  {
    char v12 = 0;
  }
  else
  {
    char v12 = 0;
    do
    {
      uint64_t v13 = *((unsigned __int8 *)v9 + 55);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = *((unsigned __int8 *)v9 + 55);
      }
      else {
        uint64_t v14 = v9[5];
      }
      uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
      int v16 = (char)v15;
      if ((v15 & 0x80u) != 0) {
        uint64_t v15 = *(void *)(a2 + 8);
      }
      if (v14 != v15) {
        break;
      }
      uint64_t v17 = (const void **)(v9 + 4);
      if (v16 >= 0) {
        char v18 = (const std::string::value_type *)a2;
      }
      else {
        char v18 = *(const std::string::value_type **)a2;
      }
      if ((v13 & 0x80) != 0)
      {
        if (memcmp(*v17, v18, v9[5])) {
          return v12 & 1;
        }
      }
      else if (*((unsigned char *)v9 + 55))
      {
        while (*(unsigned __int8 *)v17 == *(unsigned __int8 *)v18)
        {
          uint64_t v17 = (const void **)((char *)v17 + 1);
          ++v18;
          if (!--v13) {
            goto LABEL_30;
          }
        }
        return v12 & 1;
      }
LABEL_30:
      std::string::size_type v20 = *(_DWORD **)(a3 + 8);
      unint64_t v19 = *(void *)(a3 + 16);
      if ((unint64_t)v20 >= v19)
      {
        uint64_t v22 = *(_DWORD **)a3;
        uint64_t v23 = ((uint64_t)v20 - *(void *)a3) >> 2;
        unint64_t v24 = v23 + 1;
        if ((unint64_t)(v23 + 1) >> 62) {
          std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v25 = v19 - (void)v22;
        if (v25 >> 1 > v24) {
          unint64_t v24 = v25 >> 1;
        }
        if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v26 = v24;
        }
        if (v26)
        {
          int v27 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a3 + 16, v26);
          uint64_t v22 = *(_DWORD **)a3;
          std::string::size_type v20 = *(_DWORD **)(a3 + 8);
        }
        else
        {
          int v27 = 0;
        }
        uint64_t v28 = &v27[4 * v23];
        *(_DWORD *)uint64_t v28 = *((_DWORD *)v9 + 14);
        uint64_t v21 = v28 + 4;
        while (v20 != v22)
        {
          int v29 = *--v20;
          *((_DWORD *)v28 - 1) = v29;
          v28 -= 4;
        }
        *(void *)a3 = v28;
        *(void *)(a3 + 8) = v21;
        *(void *)(a3 + 16) = &v27[4 * v26];
        if (v22) {
          operator delete(v22);
        }
      }
      else
      {
        *std::string::size_type v20 = *((_DWORD *)v9 + 14);
        uint64_t v21 = v20 + 1;
      }
      *(void *)(a3 + 8) = v21;
      uint64_t v30 = (void *)v9[1];
      if (v30)
      {
        do
        {
          uint64_t v31 = v30;
          uint64_t v30 = (void *)*v30;
        }
        while (v30);
      }
      else
      {
        do
        {
          uint64_t v31 = (void *)v9[2];
          BOOL v32 = *v31 == (void)v9;
          uint64_t v9 = v31;
        }
        while (!v32);
      }
      char v12 = 1;
      uint64_t v9 = v31;
    }
    while (v31 != v6);
  }
  return v12 & 1;
}

void sub_2135F2B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase *this)
{
  *(void *)this = &unk_26C3F99B0;
  uint64_t v2 = (void **)*((void *)this + 11);
  if (v2 != *((void ***)this + 10))
  {
    unint64_t v3 = 0;
    uint64_t v2 = (void **)*((void *)this + 10);
    do
    {
      operator delete(v2[v3++]);
      uint64_t v2 = (void **)*((void *)this + 10);
    }
    while (v3 < (uint64_t)(*((void *)this + 11) - (void)v2) >> 3);
  }
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  std::__tree<std::string>::destroy((uint64_t)this + 56, *((char **)this + 8));
  std::__tree<std::string>::destroy((uint64_t)this + 32, *((char **)this + 5));
  std::__tree<std::string>::destroy((uint64_t)this + 8, *((char **)this + 2));
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::AddCopy(wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase *this, const void *a2, signed int a3)
{
  size_t v6 = a3;
  uint64_t v7 = operator new(a3);
  memcpy(v7, a2, v6);
  unint64_t v8 = *((void *)this + 12);
  uint64_t v9 = (void *)*((void *)this + 11);
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v11 = *((void *)this + 10);
    uint64_t v12 = ((uint64_t)v9 - v11) >> 3;
    if ((unint64_t)(v12 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v8 - v11;
    uint64_t v14 = v13 >> 2;
    if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
      uint64_t v14 = v12 + 1;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15) {
      int v16 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)this + 96, v15);
    }
    else {
      int v16 = 0;
    }
    uint64_t v17 = &v16[8 * v12];
    char v18 = &v16[8 * v15];
    *(void *)uint64_t v17 = v7;
    BOOL v10 = v17 + 8;
    std::string::size_type v20 = (char *)*((void *)this + 10);
    unint64_t v19 = (char *)*((void *)this + 11);
    if (v19 != v20)
    {
      do
      {
        uint64_t v21 = *((void *)v19 - 1);
        v19 -= 8;
        *((void *)v17 - 1) = v21;
        v17 -= 8;
      }
      while (v19 != v20);
      unint64_t v19 = (char *)*((void *)this + 10);
    }
    *((void *)this + 10) = v17;
    *((void *)this + 11) = v10;
    *((void *)this + 12) = v18;
    if (v19) {
      operator delete(v19);
    }
  }
  else
  {
    *uint64_t v9 = v7;
    BOOL v10 = v9 + 1;
  }
  *((void *)this + 11) = v10;

  return wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::Add((uint64_t **)this, v7, a3);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::FindFileByName(uint64_t a1, const void **a2, wireless_diagnostics::google::protobuf::MessageLite *a3)
{
  uint64_t v5 = std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::string>(a1 + 8, a2);
  if (a1 + 16 == v5) {
    return 0;
  }
  size_t v6 = *(const void **)(v5 + 56);
  if (!v6) {
    return 0;
  }

  return wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(a3, v6);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::MaybeParse(int a1, const void *a2, int a3, wireless_diagnostics::google::protobuf::MessageLite *this)
{
  if (a2) {
    return wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(this, a2);
  }
  else {
    return 0;
  }
}

const void *wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, const void **a2, wireless_diagnostics::google::protobuf::MessageLite *a3)
{
  uint64_t result = (const void *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindSymbol(a1 + 8, a2);
  if (result)
  {
    return (const void *)wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(a3, result);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindSymbol(uint64_t a1, const void **a2)
{
  LastLessOrEqual = (unsigned __int8 *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindLastLessOrEqual(a1, a2);
  if ((unsigned __int8 *)(a1 + 32) == LastLessOrEqual) {
    return 0;
  }
  uint64_t v5 = LastLessOrEqual;
  if (!wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, LastLessOrEqual + 32, (unsigned __int8 *)a2))return 0; {
  else
  }
    return *((void *)v5 + 7);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::FindNameOfFileContainingSymbol(uint64_t a1, const void **a2, std::string *a3)
{
  uint64_t Symbol = (char *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindSymbol(a1 + 8, a2);
  uint64_t String = (uint64_t)Symbol;
  if (Symbol)
  {
    uint64_t v13 = 0;
    uint64_t v14 = Symbol;
    unint64_t v15 = (unsigned __int8 *)&Symbol[(int)v5];
    int v16 = v5;
    uint64_t v17 = 0;
    __int16 v18 = 0;
    long long v20 = xmmword_213619590;
    int v7 = *MEMORY[0x263F8C738];
    int v19 = v5;
    int v21 = v7;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    if (v5 << 32 < 1 || (int v8 = *Symbol, v8 < 0))
    {
      int TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&v13);
      HIDWORD(v17) = TagFallback;
    }
    else
    {
      int TagFallback = *Symbol;
      HIDWORD(v17) = v8;
      uint64_t v14 = (char *)(String + 1);
    }
    if (TagFallback == 10)
    {
      uint64_t String = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
    }
    else
    {
      wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v11);
      uint64_t String = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray((wireless_diagnostics::google::protobuf::MessageLite *)v11, (const void *)String);
      if (String) {
        std::string::operator=(a3, __str);
      }
      wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v11);
    }
    MEMORY[0x21668D180](&v13);
  }
  return String;
}

void sub_2135F2FE0(_Unwind_Exception *a1)
{
  MEMORY[0x21668D180](v1 - 112);
  _Unwind_Resume(a1);
}

const void *wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t a2, int a3, wireless_diagnostics::google::protobuf::MessageLite *a4)
{
  uint64_t result = (const void *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindExtension(a1 + 8, a2, a3);
  if (result)
  {
    return (const void *)wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(a4, result);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindExtension(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a1 + 48;
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v9, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v9 = *(std::string *)a2;
  }
  int v10 = a3;
  uint64_t v6 = std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::pair<std::string,int>>(v5, (const void **)&v9.__r_.__value_.__l.__data_);
  if (a1 + 56 == v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2135F311C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindAllExtensionNumbers(a1 + 8, a2, a3);
}

void *wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::DescriptorPoolDatabase(void *this, const wireless_diagnostics::google::protobuf::DescriptorPool *a2)
{
  *this = &unk_26C3F96E0;
  this[1] = a2;
  return this;
}

{
  *this = &unk_26C3F96E0;
  this[1] = a2;
  return this;
}

void wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::~DescriptorPoolDatabase(wireless_diagnostics::google::protobuf::DescriptorPoolDatabase *this)
{
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::FindFileByName(uint64_t a1, char *a2, wireless_diagnostics::google::protobuf::FileDescriptorProto *a3)
{
  uint64_t FileByName = (wireless_diagnostics::google::protobuf::FileDescriptor *)wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(*(wireless_diagnostics::google::protobuf::internal::Mutex ***)(a1 + 8), a2);
  if (FileByName)
  {
    (*(void (**)(wireless_diagnostics::google::protobuf::FileDescriptorProto *))(*(void *)a3 + 32))(a3);
    wireless_diagnostics::google::protobuf::FileDescriptor::CopyTo(FileByName, a3);
  }
  return FileByName != 0;
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::FindFileContainingSymbol(uint64_t a1, uint64_t a2, wireless_diagnostics::google::protobuf::FileDescriptorProto *a3)
{
  uint64_t FileContainingSymbol = (wireless_diagnostics::google::protobuf::FileDescriptor *)wireless_diagnostics::google::protobuf::DescriptorPool::FindFileContainingSymbol(*(wireless_diagnostics::google::protobuf::internal::Mutex ***)(a1 + 8), a2);
  if (FileContainingSymbol)
  {
    (*(void (**)(wireless_diagnostics::google::protobuf::FileDescriptorProto *))(*(void *)a3 + 32))(a3);
    wireless_diagnostics::google::protobuf::FileDescriptor::CopyTo(FileContainingSymbol, a3);
  }
  return FileContainingSymbol != 0;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::FindFileContainingExtension(uint64_t a1, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::FileDescriptorProto *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::DescriptorPool::FindMessageTypeByName(*(void *)(a1 + 8), a2);
  if (result)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(*(wireless_diagnostics::google::protobuf::internal::Mutex ***)(a1 + 8), (const wireless_diagnostics::google::protobuf::Descriptor *)result, a3);
    if (result)
    {
      uint64_t v8 = result;
      (*(void (**)(wireless_diagnostics::google::protobuf::FileDescriptorProto *))(*(void *)a4 + 32))(a4);
      wireless_diagnostics::google::protobuf::FileDescriptor::CopyTo(*(wireless_diagnostics::google::protobuf::FileDescriptor **)(v8 + 32), a4);
      return 1;
    }
  }
  return result;
}

BOOL wireless_diagnostics::google::protobuf::DescriptorPoolDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MessageTypeByName = (wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::DescriptorPool::FindMessageTypeByName(*(void *)(a1 + 8), a2);
  if (MessageTypeByName)
  {
    int v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    wireless_diagnostics::google::protobuf::DescriptorPool::FindAllExtensions(*(void *)(a1 + 8), MessageTypeByName, (void **)&v21);
    uint64_t v6 = v22;
    if (v22 != v21)
    {
      unint64_t v7 = 0;
      uint64_t v8 = (void *)(a3 + 16);
      std::string v9 = *(_DWORD **)(a3 + 8);
      uint64_t v6 = v21;
      do
      {
        int v10 = *(_DWORD *)(v6[v7] + 40);
        if ((unint64_t)v9 >= *v8)
        {
          uint64_t v12 = *(_DWORD **)a3;
          uint64_t v13 = ((uint64_t)v9 - *(void *)a3) >> 2;
          unint64_t v14 = v13 + 1;
          if ((unint64_t)(v13 + 1) >> 62) {
            std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v15 = *v8 - (void)v12;
          if (v15 >> 1 > v14) {
            unint64_t v14 = v15 >> 1;
          }
          if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v16 = v14;
          }
          if (v16)
          {
            uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a3 + 16, v16);
            uint64_t v12 = *(_DWORD **)a3;
            std::string v9 = *(_DWORD **)(a3 + 8);
          }
          else
          {
            uint64_t v17 = 0;
          }
          __int16 v18 = &v17[4 * v13];
          *(_DWORD *)__int16 v18 = v10;
          uint64_t v11 = v18 + 4;
          while (v9 != v12)
          {
            int v19 = *--v9;
            *((_DWORD *)v18 - 1) = v19;
            v18 -= 4;
          }
          *(void *)a3 = v18;
          *(void *)(a3 + 8) = v11;
          *(void *)(a3 + 16) = &v17[4 * v16];
          if (v12) {
            operator delete(v12);
          }
        }
        else
        {
          *std::string v9 = v10;
          uint64_t v11 = v9 + 1;
        }
        *(void *)(a3 + 8) = v11;
        ++v7;
        uint64_t v6 = v21;
        std::string v9 = v11;
      }
      while (v7 < v22 - v21);
    }
    if (v6)
    {
      uint64_t v22 = v6;
      operator delete(v6);
    }
  }
  return MessageTypeByName != 0;
}

void sub_2135F346C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

wireless_diagnostics::google::protobuf::MergedDescriptorDatabase *wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::MergedDescriptorDatabase(wireless_diagnostics::google::protobuf::MergedDescriptorDatabase *this, wireless_diagnostics::google::protobuf::DescriptorDatabase *a2, wireless_diagnostics::google::protobuf::DescriptorDatabase *a3)
{
  *(void *)this = &unk_26C3F9930;
  *((void *)this + 1) = 0;
  uint64_t v6 = (void **)((char *)this + 8);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  unint64_t v7 = (char **)((char *)this + 24);
  uint64_t v8 = std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)this + 24, 1uLL);
  int v10 = (char *)&v8[v9];
  *uint64_t v8 = a2;
  uint64_t v11 = (char *)(v8 + 1);
  uint64_t v13 = (char *)*((void *)this + 1);
  uint64_t v12 = (char *)*((void *)this + 2);
  unint64_t v14 = v8;
  if (v12 != v13)
  {
    do
    {
      uint64_t v15 = *((void *)v12 - 1);
      v12 -= 8;
      *--unint64_t v14 = v15;
    }
    while (v12 != v13);
    uint64_t v12 = (char *)*v6;
  }
  *((void *)this + 1) = v14;
  *((void *)this + 2) = v11;
  *((void *)this + 3) = v10;
  if (v12)
  {
    operator delete(v12);
    int v10 = *v7;
  }
  *((void *)this + 2) = v11;
  if (v11 >= v10)
  {
    uint64_t v17 = (v11 - (unsigned char *)*v6) >> 3;
    if ((unint64_t)(v17 + 1) >> 61) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v18 = v10 - (unsigned char *)*v6;
    uint64_t v19 = v18 >> 2;
    if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
      uint64_t v19 = v17 + 1;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v20 = v19;
    }
    if (v20) {
      int v21 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)v7, v20);
    }
    else {
      int v21 = 0;
    }
    uint64_t v22 = &v21[8 * v17];
    uint64_t v23 = &v21[8 * v20];
    *(void *)uint64_t v22 = a3;
    unint64_t v16 = v22 + 8;
    uint64_t v25 = (char *)*((void *)this + 1);
    unint64_t v24 = (char *)*((void *)this + 2);
    if (v24 != v25)
    {
      do
      {
        uint64_t v26 = *((void *)v24 - 1);
        v24 -= 8;
        *((void *)v22 - 1) = v26;
        v22 -= 8;
      }
      while (v24 != v25);
      unint64_t v24 = (char *)*v6;
    }
    *((void *)this + 1) = v22;
    *((void *)this + 2) = v16;
    *((void *)this + 3) = v23;
    if (v24) {
      operator delete(v24);
    }
  }
  else
  {
    v8[1] = a3;
    unint64_t v16 = v8 + 2;
  }
  *((void *)this + 2) = v16;
  return this;
}

void sub_2135F360C(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void *wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::MergedDescriptorDatabase(void *a1, uint64_t a2)
{
  *a1 = &unk_26C3F9930;
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<wireless_diagnostics::google::protobuf::DescriptorDatabase *>::__init_with_size[abi:ne180100]<wireless_diagnostics::google::protobuf::DescriptorDatabase **,wireless_diagnostics::google::protobuf::DescriptorDatabase **>(a1 + 1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3);
  return a1;
}

{
  *a1 = &unk_26C3F9930;
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = 0;
  std::vector<wireless_diagnostics::google::protobuf::DescriptorDatabase *>::__init_with_size[abi:ne180100]<wireless_diagnostics::google::protobuf::DescriptorDatabase **,wireless_diagnostics::google::protobuf::DescriptorDatabase **>(a1 + 1, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3);
  return a1;
}

void wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::~MergedDescriptorDatabase(wireless_diagnostics::google::protobuf::MergedDescriptorDatabase *this)
{
  *(void *)this = &unk_26C3F9930;
  uint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }
}

{
  void *v2;

  *(void *)this = &unk_26C3F9930;
  uint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }
}

{
  void *v2;
  uint64_t vars8;

  *(void *)this = &unk_26C3F9930;
  uint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::FindFileByName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v3) {
    return 0;
  }
  unint64_t v7 = 0;
  do
  {
    uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(v3 + 8 * v7) + 16))(*(void *)(v3 + 8 * v7), a2, a3);
    if (result) {
      break;
    }
    ++v7;
    uint64_t v3 = *(void *)(a1 + 8);
  }
  while (v7 < (*(void *)(a1 + 16) - v3) >> 3);
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v4)
  {
LABEL_5:
    int v8 = 0;
  }
  else
  {
    uint64_t v3 = a2;
    unint64_t v7 = 0;
    while (!(*(unsigned int (**)(void, uint64_t, uint64_t))(**(void **)(v4 + 8 * v7) + 24))(*(void *)(v4 + 8 * v7), v3, a3))
    {
      ++v7;
      uint64_t v4 = *(void *)(a1 + 8);
      if (v7 >= (*(void *)(a1 + 16) - v4) >> 3) {
        goto LABEL_5;
      }
    }
    wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v12);
    if (v7)
    {
      uint64_t v9 = 0;
      LODWORD(v3) = 0;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 8 * v9);
        if ((*(uint64_t (**)(uint64_t, void, unsigned char *))(*(void *)v10 + 16))(v10, *(void *)(a3 + 16), v12))break; {
        LODWORD(v3) = ++v9 >= v7;
        }
      }
      while (v7 != v9);
    }
    else
    {
      LODWORD(v3) = 1;
    }
    wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v12);
    int v8 = 1;
  }
  return v8 & v3;
}

void sub_2135F399C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v5)
  {
LABEL_5:
    int v10 = 0;
  }
  else
  {
    uint64_t v4 = a3;
    unint64_t v9 = 0;
    while (!(*(unsigned int (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(v5 + 8 * v9) + 32))(*(void *)(v5 + 8 * v9), a2, v4, a4))
    {
      ++v9;
      uint64_t v5 = *(void *)(a1 + 8);
      if (v9 >= (*(void *)(a1 + 16) - v5) >> 3) {
        goto LABEL_5;
      }
    }
    wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v14);
    if (v9)
    {
      uint64_t v11 = 0;
      LODWORD(v4) = 0;
      do
      {
        uint64_t v12 = *(void *)(*(void *)(a1 + 8) + 8 * v11);
        if ((*(uint64_t (**)(uint64_t, void, unsigned char *))(*(void *)v12 + 16))(v12, *(void *)(a4 + 16), v14))break; {
        LODWORD(v4) = ++v11 >= v9;
        }
      }
      while (v9 != v11);
    }
    else
    {
      LODWORD(v4) = 1;
    }
    wireless_diagnostics::google::protobuf::FileDescriptorProto::~FileDescriptorProto((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v14);
    int v10 = 1;
  }
  return v10 & v4;
}

void sub_2135F3AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::MergedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, std::vector<int> *a3)
{
  v19[0] = 0;
  v19[1] = 0;
  uint64_t v17 = 0;
  uint64_t v18 = (const int *)v19;
  std::string __p = 0;
  unint64_t v16 = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v4)
  {
    char v8 = 0;
    uint64_t v12 = (const std::vector<int>::value_type *)v19;
  }
  else
  {
    unint64_t v7 = 0;
    char v8 = 0;
    do
    {
      int v9 = (*(uint64_t (**)(void, uint64_t, void **))(**(void **)(v4 + 8 * v7) + 40))(*(void *)(v4 + 8 * v7), a2, &__p);
      int v10 = (int *)__p;
      if (v9)
      {
        uint64_t v11 = v16;
        v20[0].__i_ = (std::__wrap_iter<const int *>::iterator_type)&v18;
        v20[1].__i_ = v18;
        if (__p != v16)
        {
          do
            std::insert_iterator<std::set<int>>::operator=[abi:ne180100]((uint64_t)v20, v10++);
          while (v10 != v11);
          int v10 = (int *)__p;
        }
        char v8 = 1;
      }
      unint64_t v16 = v10;
      ++v7;
      uint64_t v4 = *(void *)(a1 + 8);
    }
    while (v7 < (*(void *)(a1 + 16) - v4) >> 3);
    uint64_t v12 = v18;
  }
  v13.__i_ = a3->__end_;
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__tree_const_iterator<int,std::__tree_node<int,void *> *,long>,std::__tree_const_iterator<int,std::__tree_node<int,void *> *,long>,std::insert_iterator<std::vector<int>>>(a3, v13, v12, (const std::vector<int>::value_type *)v19, v20);
  if (__p)
  {
    unint64_t v16 = (int *)__p;
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&v18, v19[0]);
  return v8 & 1;
}

void sub_2135F3C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, char a12, void *a13)
{
  if (__p) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::destroy((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorDatabase::FindAllExtensionNumbers()
{
  return 0;
}

uint64_t wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  uint64_t v9 = *a3;
  std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(a1, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
  char v6 = v5;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v6 & 1;
}

void sub_2135F3CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddSymbol(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::ValidateSymbolName(a1, (uint64_t *)a2))
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    goto LABEL_6;
  }
  LastLessOrEqual = (unsigned __int8 *)wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::FindLastLessOrEqual(a1, (const void **)a2);
  if ((unsigned __int8 *)(a1 + 32) == LastLessOrEqual)
  {
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      std::string v12 = *(std::string *)a2;
    }
    uint64_t v13 = a3;
    std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>((uint64_t **)(a1 + 24), (const void **)&v12.__r_.__value_.__l.__data_, (uint64_t)&v12);
    goto LABEL_22;
  }
  unint64_t v7 = LastLessOrEqual;
  if (wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, LastLessOrEqual + 32, (unsigned __int8 *)a2))
  {
    goto LABEL_4;
  }
  uint64_t v9 = (unsigned __int8 *)*((void *)v7 + 1);
  if (v9)
  {
    do
    {
      int v10 = v9;
      uint64_t v9 = *(unsigned __int8 **)v9;
    }
    while (v9);
  }
  else
  {
    do
    {
      int v10 = (unsigned __int8 *)*((void *)v7 + 2);
      BOOL v11 = *(void *)v10 == (void)v7;
      unint64_t v7 = v10;
    }
    while (!v11);
  }
  if (v10 != (unsigned __int8 *)(a1 + 32)
    && wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::IsSubSymbol(a1, (unsigned __int8 *)a2, v10 + 32))
  {
LABEL_4:
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
LABEL_6:
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v12);
    return 0;
  }
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v12 = *(std::string *)a2;
  }
  uint64_t v13 = a3;
  std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>((uint64_t **)(a1 + 24), (uint64_t *)v10, (const void **)&v12.__r_.__value_.__l.__data_, (uint64_t)&v12);
LABEL_22:
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_2135F3F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddNestedExtensions(uint64_t a1, uint64_t a2, std::string::size_type a3)
{
  if (*(int *)(a2 + 80) < 1)
  {
LABEL_5:
    if (*(int *)(a2 + 56) < 1)
    {
      return 1;
    }
    else
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t result = wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddExtension(a1, *(void *)(*(void *)(a2 + 48) + 8 * v7), a3);
        if ((result & 1) == 0) {
          break;
        }
        ++v7;
      }
      while (v7 < *(int *)(a2 + 56));
    }
  }
  else
  {
    uint64_t v6 = 0;
    while ((wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddNestedExtensions(a1, *(void *)(*(void *)(a2 + 72) + 8 * v6), a3) & 1) != 0)
    {
      if (++v6 >= *(int *)(a2 + 80)) {
        goto LABEL_5;
      }
    }
    return 0;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::AddExtension(uint64_t a1, uint64_t a2, std::string::size_type a3)
{
  std::string::size_type v13 = a3;
  uint64_t v4 = *(void *)(a2 + 40);
  if (*(char *)(v4 + 23) < 0)
  {
    if (!*(void *)(v4 + 8)) {
      return 1;
    }
    char v5 = *(unsigned char **)v4;
  }
  else
  {
    char v5 = (unsigned char *)v4;
    if (!*(unsigned char *)(v4 + 23)) {
      return 1;
    }
  }
  if (*v5 != 46) {
    return 1;
  }
  uint64_t v6 = (uint64_t **)(a1 + 48);
  std::string::basic_string(&v12, (const std::string *)v4, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v14);
  int v7 = *(_DWORD *)(a2 + 24);
  std::string __p = v12;
  memset(&v12, 0, sizeof(v12));
  int v11 = v7;
  char v8 = wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>(v6, (long long *)&__p, &v13);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v12.__r_.__value_.__l.__data_);
    if (v8) {
      return 1;
    }
  }
  else if (v8)
  {
    return 1;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  return 0;
}

void sub_2135F41B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

uint64_t *std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(uint64_t **a1, const void **a2, uint64_t a3)
{
  char v5 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__construct_node<std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__construct_node<std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  int v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  *((void *)v6 + 7) = *(void *)(a2 + 24);
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_2135F4304(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::string>(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__construct_node<std::pair<std::string const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>(uint64_t **a1, long long *a2, std::string::size_type *a3)
{
  std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::pair[abi:ne180100]<true,0>(&__p, a2, a3);
  std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(a1, (const void **)&__p.__r_.__value_.__l.__data_, (long long *)&__p);
  char v5 = v4;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v5 & 1;
}

void sub_2135F43FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>(uint64_t **a1, const void **a2, long long *a3)
{
  char v5 = (uint64_t **)std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::pair<std::string,int>>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__construct_node<std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::pair<std::string,int>>(uint64_t a1, void *a2, const void **a3)
{
  char v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        uint64_t v8 = (void *)v4;
        uint64_t v9 = (const void **)(v4 + 32);
        if (!std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        char v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v7, v9, a3)) {
        break;
      }
      char v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

std::string *std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__construct_node<std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2135F45A0(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

BOOL std::less<std::pair<std::string,int>>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v5 = *((char *)a3 + 23);
  int v6 = *((char *)a2 + 23);
  if (v6 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = (size_t)a2[1];
  }
  if (v6 >= 0) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = *a2;
  }
  if (v5 >= 0) {
    size_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v9 = (size_t)a3[1];
  }
  if (v5 >= 0) {
    int v10 = a3;
  }
  else {
    int v10 = *a3;
  }
  if (v9 >= v7) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v9;
  }
  int v12 = memcmp(v8, v10, v11);
  BOOL v13 = v7 < v9;
  if (v12) {
    BOOL v13 = v12 < 0;
  }
  if (v13) {
    return 1;
  }
  int v15 = memcmp(v10, v8, v11);
  BOOL v16 = v9 < v7;
  if (v15) {
    BOOL v16 = v15 < 0;
  }
  return !v16 && *((_DWORD *)a2 + 6) < *((_DWORD *)a3 + 6);
}

std::string *std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  LODWORD(this[1].__r_.__value_.__l.__data_) = *((_DWORD *)a2 + 6);
  this[1].__r_.__value_.__l.__size_ = *((void *)a2 + 4);
  return this;
}

std::string *std::pair<std::pair<std::string,int> const,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>::pair[abi:ne180100]<true,0>(std::string *this, long long *a2, std::string::size_type *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v6;
  }
  LODWORD(this[1].__r_.__value_.__l.__data_) = *((_DWORD *)a2 + 6);
  this[1].__r_.__value_.__l.__size_ = *a3;
  return this;
}

uint64_t std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::pair<std::string,int>>(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v5, (const void **)(v3 + 32), a2);
    uint64_t v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

uint64_t wireless_diagnostics::google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddExtension(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v14 = a3;
  *((void *)&v14 + 1) = a4;
  uint64_t v5 = *(void *)(a2 + 40);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      return 1;
    }
    uint64_t v6 = *(unsigned char **)v5;
  }
  else
  {
    uint64_t v6 = (unsigned char *)v5;
    if (!*(unsigned char *)(v5 + 23)) {
      return 1;
    }
  }
  if (*v6 != 46) {
    return 1;
  }
  BOOL v7 = (uint64_t **)(a1 + 48);
  std::string::basic_string(&v13, (const std::string *)v5, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v15);
  int v8 = *(_DWORD *)(a2 + 24);
  std::string __p = v13;
  memset(&v13, 0, sizeof(v13));
  int v12 = v8;
  char v9 = wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,std::pair<void const*,int>>,std::pair<std::string,int>,std::pair<void const*,int>>(v7, (uint64_t)&__p, &v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v13.__r_.__value_.__l.__data_);
    if (v9) {
      return 1;
    }
  }
  else if (v9)
  {
    return 1;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  return 0;
}

void sub_2135F4950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
}

uint64_t wireless_diagnostics::google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,std::pair<void const*,int>>,std::pair<std::string,int>,std::pair<void const*,int>>(uint64_t **a1, uint64_t a2, long long *a3)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  int v10 = *(_DWORD *)(a2 + 24);
  long long v11 = *a3;
  std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>>(a1, (const void **)&__p.__r_.__value_.__l.__data_, (long long *)&__p);
  char v7 = v6;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7 & 1;
}

void sub_2135F4A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>>(uint64_t **a1, const void **a2, long long *a3)
{
  uint64_t v5 = (uint64_t **)std::__tree<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::__find_equal<std::pair<std::string,int>>((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__construct_node<std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

std::string *std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__construct_node<std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>>@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  char v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_2135F4B2C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  LODWORD(this[1].__r_.__value_.__l.__data_) = *((_DWORD *)a2 + 6);
  *(_OWORD *)&this[1].__r_.__value_.__r.__words[1] = a2[2];
  return this;
}

void *std::vector<wireless_diagnostics::google::protobuf::DescriptorDatabase *>::__init_with_size[abi:ne180100]<wireless_diagnostics::google::protobuf::DescriptorDatabase **,wireless_diagnostics::google::protobuf::DescriptorDatabase **>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    uint64_t result = std::vector<wireless_diagnostics::google::protobuf::DescriptorDatabase *>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_2135F4C08(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<wireless_diagnostics::google::protobuf::DescriptorDatabase *>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

uint64_t std::insert_iterator<std::set<int>>::operator=[abi:ne180100](uint64_t a1, int *a2)
{
  uint64_t v3 = std::__tree<int>::__emplace_hint_unique_key_args<int,int const&>(*(uint64_t ***)a1, *(uint64_t **)(a1 + 8), a2, a2);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      uint64_t v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    do
    {
      uint64_t v5 = (uint64_t *)v3[2];
      BOOL v6 = *v5 == (void)v3;
      uint64_t v3 = v5;
    }
    while (!v6);
  }
  *(void *)(a1 + 8) = v5;
  return a1;
}

void std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__tree_const_iterator<int,std::__tree_node<int,void *> *,long>,std::__tree_const_iterator<int,std::__tree_node<int,void *> *,long>,std::insert_iterator<std::vector<int>>>(std::vector<int> *this@<X3>, std::vector<int>::const_iterator __position@<0:X4>, const std::vector<int>::value_type *a3@<X1>, const std::vector<int>::value_type *a4@<X2>, std::vector<int>::const_iterator *a5@<X8>)
{
  BOOL v6 = a3;
  if (a3 != a4)
  {
    do
    {
      v9.__i_ = __position.__i_;
      v10.__i_ = std::vector<int>::insert(this, v9, v6 + 7).__i_;
      long long v11 = (std::vector<int>::value_type *)*((void *)v6 + 1);
      if (v11)
      {
        do
        {
          int v12 = (const std::vector<int>::value_type **)v11;
          long long v11 = *(std::vector<int>::value_type **)v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          int v12 = (const std::vector<int>::value_type **)*((void *)v6 + 2);
          BOOL v13 = *v12 == v6;
          BOOL v6 = (const std::vector<int>::value_type *)v12;
        }
        while (!v13);
      }
      __position.__i_ = v10.__i_ + 1;
      BOOL v6 = (const std::vector<int>::value_type *)v12;
    }
    while (v12 != (const std::vector<int>::value_type **)a4);
    BOOL v6 = a4;
  }
  a5->__i_ = v6;
  a5[1].__i_ = (std::__wrap_iter<const int *>::iterator_type)this;
  a5[2].__i_ = __position.__i_;
}

std::vector<int>::iterator std::vector<int>::insert(std::vector<int> *this, std::vector<int>::const_iterator __position, std::vector<int>::const_reference __x)
{
  std::vector<int>::const_reference v3 = __x;
  uint64_t i = (int *)__position.__i_;
  std::vector<std::string>::pointer end = this->__end_;
  p_end_cap = &this->__end_cap_;
  value = this->__end_cap_.__value_;
  if (end >= value)
  {
    std::vector<int>::pointer begin = this->__begin_;
    unint64_t v14 = end - this->__begin_ + 1;
    if (v14 >> 62) {
      std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = (char *)__position.__i_ - (char *)begin;
    uint64_t v16 = __position.__i_ - begin;
    uint64_t v17 = (char *)value - (char *)begin;
    if (v17 >> 1 > v14) {
      unint64_t v14 = v17 >> 1;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v18 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    __v.__end_cap_.__value_ = (std::allocator<int> *)&this->__end_cap_;
    if (v18) {
      uint64_t v19 = (int *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&this->__end_cap_, v18);
    }
    else {
      uint64_t v19 = 0;
    }
    unint64_t v20 = &v19[v16];
    __v.__first_ = v19;
    __v.__begin_ = v20;
    __v.__end_ = v20;
    __v.__end_cap_.__value_ = &v19[v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (begin == i) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 1;
        }
        uint64_t v23 = (int *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)p_end_cap, v22);
        unint64_t v20 = (int *)((char *)v23 + (v22 & 0xFFFFFFFFFFFFFFFCLL));
        __v.__first_ = v23;
        __v.__begin_ = v20;
        __v.__end_cap_.__value_ = &v23[v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= v21 >> 1;
        __v.__begin_ = v20;
      }
    }
    *unint64_t v20 = *v3;
    __v.__end_ = v20 + 1;
    uint64_t i = std::vector<int>::__swap_out_circular_buffer(this, &__v, i);
    if (__v.__end_ != __v.__begin_) {
      __v.__end_ = (std::__split_buffer<int>::pointer)((char *)__v.__end_
    }
                                                     + (((char *)__v.__begin_ - (char *)__v.__end_ + 3) & 0xFFFFFFFFFFFFFFFCLL));
    if (__v.__first_) {
      operator delete(__v.__first_);
    }
  }
  else if (__position.__i_ == end)
  {
    *__position.__i_ = *__x;
    this->__end_ = (std::vector<int>::pointer)(__position.__i_ + 1);
  }
  else
  {
    std::__wrap_iter<const int *>::iterator_type v9 = __position.__i_ + 1;
    std::vector<int>::iterator v10 = end - 1;
    std::vector<int>::pointer v11 = this->__end_;
    while (v10 < end)
    {
      int v12 = *v10++;
      *v11++ = v12;
    }
    this->__end_ = v11;
    if (end != v9) {
      memmove((void *)&end[-(end - v9)], __position.__i_, (char *)end - (char *)v9);
    }
    if (i <= v3) {
      v3 += this->__end_ > v3;
    }
    *uint64_t i = *v3;
  }
  return (std::vector<int>::iterator)i;
}

void sub_2135F4F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::vector<int>::pointer std::vector<int>::__swap_out_circular_buffer(std::vector<int> *this, std::__split_buffer<int> *__v, std::vector<int>::pointer __p)
{
  std::vector<int>::pointer begin = __v->__begin_;
  std::vector<int>::pointer v6 = this->__begin_;
  uint64_t v7 = begin;
  if (this->__begin_ != __p)
  {
    std::vector<int>::pointer v8 = __p;
    uint64_t v7 = __v->__begin_;
    do
    {
      int v9 = *--v8;
      *--uint64_t v7 = v9;
    }
    while (v8 != v6);
  }
  __v->__begin_ = v7;
  std::vector<std::string>::pointer end = this->__end_;
  std::__split_buffer<int>::pointer v11 = __v->__end_;
  int64_t v12 = (char *)end - (char *)__p;
  if (end != __p)
  {
    memmove(__v->__end_, __p, (char *)end - (char *)__p);
    uint64_t v7 = __v->__begin_;
  }
  __v->__end_ = (std::__split_buffer<int>::pointer)((char *)v11 + v12);
  BOOL v13 = this->__begin_;
  this->__begin_ = v7;
  __v->__begin_ = v13;
  unint64_t v14 = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = v14;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
  return begin;
}

void wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto(wireless_diagnostics::google::protobuf *this)
{
  uint64_t v1 = (wireless_diagnostics::google::protobuf::DescriptorPool *)wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::internal::Mutex **)wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v1);
  std::string::basic_string[abi:ne180100]<0>(__p, "google/protobuf/descriptor.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName(v2, (char *)__p);
  uint64_t v4 = FileByName;
  if (v6 < 0)
  {
    operator delete(__p[0]);
    if (v4) {
      goto LABEL_6;
    }
  }
  else if (FileByName)
  {
    goto LABEL_6;
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
LABEL_6:
  operator new();
}

void sub_2135F5B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t wireless_diagnostics::google::protobuf::protobuf_ShutdownFile_google_2fprotobuf_2fdescriptor_2eproto(wireless_diagnostics::google::protobuf *this)
{
  if (wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_);
  if (wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_);
  if (wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_);
  if (wireless_diagnostics::google::protobuf::FileOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::FileOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::FileOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::MessageOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::MessageOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::FieldOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::FieldOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::FieldOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::EnumOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::EnumOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::EnumOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::MethodOptions::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::MethodOptions::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::MethodOptions::default_instance_);
  if (wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_);
  if (wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_);
  if (wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_);
  if (wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_
  }
                                    + 8))(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_);
  {
                             + 8);
    return v2();
  }
  return result;
}

void *wireless_diagnostics::google::protobuf::anonymous namespace'::protobuf_RegisterTypes(wireless_diagnostics::google::protobuf *a1, uint64_t a2, const wireless_diagnostics::google::protobuf::Message *a3)
{
  __dmb(0xBu);
  if (v3 != 2)
  {
    v83[0] = MEMORY[0x263F8C768] + 16;
    v83[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v84 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v83);
  }
  uint64_t v5 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(a1);
    uint64_t v5 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_;
  }
  char v6 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v4, v5, a3);
  int v9 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v6);
    int v9 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_;
  }
  std::vector<int>::iterator v10 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v8, v9, v7);
  BOOL v13 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v10);
    BOOL v13 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_;
  }
  unint64_t v14 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v12, v13, v11);
  uint64_t v17 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_;
  if (!wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v14);
    uint64_t v17 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_;
  }
  unint64_t v18 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v16, v17, v15);
  unint64_t v21 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v18);
    unint64_t v21 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_;
  }
  unint64_t v22 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v20, v21, v19);
  uint64_t v25 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v22);
    uint64_t v25 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_;
  }
  uint64_t v26 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v24, v25, v23);
  int v29 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v26);
    int v29 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_;
  }
  uint64_t v30 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v28, v29, v27);
  int v33 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v30);
    int v33 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_;
  }
  int v34 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v32, v33, v31);
  int v37 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v34);
    int v37 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_;
  }
  uint64_t v38 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v36, v37, v35);
  uint64_t v41 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v38);
    uint64_t v41 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  }
  int v42 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v40, v41, v39);
  uint64_t v45 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MessageOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v42);
    uint64_t v45 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  }
  uint64_t v46 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v44, v45, v43);
  uint64_t v49 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FieldOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v46);
    uint64_t v49 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  }
  int v50 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v48, v49, v47);
  int v53 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v50);
    int v53 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  }
  int v54 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v52, v53, v51);
  std::string::size_type v57 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v54);
    std::string::size_type v57 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  }
  uint64_t v58 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v56, v57, v55);
  uint64_t v61 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v58);
    uint64_t v61 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  }
  uint64_t v62 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v60, v61, v59);
  uint64_t v65 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MethodOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v62);
    uint64_t v65 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  }
  int v66 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v64, v65, v63);
  uint64_t v69 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_;
  if (!wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v66);
    uint64_t v69 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_;
  }
  long long v70 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v68, v69, v67);
  uint64_t v73 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_;
  if (!wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v70);
    uint64_t v73 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_;
  }
  int v74 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v72, v73, v71);
  uint64_t v77 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  if (!wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v74);
    uint64_t v77 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  }
  long long v78 = (wireless_diagnostics::google::protobuf *)wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v76, v77, v75);
  uint64_t v81 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_;
  if (!wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(v78);
    uint64_t v81 = (const wireless_diagnostics::google::protobuf::Descriptor *)wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_;
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(v80, v81, v79);
}

void sub_2135F66FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::FileDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  }
  *((void *)this + 23) = v5;
  uint64_t v6 = wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  if (!wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v6 = wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  }
  *((void *)this + 24) = v6;
}

void wireless_diagnostics::google::protobuf::DescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::DescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MessageOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  }
  *((void *)this + 18) = v5;
}

void wireless_diagnostics::google::protobuf::FieldDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FieldOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  }
  *((void *)this + 7) = v5;
}

void wireless_diagnostics::google::protobuf::EnumDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  }
  *((void *)this + 6) = v5;
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  }
  *((void *)this + 3) = v5;
}

void wireless_diagnostics::google::protobuf::ServiceDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  }
  *((void *)this + 6) = v5;
}

void wireless_diagnostics::google::protobuf::MethodDescriptorProto::InitAsDefaultInstance(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MethodOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(this, a2, a3, a4);
    uint64_t v5 = wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  }
  *((void *)this + 5) = v5;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::SharedCtor(uint64_t this)
{
  *(void *)(this + 40) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::FileDescriptorSet *wireless_diagnostics::google::protobuf::FileDescriptorSet::FileDescriptorSet(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, const wireless_diagnostics::google::protobuf::FileDescriptorSet *a2)
{
  *(void *)this = &unk_26C3F9258;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0;
  wireless_diagnostics::google::protobuf::FileDescriptorSet::MergeFrom(this, a2);
  return this;
}

void sub_2135F699C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FileDescriptorSet::MergeFrom(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, const wireless_diagnostics::google::protobuf::FileDescriptorSet *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::FileDescriptorProto **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FileDescriptorProto>::New();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::FileDescriptorProto **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)a2 + 8));
}

void sub_2135F6B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::FileDescriptorSet::~FileDescriptorSet(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  *(void *)this = &unk_26C3F9258;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::FileDescriptorSet::~FileDescriptorSet(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::descriptor(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F6C50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::FileDescriptorSet::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::FileDescriptorSet::New(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
}

void sub_2135F6CD4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileDescriptorSet::Clear(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 16);
  uint64_t v4 = *((void *)this + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)this + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::FileDescriptorSet *)((char *)this + 16);
  uint64_t v7 = (void ***)((char *)this + 8);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = *((_DWORD *)this + 7);
        uint64_t v11 = *((int *)this + 6);
        if ((int)v11 >= v10)
        {
          if (v10 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v10 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v10 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FileDescriptorProto>::New();
        }
        uint64_t v12 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v11 + 1;
        uint64_t v13 = *(void *)(v12 + 8 * v11);
        unsigned int v25 = 0;
        unint64_t v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25))return 0; {
        }
          }
        else
        {
          unsigned int v25 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::FileDescriptorProto::MergePartialFromCodedStream(v13, a2, v17, v18)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v21;
        }
        unint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v23 = (unsigned char *)*((void *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
        {
          if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v22 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
  }
    }
}

uint64_t **wireless_diagnostics::google::protobuf::FileDescriptorSet::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (uint64_t **)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileDescriptorSet::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[50];
      if (v8 > 0x7F)
      {
        int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v8;
        int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = wireless_diagnostics::google::protobuf::FileDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FileDescriptorProto *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (uint64_t **)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::ByteSize(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *((unsigned int *)this + 6);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FileDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::FileDescriptorProto **)(*((void *)this + 2) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *((int *)this + 6));
  }
  uint64_t v8 = (void *)*((void *)this + 1);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v3;
  }
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void wireless_diagnostics::google::protobuf::FileDescriptorSet::MergeFrom(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::FileDescriptorSet::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135F7224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::FileDescriptorSet::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::FileDescriptorSet::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::FileDescriptorSet *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::FileDescriptorSet::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::FileDescriptorSet *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::IsInitialized(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  if (*((int *)this + 6) < 1) {
    return 1;
  }
  uint64_t v2 = 0;
  do
  {
    uint64_t v3 = *(void *)(*((void *)this + 2) + 8 * v2);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3);
    if ((result & 1) == 0) {
      break;
    }
    ++v2;
  }
  while (v2 < *((int *)this + 6));
  return result;
}

wireless_diagnostics::google::protobuf::FileDescriptorSet *wireless_diagnostics::google::protobuf::FileDescriptorSet::Swap(wireless_diagnostics::google::protobuf::FileDescriptorSet *this, wireless_diagnostics::google::protobuf::FileDescriptorSet *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    this = (wireless_diagnostics::google::protobuf::FileDescriptorSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    uint64_t v5 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::GetMetadata(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F74AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::FileDescriptorProto::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = MEMORY[0x263F8C740];
  this[3] = v1;
  this[24] = 0;
  this[25] = 0;
  this[23] = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::default_instance(wireless_diagnostics::google::protobuf::FileOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::FileOptions::default_instance_;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  if (!wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::SourceCodeInfo::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::FileDescriptorProto *wireless_diagnostics::google::protobuf::FileDescriptorProto::FileDescriptorProto(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
  *(void *)this = &unk_26C3F93F8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 26) = 0;
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v4;
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 23) = 0;
  wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(this, a2);
  return this;
}

void sub_2135F7624(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  uint64_t v10 = *((void *)v1 + 9);
  if (v10) {
    MEMORY[0x21668DB40](v10, 0x1000C8052888210);
  }
  if (*v8) {
    MEMORY[0x21668DB40](*v8, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, const wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const std::string **)(*((void *)a2 + 4) + 8 * v5);
      int v7 = *((_DWORD *)this + 11);
      uint64_t v8 = *((int *)this + 10);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 12))
        {
          uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 32));
          int v7 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v7 + 1;
        uint64_t v10 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(v4);
        uint64_t v11 = *((void *)this + 4);
        uint64_t v12 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v12 + 1;
        *(void *)(v11 + 8 * v12) = v10;
      }
      else
      {
        uint64_t v9 = *((void *)this + 4);
        *((_DWORD *)this + 10) = v8 + 1;
        uint64_t v10 = *(std::string **)(v9 + 8 * v8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)std::string::operator=(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 10));
  }
  int v13 = *((_DWORD *)a2 + 16);
  if (v13)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 56, *((_DWORD *)this + 16) + v13);
    memcpy((void *)(*((void *)this + 7) + 4 * *((int *)this + 16)), *((const void **)a2 + 7), 4 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  int v14 = *((_DWORD *)a2 + 20);
  if (v14)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 72, *((_DWORD *)this + 20) + v14);
    memcpy((void *)(*((void *)this + 9) + 4 * *((int *)this + 20)), *((const void **)a2 + 9), 4 * *((int *)a2 + 20));
    *((_DWORD *)this + 20) += *((_DWORD *)a2 + 20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      int v16 = *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a2 + 11) + 8 * v15);
      int v17 = *((_DWORD *)this + 25);
      uint64_t v18 = *((int *)this + 24);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 88));
          int v17 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v17 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
      }
      uint64_t v19 = *((void *)this + 11);
      *((_DWORD *)this + 24) = v18 + 1;
      wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::DescriptorProto **)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *((int *)a2 + 24));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v20 = 0;
    do
    {
      int v21 = *(const wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)a2 + 14) + 8 * v20);
      int v22 = *((_DWORD *)this + 31);
      uint64_t v23 = *((int *)this + 30);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 112));
          int v22 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v22 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
      }
      uint64_t v24 = *((void *)this + 14);
      *((_DWORD *)this + 30) = v23 + 1;
      wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v24 + 8 * v23), v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      uint64_t v26 = *(const wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(*((void *)a2 + 17) + 8 * v25);
      int v27 = *((_DWORD *)this + 37);
      uint64_t v28 = *((int *)this + 36);
      if ((int)v28 >= v27)
      {
        if (v27 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 136));
          int v27 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v27 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::ServiceDescriptorProto>::New();
      }
      uint64_t v29 = *((void *)this + 17);
      *((_DWORD *)this + 36) = v28 + 1;
      wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(v29 + 8 * v28), v26);
      ++v25;
    }
    while (v25 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 160));
  if (*((int *)a2 + 42) >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = *(void ****)(*((void *)a2 + 20) + 8 * v30);
      int v32 = *((_DWORD *)this + 43);
      uint64_t v33 = *((int *)this + 42);
      if ((int)v33 >= v32)
      {
        if (v32 == *((_DWORD *)this + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)this + 160));
          int v32 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v32 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v34 = *((void *)this + 20);
      *((_DWORD *)this + 42) = v33 + 1;
      wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(*(void ****)(v34 + 8 * v33), v31);
      ++v30;
    }
    while (v30 < *((int *)a2 + 42));
  }
  int v35 = *((_DWORD *)a2 + 51);
  if ((_BYTE)v35)
  {
    uint64_t v36 = (std::string *)MEMORY[0x263F8C740];
    if (v35)
    {
      int v37 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 51) |= 1u;
      uint64_t v38 = (std::string *)*((void *)this + 2);
      if (v38 == v36) {
        operator new();
      }
      std::string::operator=(v38, v37);
      int v35 = *((_DWORD *)a2 + 51);
    }
    if ((v35 & 2) != 0)
    {
      uint64_t v39 = (const std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 51) |= 2u;
      int v40 = (std::string *)*((void *)this + 3);
      if (v40 == v36) {
        operator new();
      }
      std::string::operator=(v40, v39);
      int v35 = *((_DWORD *)a2 + 51);
    }
  }
  if ((v35 & 0x1FE00) != 0)
  {
    if ((v35 & 0x200) != 0)
    {
      *((_DWORD *)this + 51) |= 0x200u;
      uint64_t v41 = (wireless_diagnostics::google::protobuf::FileOptions *)*((void *)this + 23);
      if (!v41) {
        operator new();
      }
      int v42 = (const wireless_diagnostics::google::protobuf::FileOptions *)*((void *)a2 + 23);
      if (!v42) {
        int v42 = *(const wireless_diagnostics::google::protobuf::FileOptions **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_
      }
                                                                            + 184);
      wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(v41, v42);
      int v35 = *((_DWORD *)a2 + 51);
    }
    if ((v35 & 0x400) != 0)
    {
      *((_DWORD *)this + 51) |= 0x400u;
      char v43 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)*((void *)this + 24);
      if (!v43) {
        operator new();
      }
      int v44 = (const wireless_diagnostics::google::protobuf::SourceCodeInfo *)*((void *)a2 + 24);
      if (!v44) {
        int v44 = *(const wireless_diagnostics::google::protobuf::SourceCodeInfo **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_
      }
                                                                               + 192);
      wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(v43, v44);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::FileDescriptorProto *)((char *)a2 + 8));
}

void sub_2135F7C88(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 200) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F7DA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::FileDescriptorProto::New(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
}

void sub_2135F7E28(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10B1C4063BD6257);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileOptions::Clear(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8));
  int v2 = *((_DWORD *)this + 26);
  if ((_BYTE)v2)
  {
    uint64_t v3 = MEMORY[0x263F8C740];
    if (v2)
    {
      uint64_t v4 = *((void *)this + 5);
      if (v4 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 104) & 2) != 0)
    {
      uint64_t v5 = *((void *)this + 6);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *((_WORD *)this + 30) = 0;
    *((_DWORD *)this + 14) = 1;
    if ((*((unsigned char *)this + 104) & 0x20) != 0)
    {
      uint64_t v6 = *((void *)this + 8);
      if (v6 != v3)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    *((_WORD *)this + 31) = 0;
    int v2 = *((_DWORD *)this + 26);
  }
  if ((v2 & 0xFF00) != 0) {
    *((unsigned char *)this + 96) = 0;
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 72);
  uint64_t v9 = *((void *)this + 4);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 32);
  *((_DWORD *)v8 + 18) = 0;
  if (v9)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v8);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::SourceCodeInfo::Clear(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 16);
  uint64_t v4 = *((void *)this + 1);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)this + 8);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v10 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v10 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v11 = 0;
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v7 = v11;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v8 = *(_DWORD *)(a2 + 8);
      if (v8 == *(_DWORD *)(a2 + 12))
      {
        wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a2, v8 + 1);
        int v8 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t **wireless_diagnostics::google::protobuf::FileDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 51);
  if (v6)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 204);
  }
  if ((v6 & 2) != 0) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v7;
    }
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 88) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 112) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 136) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 160) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 168));
  }
  int v12 = *(_DWORD *)(v5 + 204);
  if ((v12 & 0x200) != 0)
  {
    uint64_t v13 = *(void *)(v5 + 184);
    if (!v13) {
      uint64_t v13 = *(void *)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ + 184);
    }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
    int v12 = *(_DWORD *)(v5 + 204);
  }
  if ((v12 & 0x400) != 0)
  {
    uint64_t v14 = *(void *)(v5 + 192);
    if (!v14) {
      uint64_t v14 = *(void *)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ + 192);
    }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(*(void *)(v5 + 56) + 4 * v15++), (uint64_t)a2, a4);
    while (v15 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v16 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(*(void *)(v5 + 72) + 4 * v16++), (uint64_t)a2, a4);
    while (v16 < *(int *)(v5 + 80));
  }
  uint64_t v19 = *(void **)(v5 + 8);
  uint64_t v18 = (uint64_t **)(v5 + 8);
  int v17 = v19;
  if (v19 && *v17 != v17[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v18, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 51);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    uint64_t v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (uint64_t)v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 51);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v14 = *((void *)this + 3);
    *(unsigned char *)uint64_t v4 = 18;
    if (*(char *)(v14 + 23) < 0) {
      uint64_t v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v14 + 8);
    }
    else {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
    }
    if (v15 > 0x7F)
    {
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      uint64_t v16 = (uint64_t)v4 + 2;
    }
    int v17 = *(char *)(v14 + 23);
    if (v17 >= 0) {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14;
    }
    else {
      uint64_t v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v14;
    }
    if (v17 >= 0) {
      uint64_t v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
    }
    else {
      uint64_t v19 = (const void *)*(unsigned int *)(v14 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v20 = 0;
    do
    {
      uint64_t v21 = *(void *)(*((void *)this + 4) + 8 * v20);
      *(unsigned char *)uint64_t v4 = 26;
      if (*(char *)(v21 + 23) < 0) {
        int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
      }
      else {
        int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
      }
      if (v22 > 0x7F)
      {
        uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v22;
        uint64_t v23 = (uint64_t)v4 + 2;
      }
      int v24 = *(char *)(v21 + 23);
      if (v24 >= 0) {
        uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21;
      }
      else {
        uint64_t v25 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v21;
      }
      if (v24 >= 0) {
        uint64_t v26 = (const void *)*(unsigned __int8 *)(v21 + 23);
      }
      else {
        uint64_t v26 = (const void *)*(unsigned int *)(v21 + 8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v25, v26, v23, a4);
      ++v20;
    }
    while (v20 < *((int *)this + 10));
  }
  if (*((int *)this + 24) >= 1)
  {
    uint64_t v27 = 0;
    do
    {
      uint64_t v28 = *(unsigned int **)(*((void *)this + 11) + 8 * v27);
      *(unsigned char *)uint64_t v4 = 34;
      uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[38];
      if (v29 > 0x7F)
      {
        uint64_t v30 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v29;
        uint64_t v30 = (unsigned __int8 *)v4 + 2;
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::DescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::DescriptorProto *)v28, v30, a3, a4);
      ++v27;
    }
    while (v27 < *((int *)this + 24));
  }
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      int v32 = *(unsigned int **)(*((void *)this + 14) + 8 * v31);
      *(unsigned char *)uint64_t v4 = 42;
      uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[14];
      if (v33 > 0x7F)
      {
        uint64_t v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v33;
        uint64_t v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)v32, v34, a3, a4);
      ++v31;
    }
    while (v31 < *((int *)this + 30));
  }
  if (*((int *)this + 36) >= 1)
  {
    uint64_t v35 = 0;
    do
    {
      uint64_t v36 = *(unsigned int **)(*((void *)this + 17) + 8 * v35);
      *(unsigned char *)uint64_t v4 = 50;
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36[14];
      if (v37 > 0x7F)
      {
        uint64_t v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v37;
        uint64_t v38 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)v36, v38, a3, a4);
      ++v35;
    }
    while (v35 < *((int *)this + 36));
  }
  if (*((int *)this + 42) >= 1)
  {
    uint64_t v39 = 0;
    do
    {
      int v40 = *(unsigned int **)(*((void *)this + 20) + 8 * v39);
      *(unsigned char *)uint64_t v4 = 58;
      uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[17];
      if (v41 > 0x7F)
      {
        int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v41;
        int v42 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FieldDescriptorProto *)v40, v42, a3, a4);
      ++v39;
    }
    while (v39 < *((int *)this + 42));
  }
  int v43 = *((_DWORD *)this + 51);
  if ((v43 & 0x200) != 0)
  {
    int v44 = (unsigned int *)*((void *)this + 23);
    if (!v44) {
      int v44 = *(unsigned int **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ + 184);
    }
    *(unsigned char *)uint64_t v4 = 66;
    uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v44[25];
    if (v45 > 0x7F)
    {
      uint64_t v46 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v45, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v45;
      uint64_t v46 = (unsigned __int8 *)v4 + 2;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::FileOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FileOptions *)v44, v46, a3);
    int v43 = *((_DWORD *)this + 51);
  }
  if ((v43 & 0x400) != 0)
  {
    int v47 = (unsigned int *)*((void *)this + 24);
    if (!v47) {
      int v47 = *(unsigned int **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_ + 192);
    }
    *(unsigned char *)uint64_t v4 = 74;
    uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v47[10];
    if (v48 > 0x7F)
    {
      uint64_t v49 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v48;
      uint64_t v49 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::SourceCodeInfo::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::SourceCodeInfo *)v47, v49, a3, a4);
  }
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v50 = 0;
    while (1)
    {
      uint64_t v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 7) + 4 * v50);
      *(unsigned char *)uint64_t v4 = 80;
      uint64_t v52 = (uint64_t)v4 + 1;
      if ((v51 & 0x80000000) != 0) {
        break;
      }
      if (v51 > 0x7F)
      {
        uint64_t v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v51, v52, a3);
        goto LABEL_89;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v51;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_90:
      if (++v50 >= *((int *)this + 16)) {
        goto LABEL_91;
      }
    }
    uint64_t v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v51, v52, a3);
LABEL_89:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v53;
    goto LABEL_90;
  }
LABEL_91:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v54 = 0;
    while (1)
    {
      int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 9) + 4 * v54);
      *(unsigned char *)uint64_t v4 = 88;
      uint64_t v56 = (uint64_t)v4 + 1;
      if ((v55 & 0x80000000) != 0) {
        break;
      }
      if (v55 > 0x7F)
      {
        uint64_t v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, v56, a3);
        goto LABEL_98;
      }
      *((unsigned char *)v4 + 1) = (_BYTE)v55;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_99:
      if (++v54 >= *((int *)this + 20)) {
        goto LABEL_100;
      }
    }
    uint64_t v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v55, v56, a3);
LABEL_98:
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v57;
    goto LABEL_99;
  }
LABEL_100:
  unsigned int v60 = (void *)*((void *)this + 1);
  uint64_t v59 = (uint64_t **)((char *)this + 8);
  uint64_t v58 = v60;
  if (!v60 || *v58 == v58[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v59, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 51);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_24;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *((_DWORD *)this + 51);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 3);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v3 = *((_DWORD *)this + 51);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v4 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v3 & 0x1FE00) != 0)
  {
    if ((v3 & 0x200) != 0)
    {
      int v17 = (wireless_diagnostics::google::protobuf::FileOptions *)*((void *)this + 23);
      if (!v17) {
        int v17 = *(wireless_diagnostics::google::protobuf::FileOptions **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_
      }
                                                                      + 184);
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FileOptions::ByteSize(v17, a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      }
      else {
        int v20 = 1;
      }
      v4 += v19 + v20 + 1;
      int v3 = *((_DWORD *)this + 51);
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)*((void *)this + 24);
      if (!v21) {
        uint64_t v21 = *(wireless_diagnostics::google::protobuf::SourceCodeInfo **)(wireless_diagnostics::google::protobuf::FileDescriptorProto::default_instance_
      }
                                                                         + 192);
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::SourceCodeInfo::ByteSize(v21, a2);
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      }
      else {
        int v24 = 1;
      }
      v4 += v23 + v24 + 1;
    }
  }
  int v25 = *((_DWORD *)this + 10);
  int v26 = v25 + v4;
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i < v25; ++i)
    {
      uint64_t v28 = *(void *)(*((void *)this + 4) + 8 * i);
      int v29 = *(unsigned __int8 *)(v28 + 23);
      char v30 = v29;
      uint64_t v31 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        unint64_t v32 = *(unsigned __int8 *)(v28 + 23);
      }
      else {
        unint64_t v32 = v31;
      }
      if (v32 >= 0x80)
      {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32);
        int v29 = *(unsigned __int8 *)(v28 + 23);
        uint64_t v31 = *(void *)(v28 + 8);
        int v25 = *((_DWORD *)this + 10);
        char v30 = *(unsigned char *)(v28 + 23);
      }
      else
      {
        int v33 = 1;
      }
      if (v30 < 0) {
        int v29 = v31;
      }
      v26 += v33 + v29;
    }
  }
  int v34 = *((_DWORD *)this + 16);
  if (v34 < 1)
  {
    int v36 = 0;
  }
  else
  {
    uint64_t v35 = 0;
    int v36 = 0;
    do
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 7)
                                                                                             + 4 * v35);
      if ((v37 & 0x80000000) != 0)
      {
        int v38 = 10;
      }
      else if (v37 >= 0x80)
      {
        int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
        int v34 = *((_DWORD *)this + 16);
      }
      else
      {
        int v38 = 1;
      }
      v36 += v38;
      ++v35;
    }
    while (v35 < v34);
  }
  int v39 = *((_DWORD *)this + 20);
  if (v39 < 1)
  {
    int v41 = 0;
  }
  else
  {
    uint64_t v40 = 0;
    int v41 = 0;
    do
    {
      int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 9)
                                                                                             + 4 * v40);
      if ((v42 & 0x80000000) != 0)
      {
        int v43 = 10;
      }
      else if (v42 >= 0x80)
      {
        int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
        int v39 = *((_DWORD *)this + 20);
      }
      else
      {
        int v43 = 1;
      }
      v41 += v43;
      ++v40;
    }
    while (v40 < v39);
  }
  int v44 = *((_DWORD *)this + 24);
  int v45 = v36 + v26 + v39 + v34 + v41 + v44;
  if (v44 >= 1)
  {
    uint64_t v46 = 0;
    do
    {
      int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::DescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)this + 11) + 8 * v46), a2);
      int v48 = (int)v47;
      if (v47 >= 0x80) {
        int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
      }
      else {
        int v49 = 1;
      }
      v45 += v48 + v49;
      ++v46;
    }
    while (v46 < *((int *)this + 24));
  }
  int v50 = *((_DWORD *)this + 30);
  int v51 = v50 + v45;
  if (v50 >= 1)
  {
    uint64_t v52 = 0;
    do
    {
      uint64_t v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)this + 14) + 8 * v52), a2);
      int v54 = (int)v53;
      if (v53 >= 0x80) {
        int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
      }
      else {
        int v55 = 1;
      }
      v51 += v54 + v55;
      ++v52;
    }
    while (v52 < *((int *)this + 30));
  }
  int v56 = *((_DWORD *)this + 36);
  int v57 = v56 + v51;
  if (v56 >= 1)
  {
    uint64_t v58 = 0;
    do
    {
      uint64_t v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::ServiceDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::ServiceDescriptorProto **)(*((void *)this + 17) + 8 * v58), a2);
      int v60 = (int)v59;
      if (v59 >= 0x80) {
        int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
      }
      else {
        int v61 = 1;
      }
      v57 += v60 + v61;
      ++v58;
    }
    while (v58 < *((int *)this + 36));
  }
  int v62 = *((_DWORD *)this + 42);
  uint64_t v63 = (v62 + v57);
  if (v62 >= 1)
  {
    uint64_t v64 = 0;
    do
    {
      uint64_t v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)this + 20) + 8 * v64), a2);
      int v66 = (int)v65;
      if (v65 >= 0x80) {
        int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65);
      }
      else {
        int v67 = 1;
      }
      uint64_t v63 = (v66 + v63 + v67);
      ++v64;
    }
    while (v64 < *((int *)this + 42));
  }
  uint64_t v68 = (void *)*((void *)this + 1);
  if (v68 && *v68 != v68[1]) {
    uint64_t v63 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v63;
  }
  *((_DWORD *)this + 50) = v63;
  return v63;
}

void wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135F8D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(wireless_diagnostics::google::protobuf::FileOptions *this, const wireless_diagnostics::google::protobuf::FileOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 72));
  if (*((int *)a2 + 20) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 9) + 8 * v4);
      int v6 = *((_DWORD *)this + 21);
      uint64_t v7 = *((int *)this + 20);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 22))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 72));
          int v6 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 9);
      *((_DWORD *)this + 20) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 20));
  }
  int v9 = *((_DWORD *)a2 + 26);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  int v10 = (std::string *)MEMORY[0x263F8C740];
  if (v9)
  {
    uint64_t v14 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 26) |= 1u;
    unint64_t v15 = (std::string *)*((void *)this + 5);
    if (v15 == v10) {
      operator new();
    }
    std::string::operator=(v15, v14);
    int v9 = *((_DWORD *)a2 + 26);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v16 = (const std::string *)*((void *)a2 + 6);
  *((_DWORD *)this + 26) |= 2u;
  int v17 = (std::string *)*((void *)this + 6);
  if (v17 == v10) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v9 = *((_DWORD *)a2 + 26);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v18 = *((unsigned char *)a2 + 60);
  *((_DWORD *)this + 26) |= 4u;
  *((unsigned char *)this + 60) = v18;
  int v9 = *((_DWORD *)a2 + 26);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v19 = *((unsigned char *)a2 + 61);
  *((_DWORD *)this + 26) |= 8u;
  *((unsigned char *)this + 61) = v19;
  int v9 = *((_DWORD *)a2 + 26);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_33:
    uint64_t v21 = (const std::string *)*((void *)a2 + 8);
    *((_DWORD *)this + 26) |= 0x20u;
    int v22 = (std::string *)*((void *)this + 8);
    if (v22 == v10) {
      operator new();
    }
    std::string::operator=(v22, v21);
    int v9 = *((_DWORD *)a2 + 26);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v20 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 26) |= 0x10u;
  *((_DWORD *)this + 14) = v20;
  int v9 = *((_DWORD *)a2 + 26);
  if ((v9 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_36:
  char v23 = *((unsigned char *)a2 + 62);
  *((_DWORD *)this + 26) |= 0x40u;
  *((unsigned char *)this + 62) = v23;
  int v9 = *((_DWORD *)a2 + 26);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    char v11 = *((unsigned char *)a2 + 63);
    *((_DWORD *)this + 26) |= 0x80u;
    *((unsigned char *)this + 63) = v11;
    int v9 = *((_DWORD *)a2 + 26);
  }
LABEL_21:
  if ((v9 & 0x100) != 0)
  {
    char v12 = *((unsigned char *)a2 + 96);
    *((_DWORD *)this + 26) |= 0x100u;
    *((unsigned char *)this + 96) = v12;
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::FileOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::FileOptions *)((char *)a2 + 32));
}

void sub_2135F903C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, const wireless_diagnostics::google::protobuf::SourceCodeInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::SourceCodeInfo_Location **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::SourceCodeInfo_Location>::New();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(*(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)a2 + 8));
}

void sub_2135F9188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::FileDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::FileDescriptorProto *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::FileDescriptorProto::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::FileDescriptorProto *)a2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::FileDescriptorProto *wireless_diagnostics::google::protobuf::FileDescriptorProto::Swap(wireless_diagnostics::google::protobuf::FileDescriptorProto *this, wireless_diagnostics::google::protobuf::FileDescriptorProto *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v6 = *((void *)v3 + 7);
    *((void *)v3 + 7) = *((void *)a2 + 7);
    uint64_t v7 = *((void *)a2 + 8);
    *((void *)a2 + 7) = v6;
    uint64_t v8 = *((void *)v3 + 8);
    *((void *)v3 + 8) = v7;
    *((void *)a2 + 8) = v8;
    uint64_t v9 = *((void *)v3 + 9);
    *((void *)v3 + 9) = *((void *)a2 + 9);
    uint64_t v10 = *((void *)a2 + 10);
    *((void *)a2 + 9) = v9;
    uint64_t v11 = *((void *)v3 + 10);
    *((void *)v3 + 10) = v10;
    *((void *)a2 + 10) = v11;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (wireless_diagnostics::google::protobuf::FileDescriptorProto *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v12 = *((void *)v3 + 23);
    *((void *)v3 + 23) = *((void *)a2 + 23);
    *((void *)a2 + 23) = v12;
    uint64_t v13 = *((void *)v3 + 24);
    *((void *)v3 + 24) = *((void *)a2 + 24);
    *((void *)a2 + 24) = v13;
    LODWORD(v13) = *((_DWORD *)v3 + 51);
    *((_DWORD *)v3 + 51) = *((_DWORD *)a2 + 51);
    *((_DWORD *)a2 + 51) = v13;
    uint64_t v14 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v14;
    LODWORD(v14) = *((_DWORD *)v3 + 50);
    *((_DWORD *)v3 + 50) = *((_DWORD *)a2 + 50);
    *((_DWORD *)a2 + 50) = v14;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F9448(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::SharedCtor(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::DescriptorProto_ExtensionRange(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, const wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  *(void *)this = &unk_26C3F9AD0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a2);
  return this;
}

void sub_2135F94CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, const wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      int v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 4) = v5;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 7) |= 2u;
      *((_DWORD *)this + 5) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)((char *)a2 + 8));
}

void sub_2135F95A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::descriptor(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F9704(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_;
  if (!wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::New(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
}

void sub_2135F9788(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40380937A6);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::Clear(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if (*((unsigned char *)this + 28)) {
    *((void *)this + 2) = 0;
  }
  uint64_t v2 = *((void *)this + 1);
  uint64_t result = (wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t **wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 7);
  if (v6)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *((unsigned int *)this + 4), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (uint64_t **)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
    *(unsigned char *)a2 = 8;
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (uint64_t)a2 + 1, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v5;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_8;
      }
      int v6 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (uint64_t)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v6;
  }
LABEL_8:
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 5);
    *(unsigned char *)a2 = 16;
    if ((v7 & 0x80000000) != 0)
    {
      uint64_t v8 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (uint64_t)a2 + 1, a3);
    }
    else
    {
      if (v7 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        goto LABEL_15;
      }
      uint64_t v8 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)a2 + 1, a3);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v8;
  }
LABEL_15:
  uint64_t v11 = (void *)*((void *)this + 1);
  uint64_t v10 = (uint64_t **)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::ByteSize(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *((unsigned char *)this + 28);
  if (v3)
  {
    if ((*((unsigned char *)this + 28) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*((unsigned char *)this + 28) & 2) == 0) {
        goto LABEL_19;
      }
LABEL_13:
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v4 = (v7 + v4);
      goto LABEL_19;
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    if ((*((_DWORD *)this + 7) & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  uint64_t v8 = (void *)*((void *)this + 1);
  if (v8 && *v8 != v8[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v4;
  }
  *((_DWORD *)this + 6) = v4;
  return v4;
}

void wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135F9AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::Swap(uint64_t this, wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)this)
  {
    int v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    int v3 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    uint64_t v5 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::GetMetadata(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135F9CE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::DescriptorProto::SharedCtor(void *this)
{
  this[2] = MEMORY[0x263F8C740];
  this[18] = 0;
  this[19] = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::default_instance(wireless_diagnostics::google::protobuf::MessageOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MessageOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::MessageOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::DescriptorProto *wireless_diagnostics::google::protobuf::DescriptorProto::DescriptorProto(wireless_diagnostics::google::protobuf::DescriptorProto *this, const wireless_diagnostics::google::protobuf::DescriptorProto *a2)
{
  *(void *)this = &unk_26C3F90D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  *((_DWORD *)this + 34) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(this, a2);
  return this;
}

void sub_2135F9E14(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v7);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v6);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v5);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::DescriptorProto *this, const wireless_diagnostics::google::protobuf::DescriptorProto *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void ****)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 24));
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(*(void ****)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 48));
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void ****)(*((void *)a2 + 6) + 8 * v9);
      int v11 = *((_DWORD *)this + 15);
      uint64_t v12 = *((int *)this + 14);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 48));
          int v11 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v11 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FieldDescriptorProto>::New();
      }
      uint64_t v13 = *((void *)this + 6);
      *((_DWORD *)this + 14) = v12 + 1;
      wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(*(void ****)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 14));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 72));
  if (*((int *)a2 + 20) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unint64_t v15 = *(const wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)a2 + 9) + 8 * v14);
      int v16 = *((_DWORD *)this + 21);
      uint64_t v17 = *((int *)this + 20);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 22))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 72));
          int v16 = *((_DWORD *)this + 21);
        }
        *((_DWORD *)this + 21) = v16 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto>::New();
      }
      uint64_t v18 = *((void *)this + 9);
      *((_DWORD *)this + 20) = v17 + 1;
      wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::DescriptorProto **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 20));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 96));
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)a2 + 12) + 8 * v19);
      int v21 = *((_DWORD *)this + 27);
      uint64_t v22 = *((int *)this + 26);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 96));
          int v21 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v21 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumDescriptorProto>::New();
      }
      uint64_t v23 = *((void *)this + 12);
      *((_DWORD *)this + 26) = v22 + 1;
      wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 26));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 120));
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = *(const wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)a2 + 15)
                                                                                             + 8 * v24);
      int v26 = *((_DWORD *)this + 33);
      uint64_t v27 = *((int *)this + 32);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 34))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 120));
          int v26 = *((_DWORD *)this + 33);
        }
        *((_DWORD *)this + 33) = v26 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange>::New();
      }
      uint64_t v28 = *((void *)this + 15);
      *((_DWORD *)this + 32) = v27 + 1;
      wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(*(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 32));
  }
  LOBYTE(v29) = *((unsigned char *)a2 + 156);
  if ((_BYTE)v29)
  {
    if (*((unsigned char *)a2 + 156))
    {
      char v30 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 39) |= 1u;
      uint64_t v31 = (std::string *)*((void *)this + 2);
      if (v31 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v31, v30);
      int v29 = *((_DWORD *)a2 + 39);
    }
    if ((v29 & 0x40) != 0)
    {
      *((_DWORD *)this + 39) |= 0x40u;
      unint64_t v32 = (wireless_diagnostics::google::protobuf::MessageOptions *)*((void *)this + 18);
      if (!v32) {
        operator new();
      }
      int v33 = (const wireless_diagnostics::google::protobuf::MessageOptions *)*((void *)a2 + 18);
      if (!v33) {
        int v33 = *(const wireless_diagnostics::google::protobuf::MessageOptions **)(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_
      }
                                                                               + 144);
      wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(v32, v33);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)a2 + 8));
}

void sub_2135FA300(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 152) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::descriptor(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FA3D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::default_instance(wireless_diagnostics::google::protobuf::DescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::DescriptorProto::New(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
}

void sub_2135FA458(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4073756666);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::DescriptorProto::Clear(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  if (*((unsigned char *)this + 156))
  {
    if (*((unsigned char *)this + 156))
    {
      uint64_t v2 = *((void *)this + 2);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 156) & 0x40) != 0)
    {
      int v3 = (wireless_diagnostics::google::protobuf::MessageOptions *)*((void *)this + 18);
      if (v3) {
        wireless_diagnostics::google::protobuf::MessageOptions::Clear(v3);
      }
    }
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 24);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 48);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 72);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 96);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 120);
  uint64_t v6 = *((void *)this + 1);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::DescriptorProto *)((char *)this + 8);
  *((_DWORD *)v5 + 37) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MessageOptions::Clear(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8));
  if (*((unsigned char *)this + 72)) {
    *((_WORD *)this + 32) = 0;
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 40);
  uint64_t v4 = *((void *)this + 4);
  int v3 = (wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 32);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t **wireless_diagnostics::google::protobuf::DescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((unsigned char *)this + 156)) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 72) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 96) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 120) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 48) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 56));
  }
  if ((*(unsigned char *)(v5 + 156) & 0x40) != 0)
  {
    uint64_t v11 = *(void *)(v5 + 144);
    if (!v11) {
      uint64_t v11 = *(void *)(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_ + 144);
    }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  }
  uint64_t v14 = *(void **)(v5 + 8);
  uint64_t v13 = (uint64_t **)(v5 + 8);
  uint64_t v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::DescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::DescriptorProto *this, unsigned __int8 *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 156))
  {
    uint64_t v6 = *((void *)this + 2);
    *a2 = 10;
    uint64_t v7 = a2 + 1;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)v7, a3);
    }
    else
    {
      v4[1] = v8;
      uint64_t v9 = (uint64_t)(v4 + 2);
    }
    int v10 = *(char *)(v6 + 23);
    if (v10 >= 0) {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      uint64_t v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v10 >= 0) {
      uint64_t v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      uint64_t v12 = (const void *)*(unsigned int *)(v6 + 8);
    }
    uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = *(unsigned int **)(*((void *)this + 3) + 8 * v13);
      *uint64_t v4 = 18;
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[17];
      if (v15 > 0x7F)
      {
        int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)(v4 + 1), a3);
      }
      else
      {
        v4[1] = v15;
        int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v4 + 2);
      }
      uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FieldDescriptorProto *)v14, v16, a3, a4);
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(unsigned int **)(*((void *)this + 9) + 8 * v17);
      *uint64_t v4 = 26;
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18[38];
      if (v19 > 0x7F)
      {
        int v20 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (uint64_t)(v4 + 1), a3);
      }
      else
      {
        v4[1] = v19;
        int v20 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::DescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::DescriptorProto *)v18, v20);
      ++v17;
    }
    while (v17 < *((int *)this + 20));
  }
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      uint64_t v22 = *(unsigned int **)(*((void *)this + 12) + 8 * v21);
      *uint64_t v4 = 34;
      uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22[14];
      if (v23 > 0x7F)
      {
        uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (uint64_t)(v4 + 1), a3);
      }
      else
      {
        v4[1] = v23;
        uint64_t v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v4 + 2);
      }
      uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)v22, v24, a3, a4);
      ++v21;
    }
    while (v21 < *((int *)this + 26));
  }
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = *(unsigned int **)(*((void *)this + 15) + 8 * v25);
      *uint64_t v4 = 42;
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[6];
      if (v27 > 0x7F)
      {
        uint64_t v28 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (uint64_t)(v4 + 1), a3);
      }
      else
      {
        v4[1] = v27;
        uint64_t v28 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v4 + 2);
      }
      uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *)v26, v28, a3, a4);
      ++v25;
    }
    while (v25 < *((int *)this + 32));
  }
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      char v30 = *(unsigned int **)(*((void *)this + 6) + 8 * v29);
      *uint64_t v4 = 50;
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[17];
      if (v31 > 0x7F)
      {
        unint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (uint64_t)(v4 + 1), a3);
      }
      else
      {
        v4[1] = v31;
        unint64_t v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v4 + 2);
      }
      uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FieldDescriptorProto *)v30, v32, a3, a4);
      ++v29;
    }
    while (v29 < *((int *)this + 14));
  }
  if ((*((unsigned char *)this + 156) & 0x40) != 0)
  {
    int v33 = (unsigned int *)*((void *)this + 18);
    if (!v33) {
      int v33 = *(unsigned int **)(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_ + 144);
    }
    *uint64_t v4 = 58;
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33[17];
    if (v34 > 0x7F)
    {
      uint64_t v35 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (uint64_t)(v4 + 1), a3);
    }
    else
    {
      v4[1] = v34;
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::MessageOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::MessageOptions *)v33, v35, a3);
  }
  int v38 = (void *)*((void *)this + 1);
  int v37 = (uint64_t **)((char *)this + 8);
  int v36 = v38;
  if (!v38 || *v36 == v36[1]) {
    return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v37, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::DescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 156);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 156) & 1) == 0)
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 156) & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *((_DWORD *)this + 39);
    int v10 = v11 + 1;
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6;
  if ((v3 & 0x40) != 0)
  {
LABEL_15:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::MessageOptions *)*((void *)this + 18);
    if (!v12) {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::MessageOptions **)(wireless_diagnostics::google::protobuf::DescriptorProto::default_instance_
    }
                                                                       + 144);
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::MessageOptions::ByteSize(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  int v16 = *((_DWORD *)this + 8);
  int v17 = v16 + v4;
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)this + 3) + 8 * v18), a2);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  int v22 = *((_DWORD *)this + 14);
  int v23 = v22 + v17;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FieldDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::FieldDescriptorProto **)(*((void *)this + 6) + 8 * v24), a2);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      }
      else {
        int v27 = 1;
      }
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 14));
  }
  int v28 = *((_DWORD *)this + 20);
  int v29 = v28 + v23;
  if (v28 >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::DescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::DescriptorProto **)(*((void *)this + 9) + 8 * v30));
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        int v33 = 1;
      }
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 20));
  }
  int v34 = *((_DWORD *)this + 26);
  int v35 = v34 + v29;
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::EnumDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::EnumDescriptorProto **)(*((void *)this + 12) + 8 * v36), a2);
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      }
      else {
        int v39 = 1;
      }
      v35 += v38 + v39;
      ++v36;
    }
    while (v36 < *((int *)this + 26));
  }
  int v40 = *((_DWORD *)this + 32);
  uint64_t v41 = (v40 + v35);
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::ByteSize(*(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)this + 15) + 8 * v42), a2);
      int v44 = (int)v43;
      if (v43 >= 0x80) {
        int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      }
      else {
        int v45 = 1;
      }
      uint64_t v41 = (v44 + v41 + v45);
      ++v42;
    }
    while (v42 < *((int *)this + 32));
  }
  uint64_t v46 = (void *)*((void *)this + 1);
  if (v46 && *v46 != v46[1]) {
    uint64_t v41 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v41;
  }
  *((_DWORD *)this + 38) = v41;
  return v41;
}

void wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::DescriptorProto *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135FADFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(wireless_diagnostics::google::protobuf::MessageOptions *this, const wireless_diagnostics::google::protobuf::MessageOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 5) + 8 * v4);
      int v6 = *((_DWORD *)this + 13);
      uint64_t v7 = *((int *)this + 12);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 40));
          int v6 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 12));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 72);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 72))
    {
      char v10 = *((unsigned char *)a2 + 64);
      *((_DWORD *)this + 18) |= 1u;
      *((unsigned char *)this + 64) = v10;
      int v9 = *((_DWORD *)a2 + 18);
    }
    if ((v9 & 2) != 0)
    {
      char v11 = *((unsigned char *)a2 + 65);
      *((_DWORD *)this + 18) |= 2u;
      *((unsigned char *)this + 65) = v11;
    }
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::MessageOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::MessageOptions *)((char *)a2 + 32));
}

void sub_2135FAF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::DescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::DescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::DescriptorProto *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::DescriptorProto::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::DescriptorProto *)a2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::DescriptorProto *wireless_diagnostics::google::protobuf::DescriptorProto::Swap(wireless_diagnostics::google::protobuf::DescriptorProto *this, wireless_diagnostics::google::protobuf::DescriptorProto *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (wireless_diagnostics::google::protobuf::DescriptorProto *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v5 = *((void *)v3 + 18);
    *((void *)v3 + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 39);
    *((_DWORD *)v3 + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v5;
    uint64_t v6 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v6;
    LODWORD(v6) = *((_DWORD *)v3 + 38);
    *((_DWORD *)v3 + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v6;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FB1F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto_Type_descriptor(wireless_diagnostics::google::protobuf *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FB290(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::FieldDescriptorProto_Type_IsValid(wireless_diagnostics::google::protobuf *this)
{
  return (this - 1) < 0x12;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto_Label_descriptor(wireless_diagnostics::google::protobuf *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FB340(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::FieldDescriptorProto_Label_IsValid(wireless_diagnostics::google::protobuf *this)
{
  return (this - 1) < 3;
}

double wireless_diagnostics::google::protobuf::FieldDescriptorProto::SharedCtor(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0x100000000;
  *(void *)&double result = 1;
  *((void *)this + 8) = 1;
  *((void *)this + 4) = v1;
  *((void *)this + 5) = v1;
  *((void *)this + 6) = v1;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 18) = 0;
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::default_instance(wireless_diagnostics::google::protobuf::FieldOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FieldOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::FieldOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::FieldDescriptorProto *wireless_diagnostics::google::protobuf::FieldDescriptorProto::FieldDescriptorProto(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, void ***a2)
{
  *(void *)this = &unk_26C3F9558;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0x100000000;
  *((void *)this + 8) = 1;
  *((void *)this + 4) = v4;
  *((void *)this + 5) = v4;
  *((void *)this + 6) = v4;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 18) = 0;
  wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom((void ***)this, a2);
  return this;
}

void sub_2135FB45C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(void ***this, void ***a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 72);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
  }
  uint64_t v5 = (std::string *)MEMORY[0x263F8C740];
  if ((_BYTE)a2[9])
  {
    uint64_t v6 = (const std::string *)a2[2];
    *((_DWORD *)this + 18) |= 1u;
    uint64_t v7 = (std::string *)this[2];
    if (v7 == v5) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if (((_BYTE)a2[9] & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 2u;
  *((_DWORD *)this + 6) = v8;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 7) = v9;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v10 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 16) = v10;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t v13 = (const std::string *)a2[5];
    *((_DWORD *)this + 18) |= 0x20u;
    int v14 = (std::string *)this[5];
    if (v14 == v5) {
      operator new();
    }
    std::string::operator=(v14, v13);
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
      }
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_19:
  char v11 = (const std::string *)a2[4];
  *((_DWORD *)this + 18) |= 0x10u;
  uint64_t v12 = (std::string *)this[4];
  if (v12 == v5) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v15 = (const std::string *)a2[6];
  *((_DWORD *)this + 18) |= 0x40u;
  int v16 = (std::string *)this[6];
  if (v16 == v5) {
    operator new();
  }
  std::string::operator=(v16, v15);
  if ((a2[9] & 0x80) != 0)
  {
LABEL_28:
    *((_DWORD *)this + 18) |= 0x80u;
    int v17 = (wireless_diagnostics::google::protobuf::FieldOptions *)this[7];
    if (!v17) {
      operator new();
    }
    uint64_t v18 = (const wireless_diagnostics::google::protobuf::FieldOptions *)a2[7];
    if (!v18) {
      uint64_t v18 = *(const wireless_diagnostics::google::protobuf::FieldOptions **)(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_
    }
                                                                           + 56);
    wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(v17, v18);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
}

void sub_2135FB720(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FB7F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::FieldDescriptorProto::New(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
}

void sub_2135FB878(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4090AC2D2CLL);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FieldDescriptorProto::Clear(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 72))
  {
    uint64_t v2 = MEMORY[0x263F8C740];
    if (*((unsigned char *)this + 72))
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((void *)this + 3) = 0x100000000;
    *((_DWORD *)this + 16) = 1;
    if ((*((unsigned char *)this + 72) & 0x10) != 0)
    {
      uint64_t v4 = *((void *)this + 4);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 72) & 0x20) != 0)
    {
      uint64_t v5 = *((void *)this + 5);
      if (v5 != v2)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 72) & 0x40) != 0)
    {
      uint64_t v6 = *((void *)this + 6);
      if (v6 != v2)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 72) & 0x80) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 7);
      if (this) {
        this = wireless_diagnostics::google::protobuf::FieldOptions::Clear(this);
      }
    }
  }
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v7 + 16) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FieldOptions::Clear(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8));
  char v2 = *((unsigned char *)this + 84);
  if (v2)
  {
    *(_DWORD *)((char *)this + 43) = 0;
    *((_DWORD *)this + 10) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *((void *)this + 6);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *((unsigned char *)this + 47) = 0;
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 56);
  uint64_t v6 = *((void *)this + 4);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 32);
  *((_DWORD *)v5 + 13) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

uint64_t **wireless_diagnostics::google::protobuf::FieldDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 18);
  if (v6)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    if ((*(_DWORD *)(v5 + 72) & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 56);
  if (!v7) {
    uint64_t v7 = *(void *)(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_ + 56);
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
LABEL_20:
  int v10 = *(void **)(v5 + 8);
  int v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FieldDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 18);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 0x20) == 0) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v14 = *((void *)this + 5);
    *(unsigned char *)uint64_t v4 = 18;
    if (*(char *)(v14 + 23) < 0) {
      int v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v14 + 8);
    }
    else {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
    }
    if (v15 > 0x7F)
    {
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      uint64_t v16 = (uint64_t)v4 + 2;
    }
    int v17 = *(char *)(v14 + 23);
    if (v17 >= 0) {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14;
    }
    else {
      uint64_t v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v14;
    }
    if (v17 >= 0) {
      uint64_t v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
    }
    else {
      uint64_t v19 = (const void *)*(unsigned int *)(v14 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
    if ((*((_DWORD *)this + 18) & 2) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
  uint64_t v7 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  uint64_t v8 = (char *)a2 + 1;
  if (*(char *)(v7 + 23) < 0) {
    int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
  }
  else {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
  }
  if (v9 > 0x7F)
  {
    uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)v8, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v9;
    uint64_t v10 = (uint64_t)v4 + 2;
  }
  int v11 = *(char *)(v7 + 23);
  if (v11 >= 0) {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
  }
  else {
    uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
  }
  if (v11 >= 0) {
    uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
  }
  else {
    uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
  int v6 = *((_DWORD *)this + 18);
  if ((v6 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_3:
  if ((v6 & 2) == 0) {
    goto LABEL_37;
  }
LABEL_31:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)uint64_t v4 = 24;
  uint64_t v21 = (uint64_t)v4 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
  }
  else
  {
    if (v20 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_37;
    }
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v22;
LABEL_37:
  if ((*((unsigned char *)this + 72) & 4) == 0) {
    goto LABEL_44;
  }
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
  *(unsigned char *)uint64_t v4 = 32;
  uint64_t v24 = (uint64_t)v4 + 1;
  if ((v23 & 0x80000000) != 0)
  {
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, v24, a3);
  }
  else
  {
    if (v23 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_44;
    }
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v24, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v25;
LABEL_44:
  if ((*((unsigned char *)this + 72) & 8) == 0) {
    goto LABEL_51;
  }
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 16);
  *(unsigned char *)uint64_t v4 = 40;
  uint64_t v27 = (uint64_t)v4 + 1;
  if ((v26 & 0x80000000) != 0)
  {
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v26, v27, a3);
  }
  else
  {
    if (v26 <= 0x7F)
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v26;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      goto LABEL_51;
    }
    uint64_t v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v27, a3);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v28;
LABEL_51:
  int v29 = *((_DWORD *)this + 18);
  if ((v29 & 0x10) != 0)
  {
    uint64_t v30 = *((void *)this + 4);
    *(unsigned char *)uint64_t v4 = 50;
    if (*(char *)(v30 + 23) < 0) {
      uint64_t v31 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v30 + 8);
    }
    else {
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v30 + 23);
    }
    if (v31 > 0x7F)
    {
      uint64_t v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v31;
      uint64_t v32 = (uint64_t)v4 + 2;
    }
    int v33 = *(char *)(v30 + 23);
    if (v33 >= 0) {
      int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30;
    }
    else {
      int v34 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v30;
    }
    if (v33 >= 0) {
      int v35 = (const void *)*(unsigned __int8 *)(v30 + 23);
    }
    else {
      int v35 = (const void *)*(unsigned int *)(v30 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v34, v35, v32, a4);
    int v29 = *((_DWORD *)this + 18);
    if ((v29 & 0x40) == 0)
    {
LABEL_53:
      if ((v29 & 0x80) == 0) {
        goto LABEL_87;
      }
      goto LABEL_81;
    }
  }
  else if ((v29 & 0x40) == 0)
  {
    goto LABEL_53;
  }
  uint64_t v36 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 58;
  if (*(char *)(v36 + 23) < 0) {
    int v37 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v36 + 8);
  }
  else {
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v36 + 23);
  }
  if (v37 > 0x7F)
  {
    uint64_t v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, (uint64_t)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v37;
    uint64_t v38 = (uint64_t)v4 + 2;
  }
  int v39 = *(char *)(v36 + 23);
  if (v39 >= 0) {
    int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36;
  }
  else {
    int v40 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v36;
  }
  if (v39 >= 0) {
    uint64_t v41 = (const void *)*(unsigned __int8 *)(v36 + 23);
  }
  else {
    uint64_t v41 = (const void *)*(unsigned int *)(v36 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v40, v41, v38, a4);
  if ((*((_DWORD *)this + 18) & 0x80) == 0) {
    goto LABEL_87;
  }
LABEL_81:
  uint64_t v42 = (unsigned int *)*((void *)this + 7);
  if (!v42) {
    uint64_t v42 = *(unsigned int **)(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_ + 56);
  }
  *(unsigned char *)uint64_t v4 = 66;
  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42[20];
  if (v43 > 0x7F)
  {
    int v44 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (uint64_t)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v43;
    int v44 = (unsigned __int8 *)v4 + 2;
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::FieldOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FieldOptions *)v42, v44, a3);
LABEL_87:
  int v47 = (void *)*((void *)this + 1);
  uint64_t v46 = (uint64_t **)((char *)this + 8);
  int v45 = v47;
  if (!v47 || *v45 == v45[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v46, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_73;
  }
  if ((*((unsigned char *)this + 72) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 72) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *((_DWORD *)this + 18);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      int v3 = *((_DWORD *)this + 18);
    }
    else
    {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v12 + 1);
  }
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      int v3 = *((_DWORD *)this + 18);
    }
    else
    {
      int v14 = 2;
    }
    uint64_t v4 = (v14 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_23:
      if ((v3 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_23;
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    int v3 = *((_DWORD *)this + 18);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_24:
    if ((v3 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_40:
  uint64_t v17 = *((void *)this + 4);
  int v18 = *(unsigned __int8 *)(v17 + 23);
  char v19 = v18;
  uint64_t v20 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    unint64_t v21 = *(unsigned __int8 *)(v17 + 23);
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21);
    int v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v20 = *(void *)(v17 + 8);
    int v3 = *((_DWORD *)this + 18);
    char v19 = *(unsigned char *)(v17 + 23);
  }
  else
  {
    int v22 = 1;
  }
  if (v19 < 0) {
    int v18 = v20;
  }
  uint64_t v4 = (v4 + v22 + v18 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_25:
    if ((v3 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_49:
  uint64_t v23 = *((void *)this + 5);
  int v24 = *(unsigned __int8 *)(v23 + 23);
  char v25 = v24;
  uint64_t v26 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
  }
  else {
    unint64_t v27 = v26;
  }
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v26 = *(void *)(v23 + 8);
    int v3 = *((_DWORD *)this + 18);
    char v25 = *(unsigned char *)(v23 + 23);
  }
  else
  {
    int v28 = 1;
  }
  if (v25 < 0) {
    int v24 = v26;
  }
  uint64_t v4 = (v4 + v28 + v24 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_26:
    if ((v3 & 0x80) == 0) {
      goto LABEL_73;
    }
    goto LABEL_67;
  }
LABEL_58:
  uint64_t v29 = *((void *)this + 6);
  int v30 = *(unsigned __int8 *)(v29 + 23);
  char v31 = v30;
  uint64_t v32 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    unint64_t v33 = *(unsigned __int8 *)(v29 + 23);
  }
  else {
    unint64_t v33 = v32;
  }
  if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v33);
    int v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v32 = *(void *)(v29 + 8);
    int v3 = *((_DWORD *)this + 18);
    char v31 = *(unsigned char *)(v29 + 23);
  }
  else
  {
    int v34 = 1;
  }
  if (v31 < 0) {
    int v30 = v32;
  }
  uint64_t v4 = (v4 + v34 + v30 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_67:
    int v35 = (wireless_diagnostics::google::protobuf::FieldOptions *)*((void *)this + 7);
    if (!v35) {
      int v35 = *(wireless_diagnostics::google::protobuf::FieldOptions **)(wireless_diagnostics::google::protobuf::FieldDescriptorProto::default_instance_
    }
                                                                     + 56);
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::FieldOptions::ByteSize(v35, a2);
    int v37 = (int)v36;
    if (v36 >= 0x80) {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
    }
    else {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v37 + v38 + 1);
  }
LABEL_73:
  int v39 = (void *)*((void *)this + 1);
  if (v39 && *v39 != v39[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v4;
  }
  *((_DWORD *)this + 17) = v4;
  return v4;
}

void wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(void ***this, void ***lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge((wireless_diagnostics::google::protobuf::internal::ReflectionOps *)lpsrc, (const wireless_diagnostics::google::protobuf::Message *)this, v5);
  }
}

void sub_2135FC2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(wireless_diagnostics::google::protobuf::FieldOptions *this, const wireless_diagnostics::google::protobuf::FieldOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 7) + 8 * v4);
      int v6 = *((_DWORD *)this + 17);
      uint64_t v7 = *((int *)this + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 56));
          int v6 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 16));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 84);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (*((unsigned char *)a2 + 84))
  {
    int v12 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 21) |= 1u;
    *((_DWORD *)this + 10) = v12;
    int v9 = *((_DWORD *)a2 + 21);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }
  }
  else if ((*((unsigned char *)a2 + 84) & 2) == 0)
  {
    goto LABEL_14;
  }
  char v13 = *((unsigned char *)a2 + 44);
  *((_DWORD *)this + 21) |= 2u;
  *((unsigned char *)this + 44) = v13;
  int v9 = *((_DWORD *)a2 + 21);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v14 = *((unsigned char *)a2 + 45);
  *((_DWORD *)this + 21) |= 4u;
  *((unsigned char *)this + 45) = v14;
  int v9 = *((_DWORD *)a2 + 21);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_24:
    int v16 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 21) |= 0x10u;
    uint64_t v17 = (std::string *)*((void *)this + 6);
    if (v17 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v17, v16);
    if ((*((_DWORD *)a2 + 21) & 0x20) != 0) {
      goto LABEL_18;
    }
    goto LABEL_19;
  }
LABEL_23:
  char v15 = *((unsigned char *)a2 + 46);
  *((_DWORD *)this + 21) |= 8u;
  *((unsigned char *)this + 46) = v15;
  int v9 = *((_DWORD *)a2 + 21);
  if ((v9 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_17:
  if ((v9 & 0x20) != 0)
  {
LABEL_18:
    char v10 = *((unsigned char *)a2 + 47);
    *((_DWORD *)this + 21) |= 0x20u;
    *((unsigned char *)this + 47) = v10;
  }
LABEL_19:
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::FieldOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::FieldOptions *)((char *)a2 + 32));
}

void sub_2135FC528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::FieldDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::FieldDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::FieldDescriptorProto::MergeFrom(v4, a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::Swap(uint64_t this, wireless_diagnostics::google::protobuf::FieldDescriptorProto *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::FieldDescriptorProto *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    uint64_t v3 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v3;
    uint64_t v4 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v4;
    uint64_t v5 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v5;
    uint64_t v6 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
    uint64_t v7 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FC788(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::EnumDescriptorProto::SharedCtor(void *this)
{
  this[2] = MEMORY[0x263F8C740];
  this[6] = 0;
  this[7] = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::default_instance(wireless_diagnostics::google::protobuf::EnumOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::EnumOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::EnumDescriptorProto *wireless_diagnostics::google::protobuf::EnumDescriptorProto::EnumDescriptorProto(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, const wireless_diagnostics::google::protobuf::EnumDescriptorProto *a2)
{
  *(void *)this = &unk_26C3F9348;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(this, a2);
  return this;
}

void sub_2135FC864(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, const wireless_diagnostics::google::protobuf::EnumDescriptorProto *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto **)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)this + 24));
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::EnumValueDescriptorProto>::New();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(*(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 60);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 60))
    {
      char v10 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 15) |= 1u;
      int v11 = (std::string *)*((void *)this + 2);
      if (v11 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v9 = *((_DWORD *)a2 + 15);
    }
    if ((v9 & 4) != 0)
    {
      *((_DWORD *)this + 15) |= 4u;
      int v12 = (wireless_diagnostics::google::protobuf::EnumOptions *)*((void *)this + 6);
      if (!v12) {
        operator new();
      }
      char v13 = (const wireless_diagnostics::google::protobuf::EnumOptions *)*((void *)a2 + 6);
      if (!v13) {
        char v13 = *(const wireless_diagnostics::google::protobuf::EnumOptions **)(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_
      }
                                                                            + 48);
      wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(v12, v13);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)a2 + 8));
}

void sub_2135FCA80(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FCB54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::EnumDescriptorProto::New(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
}

void sub_2135FCBD8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumDescriptorProto::Clear(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  if (*((unsigned char *)this + 60))
  {
    if (*((unsigned char *)this + 60))
    {
      uint64_t v2 = *((void *)this + 2);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 60) & 4) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::EnumOptions *)*((void *)this + 6);
      if (v3) {
        wireless_diagnostics::google::protobuf::EnumOptions::Clear(v3);
      }
    }
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 24);
  uint64_t v6 = *((void *)this + 1);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::EnumDescriptorProto *)((char *)this + 8);
  *((_DWORD *)v5 + 13) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumOptions::Clear(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8));
  if (*((unsigned char *)this + 72)) {
    *((unsigned char *)this + 64) = 1;
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 40);
  uint64_t v4 = *((void *)this + 4);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 32);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t **wireless_diagnostics::google::protobuf::EnumDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((unsigned char *)this + 60)) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  if ((*(unsigned char *)(v5 + 60) & 4) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 48);
    if (!v7) {
      uint64_t v7 = *(void *)(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_ + 48);
    }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  }
  char v10 = *(void **)(v5 + 8);
  int v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 60))
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    uint64_t v7 = (char *)a2 + 1;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)v7, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v4 + 2;
    }
    int v10 = *(char *)(v6 + 23);
    if (v10 >= 0) {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v10 >= 0) {
      int v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      int v12 = (const void *)*(unsigned int *)(v6 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      char v14 = *(unsigned int **)(*((void *)this + 3) + 8 * v13);
      *(unsigned char *)uint64_t v4 = 18;
      char v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[9];
      if (v15 > 0x7F)
      {
        int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v15;
        int v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)v14, v16, a3, a4);
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  if ((*((unsigned char *)this + 60) & 4) != 0)
  {
    uint64_t v17 = (unsigned int *)*((void *)this + 6);
    if (!v17) {
      uint64_t v17 = *(unsigned int **)(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_ + 48);
    }
    *(unsigned char *)uint64_t v4 = 26;
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[17];
    if (v18 > 0x7F)
    {
      char v19 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v18;
      char v19 = (unsigned __int8 *)v4 + 2;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::EnumOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumOptions *)v17, v19, a3);
  }
  int v22 = (void *)*((void *)this + 1);
  unint64_t v21 = (uint64_t **)((char *)this + 8);
  uint64_t v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 60);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 60) & 1) == 0)
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 60) & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *((_DWORD *)this + 15);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6;
  if ((v3 & 4) != 0)
  {
LABEL_15:
    int v12 = (wireless_diagnostics::google::protobuf::EnumOptions *)*((void *)this + 6);
    if (!v12) {
      int v12 = *(wireless_diagnostics::google::protobuf::EnumOptions **)(wireless_diagnostics::google::protobuf::EnumDescriptorProto::default_instance_
    }
                                                                    + 48);
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::EnumOptions::ByteSize(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  int v16 = *((_DWORD *)this + 8);
  uint64_t v17 = (v16 + v4);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto **)(*((void *)this + 3) + 8 * v18), a2);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  int v22 = (void *)*((void *)this + 1);
  if (v22 && *v22 != v22[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v17;
  }
  *((_DWORD *)this + 14) = v17;
  return v17;
}

void wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135FD1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(wireless_diagnostics::google::protobuf::EnumOptions *this, const wireless_diagnostics::google::protobuf::EnumOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 5) + 8 * v4);
      int v6 = *((_DWORD *)this + 13);
      uint64_t v7 = *((int *)this + 12);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 40));
          int v6 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 12));
  }
  if (*((unsigned char *)a2 + 72))
  {
    char v9 = *((unsigned char *)a2 + 64);
    *((_DWORD *)this + 18) |= 1u;
    *((unsigned char *)this + 64) = v9;
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::EnumOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::EnumOptions *)((char *)a2 + 32));
}

void sub_2135FD318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::EnumDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::EnumDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::EnumDescriptorProto *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::EnumDescriptorProto::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::EnumDescriptorProto *)a2);
  }
  return this;
}

wireless_diagnostics::google::protobuf::EnumDescriptorProto *wireless_diagnostics::google::protobuf::EnumDescriptorProto::Swap(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this, wireless_diagnostics::google::protobuf::EnumDescriptorProto *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    this = (wireless_diagnostics::google::protobuf::EnumDescriptorProto *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v5 = *((void *)v3 + 6);
    *((void *)v3 + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    uint64_t v6 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v6;
    LODWORD(v6) = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v6;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FD548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance(wireless_diagnostics::google::protobuf::EnumValueOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *a2)
{
  *(void *)this = &unk_26C3F9880;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v4;
  *((_DWORD *)this + 10) = 0;
  wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a2);
  return this;
}

void sub_2135FD61C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v5 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      uint64_t v6 = (std::string *)*((void *)this + 2);
      if (v6 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)((char *)a2 + 8));
        }
LABEL_12:
        *((_DWORD *)this + 10) |= 4u;
        uint64_t v8 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)*((void *)this + 3);
        if (!v8) {
          operator new();
        }
        char v9 = (const wireless_diagnostics::google::protobuf::EnumValueOptions *)*((void *)a2 + 3);
        if (!v9) {
          char v9 = *(const wireless_diagnostics::google::protobuf::EnumValueOptions **)(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_
        }
                                                                                  + 24);
        wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(v8, v9);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)((char *)a2 + 8));
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 8) = v7;
    if ((*((_DWORD *)a2 + 10) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)((char *)a2 + 8));
    }
    goto LABEL_12;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)((char *)a2 + 8));
}

void sub_2135FD7A4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FD878(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::New(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
}

void sub_2135FD8FC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406601F8D4);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::Clear(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 40))
  {
    if (*((unsigned char *)this + 40))
    {
      uint64_t v2 = *((void *)this + 2);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *((_DWORD *)this + 8) = 0;
    if ((*((unsigned char *)this + 40) & 4) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 3);
      if (this) {
        this = wireless_diagnostics::google::protobuf::EnumValueOptions::Clear(this);
      }
    }
  }
  uint64_t v4 = *((void *)v1 + 1);
  int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v3 + 8) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumValueOptions::Clear(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8));
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 40);
  uint64_t v4 = *((void *)this + 4);
  int v3 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 32);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t **wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_ + 24);
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  int v10 = *(void **)(v5 + 8);
  char v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    uint64_t v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      char v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (uint64_t)v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 10);
  }
  if ((v6 & 2) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *(unsigned char *)uint64_t v4 = 16;
    uint64_t v15 = (uint64_t)v4 + 1;
    if ((v14 & 0x80000000) != 0)
    {
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
    }
    else
    {
      if (v14 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v14;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_22;
      }
      uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v16;
  }
LABEL_22:
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
    uint64_t v17 = (unsigned int *)*((void *)this + 3);
    if (!v17) {
      uint64_t v17 = *(unsigned int **)(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_ + 24);
    }
    *(unsigned char *)uint64_t v4 = 26;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[16];
    if (v18 > 0x7F)
    {
      char v19 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v18;
      char v19 = (unsigned __int8 *)v4 + 2;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::EnumValueOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumValueOptions *)v17, v19, a3);
  }
  int v22 = (void *)*((void *)this + 1);
  int v21 = (uint64_t **)((char *)this + 8);
  int v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 40))
  {
    uint64_t v5 = *((void *)this + 2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *((_DWORD *)this + 10);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v10 + v6);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_21;
    }
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v3 = *((_DWORD *)this + 10);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    int v14 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)*((void *)this + 3);
    if (!v14) {
      int v14 = *(wireless_diagnostics::google::protobuf::EnumValueOptions **)(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::default_instance_
    }
                                                                         + 24);
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::EnumValueOptions::ByteSize(v14, a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  uint64_t v18 = (void *)*((void *)this + 1);
  if (v18 && *v18 != v18[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v4;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

void wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135FDE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(wireless_diagnostics::google::protobuf::EnumValueOptions *this, const wireless_diagnostics::google::protobuf::EnumValueOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 5) + 8 * v4);
      int v6 = *((_DWORD *)this + 13);
      uint64_t v7 = *((int *)this + 12);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 40));
          int v6 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 12));
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)a2 + 32));
}

void sub_2135FDFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::Swap(uint64_t this, wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    uint64_t v4 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FE1B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SharedCtor(void *this)
{
  this[2] = MEMORY[0x263F8C740];
  this[6] = 0;
  this[7] = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::default_instance(wireless_diagnostics::google::protobuf::ServiceOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::ServiceDescriptorProto *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a2)
{
  *(void *)this = &unk_26C3F9720;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(this, a2);
  return this;
}

void sub_2135FE290(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void ****)(*((void *)a2 + 3) + 8 * v4);
      int v6 = *((_DWORD *)this + 9);
      uint64_t v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)this + 24));
          int v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::MethodDescriptorProto>::New();
      }
      uint64_t v8 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v7 + 1;
      wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom(*(void ****)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 60);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 60))
    {
      int v10 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 15) |= 1u;
      int v11 = (std::string *)*((void *)this + 2);
      if (v11 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v9 = *((_DWORD *)a2 + 15);
    }
    if ((v9 & 4) != 0)
    {
      *((_DWORD *)this + 15) |= 4u;
      int v12 = (wireless_diagnostics::google::protobuf::ServiceOptions *)*((void *)this + 6);
      if (!v12) {
        operator new();
      }
      int v13 = (const wireless_diagnostics::google::protobuf::ServiceOptions *)*((void *)a2 + 6);
      if (!v13) {
        int v13 = *(const wireless_diagnostics::google::protobuf::ServiceOptions **)(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_
      }
                                                                               + 48);
      wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(v12, v13);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)a2 + 8));
}

void sub_2135FE4AC(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9720;
  uint64_t v2 = (uint64_t *)((char *)this + 24);
  wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

void *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[6];
    if (this)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v4();
    }
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FE6D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::ServiceDescriptorProto::New(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
}

void sub_2135FE75C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C407FD52222);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::Clear(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  if (*((unsigned char *)this + 60))
  {
    if (*((unsigned char *)this + 60))
    {
      uint64_t v2 = *((void *)this + 2);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 60) & 4) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::ServiceOptions *)*((void *)this + 6);
      if (v3) {
        wireless_diagnostics::google::protobuf::ServiceOptions::Clear(v3);
      }
    }
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 24);
  uint64_t v6 = *((void *)this + 1);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)this + 8);
  *((_DWORD *)v5 + 13) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::ServiceOptions::Clear(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8));
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 40);
  uint64_t v4 = *((void *)this + 4);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 32);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)((char *)this + 24);
  uint64_t v7 = (void ***)((char *)this + 8);
  uint64_t v8 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v9;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v9 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v11 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_22;
      }
      *((_DWORD *)this + 15) |= 1u;
      if (*((void *)this + 2) == v8) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      int v14 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((void *)a2 + 1) = v14 + 1;
LABEL_26:
          int v15 = *((_DWORD *)this + 9);
          uint64_t v16 = *((int *)this + 8);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v15 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v15 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::MethodDescriptorProto>::New();
          }
          uint64_t v17 = *((void *)this + 3);
          *((_DWORD *)this + 8) = v16 + 1;
          uint64_t v18 = *(wireless_diagnostics::google::protobuf::MethodDescriptorProto **)(v17 + 8 * v16);
          unsigned int v36 = 0;
          char v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
          }
            }
          else
          {
            unsigned int v36 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)a2 + 14);
          int v21 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergePartialFromCodedStream(v18, a2, v22, v23)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v24 = *((_DWORD *)a2 + 14);
          BOOL v25 = __OFSUB__(v24, 1);
          int v26 = v24 - 1;
          if (v26 < 0 == v25) {
            *((_DWORD *)a2 + 14) = v26;
          }
          int v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v27 = *v14;
          if (v27 != 18)
          {
            if (v27 == 26)
            {
              *((void *)a2 + 1) = v14 + 1;
LABEL_44:
              *((_DWORD *)this + 15) |= 4u;
              int v28 = (wireless_diagnostics::google::protobuf::ServiceOptions *)*((void *)this + 6);
              if (!v28) {
                operator new();
              }
              unsigned int v37 = 0;
              uint64_t v29 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0; {
              }
                }
              else
              {
                unsigned int v37 = *v29;
                *((void *)a2 + 1) = v29 + 1;
              }
              int v30 = *((_DWORD *)a2 + 14);
              int v31 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v30 + 1;
              if (v30 >= v31) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!wireless_diagnostics::google::protobuf::ServiceOptions::MergePartialFromCodedStream(v28, a2, v32, v33)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v34 = *((_DWORD *)a2 + 14);
              BOOL v25 = __OFSUB__(v34, 1);
              int v35 = v34 - 1;
              if (v35 < 0 == v25) {
                *((_DWORD *)a2 + 14) = v35;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v11 == 2)
    {
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
    if (v11 == 3)
    {
      int v12 = TagFallback & 7;
      if (v12 == 2) {
        goto LABEL_44;
      }
    }
    else
    {
      int v12 = TagFallback & 7;
    }
LABEL_22:
    if (v12 == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
  }
    }
}

void sub_2135FEC1C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((unsigned char *)this + 60)) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  if ((*(unsigned char *)(v5 + 60) & 4) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 48);
    if (!v7) {
      uint64_t v7 = *(void *)(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_ + 48);
    }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 60))
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    uint64_t v7 = (char *)a2 + 1;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v8 > 0x7F)
    {
      uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)v7, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v8;
      uint64_t v9 = (uint64_t)v4 + 2;
    }
    int v10 = *(char *)(v6 + 23);
    if (v10 >= 0) {
      unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      unsigned int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v10 >= 0) {
      int v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      int v12 = (const void *)*(unsigned int *)(v6 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      int v14 = *(unsigned int **)(*((void *)this + 3) + 8 * v13);
      *(unsigned char *)uint64_t v4 = 18;
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[12];
      if (v15 > 0x7F)
      {
        uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v15;
        uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = wireless_diagnostics::google::protobuf::MethodDescriptorProto::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::MethodDescriptorProto *)v14, v16, a3, a4);
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  if ((*((unsigned char *)this + 60) & 4) != 0)
  {
    uint64_t v17 = (unsigned int *)*((void *)this + 6);
    if (!v17) {
      uint64_t v17 = *(unsigned int **)(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_ + 48);
    }
    *(unsigned char *)uint64_t v4 = 26;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[16];
    if (v18 > 0x7F)
    {
      char v19 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v18;
      char v19 = (unsigned __int8 *)v4 + 2;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::ServiceOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::ServiceOptions *)v17, v19, a3);
  }
  uint64_t v22 = (void *)*((void *)this + 1);
  int v21 = (uint64_t **)((char *)this + 8);
  int v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 60);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 60) & 1) == 0)
  {
    int v4 = 0;
    if ((*((unsigned char *)this + 60) & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *((_DWORD *)this + 15);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6;
  if ((v3 & 4) != 0)
  {
LABEL_15:
    int v12 = (wireless_diagnostics::google::protobuf::ServiceOptions *)*((void *)this + 6);
    if (!v12) {
      int v12 = *(wireless_diagnostics::google::protobuf::ServiceOptions **)(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_
    }
                                                                       + 48);
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::ServiceOptions::ByteSize(v12, a2);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v4 += v14 + v15 + 1;
  }
LABEL_21:
  int v16 = *((_DWORD *)this + 8);
  uint64_t v17 = (v16 + v4);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      char v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::MethodDescriptorProto::ByteSize(*(wireless_diagnostics::google::protobuf::MethodDescriptorProto **)(*((void *)this + 3) + 8 * v18), a2);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 8));
  }
  uint64_t v22 = (void *)*((void *)this + 1);
  if (v22 && *v22 != v22[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v17;
  }
  *((_DWORD *)this + 14) = v17;
  return v17;
}

void wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2135FF0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(wireless_diagnostics::google::protobuf::ServiceOptions *this, const wireless_diagnostics::google::protobuf::ServiceOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 5) + 8 * v4);
      int v6 = *((_DWORD *)this + 13);
      uint64_t v7 = *((int *)this + 12);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 40));
          int v6 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 12));
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)a2 + 32));
}

void sub_2135FF22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::ServiceDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::ServiceDescriptorProto::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  if (*((int *)this + 8) < 1)
  {
LABEL_5:
    if ((*((unsigned char *)this + 60) & 4) == 0) {
      return 1;
    }
    uint64_t v4 = *((void *)this + 6);
    if (!v4) {
      uint64_t v4 = *(void *)(wireless_diagnostics::google::protobuf::ServiceDescriptorProto::default_instance_ + 48);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
    if (result) {
      return 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 3) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 8)) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

wireless_diagnostics::google::protobuf::ServiceDescriptorProto *wireless_diagnostics::google::protobuf::ServiceDescriptorProto::Swap(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this, wireless_diagnostics::google::protobuf::ServiceDescriptorProto *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    this = (wireless_diagnostics::google::protobuf::ServiceDescriptorProto *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v5 = *((void *)v3 + 6);
    *((void *)v3 + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    uint64_t v6 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v6;
    LODWORD(v6) = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v6;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FF51C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::MethodDescriptorProto::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[2] = MEMORY[0x263F8C740];
  this[3] = v1;
  this[4] = v1;
  this[5] = 0;
  this[6] = 0;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::default_instance(wireless_diagnostics::google::protobuf::MethodOptions *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MethodOptions::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::MethodOptions::default_instance_;
  }
  return result;
}

wireless_diagnostics::google::protobuf::MethodDescriptorProto *wireless_diagnostics::google::protobuf::MethodDescriptorProto::MethodDescriptorProto(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, void ***a2)
{
  *(void *)this = &unk_26C3F9630;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((void *)this + 3) = v4;
  *((void *)this + 4) = v4;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom((void ***)this, a2);
  return this;
}

void sub_2135FF5F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom(void ***this, void ***a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
  }
  uint64_t v5 = (std::string *)MEMORY[0x263F8C740];
  if ((*((unsigned char *)a2 + 52) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 52) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t v8 = (const std::string *)a2[3];
    *((_DWORD *)this + 13) |= 2u;
    unint64_t v9 = (std::string *)this[3];
    if (v9 == v5) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
      }
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  uint64_t v6 = (const std::string *)a2[2];
  *((_DWORD *)this + 13) |= 1u;
  uint64_t v7 = (std::string *)this[2];
  if (v7 == v5) {
    operator new();
  }
  std::string::operator=(v7, v6);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  int v10 = (const std::string *)a2[4];
  *((_DWORD *)this + 13) |= 4u;
  int v11 = (std::string *)this[4];
  if (v11 == v5) {
    operator new();
  }
  std::string::operator=(v11, v10);
  if ((*((_DWORD *)a2 + 13) & 8) != 0)
  {
LABEL_18:
    *((_DWORD *)this + 13) |= 8u;
    int v12 = (wireless_diagnostics::google::protobuf::MethodOptions *)this[5];
    if (!v12) {
      operator new();
    }
    uint64_t v13 = (const wireless_diagnostics::google::protobuf::MethodOptions *)a2[5];
    if (!v13) {
      uint64_t v13 = *(const wireless_diagnostics::google::protobuf::MethodOptions **)(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_
    }
                                                                            + 40);
    wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(v12, v13);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(this + 1, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 1));
}

void sub_2135FF800(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  *(void *)this = &unk_26C3F9630;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::MethodDescriptorProto *)((char *)this + 8);
  wireless_diagnostics::google::protobuf::MethodDescriptorProto::SharedDtor(this);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(this);

  JUMPOUT(0x21668DB60);
}

void *wireless_diagnostics::google::protobuf::MethodDescriptorProto::SharedDtor(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (void *)MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = v1[3];
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (void *)MEMORY[0x21668DB60](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = v1[4];
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (void *)MEMORY[0x21668DB60](v7, 0x1012C40EC159624);
  }
  if ((void *)wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_ != v1)
  {
    this = (void *)v1[5];
    if (this)
    {
      unint64_t v9 = *(uint64_t (**)(void))(*this + 8);
      return (void *)v9();
    }
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::descriptor(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2135FFA9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_;
  if (!wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::MethodDescriptorProto::New(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
}

void sub_2135FFB20(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4093195C21);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MethodDescriptorProto::Clear(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v2 = MEMORY[0x263F8C740];
    if (*((unsigned char *)this + 52))
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 52) & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 3);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 52) & 4) != 0)
    {
      uint64_t v5 = *((void *)this + 4);
      if (v5 != v2)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 52) & 8) != 0)
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 5);
      if (this) {
        this = wireless_diagnostics::google::protobuf::MethodOptions::Clear(this);
      }
    }
  }
  uint64_t v7 = *((void *)v1 + 1);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v6 + 11) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MethodOptions::Clear(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8));
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 40);
  uint64_t v4 = *((void *)this + 4);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 32);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (void ***)((char *)this + 8);
  uint64_t v7 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        *((_DWORD *)this + 13) |= 1u;
        if (*((void *)this + 2) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v12 < *((void *)a2 + 2) && *v12 == 18)
          {
            *((void *)a2 + 1) = v12 + 1;
            goto LABEL_17;
          }
          continue;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
LABEL_17:
        *((_DWORD *)this + 13) |= 2u;
        if (*((void *)this + 3) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          uint64_t v13 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v13 < *((void *)a2 + 2) && *v13 == 26)
          {
            *((void *)a2 + 1) = v13 + 1;
            goto LABEL_24;
          }
          continue;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
LABEL_24:
        *((_DWORD *)this + 13) |= 4u;
        if (*((void *)this + 4) == v7) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 34)
          {
            *((void *)a2 + 1) = v14 + 1;
            goto LABEL_31;
          }
          continue;
        }
        break;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
LABEL_31:
        *((_DWORD *)this + 13) |= 8u;
        int v15 = (wireless_diagnostics::google::protobuf::MethodOptions *)*((void *)this + 5);
        if (!v15) {
          operator new();
        }
        unsigned int v24 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))goto LABEL_50; {
        }
          }
        else
        {
          unsigned int v24 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          goto LABEL_50;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::MethodOptions::MergePartialFromCodedStream(v15, a2, v19, v20)|| !*((unsigned char *)a2 + 36))
        {
          goto LABEL_50;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      default:
        int v10 = TagFallback & 7;
LABEL_36:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))
        {
          continue;
        }
LABEL_50:
        uint64_t result = 0;
        break;
    }
    return result;
  }
}

void sub_213600010(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t **wireless_diagnostics::google::protobuf::MethodDescriptorProto::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      if ((*(_DWORD *)(v5 + 52) & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 40);
  if (!v7) {
    uint64_t v7 = *(void *)(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_ + 40);
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
LABEL_12:
  int v10 = *(void **)(v5 + 8);
  unint64_t v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MethodDescriptorProto::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    uint64_t v8 = (char *)a2 + 1;
    if (*(char *)(v7 + 23) < 0) {
      unint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    }
    else {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
    }
    if (v9 > 0x7F)
    {
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)v8, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v9;
      uint64_t v10 = (uint64_t)v4 + 2;
    }
    int v11 = *(char *)(v7 + 23);
    if (v11 >= 0) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
    }
    else {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
    }
    if (v11 >= 0) {
      uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    int v6 = *((_DWORD *)this + 13);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v14 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v14 + 23) < 0) {
    int v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v14 + 8);
  }
  else {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
  }
  if (v15 > 0x7F)
  {
    uint64_t v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (uint64_t)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v15;
    uint64_t v16 = (uint64_t)v4 + 2;
  }
  int v17 = *(char *)(v14 + 23);
  if (v17 >= 0) {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14;
  }
  else {
    int v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v14;
  }
  if (v17 >= 0) {
    uint64_t v19 = (const void *)*(unsigned __int8 *)(v14 + 23);
  }
  else {
    uint64_t v19 = (const void *)*(unsigned int *)(v14 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v18, v19, v16, a4);
  int v6 = *((_DWORD *)this + 13);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_32:
  uint64_t v20 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 26;
  if (*(char *)(v20 + 23) < 0) {
    int v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v20 + 8);
  }
  else {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
  }
  if (v21 > 0x7F)
  {
    uint64_t v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (uint64_t)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v21;
    uint64_t v22 = (uint64_t)v4 + 2;
  }
  int v23 = *(char *)(v20 + 23);
  if (v23 >= 0) {
    unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
  }
  else {
    unsigned int v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
  }
  if (v23 >= 0) {
    BOOL v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
  }
  else {
    BOOL v25 = (const void *)*(unsigned int *)(v20 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, a4);
  if ((*((_DWORD *)this + 13) & 8) == 0) {
    goto LABEL_51;
  }
LABEL_45:
  int v26 = (unsigned int *)*((void *)this + 5);
  if (!v26) {
    int v26 = *(unsigned int **)(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_ + 40);
  }
  *(unsigned char *)uint64_t v4 = 34;
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[16];
  if (v27 > 0x7F)
  {
    int v28 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (uint64_t)v4 + 1, a3);
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v27;
    int v28 = (unsigned __int8 *)v4 + 2;
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MethodOptions::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::MethodOptions *)v26, v28, a3);
LABEL_51:
  int v31 = (void *)*((void *)this + 1);
  int v30 = (uint64_t **)((char *)this + 8);
  uint64_t v29 = v31;
  if (!v31 || *v29 == v29[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v30, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::ByteSize(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 2);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *((_DWORD *)this + 13);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *((void *)this + 3);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      int v3 = *((_DWORD *)this + 13);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    uint64_t v4 = (v4 + v17 + v13 + 1);
  }
LABEL_24:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_36;
  }
  uint64_t v18 = *((void *)this + 4);
  int v19 = *(unsigned __int8 *)(v18 + 23);
  char v20 = v19;
  uint64_t v21 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    unint64_t v22 = *(unsigned __int8 *)(v18 + 23);
  }
  else {
    unint64_t v22 = v21;
  }
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22);
    int v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v21 = *(void *)(v18 + 8);
    int v3 = *((_DWORD *)this + 13);
    char v20 = *(unsigned char *)(v18 + 23);
  }
  else
  {
    int v23 = 1;
  }
  if (v20 < 0) {
    int v19 = v21;
  }
  uint64_t v4 = (v4 + v23 + v19 + 1);
  if ((v3 & 8) != 0)
  {
LABEL_36:
    unsigned int v24 = (wireless_diagnostics::google::protobuf::MethodOptions *)*((void *)this + 5);
    if (!v24) {
      unsigned int v24 = *(wireless_diagnostics::google::protobuf::MethodOptions **)(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_
    }
                                                                      + 40);
    BOOL v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::MethodOptions::ByteSize(v24, a2);
    int v26 = (int)v25;
    if (v25 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    }
    else {
      int v27 = 1;
    }
    uint64_t v4 = (v4 + v26 + v27 + 1);
  }
LABEL_42:
  int v28 = (void *)*((void *)this + 1);
  if (v28 && *v28 != v28[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v4;
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

void wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom(void ***this, void ***lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge((wireless_diagnostics::google::protobuf::internal::ReflectionOps *)lpsrc, (const wireless_diagnostics::google::protobuf::Message *)this, v5);
  }
}

void sub_2136005B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(wireless_diagnostics::google::protobuf::MethodOptions *this, const wireless_diagnostics::google::protobuf::MethodOptions *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)a2 + 5) + 8 * v4);
      int v6 = *((_DWORD *)this + 13);
      uint64_t v7 = *((int *)this + 12);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 40));
          int v6 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
      }
      uint64_t v8 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 12));
  }
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8), (const wireless_diagnostics::google::protobuf::MethodOptions *)((char *)a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 4, (const wireless_diagnostics::google::protobuf::MethodOptions *)((char *)a2 + 32));
}

void sub_213600710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::MethodDescriptorProto::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::MethodDescriptorProto::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::MethodDescriptorProto::MergeFrom(v4, a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::IsInitialized(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  if ((*((unsigned char *)this + 52) & 8) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 5);
  if (!v1) {
    uint64_t v1 = *(void *)(wireless_diagnostics::google::protobuf::MethodDescriptorProto::default_instance_ + 40);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::Swap(uint64_t this, wireless_diagnostics::google::protobuf::MethodDescriptorProto *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::MethodDescriptorProto *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    uint64_t v6 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v6;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::GetMetadata(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360098C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions_OptimizeMode_descriptor(wireless_diagnostics::google::protobuf *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213600A2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::FileOptions_OptimizeMode_IsValid(wireless_diagnostics::google::protobuf *this)
{
  return (this - 1) < 3;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  *(void *)(this + 40) = MEMORY[0x263F8C740];
  *(void *)(this + 48) = v1;
  *(void *)(this + 56) = 1;
  *(void *)(this + 64) = v1;
  *(unsigned char *)(this + 96) = 0;
  *(_DWORD *)(this + 100) = 0;
  *(_DWORD *)(this + 104) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::FileOptions *wireless_diagnostics::google::protobuf::FileOptions::FileOptions(wireless_diagnostics::google::protobuf::FileOptions *this, const wireless_diagnostics::google::protobuf::FileOptions *a2)
{
  *(void *)this = &unk_26C3F8B58;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 9) = 0;
  *((void *)this + 10) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 5) = MEMORY[0x263F8C740];
  *((void *)this + 6) = v4;
  *((void *)this + 7) = 1;
  *((void *)this + 8) = v4;
  *((unsigned char *)this + 96) = 0;
  *((_DWORD *)this + 25) = 0;
  *((_DWORD *)this + 26) = 0;
  wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(this, a2);
  return this;
}

void sub_213600B14(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 100) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::descriptor(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213600BF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::FileOptions::New(wireless_diagnostics::google::protobuf::FileOptions *this)
{
}

void sub_213600C44(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C4072609925);
  _Unwind_Resume(a1);
}

uint64_t **wireless_diagnostics::google::protobuf::FileOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::FileOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 26);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *((_DWORD *)this + 26);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *((unsigned int *)this + 14), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *((unsigned __int8 *)this + 60), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *((unsigned __int8 *)this + 62), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *((unsigned __int8 *)this + 63), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 26);
  if ((v6 & 0x100) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_27:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *((unsigned __int8 *)this + 96), (uint64_t)a2, a4);
  if ((*((_DWORD *)this + 26) & 8) != 0) {
LABEL_10:
  }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *((unsigned __int8 *)this + 61), (uint64_t)a2, a4);
LABEL_11:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v7 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 9) + 8 * v7++), a2, a4);
    while (v7 < *((int *)this + 20));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  uint64_t v12 = (void *)*((void *)this + 4);
  int v11 = (uint64_t **)((char *)this + 32);
  int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, v9);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FileOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::FileOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 26);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v13 = *((void *)this + 6);
    *uint64_t v3 = 66;
    if (*(char *)(v13 + 23) < 0) {
      char v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v13 + 8);
    }
    else {
      char v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
    }
    if (v14 > 0x7F)
    {
      uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (uint64_t)(v3 + 1), a3);
    }
    else
    {
      v3[1] = v14;
      uint64_t v15 = (uint64_t)(v3 + 2);
    }
    int v16 = *(char *)(v13 + 23);
    if (v16 >= 0) {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13;
    }
    else {
      int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v13;
    }
    if (v16 >= 0) {
      uint64_t v18 = (const void *)*(unsigned __int8 *)(v13 + 23);
    }
    else {
      uint64_t v18 = (const void *)*(unsigned int *)(v13 + 8);
    }
    uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, v3);
    if ((*((_DWORD *)this + 26) & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
  uint64_t v6 = *((void *)this + 5);
  *a2 = 10;
  uint64_t v7 = a2 + 1;
  if (*(char *)(v6 + 23) < 0) {
    uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
  }
  else {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
  }
  if (v8 > 0x7F)
  {
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)v7, a3);
  }
  else
  {
    v3[1] = v8;
    uint64_t v9 = (uint64_t)(v3 + 2);
  }
  int v10 = *(char *)(v6 + 23);
  if (v10 >= 0) {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
  }
  else {
    int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
  }
  if (v10 >= 0) {
    uint64_t v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
  }
  else {
    uint64_t v12 = (const void *)*(unsigned int *)(v6 + 8);
  }
  uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, v3);
  int v5 = *((_DWORD *)this + 26);
  if ((v5 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_3:
  if ((v5 & 0x10) == 0) {
    goto LABEL_37;
  }
LABEL_31:
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
  *uint64_t v3 = 72;
  uint64_t v20 = (uint64_t)(v3 + 1);
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v19, v20, a3);
  }
  else
  {
    if (v19 <= 0x7F)
    {
      v3[1] = v19;
      v3 += 2;
      goto LABEL_37;
    }
    uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, v20, a3);
  }
  uint64_t v3 = (unsigned __int8 *)v21;
LABEL_37:
  int v22 = *((_DWORD *)this + 26);
  if ((v22 & 4) != 0)
  {
    unsigned __int8 v34 = *((unsigned char *)this + 60);
    *uint64_t v3 = 80;
    v3[1] = v34;
    v3 += 2;
    int v22 = *((_DWORD *)this + 26);
    if ((v22 & 0x20) == 0)
    {
LABEL_39:
      if ((v22 & 0x40) == 0) {
        goto LABEL_40;
      }
      goto LABEL_70;
    }
  }
  else if ((v22 & 0x20) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v35 = *((void *)this + 8);
  *uint64_t v3 = 90;
  if (*(char *)(v35 + 23) < 0) {
    unsigned int v36 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v35 + 8);
  }
  else {
    unsigned int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v35 + 23);
  }
  if (v36 > 0x7F)
  {
    uint64_t v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (uint64_t)(v3 + 1), a3);
  }
  else
  {
    v3[1] = v36;
    uint64_t v37 = (uint64_t)(v3 + 2);
  }
  int v38 = *(char *)(v35 + 23);
  if (v38 >= 0) {
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35;
  }
  else {
    int v39 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v35;
  }
  if (v38 >= 0) {
    int v40 = (const void *)*(unsigned __int8 *)(v35 + 23);
  }
  else {
    int v40 = (const void *)*(unsigned int *)(v35 + 8);
  }
  uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v39, v40, v37, v3);
  int v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x40) == 0)
  {
LABEL_40:
    if ((v22 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_71;
  }
LABEL_70:
  unsigned __int8 v41 = *((unsigned char *)this + 62);
  *(_WORD *)uint64_t v3 = 384;
  void v3[2] = v41;
  v3 += 3;
  int v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x80) == 0)
  {
LABEL_41:
    if ((v22 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_72;
  }
LABEL_71:
  unsigned __int8 v42 = *((unsigned char *)this + 63);
  *(_WORD *)uint64_t v3 = 392;
  void v3[2] = v42;
  v3 += 3;
  int v22 = *((_DWORD *)this + 26);
  if ((v22 & 0x100) == 0)
  {
LABEL_42:
    if ((v22 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
LABEL_72:
  unsigned __int8 v43 = *((unsigned char *)this + 96);
  *(_WORD *)uint64_t v3 = 400;
  void v3[2] = v43;
  v3 += 3;
  if ((*((_DWORD *)this + 26) & 8) != 0)
  {
LABEL_43:
    unsigned __int8 v23 = *((unsigned char *)this + 61);
    *(_WORD *)uint64_t v3 = 416;
    void v3[2] = v23;
    v3 += 3;
  }
LABEL_44:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      BOOL v25 = *(unsigned int **)(*((void *)this + 9) + 8 * v24);
      *(_WORD *)uint64_t v3 = 16058;
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[22];
      if (v26 > 0x7F)
      {
        int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v26;
        int v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v25, v27, a3, v3);
      ++v24;
    }
    while (v24 < *((int *)this + 20));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unint64_t v33 = (void *)*((void *)this + 4);
  uint64_t v32 = (uint64_t **)((char *)this + 32);
  int v31 = v33;
  if (v33 && *v31 != v31[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v32, result, v29, v30);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::ByteSize(wireless_diagnostics::google::protobuf::FileOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 26);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_50;
  }
  if (v3)
  {
    uint64_t v6 = *((void *)this + 5);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      int v11 = v12 + 1;
      int v3 = *((_DWORD *)this + 26);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 2;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    int v4 = v11 + v7;
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v13 = *((void *)this + 6);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    char v15 = v14;
    uint64_t v16 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      unint64_t v17 = v16;
    }
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v16 = *(void *)(v13 + 8);
      int v3 = *((_DWORD *)this + 26);
      char v15 = *(unsigned char *)(v13 + 23);
    }
    else
    {
      int v18 = 1;
    }
    if (v15 < 0) {
      int v14 = v16;
    }
    v4 += v18 + v14 + 1;
  }
LABEL_24:
  int v19 = v4 + 2;
  if ((v3 & 4) == 0) {
    int v19 = v4;
  }
  if ((v3 & 8) != 0) {
    int v20 = v19 + 3;
  }
  else {
    int v20 = v19;
  }
  if ((v3 & 0x10) != 0)
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
      int v3 = *((_DWORD *)this + 26);
    }
    else
    {
      int v22 = 2;
    }
    v20 += v22;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v23 = *((void *)this + 8);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    char v25 = v24;
    uint64_t v26 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      unint64_t v27 = v26;
    }
    if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27);
      int v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v26 = *(void *)(v23 + 8);
      int v3 = *((_DWORD *)this + 26);
      char v25 = *(unsigned char *)(v23 + 23);
    }
    else
    {
      int v28 = 1;
    }
    if (v25 < 0) {
      int v24 = v26;
    }
    v20 += v28 + v24 + 1;
  }
  int v5 = v20 + 3;
  if ((v3 & 0x40) == 0) {
    int v5 = v20;
  }
  if ((v3 & 0x80) != 0) {
    v5 += 3;
  }
LABEL_50:
  if ((v3 & 0x100) != 0) {
    int v29 = v5 + 3;
  }
  else {
    int v29 = v5;
  }
  int v30 = *((_DWORD *)this + 20);
  int v31 = v29 + 2 * v30;
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      unint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 9) + 8 * v32), a2);
      int v34 = (int)v33;
      if (v33 >= 0x80) {
        int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      }
      else {
        int v35 = 1;
      }
      v31 += v34 + v35;
      ++v32;
    }
    while (v32 < *((int *)this + 20));
  }
  uint64_t v37 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::FileOptions *)((char *)this + 8))
      + v31;
  int v38 = (void *)*((void *)this + 4);
  if (v38 && *v38 != v38[1]) {
    uint64_t v37 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v36)+ v37;
  }
  *((_DWORD *)this + 25) = v37;
  return v37;
}

void wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(wireless_diagnostics::google::protobuf::FileOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_21360148C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::FileOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    int v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::FileOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::FileOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::FileOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::FileOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::Swap(uint64_t this, wireless_diagnostics::google::protobuf::FileOptions *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::FileOptions *)this)
  {
    uint64_t v4 = this;
    uint64_t v5 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    uint64_t v6 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    LOBYTE(v6) = *(unsigned char *)(this + 60);
    *(unsigned char *)(this + 60) = *((unsigned char *)a2 + 60);
    *((unsigned char *)a2 + 60) = v6;
    LOBYTE(v6) = *(unsigned char *)(this + 61);
    *(unsigned char *)(this + 61) = *((unsigned char *)a2 + 61);
    *((unsigned char *)a2 + 61) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v6;
    uint64_t v7 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v7;
    LOBYTE(v7) = *(unsigned char *)(this + 62);
    *(unsigned char *)(this + 62) = *((unsigned char *)a2 + 62);
    *((unsigned char *)a2 + 62) = v7;
    LOBYTE(v7) = *(unsigned char *)(this + 63);
    *(unsigned char *)(this + 63) = *((unsigned char *)a2 + 63);
    *((unsigned char *)a2 + 63) = v7;
    LOBYTE(v7) = *(unsigned char *)(this + 96);
    *(unsigned char *)(this + 96) = *((unsigned char *)a2 + 96);
    *((unsigned char *)a2 + 96) = v7;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v8 = *(_DWORD *)(v4 + 104);
    *(_DWORD *)(v4 + 104) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v8;
    uint64_t v9 = *(void *)(v4 + 32);
    *(void *)(v4 + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v9;
    LODWORD(v9) = *(_DWORD *)(v4 + 100);
    *(_DWORD *)(v4 + 100) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v9;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::GetMetadata(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213601744(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::SharedCtor(uint64_t this)
{
  *(_WORD *)(this + 64) = 0;
  *(_DWORD *)(this + 68) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::MessageOptions *wireless_diagnostics::google::protobuf::MessageOptions::MessageOptions(wireless_diagnostics::google::protobuf::MessageOptions *this, const wireless_diagnostics::google::protobuf::MessageOptions *a2)
{
  *(void *)this = &unk_26C3F8EC0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(this, a2);
  return this;
}

void sub_2136017F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::MessageOptions::~MessageOptions(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  *(void *)this = &unk_26C3F8EC0;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::MessageOptions::~MessageOptions(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::descriptor(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213601974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::MessageOptions::New(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
}

void sub_2136019C8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ABAA5818);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::MessageOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 40);
  uint64_t v7 = (void ***)((char *)this + 32);
  int v8 = (wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v9;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v9 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v11 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          unsigned int v35 = 0;
          int v14 = (char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
            if (!result) {
              return result;
            }
            unsigned int v15 = v35;
            uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v13 = *((void *)a2 + 2);
          }
          else
          {
            unsigned int v15 = *v14;
            uint64_t v16 = v14 + 1;
            *((void *)a2 + 1) = v16;
          }
          *((unsigned char *)this + 64) = v15 != 0;
          *((_DWORD *)this + 18) |= 1u;
          if ((unint64_t)v16 < v13 && *v16 == 16)
          {
            unint64_t v17 = v16 + 1;
            *((void *)a2 + 1) = v17;
            goto LABEL_30;
          }
        }
        if (v11 != 2) {
          break;
        }
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v17 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_30:
        unsigned int v34 = 0;
        if ((unint64_t)v17 >= v13 || (char)*v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
          if (!result) {
            return result;
          }
          unsigned int v19 = v34;
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v17;
          int v20 = v17 + 1;
          *((void *)a2 + 1) = v20;
        }
        *((unsigned char *)this + 65) = v19 != 0;
        *((_DWORD *)this + 18) |= 2u;
        if ((int)v13 - (int)v20 >= 2 && *v20 == 186 && v20[1] == 62) {
          goto LABEL_38;
        }
      }
      if (v11 != 999) {
        break;
      }
      int v12 = TagFallback & 7;
      if (v12 != 2) {
        goto LABEL_19;
      }
      while (1)
      {
        int v21 = *((_DWORD *)this + 13);
        uint64_t v22 = *((int *)this + 12);
        if ((int)v22 >= v21)
        {
          if (v21 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v21 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v21 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
        }
        uint64_t v23 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v22 + 1;
        int v24 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v23 + 8 * v22);
        unsigned int v36 = 0;
        char v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v24, a2, v28, v29)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v30 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v30, 1);
        int v32 = v30 - 1;
        if (v32 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v32;
        }
        int v20 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v33 = (unsigned __int8 *)*((void *)a2 + 2);
        if ((int)v33 - (int)v20 <= 1 || *v20 != 186 || v20[1] != 62) {
          break;
        }
LABEL_38:
        *((void *)a2 + 1) = v20 + 2;
      }
      if (v20 == v33 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v12 = TagFallback & 7;
LABEL_19:
    if (v12 == 4) {
      return 1;
    }
    if (TagFallback >> 6 < 0x7D)
    {
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::MessageOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t **wireless_diagnostics::google::protobuf::MessageOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::MessageOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 18);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *((unsigned __int8 *)this + 64), (uint64_t)a2, a4);
    int v6 = *((_DWORD *)this + 18);
  }
  if ((v6 & 2) != 0) {
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 65), (uint64_t)a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v7 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 5) + 8 * v7++), a2, a4);
    while (v7 < *((int *)this + 12));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  int v12 = (void *)*((void *)this + 4);
  unsigned int v11 = (uint64_t **)((char *)this + 32);
  unint64_t v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, v9);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MessageOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::MessageOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  int v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if (v5)
  {
    unsigned __int8 v6 = *((unsigned char *)this + 64);
    *a2 = 8;
    a2[1] = v6;
    int v3 = a2 + 2;
    int v5 = *((_DWORD *)this + 18);
  }
  if ((v5 & 2) != 0)
  {
    unsigned __int8 v7 = *((unsigned char *)this + 65);
    *int v3 = 16;
    v3[1] = v7;
    v3 += 2;
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(unsigned int **)(*((void *)this + 5) + 8 * v8);
      *(_WORD *)int v3 = 16058;
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[22];
      if (v10 > 0x7F)
      {
        unsigned int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v10;
        unsigned int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      int v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v9, v11, a3, v3);
      ++v8;
    }
    while (v8 < *((int *)this + 12));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unint64_t v17 = (void *)*((void *)this + 4);
  uint64_t v16 = (uint64_t **)((char *)this + 32);
  unsigned int v15 = v17;
  if (v17 && *v15 != v15[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, result, v13, v14);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::ByteSize(wireless_diagnostics::google::protobuf::MessageOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = 2 * (*((_DWORD *)this + 18) & 1);
  if ((*((_DWORD *)this + 18) & 2) != 0) {
    v3 += 2;
  }
  if (*((_DWORD *)this + 18)) {
    int v4 = v3;
  }
  else {
    int v4 = 0;
  }
  int v5 = *((_DWORD *)this + 12);
  int v6 = v4 + 2 * v5;
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 5) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *((int *)this + 12));
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::MessageOptions *)((char *)this + 8))
      + v6;
  unint64_t v13 = (void *)*((void *)this + 4);
  if (v13 && *v13 != v13[1]) {
    uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v11)+ v12;
  }
  *((_DWORD *)this + 17) = v12;
  return v12;
}

void wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(wireless_diagnostics::google::protobuf::MessageOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2136020F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::MessageOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    int v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::MessageOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::MessageOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::MessageOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::MessageOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::IsInitialized(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  if (*((int *)this + 12) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 12)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::MessageOptions *wireless_diagnostics::google::protobuf::MessageOptions::Swap(wireless_diagnostics::google::protobuf::MessageOptions *this, wireless_diagnostics::google::protobuf::MessageOptions *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    char v5 = *((unsigned char *)this + 64);
    *((unsigned char *)this + 64) = *((unsigned char *)a2 + 64);
    *((unsigned char *)a2 + 64) = v5;
    char v6 = *((unsigned char *)this + 65);
    *((unsigned char *)this + 65) = *((unsigned char *)a2 + 65);
    *((unsigned char *)a2 + 65) = v6;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v7 = *((_DWORD *)v4 + 18);
    *((_DWORD *)v4 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v7;
    uint64_t v8 = *((void *)v4 + 4);
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    LODWORD(v8) = *((_DWORD *)v4 + 17);
    *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::GetMetadata(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2136023CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions_CType_descriptor(wireless_diagnostics::google::protobuf *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360246C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::FieldOptions_CType_IsValid(wireless_diagnostics::google::protobuf *this)
{
  return this < 3;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 43) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 48) = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 47) = 0;
  *(void *)(this + 80) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::FieldOptions *wireless_diagnostics::google::protobuf::FieldOptions::FieldOptions(wireless_diagnostics::google::protobuf::FieldOptions *this, const wireless_diagnostics::google::protobuf::FieldOptions *a2)
{
  *(void *)this = &unk_26C3F8C08;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_DWORD *)((char *)this + 43) = 0;
  *((void *)this + 6) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 47) = 0;
  *((void *)this + 10) = 0;
  wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(this, a2);
  return this;
}

void sub_213602550(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::descriptor(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360262C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::FieldOptions::New(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
}

void sub_213602680(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C409A5D65B8);
  _Unwind_Resume(a1);
}

uint64_t **wireless_diagnostics::google::protobuf::FieldOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::FieldOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 21);
  if (v6)
  {
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *((unsigned int *)this + 10), (uint64_t)a2, a4);
    int v6 = *((_DWORD *)this + 21);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 44), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 21);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *((unsigned __int8 *)this + 46), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 21);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *((unsigned __int8 *)this + 45), (uint64_t)a2, a4);
  int v6 = *((_DWORD *)this + 21);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_21:
  wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*((_DWORD *)this + 21) & 0x20) != 0) {
LABEL_7:
  }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *((unsigned __int8 *)this + 47), (uint64_t)a2, a4);
LABEL_8:
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v7 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 7) + 8 * v7++), a2, a4);
    while (v7 < *((int *)this + 16));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  uint64_t v12 = (void *)*((void *)this + 4);
  unsigned int v11 = (uint64_t **)((char *)this + 32);
  int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, v9);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::FieldOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::FieldOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 84))
  {
    char v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *a2 = 8;
    int v6 = a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (uint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        v3[1] = v5;
        v3 += 2;
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, (uint64_t)v6, a3);
    }
    uint64_t v3 = (unsigned __int8 *)v7;
  }
LABEL_8:
  int v8 = *((_DWORD *)this + 21);
  if ((v8 & 2) != 0)
  {
    unsigned __int8 v20 = *((unsigned char *)this + 44);
    *uint64_t v3 = 16;
    v3[1] = v20;
    v3 += 2;
    int v8 = *((_DWORD *)this + 21);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_28;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }
  unsigned __int8 v21 = *((unsigned char *)this + 46);
  *uint64_t v3 = 24;
  v3[1] = v21;
  v3 += 2;
  int v8 = *((_DWORD *)this + 21);
  if ((v8 & 4) == 0)
  {
LABEL_11:
    if ((v8 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  unsigned __int8 v22 = *((unsigned char *)this + 45);
  *uint64_t v3 = 40;
  v3[1] = v22;
  v3 += 2;
  int v8 = *((_DWORD *)this + 21);
  if ((v8 & 0x10) == 0)
  {
LABEL_12:
    if ((v8 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_29:
  uint64_t v23 = *((void *)this + 6);
  *uint64_t v3 = 74;
  if (*(char *)(v23 + 23) < 0) {
    int v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v23 + 8);
  }
  else {
    int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
  }
  if (v24 > 0x7F)
  {
    uint64_t v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (uint64_t)(v3 + 1), a3);
  }
  else
  {
    v3[1] = v24;
    uint64_t v25 = (uint64_t)(v3 + 2);
  }
  int v26 = *(char *)(v23 + 23);
  if (v26 >= 0) {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23;
  }
  else {
    int v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v23;
  }
  if (v26 >= 0) {
    uint64_t v28 = (const void *)*(unsigned __int8 *)(v23 + 23);
  }
  else {
    uint64_t v28 = (const void *)*(unsigned int *)(v23 + 8);
  }
  uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v27, v28, v25, v3);
  if ((*((_DWORD *)this + 21) & 0x20) != 0)
  {
LABEL_13:
    unsigned __int8 v9 = *((unsigned char *)this + 47);
    *uint64_t v3 = 80;
    v3[1] = v9;
    v3 += 2;
  }
LABEL_14:
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      unsigned int v11 = *(unsigned int **)(*((void *)this + 7) + 8 * v10);
      *(_WORD *)uint64_t v3 = 16058;
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[22];
      if (v12 > 0x7F)
      {
        unint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v12;
        unint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v11, v13, a3, v3);
      ++v10;
    }
    while (v10 < *((int *)this + 16));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unsigned int v19 = (void *)*((void *)this + 4);
  int v18 = (uint64_t **)((char *)this + 32);
  unint64_t v17 = v19;
  if (v19 && *v17 != v17[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, result, v15, v16);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::ByteSize(wireless_diagnostics::google::protobuf::FieldOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((unsigned __int8 *)this + 84);
  if (*((unsigned char *)this + 84))
  {
    if (v3)
    {
      char v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v5 & 0x80000000) != 0)
      {
        int v4 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v3 = *((_DWORD *)this + 21);
      }
      else
      {
        int v4 = 2;
      }
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      int v6 = v4 + 2;
    }
    else {
      int v6 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v7 = *((void *)this + 6);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      char v9 = v8;
      uint64_t v10 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11);
        int v8 = *(unsigned __int8 *)(v7 + 23);
        uint64_t v10 = *(void *)(v7 + 8);
        int v3 = *((_DWORD *)this + 21);
        char v9 = *(unsigned char *)(v7 + 23);
      }
      else
      {
        int v12 = 1;
      }
      if (v9 < 0) {
        int v8 = v10;
      }
      v6 += v12 + v8 + 1;
    }
    if ((v3 & 0x20) != 0) {
      int v3 = v6 + 2;
    }
    else {
      int v3 = v6;
    }
  }
  int v13 = *((_DWORD *)this + 16);
  int v14 = v3 + 2 * v13;
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 7) + 8 * v15), a2);
      int v17 = (int)v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      }
      else {
        int v18 = 1;
      }
      v14 += v17 + v18;
      ++v15;
    }
    while (v15 < *((int *)this + 16));
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::FieldOptions *)((char *)this + 8))
      + v14;
  unsigned __int8 v21 = (void *)*((void *)this + 4);
  if (v21 && *v21 != v21[1]) {
    uint64_t v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v19)+ v20;
  }
  *((_DWORD *)this + 20) = v20;
  return v20;
}

void wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(wireless_diagnostics::google::protobuf::FieldOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_213602C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::FieldOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    char v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::FieldOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::FieldOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::FieldOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::FieldOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::Swap(uint64_t this, wireless_diagnostics::google::protobuf::FieldOptions *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::FieldOptions *)this)
  {
    uint64_t v4 = this;
    int v5 = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 44);
    *(unsigned char *)(this + 44) = *((unsigned char *)a2 + 44);
    *((unsigned char *)a2 + 44) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 45);
    *(unsigned char *)(this + 45) = *((unsigned char *)a2 + 45);
    *((unsigned char *)a2 + 45) = v5;
    LOBYTE(v5) = *(unsigned char *)(this + 46);
    *(unsigned char *)(this + 46) = *((unsigned char *)a2 + 46);
    *((unsigned char *)a2 + 46) = v5;
    uint64_t v6 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    LOBYTE(v6) = *(unsigned char *)(this + 47);
    *(unsigned char *)(this + 47) = *((unsigned char *)a2 + 47);
    *((unsigned char *)a2 + 47) = v6;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v7 = *(_DWORD *)(v4 + 84);
    *(_DWORD *)(v4 + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v7;
    uint64_t v8 = *(void *)(v4 + 32);
    *(void *)(v4 + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v8;
    LODWORD(v8) = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v4 + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v8;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::GetMetadata(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213602F04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::SharedCtor(uint64_t this)
{
  *(unsigned char *)(this + 64) = 1;
  *(_DWORD *)(this + 68) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::EnumOptions *wireless_diagnostics::google::protobuf::EnumOptions::EnumOptions(wireless_diagnostics::google::protobuf::EnumOptions *this, const wireless_diagnostics::google::protobuf::EnumOptions *a2)
{
  *(void *)this = &unk_26C3F8AA8;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((unsigned char *)this + 64) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(this, a2);
  return this;
}

void sub_213602FBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumOptions::~EnumOptions(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  *(void *)this = &unk_26C3F8AA8;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::EnumOptions::~EnumOptions(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::descriptor(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360313C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumOptions::New(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
}

void sub_213603190(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40FFAE3E5BLL);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::EnumOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 40);
  int v7 = (void ***)((char *)this + 32);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v9;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v9 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 2) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v30 = 0;
        int v12 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v13 || (char)*v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v14 = v30;
          uint64_t v15 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v14 = *v12;
          uint64_t v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((unsigned char *)this + 64) = v14 != 0;
        *((_DWORD *)this + 18) |= 1u;
        if ((int)v13 - (int)v15 >= 2 && *v15 == 186 && v15[1] == 62) {
          goto LABEL_27;
        }
      }
      if (TagFallback >> 3 != 999) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v17 = *((_DWORD *)this + 13);
        uint64_t v18 = *((int *)this + 12);
        if ((int)v18 >= v17)
        {
          if (v17 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v17 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v17 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
        }
        uint64_t v19 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v18 + 1;
        uint64_t v20 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v19 + 8 * v18);
        unsigned int v31 = 0;
        unsigned __int8 v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v20, a2, v24, v25)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)a2 + 14) = v28;
        }
        uint64_t v15 = (unsigned __int8 *)*((void *)a2 + 1);
        int v29 = (unsigned __int8 *)*((void *)a2 + 2);
        if ((int)v29 - (int)v15 <= 1 || *v15 != 186 || v15[1] != 62) {
          break;
        }
LABEL_27:
        *((void *)a2 + 1) = v15 + 2;
      }
      if (v15 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v11 = TagFallback & 7;
LABEL_16:
    if (v11 == 4) {
      return 1;
    }
    if (TagFallback >> 6 < 0x7D)
    {
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::EnumOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t **wireless_diagnostics::google::protobuf::EnumOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::EnumOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 72)) {
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 64), (uint64_t)a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v6 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 5) + 8 * v6++), a2, a4);
    while (v6 < *((int *)this + 12));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  int v11 = (void *)*((void *)this + 4);
  uint64_t v10 = (uint64_t **)((char *)this + 32);
  char v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::EnumOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  int v3 = a2;
  if (*((unsigned char *)this + 72))
  {
    unsigned __int8 v5 = *((unsigned char *)this + 64);
    *a2 = 16;
    a2[1] = v5;
    int v3 = a2 + 2;
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(unsigned int **)(*((void *)this + 5) + 8 * v6);
      *(_WORD *)int v3 = 16058;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[22];
      if (v8 > 0x7F)
      {
        char v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v8;
        char v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      int v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v7, v9, a3, v3);
      ++v6;
    }
    while (v6 < *((int *)this + 12));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  uint64_t v15 = (void *)*((void *)this + 4);
  unsigned int v14 = (uint64_t **)((char *)this + 32);
  unint64_t v13 = v15;
  if (v15 && *v13 != v13[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, result, v11, v12);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::ByteSize(wireless_diagnostics::google::protobuf::EnumOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*((_DWORD *)this + 18)) {
    int v3 = 2 * (*((_DWORD *)this + 18) & 1);
  }
  else {
    int v3 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v3 + 2 * v4;
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 5) + 8 * v6), a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      }
      else {
        int v9 = 1;
      }
      v5 += v8 + v9;
      ++v6;
    }
    while (v6 < *((int *)this + 12));
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::EnumOptions *)((char *)this + 8))
      + v5;
  int v12 = (void *)*((void *)this + 4);
  if (v12 && *v12 != v12[1]) {
    uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v10)+ v11;
  }
  *((_DWORD *)this + 17) = v11;
  return v11;
}

void wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(wireless_diagnostics::google::protobuf::EnumOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2136037F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::EnumOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    int v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::EnumOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::EnumOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::EnumOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::EnumOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::IsInitialized(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  if (*((int *)this + 12) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 12)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::EnumOptions *wireless_diagnostics::google::protobuf::EnumOptions::Swap(wireless_diagnostics::google::protobuf::EnumOptions *this, wireless_diagnostics::google::protobuf::EnumOptions *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    char v5 = *((unsigned char *)this + 64);
    *((unsigned char *)this + 64) = *((unsigned char *)a2 + 64);
    *((unsigned char *)a2 + 64) = v5;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v6 = *((_DWORD *)v4 + 18);
    *((_DWORD *)v4 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
    uint64_t v7 = *((void *)v4 + 4);
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    LODWORD(v7) = *((_DWORD *)v4 + 17);
    *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::GetMetadata(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213603ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::SharedCtor(uint64_t this)
{
  *(void *)(this + 64) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::EnumValueOptions *wireless_diagnostics::google::protobuf::EnumValueOptions::EnumValueOptions(wireless_diagnostics::google::protobuf::EnumValueOptions *this, const wireless_diagnostics::google::protobuf::EnumValueOptions *a2)
{
  *(void *)this = &unk_26C3F9180;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  return this;
}

void sub_213603B64(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumValueOptions::~EnumValueOptions(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  *(void *)this = &unk_26C3F9180;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::EnumValueOptions::~EnumValueOptions(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::descriptor(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213603CE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::EnumValueOptions::New(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
}

void sub_213603D38(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::EnumValueOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 40);
  uint64_t v7 = (void ***)((char *)this + 32);
  int v8 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
    }
    if (TagFallback == 7994)
    {
      while (1)
      {
        int v11 = *((_DWORD *)this + 13);
        uint64_t v12 = *((int *)this + 12);
        if ((int)v12 >= v11)
        {
          if (v11 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v11 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v11 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
        }
        uint64_t v13 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v12 + 1;
        unsigned int v14 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v13 + 8 * v12);
        unsigned int v26 = 0;
        uint64_t v15 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)a2 + 14);
        int v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v14, a2, v18, v19)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned __int8 *)*((void *)a2 + 1);
        uint64_t v24 = (unsigned __int8 *)*((void *)a2 + 2);
        if ((int)v24 - (int)v23 <= 1 || *v23 != 186 || v23[1] != 62)
        {
          if (v23 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v23 + 2;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if (TagFallback >> 6 < 0x7D)
    {
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::EnumValueOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t **wireless_diagnostics::google::protobuf::EnumValueOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::EnumValueOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v6 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 5) + 8 * v6++), a2, a4);
    while (v6 < *((int *)this + 12));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  int v11 = (void *)*((void *)this + 4);
  uint64_t v10 = (uint64_t **)((char *)this + 32);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::EnumValueOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::EnumValueOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(unsigned int **)(*((void *)this + 5) + 8 * v5);
      *(_WORD *)uint64_t v3 = 16058;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v7;
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unsigned int v14 = (void *)*((void *)this + 4);
  uint64_t v13 = (uint64_t **)((char *)this + 32);
  uint64_t v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::ByteSize(wireless_diagnostics::google::protobuf::EnumValueOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 12);
  int v4 = 2 * v3;
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 5) + 8 * v5), a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::EnumValueOptions *)((char *)this + 8))
      + v4;
  int v11 = (void *)*((void *)this + 4);
  if (v11 && *v11 != v11[1]) {
    uint64_t v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  }
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(wireless_diagnostics::google::protobuf::EnumValueOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2136042BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::EnumValueOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::EnumValueOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::EnumValueOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::EnumValueOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::EnumValueOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::IsInitialized(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  if (*((int *)this + 12) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 12)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::EnumValueOptions *wireless_diagnostics::google::protobuf::EnumValueOptions::Swap(wireless_diagnostics::google::protobuf::EnumValueOptions *this, wireless_diagnostics::google::protobuf::EnumValueOptions *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v4 + 17);
    *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    uint64_t v6 = *((void *)v4 + 4);
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    LODWORD(v6) = *((_DWORD *)v4 + 16);
    *((_DWORD *)v4 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::GetMetadata(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213604578(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::SharedCtor(uint64_t this)
{
  *(void *)(this + 64) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::ServiceOptions *wireless_diagnostics::google::protobuf::ServiceOptions::ServiceOptions(wireless_diagnostics::google::protobuf::ServiceOptions *this, const wireless_diagnostics::google::protobuf::ServiceOptions *a2)
{
  *(void *)this = &unk_26C3F8F70;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(this, a2);
  return this;
}

void sub_213604620(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::ServiceOptions::~ServiceOptions(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  *(void *)this = &unk_26C3F8F70;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::ServiceOptions::~ServiceOptions(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::descriptor(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2136047A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::ServiceOptions::New(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
}

void sub_2136047F4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::ServiceOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 40);
  int v7 = (void ***)((char *)this + 32);
  int v8 = (wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
    }
    if (TagFallback == 7994)
    {
      while (1)
      {
        int v11 = *((_DWORD *)this + 13);
        uint64_t v12 = *((int *)this + 12);
        if ((int)v12 >= v11)
        {
          if (v11 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v11 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v11 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
        }
        uint64_t v13 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v12 + 1;
        unsigned int v14 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v13 + 8 * v12);
        unsigned int v26 = 0;
        uint64_t v15 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)a2 + 14);
        int v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v14, a2, v18, v19)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned __int8 *)*((void *)a2 + 1);
        uint64_t v24 = (unsigned __int8 *)*((void *)a2 + 2);
        if ((int)v24 - (int)v23 <= 1 || *v23 != 186 || v23[1] != 62)
        {
          if (v23 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v23 + 2;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if (TagFallback >> 6 < 0x7D)
    {
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::ServiceOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t **wireless_diagnostics::google::protobuf::ServiceOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::ServiceOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v6 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 5) + 8 * v6++), a2, a4);
    while (v6 < *((int *)this + 12));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  int v11 = (void *)*((void *)this + 4);
  uint64_t v10 = (uint64_t **)((char *)this + 32);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::ServiceOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::ServiceOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(unsigned int **)(*((void *)this + 5) + 8 * v5);
      *(_WORD *)uint64_t v3 = 16058;
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v7;
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unsigned int v14 = (void *)*((void *)this + 4);
  uint64_t v13 = (uint64_t **)((char *)this + 32);
  uint64_t v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::ByteSize(wireless_diagnostics::google::protobuf::ServiceOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 12);
  int v4 = 2 * v3;
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 5) + 8 * v5), a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::ServiceOptions *)((char *)this + 8))
      + v4;
  int v11 = (void *)*((void *)this + 4);
  if (v11 && *v11 != v11[1]) {
    uint64_t v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  }
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(wireless_diagnostics::google::protobuf::ServiceOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_213604D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::ServiceOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::ServiceOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::ServiceOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::ServiceOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::ServiceOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::IsInitialized(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  if (*((int *)this + 12) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 12)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::ServiceOptions *wireless_diagnostics::google::protobuf::ServiceOptions::Swap(wireless_diagnostics::google::protobuf::ServiceOptions *this, wireless_diagnostics::google::protobuf::ServiceOptions *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v4 + 17);
    *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    uint64_t v6 = *((void *)v4 + 4);
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    LODWORD(v6) = *((_DWORD *)v4 + 16);
    *((_DWORD *)v4 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::GetMetadata(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213605034(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::SharedCtor(uint64_t this)
{
  *(void *)(this + 64) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::MethodOptions *wireless_diagnostics::google::protobuf::MethodOptions::MethodOptions(wireless_diagnostics::google::protobuf::MethodOptions *this, const wireless_diagnostics::google::protobuf::MethodOptions *a2)
{
  *(void *)this = &unk_26C3F8D10;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8));
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 4);
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 8) = 0;
  wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(this, a2);
  return this;
}

void sub_2136050DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v4);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v3);
  MEMORY[0x21668D5C0](v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::MethodOptions::~MethodOptions(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  *(void *)this = &unk_26C3F8D10;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 32));
  MEMORY[0x21668D5C0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::MethodOptions::~MethodOptions(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::descriptor(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360525C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::MethodOptions::New(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
}

void sub_2136052B0(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C406A05FE54);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::MethodOptions *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 40);
  int v7 = (void ***)((char *)this + 32);
  int v8 = (wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    int v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v9 + 1;
    }
    if (TagFallback == 7994)
    {
      while (1)
      {
        int v11 = *((_DWORD *)this + 13);
        uint64_t v12 = *((int *)this + 12);
        if ((int)v12 >= v11)
        {
          if (v11 == *((_DWORD *)this + 14))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v11 = *((_DWORD *)this + 13);
          }
          *((_DWORD *)this + 13) = v11 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New();
        }
        uint64_t v13 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v12 + 1;
        unsigned int v14 = *(wireless_diagnostics::google::protobuf::UninterpretedOption **)(v13 + 8 * v12);
        unsigned int v26 = 0;
        uint64_t v15 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)a2 + 14);
        int v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(v14, a2, v18, v19)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned __int8 *)*((void *)a2 + 1);
        uint64_t v24 = (unsigned __int8 *)*((void *)a2 + 2);
        if ((int)v24 - (int)v23 <= 1 || *v23 != 186 || v23[1] != 62)
        {
          if (v23 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v23 + 2;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if (TagFallback >> 6 < 0x7D)
    {
      if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v8, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)wireless_diagnostics::google::protobuf::MethodOptions::default_instance_, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7) & 1) == 0)
    {
      return 0;
    }
  }
}

uint64_t **wireless_diagnostics::google::protobuf::MethodOptions::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::MethodOptions *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v6 = 0;
    do
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E7, *(void *)(*((void *)this + 5) + 8 * v6++), a2, a4);
    while (v6 < *((int *)this + 12));
  }
  uint64_t result = (uint64_t **)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8), 1000, 0x20000000, a2);
  int v11 = (void *)*((void *)this + 4);
  uint64_t v10 = (uint64_t **)((char *)this + 32);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, v8);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::MethodOptions::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::MethodOptions *this, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(unsigned int **)(*((void *)this + 5) + 8 * v5);
      *(_WORD *)uint64_t v3 = 16058;
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[22];
      if (v7 > 0x7F)
      {
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)(v3 + 2), a3);
      }
      else
      {
        void v3[2] = v7;
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 3);
      }
      uint64_t v3 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption *)v6, v8, a3, v3);
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t result = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8), 1000, 0x20000000, v3);
  unsigned int v14 = (void *)*((void *)this + 4);
  uint64_t v13 = (uint64_t **)((char *)this + 32);
  uint64_t v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, result, v10, v11);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::ByteSize(wireless_diagnostics::google::protobuf::MethodOptions *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 12);
  int v4 = 2 * v3;
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption **)(*((void *)this + 5) + 8 * v5), a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      v4 += v7 + v8;
      ++v5;
    }
    while (v5 < *((int *)this + 12));
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((wireless_diagnostics::google::protobuf::MethodOptions *)((char *)this + 8))
      + v4;
  int v11 = (void *)*((void *)this + 4);
  if (v11 && *v11 != v11[1]) {
    uint64_t v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 4, v9)+ v10;
  }
  *((_DWORD *)this + 16) = v10;
  return v10;
}

void wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(wireless_diagnostics::google::protobuf::MethodOptions *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_213605834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::MethodOptions::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::MethodOptions::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::MethodOptions *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::MethodOptions::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::MethodOptions *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::IsInitialized(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  if (*((int *)this + 12) < 1)
  {
LABEL_5:
    return MEMORY[0x270F9B048]((char *)this + 8);
  }
  else
  {
    uint64_t v2 = 0;
    while (1)
    {
      uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v2);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
        return 0;
      }
      if (++v2 >= *((int *)this + 12)) {
        goto LABEL_5;
      }
    }
  }
}

wireless_diagnostics::google::protobuf::MethodOptions *wireless_diagnostics::google::protobuf::MethodOptions::Swap(wireless_diagnostics::google::protobuf::MethodOptions *this, wireless_diagnostics::google::protobuf::MethodOptions *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v4 + 17);
    *((_DWORD *)v4 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    uint64_t v6 = *((void *)v4 + 4);
    *((void *)v4 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    LODWORD(v6) = *((_DWORD *)v4 + 16);
    *((_DWORD *)v4 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v6;
    JUMPOUT(0x21668D470);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::GetMetadata(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213605AF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SharedCtor(uint64_t this)
{
  *(void *)(this + 16) = MEMORY[0x263F8C740];
  *(unsigned char *)(this + 24) = 0;
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, const wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *a2)
{
  *(void *)this = &unk_26C3F99F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = MEMORY[0x263F8C740];
  *((unsigned char *)this + 24) = 0;
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a2);
  return this;
}

void sub_213605B94(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, const wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v5 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v6 = (std::string *)*((void *)this + 2);
      if (v6 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 2) != 0)
    {
      char v7 = *((unsigned char *)a2 + 24);
      *((_DWORD *)this + 8) |= 2u;
      *((unsigned char *)this + 24) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)((char *)a2 + 8));
}

void sub_213605CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  *(void *)this = &unk_26C3F99F0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8);
  wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SharedDtor(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if (v1 != MEMORY[0x263F8C740] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x21668DB60);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::descriptor(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213605E74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_;
  if (!wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::New(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
}

void sub_213605EF8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ED7A6C83);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::Clear(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  if (*((unsigned char *)this + 32))
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v1 = *((void *)this + 2);
      if (v1 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *((unsigned char *)this + 24) = 0;
  }
  uint64_t v3 = *((void *)this + 1);
  uint64_t result = (wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8);
  *((_DWORD *)result + 6) = 0;
  if (v3) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (void ***)((char *)this + 8);
  uint64_t v7 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      int v8 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_22;
      }
      *((_DWORD *)this + 8) |= 1u;
      if (*((void *)this + 2) == v7) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
      if ((unint64_t)v14 < v11 && *v14 == 16)
      {
        uint64_t v12 = v14 + 1;
        *((void *)a2 + 1) = v12;
LABEL_18:
        unsigned int v17 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v15 = v17;
          int v16 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = (unsigned __int8 *)(v12 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((unsigned char *)this + 24) = v15 != 0;
        *((_DWORD *)this + 8) |= 2u;
        if (v16 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_22:
    if (v10 == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))return 0; {
  }
    }
}

uint64_t **wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 32);
  }
  if ((v6 & 2) != 0) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  }
  int v9 = *(void **)(v5 + 8);
  int v8 = (uint64_t **)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    uint64_t v6 = *((void *)this + 2);
    *(unsigned char *)a2 = 10;
    if (*(char *)(v6 + 23) < 0) {
      uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    }
    else {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
    }
    if (v7 > 0x7F)
    {
      int v8 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v7;
      int v8 = (unsigned __int8 *)a2 + 2;
    }
    int v9 = *(char *)(v6 + 23);
    if (v9 >= 0) {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
    }
    else {
      int v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
    }
    if (v9 >= 0) {
      unint64_t v11 = (const void *)*(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v11 = (const void *)*(unsigned int *)(v6 + 8);
    }
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, (uint64_t)v8, a4);
    int v5 = *((_DWORD *)this + 8);
  }
  if ((v5 & 2) != 0)
  {
    unsigned __int8 v12 = *((unsigned char *)this + 24);
    *(unsigned char *)a2 = 16;
    *((unsigned char *)a2 + 1) = v12;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  unsigned int v15 = (void *)*((void *)this + 1);
  unsigned int v14 = (uint64_t **)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::ByteSize(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *((unsigned char *)this + 32);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v6 = *((void *)this + 2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *((_DWORD *)this + 8);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v13 = (void *)*((void *)this + 1);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v5;
  }
  *((_DWORD *)this + 7) = v5;
  return v5;
}

void wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_213606444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    unsigned int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    unsigned int v4 = (wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)a2);
  }
  return this;
}

BOOL wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::IsInitialized(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 8) & 3) == 0;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::Swap(uint64_t this, wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *a2)
{
  if (a2 != (wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 24);
    *(unsigned char *)(this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::GetMetadata(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213606658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::UninterpretedOption::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[5] = MEMORY[0x263F8C740];
  this[6] = 0;
  this[7] = 0;
  this[8] = 0;
  this[9] = v1;
  this[10] = v1;
  this[11] = 0;
  return this;
}

wireless_diagnostics::google::protobuf::UninterpretedOption *wireless_diagnostics::google::protobuf::UninterpretedOption::UninterpretedOption(wireless_diagnostics::google::protobuf::UninterpretedOption *this, const wireless_diagnostics::google::protobuf::UninterpretedOption *a2)
{
  *(void *)this = &unk_26C3F94A8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 5) = MEMORY[0x263F8C740];
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = v4;
  *((void *)this + 10) = v4;
  *((void *)this + 11) = 0;
  wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(this, a2);
  return this;
}

void sub_213606714(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(wireless_diagnostics::google::protobuf::UninterpretedOption *this, const wireless_diagnostics::google::protobuf::UninterpretedOption *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart>::New();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergeFrom(*(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 0x1FE) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)a2 + 8));
  }
  unint64_t v10 = (std::string *)MEMORY[0x263F8C740];
  if ((v9 & 2) != 0)
  {
    int v11 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 23) |= 2u;
    int v12 = (std::string *)*((void *)this + 5);
    if (v12 == v10) {
      operator new();
    }
    std::string::operator=(v12, v11);
    int v9 = *((_DWORD *)a2 + 23);
    if ((v9 & 4) == 0)
    {
LABEL_14:
      if ((v9 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = *((void *)a2 + 6);
  *((_DWORD *)this + 23) |= 4u;
  *((void *)this + 6) = v13;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 8) == 0)
  {
LABEL_15:
    if ((v9 & 0x10) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    uint64_t v15 = *((void *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x10u;
    *((void *)this + 8) = v15;
    int v9 = *((_DWORD *)a2 + 23);
    if ((v9 & 0x20) == 0)
    {
LABEL_17:
      if ((v9 & 0x40) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)a2 + 8));
      }
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t v14 = *((void *)a2 + 7);
  *((_DWORD *)this + 23) |= 8u;
  *((void *)this + 7) = v14;
  int v9 = *((_DWORD *)a2 + 23);
  if ((v9 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v9 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_25:
  int v16 = (const std::string *)*((void *)a2 + 9);
  *((_DWORD *)this + 23) |= 0x20u;
  unsigned int v17 = (std::string *)*((void *)this + 9);
  if (v17 == v10) {
    operator new();
  }
  std::string::operator=(v17, v16);
  if ((*((_DWORD *)a2 + 23) & 0x40) != 0)
  {
LABEL_28:
    uint64_t v18 = (const std::string *)*((void *)a2 + 10);
    *((_DWORD *)this + 23) |= 0x40u;
    uint64_t v19 = (std::string *)*((void *)this + 10);
    if (v19 == v10) {
      operator new();
    }
    std::string::operator=(v19, v18);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)a2 + 8));
}

void sub_2136069E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::UninterpretedOption::~UninterpretedOption(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  *(void *)this = &unk_26C3F94A8;
  uint64_t v2 = (uint64_t *)((char *)this + 16);
  wireless_diagnostics::google::protobuf::UninterpretedOption::SharedDtor((uint64_t)this);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::UninterpretedOption::~UninterpretedOption(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 40);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 72);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = MEMORY[0x21668DB60](v5, 0x1012C40EC159624);
  }
  uint64_t v7 = *(void *)(v1 + 80);
  if (v7 != v3 && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    JUMPOUT(0x21668DB60);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::descriptor(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213606C30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance(wireless_diagnostics::google::protobuf::UninterpretedOption *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_;
  if (!wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::UninterpretedOption::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::UninterpretedOption::New(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
}

void sub_213606CB4(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40AD0F7D02);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UninterpretedOption::Clear(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x1FE) != 0)
  {
    uint64_t v3 = MEMORY[0x263F8C740];
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 5);
      if (v4 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *((void *)this + 6) = 0;
    *((void *)this + 7) = 0;
    *((void *)this + 8) = 0;
    if ((*((unsigned char *)this + 92) & 0x20) != 0)
    {
      uint64_t v5 = *((void *)this + 9);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 92) & 0x40) != 0)
    {
      uint64_t v6 = *((void *)this + 10);
      if (v6 != v3)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
  }
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Clear<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>((uint64_t)this + 16);
  uint64_t v9 = *((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)this + 8);
  *((_DWORD *)v8 + 21) = 0;
  if (v9)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v8);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::UninterpretedOption *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UninterpretedOption *)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 48);
  uint64_t v8 = (void ***)((char *)this + 8);
  uint64_t v9 = MEMORY[0x263F8C740];
LABEL_2:
  while (2)
  {
    unint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
        while (1)
        {
          int v13 = *((_DWORD *)this + 7);
          uint64_t v14 = *((int *)this + 6);
          if ((int)v14 >= v13)
          {
            if (v13 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
              int v13 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v13 + 1;
            wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart>::New();
          }
          uint64_t v15 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v14 + 1;
          int v16 = *(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart **)(v15 + 8 * v14);
          v38[0] = 0;
          unsigned int v17 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
          }
            }
          else
          {
            v38[0] = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v18 = *((_DWORD *)a2 + 14);
          int v19 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v18 + 1;
          if (v18 >= v19) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::MergePartialFromCodedStream(v16, a2, v20, v21)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v22 = *((_DWORD *)a2 + 14);
          BOOL v23 = __OFSUB__(v22, 1);
          int v24 = v22 - 1;
          if (v24 < 0 == v23) {
            *((_DWORD *)a2 + 14) = v24;
          }
          uint64_t v25 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v25 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v26 = *v25;
          if (v26 != 18) {
            break;
          }
          *((void *)a2 + 1) = v25 + 1;
        }
        if (v26 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
        goto LABEL_28;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
LABEL_28:
        *((_DWORD *)this + 23) |= 2u;
        if (*((void *)this + 5) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v28 || *v29 != 32) {
          continue;
        }
        unsigned int v30 = v29 + 1;
        *((void *)a2 + 1) = v30;
LABEL_36:
        if ((unint64_t)v30 >= v28 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v28 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v30;
          unsigned int v31 = v30 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 23) |= 4u;
        if ((unint64_t)v31 >= v28 || *v31 != 40) {
          continue;
        }
        int v32 = v31 + 1;
        *((void *)a2 + 1) = v32;
LABEL_54:
        *(void *)int v38 = 0;
        if ((unint64_t)v32 >= v28 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v38);
          if (!result) {
            return result;
          }
          uint64_t v34 = *(void *)v38;
          unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v28 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v34 = *v32;
          unsigned int v35 = v32 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((void *)this + 7) = v34;
        *((_DWORD *)this + 23) |= 8u;
        if ((unint64_t)v35 >= v28 || *v35 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_62:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v38;
        }
        int v33 = *((_DWORD *)this + 23) | 0x10;
        *((_DWORD *)this + 23) = v33;
        unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_66:
        *((_DWORD *)this + 23) = v33 | 0x20;
        if (*((void *)this + 9) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_72:
        *((_DWORD *)this + 23) |= 0x40u;
        if (*((void *)this + 10) == v9) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v30 = (char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        goto LABEL_36;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v32 = (char *)*((void *)a2 + 1);
        unint64_t v28 = *((void *)a2 + 2);
        goto LABEL_54;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_62;
        }
        goto LABEL_46;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
        int v33 = *((_DWORD *)this + 23);
        goto LABEL_66;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
        goto LABEL_72;
      default:
        int v12 = TagFallback & 7;
LABEL_46:
        if (v12 == 4) {
          return 1;
        }
        if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4))return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t **wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 2) != 0)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v7 = *(_DWORD *)(v5 + 92);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 48), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 56), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 0x10) == 0)
  {
LABEL_8:
    if ((v7 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    if ((*(_DWORD *)(v5 + 92) & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_20:
  this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_9:
  if ((v7 & 0x40) != 0) {
LABEL_10:
  }
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
LABEL_11:
  unint64_t v10 = *(void **)(v5 + 8);
  uint64_t v9 = (uint64_t **)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::UninterpretedOption::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::UninterpretedOption *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 18;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[7];
      if (v8 > 0x7F)
      {
        uint64_t v9 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v8;
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  int v10 = *((_DWORD *)this + 23);
  if ((v10 & 2) != 0)
  {
    uint64_t v11 = *((void *)this + 5);
    *(unsigned char *)a2 = 26;
    if (*(char *)(v11 + 23) < 0) {
      int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
    }
    else {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    }
    if (v12 > 0x7F)
    {
      int v13 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (uint64_t)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v12;
      int v13 = (char *)a2 + 2;
    }
    int v14 = *(char *)(v11 + 23);
    if (v14 >= 0) {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
    }
    else {
      uint64_t v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
    }
    if (v14 >= 0) {
      int v16 = (const void *)*(unsigned __int8 *)(v11 + 23);
    }
    else {
      int v16 = (const void *)*(unsigned int *)(v11 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, (uint64_t)v13, a4);
    int v10 = *((_DWORD *)this + 23);
    if ((v10 & 4) == 0)
    {
LABEL_9:
      if ((v10 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
  }
  else if ((v10 & 4) == 0)
  {
    goto LABEL_9;
  }
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
  *(unsigned char *)a2 = 32;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (uint64_t)a2 + 1, a3);
  int v10 = *((_DWORD *)this + 23);
  if ((v10 & 8) == 0)
  {
LABEL_10:
    if ((v10 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 7);
  *(unsigned char *)a2 = 40;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, (uint64_t)a2 + 1, a3);
  int v10 = *((_DWORD *)this + 23);
  if ((v10 & 0x10) == 0)
  {
LABEL_11:
    if ((v10 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_30:
    uint64_t v20 = *((void *)this + 9);
    *(unsigned char *)a2 = 58;
    if (*(char *)(v20 + 23) < 0) {
      BOOL v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v20 + 8);
    }
    else {
      BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
    }
    if (v21 > 0x7F)
    {
      int v22 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (uint64_t)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v21;
      int v22 = (char *)a2 + 2;
    }
    int v23 = *(char *)(v20 + 23);
    if (v23 >= 0) {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
    }
    else {
      int v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
    }
    if (v23 >= 0) {
      uint64_t v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
    }
    else {
      uint64_t v25 = (const void *)*(unsigned int *)(v20 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, (uint64_t)v22, a4);
    if ((*((_DWORD *)this + 23) & 0x40) == 0) {
      goto LABEL_56;
    }
    goto LABEL_43;
  }
LABEL_29:
  uint64_t v19 = *((void *)this + 8);
  *(unsigned char *)a2 = 49;
  *(void *)((char *)a2 + 1) = v19;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  int v10 = *((_DWORD *)this + 23);
  if ((v10 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_12:
  if ((v10 & 0x40) != 0)
  {
LABEL_43:
    uint64_t v26 = *((void *)this + 10);
    *(unsigned char *)a2 = 66;
    if (*(char *)(v26 + 23) < 0) {
      BOOL v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v26 + 8);
    }
    else {
      BOOL v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v26 + 23);
    }
    if (v27 > 0x7F)
    {
      unint64_t v28 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (uint64_t)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v27;
      unint64_t v28 = (char *)a2 + 2;
    }
    int v29 = *(char *)(v26 + 23);
    if (v29 >= 0) {
      unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26;
    }
    else {
      unsigned int v30 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v26;
    }
    if (v29 >= 0) {
      unsigned int v31 = (const void *)*(unsigned __int8 *)(v26 + 23);
    }
    else {
      unsigned int v31 = (const void *)*(unsigned int *)(v26 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v30, v31, (uint64_t)v28, a4);
  }
LABEL_56:
  uint64_t v34 = (void *)*((void *)this + 1);
  int v33 = (uint64_t **)((char *)this + 8);
  int v32 = v34;
  if (!v34 || *v32 == v32[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v33, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::ByteSize(wireless_diagnostics::google::protobuf::UninterpretedOption *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 23);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_40;
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *((void *)this + 5);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v10 = v11 + 1;
      int v3 = *((_DWORD *)this + 23);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 2;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    int v4 = v10 + v6;
    if ((v3 & 4) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_16;
    }
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 6))
      + 1;
  int v3 = *((_DWORD *)this + 23);
LABEL_16:
  if ((v3 & 8) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 7))
        + 1;
    int v3 = *((_DWORD *)this + 23);
  }
  if ((v3 & 0x10) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v12 = *((void *)this + 9);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      int v3 = *((_DWORD *)this + 23);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    v4 += v17 + v13 + 1;
  }
  if ((v3 & 0x40) != 0)
  {
    uint64_t v18 = *((void *)this + 10);
    int v19 = *(unsigned __int8 *)(v18 + 23);
    char v20 = v19;
    uint64_t v21 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      unint64_t v22 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      unint64_t v22 = v21;
    }
    if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22);
      int v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v21 = *(void *)(v18 + 8);
      char v20 = *(unsigned char *)(v18 + 23);
    }
    else
    {
      int v23 = 1;
    }
    if (v20 < 0) {
      int v19 = v21;
    }
    v4 += v23 + v19 + 1;
  }
LABEL_40:
  int v24 = *((_DWORD *)this + 6);
  uint64_t v25 = (v24 + v4);
  if (v24 >= 1)
  {
    uint64_t v26 = 0;
    do
    {
      BOOL v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::ByteSize(*(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart **)(*((void *)this + 2) + 8 * v26), a2);
      int v28 = (int)v27;
      if (v27 >= 0x80) {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
      }
      else {
        int v29 = 1;
      }
      uint64_t v25 = (v28 + v25 + v29);
      ++v26;
    }
    while (v26 < *((int *)this + 6));
  }
  unsigned int v30 = (void *)*((void *)this + 1);
  if (v30 && *v30 != v30[1]) {
    uint64_t v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v25;
  }
  *((_DWORD *)this + 22) = v25;
  return v25;
}

void wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(wireless_diagnostics::google::protobuf::UninterpretedOption *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2136079C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::UninterpretedOption::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::UninterpretedOption::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UninterpretedOption *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::UninterpretedOption::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::UninterpretedOption *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::IsInitialized(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  if (*((int *)this + 6) < 1) {
    return 1;
  }
  uint64_t v2 = 0;
  do
  {
    uint64_t v3 = *(void *)(*((void *)this + 2) + 8 * v2);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3);
    if ((result & 1) == 0) {
      break;
    }
    ++v2;
  }
  while (v2 < *((int *)this + 6));
  return result;
}

double wireless_diagnostics::google::protobuf::UninterpretedOption::Swap(wireless_diagnostics::google::protobuf::UninterpretedOption *this, wireless_diagnostics::google::protobuf::UninterpretedOption *a2)
{
  if (a2 != this)
  {
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)this + 5);
    uint64_t v5 = *((void *)this + 6);
    uint64_t v6 = *((void *)a2 + 6);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)this + 6) = v6;
    *((void *)a2 + 5) = v4;
    *((void *)a2 + 6) = v5;
    uint64_t v7 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v7;
    double result = *((double *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((double *)a2 + 8) = result;
    uint64_t v9 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    uint64_t v10 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    LODWORD(v10) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v10;
    uint64_t v11 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v11;
    LODWORD(v11) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::GetMetadata(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213607CA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x263F8C740];
  this[8] = MEMORY[0x263F8C740];
  this[9] = v1;
  this[10] = 0;
  return this;
}

wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, const wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *a2)
{
  *(void *)this = &unk_26C3F97D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  uint64_t v4 = MEMORY[0x263F8C740];
  *((void *)this + 8) = MEMORY[0x263F8C740];
  *((void *)this + 9) = v4;
  *((void *)this + 10) = 0;
  wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
  return this;
}

void sub_213607D5C(_Unwind_Exception *a1)
{
  if (*v4) {
    MEMORY[0x21668DB40](*v4, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(v3, v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void ***wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, const wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)this + 40, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((void *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  int v6 = *((_DWORD *)a2 + 21);
  if ((v6 & 0x3FC) != 0)
  {
    uint64_t v7 = (std::string *)MEMORY[0x263F8C740];
    if ((v6 & 4) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 21) |= 4u;
      uint64_t v9 = (std::string *)*((void *)this + 8);
      if (v9 == v7) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v6 = *((_DWORD *)a2 + 21);
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v10 = (const std::string *)*((void *)a2 + 9);
      *((_DWORD *)this + 21) |= 8u;
      uint64_t v11 = (std::string *)*((void *)this + 9);
      if (v11 == v7) {
        operator new();
      }
      std::string::operator=(v11, v10);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((void ***)this + 1, (const wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)((char *)a2 + 8));
}

void sub_213607F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  *(void *)this = &unk_26C3F97D0;
  wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SharedDtor((uint64_t)this);
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    MEMORY[0x21668DB40](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 2);
  if (v3) {
    MEMORY[0x21668DB40](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 64);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x21668DB60](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *(void *)(v1 + 72);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    JUMPOUT(0x21668DB60);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 80) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::descriptor(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213608198(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_;
  if (!wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_)
  {
    wireless_diagnostics::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto(0, a2, a3, a4);
    return wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::default_instance_;
  }
  return result;
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::New(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
}

void sub_21360821C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10B1C40E36E17E1);
  _Unwind_Resume(a1);
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::Clear(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  int v1 = *((_DWORD *)this + 21);
  if ((v1 & 0x3FC) != 0)
  {
    uint64_t v2 = MEMORY[0x263F8C740];
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *((void *)this + 8);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 84) & 8) != 0)
    {
      uint64_t v4 = *((void *)this + 9);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
  }
  uint64_t v6 = *((void *)this + 1);
  uint64_t result = (wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)((char *)this + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 19) = 0;
  if (v6) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (char *)this + 40;
  uint64_t v7 = (char *)this + 16;
  uint64_t v8 = (void ***)((char *)this + 8);
  uint64_t v9 = MEMORY[0x263F8C740];
  while (2)
  {
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 != 2) {
            goto LABEL_20;
          }
          unsigned int v28 = 0;
          int v13 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
          }
            }
          else
          {
            unsigned int v28 = *v13;
            *((void *)a2 + 1) = v13 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v29 = 0;
            int v17 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
              unsigned int v18 = v29;
              }
            }
            else
            {
              unsigned int v18 = *v17;
              *((void *)a2 + 1) = v17 + 1;
            }
            int v19 = *((_DWORD *)this + 6);
            if (v19 == *((_DWORD *)this + 7))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v7, v19 + 1);
              int v19 = *((_DWORD *)this + 6);
            }
            uint64_t v20 = *((void *)this + 2);
            *((_DWORD *)this + 6) = v19 + 1;
            *(_DWORD *)(v20 + 4 * v19) = v18;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_39:
          uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          if ((unint64_t)v21 < v15 && *v21 == 18)
          {
            char v14 = v21 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_42;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(1, 0xAu, a2, (uint64_t)v7);
        if (result) {
          goto LABEL_39;
        }
        return result;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(1, 0x12u, a2, (uint64_t)v6);
          if (!result) {
            return result;
          }
LABEL_57:
          uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 < *((void *)a2 + 2) && *v26 == 26)
          {
            *((void *)a2 + 1) = v26 + 1;
LABEL_60:
            *((_DWORD *)this + 21) |= 4u;
            if (*((void *)this + 8) == v9) {
              operator new();
            }
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            BOOL v27 = (unsigned char *)*((void *)a2 + 1);
            if ((unint64_t)v27 < *((void *)a2 + 2) && *v27 == 34)
            {
              *((void *)a2 + 1) = v27 + 1;
LABEL_66:
              *((_DWORD *)this + 21) |= 8u;
              if (*((void *)this + 9) == v9) {
                operator new();
              }
              uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
              if (!result) {
                return result;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        if (v12 == 2)
        {
          char v14 = (char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
LABEL_42:
          unsigned int v28 = 0;
          if ((unint64_t)v14 >= v15 || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
          }
            }
          else
          {
            unsigned int v28 = *v14;
            *((void *)a2 + 1) = v14 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v29 = 0;
            unint64_t v22 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
              unsigned int v23 = v29;
              }
            }
            else
            {
              unsigned int v23 = *v22;
              *((void *)a2 + 1) = v22 + 1;
            }
            int v24 = *((_DWORD *)this + 12);
            if (v24 == *((_DWORD *)this + 13))
            {
              wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve((uint64_t)v6, v24 + 1);
              int v24 = *((_DWORD *)this + 12);
            }
            uint64_t v25 = *((void *)this + 5);
            *((_DWORD *)this + 12) = v24 + 1;
            *(_DWORD *)(v25 + 4 * v24) = v23;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          goto LABEL_57;
        }
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4))return 0; {
        continue;
        }
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_60;
        }
        goto LABEL_20;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_20;
        }
        goto LABEL_66;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(wireless_diagnostics::google::protobuf::internal::WireFormatLite::FieldType)5>(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a4)
{
  unsigned int v21 = 0;
  uint64_t v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
    if (!result) {
      return result;
    }
    unsigned int v8 = v21;
  }
  else
  {
    unsigned int v8 = *v7;
    *((void *)this + 1) = v7 + 1;
  }
  int v10 = *(_DWORD *)(a4 + 8);
  if (v10 == *(_DWORD *)(a4 + 12))
  {
    wireless_diagnostics::google::protobuf::RepeatedField<int>::Reserve(a4, v10 + 1);
    int v10 = *(_DWORD *)(a4 + 8);
  }
  uint64_t v11 = *(void *)a4;
  *(_DWORD *)(a4 + 8) = v10 + 1;
  *(_DWORD *)(v11 + 4 * v10) = v8;
  int v12 = *(_DWORD *)(a4 + 12) - *(_DWORD *)(a4 + 8);
  if (v12 >= 1)
  {
    int v13 = v12 + 1;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        int v17 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((int)v14 - (int)v17 < 2 || (a2 & 0x7F | 0x80) != *v17 || v17[1] != (a2 >> 7)) {
          return 1;
        }
        unint64_t v16 = (char *)(v17 + 2);
      }
      else
      {
        unint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != a2) {
          return 1;
        }
        unint64_t v16 = (char *)(v15 + 1);
      }
      *((void *)this + 1) = v16;
      unsigned int v20 = 0;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!result) {
          return result;
        }
        unsigned int v18 = v20;
        uint64_t v11 = *(void *)a4;
      }
      else
      {
        unsigned int v18 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      uint64_t v19 = *(int *)(a4 + 8);
      *(_DWORD *)(a4 + 8) = v19 + 1;
      *(_DWORD *)(v11 + 4 * v19) = v18;
      --v13;
    }
    while (v13 > 1);
  }
  return 1;
}

uint64_t **wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
      {
        if ((*(_DWORD *)(*(void *)(v4 + 16) + 4 * v5) & 0x80000000) != 0) {
          this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        }
        else {
          this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        }
        ++v5;
      }
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
      {
        if ((*(_DWORD *)(*(void *)(v4 + 40) + 4 * v6) & 0x80000000) != 0) {
          this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        }
        else {
          this = (uint64_t **)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        }
        ++v6;
      }
      while (v6 < *(int *)(v4 + 48));
    }
  }
  int v7 = *(_DWORD *)(v4 + 84);
  if ((v7 & 4) != 0)
  {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v7 = *(_DWORD *)(v4 + 84);
  }
  if ((v7 & 8) != 0) {
    this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  int v10 = *(void **)(v4 + 8);
  uint64_t v9 = (uint64_t **)(v4 + 8);
  unsigned int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((int *)this + 6) >= 1)
  {
    *(unsigned char *)a2 = 10;
    uint64_t v6 = (char *)a2 + 1;
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v7 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (uint64_t)v6, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v7;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    if (*((int *)this + 6) >= 1)
    {
      uint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 2) + 4 * v8);
        if ((v9 & 0x80000000) != 0) {
          break;
        }
        if (v9 > 0x7F)
        {
          uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)v4, a3);
          goto LABEL_12;
        }
        *(unsigned char *)uint64_t v4 = (_BYTE)v9;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
LABEL_13:
        if (++v8 >= *((int *)this + 6)) {
          goto LABEL_14;
        }
      }
      uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (uint64_t)v4, a3);
LABEL_12:
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v10;
      goto LABEL_13;
    }
  }
LABEL_14:
  if (*((int *)this + 12) > 0)
  {
    *(unsigned char *)uint64_t v4 = 18;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v11 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v11;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    if (*((int *)this + 12) >= 1)
    {
      uint64_t v12 = 0;
      while (1)
      {
        int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 5) + 4 * v12);
        if ((v13 & 0x80000000) != 0) {
          break;
        }
        if (v13 > 0x7F)
        {
          uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (uint64_t)v4, a3);
          goto LABEL_25;
        }
        *(unsigned char *)uint64_t v4 = (_BYTE)v13;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
LABEL_26:
        if (++v12 >= *((int *)this + 12)) {
          goto LABEL_27;
        }
      }
      uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, (uint64_t)v4, a3);
LABEL_25:
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v14;
      goto LABEL_26;
    }
  }
LABEL_27:
  int v15 = *((_DWORD *)this + 21);
  if ((v15 & 4) != 0)
  {
    uint64_t v16 = *((void *)this + 8);
    *(unsigned char *)uint64_t v4 = 26;
    if (*(char *)(v16 + 23) < 0) {
      int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v16 + 8);
    }
    else {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    }
    if (v17 > 0x7F)
    {
      uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v17;
      uint64_t v18 = (uint64_t)v4 + 2;
    }
    int v19 = *(char *)(v16 + 23);
    if (v19 >= 0) {
      unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
    }
    else {
      unsigned int v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
    }
    if (v19 >= 0) {
      unsigned int v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
    }
    else {
      unsigned int v21 = (const void *)*(unsigned int *)(v16 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v20, v21, v18, a4);
    int v15 = *((_DWORD *)this + 21);
  }
  if ((v15 & 8) != 0)
  {
    uint64_t v22 = *((void *)this + 9);
    *(unsigned char *)uint64_t v4 = 34;
    if (*(char *)(v22 + 23) < 0) {
      unsigned int v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v22 + 8);
    }
    else {
      unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v22 + 23);
    }
    if (v23 > 0x7F)
    {
      uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (uint64_t)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      uint64_t v24 = (uint64_t)v4 + 2;
    }
    int v25 = *(char *)(v22 + 23);
    if (v25 >= 0) {
      uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22;
    }
    else {
      uint64_t v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v22;
    }
    if (v25 >= 0) {
      BOOL v27 = (const void *)*(unsigned __int8 *)(v22 + 23);
    }
    else {
      BOOL v27 = (const void *)*(unsigned int *)(v22 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v26, v27, v24, a4);
  }
  unsigned int v30 = (void *)*((void *)this + 1);
  unsigned int v29 = (uint64_t **)((char *)this + 8);
  unsigned int v28 = v30;
  if (!v30 || *v28 == v28[1]) {
    return v4;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, v4, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::ByteSize(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *((_DWORD *)this + 21);
  if ((v3 & 0x3FC) == 0)
  {
    int v4 = 0;
    goto LABEL_24;
  }
  if ((v3 & 4) == 0)
  {
    int v4 = 0;
    if ((v3 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 8);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *((_DWORD *)this + 21);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6;
  if ((v3 & 8) != 0)
  {
LABEL_15:
    uint64_t v12 = *((void *)this + 9);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    v4 += v17 + v13 + 1;
  }
LABEL_24:
  int v18 = *((_DWORD *)this + 6);
  if (v18 < 1)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    uint64_t v19 = 0;
    LODWORD(v20) = 0;
    do
    {
      unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                             + 4 * v19);
      if ((v21 & 0x80000000) != 0)
      {
        int v22 = 10;
      }
      else if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        int v18 = *((_DWORD *)this + 6);
      }
      else
      {
        int v22 = 1;
      }
      unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + v20);
      ++v19;
    }
    while (v19 < v18);
    if ((int)v20 > 0)
    {
      if (v20 >= 0x80) {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      }
      else {
        int v23 = 2;
      }
      v4 += v23;
    }
  }
  *((_DWORD *)this + 8) = v20;
  int v24 = v4 + v20;
  int v25 = *((_DWORD *)this + 12);
  if (v25 < 1)
  {
    LODWORD(v27) = 0;
  }
  else
  {
    uint64_t v26 = 0;
    LODWORD(v27) = 0;
    do
    {
      unsigned int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                             + 4 * v26);
      if ((v28 & 0x80000000) != 0)
      {
        int v29 = 10;
      }
      else if (v28 >= 0x80)
      {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
        int v25 = *((_DWORD *)this + 12);
      }
      else
      {
        int v29 = 1;
      }
      BOOL v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v29 + v27);
      ++v26;
    }
    while (v26 < v25);
    if ((int)v27 > 0)
    {
      if (v27 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27) + 1;
      }
      else {
        int v30 = 2;
      }
      v24 += v30;
    }
  }
  unsigned int v31 = (void *)*((void *)this + 1);
  *((_DWORD *)this + 14) = v27;
  uint64_t v32 = (v24 + v27);
  if (v31 && *v31 != v31[1]) {
    uint64_t v32 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v32;
  }
  *((_DWORD *)this + 20) = v32;
  return v32;
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_213608F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    int v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    int v4 = (wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::IsInitialized(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

double wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::Swap(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this, wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    uint64_t v3 = *((void *)a2 + 3);
    *((void *)a2 + 2) = v2;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = v3;
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    double result = *((double *)a2 + 6);
    *((void *)a2 + 5) = v5;
    uint64_t v7 = *((void *)this + 6);
    *((double *)this + 6) = result;
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v8;
    uint64_t v9 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    LODWORD(v9) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v9;
    uint64_t v10 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v10;
    LODWORD(v10) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v10;
  }
  return result;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::GetMetadata(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_2136091A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::SharedCtor(uint64_t this)
{
  *(void *)(this + 40) = 0;
  return this;
}

wireless_diagnostics::google::protobuf::SourceCodeInfo *wireless_diagnostics::google::protobuf::SourceCodeInfo::SourceCodeInfo(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, const wireless_diagnostics::google::protobuf::SourceCodeInfo *a2)
{
  *(void *)this = &unk_26C3F9020;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((void *)this + 1);
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0;
  wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  return this;
}

void sub_213609234(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo::~SourceCodeInfo(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  *(void *)this = &unk_26C3F9020;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Destroy<wireless_diagnostics::google::protobuf::RepeatedPtrField<wireless_diagnostics::google::protobuf::Message>::TypeHandler>((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)this + 8));

  wireless_diagnostics::google::protobuf::Message::~Message(this);
}

{
  uint64_t vars8;

  wireless_diagnostics::google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::descriptor(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_21360939C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo::New(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
}

void sub_2136093F0(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40F1948F29);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)((char *)this + 16);
  uint64_t v7 = (void ***)((char *)this + 8);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v10 = *((_DWORD *)this + 7);
        uint64_t v11 = *((int *)this + 6);
        if ((int)v11 >= v10)
        {
          if (v10 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
            int v10 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v10 + 1;
          wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::SourceCodeInfo_Location>::New();
        }
        uint64_t v12 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v11 + 1;
        int v13 = *(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location **)(v12 + 8 * v11);
        unsigned int v25 = 0;
        char v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25))return 0; {
        }
          }
        else
        {
          unsigned int v25 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::MergePartialFromCodedStream(v13, a2, v17, v18)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v21;
        }
        int v22 = (unsigned char *)*((void *)a2 + 1);
        int v23 = (unsigned char *)*((void *)a2 + 2);
        if (v22 >= v23 || *v22 != 10)
        {
          if (v22 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v22 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if (!wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))return 0; {
  }
    }
}

uint64_t **wireless_diagnostics::google::protobuf::SourceCodeInfo::SerializeWithCachedSizes(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (uint64_t)this;
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = (uint64_t **)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (uint64_t **)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return this;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *wireless_diagnostics::google::protobuf::SourceCodeInfo::SerializeWithCachedSizesToArray(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[20];
      if (v8 > 0x7F)
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (uint64_t)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v8;
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SerializeWithCachedSizesToArray((wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *)v7, v9, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (uint64_t **)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::ByteSize(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *((unsigned int *)this + 6);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::ByteSize(*(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location **)(*((void *)this + 2) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v6 + v3 + v7);
      ++v4;
    }
    while (v4 < *((int *)this + 6));
  }
  uint64_t v8 = (void *)*((void *)this + 1);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((uint64_t **)this + 1, a2)+ v3;
  }
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (v4) {
    wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(this, v4);
  }
  else {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void sub_2136098EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

const wireless_diagnostics::google::protobuf::Message *wireless_diagnostics::google::protobuf::SourceCodeInfo::CopyFrom(const wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 32))(this);
    uint64_t v5 = *(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v4 + 112);
    return (const wireless_diagnostics::google::protobuf::Message *)v5(v4, a2);
  }
  return this;
}

void ***wireless_diagnostics::google::protobuf::SourceCodeInfo::CopyFrom(void ***this, void ***a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)this;
    ((void (*)(void ***))(*this)[4])(this);
    return wireless_diagnostics::google::protobuf::SourceCodeInfo::MergeFrom(v4, (const wireless_diagnostics::google::protobuf::SourceCodeInfo *)a2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::IsInitialized(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  return 1;
}

wireless_diagnostics::google::protobuf::SourceCodeInfo *wireless_diagnostics::google::protobuf::SourceCodeInfo::Swap(wireless_diagnostics::google::protobuf::SourceCodeInfo *this, wireless_diagnostics::google::protobuf::SourceCodeInfo *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    this = (wireless_diagnostics::google::protobuf::SourceCodeInfo *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    uint64_t v5 = *((void *)v3 + 1);
    *((void *)v3 + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::GetMetadata(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = MEMORY[0x263F8C768] + 16;
    v3[1] = wireless_diagnostics::google::protobuf::protobuf_AssignDesc_google_2fprotobuf_2fdescriptor_2eproto;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
}

void sub_213609B04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorSet::GetCachedSize(wireless_diagnostics::google::protobuf::FileDescriptorSet *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t wireless_diagnostics::google::protobuf::FileDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::FileDescriptorProto *this)
{
  return *((unsigned int *)this + 50);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize(wireless_diagnostics::google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t wireless_diagnostics::google::protobuf::DescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::DescriptorProto *this)
{
  return *((unsigned int *)this + 38);
}

uint64_t wireless_diagnostics::google::protobuf::FieldDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::FieldDescriptorProto *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t wireless_diagnostics::google::protobuf::EnumDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::EnumDescriptorProto *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::EnumValueDescriptorProto *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::ServiceDescriptorProto *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t wireless_diagnostics::google::protobuf::MethodDescriptorProto::GetCachedSize(wireless_diagnostics::google::protobuf::MethodDescriptorProto *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t wireless_diagnostics::google::protobuf::FileOptions::GetCachedSize(wireless_diagnostics::google::protobuf::FileOptions *this)
{
  return *((unsigned int *)this + 25);
}

uint64_t wireless_diagnostics::google::protobuf::MessageOptions::GetCachedSize(wireless_diagnostics::google::protobuf::MessageOptions *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t wireless_diagnostics::google::protobuf::FieldOptions::GetCachedSize(wireless_diagnostics::google::protobuf::FieldOptions *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t wireless_diagnostics::google::protobuf::EnumOptions::GetCachedSize(wireless_diagnostics::google::protobuf::EnumOptions *this)
{
  return *((unsigned int *)this + 17);
}

uint64_t wireless_diagnostics::google::protobuf::EnumValueOptions::GetCachedSize(wireless_diagnostics::google::protobuf::EnumValueOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t wireless_diagnostics::google::protobuf::ServiceOptions::GetCachedSize(wireless_diagnostics::google::protobuf::ServiceOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t wireless_diagnostics::google::protobuf::MethodOptions::GetCachedSize(wireless_diagnostics::google::protobuf::MethodOptions *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart::GetCachedSize(wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t wireless_diagnostics::google::protobuf::UninterpretedOption::GetCachedSize(wireless_diagnostics::google::protobuf::UninterpretedOption *this)
{
  return *((unsigned int *)this + 22);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::GetCachedSize(wireless_diagnostics::google::protobuf::SourceCodeInfo_Location *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t wireless_diagnostics::google::protobuf::SourceCodeInfo::GetCachedSize(wireless_diagnostics::google::protobuf::SourceCodeInfo *this)
{
  return *((unsigned int *)this + 10);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::FileDescriptorProto>::New()
{
}

void sub_213609BF8(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10B1C4063BD6257);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption>::New()
{
}

void sub_213609C5C(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40AD0F7D02);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::UninterpretedOption_NamePart>::New()
{
}

void sub_213609CC0(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10A1C40ED7A6C83);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::SourceCodeInfo_Location>::New()
{
}

void sub_213609D24(_Unwind_Exception *a1)
{
  MEMORY[0x21668DB60](v1, 0x10B1C40E36E17E1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::Message::MergeFrom(wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(a2, this, v5);
}

void sub_213609E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::Message::CheckTypeAndMergeFrom(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 112))();
}

void wireless_diagnostics::google::protobuf::Message::CopyFrom(wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    (*(void (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  wireless_diagnostics::google::protobuf::internal::ReflectionOps::Copy(a2, this, v5);
}

void sub_213609FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::Message::GetTypeName(wireless_diagnostics::google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = *(long long **)((*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this)
                    + 8);
  if (*((char *)v3 + 23) < 0)
  {
    uint64_t v5 = *(const std::string::value_type **)v3;
    std::string::size_type v6 = *((void *)v3 + 1);
    std::string::__init_copy_ctor_external(a2, v5, v6);
  }
  else
  {
    long long v4 = *v3;
    a2->__r_.__value_.__r.__words[2] = *((void *)v3 + 2);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v4;
  }
}

void wireless_diagnostics::google::protobuf::Message::FindInitializationErrors(uint64_t a1, uint64_t a2)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  wireless_diagnostics::google::protobuf::internal::ReflectionOps::FindInitializationErrors(a1, (const void **)__p, a2);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_21360A0E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::Message::InitializationErrorString(wireless_diagnostics::google::protobuf::Message *this@<X0>, void *a2@<X8>)
{
  memset(v3, 0, sizeof(v3));
  wireless_diagnostics::google::protobuf::Message::FindInitializationErrors((uint64_t)this, (uint64_t)v3);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  wireless_diagnostics::google::protobuf::JoinStrings(v3, ", ", (uint64_t)a2);
  long long v4 = (void **)v3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
}

void sub_21360A164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  if (*(char *)(v12 + 23) < 0) {
    operator delete(*(void **)v12);
  }
  a12 = (void **)&a9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::Message::CheckInitialized(wireless_diagnostics::google::protobuf::Message *this)
{
  if (((*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 40))(this) & 1) == 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this);
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    (*(void (**)(void **__return_ptr, wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 48))(&__p, this);
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    if (v3 < 0) {
      operator delete(__p);
    }
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v4);
  }
}

void sub_21360A2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a16);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::Message::MergePartialFromCodedStream(wireless_diagnostics::google::protobuf::Message *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  return wireless_diagnostics::google::protobuf::internal::WireFormat::ParseAndMergePartial(a2, this, a3);
}

uint64_t wireless_diagnostics::google::protobuf::Message::ParseFromFileDescriptor(wireless_diagnostics::google::protobuf::Message *this, uint64_t a2)
{
  MEMORY[0x21668D0A0](v5, a2, 0xFFFFFFFFLL);
  unsigned int v2 = wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream();
  if (v6) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v2;
  }
  MEMORY[0x21668D0B0](v5);
  return v3;
}

uint64_t wireless_diagnostics::google::protobuf::Message::ParsePartialFromFileDescriptor(wireless_diagnostics::google::protobuf::Message *this, uint64_t a2)
{
  MEMORY[0x21668D0A0](v5, a2, 0xFFFFFFFFLL);
  unsigned int v2 = wireless_diagnostics::google::protobuf::MessageLite::ParsePartialFromZeroCopyStream();
  if (v6) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v2;
  }
  MEMORY[0x21668D0B0](v5);
  return v3;
}

uint64_t wireless_diagnostics::google::protobuf::Message::ParseFromIstream(uint64_t a1, void *a2)
{
  MEMORY[0x21668D270](v5, a2, 0xFFFFFFFFLL);
  if (wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream()) {
    uint64_t v3 = (*((unsigned __int8 *)a2 + *(void *)(*a2 - 24) + 32) >> 1) & 1;
  }
  else {
    uint64_t v3 = 0;
  }
  MEMORY[0x21668D280](v5);
  return v3;
}

uint64_t wireless_diagnostics::google::protobuf::Message::ParsePartialFromIstream(uint64_t a1, void *a2)
{
  MEMORY[0x21668D270](v5, a2, 0xFFFFFFFFLL);
  if (wireless_diagnostics::google::protobuf::MessageLite::ParsePartialFromZeroCopyStream()) {
    uint64_t v3 = (*((unsigned __int8 *)a2 + *(void *)(*a2 - 24) + 32) >> 1) & 1;
  }
  else {
    uint64_t v3 = 0;
  }
  MEMORY[0x21668D280](v5);
  return v3;
}

void wireless_diagnostics::google::protobuf::Message::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::Message *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  long long v4 = (const wireless_diagnostics::google::protobuf::Message *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 96))(this);

  wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeWithCachedSizes(this, v4, a2, v5);
}

uint64_t wireless_diagnostics::google::protobuf::Message::ByteSize(wireless_diagnostics::google::protobuf::Message *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ByteSize(this, a2);
  (*(void (**)(wireless_diagnostics::google::protobuf::Message *, uint64_t))(*(void *)this + 136))(this, v3);
  return v3;
}

void wireless_diagnostics::google::protobuf::Message::SetCachedSize(wireless_diagnostics::google::protobuf::Message *this)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  (*(void (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this);
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v2);
}

void sub_21360A664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::Message::SpaceUsed(wireless_diagnostics::google::protobuf::Message *this)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(*(uint64_t (**)(wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 144))(this)
                           + 32);

  return v1();
}

uint64_t wireless_diagnostics::google::protobuf::Message::SerializeToFileDescriptor(wireless_diagnostics::google::protobuf::Message *this, uint64_t a2)
{
  MEMORY[0x21668D190](v4, a2, 0xFFFFFFFFLL);
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream();
  MEMORY[0x21668D1A0](v4);
  return v2;
}

uint64_t wireless_diagnostics::google::protobuf::Message::SerializePartialToFileDescriptor(wireless_diagnostics::google::protobuf::Message *this, uint64_t a2)
{
  MEMORY[0x21668D190](v4, a2, 0xFFFFFFFFLL);
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageLite::SerializePartialToZeroCopyStream();
  MEMORY[0x21668D1A0](v4);
  return v2;
}

BOOL wireless_diagnostics::google::protobuf::Message::SerializeToOstream(uint64_t a1, void *a2)
{
  MEMORY[0x21668D2B0](v5, a2, 0xFFFFFFFFLL);
  int v3 = wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream();
  MEMORY[0x21668D2C0](v5);
  return v3 && *(_DWORD *)((char *)a2 + *(void *)(*a2 - 24) + 32) == 0;
}

uint64_t wireless_diagnostics::google::protobuf::Message::SerializePartialToOstream(uint64_t a1, uint64_t a2)
{
  MEMORY[0x21668D2B0](v4, a2, 0xFFFFFFFFLL);
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageLite::SerializePartialToZeroCopyStream();
  MEMORY[0x21668D2C0](v4);
  return v2;
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<int>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 1, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<int>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 1, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<long long>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 2, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<long long>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 2, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<unsigned int>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 3, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<unsigned int>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 3, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<unsigned long long>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 4, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<unsigned long long>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 4, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<float>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 6, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<float>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 6, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<double>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 5, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<double>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 5, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::GetRepeatedField<BOOL>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 7, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRepeatedField<BOOL>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 544))(a1, a2, a3, 7, 0xFFFFFFFFLL, 0);
}

uint64_t wireless_diagnostics::google::protobuf::Reflection::MutableRawRepeatedString(wireless_diagnostics::google::protobuf::Reflection *this, wireless_diagnostics::google::protobuf::Message *a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3)
{
  return (*(uint64_t (**)(wireless_diagnostics::google::protobuf::Reflection *, wireless_diagnostics::google::protobuf::Message *, const wireless_diagnostics::google::protobuf::FieldDescriptor *, uint64_t, void, void))(*(void *)this + 544))(this, a2, a3, 9, 0, 0);
}

void *wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(wireless_diagnostics::google::protobuf::MessageFactory *this, const wireless_diagnostics::google::protobuf::Descriptor *a2, const wireless_diagnostics::google::protobuf::Message *a3)
{
  wireless_diagnostics::google::protobuf::internal::Mutex::AssertHeld((wireless_diagnostics::google::protobuf::internal::Mutex *)(v5 + 48));
  *(void *)&long long v7 = this;
  *((void *)&v7 + 1) = a2;
  return std::__hash_table<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,std::__unordered_map_hasher<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,std::pair<wireless_diagnostics::google::protobuf::Descriptor const* const,wireless_diagnostics::google::protobuf::Message const*>>(v5 + 56, (unint64_t *)&v7, &v7);
}

uint64_t wireless_diagnostics::google::protobuf::anonymous namespace'::ShutdownGeneratedMessageFactory(wireless_diagnostics::google::protobuf::_anonymous_namespace_ *this)
{
                                + 8))();
  return result;
}

void wireless_diagnostics::google::protobuf::anonymous namespace'::GeneratedMessageFactory::~GeneratedMessageFactory(wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this)
{
  *(void *)this = &unk_26C3F8CE8;
  uint64_t v2 = (char *)this + 8;
  std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table((uint64_t)this + 56);
  MEMORY[0x21668D7D0]((char *)this + 48);
  std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::~__hash_table((uint64_t)v2);
}

{
  uint64_t vars8;

  JUMPOUT(0x21668DB60);
}

uint64_t wireless_diagnostics::google::protobuf::anonymous namespace'::GeneratedMessageFactory::GetPrototype(wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *this, const wireless_diagnostics::google::protobuf::Descriptor *a2)
{
  int v16 = a2;
  int v3 = (wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)((char *)this + 48);
  wireless_diagnostics::google::protobuf::internal::Mutex::Lock((wireless_diagnostics::google::protobuf::_anonymous_namespace_::GeneratedMessageFactory *)((char *)this + 48));
  long long v4 = (void *)((char *)this + 56);
  uint64_t v5 = std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::find<wireless_diagnostics::google::protobuf::Descriptor const*>((void *)this + 7, (unint64_t *)&v16);
  if (v5) {
    uint64_t v6 = v5[3];
  }
  else {
    uint64_t v6 = 0;
  }
  long long v7 = (wireless_diagnostics::google::protobuf::DescriptorPool *)wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v3);
  if (v6) {
    return v6;
  }
  uint64_t v8 = *(void *)(*((void *)v16 + 2) + 16);
  if (v8 != wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v7)) {
    return 0;
  }
  uint64_t v9 = (const char *)**((void **)v16 + 2);
  if (v9[23] < 0) {
    uint64_t v9 = *(const char **)v9;
  }
  v15[0] = v9;
  int v10 = std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::find<char const*>((void *)this + 1, v15);
  if (!v10 || (uint64_t v11 = v10[3]) == 0)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
    return 0;
  }
  wireless_diagnostics::google::protobuf::internal::Mutex::Lock(v3);
  uint64_t v12 = std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::find<wireless_diagnostics::google::protobuf::Descriptor const*>(v4, (unint64_t *)&v16);
  if (!v12 || (uint64_t v6 = v12[3]) == 0)
  {
    ((void (*)(void))v11)(**((void **)v16 + 2));
    int v13 = std::__hash_table<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,std::allocator<wireless_diagnostics::google::protobuf::Descriptor const*>>::find<wireless_diagnostics::google::protobuf::Descriptor const*>(v4, (unint64_t *)&v16);
    if (!v13 || (uint64_t v6 = v13[3]) == 0)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
      uint64_t v6 = 0;
    }
  }
  wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v3);
  return v6;
}

void sub_21360AEF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(v2);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,std::__unordered_map_hasher<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<wireless_diagnostics::google::protobuf::Descriptor const*,std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>,std::equal_to<wireless_diagnostics::google::protobuf::Descriptor const*>,wireless_diagnostics::google::protobuf::hash<wireless_diagnostics::google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<wireless_diagnostics::google::protobuf::Descriptor const*,wireless_diagnostics::google::protobuf::Message const*>>>::__emplace_unique_key_args<wireless_diagnostics::google::protobuf::Descriptor const*,std::pair<wireless_diagnostics::google::protobuf::Descriptor const* const,wireless_diagnostics::google::protobuf::Message const*>>(uint64_t a1, unint64_t *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint64_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    std::__hash_table<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::hash<char const*>,wireless_diagnostics::google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>,wireless_diagnostics::google::protobuf::streq,wireless_diagnostics::google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,wireless_diagnostics::google::protobuf::FileDescriptor const*>>>::__rehash<true>(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  int v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t i = *v19;
LABEL_38:
    *int v19 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v20 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    int v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_21360B158(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void wireless_diagnostics::google::protobuf::internal::ExtensionSet::AppendToList(void *a1, const wireless_diagnostics::google::protobuf::Descriptor *a2, wireless_diagnostics::google::protobuf::internal::Mutex **a3, void **a4)
{
  long long v4 = a1 + 1;
  uint64_t v5 = (void *)*a1;
  if ((void *)*a1 != a1 + 1)
  {
    uint64_t v9 = (uint64_t)(a4 + 2);
    while (!*((unsigned char *)v5 + 49))
    {
      if ((*((unsigned char *)v5 + 50) & 1) == 0) {
        goto LABEL_7;
      }
LABEL_39:
      uint64_t v32 = (void *)v5[1];
      if (v32)
      {
        do
        {
          int v33 = v32;
          uint64_t v32 = (void *)*v32;
        }
        while (v32);
      }
      else
      {
        do
        {
          int v33 = (void *)v5[2];
          BOOL v34 = *v33 == (void)v5;
          uint64_t v5 = v33;
        }
        while (!v34);
      }
      uint64_t v5 = v33;
      if (v33 == v4) {
        return;
      }
    }
    if ((int)wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::GetSize((wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension *)(v5 + 5)) <= 0) {
      goto LABEL_39;
    }
LABEL_7:
    uint64_t v10 = v5[7];
    if (v10)
    {
      float v12 = a4[1];
      unint64_t v11 = (unint64_t)a4[2];
      if ((unint64_t)v12 < v11)
      {
        *float v12 = v10;
        float v13 = v12 + 1;
LABEL_38:
        a4[1] = v13;
        goto LABEL_39;
      }
      uint64_t v18 = ((char *)v12 - (unsigned char *)*a4) >> 3;
      if ((unint64_t)(v18 + 1) >> 61) {
        goto LABEL_46;
      }
      uint64_t v19 = v11 - (void)*a4;
      uint64_t v20 = v19 >> 2;
      if (v19 >> 2 <= (unint64_t)(v18 + 1)) {
        uint64_t v20 = v18 + 1;
      }
      if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v21 = v20;
      }
      if (v21)
      {
        int v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>(v9, v21);
        uint64_t v10 = v5[7];
      }
      else
      {
        int v22 = 0;
      }
      uint64_t v26 = &v22[8 * v18];
      *(void *)uint64_t v26 = v10;
      float v13 = v26 + 8;
      unsigned int v28 = (char *)*a4;
      BOOL v27 = (char *)a4[1];
      if (v27 != *a4)
      {
        do
        {
          uint64_t v29 = *((void *)v27 - 1);
          v27 -= 8;
          *((void *)v26 - 1) = v29;
          v26 -= 8;
        }
        while (v27 != v28);
LABEL_35:
        BOOL v27 = (char *)*a4;
      }
    }
    else
    {
      uint64_t ExtensionByNumber = wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(a3, a2, *((unsigned int *)v5 + 8));
      uint64_t v15 = ExtensionByNumber;
      size_t v17 = (uint64_t *)a4[1];
      unint64_t v16 = (unint64_t)a4[2];
      if ((unint64_t)v17 < v16)
      {
        *size_t v17 = ExtensionByNumber;
        float v13 = v17 + 1;
        goto LABEL_38;
      }
      uint64_t v23 = ((char *)v17 - (unsigned char *)*a4) >> 3;
      if ((unint64_t)(v23 + 1) >> 61) {
LABEL_46:
      }
        std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
      uint64_t v24 = v16 - (void)*a4;
      uint64_t v25 = v24 >> 2;
      if (v24 >> 2 <= (unint64_t)(v23 + 1)) {
        uint64_t v25 = v23 + 1;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v21 = v25;
      }
      if (v21) {
        int v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>(v9, v21);
      }
      else {
        int v22 = 0;
      }
      uint64_t v26 = &v22[8 * v23];
      *(void *)uint64_t v26 = v15;
      float v13 = v26 + 8;
      int v30 = (char *)*a4;
      BOOL v27 = (char *)a4[1];
      if (v27 != *a4)
      {
        do
        {
          uint64_t v31 = *((void *)v27 - 1);
          v27 -= 8;
          *((void *)v26 - 1) = v31;
          v26 -= 8;
        }
        while (v27 != v30);
        goto LABEL_35;
      }
    }
    *a4 = v26;
    a4[1] = v13;
    a4[2] = &v22[8 * v21];
    if (v27) {
      operator delete(v27);
    }
    goto LABEL_38;
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetMessage(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, int a2, const wireless_diagnostics::google::protobuf::Descriptor *a3, wireless_diagnostics::google::protobuf::MessageFactory *a4)
{
  unint64_t v6 = (char *)*((void *)this + 1);
  long long v4 = (char *)this + 8;
  uint64_t v5 = v6;
  if (!v6) {
    goto LABEL_14;
  }
  unint64_t v7 = v4;
  do
  {
    int v8 = *((_DWORD *)v5 + 8);
    BOOL v9 = v8 < a2;
    if (v8 >= a2) {
      uint64_t v10 = (char **)v5;
    }
    else {
      uint64_t v10 = (char **)(v5 + 8);
    }
    if (!v9) {
      unint64_t v7 = v5;
    }
    uint64_t v5 = *v10;
  }
  while (*v10);
  if (v7 == v4 || *((_DWORD *)v7 + 8) > a2 || (v7[50] & 1) != 0)
  {
LABEL_14:
    float v13 = *(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, const wireless_diagnostics::google::protobuf::Descriptor *))(*(void *)a4 + 16);
    return v13(a4, a3);
  }
  else
  {
    uint64_t v11 = *((void *)v7 + 5);
    if ((v7[50] & 0x10) != 0)
    {
      uint64_t v14 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, const wireless_diagnostics::google::protobuf::Descriptor *))(*(void *)a4 + 16))(a4, a3);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v11 + 24);
      return v15(v11, v14);
    }
    else
    {
      return *((void *)v7 + 5);
    }
  }
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableMessage(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::MessageFactory *a3)
{
  uint64_t v14 = 0;
  if (wireless_diagnostics::google::protobuf::internal::ExtensionSet::MaybeNewExtension(this, *((unsigned int *)a2 + 10), a2, &v14))
  {
    uint64_t v5 = v14;
    *((unsigned char *)v14 + 8) = *((_DWORD *)a2 + 11);
    *((unsigned char *)v5 + 9) = 0;
    *((unsigned char *)v5 + 11) = 0;
    uint64_t v6 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, void))(*(void *)a3 + 16))(a3, *((void *)a2 + 9));
    *((unsigned char *)v14 + 10) &= 0xFu;
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
    *(void *)uint64_t v14 = v7;
    int v8 = v14;
    *((unsigned char *)v14 + 10) &= 0xF0u;
    return *(void *)v8;
  }
  else
  {
    uint64_t v10 = v14;
    char v11 = *((unsigned char *)v14 + 10);
    *((unsigned char *)v14 + 10) = v11 & 0xF0;
    uint64_t v9 = *(void *)v10;
    if ((v11 & 0x10) != 0)
    {
      uint64_t v12 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, void))(*(void *)a3 + 16))(a3, *((void *)a2 + 9));
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 32))(v9, v12);
    }
  }
  return v9;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ReleaseMessage(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::MessageFactory *a3)
{
  unint64_t v3 = (char *)*((void *)this + 1);
  if (!v3) {
    return 0;
  }
  int v6 = *((_DWORD *)a2 + 10);
  uint64_t v7 = (char *)this + 8;
  do
  {
    int v8 = *((_DWORD *)v3 + 8);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      uint64_t v10 = (char **)v3;
    }
    else {
      uint64_t v10 = (char **)(v3 + 8);
    }
    if (!v9) {
      uint64_t v7 = v3;
    }
    unint64_t v3 = *v10;
  }
  while (*v10);
  if (v7 == (char *)this + 8 || v6 < *((_DWORD *)v7 + 8)) {
    return 0;
  }
  uint64_t v11 = *((void *)v7 + 5);
  if ((v7[50] & 0x10) != 0)
  {
    uint64_t v13 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, void))(*(void *)a3 + 16))(a3, *((void *)a2 + 9));
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v11 + 48))(v11, v13);
    uint64_t v14 = *((void *)v7 + 5);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
  }
  int v15 = *((_DWORD *)a2 + 10);
  std::__tree<std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>((uint64_t)this, &v15);
  return v11;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::AddMessage(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, const wireless_diagnostics::google::protobuf::FieldDescriptor *a2, wireless_diagnostics::google::protobuf::MessageFactory *a3)
{
  uint64_t v14 = 0;
  if (wireless_diagnostics::google::protobuf::internal::ExtensionSet::MaybeNewExtension(this, *((unsigned int *)a2 + 10), a2, &v14))
  {
    uint64_t v5 = v14;
    *((unsigned char *)v14 + 8) = *((_DWORD *)a2 + 11);
    *((unsigned char *)v5 + 9) = 1;
    operator new();
  }
  int v6 = v14;
  uint64_t v7 = *(void *)v14;
  int v8 = *(_DWORD *)(*(void *)v14 + 8);
  if (v8 < *(_DWORD *)(*(void *)v14 + 12))
  {
    BOOL v9 = *(uint64_t **)v7;
    *(_DWORD *)(v7 + 8) = v8 + 1;
    uint64_t v10 = v9[v8];
    if (v10) {
      return v10;
    }
    uint64_t v7 = *(void *)v6;
    int v8 = *(_DWORD *)(*(void *)v6 + 8);
  }
  if (v8)
  {
    uint64_t v11 = **(void **)v7;
  }
  else
  {
    uint64_t v11 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageFactory *, void))(*(void *)a3 + 16))(a3, *((void *)a2 + 9));
    if (!v11)
    {
      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
      uint64_t v11 = 0;
    }
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 24))(v11);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::AddAllocated<wireless_diagnostics::google::protobuf::internal::GenericTypeHandler<wireless_diagnostics::google::protobuf::Message>>(*(int **)v14, v10);
  return v10;
}

void sub_21360B894(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::internal::DescriptorPoolExtensionFinder::Find(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ExtensionByNumber = wireless_diagnostics::google::protobuf::DescriptorPool::FindExtensionByNumber(*(wireless_diagnostics::google::protobuf::internal::Mutex ***)(a1 + 8), *(const wireless_diagnostics::google::protobuf::Descriptor **)(a1 + 24), a2);
  uint64_t v6 = ExtensionByNumber;
  if (ExtensionByNumber)
  {
    uint64_t v7 = *(unsigned int *)(ExtensionByNumber + 44);
    *(unsigned char *)a3 = v7;
    *(unsigned char *)(a3 + 1) = *(_DWORD *)(ExtensionByNumber + 48) == 3;
    *(unsigned char *)(a3 + 2) = *(unsigned char *)(*(void *)(ExtensionByNumber + 96) + 44);
    *(void *)(a3 + 24) = ExtensionByNumber;
    int v8 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v7];
    if (v8 == 8)
    {
      *(void *)(a3 + 8) = wireless_diagnostics::google::protobuf::internal::ValidateEnumUsingDescriptor;
      *(void *)(a3 + 16) = *(void *)(ExtensionByNumber + 80);
    }
    else if (v8 == 10)
    {
      uint64_t v9 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 16) + 16))(*(void *)(a1 + 16), *(void *)(ExtensionByNumber + 72));
      *(void *)(a3 + 8) = v9;
      if (!v9)
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
      }
    }
  }
  return v6 != 0;
}

void sub_21360B9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

BOOL wireless_diagnostics::google::protobuf::internal::ValidateEnumUsingDescriptor(wireless_diagnostics::google::protobuf::internal *this, const void *a2)
{
  return wireless_diagnostics::google::protobuf::EnumDescriptor::FindValueByNumber(this, (int)a2) != 0;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *a3, const wireless_diagnostics::google::protobuf::Message *a4, wireless_diagnostics::google::protobuf::UnknownFieldSet *a5)
{
  uint64_t v14 = &unk_26C3F9E68;
  int v15 = a5;
  uint64_t v5 = (const wireless_diagnostics::google::protobuf::Message *)*((void *)a3 + 8);
  if (v5)
  {
    uint64_t v6 = *((void *)a3 + 9);
    uint64_t v7 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a4 + 152))(a4);
    uint64_t v10 = &unk_26C3F9EA0;
    uint64_t v11 = v5;
    uint64_t v12 = v6;
    uint64_t v13 = v7;
  }
  else
  {
    uint64_t v10 = (void *)(MEMORY[0x263F8C770] + 16);
    uint64_t v11 = a4;
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField();
  wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder((wireless_diagnostics::google::protobuf::internal::ExtensionFinder *)&v10);
  return v8;
}

void sub_21360BB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, const wireless_diagnostics::google::protobuf::Message *a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v5 = (int)this;
  v16[0] = &unk_26C3F9E68;
  v16[1] = a4;
  uint64_t v6 = (const wireless_diagnostics::google::protobuf::Message *)*((void *)a2 + 8);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 9);
    uint64_t v8 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a3 + 152))(a3);
    uint64_t v12 = &unk_26C3F9EA0;
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    uint64_t v15 = v8;
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet(v5, a2, (uint64_t)&v12, (uint64_t)v16);
  }
  else
  {
    uint64_t v12 = (void *)(MEMORY[0x263F8C770] + 16);
    uint64_t v13 = a3;
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet((int)this, a2, (uint64_t)&v12, (uint64_t)v16);
  }
  uint64_t v10 = v9;
  wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder((wireless_diagnostics::google::protobuf::internal::ExtensionFinder *)&v12);
  return v10;
}

void sub_21360BC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet(int a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, uint64_t a4)
{
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        int TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        int TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
      }
      if (TagFallback != 11) {
        break;
      }
      if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSetItem(a1, this, a3, a4) & 1) == 0) {
        return 0;
      }
    }
    if (!TagFallback) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField() & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelf(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  uint64_t v1 = (32 * *((_DWORD *)this + 4));
  uint64_t v2 = *(uint64_t ***)this;
  unint64_t v3 = (uint64_t **)((char *)this + 8);
  if (*(wireless_diagnostics::google::protobuf::internal::ExtensionSet **)this != (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)((char *)this + 8))
  {
    do
    {
      int v4 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelf(v2 + 5);
      int v5 = v2[1];
      if (v5)
      {
        do
        {
          uint64_t v6 = (uint64_t **)v5;
          int v5 = (uint64_t *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (uint64_t **)v2[2];
          BOOL v7 = *v6 == (uint64_t *)v2;
          uint64_t v2 = v6;
        }
        while (!v7);
      }
      uint64_t v1 = (v4 + v1);
      uint64_t v2 = v6;
    }
    while (v6 != v3);
  }
  return v1;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelf(uint64_t **this)
{
  int v1 = wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((unsigned char *)this + 9))
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        if (!**this) {
          goto LABEL_21;
        }
        int v2 = 8 * *((_DWORD *)*this + 3);
        goto LABEL_20;
      case 2:
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        if (!**this) {
          goto LABEL_21;
        }
        int v2 = 4 * *((_DWORD *)*this + 3);
        goto LABEL_20;
      case 8:
        if (**this)
        {
          int v2 = *((_DWORD *)*this + 3);
LABEL_20:
          uint64_t result = (v2 + 16);
        }
        else
        {
LABEL_21:
          uint64_t result = 16;
        }
        break;
      case 9:
      case 0xC:
        uint64_t v6 = *this;
        if (**this) {
          int v7 = 8 * *((_DWORD *)v6 + 4);
        }
        else {
          int v7 = 0;
        }
        if (*((int *)v6 + 3) >= 1)
        {
          uint64_t v9 = 0;
          do
            v7 += wireless_diagnostics::google::protobuf::internal::StringSpaceUsedExcludingSelf(*(void *)(*v6 + 8 * v9++))
                + 24;
          while (v9 < *((int *)v6 + 3));
        }
        goto LABEL_35;
      case 0xA:
      case 0xB:
        uint64_t v8 = *this;
        if (**this) {
          int v7 = 8 * *((_DWORD *)v8 + 4);
        }
        else {
          int v7 = 0;
        }
        if (*((int *)v8 + 3) >= 1)
        {
          uint64_t v10 = 0;
          do
          {
            v7 += (*(uint64_t (**)(void))(**(void **)(*v8 + 8 * v10) + 128))(*(void *)(*v8 + 8 * v10));
            ++v10;
          }
          while (v10 < *((int *)v8 + 3));
        }
LABEL_35:
        uint64_t result = (v7 + 24);
        break;
      default:
        return 0;
    }
  }
  else if (v1 == 10)
  {
    uint64_t v4 = **this;
    if ((*((unsigned char *)this + 10) & 0x10) != 0)
    {
      int v5 = *(uint64_t (**)(void))(v4 + 72);
    }
    else
    {
      int v5 = *(uint64_t (**)(void))(v4 + 128);
    }
    return v5();
  }
  else if (v1 == 9)
  {
    return wireless_diagnostics::google::protobuf::internal::StringSpaceUsedExcludingSelf((unint64_t)*this)
         + 24;
  }
  else
  {
    return 0;
  }
  return result;
}

unsigned __int8 *wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeFieldWithCachedSizesToArray(wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension *this, int a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a3;
  if (*((unsigned char *)this + 9))
  {
    if (*((unsigned char *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
        if (v6 > 0x7F)
        {
          if (v6 >> 14)
          {
            int v7 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (uint64_t)a3, a3);
          }
          else
          {
            *a3 = (8 * a2) | 0x82;
            a3[1] = (8 * a2) >> 7;
            int v7 = a3 + 2;
          }
        }
        else
        {
          *a3 = (8 * a2) | 2;
          int v7 = a3 + 1;
        }
        uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 3);
        if ((v18 & 0x80000000) != 0)
        {
          uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, (uint64_t)v7, a3);
        }
        else
        {
          if (v18 <= 0x7F)
          {
            *int v7 = v18;
            uint64_t v4 = v7 + 1;
            goto LABEL_29;
          }
          uint64_t v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (uint64_t)v7, a3);
        }
        uint64_t v4 = (unsigned __int8 *)v19;
LABEL_29:
        switch(*((unsigned char *)this + 8))
        {
          case 1:
            int v44 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v45 = 0;
              do
              {
                *(void *)uint64_t v4 = *(void *)(*v44 + 8 * v45);
                v4 += 8;
                ++v45;
                int v44 = *(void **)this;
              }
              while (v45 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 2:
            uint64_t v46 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v47 = 0;
              do
              {
                *(_DWORD *)uint64_t v4 = *(_DWORD *)(*v46 + 4 * v47);
                v4 += 4;
                ++v47;
                uint64_t v46 = *(void **)this;
              }
              while (v47 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 3:
            int v48 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v49 = 0;
              do
              {
                uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*v48 + 8 * v49++), (uint64_t)v4, a3);
                int v48 = *(void **)this;
              }
              while (v49 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 4:
            int v50 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v51 = 0;
              do
              {
                uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*v50 + 8 * v51++), (uint64_t)v4, a3);
                int v50 = *(void **)this;
              }
              while (v51 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 5:
            uint64_t v32 = *(void **)this;
            if (*(int *)(*(void *)this + 8) < 1) {
              return v4;
            }
            uint64_t v33 = 0;
            while (1)
            {
              BOOL v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*v32 + 4 * v33);
              if ((v34 & 0x80000000) != 0) {
                break;
              }
              if (v34 > 0x7F)
              {
                uint64_t v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (uint64_t)v4, a3);
                goto LABEL_50;
              }
              *v4++ = v34;
LABEL_51:
              ++v33;
              uint64_t v32 = *(void **)this;
              if (v33 >= *(int *)(*(void *)this + 8)) {
                return v4;
              }
            }
            uint64_t v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v34, (uint64_t)v4, a3);
LABEL_50:
            uint64_t v4 = (unsigned __int8 *)v35;
            goto LABEL_51;
          case 6:
            uint64_t v52 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v53 = 0;
              do
              {
                *(void *)uint64_t v4 = *(void *)(*v52 + 8 * v53);
                v4 += 8;
                ++v53;
                uint64_t v52 = *(void **)this;
              }
              while (v53 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 7:
            int v54 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v55 = 0;
              do
              {
                *(_DWORD *)uint64_t v4 = *(_DWORD *)(*v54 + 4 * v55);
                v4 += 4;
                ++v55;
                int v54 = *(void **)this;
              }
              while (v55 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 8:
            int v56 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v57 = 0;
              do
              {
                v4[v57] = *(unsigned char *)(*v56 + v57);
                ++v57;
                int v56 = *(void **)this;
              }
              while (v57 < *(int *)(*(void *)this + 8));
              v4 += v57;
            }
            return v4;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v224);
            return v4;
          case 0xD:
            unsigned int v36 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v37 = 0;
              do
              {
                int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*v36 + 4 * v37);
                if (v38 > 0x7F) {
                  uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (uint64_t)v4, a3);
                }
                else {
                  *v4++ = v38;
                }
                ++v37;
                unsigned int v36 = *(void **)this;
              }
              while (v37 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 0xE:
            uint64_t v58 = *(void **)this;
            if (*(int *)(*(void *)this + 8) < 1) {
              return v4;
            }
            uint64_t v59 = 0;
            break;
          case 0xF:
            int v39 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v40 = 0;
              do
              {
                *(_DWORD *)uint64_t v4 = *(_DWORD *)(*v39 + 4 * v40);
                v4 += 4;
                ++v40;
                int v39 = *(void **)this;
              }
              while (v40 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 0x10:
            int v62 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v63 = 0;
              do
              {
                *(void *)uint64_t v4 = *(void *)(*v62 + 8 * v63);
                v4 += 8;
                ++v63;
                int v62 = *(void **)this;
              }
              while (v63 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 0x11:
            unsigned __int8 v41 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v42 = 0;
              do
              {
                unsigned __int8 v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(*v41 + 4 * v42)) ^ (*(int *)(*v41 + 4 * v42) >> 31));
                if (v43 > 0x7F) {
                  uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (uint64_t)v4, a3);
                }
                else {
                  *v4++ = (2 * *(unsigned char *)(*v41 + 4 * v42)) ^ (*(int *)(*v41 + 4 * v42) >> 31);
                }
                ++v42;
                unsigned __int8 v41 = *(void **)this;
              }
              while (v42 < *(int *)(*(void *)this + 8));
            }
            return v4;
          case 0x12:
            uint64_t v64 = *(void **)this;
            if (*(int *)(*(void *)this + 8) >= 1)
            {
              uint64_t v65 = 0;
              do
              {
                uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(void *)(*v64 + 8 * v65)) ^ (*(uint64_t *)(*v64 + 8 * v65) >> 63)), (uint64_t)v4, a3);
                ++v65;
                uint64_t v64 = *(void **)this;
              }
              while (v65 < *(int *)(*(void *)this + 8));
            }
            return v4;
          default:
            return v4;
        }
        while (1)
        {
          int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*v58 + 4 * v59);
          if ((v60 & 0x80000000) != 0) {
            break;
          }
          if (v60 > 0x7F)
          {
            uint64_t v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v60, (uint64_t)v4, a3);
            goto LABEL_106;
          }
          *v4++ = v60;
LABEL_107:
          ++v59;
          uint64_t v58 = *(void **)this;
          if (v59 >= *(int *)(*(void *)this + 8)) {
            return v4;
          }
        }
        uint64_t v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v60, (uint64_t)v4, a3);
LABEL_106:
        uint64_t v4 = (unsigned __int8 *)v61;
        goto LABEL_107;
      }
      return v4;
    }
    switch(*((unsigned char *)this + 8))
    {
      case 1:
        uint64_t v11 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v12 = 0;
          uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 1u);
          unsigned __int8 v14 = (8 * a2) | 0x81;
          unsigned int v15 = (8 * a2) >> 7;
          do
          {
            uint64_t v16 = *(void *)(*v11 + 8 * v12);
            if (v13 > 0x7F)
            {
              if (v13 >> 14)
              {
                size_t v17 = (void *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v14;
                v4[1] = v15;
                size_t v17 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v13;
              size_t v17 = v4 + 1;
            }
            *size_t v17 = v16;
            uint64_t v4 = (unsigned __int8 *)(v17 + 1);
            ++v12;
            uint64_t v11 = *(void **)this;
          }
          while (v12 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 2:
        int v66 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v67 = 0;
          uint64_t v68 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 5u);
          unsigned __int8 v69 = (8 * a2) | 0x85;
          unsigned int v70 = (8 * a2) >> 7;
          do
          {
            int v71 = *(_DWORD *)(*v66 + 4 * v67);
            if (v68 > 0x7F)
            {
              if (v68 >> 14)
              {
                uint64_t v72 = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v68, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v69;
                v4[1] = v70;
                uint64_t v72 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v68;
              uint64_t v72 = v4 + 1;
            }
            _DWORD *v72 = v71;
            uint64_t v4 = (unsigned __int8 *)(v72 + 1);
            ++v67;
            int v66 = *(void **)this;
          }
          while (v67 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 3:
        uint64_t v73 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v74 = 0;
          uint64_t v75 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v76 = (8 * a2) | 0x80;
          do
          {
            uint64_t v77 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*v73 + 8 * v74);
            if (v75 > 0x7F)
            {
              if (v75 >> 14)
              {
                uint64_t v78 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v75, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v76;
                v4[1] = v75 >> 7;
                uint64_t v78 = (uint64_t)(v4 + 2);
              }
            }
            else
            {
              *uint64_t v4 = v75;
              uint64_t v78 = (uint64_t)(v4 + 1);
            }
            uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v77, v78, a3);
            ++v74;
            uint64_t v73 = *(void **)this;
          }
          while (v74 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 4:
        uint64_t v79 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v80 = 0;
          uint64_t v81 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v82 = (8 * a2) | 0x80;
          do
          {
            long long v83 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*v79 + 8 * v80);
            if (v81 > 0x7F)
            {
              if (v81 >> 14)
              {
                uint64_t v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v81, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v82;
                v4[1] = v81 >> 7;
                uint64_t v84 = (uint64_t)(v4 + 2);
              }
            }
            else
            {
              *uint64_t v4 = v81;
              uint64_t v84 = (uint64_t)(v4 + 1);
            }
            uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v83, v84, a3);
            ++v80;
            uint64_t v79 = *(void **)this;
          }
          while (v80 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 5:
        std::string v85 = *(void **)this;
        if (*(int *)(*(void *)this + 8) < 1) {
          return v4;
        }
        uint64_t v86 = 0;
        std::string v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
        unsigned __int8 v88 = (8 * a2) | 0x80;
        while (1)
        {
          std::string v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*v85 + 4 * v86);
          if (v87 > 0x7F)
          {
            if (v87 >> 14)
            {
              std::string v90 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v87, (uint64_t)v4, a3);
              if ((v89 & 0x80000000) != 0)
              {
LABEL_155:
                uint64_t v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v89, (uint64_t)v90, a3);
                goto LABEL_156;
              }
            }
            else
            {
              *uint64_t v4 = v88;
              v4[1] = v87 >> 7;
              std::string v90 = v4 + 2;
              if ((v89 & 0x80000000) != 0) {
                goto LABEL_155;
              }
            }
          }
          else
          {
            *uint64_t v4 = v87;
            std::string v90 = v4 + 1;
            if ((v89 & 0x80000000) != 0) {
              goto LABEL_155;
            }
          }
          if (v89 > 0x7F)
          {
            uint64_t v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v89, (uint64_t)v90, a3);
LABEL_156:
            uint64_t v4 = (unsigned __int8 *)v91;
            goto LABEL_157;
          }
          *std::string v90 = (_BYTE)v89;
          uint64_t v4 = v90 + 1;
LABEL_157:
          ++v86;
          std::string v85 = *(void **)this;
          if (v86 >= *(int *)(*(void *)this + 8)) {
            return v4;
          }
        }
      case 6:
        int v92 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v93 = 0;
          int v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 1u);
          unsigned __int8 v95 = (8 * a2) | 0x81;
          unsigned int v96 = (8 * a2) >> 7;
          do
          {
            uint64_t v97 = *(void *)(*v92 + 8 * v93);
            if (v94 > 0x7F)
            {
              if (v94 >> 14)
              {
                int v98 = (void *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v94, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v95;
                v4[1] = v96;
                int v98 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v94;
              int v98 = v4 + 1;
            }
            *int v98 = v97;
            uint64_t v4 = (unsigned __int8 *)(v98 + 1);
            ++v93;
            int v92 = *(void **)this;
          }
          while (v93 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 7:
        uint64_t v99 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v100 = 0;
          std::string v101 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 5u);
          unsigned __int8 v102 = (8 * a2) | 0x85;
          unsigned int v103 = (8 * a2) >> 7;
          do
          {
            int v104 = *(_DWORD *)(*v99 + 4 * v100);
            if (v101 > 0x7F)
            {
              if (v101 >> 14)
              {
                std::string::size_type v105 = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v101, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v102;
                v4[1] = v103;
                std::string::size_type v105 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v101;
              std::string::size_type v105 = v4 + 1;
            }
            _DWORD *v105 = v104;
            uint64_t v4 = (unsigned __int8 *)(v105 + 1);
            ++v100;
            uint64_t v99 = *(void **)this;
          }
          while (v100 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 8:
        uint64_t v106 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v107 = 0;
          uint64_t v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v109 = (8 * a2) | 0x80;
          do
          {
            char v110 = *(unsigned char *)(*v106 + v107);
            if (v108 > 0x7F)
            {
              if (v108 >> 14)
              {
                int v111 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v108, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v109;
                v4[1] = v108 >> 7;
                int v111 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v108;
              int v111 = v4 + 1;
            }
            *int v111 = v110;
            uint64_t v4 = v111 + 1;
            ++v107;
            uint64_t v106 = *(void **)this;
          }
          while (v107 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 9:
        v112 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v113 = 0;
          unsigned int v114 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
          unsigned __int8 v115 = (8 * a2) | 0x82;
          unsigned int v116 = (8 * a2) >> 7;
          do
          {
            uint64_t v117 = *(void *)(*v112 + 8 * v113);
            if (v114 > 0x7F)
            {
              if (v114 >> 14)
              {
                v118 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v114, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v115;
                v4[1] = v116;
                v118 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v114;
              v118 = v4 + 1;
            }
            if (*(char *)(v117 + 23) < 0) {
              v119 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v117 + 8);
            }
            else {
              v119 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v117 + 23);
            }
            if (v119 > 0x7F)
            {
              uint64_t v120 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v119, (uint64_t)v118, a3);
            }
            else
            {
              unsigned char *v118 = (_BYTE)v119;
              uint64_t v120 = (uint64_t)(v118 + 1);
            }
            int v121 = *(char *)(v117 + 23);
            if (v121 >= 0) {
              v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v117;
            }
            else {
              v122 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v117;
            }
            if (v121 >= 0) {
              v123 = (const void *)*(unsigned __int8 *)(v117 + 23);
            }
            else {
              v123 = (const void *)*(unsigned int *)(v117 + 8);
            }
            uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v122, v123, v120, a4);
            ++v113;
            v112 = *(void **)this;
          }
          while (v113 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0xA:
        v124 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v125 = 0;
          v126 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 3u);
          unsigned __int8 v223 = (8 * a2) | 0x83;
          v127 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 4u);
          unsigned int v128 = (8 * a2) >> 7;
          char v129 = (8 * a2) | 0x84;
          do
          {
            uint64_t v130 = *(void *)(*v124 + 8 * v125);
            if (v126 > 0x7F)
            {
              if (v126 >> 14)
              {
                uint64_t v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v126, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v223;
                v4[1] = v128;
                uint64_t v131 = (uint64_t)(v4 + 2);
              }
            }
            else
            {
              *uint64_t v4 = v126;
              uint64_t v131 = (uint64_t)(v4 + 1);
            }
            v132 = (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v130 + 88))(v130, v131);
            if (v127 > 0x7F)
            {
              if (v127 >> 14)
              {
                uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v127, (uint64_t)v132, a3);
              }
              else
              {
                unsigned char *v132 = v129;
                v132[1] = v128;
                uint64_t v4 = v132 + 2;
              }
            }
            else
            {
              unsigned char *v132 = (_BYTE)v127;
              uint64_t v4 = v132 + 1;
            }
            ++v125;
            v124 = *(void **)this;
          }
          while (v125 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0xB:
        v133 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v134 = 0;
          v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
          unsigned __int8 v136 = (8 * a2) | 0x82;
          unsigned int v137 = (8 * a2) >> 7;
          do
          {
            uint64_t v138 = *(void *)(*v133 + 8 * v134);
            if (v135 > 0x7F)
            {
              if (v135 >> 14)
              {
                v139 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v135, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v136;
                v4[1] = v137;
                v139 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v135;
              v139 = v4 + 1;
            }
            v140 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(void *)v138 + 96))(v138);
            if (v140 > 0x7F)
            {
              uint64_t v142 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v140, (uint64_t)v139, v141);
            }
            else
            {
              unsigned char *v139 = (_BYTE)v140;
              uint64_t v142 = (uint64_t)(v139 + 1);
            }
            uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v138 + 88))(v138, v142);
            ++v134;
            v133 = *(void **)this;
          }
          while (v134 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0xC:
        v143 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v144 = 0;
          v145 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
          unsigned __int8 v146 = (8 * a2) | 0x82;
          unsigned int v147 = (8 * a2) >> 7;
          do
          {
            uint64_t v148 = *(void *)(*v143 + 8 * v144);
            if (v145 > 0x7F)
            {
              if (v145 >> 14)
              {
                v149 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v145, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v146;
                v4[1] = v147;
                v149 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v145;
              v149 = v4 + 1;
            }
            if (*(char *)(v148 + 23) < 0) {
              v150 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v148 + 8);
            }
            else {
              v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v148 + 23);
            }
            if (v150 > 0x7F)
            {
              uint64_t v151 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v150, (uint64_t)v149, a3);
            }
            else
            {
              unsigned char *v149 = (_BYTE)v150;
              uint64_t v151 = (uint64_t)(v149 + 1);
            }
            int v152 = *(char *)(v148 + 23);
            if (v152 >= 0) {
              v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v148;
            }
            else {
              v153 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v148;
            }
            if (v152 >= 0) {
              v154 = (const void *)*(unsigned __int8 *)(v148 + 23);
            }
            else {
              v154 = (const void *)*(unsigned int *)(v148 + 8);
            }
            uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v153, v154, v151, a4);
            ++v144;
            v143 = *(void **)this;
          }
          while (v144 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0xD:
        v155 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v156 = 0;
          v157 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v158 = (8 * a2) | 0x80;
          do
          {
            v159 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*v155 + 4 * v156);
            if (v157 > 0x7F)
            {
              if (v157 >> 14)
              {
                v160 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v157, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v158;
                v4[1] = v157 >> 7;
                v160 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v157;
              v160 = v4 + 1;
            }
            if (v159 > 0x7F)
            {
              uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v159, (uint64_t)v160, a3);
            }
            else
            {
              unsigned char *v160 = (_BYTE)v159;
              uint64_t v4 = v160 + 1;
            }
            ++v156;
            v155 = *(void **)this;
          }
          while (v156 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0xE:
        v161 = *(void **)this;
        if (*(int *)(*(void *)this + 8) < 1) {
          return v4;
        }
        uint64_t v162 = 0;
        v163 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
        unsigned __int8 v164 = (8 * a2) | 0x80;
        break;
      case 0xF:
        v168 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v169 = 0;
          v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 5u);
          unsigned __int8 v171 = (8 * a2) | 0x85;
          unsigned int v172 = (8 * a2) >> 7;
          do
          {
            int v173 = *(_DWORD *)(*v168 + 4 * v169);
            if (v170 > 0x7F)
            {
              if (v170 >> 14)
              {
                v174 = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v170, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v171;
                v4[1] = v172;
                v174 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v170;
              v174 = v4 + 1;
            }
            _DWORD *v174 = v173;
            uint64_t v4 = (unsigned __int8 *)(v174 + 1);
            ++v169;
            v168 = *(void **)this;
          }
          while (v169 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0x10:
        v175 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v176 = 0;
          v177 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 1u);
          unsigned __int8 v178 = (8 * a2) | 0x81;
          unsigned int v179 = (8 * a2) >> 7;
          do
          {
            uint64_t v180 = *(void *)(*v175 + 8 * v176);
            if (v177 > 0x7F)
            {
              if (v177 >> 14)
              {
                v181 = (void *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v177, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v178;
                v4[1] = v179;
                v181 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v177;
              v181 = v4 + 1;
            }
            void *v181 = v180;
            uint64_t v4 = (unsigned __int8 *)(v181 + 1);
            ++v176;
            v175 = *(void **)this;
          }
          while (v176 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0x11:
        v182 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v183 = 0;
          v184 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v185 = (8 * a2) | 0x80;
          do
          {
            int v186 = *(_DWORD *)(*v182 + 4 * v183);
            if (v184 > 0x7F)
            {
              if (v184 >> 14)
              {
                v187 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v184, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v185;
                v4[1] = v184 >> 7;
                v187 = v4 + 2;
              }
            }
            else
            {
              *uint64_t v4 = v184;
              v187 = v4 + 1;
            }
            v188 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v186) ^ (v186 >> 31));
            if (v188 > 0x7F)
            {
              uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v188, (uint64_t)v187, a3);
            }
            else
            {
              unsigned char *v187 = (2 * v186) ^ (v186 >> 31);
              uint64_t v4 = v187 + 1;
            }
            ++v183;
            v182 = *(void **)this;
          }
          while (v183 < *(int *)(*(void *)this + 8));
        }
        return v4;
      case 0x12:
        v189 = *(void **)this;
        if (*(int *)(*(void *)this + 8) >= 1)
        {
          uint64_t v190 = 0;
          v191 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
          unsigned __int8 v192 = (8 * a2) | 0x80;
          do
          {
            uint64_t v193 = *(void *)(*v189 + 8 * v190);
            if (v191 > 0x7F)
            {
              if (v191 >> 14)
              {
                uint64_t v194 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v191, (uint64_t)v4, a3);
              }
              else
              {
                *uint64_t v4 = v192;
                v4[1] = v191 >> 7;
                uint64_t v194 = (uint64_t)(v4 + 2);
              }
            }
            else
            {
              *uint64_t v4 = v191;
              uint64_t v194 = (uint64_t)(v4 + 1);
            }
            uint64_t v4 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v193) ^ (v193 >> 63)), v194, a3);
            ++v190;
            v189 = *(void **)this;
          }
          while (v190 < *(int *)(*(void *)this + 8));
        }
        return v4;
      default:
        return v4;
    }
    while (1)
    {
      v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*v161 + 4 * v162);
      if (v163 > 0x7F)
      {
        if (v163 >> 14)
        {
          v166 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v163, (uint64_t)v4, a3);
          if ((v165 & 0x80000000) != 0)
          {
LABEL_277:
            uint64_t v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v165, (uint64_t)v166, a3);
            goto LABEL_278;
          }
        }
        else
        {
          *uint64_t v4 = v164;
          v4[1] = v163 >> 7;
          v166 = v4 + 2;
          if ((v165 & 0x80000000) != 0) {
            goto LABEL_277;
          }
        }
      }
      else
      {
        *uint64_t v4 = v163;
        v166 = v4 + 1;
        if ((v165 & 0x80000000) != 0) {
          goto LABEL_277;
        }
      }
      if (v165 > 0x7F)
      {
        uint64_t v167 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v165, (uint64_t)v166, a3);
LABEL_278:
        uint64_t v4 = (unsigned __int8 *)v167;
        goto LABEL_279;
      }
      unsigned char *v166 = (_BYTE)v165;
      uint64_t v4 = v166 + 1;
LABEL_279:
      ++v162;
      v161 = *(void **)this;
      if (v162 >= *(int *)(*(void *)this + 8)) {
        return v4;
      }
    }
  }
  if (*((unsigned char *)this + 10)) {
    return v4;
  }
  switch(*((unsigned char *)this + 8))
  {
    case 1:
    case 6:
    case 0x10:
      uint64_t v8 = *(void *)this;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 1u);
      if (v9 > 0x7F)
      {
        if (v9 >> 14)
        {
          uint64_t v10 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x81;
          a3[1] = (8 * a2) >> 7;
          uint64_t v10 = a3 + 2;
        }
      }
      else
      {
        *a3 = (8 * a2) | 1;
        uint64_t v10 = a3 + 1;
      }
      *(void *)uint64_t v10 = v8;
      return v10 + 8;
    case 2:
    case 7:
    case 0xF:
      int v20 = *(_DWORD *)this;
      unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 5u);
      if (v21 > 0x7F)
      {
        if (v21 >> 14)
        {
          int v22 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x85;
          a3[1] = (8 * a2) >> 7;
          int v22 = a3 + 2;
        }
      }
      else
      {
        *a3 = (8 * a2) | 5;
        int v22 = a3 + 1;
      }
      *(_DWORD *)int v22 = v20;
      return v22 + 4;
    case 3:
    case 4:
      uint64_t v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this;
      uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v24 > 0x7F)
      {
        if (v24 >> 14)
        {
          uint64_t v25 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v24 >> 7;
          uint64_t v25 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        uint64_t v25 = a3 + 1;
      }
      v212 = v23;
      goto LABEL_398;
    case 5:
    case 0xE:
      uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)this;
      BOOL v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v27 > 0x7F)
      {
        if (v27 >> 14)
        {
          unsigned int v28 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v27 >> 7;
          unsigned int v28 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        unsigned int v28 = a3 + 1;
      }
      return wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32SignExtendedToArray(v26, v28, a3);
    case 8:
      LOBYTE(v195) = *(unsigned char *)this;
      v196 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v196 > 0x7F)
      {
        if (v196 >> 14)
        {
          v197 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v196, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v196 >> 7;
          v197 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        v197 = a3 + 1;
      }
      goto LABEL_387;
    case 9:
    case 0xC:
      uint64_t v29 = *(void *)this;
      int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
      if (v30 > 0x7F)
      {
        if (v30 >> 14)
        {
          uint64_t v31 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x82;
          a3[1] = (8 * a2) >> 7;
          uint64_t v31 = a3 + 2;
        }
      }
      else
      {
        *a3 = (8 * a2) | 2;
        uint64_t v31 = a3 + 1;
      }
      if (*(char *)(v29 + 23) < 0) {
        v213 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v29 + 8);
      }
      else {
        v213 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v29 + 23);
      }
      if (v213 > 0x7F)
      {
        uint64_t v214 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v213, (uint64_t)v31, a3);
      }
      else
      {
        *uint64_t v31 = v213;
        uint64_t v214 = (uint64_t)(v31 + 1);
      }
      int v215 = *(char *)(v29 + 23);
      if (v215 >= 0) {
        v216 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29;
      }
      else {
        v216 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v29;
      }
      if (v215 >= 0) {
        v217 = (const void *)*(unsigned __int8 *)(v29 + 23);
      }
      else {
        v217 = (const void *)*(unsigned int *)(v29 + 8);
      }
      return (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v216, v217, v214, a4);
    case 0xA:
      uint64_t v198 = *(void *)this;
      unsigned int v199 = 8 * a2;
      v200 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 3u);
      if (v200 > 0x7F)
      {
        if (v200 >> 14)
        {
          v201 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v200, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x83;
          a3[1] = v199 >> 7;
          v201 = a3 + 2;
        }
      }
      else
      {
        *a3 = (8 * a2) | 3;
        v201 = a3 + 1;
      }
      v197 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)v198 + 88))(v198, v201);
      v218 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v199 | 4);
      if (v218 <= 0x7F) {
        goto LABEL_391;
      }
      if (v218 >> 14) {
        goto LABEL_393;
      }
      unsigned __int8 *v197 = v199 | 0x84;
      v197[1] = v199 >> 7;
      return v197 + 2;
    case 0xB:
      uint64_t v202 = *(void *)this;
      if ((*((unsigned char *)this + 10) & 0x10) != 0)
      {
        v210 = *(uint64_t (**)(uint64_t))(*(void *)v202 + 112);
        return (unsigned __int8 *)v210(v202);
      }
      else
      {
        v203 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((8 * a2) | 2u);
        if (v203 > 0x7F)
        {
          if (v203 >> 14)
          {
            v204 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v203, (uint64_t)a3, a3);
          }
          else
          {
            *a3 = (8 * a2) | 0x82;
            a3[1] = (8 * a2) >> 7;
            v204 = a3 + 2;
          }
        }
        else
        {
          *a3 = (8 * a2) | 2;
          v204 = a3 + 1;
        }
        v219 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t))(*(void *)v202 + 96))(v202);
        if (v219 > 0x7F)
        {
          uint64_t v221 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v219, (uint64_t)v204, v220);
        }
        else
        {
          unsigned __int8 *v204 = v219;
          uint64_t v221 = (uint64_t)(v204 + 1);
        }
        v222 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v202 + 88);
        return (unsigned __int8 *)v222(v202, v221);
      }
    case 0xD:
      v195 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)this;
      v205 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v205 > 0x7F)
      {
        if (v205 >> 14)
        {
          v197 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v205, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v205 >> 7;
          v197 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        v197 = a3 + 1;
      }
      if (v195 <= 0x7F)
      {
LABEL_387:
        unsigned __int8 *v197 = v195;
        return v197 + 1;
      }
      v218 = v195;
LABEL_393:
      uint64_t result = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v218, (uint64_t)v197, a3);
      break;
    case 0x11:
      int v206 = *(_DWORD *)this;
      v207 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v207 > 0x7F)
      {
        if (v207 >> 14)
        {
          v197 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v207, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v207 >> 7;
          v197 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        v197 = a3 + 1;
      }
      v218 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v206) ^ (v206 >> 31));
      if (v218 > 0x7F) {
        goto LABEL_393;
      }
LABEL_391:
      unsigned __int8 *v197 = v218;
      return v197 + 1;
    case 0x12:
      uint64_t v208 = *(void *)this;
      v209 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * a2);
      if (v209 > 0x7F)
      {
        if (v209 >> 14)
        {
          uint64_t v25 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v209, (uint64_t)a3, a3);
        }
        else
        {
          *a3 = (8 * a2) | 0x80;
          a3[1] = v209 >> 7;
          uint64_t v25 = a3 + 2;
        }
      }
      else
      {
        *a3 = 8 * a2;
        uint64_t v25 = a3 + 1;
      }
      v212 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v208) ^ (v208 >> 63));
LABEL_398:
      return (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v212, (uint64_t)v25, a3);
    default:
      return v4;
  }
  return result;
}

void sub_21360D6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeMessageSetWithCachedSizesToArray(wireless_diagnostics::google::protobuf::internal::ExtensionSet **this, unsigned __int8 *a2)
{
  unint64_t v3 = this + 1;
  uint64_t v4 = *this;
  if (*this != (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(this + 1))
  {
    do
    {
      a2 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeMessageSetItemWithCachedSizesToArray((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)((char *)v4 + 40), (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v4 + 8), a2);
      int v5 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)*((void *)v4 + 1);
      if (v5)
      {
        do
        {
          uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet **)v5;
          int v5 = *(wireless_diagnostics::google::protobuf::internal::ExtensionSet **)v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet **)*((void *)v4 + 2);
          BOOL v7 = *v6 == v4;
          uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)v6;
        }
        while (!v7);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)v6;
    }
    while (v6 != v3);
  }
  return a2;
}

unsigned __int8 *wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeMessageSetItemWithCachedSizesToArray(wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, unsigned __int8 *a3)
{
  unint64_t v3 = a3;
  if (*((unsigned char *)this + 8) == 11 && !*((unsigned char *)this + 9))
  {
    if ((*((unsigned char *)this + 10) & 1) == 0)
    {
      *(_WORD *)a3 = 4107;
      uint64_t v8 = a3 + 2;
      if (a2 > 0x7F)
      {
        uint64_t v9 = (unsigned __int8 *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(a2, (uint64_t)v8, a3);
      }
      else
      {
        a3[2] = a2;
        uint64_t v9 = a3 + 3;
      }
      uint64_t v10 = *(void *)this;
      if ((*((unsigned char *)this + 10) & 0x10) != 0)
      {
        unsigned __int8 v14 = (unsigned char *)(*(uint64_t (**)(void, uint64_t, unsigned __int8 *))(*(void *)v10 + 112))(*(void *)this, 3, v9);
      }
      else
      {
        *uint64_t v9 = 26;
        uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(uint64_t, unsigned __int8 *))(*(void *)v10 + 96))(v10, v8);
        if (v11 > 0x7F)
        {
          uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (uint64_t)(v9 + 1), v12);
        }
        else
        {
          v9[1] = v11;
          uint64_t v13 = (uint64_t)(v9 + 2);
        }
        unsigned __int8 v14 = (unsigned char *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 88))(v10, v13);
      }
      *unsigned __int8 v14 = 12;
      return v14 + 1;
    }
  }
  else
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
    return wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeFieldWithCachedSizesToArray(this, (int)a2, v3, v6);
  }
  return v3;
}

void sub_21360D9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSetItem(int a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  BOOL v7 = (int *)MEMORY[0x263F8C738];
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v8 = (char *)*((void *)this + 1);
          if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
          {
            int TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
          }
          else
          {
            int TagFallback = *v8;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v8 + 1;
          }
          if (TagFallback <= 25) {
            break;
          }
          if (TagFallback != 26) {
            goto LABEL_13;
          }
          if (v6)
          {
            char v10 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField();
LABEL_14:
            if ((v10 & 1) == 0) {
              goto LABEL_47;
            }
          }
          else
          {
            __p[0] = 0;
            __p[1] = 0;
            uint64_t v23 = 0;
            unsigned int v21 = 0;
            uint64_t v13 = (char *)*((void *)this + 1);
            if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21))goto LABEL_38; {
            }
              }
            else
            {
              unsigned int v21 = *v13;
              *((void *)this + 1) = v13 + 1;
            }
            if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadString())
            {
              wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream();
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24);
              if (v23 >= 0) {
                uint64_t v16 = __p;
              }
              else {
                uint64_t v16 = (void **)__p[0];
              }
              wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRaw((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, v16);
              MEMORY[0x21668D260](v24);
              MEMORY[0x21668D2A0](v20);
              char v17 = 1;
              goto LABEL_39;
            }
LABEL_38:
            char v17 = 0;
LABEL_39:
            if (SHIBYTE(v23) < 0) {
              operator delete(__p[0]);
            }
            int v6 = 0;
            if ((v17 & 1) == 0) {
              goto LABEL_47;
            }
          }
        }
        if (!TagFallback) {
          goto LABEL_47;
        }
        if (TagFallback == 12)
        {
          uint64_t v18 = 1;
          goto LABEL_48;
        }
        if (TagFallback != 16)
        {
LABEL_13:
          char v10 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::io::CodedInputStream *))(*(void *)a4 + 16))(a4, this);
          goto LABEL_14;
        }
        LODWORD(__p[0]) = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, (unsigned int *)__p))goto LABEL_47; {
          int v12 = (int)__p[0];
          }
        }
        else
        {
          int v12 = *v11;
          LODWORD(__p[0]) = v12;
          *((void *)this + 1) = v11 + 1;
        }
        int v6 = (8 * v12) | 2;
        if (SHIBYTE(v35) < 0) {
          break;
        }
        int v14 = HIBYTE(v35);
        if (HIBYTE(v35))
        {
          unsigned int v15 = &v33;
          goto LABEL_29;
        }
      }
      int v14 = v34;
    }
    while (!v34);
    unsigned int v15 = (unsigned char **)v33;
LABEL_29:
    v24[0] = 0;
    v24[1] = v15;
    v24[2] = (char *)v15 + v14;
    uint64_t v26 = 0;
    __int16 v27 = 0;
    int v25 = v14;
    int v28 = v14;
    long long v29 = xmmword_213619590;
    int v30 = *v7;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField() & 1) == 0) {
      break;
    }
    if (SHIBYTE(v35) < 0)
    {
      unsigned char *v33 = 0;
      uint64_t v34 = 0;
    }
    else
    {
      LOBYTE(v33) = 0;
      HIBYTE(v35) = 0;
    }
    MEMORY[0x21668D180](v24);
  }
  MEMORY[0x21668D180](v24);
LABEL_47:
  uint64_t v18 = 0;
LABEL_48:
  if (SHIBYTE(v35) < 0) {
    operator delete(v33);
  }
  return v18;
}

void sub_21360DD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  MEMORY[0x21668D2A0](&a11);
  if (a19 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v19 - 89) < 0) {
    operator delete(*(void **)(v19 - 112));
  }
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, const wireless_diagnostics::google::protobuf::MessageLite *a3)
{
  v5[1] = a3;
  uint64_t v6 = MEMORY[0x263F8C760] + 16;
  v5[0] = MEMORY[0x263F8C770] + 16;
  uint64_t v3 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseMessageSet((int)this, a2, (uint64_t)v5, (uint64_t)&v6);
  wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder((wireless_diagnostics::google::protobuf::internal::ExtensionFinder *)v5);
  return v3;
}

void sub_21360DE0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder((wireless_diagnostics::google::protobuf::internal::ExtensionFinder *)va);
  _Unwind_Resume(a1);
}

unsigned char *wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeMessageSetItemWithCachedSizes(unsigned char *this, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v5 = (uint64_t)this;
  if (this[8] == 11 && !this[9])
  {
    if ((this[10] & 1) == 0)
    {
      wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
      wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, (uint64_t)a3, v6);
      uint64_t v8 = *(void *)v5;
      if ((*(unsigned char *)(v5 + 10) & 0x10) != 0) {
        (*(void (**)(void, uint64_t, wireless_diagnostics::google::protobuf::io::CodedOutputStream *))(*(void *)v8 + 104))(*(void *)v5, 3, a3);
      }
      else {
        wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a3, v7);
      }
      return (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a3);
    }
  }
  else
  {
    return (unsigned char *)MEMORY[0x270F9B0E0]();
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::MessageSetItemByteSize(uint64_t **this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 8) == 11 && !*((unsigned char *)this + 9))
  {
    char v3 = *((unsigned char *)this + 10);
    if (v3)
    {
      return 0;
    }
    else
    {
      uint64_t v4 = (int *)MEMORY[0x263F8C750];
      if (a2 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(a2);
        char v3 = *((unsigned char *)this + 10);
      }
      else
      {
        int v5 = 1;
      }
      int v6 = *v4;
      uint64_t v7 = **this;
      if ((v3 & 0x10) != 0) {
        uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void))(v7 + 64))();
      }
      else {
        uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(void))(v7 + 72))();
      }
      int v9 = (int)v8;
      int v10 = v5 + v6;
      if (v8 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v11 = 1;
      }
      return (v10 + v9 + v11);
    }
  }
  else
  {
    return MEMORY[0x270F9B0F0]();
  }
}

unsigned char *wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeMessageSetWithCachedSizes(unsigned char *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = this + 8;
  char v3 = *(void **)this;
  if (*(unsigned char **)this != this + 8)
  {
    do
    {
      this = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::SerializeMessageSetItemWithCachedSizes((unsigned char *)v3 + 40, *((unsigned int *)v3 + 8), a2);
      int v5 = (void *)v3[1];
      if (v5)
      {
        do
        {
          int v6 = v5;
          int v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (void *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          char v3 = v6;
        }
        while (!v7);
      }
      char v3 = v6;
    }
    while (v6 != v2);
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MessageSetByteSize(wireless_diagnostics::google::protobuf::internal::ExtensionSet **this)
{
  int v1 = this + 1;
  int v2 = *this;
  if (*this == (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(this + 1)) {
    return 0;
  }
  LODWORD(v3) = 0;
  do
  {
    int v4 = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::MessageSetItemByteSize((uint64_t **)v2 + 5, (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v2 + 8));
    int v5 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)*((void *)v2 + 1);
    if (v5)
    {
      do
      {
        int v6 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet **)v5;
        int v5 = *(wireless_diagnostics::google::protobuf::internal::ExtensionSet **)v5;
      }
      while (v5);
    }
    else
    {
      do
      {
        int v6 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet **)*((void *)v2 + 2);
        BOOL v7 = *v6 == v2;
        int v2 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)v6;
      }
      while (!v7);
    }
    uint64_t v3 = (v4 + v3);
    int v2 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)v6;
  }
  while (v6 != v1);
  return v3;
}

void wireless_diagnostics::google::protobuf::internal::DescriptorPoolExtensionFinder::~DescriptorPoolExtensionFinder(wireless_diagnostics::google::protobuf::internal::DescriptorPoolExtensionFinder *this)
{
  wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder(this);

  JUMPOUT(0x21668DB60);
}

unsigned char *wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32SignExtendedToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, unsigned char *a2, unsigned __int8 *a3)
{
  if ((this & 0x80000000) != 0) {
    return (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(int)this, (uint64_t)a2, a3);
  }
  if (this > 0x7F) {
    return (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(this, (uint64_t)a2, a3);
  }
  *a2 = (_BYTE)this;
  return a2 + 1;
}

uint64_t std::__tree<std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      BOOL v7 = (uint64_t *)v2;
    }
    else {
      BOOL v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }
  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0;
  }
  std::__tree<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>,std::less<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<wireless_diagnostics::google::protobuf::Descriptor const*,int>,wireless_diagnostics::google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer((uint64_t **)a1, (uint64_t *)v4);
  operator delete((void *)v4);
  return 1;
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::Printer(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)uint64_t result = a3;
  *(void *)(result + 8) = a2;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  *(_WORD *)(result + 56) = 1;
  return result;
}

{
  *(unsigned char *)uint64_t result = a3;
  *(void *)(result + 8) = a2;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  *(_WORD *)(result + 56) = 1;
  return result;
}

void wireless_diagnostics::google::protobuf::io::Printer::~Printer(wireless_diagnostics::google::protobuf::io::Printer *this)
{
  if (*((int *)this + 6) >= 1 && !*((unsigned char *)this + 57)) {
    (*(void (**)(void))(**((void **)this + 1) + 24))(*((void *)this + 1));
  }
  if (*((char *)this + 55) < 0) {
    operator delete(*((void **)this + 4));
  }
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::Print(const char *a1, uint64_t a2, char *__s)
{
  int v6 = strlen(__s);
  if (v6 >= 1)
  {
    int v7 = 0;
    int v8 = 0;
    while (1)
    {
      uint64_t v9 = v7;
      int v10 = __s[v7];
      if (v10 == 10) {
        break;
      }
      if (v10 == *(unsigned __int8 *)a1)
      {
        wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, &__s[v8], v9 - v8);
        uint64_t v11 = v9 + 1;
        int v12 = strchr(&__s[v11], *a1);
        if (!v12)
        {
          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
          LODWORD(v12) = __s + v11;
        }
        int v13 = v12 - __s;
        std::string::basic_string[abi:ne180100](__p, &__s[v11], (int)v12 - (int)__s - (int)v11);
        unint64_t v14 = v20;
        if ((v20 & 0x80u) != 0) {
          unint64_t v14 = (unint64_t)__p[1];
        }
        if (v14)
        {
          uint64_t v15 = std::__tree<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::__map_value_compare<std::string,std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,wireless_diagnostics::google::protobuf::FileDescriptorProto const*>>>::find<std::string>(a2, (const void **)__p);
          if (a2 + 8 == v15)
          {
            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
          }
          else
          {
            if (*(char *)(v15 + 79) < 0)
            {
              uint64_t v16 = *(const char **)(v15 + 56);
              uint64_t v17 = *(void *)(v15 + 64);
            }
            else
            {
              uint64_t v16 = (const char *)(v15 + 56);
              LODWORD(v17) = *(unsigned __int8 *)(v15 + 79);
            }
            wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, v16, v17);
          }
        }
        else
        {
          wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, a1, 1);
        }
        if ((char)v20 < 0) {
          operator delete(__p[0]);
        }
        int v7 = v13 + 1;
        goto LABEL_22;
      }
      int v7 = v9 + 1;
LABEL_23:
      if (v7 >= v6) {
        return wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, &__s[v8], v6 - v8);
      }
    }
    wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, &__s[v8], v9 - v8 + 1);
    int v7 = v9 + 1;
    *((unsigned char *)a1 + 56) = 1;
LABEL_22:
    int v8 = v7;
    goto LABEL_23;
  }
  int v8 = 0;
  return wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((uint64_t)a1, &__s[v8], v6 - v8);
}

void sub_21360E4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::WriteRaw(uint64_t this, const char *a2, int a3)
{
  if (a3)
  {
    uint64_t v3 = this;
    if (!*(unsigned char *)(this + 57))
    {
      if ((v4 = a3, int v5 = a2, a3 < 1)
        || !*(unsigned char *)(this + 56)
        || *a2 == 10
        || ((*(unsigned char *)(this + 56) = 0, *(char *)(this + 55) < 0)
          ? (int v6 = *(const char **)(this + 32), v7 = *(void *)(this + 40))
          : (int v6 = (const char *)(this + 32), LODWORD(v7) = *(unsigned __int8 *)(this + 55)),
            this = wireless_diagnostics::google::protobuf::io::Printer::WriteRaw((wireless_diagnostics::google::protobuf::io::Printer *)this, v6, v7), !*(unsigned char *)(v3 + 57)))
      {
        int v8 = *(_DWORD *)(v3 + 24);
        if (v8 >= v4)
        {
          uint64_t v9 = *(void **)(v3 + 16);
LABEL_16:
          this = (uint64_t)memcpy(v9, v5, v4);
          *(void *)(v3 + 16) += v4;
          *(_DWORD *)(v3 + 24) -= v4;
        }
        else
        {
          uint64_t v9 = *(void **)(v3 + 16);
          while (1)
          {
            memcpy(v9, v5, v8);
            uint64_t v10 = *(int *)(v3 + 24);
            uint64_t v11 = 0;
            this = (*(uint64_t (**)(void, void **, uint64_t))(**(void **)(v3 + 8) + 16))(*(void *)(v3 + 8), &v11, v3 + 24);
            *(unsigned char *)(v3 + 57) = this ^ 1;
            if ((this & 1) == 0) {
              break;
            }
            v4 -= v10;
            v5 += v10;
            uint64_t v9 = v11;
            *(void *)(v3 + 16) = v11;
            int v8 = *(_DWORD *)(v3 + 24);
            if (v4 <= v8) {
              goto LABEL_16;
            }
          }
        }
      }
    }
  }
  return this;
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::Print(wireless_diagnostics::google::protobuf::io::Printer *this, char *__s)
{
  uint64_t v2 = __s;
  {
    int v6 = this;
    uint64_t v2 = __s;
    this = v6;
    if (v4)
    {
      qword_2677EC5E8 = 0;
      qword_2677EC5E0 = 0;
      wireless_diagnostics::google::protobuf::io::Printer::Print(char const*)::empty = (uint64_t)&qword_2677EC5E0;
      __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &wireless_diagnostics::google::protobuf::io::Printer::Print(char const*)::empty, &dword_2135B9000);
      uint64_t v2 = __s;
      this = v6;
    }
  }

  return wireless_diagnostics::google::protobuf::io::Printer::Print((const char *)this, (uint64_t)&wireless_diagnostics::google::protobuf::io::Printer::Print(char const*)::empty, v2);
}

uint64_t std::map<std::string,std::string>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

void wireless_diagnostics::google::protobuf::io::Printer::Print(const char *a1, char *a2, char *__s, const std::string *a4)
{
  v11[0] = 0;
  v11[1] = 0;
  uint64_t v10 = (uint64_t *)v11;
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  int v12 = __p;
  uint64_t v7 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v10, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v12);
  std::string::operator=((std::string *)((char *)v7 + 56), a4);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  wireless_diagnostics::google::protobuf::io::Printer::Print(a1, (uint64_t)&v10, a2);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v10, v11[0]);
}

void sub_21360E80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
}

void wireless_diagnostics::google::protobuf::io::Printer::Print(const char *a1, char *a2, char *__s, const std::string *a4, char *a5, const std::string *a6)
{
  v16[0] = 0;
  v16[1] = 0;
  uint64_t v15 = (uint64_t *)v16;
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  uint64_t v17 = __p;
  uint64_t v11 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v15, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v17);
  std::string::operator=((std::string *)((char *)v11 + 56), a4);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, a5);
  uint64_t v17 = __p;
  int v12 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v15, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v17);
  std::string::operator=((std::string *)((char *)v12 + 56), a6);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  wireless_diagnostics::google::protobuf::io::Printer::Print(a1, (uint64_t)&v15, a2);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v15, v16[0]);
}

void sub_21360E94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
}

void wireless_diagnostics::google::protobuf::io::Printer::Print(const char *a1, char *a2, char *__s, const std::string *a4, char *a5, const std::string *a6, char *a7, const std::string *a8)
{
  v21[0] = 0;
  v21[1] = 0;
  unsigned __int8 v20 = (uint64_t *)v21;
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  int v22 = __p;
  uint64_t v15 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v20, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v22);
  std::string::operator=((std::string *)((char *)v15 + 56), a4);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, a5);
  int v22 = __p;
  uint64_t v16 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v20, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v22);
  std::string::operator=((std::string *)((char *)v16 + 56), a6);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, a7);
  int v22 = __p;
  uint64_t v17 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(&v20, (const void **)__p, (uint64_t)&std::piecewise_construct, (_OWORD **)&v22);
  std::string::operator=((std::string *)((char *)v17 + 56), a8);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  wireless_diagnostics::google::protobuf::io::Printer::Print(a1, (uint64_t)&v20, a2);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((uint64_t)&v20, v21[0]);
}

void sub_21360EAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16)
{
}

std::string *wireless_diagnostics::google::protobuf::io::Printer::Indent(wireless_diagnostics::google::protobuf::io::Printer *this)
{
  return std::string::append((std::string *)((char *)this + 32), "  ");
}

void wireless_diagnostics::google::protobuf::io::Printer::Outdent(wireless_diagnostics::google::protobuf::io::Printer *this)
{
  if (*((char *)this + 55) < 0)
  {
    uint64_t v1 = *((void *)this + 5);
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v3);
    return;
  }
  uint64_t v1 = *((unsigned __int8 *)this + 55);
  if (!*((unsigned char *)this + 55)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = (std::string *)((char *)this + 32);

  std::string::resize(v2, v1 - 2, 0);
}

void sub_21360EBE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::PrintRaw(uint64_t a1, uint64_t *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((_DWORD *)a2 + 2);
  if (v2 >= 0)
  {
    int v4 = v2;
  }
  else
  {
    a2 = (uint64_t *)*a2;
    int v4 = v3;
  }
  return wireless_diagnostics::google::protobuf::io::Printer::WriteRaw(a1, (const char *)a2, v4);
}

uint64_t wireless_diagnostics::google::protobuf::io::Printer::PrintRaw(uint64_t this, const char *__s)
{
  if (!*(unsigned char *)(this + 57))
  {
    uint64_t v3 = this;
    int v4 = strlen(__s);
    return wireless_diagnostics::google::protobuf::io::Printer::WriteRaw(v3, __s, v4);
  }
  return this;
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

_OWORD *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  int v6 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v14, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x50uLL);
    v12[1] = a1 + 1;
    char v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    std::string v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    uint64_t v9[2] = 0;
    *char v9 = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 7) = 0;
    char v13 = 1;
    std::__tree<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::__map_value_compare<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>,std::less<wireless_diagnostics::google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<wireless_diagnostics::google::protobuf::FieldDescriptor const*,std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>>>>::__insert_node_at(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v12, 0);
  }
  return v7;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
    operator delete(v2);
    }
  }
}

void wireless_diagnostics::google::protobuf::internal::ReflectionOps::Copy(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, const wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  if (this != a2)
  {
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Clear(a2, a2);
    wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(this, a2, v6);
  }
}

void wireless_diagnostics::google::protobuf::internal::ReflectionOps::Clear(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *, wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 144))(this, a2);
  std::string __p = 0;
  int v8 = 0;
  uint64_t v9 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, void **))(*(void *)v3 + 96))(v3, this, &__p);
  int v4 = __p;
  if (v8 != __p)
  {
    unint64_t v5 = 0;
    do
    {
      (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, void))(*(void *)v3 + 56))(v3, this, v4[v5++]);
      int v4 = __p;
    }
    while (v5 < (v8 - (unsigned char *)__p) >> 3);
  }
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)v3 + 24))(v3, this);
  if (*(void *)v6) {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  if (__p)
  {
    int v8 = __p;
    operator delete(__p);
  }
}

void sub_21360EF70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, const wireless_diagnostics::google::protobuf::Message *a2, wireless_diagnostics::google::protobuf::Message *a3)
{
  if (this == a2)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v29);
  }
  uint64_t v5 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v5)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&v29);
  }
  uint64_t v6 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)this + 144))(this);
  uint64_t v7 = (*(uint64_t (**)(const wireless_diagnostics::google::protobuf::Message *))(*(void *)a2 + 144))(a2);
  long long v29 = 0;
  int v30 = 0;
  uint64_t v31 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, void **))(*(void *)v6 + 96))(v6, this, &v29);
  int v8 = v29;
  if (v30 != v29)
  {
    unint64_t v9 = 0;
    do
    {
      uint64_t v10 = v8[v9];
      if (*(_DWORD *)(v10 + 48) == 3)
      {
        int v11 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 48))(v6, this, v10);
        if (v11 >= 1)
        {
          uint64_t v12 = 0;
          do
          {
            switch(*(_DWORD *)(v10 + 44))
            {
              case 1:
                (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 320))(v6, this, v10, v12);
                (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t))(*(void *)v7 + 488))(v7, a2, v10);
                break;
              case 2:
                (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 312))(v6, this, v10, v12);
                (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t))(*(void *)v7 + 480))(v7, a2, v10);
                break;
              case 3:
              case 0x10:
              case 0x12:
                uint64_t v13 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 288))(v6, this, v10, v12);
                uint64_t v14 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 456);
                goto LABEL_13;
              case 4:
              case 6:
                uint64_t v13 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 304))(v6, this, v10, v12);
                uint64_t v14 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 472);
                goto LABEL_13;
              case 5:
              case 0xF:
              case 0x11:
                uint64_t v13 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 280))(v6, this, v10, v12);
                uint64_t v14 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 448);
                goto LABEL_13;
              case 7:
              case 0xD:
                uint64_t v13 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 296))(v6, this, v10, v12);
                uint64_t v14 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 464);
LABEL_13:
                (*v14)(v7, a2, v10, v13);
                break;
              case 8:
                uint64_t v17 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 328))(v6, this, v10, v12);
                (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 496))(v7, a2, v10, v17);
                break;
              case 9:
              case 0xC:
                (*(void (**)(void **__return_ptr, uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 336))(__p, v6, this, v10, v12);
                (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, void **))(*(void *)v7 + 504))(v7, a2, v10, __p);
                if (v28 < 0) {
                  operator delete(__p[0]);
                }
                break;
              case 0xA:
              case 0xB:
                uint64_t v15 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, void))(*(void *)v7 + 520))(v7, a2, v10, 0);
                uint64_t v16 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 352))(v6, this, v10, v12);
                (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 112))(v15, v16);
                break;
              case 0xE:
                uint64_t v18 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v6 + 344))(v6, this, v10, v12);
                (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 512))(v7, a2, v10, v18);
                break;
              default:
                break;
            }
            uint64_t v12 = (v12 + 1);
          }
          while (v11 != v12);
        }
      }
      else
      {
        switch(*(_DWORD *)(v10 + 44))
        {
          case 1:
            (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 144))(v6, this, v10);
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t))(*(void *)v7 + 232))(v7, a2, v10);
            break;
          case 2:
            (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 136))(v6, this, v10);
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t))(*(void *)v7 + 224))(v7, a2, v10);
            break;
          case 3:
          case 0x10:
          case 0x12:
            uint64_t v19 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 112))(v6, this, v10);
            unsigned __int8 v20 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 200);
            goto LABEL_30;
          case 4:
          case 6:
            uint64_t v19 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 128))(v6, this, v10);
            unsigned __int8 v20 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 216);
            goto LABEL_30;
          case 5:
          case 0xF:
          case 0x11:
            uint64_t v19 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 104))(v6, this, v10);
            unsigned __int8 v20 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 192);
            goto LABEL_30;
          case 7:
          case 0xD:
            uint64_t v19 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 120))(v6, this, v10);
            unsigned __int8 v20 = (void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 208);
LABEL_30:
            (*v20)(v7, a2, v10, v19);
            break;
          case 8:
            uint64_t v21 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 152))(v6, this, v10);
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 240))(v7, a2, v10, v21);
            break;
          case 9:
          case 0xC:
            (*(void (**)(void **__return_ptr, uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 160))(__p, v6, this, v10);
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, void **))(*(void *)v7 + 248))(v7, a2, v10, __p);
            if (v28 < 0) {
              operator delete(__p[0]);
            }
            break;
          case 0xA:
          case 0xB:
            uint64_t v23 = (*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, void))(*(void *)v7 + 264))(v7, a2, v10, 0);
            uint64_t v24 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, void))(*(void *)v6 + 176))(v6, this, v10, 0);
            (*(void (**)(uint64_t, uint64_t))(*(void *)v23 + 112))(v23, v24);
            break;
          case 0xE:
            uint64_t v22 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(*(void *)v6 + 168))(v6, this, v10);
            (*(void (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *, uint64_t, uint64_t))(*(void *)v7 + 256))(v7, a2, v10, v22);
            break;
          default:
            break;
        }
      }
      ++v9;
      int v8 = v29;
    }
    while (v9 < (v30 - (unsigned char *)v29) >> 3);
  }
  int v25 = (void ***)(*(uint64_t (**)(uint64_t, const wireless_diagnostics::google::protobuf::Message *))(*(void *)v7 + 24))(v7, a2);
  uint64_t v26 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)v6 + 16))(v6, this);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom(v25, v26);
  if (v29)
  {
    int v30 = v29;
    operator delete(v29);
  }
}

void sub_21360FC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::ReflectionOps::IsInitialized(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, const wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *, const wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  uint64_t v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)this + 144))(this);
  int v5 = *(_DWORD *)(v3 + 44);
  if (v5 > 0)
  {
    uint64_t v6 = 0;
    for (uint64_t i = 0; i < v5; ++i)
    {
      if (*(_DWORD *)(*(void *)(v3 + 48) + v6 + 48) == 2)
      {
        if (!(*(unsigned int (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)v4 + 40))(v4, this))return 0; {
        int v5 = *(_DWORD *)(v3 + 44);
        }
      }
      v6 += 120;
    }
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, unsigned char **))(*(void *)v4 + 96))(v4, this, &v18);
  int v8 = v18;
  if (v19 == v18)
  {
    uint64_t v16 = 1;
    if (!v18) {
      return v16;
    }
LABEL_23:
    uint64_t v19 = v8;
    operator delete(v8);
    return v16;
  }
  unint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = *(void *)&v8[8 * v9];
    if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + 44)] != 10) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)v4;
    if (*(_DWORD *)(v10 + 48) == 3) {
      break;
    }
    uint64_t v15 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, void))(v11 + 176))(v4, this, v10, 0);
    if (!(*(unsigned int (**)(uint64_t))(*(void *)v15 + 40))(v15)) {
      goto LABEL_19;
    }
LABEL_17:
    ++v9;
    int v8 = v18;
    if (v9 >= (v19 - v18) >> 3)
    {
      uint64_t v16 = 1;
      goto LABEL_20;
    }
  }
  int v12 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(v11 + 48))(v4, this, v10);
  if (v12 < 1) {
    goto LABEL_17;
  }
  uint64_t v13 = 0;
  while (1)
  {
    uint64_t v14 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v4 + 352))(v4, this, v10, v13);
    if (((*(uint64_t (**)(uint64_t))(*(void *)v14 + 40))(v14) & 1) == 0) {
      break;
    }
    uint64_t v13 = (v13 + 1);
    if (v12 == v13) {
      goto LABEL_17;
    }
  }
LABEL_19:
  uint64_t v16 = 0;
LABEL_20:
  int v8 = v18;
  if (v18) {
    goto LABEL_23;
  }
  return v16;
}

void sub_21360FFDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::internal::ReflectionOps::DiscardUnknownFields(wireless_diagnostics::google::protobuf::internal::ReflectionOps *this, wireless_diagnostics::google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::internal::ReflectionOps *, wireless_diagnostics::google::protobuf::Message *))(*(void *)this + 144))(this, a2);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *))(*(void *)v3 + 24))(v3, this);
  if (*(void *)v4) {
    wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  (*(void (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, void **))(*(void *)v3 + 96))(v3, this, &v13);
  int v5 = v14;
  if (v14 != v13)
  {
    unint64_t v6 = 0;
    int v5 = v13;
    do
    {
      uint64_t v7 = v5[v6];
      if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v7 + 44)] == 10)
      {
        uint64_t v8 = *(void *)v3;
        if (*(_DWORD *)(v7 + 48) == 3)
        {
          int v9 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t))(v8 + 48))(v3, this, v7);
          if (v9 >= 1)
          {
            uint64_t v10 = 0;
            do
            {
              uint64_t v11 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, uint64_t))(*(void *)v3 + 440))(v3, this, v7, v10);
              (*(void (**)(uint64_t))(*(void *)v11 + 120))(v11);
              uint64_t v10 = (v10 + 1);
            }
            while (v9 != v10);
          }
        }
        else
        {
          uint64_t v12 = (*(uint64_t (**)(uint64_t, wireless_diagnostics::google::protobuf::internal::ReflectionOps *, uint64_t, void))(v8 + 264))(v3, this, v7, 0);
          (*(void (**)(uint64_t))(*(void *)v12 + 120))(v12);
        }
      }
      ++v6;
      int v5 = v13;
    }
    while (v6 < v14 - v13);
  }
  if (v5)
  {
    uint64_t v14 = v5;
    operator delete(v5);
  }
}

void sub_213610240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::internal::ReflectionOps::FindInitializationErrors(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(a1);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  if (*(int *)(v6 + 44) > 0)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      if (*(_DWORD *)(*(void *)(v6 + 48) + v8 + 48) == 2
        && ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 40))(v7, a1) & 1) == 0)
      {
        std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a2, *(const void ***)(*(void *)(v6 + 48) + v8), (uint64_t)&__p);
        unint64_t v11 = *(void *)(a3 + 8);
        unint64_t v10 = *(void *)(a3 + 16);
        if (v11 >= v10)
        {
          unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - *(void *)a3) >> 3);
          unint64_t v14 = v13 + 1;
          if (v13 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<wireless_diagnostics::google::protobuf::TextFormat::ParseLocation>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - *(void *)a3) >> 3);
          if (2 * v15 > v14) {
            unint64_t v14 = 2 * v15;
          }
          if (v15 >= 0x555555555555555) {
            unint64_t v16 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v16 = v14;
          }
          __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
          if (v16) {
            uint64_t v17 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3 + 16, v16);
          }
          else {
            uint64_t v17 = 0;
          }
          uint64_t v18 = v17 + v13;
          __v.__first_ = v17;
          __v.__begin_ = v18;
          __v.__end_cap_.__value_ = &v17[v16];
          long long v19 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          v18->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v18->__r_.__value_.__l.__data_ = v19;
          memset(&__p, 0, sizeof(__p));
          __v.__end_ = v18 + 1;
          std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__v);
          uint64_t v20 = *(void *)(a3 + 8);
          std::__split_buffer<std::string>::~__split_buffer(&__v);
          int v21 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          *(void *)(a3 + 8) = v20;
          if (v21 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v12 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v11 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v11 = v12;
          *(void *)(a3 + 8) = v11 + 24;
        }
      }
      ++v9;
      v8 += 120;
    }
    while (v9 < *(int *)(v6 + 44));
  }
  memset(&__v, 0, 24);
  (*(void (**)(uint64_t, uint64_t, std::__split_buffer<std::string> *))(*(void *)v7 + 96))(v7, a1, &__v);
  std::vector<int>::pointer begin = __v.__begin_;
  if (__v.__begin_ != __v.__first_)
  {
    unint64_t v23 = 0;
    std::vector<int>::pointer begin = __v.__first_;
    do
    {
      uint64_t v24 = *((void *)&begin->__r_.__value_.__l.__data_ + v23);
      if (wireless_diagnostics::google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v24 + 44)] == 10)
      {
        uint64_t v25 = *(void *)v7;
        if (*(_DWORD *)(v24 + 48) == 3)
        {
          int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v7, a1, v24);
          if (v26 >= 1)
          {
            __int16 v27 = 0;
            do
            {
              uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, wireless_diagnostics::google::protobuf *))(*(void *)v7 + 352))(v7, a1, v24, v27);
              wireless_diagnostics::google::protobuf::internal::SubMessagePrefix((uint64_t)a2, (const std::string::value_type **)v24, v27, &__p);
              wireless_diagnostics::google::protobuf::internal::ReflectionOps::FindInitializationErrors(v28, &__p, a3);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              __int16 v27 = (wireless_diagnostics::google::protobuf *)(v27 + 1);
            }
            while (v26 != v27);
          }
        }
        else
        {
          uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v25 + 176))(v7, a1, v24, 0);
          wireless_diagnostics::google::protobuf::internal::SubMessagePrefix((uint64_t)a2, (const std::string::value_type **)v24, (wireless_diagnostics::google::protobuf *)0xFFFFFFFFLL, &__p);
          wireless_diagnostics::google::protobuf::internal::ReflectionOps::FindInitializationErrors(v29, &__p, a3);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
      ++v23;
      std::vector<int>::pointer begin = __v.__first_;
    }
    while (v23 < ((char *)__v.__begin_ - (char *)__v.__first_) >> 3);
  }
  if (begin)
  {
    __v.__begin_ = begin;
    operator delete(begin);
  }
}

void sub_213610650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *wireless_diagnostics::google::protobuf::internal::SubMessagePrefix@<X0>(uint64_t a1@<X0>, const std::string::value_type **a2@<X1>, wireless_diagnostics::google::protobuf *a3@<X2>, std::string *a4@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a4->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  if (*((unsigned char *)a2 + 52))
  {
    std::string::append(a4, "(");
    uint64_t v7 = a2[1];
    int v8 = v7[23];
    if (v8 >= 0) {
      uint64_t v9 = a2[1];
    }
    else {
      uint64_t v9 = *(const std::string::value_type **)v7;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *((unsigned __int8 *)v7 + 23);
    }
    else {
      std::string::size_type v10 = *((void *)v7 + 1);
    }
    std::string::append(a4, v9, v10);
    std::string::append(a4, ")");
  }
  else
  {
    int v11 = (*a2)[23];
    if (v11 >= 0) {
      long long v12 = *a2;
    }
    else {
      long long v12 = *(const std::string::value_type **)*a2;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v13 = *((void *)*a2 + 1);
    }
    std::string::append(a4, v12, v13);
  }
  if (a3 != -1)
  {
    std::string::append(a4, "[");
    wireless_diagnostics::google::protobuf::SimpleItoa(a3, v14, __p);
    if ((v19 & 0x80u) == 0) {
      unint64_t v15 = __p;
    }
    else {
      unint64_t v15 = (void **)__p[0];
    }
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v16 = v19;
    }
    else {
      std::string::size_type v16 = (std::string::size_type)__p[1];
    }
    std::string::append(a4, (const std::string::value_type *)v15, v16);
    if ((char)v19 < 0) {
      operator delete(__p[0]);
    }
    std::string::append(a4, "]");
  }
  return std::string::append(a4, ".");
}

void sub_213610810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void wireless_diagnostics::google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(uint64_t *a1, wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v3 = *a1;
  if (v3) {
    MEMORY[0x21668DB40](v3, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(this);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(wireless_diagnostics::google::protobuf::MessageLite *this, const void *a2)
{
  return MEMORY[0x270F9AC10](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParseFromString()
{
  return MEMORY[0x270F9AC18]();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream()
{
  return MEMORY[0x270F9AC28]();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParsePartialFromZeroCopyStream()
{
  return MEMORY[0x270F9AC30]();
}

uint64_t wireless_diagnostics::google::protobuf::StringAppendF()
{
  return MEMORY[0x270F9AC40]();
}

uint64_t wireless_diagnostics::google::protobuf::GoogleOnceInitImpl()
{
  return MEMORY[0x270F9AC48]();
}

uint64_t wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream(wireless_diagnostics::google::protobuf::io::FileInputStream *this)
{
  return MEMORY[0x270F9AC50](this);
}

void wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream(wireless_diagnostics::google::protobuf::io::FileInputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream(wireless_diagnostics::google::protobuf::io::ArrayInputStream *this, const void *a2)
{
  return MEMORY[0x270F9AC60](this, a2);
}

void wireless_diagnostics::google::protobuf::io::ArrayInputStream::~ArrayInputStream(wireless_diagnostics::google::protobuf::io::ArrayInputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadString()
{
  return MEMORY[0x270F9AC70]();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9AC78](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC80](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC88](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC90](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC98](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACA0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACB0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACB8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACC0](this);
}

void wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::FileOutputStream::FileOutputStream(wireless_diagnostics::google::protobuf::io::FileOutputStream *this)
{
  return MEMORY[0x270F9ACD0](this);
}

void wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream(wireless_diagnostics::google::protobuf::io::FileOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACE0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACE8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACF0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, const void *a2, uint64_t a3, unsigned __int8 *a4)
{
  return MEMORY[0x270F9ACF8](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9AD00](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9AD08](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9AD10](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, uint64_t a2, unsigned __int8 *a3)
{
  return MEMORY[0x270F9AD18](this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, uint64_t a2, unsigned __int8 *a3)
{
  return MEMORY[0x270F9AD20](this, a2, a3);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRaw(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, const void *a2)
{
  return MEMORY[0x270F9AD28](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream()
{
  return MEMORY[0x270F9AD30]();
}

void wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::IstreamInputStream::IstreamInputStream()
{
  return MEMORY[0x270F9AD40]();
}

void wireless_diagnostics::google::protobuf::io::IstreamInputStream::~IstreamInputStream(wireless_diagnostics::google::protobuf::io::IstreamInputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::StringOutputStream::StringOutputStream()
{
  return MEMORY[0x270F9AD50]();
}

void wireless_diagnostics::google::protobuf::io::StringOutputStream::~StringOutputStream(wireless_diagnostics::google::protobuf::io::StringOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::io::OstreamOutputStream::OstreamOutputStream()
{
  return MEMORY[0x270F9AD60]();
}

void wireless_diagnostics::google::protobuf::io::OstreamOutputStream::~OstreamOutputStream(wireless_diagnostics::google::protobuf::io::OstreamOutputStream *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::ghtonl(wireless_diagnostics::google::protobuf *this)
{
  return MEMORY[0x270F9AD70](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage()
{
  return MEMORY[0x270F9AD78]();
}

void wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage(wireless_diagnostics::google::protobuf::internal::LogMessage *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<()
{
  return MEMORY[0x270F9AD88]();
}

{
  return MEMORY[0x270F9AD90]();
}

{
  return MEMORY[0x270F9AD98]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=()
{
  return MEMORY[0x270F9ADA8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField()
{
  return MEMORY[0x270F9ADB0]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableString(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, uint64_t a2, uint64_t a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4)
{
  return MEMORY[0x270F9ADD0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MaybeNewExtension(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, uint64_t a2, const wireless_diagnostics::google::protobuf::FieldDescriptor *a3, wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension **a4)
{
  return MEMORY[0x270F9AE08](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableRepeatedString(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9AE28](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9AE38](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Swap(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, wireless_diagnostics::google::protobuf::internal::ExtensionSet *a2)
{
  return MEMORY[0x270F9AE40](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9AE48](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::AddString(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, uint64_t a2, uint64_t a3, const wireless_diagnostics::google::protobuf::FieldDescriptor *a4)
{
  return MEMORY[0x270F9AEA8](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, const wireless_diagnostics::google::protobuf::internal::ExtensionSet *a2)
{
  return MEMORY[0x270F9AEC0](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9AEE0](this);
}

void wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::VerifyVersion(wireless_diagnostics::google::protobuf::internal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  return MEMORY[0x270F9AEF0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString()
{
  return MEMORY[0x270F9AEF8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes()
{
  return MEMORY[0x270F9AF00]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, float a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF08](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteGroup(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF10](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF18](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF20](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, double a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF28](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF30](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF38](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString()
{
  return MEMORY[0x270F9AF40]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF48](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF50](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF58](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF60](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF68](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSFixed32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF70](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSFixed64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF78](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF88](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes()
{
  return MEMORY[0x270F9AF90]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA8](this, a2, a3, a4);
}

void wireless_diagnostics::google::protobuf::internal::ExtensionFinder::~ExtensionFinder(wireless_diagnostics::google::protobuf::internal::ExtensionFinder *this)
{
}

void wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0(wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap()
{
  return MEMORY[0x270F9AFC0]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  return MEMORY[0x270F9AFC8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New(wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *this)
{
  return MEMORY[0x270F9AFD0](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete()
{
  return MEMORY[0x270F9AFD8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::Mutex::AssertHeld(wireless_diagnostics::google::protobuf::internal::Mutex *this)
{
  return MEMORY[0x270F9AFE0](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::Mutex::Lock(wireless_diagnostics::google::protobuf::internal::Mutex *this)
{
  return MEMORY[0x270F9AFE8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::Mutex::Unlock(wireless_diagnostics::google::protobuf::internal::Mutex *this)
{
  return MEMORY[0x270F9AFF0](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::Mutex::Mutex(wireless_diagnostics::google::protobuf::internal::Mutex *this)
{
  return MEMORY[0x270F9AFF8](this);
}

void wireless_diagnostics::google::protobuf::internal::Mutex::~Mutex(wireless_diagnostics::google::protobuf::internal::Mutex *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::AppendToString()
{
  return MEMORY[0x270F9B008]();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeAsString(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  return MEMORY[0x270F9B018](this);
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToString()
{
  return MEMORY[0x270F9B020]();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream()
{
  return MEMORY[0x270F9B028]();
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializePartialToZeroCopyStream()
{
  return MEMORY[0x270F9B030]();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9B038](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetRepeatedEnum(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9B058](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetRepeatedString(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9B080](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9B0A0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetEnum(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9B0B8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize(wireless_diagnostics::google::protobuf::internal::ExtensionSet *this)
{
  return MEMORY[0x270F9B0C0](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension::GetSize(wireless_diagnostics::google::protobuf::internal::ExtensionSet::Extension *this)
{
  return MEMORY[0x270F9B0E8](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::ExtensionSet::GetString()
{
  return MEMORY[0x270F9B100]();
}

std::string::size_type std::string::find(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return MEMORY[0x270F98238](this, __c, __pos);
}

std::string::size_type std::string::rfind(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return MEMORY[0x270F98240](this, __c, __pos);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x270F98428](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x270F98458](__n);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F98480](this, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F98498](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F984A0](this, __s, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F984A8](this, __str, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
  return (std::string *)MEMORY[0x270F984B0](this, __n, __c);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984B8](this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F984C0](this, __s, __n);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984E0](this, __pos, __s);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

void std::string::__grow_by(std::string *this, std::string::size_type __old_cap, std::string::size_type __delta_cap, std::string::size_type __old_sz, std::string::size_type __n_copy, std::string::size_type __n_del, std::string::size_type __n_add)
{
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return (std::string *)MEMORY[0x270F98548](this, __str, __pos, __n, __a);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98560](this, __str);
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x270F98E38]();
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return MEMORY[0x270ED7DA0](lpfunc, obj, lpdso_handle);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_free_exception(void *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x270F98F10](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x270F98F30](lpsrc, lpstype, lpdtype, s2d);
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x270EDA458](__s, *(void *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

int printf(const char *a1, ...)
{
  return MEMORY[0x270EDAD20](a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x270EDB510](__str, __size, __format);
}

int sprintf(char *a1, const char *a2, ...)
{
  return MEMORY[0x270EDB530](a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x270EDB5A8](__s, *(void *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

char *__cdecl strpbrk(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x270EDB668](__s1, __s2);
}

double strtod(const char *a1, char **a2)
{
  MEMORY[0x270EDB6A8](a1, a2);
  return result;
}

float strtof(const char *a1, char **a2)
{
  MEMORY[0x270EDB6B8](a1, a2);
  return result;
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB6D8](__str, __endptr, *(void *)&__base);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB6E8](__str, __endptr, *(void *)&__base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB708](__str, __endptr, *(void *)&__base);
}