void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::string *v4;
  std::string *begin;
  std::string *end;
  std::string *value;

  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

void *__swift_project_boxed_opaque_existential_1Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void *std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__find_equal<std::string>(uint64_t a1, void *a2, void **a3)
{
  v5 = (void *)(a1 + 8);
  v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = v4 + 4;
        if ((std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a3, (void **)v4 + 4) & 0x80) == 0) {
          break;
        }
        v4 = (void *)*v7;
        v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if ((std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v8, a3) & 0x80) == 0) {
        break;
      }
      v5 = v7 + 1;
      v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::destroy(a1, *(void *)a2);
    std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::destroy(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  v6 = (uint64_t **)std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__find_equal<std::string>(a1, a2, &v10, &v9, a3);
  __n128 result = *v6;
  if (!*v6)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__insert_node_at(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

void **std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__find_equal<std::string>(void *a1, uint64_t a2, void ***a3, uint64_t *a4, void **a5)
{
  uint64_t v9 = (void **)(a1 + 1);
  if (a1 + 1 == (void *)a2
    || (std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a5, (void **)(a2 + 32)) & 0x80) != 0)
  {
    if (*a1 == a2)
    {
      v12 = (void *)a2;
    }
    else
    {
      v11 = *(void **)a2;
      if (*(void *)a2)
      {
        do
        {
          v12 = v11;
          v11 = (void *)v11[1];
        }
        while (v11);
      }
      else
      {
        v16 = (void *)a2;
        do
        {
          v12 = (void *)v16[2];
          BOOL v17 = *v12 == (void)v16;
          v16 = v12;
        }
        while (v17);
      }
      if ((std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v12 + 4, a5) & 0x80) == 0) {
        goto LABEL_17;
      }
    }
    if (*(void *)a2)
    {
      *a3 = (void **)v12;
      return (void **)(v12 + 1);
    }
    else
    {
      *a3 = (void **)a2;
      return (void **)a2;
    }
  }
  if ((std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((void *)(a2 + 32), a5) & 0x80) == 0)
  {
    *a3 = (void **)a2;
    *a4 = a2;
    return (void **)a4;
  }
  a4 = (uint64_t *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    v14 = *(void ***)(a2 + 8);
    do
    {
      v15 = v14;
      v14 = (void **)*v14;
    }
    while (v14);
  }
  else
  {
    v19 = (void **)a2;
    do
    {
      v15 = (void **)v19[2];
      BOOL v17 = *v15 == v19;
      v19 = v15;
    }
    while (!v17);
  }
  if (v15 == v9)
  {
LABEL_29:
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (void **)a2;
    }
    return (void **)a4;
  }
  if ((std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a5, v15 + 4) & 0x80) != 0)
  {
    uint64_t v13 = *a4;
    goto LABEL_29;
  }
LABEL_17:

  return (void **)std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__find_equal<std::string>((uint64_t)a1, a3, a5);
}

uint64_t *std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  __n128 result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

void OVM::InterpreterImpl::RunSubroutine(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  long long v8 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(a1[6], (void **)a2);
  if ((void **)(a1[6] + 8) == v8)
  {
    *((unsigned char *)&v20.__r_.__value_.__s + 23) = 17;
    strcpy((char *)&v20, "No script named <");
    int v10 = *(char *)(a2 + 23);
    if (v10 >= 0) {
      v11 = (const std::string::value_type *)a2;
    }
    else {
      v11 = *(const std::string::value_type **)a2;
    }
    if (v10 >= 0) {
      std::string::size_type v12 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v12 = *(void *)(a2 + 8);
    }
    uint64_t v13 = std::string::append(&v20, v11, v12);
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v21.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    v15 = std::string::append(&v21, "> found", 7uLL);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    std::string::size_type v23 = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    OVM::Error::Error<>((std::string **)&v25, (uint64_t)__p);
    uint64_t v17 = v26;
    long long v18 = v25;
    uint64_t v26 = 0;
    long long v25 = 0uLL;
    v27 = (void **)&v25;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v27);
    *(_OWORD *)a4 = v18;
    *(void *)(a4 + 16) = v17;
    memset(v24, 0, 24);
    *(unsigned char *)(a4 + 24) = 0;
    *(void *)&long long v25 = v24;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v25);
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v9 = (std::__shared_weak_count *)v8[8];
    v19[0] = (uint64_t *)v8[7];
    v19[1] = (uint64_t *)v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    OVM::InterpreterImpl::RunSubroutine((OVM::InterpreterImpl *)a1, v19, a3, &v25);
    *(_OWORD *)a4 = v25;
    *(void *)(a4 + 16) = v26;
    *(unsigned char *)(a4 + 24) = 1;
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
  }
}

void sub_1CA554954(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA5549A0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,std::string *a21,long long a22)
{
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (a2 == 1)
  {
    v28 = __cxa_begin_catch(a1);
    a13 = (*(uint64_t (**)(void *))(*(void *)v28 + 16))(v28);
    a21 = (std::string *)operator new(0x19uLL);
    a22 = xmmword_1CA600A40;
    strcpy((char *)a21, "While executing script ");
    int v29 = *(char *)(v23 + 23);
    if (v29 >= 0) {
      v30 = (const std::string::value_type *)v23;
    }
    else {
      v30 = *(const std::string::value_type **)v23;
    }
    if (v29 >= 0) {
      std::string::size_type v31 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      std::string::size_type v31 = *(void *)(v23 + 8);
    }
    v32 = std::string::append((std::string *)&a21, v30, v31);
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    *(void *)(v25 - 96) = *((void *)&v32->__r_.__value_.__l + 2);
    *(_OWORD *)(v25 - 112) = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    OVM::Error::Unexpected<char const*,std::string>((char **)&a13, (long long *)(v25 - 112), v25 - 80);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v25 - 80);
    *(void *)(v22 + 16) = *(void *)(v25 - 64);
    *(void *)(v25 - 72) = 0;
    *(void *)(v25 - 64) = 0;
    *(void *)(v25 - 80) = 0;
    *(unsigned char *)(v22 + 24) = 0;
    a17 = v25 - 80;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a17);
    if (*(char *)(v25 - 89) < 0) {
      operator delete(*(void **)(v25 - 112));
    }
    if (SHIBYTE(a22) < 0) {
      operator delete(a21);
    }
    __cxa_end_catch();
    JUMPOUT(0x1CA55493CLL);
  }
  JUMPOUT(0x1CA554998);
}

void sub_1CA554ABC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (*(char *)(v26 - 89) < 0) {
    operator delete(*(void **)(v26 - 112));
  }
  if (a26 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x1CA554998);
}

uint64_t OVM::InterpreterImpl::RunSubroutine@<X0>(OVM::InterpreterImpl *a1@<X0>, uint64_t **a2@<X1>, uint64_t *a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v6 = **a2;
  unint64_t v7 = ((*a2)[1] - v6) >> 5;
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  if (v7 != 0xAAAAAAAAAAAAAAABLL * ((v8 - *a3) >> 3))
  {
    exception = __cxa_allocate_exception(0x10uLL);
    StringUtil::Format((StringUtil *)"Expected %zu parameters but passed %zu", __p, ((*a2)[1] - **a2) >> 5, 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3));
    MEMORY[0x1CB7988B0](exception, __p);
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (v8 != v9)
  {
    unint64_t v11 = 0;
    unint64_t v12 = 0;
    do
    {
      uint64_t v13 = *(unsigned int *)(v9 + 24 * v11);
      if (*(_DWORD *)(v6 + 32 * v11) != v13)
      {
        uint64_t v27 = v6 + 32 * v11;
        v28 = (void *)(v27 + 8);
        if (*(char *)(v27 + 31) < 0) {
          v28 = (void *)*v28;
        }
        StringUtil::Format((StringUtil *)"Parameter %u (%s) expected type %d, got type %d", __p, v12, v28, *(unsigned int *)(v6 + 32 * v11), v13);
        int v29 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1CB7988B0](v29, __p);
        __cxa_throw(v29, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      unint64_t v11 = (v12 + 1);
      unint64_t v12 = v11;
    }
    while (v7 > v11);
  }
  std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::emplace_back<>(a1);
  uint64_t v14 = *a3;
  if (a3[1] != *a3)
  {
    uint64_t v15 = 0;
    unsigned int v16 = 1;
    do
    {
      uint64_t v17 = (long long *)(v14 + 24 * v15);
      long long v18 = (char *)operator new(0x30uLL);
      *((void *)v18 + 1) = 0;
      *((void *)v18 + 2) = 0;
      *(void *)long long v18 = &unk_1F24D2FD0;
      long long v19 = *v17;
      *((void *)v18 + 5) = *((void *)v17 + 2);
      *(_OWORD *)(v18 + 24) = v19;
      unint64_t v20 = *((void *)a1 + 5) + *((void *)a1 + 4) - 1;
      std::string v21 = (uint64_t **)(*(void *)(*((void *)a1 + 1) + 8 * (v20 / 0xAA)) + 24 * (v20 % 0xAA));
      __p[0] = (void *)(**a2 + 32 * v15 + 8);
      uint64_t v22 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v21, (void **)__p[0], (uint64_t)&std::piecewise_construct, (long long **)__p);
      uint64_t v23 = (std::__shared_weak_count *)v22[8];
      v22[7] = (uint64_t)(v18 + 24);
      v22[8] = (uint64_t)v18;
      if (v23) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v23);
      }
      uint64_t v15 = v16;
      uint64_t v14 = *a3;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3) > v16++);
  }
  *a4 = 1;
  a4[4] = 0;
  uint64_t v25 = (const OVM::Expression ***)(*a2)[3];
  uint64_t v26 = (const OVM::Expression ***)(*a2)[4];
  while (v25 != v26)
  {
    OVM::InterpreterImpl::Evaluate(a1, *v25, &v33);
    if (v34) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v34);
    }
    ++v25;
  }
  return std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::pop_back(a1);
}

void sub_1CA554E54()
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v0);
  JUMPOUT(0x1CA554E60);
}

void OVM::Error::Unexpected<char const*,std::string>(char **a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, *a1);
  OVM::Error::Error<std::string>((uint64_t *)&v7, (uint64_t)__p, a2);
  *(_OWORD *)a3 = v7;
  *(void *)(a3 + 16) = v8;
  uint64_t v8 = 0;
  long long v7 = 0uLL;
  uint64_t v9 = (void **)&v7;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v9);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA554EF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void __clang_call_terminate(void *a1)
{
}

void StringUtil::Format(StringUtil *this@<X0>, void *a2@<X8>, ...)
{
  va_start(va, a2);
  __s = 0;
  vasprintf(&__s, (const char *)this, va);
  if (__s)
  {
    std::string::basic_string[abi:ne180100]<0>(a2, __s);
    free(__s);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "<FAILED TO VASPRINTF>");
  }
}

void OVM::InterpreterImpl::Evaluate(OVM::InterpreterImpl *this@<X0>, const OVM::Expression **a2@<X1>, void *a3@<X8>)
{
  switch(*((_DWORD *)a2 + 2))
  {
    case 0:
      OVM::InterpreterImpl::Evaluate(this, a2, a3);
      return;
    case 1:
      OVM::InterpreterImpl::Evaluate(this, (void **)a2, a3);
      return;
    case 2:
      OVM::InterpreterImpl::Evaluate(this, a2, a3);
      return;
    case 3:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::ObjCClass *)a2, a3);
      return;
    case 4:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::FunctionCall *)a2, a3);
      return;
    case 5:
      OVM::InterpreterImpl::Evaluate(this, a2);
    case 6:
      OVM::InterpreterImpl::Evaluate(this, a2, a3);
      return;
    case 7:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::Loop *)a2, a3);
      return;
    case 8:
      OVM::InterpreterImpl::Evaluate((const OVM::StringLiteral *)a2, a3);
      return;
    case 9:
      long long v5 = operator new(0x30uLL);
      v5[1] = 0;
      v5[2] = 0;
      void *v5 = &unk_1F24D2FD0;
      v5[4] = a2[2];
      *((_DWORD *)v5 + 10) = 1;
      a3[1] = v5;
      *((_DWORD *)v5 + 6) = 2;
      char v6 = (char *)(v5 + 3);
      goto LABEL_40;
    case 0xA:
      OVM::InterpreterImpl::Evaluate(this, a2, a3);
      return;
    case 0xB:
      OVM::InterpreterImpl::Evaluate(this, a2, a3);
      return;
    case 0xC:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::DictionaryLiteral *)a2, a3);
      return;
    case 0xD:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::ArrayLiteral *)a2, a3);
      return;
    case 0xE:
      long long v7 = operator new(0x30uLL);
      v7[1] = 0;
      v7[2] = 0;
      void *v7 = &unk_1F24D2FD0;
      v7[4] = 0;
      *((_DWORD *)v7 + 10) = 2;
      a3[1] = v7;
      *((_DWORD *)v7 + 6) = 3;
      char v6 = (char *)(v7 + 3);
LABEL_40:
      *a3 = v6;
      break;
    case 0xF:
      OVM::InterpreterImpl::Evaluate(this, (const OVM::CompoundExpression *)a2);
      break;
    default:
      printf("EVALUATE %d\n", *((_DWORD *)a2 + 2));
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1CB7988A0](exception, ":shrug:");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
}

{
  uint64_t *v6;
  char *v7;
  unint64_t v8;
  long long *v9;
  void **v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  char *v17;
  long long v18;
  uint64_t *v19;
  std::__shared_weak_count *v20;
  void *exception;
  void *v22;
  long long *v23[3];
  unsigned int *v24;
  std::__shared_weak_count *v25;

  char v6 = (uint64_t *)(a2 + 6);
  if (a2[6])
  {
    OVM::InterpreterImpl::Evaluate(this, a2 + 6);
  }
  else
  {
    long long v7 = (char *)operator new(0x30uLL);
    *((void *)v7 + 1) = 0;
    *((void *)v7 + 2) = 0;
    *(void *)long long v7 = &unk_1F24D2FD0;
    *((_DWORD *)v7 + 10) = 0;
    uint64_t v25 = (std::__shared_weak_count *)v7;
    *((_DWORD *)v7 + 6) = 1;
    v24 = (unsigned int *)(v7 + 24);
  }
  uint64_t v8 = *((void *)this + 5) + *((void *)this + 4) - 1;
  uint64_t v9 = (long long *)(a2 + 2);
  int v10 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(*(void *)(*((void *)this + 1) + 8 * (v8 / 0xAA)) + 24 * (v8 % 0xAA), (void **)a2 + 2);
  unint64_t v11 = *((void *)this + 5) + *((void *)this + 4) - 1;
  unint64_t v12 = *(void *)(*((void *)this + 1) + 8 * (v11 / 0xAA));
  uint64_t v13 = v11 % 0xAA;
  if ((void **)(v12 + 24 * (v11 % 0xAA) + 8) != v10)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    MEMORY[0x1CB7988B0](exception, v23);
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v14 = *v6;
  uint64_t v15 = v24;
  if (v14)
  {
    unsigned int v16 = *((unsigned int *)a2 + 10);
    if (*v24 != v16)
    {
      if (*((char *)a2 + 39) < 0) {
        uint64_t v9 = *(long long **)v9;
      }
      StringUtil::Format((StringUtil *)"Initializing expr for variable %s is %d expected %d", v23, v9, *v24, v16);
      uint64_t v22 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1CB7988B0](v22, v23);
      __cxa_throw(v22, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  uint64_t v17 = (char *)operator new(0x30uLL);
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = 0;
  *(void *)uint64_t v17 = &unk_1F24D2FD0;
  long long v18 = *(_OWORD *)v15;
  *((void *)v17 + 5) = *((void *)v15 + 2);
  *(_OWORD *)(v17 + 24) = v18;
  v23[0] = v9;
  long long v19 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)(v12 + 24 * v13), (void **)v9, (uint64_t)&std::piecewise_construct, v23);
  unint64_t v20 = (std::__shared_weak_count *)v19[8];
  v19[7] = (uint64_t)(v17 + 24);
  v19[8] = (uint64_t)v17;
  if (!v20)
  {
    *a3 = v17 + 24;
    a3[1] = v17;
    goto LABEL_11;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  uint64_t v17 = (char *)v19[8];
  *a3 = v19[7];
  a3[1] = v17;
  if (v17) {
LABEL_11:
  }
    atomic_fetch_add_explicit((atomic_ullong *volatile)v17 + 1, 1uLL, memory_order_relaxed);
  if (v25) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v25);
  }
}

{
  void *v6;
  const OVM::Expression **v7;
  const OVM::Expression **i;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  const char **v17;
  const char *v18;
  const char *Uid;
  uint64_t v20;
  id v21;
  id v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  std::__shared_weak_count *v55;
  std::__shared_weak_count *v56;
  std::__shared_weak_count *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  uint64_t v64;
  std::__shared_weak_count *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  std::__shared_weak_count *v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  std::__shared_weak_count *v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  std::__shared_weak_count *v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  std::__shared_weak_count *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  std::__shared_weak_count *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  uint64_t v108;
  std::__shared_weak_count *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  std::__shared_weak_count *v112;
  void *v113;
  char *v114;
  int v115;
  std::__shared_weak_count *v116;
  std::__shared_weak_count *v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  uint64_t v120;
  std::__shared_weak_count *v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  uint64_t v124;
  std::__shared_weak_count *v125;
  std::__shared_weak_count *v126;
  uint64_t v127;
  std::__shared_weak_count *v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  uint64_t v133;
  std::__shared_weak_count *v134;
  std::__shared_weak_count *v135;
  uint64_t v136;
  std::__shared_weak_count *v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  uint64_t v142;
  std::__shared_weak_count *v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  std::__shared_weak_count *v146;
  uint64_t v147;
  std::__shared_weak_count *v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  uint64_t v151;
  std::__shared_weak_count *v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  std::__shared_weak_count *v157;
  uint64_t v158;
  std::__shared_weak_count *v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  uint64_t v162;
  std::__shared_weak_count *v163;
  uint64_t v164;
  std::__shared_weak_count *v165;
  uint64_t v166;
  std::__shared_weak_count *v167;
  uint64_t v168;
  std::__shared_weak_count *v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  std::__shared_weak_count *v172;
  std::__shared_weak_count *v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  uint64_t v176;
  std::__shared_weak_count *v177;
  uint64_t v178;
  std::__shared_weak_count *v179;
  uint64_t v180;
  std::__shared_weak_count *v181;
  uint64_t v182;
  std::__shared_weak_count *v183;
  uint64_t v184;
  std::__shared_weak_count *v185;
  void *exception;
  void *v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  std::__shared_weak_count *v194;
  uint64_t v195;
  std::__shared_weak_count *v196;
  uint64_t v197;
  std::__shared_weak_count *v198;
  uint64_t v199;
  std::__shared_weak_count *v200;
  uint64_t v201;
  std::__shared_weak_count *v202;
  uint64_t v203;
  std::__shared_weak_count *v204;
  uint64_t v205;
  std::__shared_weak_count *v206;
  uint64_t v207;
  std::__shared_weak_count *v208;
  uint64_t v209;
  std::__shared_weak_count *v210;
  uint64_t v211;
  std::__shared_weak_count *v212;
  uint64_t v213;
  std::__shared_weak_count *v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  uint64_t v217;
  std::__shared_weak_count *v218;
  uint64_t v219;
  std::__shared_weak_count *v220;
  uint64_t v221;
  std::__shared_weak_count *v222;
  uint64_t v223;
  std::__shared_weak_count *v224;
  uint64_t v225;
  std::__shared_weak_count *v226;
  uint64_t v227;
  std::__shared_weak_count *v228;
  uint64_t v229;
  std::__shared_weak_count *v230;
  uint64_t v231;
  std::__shared_weak_count *v232;
  uint64_t v233;
  std::__shared_weak_count *v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  uint64_t v239;
  std::__shared_weak_count *v240;
  uint64_t v241;
  std::__shared_weak_count *v242;
  uint64_t v243;
  std::__shared_weak_count *v244;
  uint64_t v245;
  std::__shared_weak_count *v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  uint64_t v249;
  std::__shared_weak_count *v250;
  uint64_t v251;
  std::__shared_weak_count *v252;
  uint64_t v253;
  std::__shared_weak_count *v254;
  uint64_t v255;
  std::__shared_weak_count *v256;
  uint64_t v257;
  std::__shared_weak_count *v258;
  uint64_t v259;
  std::__shared_weak_count *v260;
  uint64_t v261;
  std::__shared_weak_count *v262;
  uint64_t v263;
  std::__shared_weak_count *v264;
  uint64_t v265;
  std::__shared_weak_count *v266;
  uint64_t v267;
  std::__shared_weak_count *v268;
  uint64_t v269;
  std::__shared_weak_count *v270;
  uint64_t v271;
  std::__shared_weak_count *v272;
  uint64_t v273;
  std::__shared_weak_count *v274;
  uint64_t v275;
  std::__shared_weak_count *v276;
  uint64_t v277;
  std::__shared_weak_count *v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  uint64_t v281;
  std::__shared_weak_count *v282;
  uint64_t v283;
  std::__shared_weak_count *v284;
  uint64_t v285;
  std::__shared_weak_count *v286;
  uint64_t v287;
  std::__shared_weak_count *v288;
  uint64_t v289;
  std::__shared_weak_count *v290;
  uint64_t v291;
  std::__shared_weak_count *v292;
  uint64_t v293;
  std::__shared_weak_count *v294;
  uint64_t v295;
  std::__shared_weak_count *v296;
  uint64_t v297;
  std::__shared_weak_count *v298;
  uint64_t v299;
  std::__shared_weak_count *v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  uint64_t v303;
  std::__shared_weak_count *v304;
  uint64_t v305;
  std::__shared_weak_count *v306;
  uint64_t v307;
  std::__shared_weak_count *v308;
  uint64_t v309;
  std::__shared_weak_count *v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  uint64_t v313;
  std::__shared_weak_count *v314;
  uint64_t v315;
  std::__shared_weak_count *v316;
  uint64_t v317;
  std::__shared_weak_count *v318;
  uint64_t v319;
  std::__shared_weak_count *v320;
  uint64_t v321;
  std::__shared_weak_count *v322;
  uint64_t v323;
  std::__shared_weak_count *v324;
  uint64_t v325;
  std::__shared_weak_count *v326;
  uint64_t v327;
  std::__shared_weak_count *v328;
  uint64_t v329;
  std::__shared_weak_count *v330;
  uint64_t v331;
  std::__shared_weak_count *v332;
  uint64_t v333;
  std::__shared_weak_count *v334;
  uint64_t v335;
  std::__shared_weak_count *v336;
  uint64_t v337;
  std::__shared_weak_count *v338;
  uint64_t v339;
  std::__shared_weak_count *v340;
  uint64_t v341;
  std::__shared_weak_count *v342;
  uint64_t v343;
  std::__shared_weak_count *v344;
  uint64_t v345;
  std::__shared_weak_count *v346;
  uint64_t v347;
  std::__shared_weak_count *v348;
  uint64_t v349;
  std::__shared_weak_count *v350;
  uint64_t v351;
  std::__shared_weak_count *v352;
  uint64_t v353;
  std::__shared_weak_count *v354;
  uint64_t v355;
  std::__shared_weak_count *v356;
  uint64_t v357;
  std::__shared_weak_count *v358;
  uint64_t v359;
  std::__shared_weak_count *v360;
  uint64_t v361;
  std::__shared_weak_count *v362;
  uint64_t v363;
  std::__shared_weak_count *v364;
  uint64_t v365;
  std::__shared_weak_count *v366;
  uint64_t v367;
  std::__shared_weak_count *v368;
  uint64_t v369;
  std::__shared_weak_count *v370;
  uint64_t v371;
  std::__shared_weak_count *v372;
  long long v373;
  char *v374;
  char *v375;
  unint64_t v376;
  uint64_t v377;
  std::__shared_weak_count *v378;
  void *v379[6];

  OVM::InterpreterImpl::Evaluate(this, a2 + 2);
  if (*(_DWORD *)v377 != 3)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1CB7988A0](exception, "Attempting to send to a non NSObj");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (*(_DWORD *)(v377 + 16) != 2) {
    std::__throw_bad_variant_access[abi:ne180100]();
  }
  char v6 = *(void **)(v377 + 8);
  v374 = 0;
  v375 = 0;
  v376 = 0;
  long long v7 = (const OVM::Expression **)a2[3];
  for (i = (const OVM::Expression **)a2[4]; v7 != i; ++v7)
  {
    OVM::InterpreterImpl::Evaluate(this, v7);
    uint64_t v9 = v375;
    if ((unint64_t)v375 >= v376)
    {
      unint64_t v11 = (v375 - v374) >> 4;
      if ((unint64_t)(v11 + 1) >> 60) {
        std::vector<std::string>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v12 = (uint64_t)(v376 - (void)v374) >> 3;
      if (v12 <= v11 + 1) {
        unint64_t v12 = v11 + 1;
      }
      if (v376 - (unint64_t)v374 >= 0x7FFFFFFFFFFFFFF0) {
        uint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v13 = v12;
      }
      v379[4] = &v376;
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<OVM::Var>>>((uint64_t)&v376, v13);
      uint64_t v15 = &v14[16 * v11];
      v379[0] = v14;
      v379[1] = v15;
      v379[3] = &v14[16 * v16];
      *(_OWORD *)uint64_t v15 = v373;
      v373 = 0uLL;
      v379[2] = v15 + 16;
      std::vector<std::shared_ptr<OVM::Var>>::__swap_out_circular_buffer((uint64_t *)&v374, v379);
      int v10 = v375;
      std::__split_buffer<std::shared_ptr<OVM::Var>>::~__split_buffer(v379);
    }
    else
    {
      *(_OWORD *)v375 = v373;
      int v10 = v9 + 16;
    }
    v375 = v10;
  }
  uint64_t v17 = (const char **)(a2 + 7);
  long long v18 = (const char *)(a2 + 7);
  if (*((char *)a2 + 79) < 0) {
    long long v18 = *v17;
  }
  Uid = sel_getUid(v18);
  unint64_t v20 = (v375 - v374) >> 4;
  if (*((_DWORD *)a2 + 12) == 3)
  {
    switch(v20)
    {
      case 0:
        std::string v21 = [v6 Uid];
        goto LABEL_225;
      case 1:
        v112 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v371 = *(void *)v374;
        v372 = v112;
        if (v112) {
          atomic_fetch_add_explicit(&v112->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v371)];
        v30 = v372;
        if (v372) {
          goto LABEL_224;
        }
        goto LABEL_225;
      case 2:
        v70 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v369 = *(void *)v374;
        v370 = v70;
        if (v70) {
          atomic_fetch_add_explicit(&v70->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v71 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v369);
        v72 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v367 = *((void *)v374 + 2);
        v368 = v72;
        if (v72) {
          atomic_fetch_add_explicit(&v72->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v71 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v367)];
        if (v368) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v368);
        }
        v30 = v370;
        if (!v370) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 3:
        v76 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v365 = *(void *)v374;
        v366 = v76;
        if (v76) {
          atomic_fetch_add_explicit(&v76->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v77 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v365);
        v78 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v363 = *((void *)v374 + 2);
        v364 = v78;
        if (v78) {
          atomic_fetch_add_explicit(&v78->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v79 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v363);
        v80 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v361 = *((void *)v374 + 4);
        v362 = v80;
        if (v80) {
          atomic_fetch_add_explicit(&v80->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v77 v79:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v361)];
        if (v362) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v362);
        }
        if (v364) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v364);
        }
        v30 = v366;
        if (!v366) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 4:
        uint64_t v23 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v359 = *(void *)v374;
        v360 = v23;
        if (v23) {
          atomic_fetch_add_explicit(&v23->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v24 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v359);
        uint64_t v25 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v357 = *((void *)v374 + 2);
        v358 = v25;
        if (v25) {
          atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v26 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v357);
        uint64_t v27 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v355 = *((void *)v374 + 4);
        v356 = v27;
        if (v27) {
          atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v28 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v355);
        int v29 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v353 = *((void *)v374 + 6);
        v354 = v29;
        if (v29) {
          atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v24 v26:v28 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v353)];
        if (v354) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v354);
        }
        if (v356) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v356);
        }
        if (v358) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v358);
        }
        v30 = v360;
        if (!v360) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 5:
        v117 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v351 = *(void *)v374;
        v352 = v117;
        if (v117) {
          atomic_fetch_add_explicit(&v117->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v118 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v351);
        v119 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v349 = *((void *)v374 + 2);
        v350 = v119;
        if (v119) {
          atomic_fetch_add_explicit(&v119->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v120 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v349);
        v121 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v347 = *((void *)v374 + 4);
        v348 = v121;
        if (v121) {
          atomic_fetch_add_explicit(&v121->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v122 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v347);
        v123 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v345 = *((void *)v374 + 6);
        v346 = v123;
        if (v123) {
          atomic_fetch_add_explicit(&v123->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v124 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v345);
        v125 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v343 = *((void *)v374 + 8);
        v344 = v125;
        if (v125) {
          atomic_fetch_add_explicit(&v125->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v118 v120:v122 v124:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v343)];
        if (v344) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v344);
        }
        if (v346) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v346);
        }
        if (v348) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v348);
        }
        if (v350) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v350);
        }
        v30 = v352;
        if (!v352) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 6:
        v135 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v341 = *(void *)v374;
        v342 = v135;
        if (v135) {
          atomic_fetch_add_explicit(&v135->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v136 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v341);
        v137 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v339 = *((void *)v374 + 2);
        v340 = v137;
        if (v137) {
          atomic_fetch_add_explicit(&v137->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v138 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v339);
        v139 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v337 = *((void *)v374 + 4);
        v338 = v139;
        if (v139) {
          atomic_fetch_add_explicit(&v139->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v140 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v337);
        v141 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v335 = *((void *)v374 + 6);
        v336 = v141;
        if (v141) {
          atomic_fetch_add_explicit(&v141->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v142 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v335);
        v143 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v333 = *((void *)v374 + 8);
        v334 = v143;
        if (v143) {
          atomic_fetch_add_explicit(&v143->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v144 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v333);
        v145 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v331 = *((void *)v374 + 10);
        v332 = v145;
        if (v145) {
          atomic_fetch_add_explicit(&v145->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v136 v138 v140 v142 v144 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v331)];
        if (v332) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v332);
        }
        if (v334) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v334);
        }
        if (v336) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v336);
        }
        if (v338) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v338);
        }
        if (v340) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v340);
        }
        v30 = v342;
        if (!v342) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 7:
        v86 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v329 = *(void *)v374;
        v330 = v86;
        if (v86) {
          atomic_fetch_add_explicit(&v86->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v87 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v329);
        v88 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v327 = *((void *)v374 + 2);
        v328 = v88;
        if (v88) {
          atomic_fetch_add_explicit(&v88->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v89 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v327);
        v90 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v325 = *((void *)v374 + 4);
        v326 = v90;
        if (v90) {
          atomic_fetch_add_explicit(&v90->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v91 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v325);
        v92 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v323 = *((void *)v374 + 6);
        v324 = v92;
        if (v92) {
          atomic_fetch_add_explicit(&v92->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v93 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v323);
        v94 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v321 = *((void *)v374 + 8);
        v322 = v94;
        if (v94) {
          atomic_fetch_add_explicit(&v94->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v95 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v321);
        v96 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v319 = *((void *)v374 + 10);
        v320 = v96;
        if (v96) {
          atomic_fetch_add_explicit(&v96->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v97 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v319);
        v98 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v317 = *((void *)v374 + 12);
        v318 = v98;
        if (v98) {
          atomic_fetch_add_explicit(&v98->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v87 v89:v91 v93:v95 v97:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v317)];
        if (v318) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v318);
        }
        if (v320) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v320);
        }
        if (v322) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v322);
        }
        if (v324) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v324);
        }
        if (v326) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v326);
        }
        if (v328) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v328);
        }
        v30 = v330;
        if (!v330) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 8:
        v157 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v315 = *(void *)v374;
        v316 = v157;
        if (v157) {
          atomic_fetch_add_explicit(&v157->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v158 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v315);
        v159 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v313 = *((void *)v374 + 2);
        v314 = v159;
        if (v159) {
          atomic_fetch_add_explicit(&v159->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v160 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v313);
        v161 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v311 = *((void *)v374 + 4);
        v312 = v161;
        if (v161) {
          atomic_fetch_add_explicit(&v161->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v162 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v311);
        v163 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v309 = *((void *)v374 + 6);
        v310 = v163;
        if (v163) {
          atomic_fetch_add_explicit(&v163->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v164 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v309);
        v165 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v307 = *((void *)v374 + 8);
        v308 = v165;
        if (v165) {
          atomic_fetch_add_explicit(&v165->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v166 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v307);
        v167 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v305 = *((void *)v374 + 10);
        v306 = v167;
        if (v167) {
          atomic_fetch_add_explicit(&v167->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v168 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v305);
        v169 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v303 = *((void *)v374 + 12);
        v304 = v169;
        if (v169) {
          atomic_fetch_add_explicit(&v169->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v170 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v303);
        v171 = (std::__shared_weak_count *)*((void *)v374 + 15);
        v301 = *((void *)v374 + 14);
        v302 = v171;
        if (v171) {
          atomic_fetch_add_explicit(&v171->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v158 v160 v162 v164 v166 v168 v170 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v301)];
        if (v302) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v302);
        }
        if (v304) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v304);
        }
        if (v306) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v306);
        }
        if (v308) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v308);
        }
        if (v310) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v310);
        }
        if (v312) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v312);
        }
        if (v314) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v314);
        }
        v30 = v316;
        if (!v316) {
          goto LABEL_225;
        }
        goto LABEL_224;
      case 9:
        v39 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v299 = *(void *)v374;
        v300 = v39;
        if (v39) {
          atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v190 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v299);
        v40 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v297 = *((void *)v374 + 2);
        v298 = v40;
        if (v40) {
          atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v41 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v297);
        v42 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v295 = *((void *)v374 + 4);
        v296 = v42;
        if (v42) {
          atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v43 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v295);
        v44 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v293 = *((void *)v374 + 6);
        v294 = v44;
        if (v44) {
          atomic_fetch_add_explicit(&v44->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v45 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v293);
        v46 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v291 = *((void *)v374 + 8);
        v292 = v46;
        if (v46) {
          atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v47 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v291);
        v48 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v289 = *((void *)v374 + 10);
        v290 = v48;
        if (v48) {
          atomic_fetch_add_explicit(&v48->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v49 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v289);
        v50 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v287 = *((void *)v374 + 12);
        v288 = v50;
        if (v50) {
          atomic_fetch_add_explicit(&v50->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v51 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v287);
        v52 = (std::__shared_weak_count *)*((void *)v374 + 15);
        v285 = *((void *)v374 + 14);
        v286 = v52;
        if (v52) {
          atomic_fetch_add_explicit(&v52->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v53 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v285);
        v54 = (std::__shared_weak_count *)*((void *)v374 + 17);
        v283 = *((void *)v374 + 16);
        v284 = v54;
        if (v54) {
          atomic_fetch_add_explicit(&v54->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string v21 = [v6 Uid:v190 v41:v43 v45:v47 v49:v51 v53:v53 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v283)];
        if (v284) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v284);
        }
        if (v286) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v286);
        }
        if (v288) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v288);
        }
        if (v290) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v290);
        }
        if (v292) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v292);
        }
        if (v294) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v294);
        }
        if (v296) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v296);
        }
        if (v298) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v298);
        }
        v30 = v300;
        if (!v300) {
          goto LABEL_225;
        }
LABEL_224:
        std::__shared_weak_count::__release_shared[abi:ne180100](v30);
LABEL_225:
        v113 = operator new(0x30uLL);
        v113[1] = 0;
        v113[2] = 0;
        *v113 = &unk_1F24D2FD0;
        *((_DWORD *)v113 + 6) = 3;
        v114 = (char *)(v113 + 3);
        v113[4] = v21;
        v115 = 2;
        break;
      default:
        v187 = __cxa_allocate_exception(0x10uLL);
        if (*((char *)a2 + 79) < 0) {
          uint64_t v17 = (const char **)*v17;
        }
        StringUtil::Format((StringUtil *)"Arity %s %zu too high for me", v379, v17, (v375 - v374) >> 4);
        MEMORY[0x1CB7988B0](v187, v379);
        __cxa_throw(v187, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  else
  {
    switch(v20)
    {
      case 0:
        uint64_t v22 = [v6 Uid];
        goto LABEL_230;
      case 1:
        v116 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v281 = *(void *)v374;
        v282 = v116;
        if (v116) {
          atomic_fetch_add_explicit(&v116->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v281)];
        v38 = v282;
        if (v282) {
          goto LABEL_229;
        }
        goto LABEL_230;
      case 2:
        v73 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v279 = *(void *)v374;
        v280 = v73;
        if (v73) {
          atomic_fetch_add_explicit(&v73->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v74 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v279);
        v75 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v277 = *((void *)v374 + 2);
        v278 = v75;
        if (v75) {
          atomic_fetch_add_explicit(&v75->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v74 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v277)];
        if (v278) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v278);
        }
        v38 = v280;
        if (!v280) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 3:
        v81 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v275 = *(void *)v374;
        v276 = v81;
        if (v81) {
          atomic_fetch_add_explicit(&v81->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v82 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v275);
        v83 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v273 = *((void *)v374 + 2);
        v274 = v83;
        if (v83) {
          atomic_fetch_add_explicit(&v83->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v84 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v273);
        v85 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v271 = *((void *)v374 + 4);
        v272 = v85;
        if (v85) {
          atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v82 v84:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v271)];
        if (v272) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v272);
        }
        if (v274) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v274);
        }
        v38 = v276;
        if (!v276) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 4:
        std::string::size_type v31 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v269 = *(void *)v374;
        v270 = v31;
        if (v31) {
          atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v32 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v269);
        uint64_t v33 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v267 = *((void *)v374 + 2);
        v268 = v33;
        if (v33) {
          atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v34 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v267);
        v35 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v265 = *((void *)v374 + 4);
        v266 = v35;
        if (v35) {
          atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v36 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v265);
        v37 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v263 = *((void *)v374 + 6);
        v264 = v37;
        if (v37) {
          atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v32 v34:v36 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v263)];
        if (v264) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v264);
        }
        if (v266) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v266);
        }
        if (v268) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v268);
        }
        v38 = v270;
        if (!v270) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 5:
        v126 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v261 = *(void *)v374;
        v262 = v126;
        if (v126) {
          atomic_fetch_add_explicit(&v126->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v127 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v261);
        v128 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v259 = *((void *)v374 + 2);
        v260 = v128;
        if (v128) {
          atomic_fetch_add_explicit(&v128->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v129 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v259);
        v130 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v257 = *((void *)v374 + 4);
        v258 = v130;
        if (v130) {
          atomic_fetch_add_explicit(&v130->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v131 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v257);
        v132 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v255 = *((void *)v374 + 6);
        v256 = v132;
        if (v132) {
          atomic_fetch_add_explicit(&v132->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v133 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v255);
        v134 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v253 = *((void *)v374 + 8);
        v254 = v134;
        if (v134) {
          atomic_fetch_add_explicit(&v134->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v127 v129 v131 v133:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v253)];
        if (v254) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v254);
        }
        if (v256) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v256);
        }
        if (v258) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v258);
        }
        if (v260) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v260);
        }
        v38 = v262;
        if (!v262) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 6:
        v146 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v251 = *(void *)v374;
        v252 = v146;
        if (v146) {
          atomic_fetch_add_explicit(&v146->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v147 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v251);
        v148 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v249 = *((void *)v374 + 2);
        v250 = v148;
        if (v148) {
          atomic_fetch_add_explicit(&v148->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v149 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v249);
        v150 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v247 = *((void *)v374 + 4);
        v248 = v150;
        if (v150) {
          atomic_fetch_add_explicit(&v150->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v151 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v247);
        v152 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v245 = *((void *)v374 + 6);
        v246 = v152;
        if (v152) {
          atomic_fetch_add_explicit(&v152->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v153 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v245);
        v154 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v243 = *((void *)v374 + 8);
        v244 = v154;
        if (v154) {
          atomic_fetch_add_explicit(&v154->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v155 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v243);
        v156 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v241 = *((void *)v374 + 10);
        v242 = v156;
        if (v156) {
          atomic_fetch_add_explicit(&v156->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v147 v149 v151 v153 v155:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v241)];
        if (v242) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v242);
        }
        if (v244) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v244);
        }
        if (v246) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v246);
        }
        if (v248) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v248);
        }
        if (v250) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v250);
        }
        v38 = v252;
        if (!v252) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 7:
        v99 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v239 = *(void *)v374;
        v240 = v99;
        if (v99) {
          atomic_fetch_add_explicit(&v99->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v100 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v239);
        v101 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v237 = *((void *)v374 + 2);
        v238 = v101;
        if (v101) {
          atomic_fetch_add_explicit(&v101->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v102 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v237);
        v103 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v235 = *((void *)v374 + 4);
        v236 = v103;
        if (v103) {
          atomic_fetch_add_explicit(&v103->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v104 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v235);
        v105 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v233 = *((void *)v374 + 6);
        v234 = v105;
        if (v105) {
          atomic_fetch_add_explicit(&v105->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v106 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v233);
        v107 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v231 = *((void *)v374 + 8);
        v232 = v107;
        if (v107) {
          atomic_fetch_add_explicit(&v107->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v108 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v231);
        v109 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v229 = *((void *)v374 + 10);
        v230 = v109;
        if (v109) {
          atomic_fetch_add_explicit(&v109->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v110 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v229);
        v111 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v227 = *((void *)v374 + 12);
        v228 = v111;
        if (v111) {
          atomic_fetch_add_explicit(&v111->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v100 v102 v104 v106 v108 v110:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v227)];
        if (v228) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v228);
        }
        if (v230) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v230);
        }
        if (v232) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v232);
        }
        if (v234) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v234);
        }
        if (v236) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v236);
        }
        if (v238) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v238);
        }
        v38 = v240;
        if (!v240) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 8:
        v172 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v225 = *(void *)v374;
        v226 = v172;
        if (v172) {
          atomic_fetch_add_explicit(&v172->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v192 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v225);
        v173 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v223 = *((void *)v374 + 2);
        v224 = v173;
        if (v173) {
          atomic_fetch_add_explicit(&v173->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v174 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v223);
        v175 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v221 = *((void *)v374 + 4);
        v222 = v175;
        if (v175) {
          atomic_fetch_add_explicit(&v175->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v176 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v221);
        v177 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v219 = *((void *)v374 + 6);
        v220 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v178 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v219);
        v179 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v217 = *((void *)v374 + 8);
        v218 = v179;
        if (v179) {
          atomic_fetch_add_explicit(&v179->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v180 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v217);
        v181 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v215 = *((void *)v374 + 10);
        v216 = v181;
        if (v181) {
          atomic_fetch_add_explicit(&v181->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v182 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v215);
        v183 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v213 = *((void *)v374 + 12);
        v214 = v183;
        if (v183) {
          atomic_fetch_add_explicit(&v183->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v184 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v213);
        v185 = (std::__shared_weak_count *)*((void *)v374 + 15);
        v211 = *((void *)v374 + 14);
        v212 = v185;
        if (v185) {
          atomic_fetch_add_explicit(&v185->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v192 v174 v176 v178 v180 v182 v184:OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v211)];
        if (v212) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v212);
        }
        if (v214) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v214);
        }
        if (v216) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v216);
        }
        if (v218) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v218);
        }
        if (v220) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v220);
        }
        if (v222) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v222);
        }
        if (v224) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v224);
        }
        v38 = v226;
        if (!v226) {
          goto LABEL_230;
        }
        goto LABEL_229;
      case 9:
        v55 = (std::__shared_weak_count *)*((void *)v374 + 1);
        v209 = *(void *)v374;
        v210 = v55;
        if (v55) {
          atomic_fetch_add_explicit(&v55->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v191 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v209);
        v56 = (std::__shared_weak_count *)*((void *)v374 + 3);
        v207 = *((void *)v374 + 2);
        v208 = v56;
        if (v56) {
          atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v189 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v207);
        v57 = (std::__shared_weak_count *)*((void *)v374 + 5);
        v205 = *((void *)v374 + 4);
        v206 = v57;
        if (v57) {
          atomic_fetch_add_explicit(&v57->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v58 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v205);
        v59 = (std::__shared_weak_count *)*((void *)v374 + 7);
        v203 = *((void *)v374 + 6);
        v204 = v59;
        if (v59) {
          atomic_fetch_add_explicit(&v59->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v60 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v203);
        v61 = (std::__shared_weak_count *)*((void *)v374 + 9);
        v201 = *((void *)v374 + 8);
        v202 = v61;
        if (v61) {
          atomic_fetch_add_explicit(&v61->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v62 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v201);
        v63 = (std::__shared_weak_count *)*((void *)v374 + 11);
        v199 = *((void *)v374 + 10);
        v200 = v63;
        if (v63) {
          atomic_fetch_add_explicit(&v63->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v64 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v199);
        v65 = (std::__shared_weak_count *)*((void *)v374 + 13);
        v197 = *((void *)v374 + 12);
        v198 = v65;
        if (v65) {
          atomic_fetch_add_explicit(&v65->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v66 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v197);
        v67 = (std::__shared_weak_count *)*((void *)v374 + 15);
        v195 = *((void *)v374 + 14);
        v196 = v67;
        if (v67) {
          atomic_fetch_add_explicit(&v67->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v68 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v195);
        v69 = (std::__shared_weak_count *)*((void *)v374 + 17);
        v193 = *((void *)v374 + 16);
        v194 = v69;
        if (v69) {
          atomic_fetch_add_explicit(&v69->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v22 = [v6 Uid:v191 v189:v58 v60:v62 v64:v66 v68:v68 OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v193)];
        if (v194) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v194);
        }
        if (v196) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v196);
        }
        if (v198) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v198);
        }
        if (v200) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v200);
        }
        if (v202) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v202);
        }
        if (v204) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v204);
        }
        if (v206) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v206);
        }
        if (v208) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v208);
        }
        v38 = v210;
        if (!v210) {
          goto LABEL_230;
        }
LABEL_229:
        std::__shared_weak_count::__release_shared[abi:ne180100](v38);
LABEL_230:
        if (*((_DWORD *)a2 + 12) == 1)
        {
          v113 = operator new(0x30uLL);
          v115 = 0;
          v113[1] = 0;
          v113[2] = 0;
          *v113 = &unk_1F24D2FD0;
          *((_DWORD *)v113 + 6) = 1;
          v114 = (char *)(v113 + 3);
        }
        else
        {
          v113 = operator new(0x30uLL);
          v113[1] = 0;
          v113[2] = 0;
          *v113 = &unk_1F24D2FD0;
          *((_DWORD *)v113 + 6) = 2;
          v114 = (char *)(v113 + 3);
          v113[4] = v22;
          v115 = 1;
        }
        break;
      default:
        v188 = __cxa_allocate_exception(0x10uLL);
        if (*((char *)a2 + 79) < 0) {
          uint64_t v17 = (const char **)*v17;
        }
        StringUtil::Format((StringUtil *)"Arity %s %zu too high for me", v379, v17, (v375 - v374) >> 4);
        MEMORY[0x1CB7988B0](v188, v379);
        __cxa_throw(v188, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
  }
  *((_DWORD *)v113 + 10) = v115;
  *a3 = v114;
  a3[1] = v113;
  v379[0] = &v374;
  std::vector<std::shared_ptr<OVM::Var>>::__destroy_vector::operator()[abi:ne180100]((void ***)v379);
  if (v378) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v378);
  }
}

{
  uint64_t v6;
  std::__shared_weak_count *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  BOOL v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  void *v53;
  void *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  char *v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  char *v61;
  std::__shared_weak_count *v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  char *v65;
  std::__shared_weak_count *v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  char *v69;
  std::__shared_weak_count *v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  char *v73;
  std::__shared_weak_count *v74;

  OVM::InterpreterImpl::Evaluate(this, a2 + 2);
  OVM::InterpreterImpl::Evaluate(this, a2 + 3);
  *a3 = 0;
  a3[1] = 0;
  switch(*((_DWORD *)a2 + 8))
  {
    case 0:
      char v6 = *(void *)(v71 + 16);
      uint64_t v8 = v73;
      long long v7 = v74;
      *(_OWORD *)v73 = *(_OWORD *)v71;
      *((void *)v8 + 2) = v6;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      *a3 = v8;
      a3[1] = v7;
      break;
    case 1:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v35 = *((void *)v73 + 1);
      v36 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v36 + v35;
      goto LABEL_71;
    case 2:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v27 = *((void *)v73 + 1);
      v28 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v27 - v28;
      goto LABEL_71;
    case 3:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      std::string::size_type v31 = *((void *)v73 + 1);
      v32 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v32 * v31;
      goto LABEL_71;
    case 4:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      long long v18 = *((void *)v73 + 1);
      long long v19 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[1] = 0;
      v11[2] = 0;
      const std::string::value_type *v11 = &unk_1F24D2FD0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v18 / v19;
      goto LABEL_72;
    case 5:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v39 = *((void *)v73 + 1);
      v40 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      unint64_t v12 = v39 % v40;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      v11[2] = 0;
      goto LABEL_71;
    case 6:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v43 = *((void *)v73 + 1);
      v44 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v43 << v44;
      goto LABEL_71;
    case 7:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v33 = *((void *)v73 + 1);
      v34 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v33 >> v34;
      goto LABEL_71;
    case 8:
      v69 = v73;
      v70 = v74;
      if (v74) {
        atomic_fetch_add_explicit(&v74->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v49 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v69);
      v67 = v71;
      v68 = v72;
      if (v72) {
        atomic_fetch_add_explicit(&v72->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v50 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v67);
      v51 = operator new(0x30uLL);
      v52 = v49 == v50;
      v51[1] = 0;
      v51[2] = 0;
      *v51 = &unk_1F24D2FD0;
      *((_DWORD *)v51 + 6) = 2;
      uint64_t v8 = (char *)(v51 + 3);
      v51[4] = v52;
      *((_DWORD *)v51 + 10) = 1;
      *a3 = v51 + 3;
      a3[1] = v51;
      if (v68) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v68);
      }
      uint64_t v26 = v70;
      if (!v70) {
        break;
      }
      goto LABEL_101;
    case 9:
      v57 = v73;
      v58 = v74;
      if (v74) {
        atomic_fetch_add_explicit(&v74->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v22 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v57);
      v55 = v71;
      v56 = v72;
      if (v72) {
        atomic_fetch_add_explicit(&v72->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v23 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v55);
      v24 = operator new(0x30uLL);
      uint64_t v25 = v22 != v23;
      v24[1] = 0;
      v24[2] = 0;
      std::__shared_weak_count *v24 = &unk_1F24D2FD0;
      *((_DWORD *)v24 + 6) = 2;
      uint64_t v8 = (char *)(v24 + 3);
      void v24[4] = v25;
      *((_DWORD *)v24 + 10) = 1;
      *a3 = v24 + 3;
      a3[1] = v24;
      if (v56) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v56);
      }
      uint64_t v26 = v58;
      if (!v58) {
        break;
      }
      goto LABEL_101;
    case 0xA:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v45 = *((void *)v73 + 1);
      v46 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      uint64_t v17 = v45 < v46;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v17;
      goto LABEL_71;
    case 0xB:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v15 = *((void *)v73 + 1);
      unsigned int v16 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      uint64_t v17 = v15 <= v16;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v17;
      goto LABEL_71;
    case 0xC:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      unint64_t v20 = *((void *)v73 + 1);
      std::string v21 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      uint64_t v17 = v20 <= v21;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = !v17;
      goto LABEL_71;
    case 0xD:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v41 = *((void *)v73 + 1);
      v42 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      uint64_t v17 = v41 < v42;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = !v17;
      goto LABEL_71;
    case 0xE:
      v65 = v73;
      v66 = v74;
      if (v74) {
        atomic_fetch_add_explicit(&v74->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v13 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v65);
      if (v13)
      {
        v63 = v71;
        v64 = v72;
        if (v72) {
          atomic_fetch_add_explicit(&v72->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v14 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v63) != 0;
      }
      else
      {
        uint64_t v14 = 0;
      }
      v53 = operator new(0x30uLL);
      v53[1] = 0;
      v53[2] = 0;
      *((_DWORD *)v53 + 6) = 2;
      uint64_t v8 = (char *)(v53 + 3);
      *v53 = &unk_1F24D2FD0;
      v53[4] = v14;
      *((_DWORD *)v53 + 10) = 1;
      *a3 = v53 + 3;
      a3[1] = v53;
      if (v13 && v64) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v64);
      }
      uint64_t v26 = v66;
      if (!v66) {
        break;
      }
      goto LABEL_101;
    case 0xF:
      v61 = v73;
      v62 = v74;
      if (v74) {
        atomic_fetch_add_explicit(&v74->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v29 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v61);
      if (v29)
      {
        v30 = 1;
      }
      else
      {
        v59 = v71;
        v60 = v72;
        if (v72) {
          atomic_fetch_add_explicit(&v72->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v30 = OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>((uint64_t)&v59) != 0;
      }
      v54 = operator new(0x30uLL);
      v54[1] = 0;
      v54[2] = 0;
      *((_DWORD *)v54 + 6) = 2;
      uint64_t v8 = (char *)(v54 + 3);
      *v54 = &unk_1F24D2FD0;
      v54[4] = v30;
      *((_DWORD *)v54 + 10) = 1;
      *a3 = v54 + 3;
      a3[1] = v54;
      if (!v29 && v60) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v60);
      }
      uint64_t v26 = v62;
      if (v62) {
LABEL_101:
      }
        std::__shared_weak_count::__release_shared[abi:ne180100](v26);
      break;
    case 0x10:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v9 = *((void *)v73 + 1);
      int v10 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v10 & v9;
      goto LABEL_71;
    case 0x11:
      if (*((_DWORD *)v73 + 4) != 1 || *(_DWORD *)(v71 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      v37 = *((void *)v73 + 1);
      v38 = *(void *)(v71 + 8);
      unint64_t v11 = operator new(0x30uLL);
      v11[2] = 0;
      *((_DWORD *)v11 + 6) = 2;
      uint64_t v8 = (char *)(v11 + 3);
      unint64_t v12 = v38 | v37;
LABEL_71:
      const std::string::value_type *v11 = &unk_1F24D2FD0;
      v11[1] = 0;
LABEL_72:
      v11[4] = v12;
      *((_DWORD *)v11 + 10) = 1;
      *a3 = v8;
      a3[1] = v11;
      break;
    default:
      uint64_t v8 = 0;
      break;
  }
  if (*((unsigned char *)a2 + 36))
  {
    v47 = v73;
    v48 = *((void *)v8 + 2);
    *(_OWORD *)v73 = *(_OWORD *)v8;
    *((void *)v47 + 2) = v48;
  }
  if (v72) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v72);
  }
  if (v74) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v74);
  }
}

{
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  int v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  int v18;
  void *v19;
  std::__shared_weak_count *v20;
  void *exception;
  void v22[2];
  uint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t vars8;

  OVM::InterpreterImpl::Evaluate(this, a2 + 2);
  switch(*((_DWORD *)a2 + 3))
  {
    case 0:
      if (*(_DWORD *)v23 == 4)
      {
        if (*(_DWORD *)(v23 + 16) == 3)
        {
          *a3 = *(void *)(v23 + 8);
          operator new();
        }
LABEL_30:
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1CB7988A0](exception, "Deref a not-pointer?");
      goto LABEL_34;
    case 1:
      unsigned int v16 = v23;
      uint64_t v13 = operator new(0x30uLL);
      v13[1] = 0;
      v13[2] = 0;
      *((_DWORD *)v13 + 6) = 4;
      uint64_t v14 = (char *)(v13 + 3);
      *uint64_t v13 = &unk_1F24D2FD0;
      v13[4] = v16;
      uint64_t v15 = 3;
      goto LABEL_16;
    case 2:
      uint64_t v9 = v23;
      if (*(_DWORD *)(v23 + 16) != 1) {
        goto LABEL_30;
      }
      int v10 = *(void *)(v23 + 8) - 1;
      goto LABEL_12;
    case 3:
      uint64_t v9 = v23;
      if (*(_DWORD *)(v23 + 16) != 1) {
        goto LABEL_30;
      }
      int v10 = *(void *)(v23 + 8) + 1;
LABEL_12:
      *(void *)(v9 + 8) = v10;
      unint64_t v11 = v24;
      *a3 = v9;
      a3[1] = v11;
      uint64_t v23 = 0;
      v24 = 0;
      break;
    case 4:
      long long v5 = v23;
      if (*(_DWORD *)(v23 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      char v6 = operator new(0x30uLL);
      v6[1] = 0;
      v6[2] = 0;
      *char v6 = &unk_1F24D2FD0;
      *((_DWORD *)v6 + 6) = 2;
      long long v7 = (char *)(v6 + 3);
      v6[4] = *(void *)(v5 + 8);
      *((_DWORD *)v6 + 10) = 1;
      if (*(_DWORD *)(v5 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v8 = *(void *)(v5 + 8) - 1;
      goto LABEL_20;
    case 5:
      long long v5 = v23;
      if (*(_DWORD *)(v23 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      char v6 = operator new(0x30uLL);
      v6[1] = 0;
      v6[2] = 0;
      *char v6 = &unk_1F24D2FD0;
      *((_DWORD *)v6 + 6) = 2;
      long long v7 = (char *)(v6 + 3);
      v6[4] = *(void *)(v5 + 8);
      *((_DWORD *)v6 + 10) = 1;
      if (*(_DWORD *)(v5 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      uint64_t v8 = *(void *)(v5 + 8) + 1;
LABEL_20:
      *(void *)(v5 + 8) = v8;
      *a3 = v7;
      a3[1] = v6;
      break;
    case 6:
      uint64_t v17 = v24;
      v22[0] = v23;
      v22[1] = v24;
      if (v24) {
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      long long v18 = OVM::InterpreterImpl::EvaluateTruthiness((uint64_t)v22);
      long long v19 = operator new(0x30uLL);
      v19[1] = 0;
      v19[2] = 0;
      *((_DWORD *)v19 + 6) = 2;
      *long long v19 = &unk_1F24D2FD0;
      v19[4] = v18 ^ 1u;
      *((_DWORD *)v19 + 10) = 1;
      *a3 = v19 + 3;
      a3[1] = v19;
      if (v17) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v17);
      }
      break;
    case 7:
      if (*(_DWORD *)(v23 + 16) != 1) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      unint64_t v12 = *(void *)(v23 + 8);
      uint64_t v13 = operator new(0x30uLL);
      v13[1] = 0;
      v13[2] = 0;
      *((_DWORD *)v13 + 6) = 2;
      uint64_t v14 = (char *)(v13 + 3);
      *uint64_t v13 = &unk_1F24D2FD0;
      v13[4] = -v12;
      uint64_t v15 = 1;
LABEL_16:
      *((_DWORD *)v13 + 10) = v15;
      *a3 = v14;
      a3[1] = v13;
      break;
    default:
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1CB7988A0](exception, "Unsupported unary operator");
LABEL_34:
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v20 = v24;
  if (v24)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
}

void sub_1CA5552C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t OVM::InterpreterImpl::Evaluate(OVM::InterpreterImpl *a1, const OVM::Expression **a2)
{
  long long v2 = *a2;
  if (!v2) {
    OVM::InterpreterImpl::Evaluate();
  }

  return OVM::InterpreterImpl::Evaluate(a1, v2);
}

void sub_1CA5555D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a20);
  }
  _Unwind_Resume(exception_object);
}

__n128 OVM::InterpreterImpl::Evaluate@<Q0>(OVM::InterpreterImpl *this@<X0>, void **a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = *((void *)this + 5) + *((void *)this + 4) - 1;
  long long v7 = a2 + 2;
  uint64_t v8 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(*(void *)(*((void *)this + 1) + 8 * (v6 / 0xAA)) + 24 * (v6 % 0xAA), a2 + 2);
  unint64_t v10 = *((void *)this + 5) + *((void *)this + 4) - 1;
  if ((void **)(*(void *)(*((void *)this + 1) + 8 * (v10 / 0xAA)) + 24 * (v10 % 0xAA) + 8) == v8)
  {
    uint64_t v12 = *((void *)this + 8);
    if (!v12
      || (uint64_t v13 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(v12, v7), (void **)(*((void *)this + 8) + 8) == v13))
    {
      exception = __cxa_allocate_exception(0x10uLL);
      if (*((char *)a2 + 39) < 0) {
        long long v7 = (void **)*v7;
      }
      StringUtil::Format((StringUtil *)"NameError, cannot resolve reference to %s", v17, v7);
      MEMORY[0x1CB7988B0](exception, v17);
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    uint64_t v14 = v13;
    uint64_t v15 = (char *)operator new(0x30uLL);
    *((void *)v15 + 1) = 0;
    *((void *)v15 + 2) = 0;
    *(void *)uint64_t v15 = &unk_1F24D2FD0;
    __n128 result = *(__n128 *)(v14 + 7);
    *((void *)v15 + 5) = v14[9];
    *(__n128 *)(v15 + 24) = result;
    *a3 = v15 + 24;
    a3[1] = v15;
  }
  else
  {
    unint64_t v11 = (atomic_ullong *)v8[8];
    *a3 = v8[7];
    a3[1] = v11;
    if (v11) {
      atomic_fetch_add_explicit(v11 + 1, 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void sub_1CA5557FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void sub_1CA557154(_Unwind_Exception *a1)
{
  if (*(char *)(v3 - 105) < 0)
  {
    operator delete(*(void **)(v3 - 128));
    if ((v2 & 1) == 0)
    {
LABEL_6:
      *(void *)(v3 - 192) = v3 - 168;
      std::vector<std::shared_ptr<OVM::Var>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v3 - 192));
      long long v5 = *(std::__shared_weak_count **)(v3 - 136);
      if (v5) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v5);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v2)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v1);
  goto LABEL_6;
}

void *OVM::InterpreterImpl::Evaluate@<X0>(OVM::InterpreterImpl *this@<X0>, const OVM::ObjCClass *a2@<X1>, void *a3@<X8>)
{
  long long v5 = (const char **)((char *)a2 + 16);
  if (((***((uint64_t (****)(void, char *))this + 9))(*((void *)this + 9), (char *)a2 + 16) & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    MEMORY[0x1CB7988B0](exception, &v19);
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  if (*((char *)a2 + 39) < 0) {
    unint64_t v6 = *v5;
  }
  else {
    unint64_t v6 = (const char *)v5;
  }
  Class Class = objc_getClass(v6);
  if (!Class)
  {
    uint64_t v12 = __cxa_allocate_exception(0x10uLL);
    *((unsigned char *)&v18.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v18, "Cannot get class");
    int v13 = *((char *)a2 + 39);
    if (v13 >= 0) {
      uint64_t v14 = (const std::string::value_type *)v5;
    }
    else {
      uint64_t v14 = (const std::string::value_type *)*((void *)a2 + 2);
    }
    if (v13 >= 0) {
      std::string::size_type v15 = *((unsigned __int8 *)a2 + 39);
    }
    else {
      std::string::size_type v15 = *((void *)a2 + 3);
    }
    int v16 = std::string::append(&v18, v14, v15);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v16->__r_.__value_.__r.__words[2];
    long long v19 = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    MEMORY[0x1CB7988B0](v12, &v19);
    __cxa_throw(v12, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  Class v8 = Class;
  uint64_t v9 = operator new(0x30uLL);
  v9[1] = 0;
  v9[2] = 0;
  *uint64_t v9 = &unk_1F24D2FD0;
  v9[4] = v8;
  *((_DWORD *)v9 + 10) = 2;
  a3[1] = v9;
  *((_DWORD *)v9 + 6) = 3;
  __n128 result = v9 + 3;
  *a3 = result;
  return result;
}

void sub_1CA557AD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (v22) {
    __cxa_free_exception(v21);
  }
  _Unwind_Resume(exception_object);
}

void OVM::InterpreterImpl::Evaluate(OVM::InterpreterImpl *this@<X0>, const OVM::FunctionCall *a2@<X1>, void *a3@<X8>)
{
  __p = 0;
  int v29 = 0;
  v30 = 0;
  long long v4 = (const OVM::Expression **)*((void *)a2 + 2);
  for (i = (const OVM::Expression **)*((void *)a2 + 3); v4 != i; ++v4)
  {
    OVM::InterpreterImpl::Evaluate(this, v4);
    unint64_t v6 = v29;
    if (v29 >= (void *)v30)
    {
      unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v29 - (unsigned char *)__p) >> 3);
      unint64_t v10 = v9 + 1;
      if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
        std::vector<std::string>::__throw_length_error[abi:ne180100]();
      }
      if (0x5555555555555556 * ((v30 - (unsigned char *)__p) >> 3) > v10) {
        unint64_t v10 = 0x5555555555555556 * ((v30 - (unsigned char *)__p) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((v30 - (unsigned char *)__p) >> 3) >= 0x555555555555555) {
        unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11) {
        uint64_t v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v30, v11);
      }
      else {
        uint64_t v12 = 0;
      }
      int v13 = &v12[8 * (((char *)v29 - (unsigned char *)__p) >> 3)];
      long long v14 = *(_OWORD *)v26;
      *((void *)v13 + 2) = *(void *)(v26 + 16);
      *(_OWORD *)int v13 = v14;
      int v16 = (char *)__p;
      std::string::size_type v15 = (char *)v29;
      long long v17 = &v12[24 * v9];
      if (v29 != __p)
      {
        do
        {
          long long v18 = *(_OWORD *)(v15 - 24);
          *((void *)v17 - 1) = *((void *)v15 - 1);
          *(_OWORD *)(v17 - 24) = v18;
          v17 -= 24;
          v15 -= 24;
        }
        while (v15 != v16);
        std::string::size_type v15 = (char *)__p;
      }
      Class v8 = v13 + 24;
      __p = v17;
      int v29 = v13 + 24;
      v30 = &v12[24 * v11];
      if (v15) {
        operator delete(v15);
      }
    }
    else
    {
      long long v7 = *(_OWORD *)v26;
      v29[2] = *(void *)(v26 + 16);
      *unint64_t v6 = v7;
      Class v8 = (void *)v6 + 3;
    }
    int v29 = v8;
    if (*((void *)&v26 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v26 + 1));
    }
  }
  long long v19 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(*((void *)this + 6), (void **)a2 + 5);
  if ((void **)(*((void *)this + 6) + 8) == v19)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    MEMORY[0x1CB7988B0](exception, &v26);
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  std::string::size_type v20 = (std::__shared_weak_count *)v19[8];
  v25[0] = v19[7];
  v25[1] = v20;
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  OVM::InterpreterImpl::RunSubroutine(&v26, this, v25, &__p);
  std::string v21 = (char *)operator new(0x30uLL);
  *((void *)v21 + 1) = 0;
  *((void *)v21 + 2) = 0;
  *(void *)std::string v21 = &unk_1F24D2FD0;
  *(_OWORD *)(v21 + 24) = v26;
  *((void *)v21 + 5) = v27;
  *a3 = v21 + 24;
  a3[1] = v21;
  if (v20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
  if (__p)
  {
    int v29 = __p;
    operator delete(__p);
  }
}

void sub_1CA557DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((v21 & 1) == 0)
    {
LABEL_6:
      if (a19) {
        operator delete(a19);
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v20);
  goto LABEL_6;
}

void *OVM::InterpreterImpl::Evaluate@<X0>(const OVM::StringLiteral *a1@<X1>, void *a2@<X8>)
{
  long long v4 = (void *)((char *)a1 + 16);
  if (*((char *)a1 + 39) < 0) {
    long long v4 = (void *)*v4;
  }
  uint64_t v5 = [NSString stringWithCString:v4 encoding:1];
  unint64_t v6 = operator new(0x30uLL);
  v6[1] = 0;
  v6[2] = 0;
  *unint64_t v6 = &unk_1F24D2FD0;
  v6[4] = v5;
  *((_DWORD *)v6 + 10) = 2;
  a2[1] = v6;
  *((_DWORD *)v6 + 6) = 3;
  __n128 result = v6 + 3;
  *a2 = result;
  return result;
}

void *OVM::InterpreterImpl::Evaluate@<X0>(OVM::InterpreterImpl *this@<X0>, const OVM::Expression **a2@<X1>, void *a3@<X8>)
{
  OVM::InterpreterImpl::Evaluate(this, a2 + 2);
  int v6 = OVM::InterpreterImpl::EvaluateTruthiness((uint64_t)v14);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  long long v7 = (char *)(a2 + 3);
  uint64_t v8 = 6;
  if (v6) {
    uint64_t v8 = 3;
  }
  else {
    long long v7 = (char *)(a2 + 6);
  }
  unint64_t v9 = (const OVM::Expression **)a2[v8];
  unint64_t v10 = (const OVM::Expression **)*((void *)v7 + 1);
  while (v9 != v10)
  {
    OVM::InterpreterImpl::Evaluate(this, v9);
    if (v13) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v13);
    }
    ++v9;
  }
  unint64_t v11 = operator new(0x30uLL);
  v11[1] = 0;
  v11[2] = 0;
  void *v11 = &unk_1F24D2FD0;
  *((_DWORD *)v11 + 10) = 0;
  a3[1] = v11;
  *((_DWORD *)v11 + 6) = 1;
  __n128 result = v11 + 3;
  *a3 = result;
  return result;
}

void sub_1CA557FD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1CA55891C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, std::__shared_weak_count *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  v24 = *(std::__shared_weak_count **)(v22 - 72);
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  uint64_t v25 = *(std::__shared_weak_count **)(v22 - 56);
  if (v25) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v25);
  }
  _Unwind_Resume(exception_object);
}

void OVM::InterpreterImpl::Evaluate(OVM::InterpreterImpl *this, const OVM::Expression **a2)
{
  exception = (char *)__cxa_allocate_exception(0x18uLL);
  OVM::InterpreterImpl::Evaluate(this, a2 + 2);
  *(void *)exception = &unk_1F24D2F88;
  *(_OWORD *)(exception + 8) = v5;
}

void sub_1CA558AEC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1CA558ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  __cxa_free_exception(v12);
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(a1);
}

void sub_1CA558EEC(void *a1)
{
}

void sub_1CA558EF8()
{
}

void sub_1CA558F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(a1);
}

void *OVM::InterpreterImpl::Evaluate@<X0>(OVM::InterpreterImpl *this@<X0>, const OVM::Loop *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *((void *)a2 + 2);
  int v6 = (const OVM::Expression **)((char *)a2 + 16);
  if (v7)
  {
    OVM::InterpreterImpl::Evaluate(this, v6);
    if (v18) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v18);
    }
  }
  if (*((_DWORD *)a2 + 16) == 1)
  {
    uint64_t v8 = (const OVM::Expression **)*((void *)a2 + 5);
    unint64_t v9 = (const OVM::Expression **)*((void *)a2 + 6);
    while (v8 != v9)
    {
      OVM::InterpreterImpl::Evaluate(this, v8);
      if (v19) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v19);
      }
      ++v8;
    }
  }
  while (1)
  {
    OVM::InterpreterImpl::Evaluate(this, (const OVM::Expression **)a2 + 3);
    int v10 = OVM::InterpreterImpl::EvaluateTruthiness((uint64_t)v16);
    if (v17) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v17);
    }
    if (!v10) {
      break;
    }
    unint64_t v11 = (const OVM::Expression **)*((void *)a2 + 5);
    uint64_t v12 = (const OVM::Expression **)*((void *)a2 + 6);
    while (v11 != v12)
    {
      OVM::InterpreterImpl::Evaluate(this, v11);
      if (v19) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v19);
      }
      ++v11;
    }
    if (*((void *)a2 + 4))
    {
      OVM::InterpreterImpl::Evaluate(this, (const OVM::Expression **)a2 + 4);
      if (v15) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v15);
      }
    }
  }
  int v13 = operator new(0x30uLL);
  v13[1] = 0;
  v13[2] = 0;
  *int v13 = &unk_1F24D2FD0;
  *((_DWORD *)v13 + 10) = 0;
  a3[1] = v13;
  *((_DWORD *)v13 + 6) = 1;
  __n128 result = v13 + 3;
  *a3 = result;
  return result;
}

void sub_1CA5590E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void *OVM::InterpreterImpl::Evaluate@<X0>(OVM::InterpreterImpl *this@<X0>, const OVM::DictionaryLiteral *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  unint64_t v8 = (v6 - v7) >> 3;
  uint64_t v9 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v8];
  uint64_t v10 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v8];
  if (v6 != v7)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    if (v8 <= 1) {
      unint64_t v8 = 1;
    }
    do
    {
      OVM::InterpreterImpl::Evaluate(this, (const OVM::Expression **)(*((void *)a2 + 2) + v11));
      if (*(_DWORD *)v18 != 3)
      {
        exception = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1CB7988A0](exception, "Adding a non-nsobject to a dictinoary?");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      if (*(_DWORD *)(v18 + 16) != 2) {
        std::__throw_bad_variant_access[abi:ne180100]();
      }
      if (v12) {
        int v13 = (void *)v10;
      }
      else {
        int v13 = (void *)v9;
      }
      [v13 addObject:*(void *)(v18 + 8)];
      if (v19) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v19);
      }
      ++v12;
      v11 += 8;
    }
    while (v8 != v12);
  }
  uint64_t v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v10 forKeys:v9];
  std::string::size_type v15 = operator new(0x30uLL);
  v15[1] = 0;
  v15[2] = 0;
  void *v15 = &unk_1F24D2FD0;
  v15[4] = v14;
  *((_DWORD *)v15 + 10) = 2;
  a3[1] = v15;
  *((_DWORD *)v15 + 6) = 3;
  __n128 result = v15 + 3;
  *a3 = result;
  return result;
}

void sub_1CA559288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  __cxa_free_exception(v10);
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

void *OVM::InterpreterImpl::Evaluate@<X0>(OVM::InterpreterImpl *this@<X0>, const OVM::ArrayLiteral *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (void *)[MEMORY[0x1E4F1CA48] arrayWithCapacity:(uint64_t)(*((void *)a2 + 3) - *((void *)a2 + 2)) >> 3];
  uint64_t v7 = (const OVM::Expression **)*((void *)a2 + 2);
  unint64_t v8 = (const OVM::Expression **)*((void *)a2 + 3);
  while (v7 != v8)
  {
    OVM::InterpreterImpl::Evaluate(this, v7);
    if (*(_DWORD *)v13 != 3)
    {
      exception = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1CB7988A0](exception, "Adding a non-nsobject to an array?");
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    if (*(_DWORD *)(v13 + 16) != 2) {
      std::__throw_bad_variant_access[abi:ne180100]();
    }
    [v6 addObject:*(void *)(v13 + 8)];
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
    ++v7;
  }
  uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithArray:v6];
  uint64_t v10 = operator new(0x30uLL);
  v10[1] = 0;
  v10[2] = 0;
  *uint64_t v10 = &unk_1F24D2FD0;
  v10[4] = v9;
  *((_DWORD *)v10 + 10) = 2;
  a3[1] = v10;
  *((_DWORD *)v10 + 6) = 3;
  __n128 result = v10 + 3;
  *a3 = result;
  return result;
}

void sub_1CA559404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  __cxa_free_exception(v10);
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

uint64_t OVM::InterpreterImpl::Evaluate(OVM::InterpreterImpl *this, const OVM::CompoundExpression *a2)
{
  long long v4 = (const OVM::Expression **)*((void *)a2 + 2);
  long long v5 = (const OVM::Expression **)*((void *)a2 + 3);
  while (v4 != v5)
  {
    OVM::InterpreterImpl::Evaluate(this, v4);
    if (v7) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    }
    ++v4;
  }

  return OVM::InterpreterImpl::Evaluate(this, (const OVM::Expression **)a2 + 5);
}

void OVM::InterpreterImpl::EarlyReturn::~EarlyReturn(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F24D2F88;
  int v2 = (std::__shared_weak_count *)this[2].__vftable;
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  std::exception::~exception(this);
}

{
  std::__shared_weak_count *v2;
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F24D2F88;
  int v2 = (std::__shared_weak_count *)this[2].__vftable;
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  std::exception::~exception(this);

  JUMPOUT(0x1CB798960);
}

uint64_t OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(*(void *)a1 + 16);
  if (v1 == -1) {
    std::__throw_bad_variant_access[abi:ne180100]();
  }
  uint64_t v2 = *(void *)a1 + 8;
  long long v5 = &v4;
  return ((uint64_t (*)(char **, uint64_t))*(&off_1F24D3010 + v1))(&v5, v2);
}

uint64_t OVM::InterpreterImpl::EvaluateTruthiness(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(*(void *)a1 + 16);
  if (v1 == -1) {
    std::__throw_bad_variant_access[abi:ne180100]();
  }
  uint64_t v2 = *(void *)a1 + 8;
  long long v5 = &v4;
  return ((uint64_t (*)(char **, uint64_t))*(&off_1F24D2FA0 + v1))(&v5, v2);
}

void OVM::Interpreter::RunSubroutine(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = (std::__shared_weak_count *)a1[1];
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *a4;
  uint64_t v9 = (std::__shared_weak_count *)a4[1];
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  memset(v10, 0, sizeof(v10));
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v13 = a5;
  uint64_t v14 = v8;
  std::string::size_type v15 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  OVM::InterpreterImpl::RunSubroutine((uint64_t *)v10, a2, a3, a6);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::~deque[abi:ne180100](v10);
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_1CA559684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OVM::InterpreterImpl::~InterpreterImpl((OVM::InterpreterImpl *)&a9);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  _Unwind_Resume(a1);
}

void OVM::InterpreterImpl::~InterpreterImpl(OVM::InterpreterImpl *this)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 10);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 7);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }

  std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::~deque[abi:ne180100](this);
}

std::string **OVM::Error::Error<>(std::string **a1, uint64_t a2)
{
  *(void *)&long long v6 = *MEMORY[0x1E4F143B8];
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v5, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v5 = *(std::string *)a2;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = (std::string *)operator new(0x18uLL);
  *a1 = v3;
  a1[1] = v3;
  a1[2] = v3 + 1;
  a1[1] = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)(a1 + 2), (long long *)&v5, &v6, v3);
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1CA5597D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    uint64_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    std::string v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E65ADB90, MEMORY[0x1E4FBA1C8]);
}

void sub_1CA559910(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  __n128 result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void std::vector<std::string>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  char v4 = this;
  uint64_t v11 = this;
  uint64_t v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    std::string::size_type v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        char v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      std::string::size_type v6 = (long long *)((char *)v6 + 24);
      uint64_t v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1CA559A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    std::string::size_type v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    std::string::size_type v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t *OVM::Error::Error<std::string>(uint64_t *a1, uint64_t a2, long long *a3)
{
  *(void *)&long long v10 = *MEMORY[0x1E4F143B8];
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v9, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v9 = *(std::string *)a2;
  }
  a1[2] = 0;
  *a1 = 0;
  a1[1] = 0;
  size_t v5 = (std::string *)operator new(0x18uLL);
  *a1 = (uint64_t)v5;
  a1[1] = (uint64_t)v5;
  a1[2] = (uint64_t)&v5[1];
  std::string::size_type v6 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)(a1 + 2), (long long *)&v9, &v10, v5);
  a1[1] = (uint64_t)v6;
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v9.__r_.__value_.__l.__data_);
    std::string::size_type v6 = (std::string *)a1[1];
  }
  if ((unint64_t)v6 >= a1[2])
  {
    uint64_t v7 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a1, a3);
  }
  else
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a1, a3);
    uint64_t v7 = (uint64_t)&v6[1];
  }
  a1[1] = v7;
  return a1;
}

void sub_1CA559DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_1CA559E50(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::string>::__push_back_slow_path<std::string const&>(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
  if (v9) {
    long long v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7, v9);
  }
  else {
    long long v10 = 0;
  }
  std::__split_buffer<std::string>::pointer end = v10 + v4;
  __v.__first_ = v10;
  __v.__begin_ = end;
  __v.__end_ = end;
  __v.__end_cap_.__value_ = &v10[v9];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    std::__split_buffer<std::string>::pointer end = __v.__end_;
  }
  else
  {
    long long v12 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v12;
  }
  __v.__end_ = end + 1;
  std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a1, &__v);
  uint64_t v13 = a1[1];
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v13;
}

void sub_1CA559F68(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      unint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        unint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::emplace_back<>(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = 170 * ((v3 - v2) >> 3) - 1;
  if (v3 == v2) {
    uint64_t v4 = 0;
  }
  if (v4 == a1[5] + a1[4])
  {
    std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::__add_back_capacity(a1);
    uint64_t v2 = a1[1];
    uint64_t v3 = a1[2];
  }
  if (v3 == v2)
  {
    std::string::size_type v6 = 0;
  }
  else
  {
    unint64_t v5 = a1[5] + a1[4];
    std::string::size_type v6 = (void *)(*(void *)(v2 + 8 * (v5 / 0xAA)) + 24 * (v5 % 0xAA));
  }
  v6[2] = 0;
  v6[1] = 0;
  *std::string::size_type v6 = v6 + 1;
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5] + 1;
  a1[5] = v8;
  unint64_t v9 = v7 + v8;
  uint64_t v10 = a1[1];
  uint64_t v11 = (void *)(v10 + 8 * (v9 / 0xAA));
  uint64_t v12 = *v11 + 24 * (v9 % 0xAA);
  if (a1[2] == v10) {
    uint64_t v12 = 0;
  }
  if (v12 == *v11) {
    uint64_t v12 = *(v11 - 1) + 4080;
  }
  return v12 - 24;
}

void std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    std::string::size_type v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::push_front((uint64_t)a1, &v54);
    v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0xFF0uLL);
  std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *> &>::push_back(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *> &>::push_front((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1CA55A4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::push_back(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  std::string::size_type v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      long long v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      std::string::size_type v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        std::string::size_type v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      uint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        std::string::size_type v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        std::string::size_type v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      std::string::size_type v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)std::string::size_type v6 = *a2;
  a1[2] += 8;
}

void std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::push_front(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *> &>::push_back(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *> &>::push_front(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

uint64_t std::vector<std::shared_ptr<OVM::Var>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<OVM::Var>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<OVM::Var>>,std::reverse_iterator<std::shared_ptr<OVM::Var>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    BOOL v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    v1 += 16;
  }
}

void **std::__split_buffer<std::shared_ptr<OVM::Var>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::shared_ptr<OVM::Var>>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

void std::vector<std::shared_ptr<OVM::Var>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::shared_ptr<OVM::Var>>::__clear[abi:ne180100]((uint64_t *)v2);
    BOOL v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::shared_ptr<OVM::Var>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  a1[1] = v2;
}

void std::__throw_bad_variant_access[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F0] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA340], (void (*)(void *))std::bad_variant_access::~bad_variant_access);
}

void std::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_0,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_1,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_2,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_3>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F0] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA340], (void (*)(void *))std::bad_variant_access::~bad_variant_access);
}

BOOL std::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_0,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_1,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_2,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_3>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>(uint64_t a1, void *a2)
{
  return *a2 != 0;
}

BOOL std::__variant_detail::__visitation::__base::__dispatcher<2ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_0,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_1,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_2,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_3>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>(uint64_t a1, void *a2)
{
  return *a2 != 0;
}

BOOL std::__variant_detail::__visitation::__base::__dispatcher<3ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_0,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_1,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_2,OVM::InterpreterImpl::EvaluateTruthiness(std::shared_ptr<OVM::Var>)::$_3>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>(uint64_t a1, void *a2)
{
  return *a2 != 0;
}

uint64_t std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::~deque[abi:ne180100](void *a1)
{
  uint64_t v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  if (v3 == v2)
  {
    uint64_t v4 = a1 + 5;
    BOOL v3 = (void **)a1[1];
  }
  else
  {
    uint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    uint64_t v6 = &v2[v5 / 0xAA];
    uint64_t v7 = (uint64_t)*v6 + 24 * (v5 % 0xAA);
    unint64_t v8 = (unint64_t)v2[(a1[5] + v5) / 0xAA] + 24 * ((a1[5] + v5) % 0xAA);
    if (v7 != v8)
    {
      do
      {
        std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::destroy(v7, *(void **)(v7 + 8));
        v7 += 24;
        if (v7 - (void)*v6 == 4080)
        {
          uint64_t v9 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }
      while (v7 != v8);
      uint64_t v2 = (void **)a1[1];
      BOOL v3 = (void **)a1[2];
    }
  }
  void *v4 = 0;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 85;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 170;
  }
  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    char v13 = *v2++;
    operator delete(v13);
  }

  return std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::~__split_buffer((uint64_t)a1);
}

void std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<OVM::Var>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<OVM::Var>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    BOOL v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t std::__split_buffer<std::map<std::string,std::shared_ptr<OVM::Var>> *,std::allocator<std::map<std::string,std::shared_ptr<OVM::Var>> *>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void **std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(uint64_t a1, void **a2)
{
  uint64_t v2 = (void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  unint64_t v5 = (void **)(a1 + 8);
  do
  {
    char v6 = std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v3 + 4, a2);
    if (v6 >= 0) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = v3 + 1;
    }
    if (v6 >= 0) {
      unint64_t v5 = (void **)v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2
    || (std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(a2, v5 + 4) & 0x80) != 0)
  {
    return v2;
  }
  return v5;
}

uint64_t std::operator<=>[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, void **a2)
{
  size_t v2 = *((unsigned __int8 *)a1 + 23);
  size_t v3 = a1[1];
  if ((v2 & 0x80u) != 0)
  {
    a1 = (void *)*a1;
    size_t v2 = v3;
  }
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = *a2;
  }
  if (v4 >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  return std::operator<=>[abi:ne180100]<char,std::char_traits<char>>(a1, v2, v5, v6);
}

uint64_t std::operator<=>[abi:ne180100]<char,std::char_traits<char>>(const void *a1, size_t a2, void *__s2, size_t a4)
{
  if (a4 >= a2) {
    size_t v7 = a2;
  }
  else {
    size_t v7 = a4;
  }
  int v8 = memcmp(a1, __s2, v7);
  if (v8)
  {
    if ((v8 & 0x80000000) == 0) {
      return 1;
    }
  }
  else
  {
    if (a2 == a4) {
      return 0;
    }
    if (a2 >= a4) {
      return 1;
    }
  }
  return 255;
}

uint64_t *std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  size_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  size_t v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__insert_node_at(a1, v11, v8, v10[0]);
    size_t v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

void std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  size_t v7 = (std::string *)(v6 + 4);
  int v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_1CA55B2D8(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      size_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      size_t v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            long long v9 = (uint64_t **)a2[2];
          }
          else
          {
            long long v9 = (uint64_t **)v2[1];
            unint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              size_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *long long v9 = v2;
            v2[2] = (uint64_t)v9;
            size_t v3 = v9[2];
            size_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *size_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *size_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            size_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          size_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        size_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *size_t v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<OVM::Var>>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void std::__shared_ptr_emplace<OVM::Var>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D2FD0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<OVM::Var>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D2FD0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1CB798960);
}

uint64_t std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::pop_back(void *a1)
{
  unint64_t v2 = a1[5] + a1[4] - 1;
  uint64_t v3 = *(void *)(a1[1] + 8 * (v2 / 0xAA)) + 24 * (v2 % 0xAA);
  std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::destroy(v3, *(void **)(v3 + 8));
  --a1[5];

  return std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::__maybe_remove_back_spare[abi:ne180100](a1, 1);
}

uint64_t std::deque<std::map<std::string,std::shared_ptr<OVM::Var>>>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 170 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0xAA) {
    a2 = 1;
  }
  if (v5 < 0x154) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void std::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(std::monostate)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(long)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(NSObject *)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(OVM::Var*)#1}>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F0] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA340], (void (*)(void *))std::bad_variant_access::~bad_variant_access);
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(std::monostate)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(long)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(NSObject *)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(OVM::Var*)#1}>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<2ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(std::monostate)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(long)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(NSObject *)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(OVM::Var*)#1}>> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)0,std::monostate,long,NSObject *,OVM::Var*> &>(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

void std::__variant_detail::__visitation::__variant::__value_visitor<overloaded<void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(std::monostate)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(long)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(NSObject *)#1},void * OVM::InterpreterImpl::GetUnsafe<std::shared_ptr<OVM::Var>>(std::shared_ptr<OVM::Var>)::{lambda(OVM::Var*)#1}>>::operator()[abi:ne180100]<std::__variant_detail::__alt<3ul,OVM::Var*> &>(uint64_t a1, _DWORD **a2)
{
  switch(**a2)
  {
    case 1:
    case 4:
      exception = __cxa_allocate_exception(8uLL);
      void *exception = MEMORY[0x1E4FBA4F0] + 16;
      __cxa_throw(exception, MEMORY[0x1E4FBA340], (void (*)(void *))std::bad_variant_access::~bad_variant_access);
    default:
      return;
  }
}

void std::__shared_ptr_pointer<OVM::Var *,OVM::InterpreterImpl::Evaluate(OVM::UnaryOperator const*)::$_0,std::allocator<OVM::Var>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1CB798960);
}

uint64_t std::__shared_ptr_pointer<OVM::Var *,OVM::InterpreterImpl::Evaluate(OVM::UnaryOperator const*)::$_0,std::allocator<OVM::Var>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void sub_1CA55BD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1CA55BF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OVM::Deserialize(OVM *this@<X0>, uint64_t a2@<X8>)
{
  v68[4] = *MEMORY[0x1E4F143B8];
  unint64_t v46 = this;
  if ((unint64_t)[(OVM *)v46 length] <= 4)
  {
    OVM::Error::Unexpected<char const(&)[37]>("Deserialize less than 5 bytes data?!", (uint64_t)&v64);
LABEL_3:
    *(_OWORD *)a2 = v64;
    *(void *)(a2 + 16) = v65;
    uint64_t v65 = 0;
    long long v64 = 0uLL;
    *(unsigned char *)(a2 + 24) = 0;
    *(void *)&long long v59 = &v64;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v59);
    goto LABEL_4;
  }
  uint64_t v3 = v46;
  uint64_t v4 = (unsigned __int8 *)[(OVM *)v3 bytes];
  if (*v4 == 2)
  {
    unint64_t v5 = v3;
    uint64_t v6 = *(unsigned int *)([(OVM *)v5 bytes] + 1);
    if (v6 > 0x100000)
    {
      OVM::Error::Unexpected<char const(&)[40]>("Desrialized plugins should not be > 1MB", (uint64_t)&v64);
      goto LABEL_3;
    }
    id v40 = [MEMORY[0x1E4F1CA58] dataWithLength:v6];
    int v8 = (uint8_t *)[v40 bytes];
    size_t v9 = [v40 length];
    unint64_t v10 = v5;
    if (compression_decode_buffer(v8, v9, (const uint8_t *)([(OVM *)v10 bytes] + 5), [(OVM *)v10 length] - 5, 0, COMPRESSION_LZ4) == v6)
    {
      id v56 = 0;
      uint64_t v11 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v40 options:0 error:&v56];
      id v12 = v56;
      v34 = v12;
      v35 = v11;
      if (v11 && !v12)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          OVM::Error::Unexpected<char const(&)[21]>("Wrong top-level type", (uint64_t)&v64);
          *(_OWORD *)a2 = v64;
          *(void *)(a2 + 16) = v65;
          uint64_t v65 = 0;
          long long v64 = 0uLL;
          *(unsigned char *)(a2 + 24) = 0;
          *(void *)&long long v59 = &v64;
          std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v59);
          goto LABEL_65;
        }
        uint64_t v13 = operator new(0x30uLL);
        v13[1] = 0;
        v13[2] = 0;
        *uint64_t v13 = &unk_1F24D3480;
        v13[4] = 0;
        v13[3] = v13 + 4;
        v37 = (uint64_t **)(v13 + 3);
        unint64_t v33 = (std::__shared_weak_count *)v13;
        v13[5] = 0;
        long long v52 = 0u;
        long long v53 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        obuint64_t j = v11;
        uint64_t v38 = [obj countByEnumeratingWithState:&v52 objects:v63 count:16];
        if (!v38)
        {
LABEL_55:

          *(void *)a2 = v37;
          *(void *)(a2 + 8) = v33;
          *(unsigned char *)(a2 + 24) = 1;
          goto LABEL_65;
        }
        uint64_t v36 = *(void *)v53;
LABEL_16:
        uint64_t v42 = 0;
        while (1)
        {
          if (*(void *)v53 != v36) {
            objc_enumerationMutation(obj);
          }
          v41 = *(void **)(*((void *)&v52 + 1) + 8 * v42);
          v43 = [obj objectForKeyedSubscript:];
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            OVM::Error::Unexpected<char const(&)[22]>("Wrong subroutine type", (uint64_t)&v64);
            *(_OWORD *)a2 = v64;
            *(void *)(a2 + 16) = v65;
            uint64_t v65 = 0;
            long long v64 = 0uLL;
            *(unsigned char *)(a2 + 24) = 0;
            *(void *)&long long v59 = &v64;
            std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v59);

            std::__shared_weak_count::__release_shared[abi:ne180100](v33);
            goto LABEL_65;
          }
          id v44 = v43;
          std::string::basic_string[abi:ne180100]<0>(&v64, "parameters");
          std::string::basic_string[abi:ne180100]<0>(v66, "instructions");
          *(void *)&long long v59 = &v64;
          *((void *)&v59 + 1) = 2;
          OVM::AssertKeys(v44, (uint64_t **)&v59);
          for (uint64_t i = 0; i != -6; i -= 3)
          {
            if (SHIBYTE(v66[i + 2]) < 0) {
              operator delete((void *)v66[i]);
            }
          }
          long long v15 = (char *)operator new(0x48uLL);
          *((void *)v15 + 1) = 0;
          *((void *)v15 + 2) = 0;
          *(void *)long long v15 = &unk_1F24D30A0;
          *(_OWORD *)(v15 + 24) = 0u;
          uint64_t v49 = (uint64_t *)(v15 + 24);
          *(_OWORD *)(v15 + 40) = 0u;
          *(_OWORD *)(v15 + 56) = 0u;
          long long v59 = 0u;
          long long v60 = 0u;
          long long v61 = 0u;
          long long v62 = 0u;
          id v47 = [v44 objectForKeyedSubscript:@"parameters"];
          uint64_t v16 = [v47 countByEnumeratingWithState:&v59 objects:&v64 count:16];
          if (v16) {
            break;
          }
LABEL_46:

          uint64_t v27 = [v44 objectForKeyedSubscript:@"instructions"];
          OVM::DeserializeExpressions((uint64_t *)&v67, v27);
          std::vector<std::unique_ptr<OVM::Expression>>::__vdeallocate((void **)v15 + 6);
          *((std::string *)v15 + 2) = v67;
          memset(&v67, 0, sizeof(v67));
          v57 = &v67;
          std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v57);

          if (v41)
          {
            [v41 asCXXString];
          }
          else
          {
            long long v64 = 0uLL;
            uint64_t v65 = 0;
          }
          *(void *)&long long v59 = &v64;
          uint64_t v28 = std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v37, (void **)&v64, (uint64_t)&std::piecewise_construct, (_OWORD **)&v59);
          int v29 = (std::__shared_weak_count *)*((void *)v28 + 8);
          *((void *)v28 + 7) = v49;
          *((void *)v28 + 8) = v15;
          if (v29) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v29);
          }
          if (SHIBYTE(v65) < 0) {
            operator delete((void *)v64);
          }

          if (++v42 == v38)
          {
            uint64_t v38 = [obj countByEnumeratingWithState:&v52 objects:v63 count:16];
            if (!v38) {
              goto LABEL_55;
            }
            goto LABEL_16;
          }
        }
        uint64_t v17 = *(void *)v60;
LABEL_26:
        uint64_t v18 = 0;
        while (1)
        {
          if (*(void *)v60 != v17) {
            objc_enumerationMutation(v47);
          }
          id v19 = *(id *)(*((void *)&v59 + 1) + 8 * v18);
          std::string::basic_string[abi:ne180100]<0>(&v67, "type");
          std::string::basic_string[abi:ne180100]<0>(v68, "name");
          v51[0] = (uint64_t *)&v67;
          v51[1] = (uint64_t *)2;
          OVM::AssertKeys(v19, v51);
          for (uint64_t j = 0; j != -6; j -= 3)
          {
            if (SHIBYTE(v68[j + 2]) < 0) {
              operator delete((void *)v68[j]);
            }
          }
          uint64_t v21 = [v19 objectForKeyedSubscript:@"type"];
          int v22 = OVM::TypeInfo::ToType([v21 intValue]);
          uint64_t v23 = [v19 objectForKeyedSubscript:@"name"];
          uint64_t v24 = v23;
          if (v23)
          {
            [v23 asCXXString];
            LODWORD(v57) = v22;
            if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, v67.__r_.__value_.__l.__data_, v67.__r_.__value_.__l.__size_);
              if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v67.__r_.__value_.__l.__data_);
              }
              goto LABEL_39;
            }
          }
          else
          {
            memset(&v67, 0, sizeof(v67));
            LODWORD(v57) = v22;
          }
          std::string __p = v67;
LABEL_39:

          unint64_t v25 = *((void *)v15 + 4);
          if (v25 >= *((void *)v15 + 5))
          {
            uint64_t v26 = std::vector<OVM::Param>::__push_back_slow_path<OVM::Param>(v49, (uint64_t)&v57);
          }
          else
          {
            std::vector<OVM::Param>::__construct_one_at_end[abi:ne180100]<OVM::Param>((uint64_t)v49, (uint64_t)&v57);
            uint64_t v26 = v25 + 32;
          }
          *((void *)v15 + 4) = v26;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (++v18 == v16)
          {
            uint64_t v16 = [v47 countByEnumeratingWithState:&v59 objects:&v64 count:16];
            if (!v16) {
              goto LABEL_46;
            }
            goto LABEL_26;
          }
        }
      }
      long long v30 = [v12 localizedFailureReason];
      long long v31 = v30;
      if (v30) {
        [v30 asCXXString];
      }
      else {
        memset(&v67, 0, sizeof(v67));
      }
      OVM::Error::Error<>((std::string **)&v64, (uint64_t)&v67);
      uint64_t v32 = v65;
      long long v50 = v64;
      uint64_t v65 = 0;
      long long v64 = 0uLL;
      v57 = (std::string *)&v64;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v57);
      *(_OWORD *)a2 = v50;
      *(void *)(a2 + 16) = v32;
      *(void *)&long long v60 = 0;
      long long v59 = 0uLL;
      *(unsigned char *)(a2 + 24) = 0;
      *(void *)&long long v64 = &v59;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
      if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v67.__r_.__value_.__l.__data_);
      }

LABEL_65:
    }
    else
    {
      OVM::Error::Unexpected<char const(&)[21]>("Decompression failed", (uint64_t)&v64);
      *(_OWORD *)a2 = v64;
      *(void *)(a2 + 16) = v65;
      uint64_t v65 = 0;
      long long v64 = 0uLL;
      *(unsigned char *)(a2 + 24) = 0;
      *(void *)&long long v59 = &v64;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v59);
    }

    goto LABEL_4;
  }
  StringUtil::Format((StringUtil *)"Bad version %d", &v67, *v4);
  OVM::Error::Error<>((std::string **)&v64, (uint64_t)&v67);
  uint64_t v7 = v65;
  long long v48 = v64;
  uint64_t v65 = 0;
  long long v64 = 0uLL;
  v57 = (std::string *)&v64;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v57);
  *(_OWORD *)a2 = v48;
  *(void *)(a2 + 16) = v7;
  *(void *)&long long v60 = 0;
  long long v59 = 0uLL;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)&long long v64 = &v59;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v64);
  if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v67.__r_.__value_.__l.__data_);
  }
LABEL_4:
}

void sub_1CA55C8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  _Unwind_Resume(a1);
}

void OVM::Error::Unexpected<char const(&)[37]>(char *__s@<X0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  OVM::Error::Error<>((std::string **)&v5, (uint64_t)__p);
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  uint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA55CD18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void OVM::Error::Unexpected<char const(&)[40]>(char *__s@<X0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  OVM::Error::Error<>((std::string **)&v5, (uint64_t)__p);
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  uint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA55CDAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void OVM::Error::Unexpected<char const(&)[21]>(char *__s@<X0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  OVM::Error::Error<>((std::string **)&v5, (uint64_t)__p);
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  uint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA55CE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void OVM::Error::Unexpected<char const(&)[22]>(char *__s@<X0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  OVM::Error::Error<>((std::string **)&v5, (uint64_t)__p);
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  uint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA55CED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void OVM::Error::Unexpected<char const*>(char **a1@<X0>, uint64_t a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, *a1);
  OVM::Error::Error<>((std::string **)&v5, (uint64_t)__p);
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  uint64_t v6 = 0;
  long long v5 = 0uLL;
  uint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CA55CF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t OVM::Error::Add(uint64_t *a1, long long *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = std::vector<std::string>::__push_back_slow_path<std::string const&>(a1, a2);
  }
  else
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a1, a2);
    uint64_t result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

void OVM::AssertKeys(void *a1, uint64_t **a2)
{
  id v13 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1CB7988A0](exception, "Expected a dictionary");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  unint64_t v3 = a2[1];
  if (v3)
  {
    char v4 = *a2;
    uint64_t v5 = 24 * (void)v3;
    do
    {
      uint64_t v6 = [NSString stringWithCXXString:v4];
      uint64_t v7 = [v13 objectForKeyedSubscript:v6];

      if (!v7)
      {
        int v8 = __cxa_allocate_exception(0x10uLL);
        size_t v9 = v4;
        unint64_t v10 = v8;
        uint64_t v11 = v9;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v11 = (uint64_t *)*v9;
        }
        StringUtil::Format((StringUtil *)"Missing mandatory key %s", v14, v11);
        MEMORY[0x1CB7988B0](v10, v14);
        __cxa_throw(v10, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      v4 += 3;
      v5 -= 24;
    }
    while (v5);
  }
}

void sub_1CA55D134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  __cxa_free_exception(v17);

  _Unwind_Resume(a1);
}

void OVM::DeserializeExpressions(uint64_t *__return_ptr a1@<X8>, OVM *this@<X0>)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  char v4 = this;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  memset(v7, 0, sizeof(v7));
  uint64_t v5 = v4;
  if ([(OVM *)v5 countByEnumeratingWithState:v7 objects:v8 count:16]) {
    OVM::DeserializeExprsesion(**((OVM ***)&v7[0] + 1), v6);
  }
}

void sub_1CA55D358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<OVM::Subroutine>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D30A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<OVM::Subroutine>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D30A0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1CB798960);
}

void std::__shared_ptr_emplace<OVM::Subroutine>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 24);
  uint64_t v2 = (void **)(a1 + 48);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v2);
  uint64_t v2 = v1;
  std::vector<OVM::Param>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void std::vector<OVM::Param>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<OVM::Param>::__clear[abi:ne180100]((uint64_t *)v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<OVM::Param>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void std::vector<OVM::Param>::__construct_one_at_end[abi:ne180100]<OVM::Param>(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(_DWORD *)uint64_t v3 = *(_DWORD *)a2;
  char v4 = (std::string *)(v3 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(v3 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
  }
  *(void *)(a1 + 8) = v3 + 32;
}

void sub_1CA55D598(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<OVM::Param>::__push_back_slow_path<OVM::Param>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  id v19 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<OVM::Param>>(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  uint64_t v11 = &v10[32 * v4];
  v16[0] = v10;
  v16[1] = v11;
  uint64_t v17 = v11;
  uint64_t v18 = &v10[32 * v9];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)a2;
  id v12 = (std::string *)(v11 + 8);
  if (*(char *)(a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)(a2 + 8), *(void *)(a2 + 16));
    uint64_t v11 = v17;
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 8);
    *((void *)v11 + 3) = *(void *)(a2 + 24);
    *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
  }
  uint64_t v17 = v11 + 32;
  std::vector<OVM::Param>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<OVM::Param>::~__split_buffer((uint64_t)v16);
  return v14;
}

void sub_1CA55D69C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<OVM::Param>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<OVM::Param>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>,std::reverse_iterator<OVM::Param*>,std::reverse_iterator<OVM::Param*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<OVM::Param>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>,std::reverse_iterator<OVM::Param*>,std::reverse_iterator<OVM::Param*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v18 = a6;
  *((void *)&v18 + 1) = a7;
  long long v17 = v18;
  v15[0] = a1;
  v15[1] = &v17;
  v15[2] = &v18;
  char v16 = 0;
  if (a3 == a5)
  {
    uint64_t v13 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      int v10 = *(_DWORD *)(v9 - 32);
      v9 -= 32;
      *(_DWORD *)(v7 - 32) = v10;
      uint64_t v11 = (std::string *)(v7 - 24);
      if (*(char *)(v9 + 31) < 0)
      {
        std::string::__init_copy_ctor_external(v11, *(const std::string::value_type **)(a3 - 24), *(void *)(a3 - 16));
        uint64_t v7 = *((void *)&v18 + 1);
      }
      else
      {
        long long v12 = *(_OWORD *)(v9 + 8);
        *(void *)(v7 - 8) = *(void *)(v9 + 24);
        *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v12;
      }
      v7 -= 32;
      *((void *)&v18 + 1) = v7;
      a3 = v9;
    }
    while (v9 != a5);
    uint64_t v13 = v18;
  }
  char v16 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v15);
  return v13;
}

void sub_1CA55D830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<OVM::Param>,std::reverse_iterator<OVM::Param*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    v1 += 32;
  }
}

uint64_t std::__split_buffer<OVM::Param>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<OVM::Param>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 32;
      *(void *)(a1 + 16) = v2 - 32;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v5 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t OVM::TypeInfo::ToType(uint64_t this)
{
  if ((this - 1) > 3)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    uint64_t v2 = std::bad_cast::bad_cast(exception);
    __cxa_throw(v2, MEMORY[0x1E4FBA358], MEMORY[0x1E4FBA2B8]);
  }
  return this;
}

void OVM::DeserializeExprsesion(OVM *this, NSDictionary *a2)
{
  v83[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = this;
  std::string::basic_string[abi:ne180100]<0>(__p, "etype");
  v76[0] = __p;
  v76[1] = (void *)1;
  OVM::AssertKeys(v2, (uint64_t **)v76);
  if (SHIBYTE(v80) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v3 = [(OVM *)v2 objectForKeyedSubscript:@"etype"];
  int v4 = OVM::Expression::ToKind([v3 intValue]);

  switch(v4)
  {
    case 1:
      uint64_t v11 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "varName");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v11, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      long long v12 = [(OVM *)v11 objectForKeyedSubscript:@"varName"];
      if (v12)
      {
        [v12 asCXXString];
      }
      else
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v80 = 0;
      }
      operator new();
    case 2:
      uint64_t v13 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "receiver");
      std::string::basic_string[abi:ne180100]<0>(v81, "parameters");
      std::string::basic_string[abi:ne180100]<0>(v82, "selector");
      std::string::basic_string[abi:ne180100]<0>(v83, "returntype");
      v76[0] = __p;
      v76[1] = (void *)4;
      OVM::AssertKeys(v13, (uint64_t **)v76);
      uint64_t v14 = 0;
      while (1)
      {
        if (SHIBYTE(v83[v14 + 2]) < 0) {
          operator delete((void *)v83[v14]);
        }
        v14 -= 3;
        if (v14 == -12)
        {
          long long v15 = [(OVM *)v13 objectForKeyedSubscript:@"receiver"];
          OVM::DeserializeExprsesion((uint64_t *)&v73, v15, v16);
          long long v17 = [(OVM *)v13 objectForKeyedSubscript:@"parameters"];
          OVM::DeserializeExpressions((uint64_t *)__p, v17, v18);
          id v19 = [(OVM *)v13 objectForKeyedSubscript:@"selector"];
          if (v19)
          {
            [v19 asCXXString];
          }
          else
          {
            v76[0] = 0;
            v76[1] = 0;
            uint64_t v77 = 0;
          }
          uint64_t v72 = [(OVM *)v13 objectForKeyedSubscript:@"returntype"];
          LODWORD(v78) = OVM::TypeInfo::ToType(v72);
          std::make_unique[abi:ne180100]<OVM::ObjCMessage,std::unique_ptr<OVM::Expression>,std::vector<std::unique_ptr<OVM::Expression>>,std::string,OVM::TypeInfo::Type>();
        }
      }
    case 3:
      uint64_t v20 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "classname");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v20, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      uint64_t v21 = [(OVM *)v20 objectForKeyedSubscript:@"classname"];
      if (v21)
      {
        [v21 asCXXString];
      }
      else
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v80 = 0;
      }
      operator new();
    case 4:
      int v22 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "funcName");
      std::string::basic_string[abi:ne180100]<0>(v81, "parameters");
      v76[0] = __p;
      v76[1] = (void *)2;
      OVM::AssertKeys(v22, (uint64_t **)v76);
      uint64_t v23 = 0;
      while (1)
      {
        if (SHIBYTE(v81[v23 + 2]) < 0) {
          operator delete((void *)v81[v23]);
        }
        v23 -= 3;
        if (v23 == -6)
        {
          uint64_t v24 = [(OVM *)v22 objectForKeyedSubscript:@"funcName"];
          if (v24)
          {
            [v24 asCXXString];
          }
          else
          {
            __p[0] = 0;
            __p[1] = 0;
            uint64_t v80 = 0;
          }
          v70 = [(OVM *)v22 objectForKeyedSubscript:@"parameters"];
          OVM::DeserializeExpressions((uint64_t *)v76, v70, v71);
          std::make_unique[abi:ne180100]<OVM::FunctionCall,std::string,std::vector<std::unique_ptr<OVM::Expression>>>();
        }
      }
    case 5:
      id v47 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "expr");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v47, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      long long v48 = [(OVM *)v47 objectForKeyedSubscript:@"expr"];
      OVM::DeserializeExprsesion((uint64_t *)__p, v48, v49);
      operator new();
    case 6:
      long long v50 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "condition");
      std::string::basic_string[abi:ne180100]<0>(v81, "ifBranch");
      std::string::basic_string[abi:ne180100]<0>(v82, "ifBranch");
      v76[0] = __p;
      v76[1] = (void *)3;
      OVM::AssertKeys(v50, (uint64_t **)v76);
      uint64_t v51 = 0;
      while (1)
      {
        if (SHIBYTE(v82[v51 + 2]) < 0) {
          operator delete((void *)v82[v51]);
        }
        v51 -= 3;
        if (v51 == -9)
        {
          long long v52 = [(OVM *)v50 objectForKeyedSubscript:@"condition"];
          OVM::DeserializeExprsesion(&v75, v52, v53);
          long long v54 = [(OVM *)v50 objectForKeyedSubscript:@"ifBranch"];
          OVM::DeserializeExpressions((uint64_t *)&v74, v54, v55);
          id v56 = [(OVM *)v50 objectForKeyedSubscript:@"elseBranch"];
          OVM::DeserializeExpressions((uint64_t *)&v73, v56, v57);
          operator new();
        }
      }
    case 7:
      unint64_t v25 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "body");
      std::string::basic_string[abi:ne180100]<0>(v81, "behavior");
      v76[0] = __p;
      v76[1] = (void *)2;
      OVM::AssertKeys(v25, (uint64_t **)v76);
      for (uint64_t i = 0; i != -6; i -= 3)
      {
        if (SHIBYTE(v81[i + 2]) < 0) {
          operator delete((void *)v81[i]);
        }
      }
      uint64_t v27 = [(OVM *)v25 objectForKeyedSubscript:@"init"];
      uint64_t v28 = [(OVM *)v25 objectForKeyedSubscript:@"cond"];
      int v29 = [(OVM *)v25 objectForKeyedSubscript:@"incr"];
      long long v31 = [(OVM *)v25 objectForKeyedSubscript:@"body"];
      if (v27)
      {
        OVM::DeserializeExprsesion((uint64_t *)&v73, v27, v30);
        if (v28) {
          goto LABEL_37;
        }
      }
      else
      {
        *(void *)&long long v73 = 0;
        if (v28)
        {
LABEL_37:
          OVM::DeserializeExprsesion(&v78, v28, v30);
          if (v29)
          {
LABEL_38:
            OVM::DeserializeExprsesion(&v75, v29, v30);
            goto LABEL_87;
          }
LABEL_86:
          uint64_t v75 = 0;
LABEL_87:
          OVM::DeserializeExpressions((uint64_t *)v76, v31, (NSArray *)v30);
          [(OVM *)v25 objectForKeyedSubscript:@"behavior"];
          [(id)objc_claimAutoreleasedReturnValue() intValue];
          operator new();
        }
      }
      uint64_t v78 = 0;
      if (v29) {
        goto LABEL_38;
      }
      goto LABEL_86;
    case 8:
      v58 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "value");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v58, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      long long v59 = [(OVM *)v58 objectForKeyedSubscript:@"value"];
      if (v59)
      {
        [v59 asCXXString];
      }
      else
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v80 = 0;
      }
      operator new();
    case 9:
      uint64_t v32 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "value");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v32, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      [(OVM *)v32 objectForKeyedSubscript:@"value"];
      [(id)objc_claimAutoreleasedReturnValue() longLongValue];
      operator new();
    case 10:
      long long v60 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "lhs");
      std::string::basic_string[abi:ne180100]<0>(v81, "rhs");
      std::string::basic_string[abi:ne180100]<0>(v82, "kind");
      std::string::basic_string[abi:ne180100]<0>(v83, "compound");
      v76[0] = __p;
      v76[1] = (void *)4;
      OVM::AssertKeys(v60, (uint64_t **)v76);
      uint64_t v61 = 0;
      while (1)
      {
        if (SHIBYTE(v83[v61 + 2]) < 0) {
          operator delete((void *)v83[v61]);
        }
        v61 -= 3;
        if (v61 == -12)
        {
          long long v62 = [(OVM *)v60 objectForKeyedSubscript:@"lhs"];
          OVM::DeserializeExprsesion((uint64_t *)__p, v62, v63);
          long long v64 = [(OVM *)v60 objectForKeyedSubscript:@"rhs"];
          OVM::DeserializeExprsesion((uint64_t *)v76, v64, v65);
          uint64_t v66 = [(OVM *)v60 objectForKeyedSubscript:@"kind"];
          OVM::BinaryOperator::ToKind(v66);
          [(OVM *)v60 objectForKeyedSubscript:@"compound"];
          [(id)objc_claimAutoreleasedReturnValue() BOOLValue];
          operator new();
        }
      }
    case 11:
      unint64_t v33 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "rhs");
      std::string::basic_string[abi:ne180100]<0>(v81, "kind");
      v76[0] = __p;
      v76[1] = (void *)2;
      OVM::AssertKeys(v33, (uint64_t **)v76);
      uint64_t v34 = 0;
      while (1)
      {
        if (SHIBYTE(v81[v34 + 2]) < 0) {
          operator delete((void *)v81[v34]);
        }
        v34 -= 3;
        if (v34 == -6)
        {
          v35 = [(OVM *)v33 objectForKeyedSubscript:@"rhs"];
          OVM::DeserializeExprsesion((uint64_t *)__p, v35, v36);
          uint64_t v37 = [(OVM *)v33 objectForKeyedSubscript:@"kind"];
          OVM::UnaryOperator::ToKind(v37);
          operator new();
        }
      }
    case 12:
      uint64_t v38 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "keysAndValues");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v38, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      uint64_t v39 = [(OVM *)v38 objectForKeyedSubscript:@"keysAndValues"];
      OVM::DeserializeExpressions((uint64_t *)__p, v39, v40);
      operator new();
    case 13:
      std::string v67 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "values");
      v76[0] = __p;
      v76[1] = (void *)1;
      OVM::AssertKeys(v67, (uint64_t **)v76);
      if (SHIBYTE(v80) < 0) {
        operator delete(__p[0]);
      }
      v68 = [(OVM *)v67 objectForKeyedSubscript:@"values"];
      OVM::DeserializeExpressions((uint64_t *)__p, v68, v69);
      operator new();
    case 14:
      operator new();
    case 15:
      v41 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "exprs");
      std::string::basic_string[abi:ne180100]<0>(v81, "retVal");
      v76[0] = __p;
      v76[1] = (void *)2;
      OVM::AssertKeys(v41, (uint64_t **)v76);
      uint64_t v42 = 0;
      while (1)
      {
        if (SHIBYTE(v81[v42 + 2]) < 0) {
          operator delete((void *)v81[v42]);
        }
        v42 -= 3;
        if (v42 == -6)
        {
          v43 = [(OVM *)v41 objectForKeyedSubscript:@"exprs"];
          OVM::DeserializeExpressions((uint64_t *)v76, v43, v44);
          uint64_t v45 = [(OVM *)v41 objectForKeyedSubscript:@"retVal"];
          OVM::DeserializeExprsesion((uint64_t *)&v73, v45, v46);
          operator new();
        }
      }
    default:
      uint64_t v5 = v2;
      std::string::basic_string[abi:ne180100]<0>(__p, "type");
      std::string::basic_string[abi:ne180100]<0>(v81, "name");
      v76[0] = __p;
      v76[1] = (void *)2;
      OVM::AssertKeys(v5, (uint64_t **)v76);
      for (uint64_t j = 0; j != -6; j -= 3)
      {
        if (SHIBYTE(v81[j + 2]) < 0) {
          operator delete((void *)v81[j]);
        }
      }
      uint64_t v7 = [(OVM *)v5 objectForKeyedSubscript:@"initializer"];
      uint64_t v8 = [(OVM *)v5 objectForKeyedSubscript:@"type"];
      OVM::TypeInfo::ToType(v8);
      uint64_t v9 = [(OVM *)v5 objectForKeyedSubscript:@"name"];
      if (v9)
      {
        [v9 asCXXString];
        if (v7)
        {
LABEL_10:
          OVM::DeserializeExprsesion((uint64_t *)v76, v7, v10);
          goto LABEL_90;
        }
      }
      else
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v80 = 0;
        if (v7) {
          goto LABEL_10;
        }
      }
      v76[0] = 0;
LABEL_90:
      operator new();
  }
}

void sub_1CA55ECA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (v35) {
    OVM::DeserializeExprsesion();
  }
  MEMORY[0x1CB798960](v34, 0x10B3C40558ED239);
  if (a29 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::unique_ptr<OVM::Expression>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    uint64_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>::operator()[abi:ne180100]((void *)a1);
  }
  return a1;
}

void *std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<OVM::Expression>>,std::reverse_iterator<std::unique_ptr<OVM::Expression>*>>::operator()[abi:ne180100](void *result)
{
  uint64_t v1 = *(void ***)(result[2] + 8);
  uint64_t v2 = *(void ***)(result[1] + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    *uint64_t v1 = 0;
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    ++v1;
  }
  return result;
}

void **std::__split_buffer<std::unique_ptr<OVM::Expression>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *std::__split_buffer<std::unique_ptr<OVM::Expression>>::__destruct_at_end[abi:ne180100](void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    int v4 = result;
    do
    {
      v4[2] = v2 - 8;
      uint64_t result = *(void **)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t OVM::Expression::ToKind(uint64_t this)
{
  if (this > 0xF)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    uint64_t v2 = std::bad_cast::bad_cast(exception);
    __cxa_throw(v2, MEMORY[0x1E4FBA358], MEMORY[0x1E4FBA2B8]);
  }
  return this;
}

void OVM::Declaration::~Declaration(OVM::Declaration *this)
{
  *(void *)this = &unk_1F24D30F0;
  uint64_t v2 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*((char *)this + 39) < 0) {
    operator delete(*((void **)this + 2));
  }
}

{
  uint64_t v2;
  uint64_t vars8;

  *(void *)this = &unk_1F24D30F0;
  uint64_t v2 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*((char *)this + 39) < 0) {
    operator delete(*((void **)this + 2));
  }

  JUMPOUT(0x1CB798960);
}

void OVM::Value::~Value(void **this)
{
  *this = &unk_1F24D3138;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1F24D3138;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }

  JUMPOUT(0x1CB798960);
}

void std::make_unique[abi:ne180100]<OVM::ObjCMessage,std::unique_ptr<OVM::Expression>,std::vector<std::unique_ptr<OVM::Expression>>,std::string,OVM::TypeInfo::Type>()
{
}

void sub_1CA55FBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::make_unique[abi:ne180100]<OVM::ObjCMessage,std::unique_ptr<OVM::Expression>,std::vector<std::unique_ptr<OVM::Expression>>,std::string,OVM::TypeInfo::Type>(&a16, &a20);
  MEMORY[0x1CB798960](v20, 0x10B3C4059E6A044);
  _Unwind_Resume(a1);
}

uint64_t OVM::ObjCMessage::ObjCMessage(uint64_t a1, uint64_t *a2, uint64_t a3, long long *a4, int a5)
{
  *(_DWORD *)(a1 + 8) = 2;
  *(void *)a1 = &unk_1F24D3170;
  uint64_t v6 = *a2;
  *a2 = 0;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a3;
  *(void *)(a1 + 40) = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)(a1 + 48) = a5;
  uint64_t v7 = (std::string *)(a1 + 56);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v8 = *a4;
    v7->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  return a1;
}

void sub_1CA55FCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  long long v12 = v11;
  a10 = v12;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&a10);
  uint64_t v14 = *(void *)(v10 + 16);
  *(void *)(v10 + 16) = 0;
  if (v14) {
    OVM::DeserializeExprsesion();
  }
  _Unwind_Resume(a1);
}

void OVM::ObjCMessage::~ObjCMessage(void **this)
{
  *this = &unk_1F24D3170;
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  uint64_t v3 = this + 3;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = this[2];
  this[2] = 0;
  if (v2) {
    (*(void (**)(void *))(*(void *)v2 + 8))(v2);
  }
}

{
  void *v2;
  void **v3;

  *this = &unk_1F24D3170;
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  uint64_t v3 = this + 3;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = this[2];
  this[2] = 0;
  if (v2) {
    (*(void (**)(void *))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1CB798960](this, 0x10B3C4059E6A044);
}

void OVM::ObjCClass::~ObjCClass(void **this)
{
  *this = &unk_1F24D31A8;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1F24D31A8;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }

  JUMPOUT(0x1CB798960);
}

void std::make_unique[abi:ne180100]<OVM::FunctionCall,std::string,std::vector<std::unique_ptr<OVM::Expression>>>()
{
}

void sub_1CA55FFA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  *(void *)(v20 - 40) = v19;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v20 - 40));
  if (a18 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1CB798960](v18, 0x10B3C406AA0CD03);
  _Unwind_Resume(a1);
}

uint64_t OVM::FunctionCall::FunctionCall(uint64_t a1, long long *a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 8) = 4;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F24D31E0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a3;
  *(void *)(a1 + 32) = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  int v4 = (std::string *)(a1 + 40);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    v4->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
  }
  return a1;
}

void sub_1CA560088(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void OVM::FunctionCall::~FunctionCall(void **this)
{
  *this = &unk_1F24D31E0;
  if (*((char *)this + 63) < 0) {
    operator delete(this[5]);
  }
  uint64_t v2 = this + 2;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v2);
}

{
  void **v2;

  *this = &unk_1F24D31E0;
  if (*((char *)this + 63) < 0) {
    operator delete(this[5]);
  }
  uint64_t v2 = this + 2;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v2);
  MEMORY[0x1CB798960](this, 0x10B3C406AA0CD03);
}

void OVM::StringLiteral::~StringLiteral(void **this)
{
  *this = &unk_1F24D3218;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }
}

{
  uint64_t vars8;

  *this = &unk_1F24D3218;
  if (*((char *)this + 39) < 0) {
    operator delete(this[2]);
  }

  JUMPOUT(0x1CB798960);
}

void OVM::Conditional::~Conditional(OVM::Conditional *this)
{
  *(void *)this = &unk_1F24D3250;
  uint64_t v3 = (void **)((char *)this + 48);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = (void **)((char *)this + 24);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
}

{
  uint64_t v2;
  void **v3;

  *(void *)this = &unk_1F24D3250;
  uint64_t v3 = (void **)((char *)this + 48);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = (void **)((char *)this + 24);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1CB798960](this, 0x10A1C402F18DB2ELL);
}

void OVM::IntegerLiteral::~IntegerLiteral(OVM::IntegerLiteral *this)
{
}

uint64_t OVM::BinaryOperator::ToKind(uint64_t this)
{
  if (this > 0x11)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    uint64_t v2 = std::bad_cast::bad_cast(exception);
    __cxa_throw(v2, MEMORY[0x1E4FBA358], MEMORY[0x1E4FBA2B8]);
  }
  return this;
}

void OVM::BinaryOperator::~BinaryOperator(OVM::BinaryOperator *this)
{
  *(void *)this = &unk_1F24D32C0;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t vars8;

  *(void *)this = &unk_1F24D32C0;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  JUMPOUT(0x1CB798960);
}

uint64_t OVM::UnaryOperator::ToKind(uint64_t this)
{
  if (this > 7)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    uint64_t v2 = std::bad_cast::bad_cast(exception);
    __cxa_throw(v2, MEMORY[0x1E4FBA358], MEMORY[0x1E4FBA2B8]);
  }
  return this;
}

void OVM::UnaryOperator::~UnaryOperator(OVM::UnaryOperator *this)
{
  *(void *)this = &unk_1F24D32F8;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
}

{
  uint64_t v2;
  uint64_t vars8;

  *(void *)this = &unk_1F24D32F8;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x1CB798960);
}

void OVM::Return::~Return(OVM::Return *this)
{
  *(void *)this = &unk_1F24D3330;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
}

{
  uint64_t v2;
  uint64_t vars8;

  *(void *)this = &unk_1F24D3330;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  JUMPOUT(0x1CB798960);
}

void OVM::Loop::~Loop(OVM::Loop *this)
{
  *(void *)this = &unk_1F24D3368;
  long long v5 = (void **)((char *)this + 40);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;

  *(void *)this = &unk_1F24D3368;
  long long v5 = (void **)((char *)this + 40);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  MEMORY[0x1CB798960](this, 0x10A1C407AE6A5FBLL);
}

void OVM::DictionaryLiteral::~DictionaryLiteral(OVM::DictionaryLiteral *this)
{
  *(void *)this = &unk_1F24D33A0;
  uint64_t v1 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

{
  void **v2;

  *(void *)this = &unk_1F24D33A0;
  uint64_t v2 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v2);
  MEMORY[0x1CB798960](this, 0x10A1C4037ACD87BLL);
}

void OVM::ArrayLiteral::~ArrayLiteral(OVM::ArrayLiteral *this)
{
  *(void *)this = &unk_1F24D33D8;
  uint64_t v1 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

{
  void **v2;

  *(void *)this = &unk_1F24D33D8;
  uint64_t v2 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v2);
  MEMORY[0x1CB798960](this, 0x10A1C4037ACD87BLL);
}

void OVM::NullPointerLiteral::~NullPointerLiteral(OVM::NullPointerLiteral *this)
{
}

void OVM::CompoundExpression::~CompoundExpression(OVM::CompoundExpression *this)
{
  *(void *)this = &unk_1F24D3448;
  uint64_t v2 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
}

{
  uint64_t v2;
  void **v3;

  *(void *)this = &unk_1F24D3448;
  uint64_t v2 = *((void *)this + 5);
  *((void *)this + 5) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void **)((char *)this + 16);
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v3);
  MEMORY[0x1CB798960](this, 0x10A1C409BA56AB0);
}

void std::vector<std::unique_ptr<OVM::Expression>>::__vdeallocate(void **a1)
{
  if (*a1)
  {
    std::vector<std::unique_ptr<OVM::Expression>>::__clear[abi:ne180100](a1);
    operator delete(*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void *std::vector<std::unique_ptr<OVM::Expression>>::__clear[abi:ne180100](void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)*result;
  uint64_t v3 = (void *)result[1];
  while (v3 != v2)
  {
    uint64_t v4 = (void *)*--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

void std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<OVM::Expression>>::__clear[abi:ne180100](v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::__shared_ptr_emplace<OVM::Script>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D3480;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<OVM::Script>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D3480;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1CB798960);
}

void std::__shared_ptr_emplace<OVM::Script>::__on_zero_shared(uint64_t a1)
{
}

_OWORD *std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, void **a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v6 = (void **)std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__find_equal<std::string>((uint64_t)a1, &v14, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x48uLL);
    v12[1] = a1 + 1;
    uint64_t v9 = *a4;
    uint64_t v10 = *((void *)*a4 + 2);
    v7[2] = **a4;
    *((void *)v7 + 6) = v10;
    v9[1] = 0;
    v9[2] = 0;
    *uint64_t v9 = 0;
    *((void *)v7 + 7) = 0;
    *((void *)v7 + 8) = 0;
    char v13 = 1;
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__insert_node_at(a1, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,void *>>>>::reset[abi:ne180100]((uint64_t)v12, 0);
  }
  return v7;
}

void sub_1CA5637F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_1CA564870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1CA565088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SelectByNameCmd(void *a1)
{
  id v1 = a1;
  size_t v2 = [v1 length] + 6;
  uint64_t v3 = (char *)malloc_type_calloc(v2, 1uLL, 0xAF3D730EuLL);
  *(_DWORD *)uint64_t v3 = 304128;
  v3[4] = [v1 length];
  id v4 = v1;
  long long v5 = (const void *)[v4 bytes];
  size_t v6 = [v4 length];

  memcpy(v3 + 5, v5, v6);
  uint64_t v7 = (void *)MEMORY[0x1E4F1C9B8];

  return [v7 dataWithBytesNoCopy:v3 length:v2 freeWhenDone:1];
}

id EndOfTransactionCmd(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = [v3 length];
  size_t v6 = v5 + [v4 length] + 7;
  uint64_t v7 = (char *)malloc_type_calloc(v6, 1uLL, 0xAD33FF6AuLL);
  unsigned __int8 v8 = [v4 length] + 6;
  *(_DWORD *)uint64_t v7 = 44672;
  _OWORD v7[4] = 0;
  _OWORD v7[4] = v5 + [v4 length] + 2;
  v7[5] = [v4 length];
  id v9 = v4;
  uint64_t v10 = (const void *)[v9 bytes];
  size_t v11 = [v9 length];

  memcpy(v7 + 6, v10, v11);
  long long v12 = &v7[v8];
  char *v12 = v5;
  if ([v3 length])
  {
    char v13 = v12 + 1;
    id v14 = v3;
    memcpy(v13, (const void *)[v14 bytes], [v14 length]);
  }
  long long v15 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:v7 length:v6 freeWhenDone:1];

  return v15;
}

uint64_t GetSW(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 length] < 2)
  {
    uint64_t U16BE = 0;
  }
  else
  {
    id v2 = v1;
    uint64_t U16BE = ReadU16BE((const unsigned __int8 *)([v2 length] + [v2 bytes] - 2));
  }

  return U16BE;
}

id Find(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = v3;
  id v6 = (id)[v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v12;
    while (2)
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v5);
        }
        id v9 = *(void **)(*((void *)&v11 + 1) + 8 * i);
        if (v4[2](v4, v9))
        {
          id v6 = v9;
          goto LABEL_11;
        }
      }
      id v6 = (id)[v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v6;
}

id Filter(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_opt_new();
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v6 = v3;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        if (v4[2](v4, v11)) {
          [v5 addObject:v11];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }

  return v5;
}

void *CircularBufferInit(void *a1, size_t a2)
{
  a1[2] = (char *)a1 + a2;
  a1[3] = a2 - 32;
  *a1 = a1 + 4;
  return a1;
}

void *CircularBufferAdd(const void **a1, uint64_t a2, unsigned int a3)
{
  v4[2] = *MEMORY[0x1E4F143B8];
  v4[0] = a2;
  v4[1] = a3;
  return CircularBufferAddScattered(a1, (uint64_t)v4, 1);
}

void *CircularBufferAddScattered(const void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unsigned __int16 v6 = 0;
  if (a3)
  {
    uint64_t v7 = (__int16 *)(a2 + 8);
    uint64_t v8 = a3;
    do
    {
      __int16 v9 = *v7;
      v7 += 8;
      v6 += v9;
      --v8;
    }
    while (v8);
  }
  unsigned __int16 __src = v6;
  uint64_t v10 = v6;
  uint64_t v11 = v6 + 2;
  if ((unsigned char *)a1[2] - (unsigned char *)(a1 + 4) <= v11) {
    CircularBufferAddScattered_cold_1();
  }
  long long v12 = (char *)a1[1];
  if (!v12)
  {
    long long v12 = (char *)*a1;
    a1[1] = *a1;
  }
  unsigned __int16 __dst = 0;
  for (unint64_t i = (unint64_t)a1[3]; i < v11; a1[3] = (const void *)i)
  {
    ReadCircular((uint64_t)a1, v12, (char *)&__dst, 2uLL);
    uint64_t v14 = __dst + 2;
    long long v15 = a1[2];
    unint64_t v16 = (unint64_t)a1[1] + v14;
    if (v16 <= (unint64_t)v15) {
      long long v17 = 0;
    }
    else {
      long long v17 = (char *)((char *)(a1 + 4) - v15);
    }
    long long v12 = &v17[v16];
    a1[1] = &v17[v16];
    unint64_t i = (unint64_t)a1[3] + v14;
  }
  uint64_t result = CircularWrite((uint64_t)a1, (char *)&__src, 2uLL);
  if (v3)
  {
    uint64_t v19 = (size_t *)(a2 + 8);
    do
    {
      uint64_t result = CircularWrite((uint64_t)a1, (char *)*(v19 - 1), *v19);
      v19 += 2;
      --v3;
    }
    while (v3);
  }
  a1[3] = (char *)a1[3] - v10 - 2;
  return result;
}

void *ReadCircular(uint64_t a1, const void *a2, char *__dst, size_t __n)
{
  size_t v6 = *(void *)(a1 + 16);
  if ((unint64_t)a2 + __n <= v6)
  {
    __int16 v9 = __dst;
    size_t v10 = __n;
  }
  else
  {
    size_t v7 = v6 - (void)a2;
    if ((uint64_t)(v6 - (void)a2) < 0) {
      ReadCircular_cold_1();
    }
    memcpy(__dst, a2, v6 - (void)a2);
    __int16 v9 = &__dst[v7];
    a2 = (const void *)(a1 + 32);
    size_t v10 = __n - v7;
  }

  return memcpy(v9, a2, v10);
}

void *CircularWrite(uint64_t a1, char *__src, size_t __n)
{
  size_t v6 = *(void **)a1;
  size_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 + __n <= v7)
  {
    uint64_t result = memcpy(v6, __src, __n);
    size_t v11 = *(void *)a1 + __n;
  }
  else
  {
    size_t v8 = v7 - (void)v6;
    if ((uint64_t)(v7 - (void)v6) < 0) {
      CircularWrite_cold_1();
    }
    memcpy(v6, __src, v7 - (void)v6);
    size_t v9 = __n - v8;
    uint64_t result = memcpy((void *)(a1 + 32), &__src[v8], v9);
    size_t v11 = a1 + 32 + v9;
  }
  *(void *)a1 = v11;
  return result;
}

void CircularBufferDump(const void **a1, uint64_t a2)
{
  id v2 = (char *)a1[1];
  if (v2)
  {
    LOWORD(v5) = 0;
    unsigned __int16 __dst = 0;
    size_t v6 = (char *)(a1 + 4);
    do
    {
      ReadCircular((uint64_t)a1, v2, (char *)&__dst, 2uLL);
      if ((unsigned __int16)v5 <= __dst) {
        size_t v5 = __dst;
      }
      else {
        size_t v5 = (unsigned __int16)v5;
      }
      unint64_t v7 = (unint64_t)&v2[__dst + 2];
      unint64_t v8 = (unint64_t)a1[2];
      if (v7 <= v8) {
        size_t v9 = 0;
      }
      else {
        size_t v9 = &v6[-v8];
      }
      id v2 = &v9[v7];
    }
    while (&v9[v7] != *a1);
    size_t v10 = (char *)malloc_type_malloc(v5, 0x3576A657uLL);
    if (v10)
    {
      size_t v11 = v10;
      bzero(v10, v5);
      long long v12 = (char *)a1[1];
      do
      {
        ReadCircular((uint64_t)a1, v12, (char *)&__dst, 2uLL);
        long long v13 = v12 + 2;
        unint64_t v14 = (unint64_t)a1[2];
        if ((unint64_t)(v12 + 2) <= v14) {
          long long v15 = 0;
        }
        else {
          long long v15 = &v6[-v14];
        }
        unint64_t v16 = &v15[(void)v13];
        ReadCircular((uint64_t)a1, &v15[(void)v13], v11, __dst);
        unint64_t v17 = (unint64_t)&v16[__dst];
        uint64_t v18 = a1[2];
        if (v17 <= (unint64_t)v18) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = (char *)(v6 - v18);
        }
        long long v12 = &v19[v17];
        (*(void (**)(uint64_t))(a2 + 16))(a2);
      }
      while (v12 != *a1);
      free(v11);
    }
  }
}

void sub_1CA576CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CA576D90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CA577328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t ReadS32BE(const DERItem *a1)
{
  return bswap32(*(_DWORD *)a1->data);
}

uint64_t ReadU16BE(const unsigned __int8 *a1)
{
  return bswap32(*(unsigned __int16 *)a1) >> 16;
}

uint64_t ReadU16BE(const DERItem *a1)
{
  return bswap32(*(unsigned __int16 *)a1->data) >> 16;
}

__CFString *DecodeTransactionDetail(unsigned __int8 *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  int v2 = (*a1 << 16) | (a1[1] << 8) | a1[2];
  if (v2 > 131327)
  {
    if (v2 <= 131839)
    {
      if (v2 > 131583)
      {
        switch(v2)
        {
          case 131584:
            return @"PurchaseAdmission";
          case 131585:
            return @"PurchaseAdmissionParking";
          case 131586:
            return @"PurchaseAdmissionGarden";
        }
      }
      else
      {
        switch(v2)
        {
          case 131328:
            return @"PurchaseRetail";
          case 131329:
            return @"PurchaseRetailMerchant";
          case 131330:
            return @"PurchaseRetailGasStation";
        }
      }
    }
    else if (v2 < 196608)
    {
      switch(v2)
      {
        case 131840:
          return @"PurchaseRefund";
        case 131841:
          return @"PurchaseRefundReturn";
        case 131842:
          return @"PurchaseRefundCancellation";
      }
    }
    else if (v2 > 197119)
    {
      if (v2 == 197120) {
        return @"TopUpServer";
      }
      if (v2 == 0x40000) {
        return @"CardRead";
      }
    }
    else
    {
      if (v2 == 196608) {
        return @"TopUp";
      }
      if (v2 == 196864) {
        return @"TopUpContactless";
      }
    }
    goto LABEL_60;
  }
  if (v2 <= 66559)
  {
    if (v2 > 66303)
    {
      switch(v2)
      {
        case 66304:
          return @"TransitTrain";
        case 66305:
          return @"TransitTrainMaglev";
        case 66306:
          return @"TransitTrainShinkansen";
      }
    }
    else
    {
      switch(v2)
      {
        case 65536:
          return @"Transit";
        case 65792:
          return @"TransitMetro";
        case 66048:
          return @"TransitBus";
      }
    }
LABEL_60:
    id v4 = ATLLogObject();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = *a1;
      int v6 = a1[1];
      int v7 = a1[2];
      v8[0] = 67109632;
      v8[1] = v5;
      __int16 v9 = 1024;
      int v10 = v6;
      __int16 v11 = 1024;
      int v12 = v7;
      _os_log_impl(&dword_1CA552000, v4, OS_LOG_TYPE_ERROR, "Bogus transaction type 0x%X | 0x%X | 0x%X, returning unknown", (uint8_t *)v8, 0x14u);
    }

    return @"Unknown";
  }
  if (v2 > 66815)
  {
    if (v2 <= 66817)
    {
      if (v2 == 66816) {
        return @"TransitSpecial";
      }
      else {
        return @"TransitSpecialGreenCarUsed";
      }
    }
    if (v2 == 66818) {
      return @"TransitSpecialGreenCarSeated";
    }
    if (v2 == 0x20000) {
      return @"Purchase";
    }
    goto LABEL_60;
  }
  switch(v2)
  {
    case 66560:
      uint64_t result = @"TransitOther";
      break;
    case 66561:
      uint64_t result = @"TransitOtherTaxi";
      break;
    case 66562:
      uint64_t result = @"TransitOtherFerry";
      break;
    case 66563:
      uint64_t result = @"TransitOtherBike";
      break;
    default:
      goto LABEL_60;
  }
  return result;
}

uint64_t DecodeBCD(const unsigned __int8 *a1, uint64_t a2)
{
  for (uint64_t i = 0; a2; --a2)
  {
    unsigned int v3 = *a1++;
    uint64_t i = (v3 & 0xF) + 100 * i + 10 * (v3 >> 4);
  }
  return i;
}

uint64_t DecodeBCD(const DERItem *a1)
{
  DERSize length = a1->length;
  if (!length) {
    return 0;
  }
  uint64_t result = 0;
  data = a1->data;
  do
  {
    unsigned int v5 = *data++;
    uint64_t result = (v5 & 0xF) + 100 * result + 10 * (v5 >> 4);
    --length;
  }
  while (length);
  return result;
}

uint64_t DecodeBCD(char *a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v5 = (unsigned __int8 *)&a1[a2];
  do
  {
    unsigned int v6 = *v5++;
    uint64_t result = (v6 & 0xF) + 100 * result + 10 * (v6 >> 4);
    --a3;
  }
  while (a3);
  return result;
}

uint64_t EncodeBCD(unsigned __int8 *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  unint64_t v2 = 0;
  uint64_t v3 = a2;
  do
  {
    unsigned int v4 = *a1++;
    unint64_t v2 = v4 | (v2 << 8);
    --v3;
  }
  while (v3);
  uint64_t v5 = 0;
  uint64_t result = 0;
  do
  {
    result += ((v2 % 0x64 % 0xA) | (16 * (v2 % 0x64 / 0xA))) << v5;
    v5 += 8;
    v2 /= 0x64uLL;
    --a2;
  }
  while (a2);
  return result;
}

void sub_1CA58E07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location,char a31)
{
  objc_destroyWeak(v31);
  _Block_object_dispose(&a31, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CA58E47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1CA58ED2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1CA58F114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id FelicaGetDataFileSystemCommand(__int16 a1, __int16 a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = 0x5FE07070000C280;
  __int16 v5 = a1;
  __int16 v6 = a2;
  unint64_t v2 = [MEMORY[0x1E4F1C9B8] dataWithBytes:&v4 length:12];

  return v2;
}

id FeliCaGetBlockDataFromGetDataCommand(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 length] != 21)
  {
    uint64_t v7 = ATLLogObject();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 67109120;
      int v12 = [v1 length];
      _os_log_impl(&dword_1CA552000, v7, OS_LOG_TYPE_DEFAULT, "GET DATA response length if unexpected: %u", (uint8_t *)&v11, 8u);
    }

    goto LABEL_13;
  }
  uint64_t v2 = [v1 bytes];
  uint64_t v3 = v2;
  if (*(unsigned char *)(v2 + 3))
  {
    uint64_t v4 = ATLLogObject();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int8 *)(v3 + 3);
      int v11 = 67109120;
      int v12 = v5;
      __int16 v6 = "GET DATA response returned an unexpected Status Flag 1 %d";
LABEL_11:
      _os_log_impl(&dword_1CA552000, v4, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v11, 8u);
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  if (*(unsigned char *)(v2 + 4))
  {
    uint64_t v4 = ATLLogObject();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = *(unsigned __int8 *)(v3 + 4);
      int v11 = 67109120;
      int v12 = v8;
      __int16 v6 = "GET DATA response returned an unexpected Status Flag 2 %d";
      goto LABEL_11;
    }
LABEL_12:

LABEL_13:
    __int16 v9 = 0;
    goto LABEL_14;
  }
  __int16 v9 = [MEMORY[0x1E4F1C9B8] dataWithBytes:v2 + 5 length:16];
LABEL_14:

  return v9;
}

void sub_1CA5A1460(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1CA5A15EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);

  caulk::__expected_detail::base<std::shared_ptr<OVM::Script>,OVM::Error>::~base((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t caulk::expected<std::shared_ptr<OVM::Script>,OVM::Error>::value(uint64_t result)
{
  id v1 = (long long **)result;
  if (!*(unsigned char *)(result + 24))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    memset(&v3, 0, sizeof(v3));
    std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v3, *v1, v1[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v1[1] - (char *)*v1) >> 3));
    caulk::bad_expected_access<OVM::Error>::bad_expected_access((uint64_t)exception, (long long **)&v3);
  }
  return result;
}

void sub_1CA5A16D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void sub_1CA5A1DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  if (!a18)
  {
    *(void *)(v27 - 128) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v27 - 128));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A270C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  if (!a18)
  {
    *(void *)(v28 - 128) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v28 - 128));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A2F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  if (!a18)
  {
    *(void *)(v27 - 128) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v27 - 128));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A37A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  if (!a18)
  {
    *(void *)(v27 - 128) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v27 - 128));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A402C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  int v29 = v27;

  if (!a18)
  {
    *(void *)(v28 - 128) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v28 - 128));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A4888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20)
{
  if (!a18)
  {
    *(void *)(v27 - 112) = &a15;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v27 - 112));
  }
  if (__p)
  {
    a20 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1CA5A5380(_Unwind_Exception *a1)
{
  uint64_t v4 = 2640;
  while (1)
  {
    if (*(char *)(v2 + v4 - 25) < 0) {
      operator delete(*(void **)(v2 + v4 - 48));
    }
    v4 -= 48;
    if (!v4)
    {
      MEMORY[0x1CB798960](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1CA5A5A18(_Unwind_Exception *a1)
{
  uint64_t v4 = 1416;
  while (1)
  {
    if (*(char *)(v2 + v4 - 1) < 0) {
      operator delete(*(void **)(v2 + v4 - 24));
    }
    v4 -= 24;
    if (!v4)
    {
      MEMORY[0x1CB798960](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1CA5A5B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL AllowlistClassChecker::IsClassAllowed(uint64_t a1, void **a2)
{
  return *(void *)(a1 + 8) + 8 != (void)std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Subroutine const>>>>::find<std::string>(*(void *)(a1 + 8), a2);
}

std::string *ctu::join<std::__wrap_iter<std::string const*>>@<X0>(std::string *__str@<X0>, std::string *a2@<X1>, void *a3@<X2>, size_t a4@<X3>, std::string *a5@<X8>)
{
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  if (__str != a2)
  {
    int v8 = __str;
    __str = std::string::operator=(a5, __str);
    for (uint64_t i = v8 + 1; i != a2; ++i)
    {
      if (a3)
      {
        std::string::basic_string[abi:ne180100](&__p, a3, a4);
        std::string::size_type v11 = HIBYTE(v21);
        int v12 = (void **)__p;
        std::string::size_type v13 = v20;
      }
      else
      {
        std::string::size_type v13 = 0;
        int v12 = 0;
        std::string::size_type v11 = 0;
        std::string __p = 0;
        std::string::size_type v20 = 0;
        uint64_t v21 = 0;
      }
      if ((v11 & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = v12;
      }
      if ((v11 & 0x80u) == 0) {
        std::string::size_type v15 = v11;
      }
      else {
        std::string::size_type v15 = v13;
      }
      std::string::append(a5, (const std::string::value_type *)p_p, v15);
      if (SHIBYTE(v21) < 0) {
        operator delete(__p);
      }
      int v16 = SHIBYTE(i->__r_.__value_.__r.__words[2]);
      if (v16 >= 0) {
        unint64_t v17 = (const std::string::value_type *)i;
      }
      else {
        unint64_t v17 = (const std::string::value_type *)i->__r_.__value_.__r.__words[0];
      }
      if (v16 >= 0) {
        std::string::size_type size = HIBYTE(i->__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = i->__r_.__value_.__l.__size_;
      }
      __str = std::string::append(a5, v17, size);
    }
  }
  return __str;
}

void sub_1CA5A5CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    __int16 v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *unsigned __int16 __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    __int16 v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void caulk::bad_expected_access<OVM::Error>::~bad_expected_access(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&unk_1F24D3A00;
  uint64_t v2 = a1 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v2);
  std::exception::~exception(a1);
}

std::string *std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    __int16 v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_1CA5A5E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::string>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  uint64_t v4 = this;
  std::string::size_type v11 = this;
  int v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    __int16 v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      __int16 v6 = (long long *)((char *)v6 + 24);
      int v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1CA5A5FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t caulk::bad_expected_access<OVM::Error>::bad_expected_access(uint64_t a1, long long **a2)
{
  *(void *)a1 = &unk_1F24D3A00;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)(a1 + 8), *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  return a1;
}

void sub_1CA5A6028(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t caulk::bad_expected_access<OVM::Error>::~bad_expected_access(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&unk_1F24D3A00;
  std::string v3 = a1 + 1;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v3);
  std::exception::~exception(a1);
  return MEMORY[0x1CB798960]();
}

uint64_t caulk::__expected_detail::base<std::shared_ptr<OVM::Script>,OVM::Error>::~base(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
  }
  else
  {
    uint64_t v4 = (void **)a1;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v4);
  }
  return a1;
}

void std::__throw_bad_optional_access[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F8] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA348], MEMORY[0x1E4FBA1F0]);
}

uint64_t std::map<std::string,OVM::Var>::map[abi:ne180100](uint64_t a1, void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 48 * a3;
    do
    {
      std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,OVM::Var> const&>((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 6;
      v6 -= 48;
    }
    while (v6);
  }
  return a1;
}

void sub_1CA5A61B8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::destroy(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,OVM::Var> const&>(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__find_equal<std::string>(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__construct_node<std::pair<std::string const,OVM::Var> const&>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<OVM::Var>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<OVM::Var>>>>::__insert_node_at(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

__n128 std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::__construct_node<std::pair<std::string const,OVM::Var> const&>@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  long long v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(v6 + 56) = result;
  *((void *)v6 + 9) = *(void *)(a2 + 40);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1CA5A62E8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,OVM::Var>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,OVM::Var>,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t std::set<std::string>::set[abi:ne180100](uint64_t a1, void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 3;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1CA5A63D0(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,OVM::Var>,std::__map_value_compare<std::string,std::__value_type<std::string,OVM::Var>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,OVM::Var>>>::destroy(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  long long v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_1CA5A646C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,OVM::Var>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<AllowlistClassChecker>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D3A28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AllowlistClassChecker>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F24D3A28;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1CB798960);
}

id ATLLogObject()
{
  if (ATLLogObject_onceToken != -1) {
    dispatch_once(&ATLLogObject_onceToken, &__block_literal_global_9);
  }
  v0 = (void *)ATLLogObject_logObject;

  return v0;
}

uint64_t __ATLLogObject_block_invoke()
{
  ATLLogObject_logObject = (uint64_t)os_log_create("com.apple.nfc", "atl");

  return MEMORY[0x1F41817F8]();
}

void LogBinary(os_log_type_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  int v12 = FormatLogv(a2, a3, a6, (uint64_t)&a9);
  std::string::size_type v13 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBytesNoCopy:a4 length:a5 freeWhenDone:0];
  uint64_t v14 = [v12 length];
  unint64_t v15 = v14 + [v13 length] + 1;
  int v16 = ATLLogObject();
  BOOL v17 = os_log_type_enabled(v16, a1);
  if (v15 > 0x1FF)
  {
    if (v17)
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v28 = v12;
      _os_log_impl(&dword_1CA552000, v16, a1, "%@", buf, 0xCu);
    }

    if ([v13 length])
    {
      uint64_t v20 = 0;
      unint64_t v21 = 0;
      *(void *)&long long v19 = 138412290;
      long long v26 = v19;
      do
      {
        if ((unint64_t)(objc_msgSend(v13, "length", v26) + v20) > 0x1FF) {
          uint64_t v22 = 512;
        }
        else {
          uint64_t v22 = [v13 length] + v20;
        }
        uint64_t v23 = [v13 subdataWithRange:v21, v22];
        uint64_t v24 = ATLLogObject();
        if (os_log_type_enabled(v24, a1))
        {
          unint64_t v25 = [v23 base64EncodedStringWithOptions:0];
          *(_DWORD *)buf = v26;
          uint64_t v28 = v25;
          _os_log_impl(&dword_1CA552000, v24, a1, "%@", buf, 0xCu);
        }
        v21 += 512;
        v20 -= 512;
      }
      while (v21 < [v13 length]);
    }
  }
  else
  {
    if (v17)
    {
      uint64_t v18 = [v13 base64EncodedStringWithOptions:0];
      *(_DWORD *)buf = 138412546;
      uint64_t v28 = v12;
      __int16 v29 = 2112;
      long long v30 = v18;
      _os_log_impl(&dword_1CA552000, v16, a1, "%@ %@", buf, 0x16u);
    }
  }
}

id FormatLogv(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v7 = (void *)MEMORY[0x1E4F28E78];
  size_t v8 = (objc_class *)NSString;
  id v9 = a3;
  char v10 = (void *)[[v8 alloc] initWithFormat:v9 arguments:a4];

  std::string::size_type v11 = [v7 stringWithFormat:@"%s/%d : %@", a1, a2, v10];

  return v11;
}

uint64_t DERParseSequenceSpec(uint64_t a1, uint64_t a2, char *a3, size_t a4)
{
  size_t v8 = objc_alloc_init(DERLogContext);
  unsigned int v9 = *(unsigned __int16 *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (*(unsigned char *)(a2 + 18)) {
    uint64_t v11 = DERParseUnsortedSequenceC((unsigned __int8 **)a1, v9, v10, a3, a4, *(unsigned char *)(a2 + 19));
  }
  else {
    uint64_t v11 = DERParseSequenceC((unsigned __int8 **)a1, v9, v10, a3, a4);
  }
  uint64_t v14 = v11;
  if (v11)
  {
    LogBinary(OS_LOG_TYPE_ERROR, (uint64_t)"DERParseSequenceSpec", 37, *(void *)a1, *(void *)(a1 + 8), @"parse %s failed with %d", v12, v13, *(void *)a2);
    [(DERLogContext *)v8 dumpLogs];
    unint64_t v15 = ATLLogObject();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CA552000, v15, OS_LOG_TYPE_ERROR, "------ END OF DER DUMP -----", buf, 2u);
    }
  }
  return v14;
}

uint64_t DERParseSequenceSpec(void *a1, uint64_t a2, char *a3, size_t a4)
{
  id v7 = a1;
  uint64_t v8 = [v7 length:[v7 bytes]];

  v10[1] = v8;
  return DERParseSequenceSpec((uint64_t)v10, a2, a3, a4);
}

uint64_t DERDecodeItemCtx(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = objc_alloc_init(DERLogContext);
  uint64_t v5 = DERDecodeItem((unsigned __int8 **)a1, a2);
  uint64_t v8 = v5;
  if (v5)
  {
    LogBinary(OS_LOG_TYPE_ERROR, (uint64_t)"DERDecodeItemCtx", 62, *(void *)a1, *(void *)(a1 + 8), @"parse failed with %d", v6, v7, v5);
    [(DERLogContext *)v4 dumpLogs];
    unsigned int v9 = ATLLogObject();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1CA552000, v9, OS_LOG_TYPE_ERROR, "------ END OF DER DUMP -----", buf, 2u);
    }
  }
  return v8;
}

void sub_1CA5AAF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1CA5ACF9C()
{
  uint64_t v0 = sub_1CA5FD648();
  __swift_allocate_value_buffer(v0, qword_1EA608650);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA608650);
  return sub_1CA5FD638();
}

uint64_t sub_1CA5AD014()
{
  uint64_t result = sub_1CA5C5230(0x3130303034333038, 0xEE00303036393230);
  if (v1 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    qword_1EA60A450 = result;
    *(void *)algn_1EA60A458 = v1;
  }
  return result;
}

uint64_t sub_1CA5AD068()
{
  uint64_t result = sub_1CA5C5230(0x3030434336373038, 0xEA00000000003030);
  if (v1 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    qword_1EA60A460 = result;
    *(void *)algn_1EA60A468 = v1;
  }
  return result;
}

uint64_t sub_1CA5AD0B4()
{
  sub_1CA5B84AC(0, &qword_1EA6086E0);
  uint64_t result = sub_1CA5FDA48();
  qword_1EA60A470 = result;
  return result;
}

uint64_t sub_1CA5AD0FC()
{
  sub_1CA5B84AC(0, &qword_1EA6086E0);
  uint64_t result = sub_1CA5FDA48();
  qword_1EA60A478 = result;
  return result;
}

id sub_1CA5AD144()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608758);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA6021A0;
  if (qword_1EA608678 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)qword_1EA60A470;
  *(void *)(v0 + 32) = qword_1EA60A470;
  uint64_t v2 = qword_1EA608680;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EA60A478;
  *(void *)(v0 + 40) = qword_1EA60A478;
  sub_1CA5FD968();
  qword_1EA60A480 = v0;

  return v5;
}

BOOL static AssociatedReader.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  if (sub_1CA5B6C5C(*a1, v5, *a2, v7)) {
    return a1[2] < (unint64_t)a2[2];
  }
  else {
    return sub_1CA5B919C(v4, v5, v6, v7);
  }
}

uint64_t sub_1CA5AD318(uint64_t a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1CB798330](8224, 0xE200000000000000, a1);
  sub_1CA5FDB18();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5C4448(*(void *)v2, *(void *)(v2 + 8));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FDCA8();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5C4448(*(void *)(v2 + 24), *(void *)(v2 + 32));
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5C4448(*(void *)(v2 + 40), *(void *)(v2 + 48));
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  return 0;
}

uint64_t AssociatedReader.description.getter()
{
  return sub_1CA5AD318(0);
}

uint64_t static AssociatedReader.__derived_struct_equals(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_1CA5B6C5C(*a1, a1[1], *a2, a2[1]) & 1) == 0
    || a1[2] != a2[2]
    || (sub_1CA5B6C5C(a1[3], a1[4], a2[3], a2[4]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = a1[5];
  unint64_t v5 = a1[6];
  uint64_t v6 = a2[5];
  unint64_t v7 = a2[6];

  return sub_1CA5B6C5C(v4, v5, v6, v7);
}

uint64_t sub_1CA5AD6A8()
{
  return sub_1CA5AD318(0);
}

uint64_t sub_1CA5AD6B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  unint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t v6 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  unint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  unint64_t v11 = a2[6];
  if ((sub_1CA5B6C5C(*a1, a1[1], *a2, a2[1]) & 1) == 0 || v3 != v8 || (sub_1CA5B6C5C(v2, v5, v7, v10) & 1) == 0) {
    return 0;
  }

  return sub_1CA5B6C5C(v4, v6, v9, v11);
}

BOOL sub_1CA5AD77C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  if (sub_1CA5B6C5C(*a1, v3, *a2, v6)) {
    return v4 < v7;
  }
  else {
    return sub_1CA5B919C(v2, v3, v5, v6);
  }
}

BOOL sub_1CA5AD858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  if (sub_1CA5B6C5C(*a2, v6, *a1, v3)) {
    BOOL v8 = v7 < v4;
  }
  else {
    BOOL v8 = sub_1CA5B919C(v5, v6, v2, v3);
  }
  return !v8;
}

BOOL sub_1CA5AD938(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  if (sub_1CA5B6C5C(*a1, v3, *a2, v6)) {
    BOOL v8 = v4 < v7;
  }
  else {
    BOOL v8 = sub_1CA5B919C(v2, v3, v5, v6);
  }
  return !v8;
}

BOOL sub_1CA5ADA18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  if (sub_1CA5B6C5C(*a2, v6, *a1, v3)) {
    return v7 < v4;
  }
  else {
    return sub_1CA5B919C(v5, v6, v2, v3);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> clearAuxiliaryElements(secureElement:)(TransceiverWrapper *secureElement)
{
  v29[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1EA608670 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)sub_1CA5FD578();
  v29[0] = 0;
  id v3 = [(TransceiverWrapper *)secureElement transceive:v2 error:v29];

  id v4 = v29[0];
  if (v3)
  {
    uint64_t v5 = sub_1CA5FD598();
    unint64_t v7 = v6;

    switch(v7 >> 62)
    {
      case 1uLL:
        LODWORD(v8) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5))
        {
          __break(1u);
LABEL_28:
          __break(1u);
        }
        uint64_t v8 = (int)v8;
LABEL_10:
        if (v8 < 3)
        {
LABEL_21:
          if (qword_1EA608648 != -1) {
            swift_once();
          }
          uint64_t v24 = sub_1CA5FD648();
          __swift_project_value_buffer(v24, (uint64_t)qword_1EA608650);
          unint64_t v25 = sub_1CA5FD628();
          os_log_type_t v26 = sub_1CA5FD9C8();
          if (os_log_type_enabled(v25, v26))
          {
            uint64_t v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v27 = 0;
            _os_log_impl(&dword_1CA552000, v25, v26, "Lyon auxiliary elements: nothing to clear", v27, 2u);
            MEMORY[0x1CB799300](v27, -1, -1);
          }
          sub_1CA5B6EF4(v5, v7);
        }
        else
        {
          if (qword_1EA608648 != -1) {
            swift_once();
          }
          uint64_t v13 = sub_1CA5FD648();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EA608650);
          uint64_t v14 = sub_1CA5FD628();
          os_log_type_t v15 = sub_1CA5FD9C8();
          if (os_log_type_enabled(v14, v15))
          {
            int v16 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int v16 = 0;
            _os_log_impl(&dword_1CA552000, v14, v15, "Lyon auxiliary elements: clearing...", v16, 2u);
            MEMORY[0x1CB799300](v16, -1, -1);
          }

          if (qword_1EA608668 != -1) {
            swift_once();
          }
          BOOL v17 = (void *)sub_1CA5FD578();
          if (qword_1EA608688 != -1) {
            swift_once();
          }
          sub_1CA5B84AC(0, &qword_1EA6086E0);
          uint64_t v18 = (void *)sub_1CA5FD948();
          v29[0] = 0;
          id v19 = [(TransceiverWrapper *)secureElement transceiveAndCheckSW:v17 inArray:v18 error:v29];

          id v20 = v29[0];
          if (v19)
          {
            uint64_t v21 = sub_1CA5FD598();
            unint64_t v23 = v22;
            sub_1CA5B6EF4(v5, v7);
            sub_1CA5B6EF4(v21, v23);
          }
          else
          {
            uint64_t v28 = v20;
            sub_1CA5FD4B8();

            swift_willThrow();
            sub_1CA5B6EF4(v5, v7);
          }
        }
        break;
      case 2uLL:
        uint64_t v11 = *(void *)(v5 + 16);
        uint64_t v10 = *(void *)(v5 + 24);
        BOOL v12 = __OFSUB__(v10, v11);
        uint64_t v8 = v10 - v11;
        if (!v12) {
          goto LABEL_10;
        }
        goto LABEL_28;
      case 3uLL:
        goto LABEL_21;
      default:
        uint64_t v8 = BYTE6(v7);
        goto LABEL_10;
    }
  }
  else
  {
    uint64_t v9 = v4;
    sub_1CA5FD4B8();

    swift_willThrow();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> processAuxiliaryElements(secureElement:passInformation:)(TransceiverWrapper *secureElement, NSArray passInformation)
{
  id v3 = v2;
  uint64_t v6 = sub_1CA5FD4C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v10 = passInformation.super.isa;
  sub_1CA5FDA38();

  sub_1CA5B7324(&qword_1EBCB4190, MEMORY[0x1E4F27660]);
  while (1)
  {
    sub_1CA5FDA58();
    if (!v33) {
      break;
    }
    sub_1CA5B6F4C(&v32, v31);
    sub_1CA5AE434(v31, &v30);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
    sub_1CA5B1C50(v30);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v34;
  if (qword_1EA608648 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1CA5FD648();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EA608650);
  uint64_t v13 = v10;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1CA5FD628();
  os_log_type_t v15 = sub_1CA5FDA08();
  if (os_log_type_enabled(v14, v15))
  {
    int v16 = (_DWORD *)swift_slowAlloc();
    __int16 v29 = secureElement;
    BOOL v17 = v16;
    _DWORD *v16 = 134218240;
    *(void *)&long long v32 = [(objc_class *)v13 count];
    sub_1CA5FDA68();

    *((_WORD *)v17 + 6) = 2048;
    *(void *)&long long v32 = *(void *)(v11 + 16);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v14, v15, "Got %ld passes from wallet, retrieved %ld auxiliary elements", (uint8_t *)v17, 0x16u);
    uint64_t v18 = v17;
    secureElement = v29;
    MEMORY[0x1CB799300](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v14 = v13;
  }

  if (*(void *)(v11 + 16))
  {
    uint64_t v19 = sub_1CA5AF440(v11);
    swift_bridgeObjectRelease();
    if (v19)
    {
      sub_1CA5AF5DC(secureElement, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&long long v32 = 0;
      *((void *)&v32 + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      sub_1CA5BBD9C(v32, *((uint64_t *)&v32 + 1), 8, 0);
      swift_willThrow();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v20 = sub_1CA5FD628();
    os_log_type_t v21 = sub_1CA5FD9C8();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v22 = 0;
      _os_log_impl(&dword_1CA552000, v20, v21, "No associated reader identifiers found for pass, clearing the aux elements on the SE", v22, 2u);
      MEMORY[0x1CB799300](v22, -1, -1);
    }

    unint64_t v23 = sub_1CA5AF148(secureElement);
    if (v2
      || (sub_1CA5B6EF4((uint64_t)v23, v24), clearAuxiliaryElements(secureElement:)(secureElement), (id v3 = v25) != 0))
    {
      os_log_type_t v26 = sub_1CA5FD628();
      os_log_type_t v27 = sub_1CA5FDA08();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_1CA552000, v26, v27, "Error SW during clear, most likely Lyon is not installed", v28, 2u);
        MEMORY[0x1CB799300](v28, -1, -1);
      }
    }
  }
  sub_1CA5AEE9C(secureElement);
}

void sub_1CA5AE434(void *a1@<X0>, void *a2@<X8>)
{
  sub_1CA5B83E4((uint64_t)a1, (uint64_t)&v60);
  sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6083D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    uint64_t v60 = 0;
    uint64_t v61 = 0xE000000000000000;
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    uint64_t v60 = 0xD00000000000002DLL;
    uint64_t v61 = 0x80000001CA60BE10;
    __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
    swift_getDynamicType();
    sub_1CA5FDDB8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5BBD9C(v60, v61, 8, 0);
    swift_willThrow();
    return;
  }
  uint64_t v5 = v62;
  uint64_t v6 = sub_1CA5FD8A8();
  uint64_t v8 = sub_1CA5C990C(v6, v7);
  if (v2)
  {
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_37;
  }
  if (v10 == 0xD000000000000012 && v11 == 0x80000001CA60BB60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1CA5FDCB8();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_37;
    }
  }
  uint64_t v13 = sub_1CA5FD8A8();
  uint64_t v15 = sub_1CA5CA488(v13, v14);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17 == 1)
  {
    if (qword_1EA608648 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1CA5FD648();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EA608650);
    uint64_t v19 = sub_1CA5FD628();
    os_log_type_t v20 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v21 = 0;
      _os_log_impl(&dword_1CA552000, v19, v20, "Failed to find key identifier for pass, skipping", v21, 2u);
      MEMORY[0x1CB799300](v21, -1, -1);
    }

    goto LABEL_37;
  }
  if (!v17 || (sub_1CA5B84FC(v15, v17), uint64_t v22 = sub_1CA5C5230(v15, v17), v23 >> 60 == 15))
  {
LABEL_26:
    if (qword_1EA608648 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1CA5FD648();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EA608650);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1CA5FD628();
    os_log_type_t v34 = sub_1CA5FD9E8();
    log = v33;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v60 = v58;
      *(_DWORD *)uint64_t v35 = 136315138;
      if (v17) {
        uint64_t v36 = v15;
      }
      else {
        uint64_t v36 = 7104878;
      }
      if (v17) {
        unint64_t v37 = v17;
      }
      else {
        unint64_t v37 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      long long v62 = (void *)sub_1CA5DDA20(v36, v37, &v60);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease();
      sub_1CA5B84E8(v15, v17);
      sub_1CA5B84E8(v15, v17);
      _os_log_impl(&dword_1CA552000, log, v34, "Key identifier was not hex string with valid length: %s... skipping", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v58, -1, -1);
      MEMORY[0x1CB799300](v35, -1, -1);
    }
    else
    {
      sub_1CA5B84E8(v15, v17);
      sub_1CA5B84E8(v15, v17);
    }
    goto LABEL_37;
  }
  unint64_t v24 = v23;
  uint64_t v25 = v22;
  switch(v23 >> 62)
  {
    case 1uLL:
      LODWORD(v26) = HIDWORD(v22) - v22;
      if (!__OFSUB__(HIDWORD(v22), v22))
      {
        uint64_t v26 = (int)v26;
        goto LABEL_23;
      }
      __break(1u);
      goto LABEL_59;
    case 2uLL:
      uint64_t v28 = *(void *)(v22 + 16);
      uint64_t v27 = *(void *)(v22 + 24);
      BOOL v29 = __OFSUB__(v27, v28);
      uint64_t v26 = v27 - v28;
      if (!v29) {
        goto LABEL_23;
      }
LABEL_59:
      __break(1u);
      goto LABEL_60;
    case 3uLL:
      goto LABEL_25;
    default:
      uint64_t v26 = BYTE6(v23);
LABEL_23:
      if (v26 != 20)
      {
LABEL_25:
        sub_1CA5B736C(v22, v23);
        goto LABEL_26;
      }
      sub_1CA5B84E8(v15, v17);
      uint64_t v30 = sub_1CA5FD8A8();
      uint64_t v38 = (void *)sub_1CA5C9BE0(v30, v31);
      swift_bridgeObjectRelease();
      if (v38)
      {
        uint64_t v39 = sub_1CA5FD8A8();
        uint64_t v45 = sub_1CA5CA6E0(v39, v40);
        swift_bridgeObjectRelease();
        if (v45)
        {
          uint64_t v60 = v45;
          uint64_t v46 = sub_1CA5FD8A8();
          uint64_t v53 = sub_1CA5CA6E0(v46, v47);
          swift_bridgeObjectRelease();
          if (v53)
          {
            long long v62 = (void *)v53;
            sub_1CA5AEE14((uint64_t *)&v62);
            sub_1CA5AEE14(&v60);
            unint64_t v55 = (unint64_t)v62;
            unint64_t v56 = v60;
            sub_1CA5B8510(v25, v24);
            v57 = sub_1CA5B7F9C(v55, v56, v25, v24);
            sub_1CA5B736C(v25, v24);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_1CA5B736C(v25, v24);
            *a2 = v57;
            return;
          }
          swift_bridgeObjectRelease();
          if (qword_1EA608648 != -1) {
            swift_once();
          }
          uint64_t v54 = sub_1CA5FD648();
          __swift_project_value_buffer(v54, (uint64_t)qword_1EA608650);
          uint64_t v49 = sub_1CA5FD628();
          os_log_type_t v50 = sub_1CA5FD9C8();
          if (!os_log_type_enabled(v49, v50))
          {
LABEL_51:

            sub_1CA5B736C(v25, v24);
            goto LABEL_38;
          }
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          long long v52 = "No associated readers found for pass, skipping";
        }
        else
        {
          if (qword_1EA608648 != -1) {
            swift_once();
          }
          uint64_t v48 = sub_1CA5FD648();
          __swift_project_value_buffer(v48, (uint64_t)qword_1EA608650);
          uint64_t v49 = sub_1CA5FD628();
          os_log_type_t v50 = sub_1CA5FD9C8();
          if (!os_log_type_enabled(v49, v50)) {
            goto LABEL_51;
          }
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          long long v52 = "No associatedReaderIdentifers key with found for pass, skipping";
        }
        _os_log_impl(&dword_1CA552000, v49, v50, v52, v51, 2u);
        MEMORY[0x1CB799300](v51, -1, -1);
        goto LABEL_51;
      }
      if (qword_1EA608648 != -1) {
LABEL_60:
      }
        swift_once();
      uint64_t v41 = sub_1CA5FD648();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EA608650);
      uint64_t v42 = sub_1CA5FD628();
      os_log_type_t v43 = sub_1CA5FD9C8();
      if (os_log_type_enabled(v42, v43))
      {
        id v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v44 = 0;
        _os_log_impl(&dword_1CA552000, v42, v43, "No ecp2 info?? skipping", v44, 2u);
        MEMORY[0x1CB799300](v44, -1, -1);
      }

      sub_1CA5B736C(v25, v24);
LABEL_37:

LABEL_38:
      *a2 = MEMORY[0x1E4FBC860];
      return;
  }
}

uint64_t sub_1CA5AEDA8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1CA5EAC40(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1CA5B23D8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1CA5AEE14(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    uint64_t v2 = sub_1CA5EAC7C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1CA5B3EFC(v6);
  return sub_1CA5FD968();
}

void sub_1CA5AEE9C(void *a1)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1CA5C5230(0xD000000000000012, 0x80000001CA60BDB0);
  if (v3 >> 60 == 15) {
    __break(1u);
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  uint64_t v6 = (void *)sub_1CA5FD578();
  sub_1CA5B736C(v4, v5);
  id v7 = (id)SelectByNameCmd(v6);

  uint64_t v8 = sub_1CA5FD598();
  unint64_t v10 = v9;

  uint64_t v11 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v8, v10);
  v23[0] = 0;
  id v12 = [a1 sel_transceive_error_:v11 v23];

  id v13 = v23[0];
  if (v12)
  {
    uint64_t v14 = sub_1CA5FD598();
    sub_1CA5B6EF4(v14, v15);
  }
  else
  {
    unint64_t v16 = v13;
    unint64_t v17 = (void *)sub_1CA5FD4B8();

    swift_willThrow();
    if (qword_1EA608648 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1CA5FD648();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EA608650);
    uint64_t v19 = sub_1CA5FD628();
    os_log_type_t v20 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      v23[0] = v22;
      *(_DWORD *)os_log_type_t v21 = 136315138;
      sub_1CA5DDA20(0xD000000000000038, 0x80000001CA60BDD0, (uint64_t *)v23);
      sub_1CA5FDA68();
      _os_log_impl(&dword_1CA552000, v19, v20, "Function: %s -- Failed to transceive select CRS", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v22, -1, -1);
      MEMORY[0x1CB799300](v21, -1, -1);
    }
  }
}

void *sub_1CA5AF148(void *a1)
{
  v22[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1CA5C5230(0xD000000000000012, 0x80000001CA60BB60);
  if (v3 >> 60 == 15) {
    __break(1u);
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  uint64_t v6 = (void *)sub_1CA5FD578();
  sub_1CA5B736C(v4, v5);
  id v7 = (id)SelectByNameCmd(v6);

  uint64_t v8 = sub_1CA5FD598();
  unint64_t v10 = v9;

  uint64_t v11 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v8, v10);
  if (qword_1EA608688 != -1) {
    swift_once();
  }
  sub_1CA5B84AC(0, &qword_1EA6086E0);
  id v12 = (void *)sub_1CA5FD948();
  v22[0] = 0;
  id v13 = [a1 sel_transceiveAndCheckSW_inArray_error_:v11, v12, v22];

  id v14 = v22[0];
  if (v13)
  {
    unint64_t v15 = (void *)sub_1CA5FD598();
    unint64_t v17 = v16;

    v22[0] = (id)sub_1CA5C4448((uint64_t)v15, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
    sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
    uint64_t v18 = sub_1CA5FD888();
    os_log_type_t v20 = v19;
    swift_bridgeObjectRelease();
    v22[0] = (id)v18;
    v22[1] = v20;
    sub_1CA5B7380();
    LOBYTE(v18) = sub_1CA5FDA88();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      sub_1CA5BBD9C(0xD000000000000032, 0x80000001CA60BCA0, 8, 0);
      swift_willThrow();
      sub_1CA5B6EF4((uint64_t)v15, v17);
    }
  }
  else
  {
    unint64_t v15 = v14;
    sub_1CA5FD4B8();

    swift_willThrow();
  }
  return v15;
}

uint64_t sub_1CA5AF440(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1CA5DE6B8(0, v2, 0);
  uint64_t v3 = v16;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1CA5B83E4(i, (uint64_t)v15);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA5DE6B8(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v16;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CA5DE6B8(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v16;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 56 * v6;
      *(void *)(v7 + 32) = v9;
      *(_OWORD *)(v7 + 40) = v10;
      *(void *)(v7 + 56) = v11;
      *(void *)(v7 + 64) = v12;
      *(void *)(v7 + 72) = v13;
      *(void *)(v7 + 80) = v14;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    sub_1CA5B8440(0, 0xF000000000000000, 0, 0, 0, 0, 0);
    return 0;
  }
  return v3;
}

void *sub_1CA5AF5DC(void *a1, uint64_t a2)
{
  uint64_t v4 = a1;
  uint64_t v129 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1CA5AF148(a1);
  if (!v2)
  {
    sub_1CA5B6EF4((uint64_t)result, v6);
    unint64_t v7 = sub_1CA5B0470(v4);
    if (!*(void *)(v7 + 16))
    {
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      sub_1CA5BBD9C(0xD000000000000034, 0x80000001CA60BCE0, 8, 0);
      return (void *)swift_willThrow();
    }
    unint64_t v108 = v7;
    uint64_t v114 = a2;
    swift_bridgeObjectRetain();
    sub_1CA5AEDA8(&v114);
    uint64_t v8 = v114;
    uint64_t v9 = sub_1CA5BA450((uint64_t)&unk_1F24D3B10);
    uint64_t v123 = v9;
    unint64_t v124 = v10;
    uint64_t v11 = *(void *)(v8 + 16);
    if (v11)
    {
      v107 = v4;
      uint64_t v12 = 32;
      unint64_t v13 = v108;
      uint64_t v14 = v8;
      uint64_t v111 = v8;
      while (1)
      {
        long long v15 = *(_OWORD *)(v14 + v12);
        long long v16 = *(_OWORD *)(v14 + v12 + 16);
        long long v17 = *(_OWORD *)(v14 + v12 + 32);
        unint64_t v128 = *(void *)(v14 + v12 + 48);
        long long v126 = v16;
        long long v127 = v17;
        long long v125 = v15;
        sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
        if (qword_1EA608648 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_1CA5FD648();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EA608650);
        sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
        sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
        uint64_t v19 = sub_1CA5FD628();
        os_log_type_t v20 = sub_1CA5FD9D8();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          uint64_t v114 = v22;
          *(_DWORD *)uint64_t v21 = 136315138;
          uint64_t v23 = sub_1CA5AD318(0);
          *(void *)(v21 + 4) = sub_1CA5DDA20(v23, v24, &v114);
          swift_bridgeObjectRelease();
          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          _os_log_impl(&dword_1CA552000, v19, v20, "%s", (uint8_t *)v21, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v22, -1, -1);
          uint64_t v25 = v21;
          uint64_t v14 = v111;
          MEMORY[0x1CB799300](v25, -1, -1);
        }
        else
        {
          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
        }

        if (*(void *)(v13 + 16))
        {
          uint64_t v26 = *((void *)&v127 + 1);
          unint64_t v27 = v128;
          sub_1CA5B6FE8(*((uint64_t *)&v127 + 1), v128);
          uint64_t v28 = sub_1CA5F1A4C(v26, v27);
          if (v29)
          {
            char v30 = *(unsigned char *)(*(void *)(v13 + 56) + v28);
            sub_1CA5B6EF4(v26, v27);
            uint64_t v31 = sub_1CA5FD558();
            unint64_t v33 = v32;
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v31, v33);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
            uint64_t v34 = swift_allocObject();
            *(_OWORD *)(v34 + 16) = xmmword_1CA6021C0;
            *(unsigned char *)(v34 + 32) = v30;
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4228);
            uint64_t v116 = v35;
            uint64_t v36 = sub_1CA5B8634((unint64_t *)&qword_1EBCB4230, &qword_1EBCB4228);
            uint64_t v117 = v36;
            uint64_t v114 = v34;
            unint64_t v37 = __swift_project_boxed_opaque_existential_1Tm(&v114, v35);
            uint64_t v38 = *v37;
            size_t v39 = *(void *)(*v37 + 16);
            uint64_t v109 = v36;
            if (v39)
            {
              if (v39 <= 0xE)
              {
                *(void *)((char *)&__dst + 6) = 0;
                *(void *)&long long __dst = 0;
                BYTE14(__dst) = v39;
                memcpy(&__dst, (const void *)(v38 + 32), v39);
                uint64_t v42 = __dst;
                unint64_t v43 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
                swift_bridgeObjectRetain();
              }
              else
              {
                sub_1CA5FD448();
                swift_allocObject();
                swift_bridgeObjectRetain();
                uint64_t v40 = sub_1CA5FD3F8();
                uint64_t v41 = v40;
                if (v39 >= 0x7FFFFFFF)
                {
                  sub_1CA5FD518();
                  uint64_t v42 = swift_allocObject();
                  *(void *)(v42 + 16) = 0;
                  *(void *)(v42 + 24) = v39;
                  unint64_t v43 = v41 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v42 = v39 << 32;
                  unint64_t v43 = v40 | 0x4000000000000000;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              uint64_t v42 = 0;
              unint64_t v43 = 0xC000000000000000;
            }
            uint64_t v47 = *((void *)&v126 + 1);
            unint64_t v48 = v127;
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v114);
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v42, v43);
            sub_1CA5B6FE8(v47, v48);
            __int16 v49 = sub_1CA5B1A70(v47, v48);
            sub_1CA5B6EF4(v47, v48);
            if ((v49 & 0x100) != 0)
            {
              __break(1u);
              swift_release();
              __break(1u);
              JUMPOUT(0x1CA5B0450);
            }
            if (v49) {
              char v50 = 3;
            }
            else {
              char v50 = 2;
            }
            uint64_t v51 = swift_allocObject();
            *(_OWORD *)(v51 + 16) = xmmword_1CA6021C0;
            *(unsigned char *)(v51 + 32) = v50;
            uint64_t v116 = v35;
            uint64_t v117 = v109;
            uint64_t v114 = v51;
            long long v52 = __swift_project_boxed_opaque_existential_1Tm(&v114, v35);
            uint64_t v53 = *v52;
            size_t v54 = *(void *)(*v52 + 16);
            if (v54)
            {
              if (v54 <= 0xE)
              {
                *(void *)((char *)&__dst + 6) = 0;
                *(void *)&long long __dst = 0;
                BYTE14(__dst) = v54;
                memcpy(&__dst, (const void *)(v53 + 32), v54);
                uint64_t v57 = __dst;
                unint64_t v58 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
                swift_bridgeObjectRetain();
              }
              else
              {
                sub_1CA5FD448();
                swift_allocObject();
                swift_bridgeObjectRetain();
                uint64_t v55 = sub_1CA5FD3F8();
                uint64_t v56 = v55;
                if (v54 >= 0x7FFFFFFF)
                {
                  sub_1CA5FD518();
                  uint64_t v57 = swift_allocObject();
                  *(void *)(v57 + 16) = 0;
                  *(void *)(v57 + 24) = v54;
                  unint64_t v58 = v56 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v57 = v54 << 32;
                  unint64_t v58 = v55 | 0x4000000000000000;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              uint64_t v57 = 0;
              unint64_t v58 = 0xC000000000000000;
            }
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v114);
            uint64_t v114 = v57;
            unint64_t v115 = v58;
            uint64_t v59 = sub_1CA5FD5D8();
            unint64_t v61 = v60;
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v59, v61);
            uint64_t v62 = v114;
            unint64_t v63 = v115;
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v62, v63);
            sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
            unint64_t v13 = v108;
            uint64_t v14 = v111;
            goto LABEL_8;
          }
          sub_1CA5B6EF4(v26, v27);
        }
        id v44 = sub_1CA5FD628();
        os_log_type_t v45 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl(&dword_1CA552000, v44, v45, "Endpoint not found for in Lyon Instance, skipping", v46, 2u);
          MEMORY[0x1CB799300](v46, -1, -1);

          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
        }
        else
        {
          sub_1CA5B8374((uint64_t *)&v125, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
        }
LABEL_8:
        v12 += 56;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v64 = v123;
          unint64_t v65 = v124;
          uint64_t v4 = v107;
          goto LABEL_41;
        }
      }
    }
    uint64_t v64 = v9;
    unint64_t v65 = v10;
    swift_bridgeObjectRelease();
    swift_release();
LABEL_41:
    sub_1CA5B6FE8(v64, v65);
    uint64_t v66 = sub_1CA5BB678(v64, v65);
    unint64_t v68 = v67;
    sub_1CA5B6EF4(v64, v65);
    char v69 = sub_1CA5B1278(v4, v66, v68);
    sub_1CA5B6EF4(v66, v68);
    if (v69)
    {
      long long __dst = xmmword_1CA6021D0;
      uint64_t v70 = 0;
      switch(v65 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v64), v64))
          {
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
          }
          uint64_t v70 = HIDWORD(v64) - (int)v64;
          break;
        case 2uLL:
          uint64_t v76 = *(void *)(v64 + 16);
          uint64_t v75 = *(void *)(v64 + 24);
          uint64_t v70 = v75 - v76;
          if (!__OFSUB__(v75, v76)) {
            break;
          }
          goto LABEL_74;
        case 3uLL:
          break;
        default:
          uint64_t v70 = BYTE6(v65);
          break;
      }
      sub_1CA5F7A14(v70);
      uint64_t v120 = sub_1CA5BA450((uint64_t)&unk_1F24D3B38);
      unint64_t v121 = v77;
      long long v78 = __dst;
      sub_1CA5B6FE8(__dst, *((unint64_t *)&__dst + 1));
      sub_1CA5FD5C8();
      sub_1CA5B6EF4(v78, *((unint64_t *)&v78 + 1));
      sub_1CA5B6FE8(v64, v65);
      sub_1CA5FD5C8();
      sub_1CA5B6EF4(v64, v65);
      uint64_t v118 = sub_1CA5BA450((uint64_t)&unk_1F24D3B60);
      unint64_t v119 = v79;
      uint64_t v80 = v120;
      unint64_t v81 = v121;
      LODWORD(v82) = 0;
      switch(v121 >> 62)
      {
        case 1uLL:
          LODWORD(v82) = HIDWORD(v120) - v120;
          if (__OFSUB__(HIDWORD(v120), v120)) {
            goto LABEL_75;
          }
          uint64_t v82 = (int)v82;
LABEL_57:
          if (v82 < -32768)
          {
            __break(1u);
          }
          else if (v82 < 0x8000)
          {
LABEL_59:
            LOWORD(v114) = bswap32(v82) >> 16;
            uint64_t v86 = sub_1CA5B9788((uint64_t)&v114, (uint64_t)&v114 + 2);
            unint64_t v88 = v87;
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v86, v88);
            sub_1CA5B6FE8(v80, v81);
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v80, v81);
            if (qword_1EA608648 == -1) {
              goto LABEL_60;
            }
LABEL_72:
            swift_once();
LABEL_60:
            uint64_t v89 = sub_1CA5FD648();
            __swift_project_value_buffer(v89, (uint64_t)qword_1EA608650);
            uint64_t v90 = v118;
            unint64_t v91 = v119;
            sub_1CA5B6FE8(v118, v119);
            sub_1CA5B6FE8(v90, v91);
            v92 = sub_1CA5FD628();
            os_log_type_t v93 = sub_1CA5FD9D8();
            if (os_log_type_enabled(v92, v93))
            {
              v94 = (uint8_t *)swift_slowAlloc();
              uint64_t v112 = swift_slowAlloc();
              uint64_t v114 = v112;
              *(_DWORD *)v94 = 136315138;
              buf = v94;
              sub_1CA5C4448(v90, v91);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
              sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
              uint64_t v95 = sub_1CA5FD888();
              unint64_t v97 = v96;
              swift_bridgeObjectRelease();
              id v113 = (id)sub_1CA5DDA20(v95, v97, &v114);
              sub_1CA5FDA68();
              swift_bridgeObjectRelease();
              sub_1CA5B6EF4(v90, v91);
              sub_1CA5B6EF4(v90, v91);
              _os_log_impl(&dword_1CA552000, v92, v93, "Auxiliary Elements Command: %s", buf, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1CB799300](v112, -1, -1);
              MEMORY[0x1CB799300](buf, -1, -1);
            }
            else
            {
              sub_1CA5B6EF4(v90, v91);
              sub_1CA5B6EF4(v90, v91);
            }

            swift_beginAccess();
            uint64_t v99 = v118;
            unint64_t v98 = v119;
            sub_1CA5B6FE8(v118, v119);
            v100 = (void *)sub_1CA5FD578();
            sub_1CA5B6EF4(v99, v98);
            if (qword_1EA608688 != -1) {
              swift_once();
            }
            sub_1CA5B84AC(0, &qword_1EA6086E0);
            v101 = (void *)sub_1CA5FD948();
            id v113 = 0;
            id v102 = [v4 sel_transceiveAndCheckSW_inArray_error_:v100, v101, &v113];

            id v103 = v113;
            if (v102)
            {
              uint64_t v104 = sub_1CA5FD598();
              sub_1CA5B6EF4(v104, v105);
            }
            else
            {
              v106 = v103;
              sub_1CA5FD4B8();

              swift_willThrow();
            }
            sub_1CA5B6EF4(v99, v98);
            sub_1CA5B6EF4(__dst, *((unint64_t *)&__dst + 1));
            sub_1CA5B6EF4(v120, v121);
            return (void *)sub_1CA5B6EF4(v123, v124);
          }
          __break(1u);
          goto LABEL_72;
        case 2uLL:
          uint64_t v84 = *(void *)(v120 + 16);
          uint64_t v83 = *(void *)(v120 + 24);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v82 = v83 - v84;
          if (!v85) {
            goto LABEL_57;
          }
          goto LABEL_76;
        case 3uLL:
          goto LABEL_59;
        default:
          LODWORD(v82) = BYTE6(v121);
          goto LABEL_59;
      }
    }
    if (qword_1EA608648 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_1CA5FD648();
    __swift_project_value_buffer(v71, (uint64_t)qword_1EA608650);
    uint64_t v72 = sub_1CA5FD628();
    os_log_type_t v73 = sub_1CA5FDA08();
    if (os_log_type_enabled(v72, v73))
    {
      long long v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v74 = 0;
      _os_log_impl(&dword_1CA552000, v72, v73, "Applet configuration has not changed", v74, 2u);
      MEMORY[0x1CB799300](v74, -1, -1);
    }

    return (void *)sub_1CA5B6EF4(v123, v124);
  }
  return result;
}

unint64_t sub_1CA5B0470(void *a1)
{
  uint64_t v126 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1CA5FD648();
  unint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  v107 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1CA5BA450((uint64_t)&unk_1F24D3AE8);
  unint64_t v79 = v6;
  unint64_t v7 = sub_1CA5FD578();
  if (qword_1EA608688 != -1) {
    goto LABEL_111;
  }
  while (2)
  {
    sub_1CA5B84AC(0, &qword_1EA6086E0);
    uint64_t v8 = (void *)sub_1CA5FD948();
    id v123 = 0;
    id v9 = [a1 sel_transceiveAndCheckSW_inArray_error_:v7, v8, &v123];

    id v10 = v123;
    if (!v9)
    {
      long long v16 = v10;
      sub_1CA5FD4B8();

      swift_willThrow();
      sub_1CA5B6EF4(v78, v79);
      return v4;
    }
    unint64_t v11 = sub_1CA5FD598();
    unint64_t v13 = v12;

    unint64_t v121 = sub_1CA5F0D80(MEMORY[0x1E4FBC860]);
    a1 = (void *)v121;
    switch(v13 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v11), v11))
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          sub_1CA5B6EF4(v1, v116);
          __break(1u);
LABEL_119:
          sub_1CA5B6EF4(v1, v116);
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v11) - (int)v11;
LABEL_9:
        if (v15 < 1) {
          goto LABEL_85;
        }
        uint64_t v20 = 0;
        uint64_t v106 = v13 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v94 = (int)v11;
        uint64_t v92 = (uint64_t)v11 >> 32;
        uint64_t v93 = BYTE6(v13);
        uint64_t v104 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        id v103 = (void (**)(char *, uint64_t))(v4 + 8);
        unint64_t v91 = v11 >> 8;
        unint64_t v90 = v11 >> 16;
        unint64_t v89 = v11 >> 24;
        unint64_t v88 = HIDWORD(v11);
        unint64_t v87 = v11 >> 40;
        unint64_t v86 = HIWORD(v11);
        unint64_t v85 = HIBYTE(v11);
        *(void *)&long long v14 = 136315394;
        long long v97 = v14;
        unint64_t v84 = v13 >> 8;
        long long v117 = xmmword_1CA6021C0;
        unint64_t v83 = v13 >> 16;
        unint64_t v82 = v13 >> 24;
        unint64_t v81 = HIDWORD(v13);
        unint64_t v80 = v13 >> 40;
        unint64_t v105 = v13 >> 62;
        uint64_t v96 = MEMORY[0x1E4FBC840] + 8;
        unint64_t v77 = v13;
        uint64_t v76 = v3;
        unint64_t v95 = v11;
        uint64_t v102 = v15;
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v11 + 16);
        uint64_t v17 = *(void *)(v11 + 24);
        BOOL v19 = __OFSUB__(v17, v18);
        uint64_t v15 = v17 - v18;
        if (!v19) {
          goto LABEL_9;
        }
        goto LABEL_117;
      case 3uLL:
        goto LABEL_85;
      default:
        uint64_t v15 = BYTE6(v13);
        goto LABEL_9;
    }
LABEL_15:
    BOOL v22 = __OFADD__(v20, 22);
    if (__OFADD__(v20, 20)) {
      goto LABEL_100;
    }
    if (v20 + 20 < v20) {
      goto LABEL_101;
    }
    BOOL v108 = v22;
    uint64_t v109 = v20 + 22;
    uint64_t v23 = sub_1CA5FD558();
    unint64_t v116 = v24;
    uint64_t v25 = v20 + 21;
    uint64_t v1 = v23;
    a1 = (void *)v106;
    switch(v105)
    {
      case 1uLL:
        if (v25 < v94 || v25 >= v92) {
          goto LABEL_106;
        }
        uint64_t v30 = sub_1CA5FD408();
        if (!v30) {
          goto LABEL_121;
        }
        unint64_t v4 = v30;
        uint64_t v31 = sub_1CA5FD428();
        uint64_t v29 = v25 - v31;
        if (!__OFSUB__(v25, v31)) {
          goto LABEL_33;
        }
        goto LABEL_108;
      case 2uLL:
        if (v25 < *(void *)(v11 + 16)) {
          goto LABEL_105;
        }
        if (v25 >= *(void *)(v11 + 24)) {
          goto LABEL_107;
        }
        uint64_t v27 = sub_1CA5FD408();
        if (!v27) {
          goto LABEL_122;
        }
        unint64_t v4 = v27;
        uint64_t v28 = sub_1CA5FD428();
        uint64_t v29 = v25 - v28;
        if (__OFSUB__(v25, v28)) {
          goto LABEL_109;
        }
LABEL_33:
        int v26 = *(unsigned __int8 *)(v4 + v29);
LABEL_34:
        int v110 = v26;
        unint64_t v32 = v107;
        unint64_t v33 = v116;
        if (qword_1EA608648 != -1) {
          swift_once();
        }
        uint64_t v34 = __swift_project_value_buffer(v3, (uint64_t)qword_1EA608650);
        (*v104)(v32, v34, v3);
        sub_1CA5B6FE8(v1, v33);
        sub_1CA5B6FE8(v1, v33);
        unint64_t v7 = sub_1CA5FD628();
        int v35 = sub_1CA5FD9C8();
        if (!os_log_type_enabled((os_log_t)v7, (os_log_type_t)v35))
        {
          sub_1CA5B6EF4(v1, v33);
          sub_1CA5B6EF4(v1, v33);

          (*v103)(v32, v3);
          goto LABEL_74;
        }
        break;
      case 3uLL:
        goto LABEL_120;
      default:
        if (v25 >= v93) {
          goto LABEL_104;
        }
        LOBYTE(v123) = v11;
        BYTE1(v123) = v91;
        BYTE2(v123) = v90;
        BYTE3(v123) = v89;
        BYTE4(v123) = v88;
        BYTE5(v123) = v87;
        BYTE6(v123) = v86;
        HIBYTE(v123) = v85;
        LOBYTE(v124) = v13;
        BYTE1(v124) = v84;
        BYTE2(v124) = v83;
        HIBYTE(v124) = v82;
        LOBYTE(v125) = v81;
        HIBYTE(v125) = v80;
        int v26 = *((unsigned __int8 *)&v123 + v25);
        goto LABEL_34;
    }
    int v99 = v35;
    os_log_t v101 = (os_log_t)v7;
    unint64_t v36 = v33 >> 62;
    unint64_t v4 = swift_slowAlloc();
    uint64_t v98 = swift_slowAlloc();
    uint64_t v122 = v98;
    unint64_t v100 = v4;
    *(_DWORD *)unint64_t v4 = v97;
    unint64_t v37 = (void *)MEMORY[0x1E4FBC860];
    switch(v36)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v1), v1))
        {
          __break(1u);
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
        unint64_t v11 = HIDWORD(v1) - (int)v1;
LABEL_43:
        if (v11)
        {
          unint64_t v111 = HIDWORD(v1);
          uint64_t v120 = (void *)MEMORY[0x1E4FBC860];
          unint64_t v13 = v11 & ~((uint64_t)v11 >> 63);
          unint64_t v115 = v36;
          a1 = &v120;
          sub_1CA5DE698(0, v13, 0);
          unint64_t v40 = v115;
          unint64_t v37 = v120;
          uint64_t v114 = (int)v1;
          if (!v115)
          {
            if ((v11 & 0x8000000000000000) == 0)
            {
              uint64_t v3 = 0;
              goto LABEL_51;
            }
LABEL_114:
            __break(1u);
LABEL_115:
            swift_once();
LABEL_87:
            __swift_project_value_buffer(v3, (uint64_t)qword_1EA608650);
            unint64_t v70 = v121;
            swift_bridgeObjectRetain();
            uint64_t v71 = sub_1CA5FD628();
            os_log_type_t v72 = sub_1CA5FDA08();
            if (os_log_type_enabled(v71, v72))
            {
              os_log_type_t v73 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)os_log_type_t v73 = 134217984;
              id v123 = *(id *)(v70 + 16);
              sub_1CA5FDA68();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1CA552000, v71, v72, "Endpoints found: %ld", v73, 0xCu);
              MEMORY[0x1CB799300](v73, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            sub_1CA5B6EF4(v78, v79);
            sub_1CA5B6EF4(v11, v13);

            swift_beginAccess();
            return v121;
          }
          if (v115 == 1) {
            uint64_t v3 = v114;
          }
          else {
            uint64_t v3 = *(void *)(v1 + 16);
          }
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_51:
            a1 = (void *)(v116 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v112 = v1 >> 32;
            uint64_t v113 = BYTE6(v116);
            uint64_t v118 = v116 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v119 = v1;
            while (v13)
            {
              if (v40)
              {
                if (v40 == 1)
                {
                  if (v3 < v114 || v3 >= v112) {
                    goto LABEL_96;
                  }
                  uint64_t v41 = sub_1CA5FD408();
                  if (!v41) {
                    goto LABEL_118;
                  }
                  unint64_t v4 = v41;
                  uint64_t v42 = sub_1CA5FD428();
                  uint64_t v43 = v3 - v42;
                  if (__OFSUB__(v3, v42)) {
                    goto LABEL_98;
                  }
                }
                else
                {
                  if (v3 < *(void *)(v1 + 16)) {
                    goto LABEL_95;
                  }
                  if (v3 >= *(void *)(v1 + 24)) {
                    goto LABEL_97;
                  }
                  uint64_t v46 = sub_1CA5FD408();
                  if (!v46) {
                    goto LABEL_119;
                  }
                  unint64_t v4 = v46;
                  uint64_t v47 = sub_1CA5FD428();
                  uint64_t v43 = v3 - v47;
                  if (__OFSUB__(v3, v47)) {
                    goto LABEL_99;
                  }
                }
                char v45 = *(unsigned char *)(v4 + v43);
                unint64_t v44 = v115;
              }
              else
              {
                if (v3 >= v113) {
                  goto LABEL_94;
                }
                unint64_t v44 = v40;
                LOWORD(v123) = v1;
                BYTE2(v123) = BYTE2(v1);
                BYTE3(v123) = BYTE3(v1);
                BYTE4(v123) = v111;
                BYTE5(v123) = BYTE5(v1);
                BYTE6(v123) = BYTE6(v1);
                HIBYTE(v123) = HIBYTE(v1);
                int v124 = v116;
                __int16 v125 = WORD2(v116);
                char v45 = *((unsigned char *)&v123 + v3);
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
              uint64_t v48 = swift_allocObject();
              *(_OWORD *)(v48 + 16) = v117;
              *(void *)(v48 + 56) = MEMORY[0x1E4FBC358];
              *(void *)(v48 + 64) = MEMORY[0x1E4FBC3B0];
              *(unsigned char *)(v48 + 32) = v45;
              unint64_t v4 = sub_1CA5FD8B8();
              uint64_t v50 = v49;
              uint64_t v120 = v37;
              unint64_t v7 = v37[2];
              unint64_t v51 = v37[3];
              unint64_t v40 = v44;
              if (v7 >= v51 >> 1)
              {
                sub_1CA5DE698(v51 > 1, v7 + 1, 1);
                unint64_t v40 = v115;
                unint64_t v37 = v120;
              }
              v37[2] = v7 + 1;
              long long v52 = &v37[2 * v7];
              v52[4] = v4;
              v52[5] = v50;
              ++v3;
              --v13;
              --v11;
              a1 = (void *)v118;
              uint64_t v1 = v119;
              if (!v11)
              {
                unint64_t v13 = v77;
                uint64_t v3 = v76;
                goto LABEL_72;
              }
            }
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
          }
          __break(1u);
LABEL_111:
          swift_once();
          continue;
        }
LABEL_72:
        unint64_t v11 = v95;
LABEL_73:
        id v123 = v37;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
        uint64_t v53 = sub_1CA5FD888();
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
        uint64_t v56 = sub_1CA5DDA20(v53, v55, &v122);
        unint64_t v7 = v100;
        *(void *)(v100 + 4) = v56;
        swift_bridgeObjectRelease();
        unint64_t v33 = v116;
        sub_1CA5B6EF4(v1, v116);
        sub_1CA5B6EF4(v1, v33);
        *(_WORD *)(v7 + 12) = 256;
        *(unsigned char *)(v7 + 14) = v110;
        os_log_t v57 = v101;
        _os_log_impl(&dword_1CA552000, v101, (os_log_type_t)v99, "%s : %hhu", (uint8_t *)v7, 0xFu);
        uint64_t v58 = v98;
        swift_arrayDestroy();
        MEMORY[0x1CB799300](v58, -1, -1);
        MEMORY[0x1CB799300](v7, -1, -1);

        (*v103)(v107, v3);
LABEL_74:
        sub_1CA5B6FE8(v1, v33);
        a1 = (void *)v121;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v123 = a1;
        unint64_t v4 = sub_1CA5F1A4C(v1, v33);
        uint64_t v61 = a1[2];
        BOOL v62 = (v60 & 1) == 0;
        uint64_t v63 = v61 + v62;
        if (__OFADD__(v61, v62)) {
          goto LABEL_102;
        }
        char v64 = v60;
        if (a1[3] >= v63)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            a1 = v123;
            if (v60) {
              goto LABEL_11;
            }
          }
          else
          {
            sub_1CA5E3350();
            a1 = v123;
            if (v64) {
              goto LABEL_11;
            }
          }
        }
        else
        {
          sub_1CA5E2050(v63, isUniquelyReferenced_nonNull_native);
          uint64_t v65 = sub_1CA5F1A4C(v1, v116);
          if ((v64 & 1) != (v66 & 1))
          {
            sub_1CA5FDCE8();
            __break(1u);
            JUMPOUT(0x1CA5B1248);
          }
          unint64_t v4 = v65;
          a1 = v123;
          if (v64)
          {
LABEL_11:
            *(unsigned char *)(a1[7] + v4) = v110;
            unint64_t v7 = v116;
            goto LABEL_12;
          }
        }
        a1[(v4 >> 6) + 8] |= 1 << v4;
        unint64_t v67 = (uint64_t *)(a1[6] + 16 * v4);
        unint64_t v7 = v116;
        *unint64_t v67 = v1;
        v67[1] = v7;
        *(unsigned char *)(a1[7] + v4) = v110;
        uint64_t v68 = a1[2];
        BOOL v19 = __OFADD__(v68, 1);
        uint64_t v69 = v68 + 1;
        if (v19) {
          goto LABEL_103;
        }
        a1[2] = v69;
        sub_1CA5B6FE8(v1, v7);
LABEL_12:
        unint64_t v121 = (unint64_t)a1;
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v1, v7);
        sub_1CA5B6EF4(v1, v7);
        uint64_t v20 = v109;
        char v21 = v108;
        if (v109 >= v102) {
          char v21 = 1;
        }
        if ((v21 & 1) == 0) {
          goto LABEL_15;
        }
LABEL_85:
        if (a1[2])
        {
          if (qword_1EA608648 == -1) {
            goto LABEL_87;
          }
          goto LABEL_115;
        }
        swift_bridgeObjectRelease();
        unint64_t v4 = sub_1CA5F0D80(MEMORY[0x1E4FBC860]);
        sub_1CA5B6EF4(v78, v79);
        sub_1CA5B6EF4(v11, v13);
        return v4;
      case 2uLL:
        uint64_t v39 = *(void *)(v1 + 16);
        uint64_t v38 = *(void *)(v1 + 24);
        unint64_t v11 = v38 - v39;
        if (!__OFSUB__(v38, v39)) {
          goto LABEL_43;
        }
        goto LABEL_113;
      case 3uLL:
        goto LABEL_73;
      default:
        unint64_t v11 = BYTE6(v116);
        goto LABEL_43;
    }
  }
}

uint64_t sub_1CA5B1278(void *a1, uint64_t a2, unint64_t a3)
{
  v66[1] = *MEMORY[0x1E4F143B8];
  if (qword_1EA608670 != -1) {
    swift_once();
  }
  unint64_t v4 = (void *)sub_1CA5FD578();
  id v64 = 0;
  id v5 = [a1 sel_transceive_error_:v4, &v64];

  id v6 = v64;
  if (!v5)
  {
    unint64_t v12 = v6;
    sub_1CA5FD4B8();

    swift_willThrow();
    return v13 & 1;
  }
  uint64_t v7 = sub_1CA5FD598();
  unint64_t v9 = v8;

  unint64_t v10 = v9 >> 62;
  switch(v9 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(v7) - v7;
      if (!__OFSUB__(HIDWORD(v7), v7))
      {
        uint64_t v11 = (int)v11;
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_44;
    case 2uLL:
      uint64_t v15 = *(void *)(v7 + 16);
      uint64_t v14 = *(void *)(v7 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v11 = v14 - v15;
      if (!v16) {
        goto LABEL_10;
      }
LABEL_44:
      __break(1u);
      goto LABEL_45;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v11 = BYTE6(v9);
LABEL_10:
      if (v11 < 2)
      {
LABEL_11:
        if (qword_1EA608648 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_1CA5FD648();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EA608650);
        uint64_t v18 = sub_1CA5FD628();
        os_log_type_t v19 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl(&dword_1CA552000, v18, v19, "Response for view configuration digest is malformed", v20, 2u);
          MEMORY[0x1CB799300](v20, -1, -1);
        }

        type metadata accessor for ATLError(0);
        sub_1CA5B7324((unint64_t *)&qword_1EA608730, type metadata accessor for ATLError);
        swift_allocError();
        *char v21 = 5;
        swift_willThrow();
        uint64_t v22 = v7;
        unint64_t v23 = v9;
        goto LABEL_16;
      }
      if (qword_1EA608648 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1CA5FD648();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EA608650);
      sub_1CA5B6FE8(v7, v9);
      sub_1CA5B6FE8(v7, v9);
      int v26 = sub_1CA5FD628();
      os_log_type_t type = sub_1CA5FDA08();
      if (!os_log_type_enabled(v26, type))
      {
        sub_1CA5B6EF4(v7, v9);
        sub_1CA5B6EF4(v7, v9);

        if (v10) {
          goto LABEL_22;
        }
LABEL_26:
        uint64_t v35 = BYTE6(v9);
        goto LABEL_28;
      }
      unint64_t v61 = v9;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v66[0] = v58;
      os_log_t v57 = v27;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1CA5B6FE8(v7, v61);
      sub_1CA5BC554(2, v7, v61, (uint64_t *)&v64);
      uint64_t v59 = a1;
      uint64_t v56 = v26;
      uint64_t v29 = (uint64_t)v64;
      unint64_t v28 = v65;
      sub_1CA5C4448((uint64_t)v64, v65);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
      uint64_t v30 = sub_1CA5FD888();
      unint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v33 = v29;
      a1 = v59;
      sub_1CA5B6EF4(v33, v28);
      uint64_t v34 = v30;
      unint64_t v9 = v61;
      id v64 = (id)sub_1CA5DDA20(v34, v32, v66);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease();
      sub_1CA5B6EF4(v7, v61);
      sub_1CA5B6EF4(v7, v61);
      _os_log_impl(&dword_1CA552000, v56, type, "Stored configuration response sw: %s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v58, -1, -1);
      MEMORY[0x1CB799300](v57, -1, -1);

      if (!v10) {
        goto LABEL_26;
      }
LABEL_22:
      if (v10 == 1)
      {
        LODWORD(v35) = HIDWORD(v7) - v7;
        if (!__OFSUB__(HIDWORD(v7), v7))
        {
          uint64_t v35 = (int)v35;
          goto LABEL_28;
        }
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once();
        goto LABEL_37;
      }
      uint64_t v37 = *(void *)(v7 + 16);
      uint64_t v36 = *(void *)(v7 + 24);
      BOOL v16 = __OFSUB__(v36, v37);
      uint64_t v35 = v36 - v37;
      if (v16) {
        goto LABEL_46;
      }
LABEL_28:
      if (v35 != 34)
      {
        uint64_t v42 = sub_1CA5FD628();
        os_log_type_t v43 = sub_1CA5FDA08();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v44 = 0;
          _os_log_impl(&dword_1CA552000, v42, v43, "Stored configuration is not present", v44, 2u);
          MEMORY[0x1CB799300](v44, -1, -1);

          sub_1CA5B6EF4(v7, v9);
        }
        else
        {
          sub_1CA5B6EF4(v7, v9);
        }
        char v13 = 1;
        return v13 & 1;
      }
      unint64_t v10 = v9;
      uint64_t v38 = sub_1CA5FD558();
      unint64_t v40 = v39;
      char v41 = sub_1CA5B6C5C(v38, v39, a2, a3);
      sub_1CA5B6EF4(v38, v40);
      if (v41)
      {
        sub_1CA5B6EF4(v7, v10);
        char v13 = 0;
        return v13 & 1;
      }
      char v45 = sub_1CA5FD628();
      os_log_type_t v46 = sub_1CA5FDA08();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_1CA552000, v45, v46, "Applet configuration needs to be changed", v47, 2u);
        MEMORY[0x1CB799300](v47, -1, -1);
      }

      if (qword_1EA608668 != -1) {
        goto LABEL_47;
      }
LABEL_37:
      uint64_t v48 = (void *)sub_1CA5FD578();
      if (qword_1EA608688 != -1) {
        swift_once();
      }
      sub_1CA5B84AC(0, &qword_1EA6086E0);
      uint64_t v49 = (void *)sub_1CA5FD948();
      id v64 = 0;
      id v50 = [a1 sel_transceiveAndCheckSW_inArray_error_:v48, v49, &v64];

      id v51 = v64;
      if (!v50)
      {
        unint64_t v55 = v51;
        sub_1CA5FD4B8();

        swift_willThrow();
        uint64_t v22 = v7;
        unint64_t v23 = v10;
LABEL_16:
        sub_1CA5B6EF4(v22, v23);
        return v13 & 1;
      }
      uint64_t v52 = sub_1CA5FD598();
      unint64_t v54 = v53;
      sub_1CA5B6EF4(v7, v10);
      sub_1CA5B6EF4(v52, v54);

      char v13 = 0;
      return v13 & 1;
  }
}

uint64_t sub_1CA5B1A70(uint64_t a1, unint64_t a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  int v2 = 1;
  int v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!((a1 ^ (unint64_t)(a1 << 32)) >> 32)) {
        goto LABEL_5;
      }
      goto LABEL_16;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      if (v5 != v4)
      {
        if (a2 >> 62 == 2)
        {
          uint64_t v6 = v4 - 1;
          if (__OFSUB__(v4, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          if (v6 < v5)
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
          }
          if (v6 >= v4) {
            goto LABEL_25;
          }
          uint64_t v7 = sub_1CA5FD408();
          if (!v7) {
            goto LABEL_27;
          }
          uint64_t v8 = v7;
          a1 = sub_1CA5FD428();
          uint64_t v9 = v6 - a1;
          if (!__OFSUB__(v6, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_16:
        uint64_t v10 = a1 >> 32;
        if (a1 >> 32 <= (int)a1)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v11 = sub_1CA5FD408();
        if (v11)
        {
          uint64_t v8 = v11;
          uint64_t v12 = v10 - 1;
          uint64_t v13 = sub_1CA5FD428();
          uint64_t v9 = v12 - v13;
          if (!__OFSUB__(v12, v13))
          {
LABEL_19:
            int v2 = 0;
            int v3 = *(unsigned __int8 *)(v8 + v9);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x1CA5B1C40);
      }
      int v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
        int v2 = 0;
        uint64_t v15 = a1;
        __int16 v16 = a2;
        char v17 = BYTE2(a2);
        char v18 = BYTE3(a2);
        char v19 = BYTE4(a2);
        char v20 = BYTE5(a2);
        int v3 = *((unsigned __int8 *)&v15 + BYTE6(a2) - 1);
      }
      else
      {
LABEL_5:
        int v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_1CA5B1C50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_1CA5C4A28(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5B1DA8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  int v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_1CA5C4D6C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5B1EF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_1CA5C4E68(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5B2044(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1CB798570](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1CA5B68A8(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1CA5FD968();
}

uint64_t sub_1CA5B2210()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5B2274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1CA5B7324(&qword_1EA608708, type metadata accessor for ATLError);

  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

uint64_t sub_1CA5B22F0()
{
  return sub_1CA5FDD78();
}

void *sub_1CA5B2350@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1CA5B2360(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1CA5B236C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CA5B2380(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1CA5B23BC()
{
}

unsigned char **sub_1CA5B23C8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1CA5B23D8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[1];
  uint64_t result = sub_1CA5FDC98();
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4) {
        return sub_1CA5B494C(0, v4, 1, a1);
      }
      return result;
    }
    goto LABEL_273;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
LABEL_309:
    sub_1CA5FDC08();
    __break(1u);
    JUMPOUT(0x1CA5B3E6CLL);
  }
  uint64_t v178 = result;
  v172 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    long long __dst = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v174 = MEMORY[0x1E4FBC860];
    if (v4 != 1)
    {
      unint64_t v109 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_225;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1CA5FD988();
    *(void *)(v8 + 16) = v7;
    uint64_t v174 = v8;
    long long __dst = (uint64_t *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v173 = *a1 + 80;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v181 = v4;
  uint64_t v201 = *a1;
LABEL_13:
  uint64_t v12 = v10;
  uint64_t v13 = v10 + 1;
  uint64_t v190 = v10;
  if (v10 + 1 >= v4) {
    goto LABEL_113;
  }
  uint64_t v14 = v2;
  uint64_t v15 = (uint64_t *)(v11 + 56 * v13);
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  unint64_t v18 = v15[2];
  uint64_t v19 = v15[3];
  unint64_t v20 = v15[4];
  uint64_t v21 = v15[5];
  unint64_t v22 = v15[6];
  unint64_t v23 = (uint64_t *)(v11 + 56 * v10);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  unint64_t v26 = v23[2];
  unint64_t v214 = v23[4];
  uint64_t v217 = v23[3];
  uint64_t v223 = v23[5];
  unint64_t v226 = v20;
  unint64_t v220 = v23[6];
  uint64_t v27 = 0;
  switch(v17 >> 62)
  {
    case 1uLL:
      LODWORD(v27) = HIDWORD(v16) - v16;
      if (__OFSUB__(HIDWORD(v16), v16)) {
        goto LABEL_281;
      }
      uint64_t v27 = (int)v27;
      break;
    case 2uLL:
      uint64_t v29 = *(void *)(v16 + 16);
      uint64_t v28 = *(void *)(v16 + 24);
      BOOL v123 = __OFSUB__(v28, v29);
      uint64_t v27 = v28 - v29;
      if (!v123) {
        break;
      }
      goto LABEL_282;
    case 3uLL:
      break;
    default:
      uint64_t v27 = BYTE6(v17);
      break;
  }
  switch(v25 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v24), v24)) {
        goto LABEL_284;
      }
      if (v27 == HIDWORD(v24) - v24) {
        goto LABEL_29;
      }
      goto LABEL_34;
    case 2uLL:
      uint64_t v31 = *(void *)(v24 + 16);
      uint64_t v30 = *(void *)(v24 + 24);
      BOOL v123 = __OFSUB__(v30, v31);
      uint64_t v32 = v30 - v31;
      if (v123) {
        goto LABEL_283;
      }
      if (v27 == v32)
      {
LABEL_29:
        if (v27 >= 1)
        {
          unint64_t v209 = v18;
          unint64_t v212 = v22;
          uint64_t v206 = v23[2];
          switch(v17 >> 62)
          {
            case 1uLL:
              uint64_t v202 = v21;
              v175 = v9;
              if (v16 >> 32 < (int)v16) {
                goto LABEL_286;
              }
              sub_1CA5B6FE8(v16, v17);
              sub_1CA5B6FE8(v19, v226);
              sub_1CA5B6FE8(v21, v22);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5B6FE8(v217, v214);
              sub_1CA5B6FE8(v223, v220);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5B6FE8(v16, v17);
              uint64_t v36 = sub_1CA5FD408();
              if (!v36) {
                goto LABEL_47;
              }
              uint64_t v37 = sub_1CA5FD428();
              if (__OFSUB__((int)v16, v37)) {
                goto LABEL_289;
              }
              v36 += (int)v16 - v37;
LABEL_47:
              uint64_t v21 = (v16 >> 32) - (int)v16;
              sub_1CA5FD418();
              sub_1CA5DC100(v36, v24, v25, (char *)__s1);
              if (v14)
              {
                sub_1CA5B6EF4(v24, v25);
                sub_1CA5B6EF4(v16, v17);
                __break(1u);
LABEL_303:
                uint64_t v171 = v24;
LABEL_306:
                sub_1CA5B6EF4(v171, v25);
                swift_release();
                swift_release();
                __break(1u);
LABEL_307:
                uint64_t v170 = v212;
                goto LABEL_299;
              }
              uint64_t v14 = 0;
              sub_1CA5B6EF4(v24, v25);
              sub_1CA5B6EF4(v16, v17);
LABEL_53:
              uint64_t v9 = v175;
              uint64_t v21 = v202;
              if ((__s1[0] & 1) == 0) {
                goto LABEL_35;
              }
LABEL_54:
              sub_1CA5B6EF4(v24, v25);
              sub_1CA5B6EF4(v217, v214);
              sub_1CA5B6EF4(v223, v220);
              sub_1CA5B6EF4(v16, v17);
              sub_1CA5B6EF4(v19, v226);
              sub_1CA5B6EF4(v21, v22);
              uint64_t v11 = v201;
              unint64_t v18 = v209;
              unint64_t v26 = v206;
              break;
            case 2uLL:
              v175 = v9;
              uint64_t v196 = *(void *)(v16 + 24);
              uint64_t v198 = *(void *)(v16 + 16);
              sub_1CA5B6FE8(v16, v17);
              sub_1CA5B6FE8(v19, v226);
              sub_1CA5B6FE8(v21, v22);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5B6FE8(v217, v214);
              sub_1CA5B6FE8(v223, v220);
              sub_1CA5B6FE8(v24, v25);
              swift_retain();
              swift_retain();
              uint64_t v33 = sub_1CA5FD408();
              uint64_t v202 = v21;
              if (v33)
              {
                uint64_t v34 = sub_1CA5FD428();
                uint64_t v35 = v198;
                if (__OFSUB__(v198, v34)) {
                  goto LABEL_288;
                }
                v33 += v198 - v34;
              }
              else
              {
                uint64_t v35 = v198;
              }
              uint64_t v21 = v196 - v35;
              if (__OFSUB__(v196, v35)) {
                goto LABEL_287;
              }
              sub_1CA5FD418();
              sub_1CA5DC100(v33, v24, v25, (char *)__s1);
              if (v14) {
                goto LABEL_303;
              }
              uint64_t v14 = 0;
              sub_1CA5B6EF4(v24, v25);
              swift_release();
              swift_release();
              goto LABEL_53;
            case 3uLL:
              memset(__s1, 0, 14);
              sub_1CA5B6FE8(v16, v17);
              sub_1CA5B6FE8(v19, v226);
              sub_1CA5B6FE8(v21, v22);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5B6FE8(v217, v214);
              sub_1CA5B6FE8(v223, v220);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5DC100((uint64_t)__s1, v24, v25, &v229);
              if (v14) {
                goto LABEL_295;
              }
              uint64_t v14 = 0;
              sub_1CA5B6EF4(v24, v25);
              if (v229 == 1) {
                goto LABEL_54;
              }
              goto LABEL_35;
            default:
              __s1[0] = v16;
              LOWORD(__s1[1]) = v17;
              BYTE2(__s1[1]) = BYTE2(v17);
              BYTE3(__s1[1]) = BYTE3(v17);
              BYTE4(__s1[1]) = BYTE4(v17);
              BYTE5(__s1[1]) = BYTE5(v17);
              sub_1CA5B6FE8(v16, v17);
              sub_1CA5B6FE8(v19, v226);
              sub_1CA5B6FE8(v21, v22);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5B6FE8(v217, v214);
              sub_1CA5B6FE8(v223, v220);
              sub_1CA5B6FE8(v24, v25);
              sub_1CA5DC100((uint64_t)__s1, v24, v25, &v229);
              if (v14) {
                goto LABEL_295;
              }
              uint64_t v14 = 0;
              sub_1CA5B6EF4(v24, v25);
              if (v229) {
                goto LABEL_54;
              }
              goto LABEL_35;
          }
        }
LABEL_55:
        BOOL v195 = v18 < v26;
        uint64_t v2 = v14;
        uint64_t v4 = v181;
      }
      else
      {
LABEL_34:
        sub_1CA5B6FE8(v16, v17);
        sub_1CA5B6FE8(v19, v226);
        unint64_t v212 = v22;
        sub_1CA5B6FE8(v21, v22);
        sub_1CA5B6FE8(v24, v25);
        sub_1CA5B6FE8(v217, v214);
        sub_1CA5B6FE8(v223, v220);
LABEL_35:
        BOOL v195 = sub_1CA5B919C(v16, v17, v24, v25);
        if (v14)
        {
          uint64_t i = v14;
          goto LABEL_294;
        }
        sub_1CA5B6EF4(v24, v25);
        sub_1CA5B6EF4(v217, v214);
        sub_1CA5B6EF4(v223, v220);
        sub_1CA5B6EF4(v16, v17);
        sub_1CA5B6EF4(v19, v226);
        sub_1CA5B6EF4(v21, v212);
        uint64_t v2 = 0;
        uint64_t v4 = v181;
        uint64_t v11 = v201;
      }
      uint64_t v12 = v190;
      uint64_t v13 = v190 + 2;
      if (v190 + 2 >= v4) {
        goto LABEL_103;
      }
      v176 = v9;
      uint64_t v38 = (uint64_t *)(v173 + 56 * v190);
      break;
    case 3uLL:
      if (!v27) {
        goto LABEL_55;
      }
      goto LABEL_34;
    default:
      if (v27 != BYTE6(v25)) {
        goto LABEL_34;
      }
      goto LABEL_29;
  }
  while (2)
  {
    uint64_t v199 = (uint64_t)v2;
    uint64_t v39 = v38[4];
    unint64_t v40 = v38[5];
    unint64_t v41 = v38[6];
    uint64_t v24 = v38[9];
    uint64_t v21 = v38[10];
    unint64_t v42 = *(v38 - 3);
    uint64_t v16 = *(v38 - 2);
    unint64_t v43 = *(v38 - 1);
    unint64_t v215 = v38[8];
    unint64_t v218 = v38[1];
    uint64_t v227 = v38[2];
    uint64_t v221 = *v38;
    unint64_t v224 = v38[3];
    uint64_t v45 = v38[7];
    v38 += 7;
    uint64_t v44 = v45;
    uint64_t v46 = 0;
    switch(v40 >> 62)
    {
      case 1uLL:
        LODWORD(v46) = HIDWORD(v39) - v39;
        if (__OFSUB__(HIDWORD(v39), v39)) {
          goto LABEL_264;
        }
        uint64_t v46 = (int)v46;
        break;
      case 2uLL:
        uint64_t v48 = *(void *)(v39 + 16);
        uint64_t v47 = *(void *)(v39 + 24);
        BOOL v123 = __OFSUB__(v47, v48);
        uint64_t v46 = v47 - v48;
        if (!v123) {
          break;
        }
        goto LABEL_265;
      case 3uLL:
        break;
      default:
        uint64_t v46 = BYTE6(v40);
        break;
    }
    switch((unint64_t)v16 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v42), v42)) {
          goto LABEL_266;
        }
        if (v46 == HIDWORD(v42) - v42) {
          goto LABEL_73;
        }
        goto LABEL_78;
      case 2uLL:
        uint64_t v50 = *(void *)(v42 + 16);
        uint64_t v49 = *(void *)(v42 + 24);
        BOOL v123 = __OFSUB__(v49, v50);
        uint64_t v51 = v49 - v50;
        if (v123) {
          goto LABEL_267;
        }
        if (v46 != v51)
        {
LABEL_78:
          uint64_t v203 = v13;
          uint64_t v54 = v42;
          uint64_t v53 = v39;
          unint64_t v210 = v40;
          sub_1CA5B6FE8(v39, v40);
          sub_1CA5B6FE8(v44, v215);
          sub_1CA5B6FE8(v24, v21);
          unint64_t v212 = v54;
          sub_1CA5B6FE8(v54, v16);
          sub_1CA5B6FE8(v221, v218);
          sub_1CA5B6FE8(v227, v224);
          unint64_t v25 = v16;
          goto LABEL_79;
        }
LABEL_73:
        if (v46 < 1) {
          goto LABEL_98;
        }
        break;
      case 3uLL:
        if (!v46) {
          goto LABEL_98;
        }
        goto LABEL_78;
      default:
        if (v46 != BYTE6(v16)) {
          goto LABEL_78;
        }
        goto LABEL_73;
    }
    uint64_t v203 = v13;
    unint64_t v212 = v42;
    unint64_t v207 = v41;
    unint64_t v193 = v43;
    unint64_t v210 = v40;
    switch(v40 >> 62)
    {
      case 1uLL:
        if (v39 >> 32 < (int)v39) {
          goto LABEL_277;
        }
        v182 = (void *)(int)v39;
        uint64_t v53 = v39;
        uint64_t v64 = v42;
        unint64_t v65 = v40;
        sub_1CA5B6FE8(v39, v40);
        sub_1CA5B6FE8(v44, v215);
        sub_1CA5B6FE8(v24, v21);
        sub_1CA5B6FE8(v64, v16);
        sub_1CA5B6FE8(v221, v218);
        sub_1CA5B6FE8(v227, v224);
        sub_1CA5B6FE8(v64, v16);
        sub_1CA5B6FE8(v53, v65);
        uint64_t v66 = sub_1CA5FD408();
        if (!v66) {
          goto LABEL_95;
        }
        uint64_t v67 = sub_1CA5FD428();
        if (__OFSUB__(v182, v67)) {
          goto LABEL_280;
        }
        v66 += (uint64_t)v182 - v67;
LABEL_95:
        sub_1CA5FD418();
        unint64_t v25 = v16;
        sub_1CA5DC100(v66, v212, v16, (char *)__s1);
        if (v199)
        {
          sub_1CA5B6EF4(v212, v16);
          sub_1CA5B6EF4(v53, v210);
          __break(1u);
          goto LABEL_309;
        }
        sub_1CA5B6EF4(v212, v16);
        sub_1CA5B6EF4(v53, v210);
        uint64_t v4 = v181;
        if (__s1[0])
        {
LABEL_97:
          sub_1CA5B6EF4(v212, v25);
          sub_1CA5B6EF4(v221, v218);
          sub_1CA5B6EF4(v227, v224);
          sub_1CA5B6EF4(v53, v210);
          sub_1CA5B6EF4(v44, v215);
          sub_1CA5B6EF4(v24, v21);
          uint64_t v11 = v201;
          unint64_t v41 = v207;
          unint64_t v43 = v193;
LABEL_98:
          BOOL v58 = v41 < v43;
          uint64_t v2 = (void *)v199;
          goto LABEL_99;
        }
LABEL_79:
        uint64_t v16 = v215;
        unint64_t v55 = v21;
        uint64_t v21 = v24;
        unint64_t v56 = v25;
        BOOL v57 = sub_1CA5B919C(v53, v210, v212, v25);
        uint64_t v24 = v199;
        if (v199) {
          goto LABEL_300;
        }
        BOOL v58 = v57;
        sub_1CA5B6EF4(v212, v56);
        sub_1CA5B6EF4(v221, v218);
        sub_1CA5B6EF4(v227, v224);
        sub_1CA5B6EF4(v53, v210);
        sub_1CA5B6EF4(v44, v215);
        sub_1CA5B6EF4(v21, v55);
        uint64_t v2 = 0;
        uint64_t v11 = v201;
        uint64_t v13 = v203;
        uint64_t v4 = v181;
LABEL_99:
        if ((v195 ^ v58)) {
          goto LABEL_102;
        }
        if (v4 != ++v13) {
          continue;
        }
        uint64_t v13 = v4;
LABEL_102:
        uint64_t v9 = v176;
        uint64_t v12 = v190;
LABEL_103:
        if (v195)
        {
          if (v13 >= v12)
          {
            if (v12 < v13)
            {
              uint64_t v68 = 56 * v13;
              uint64_t v69 = v13;
              uint64_t v70 = v12;
              uint64_t v71 = 56 * v12;
              do
              {
                if (v70 != --v69)
                {
                  if (!v11) {
                    goto LABEL_291;
                  }
                  uint64_t v72 = v11 + v71;
                  uint64_t v73 = *(void *)(v11 + v71 + 48);
                  uint64_t v74 = v11 + v68;
                  long long v75 = *(_OWORD *)(v11 + v71);
                  long long v76 = *(_OWORD *)(v11 + v71 + 16);
                  long long v77 = *(_OWORD *)(v11 + v71 + 32);
                  long long v78 = *(_OWORD *)(v11 + v68 - 40);
                  long long v79 = *(_OWORD *)(v11 + v68 - 24);
                  long long v80 = *(_OWORD *)(v11 + v68 - 56);
                  *(void *)(v72 + 48) = *(void *)(v11 + v68 - 8);
                  *(_OWORD *)(v72 + 16) = v78;
                  *(_OWORD *)(v72 + 32) = v79;
                  *(_OWORD *)uint64_t v72 = v80;
                  *(_OWORD *)(v74 - 56) = v75;
                  *(_OWORD *)(v74 - 40) = v76;
                  *(_OWORD *)(v74 - 24) = v77;
                  *(void *)(v74 - 8) = v73;
                }
                ++v70;
                v68 -= 56;
                v71 += 56;
              }
              while (v70 < v69);
              uint64_t v12 = v190;
            }
            goto LABEL_113;
          }
LABEL_276:
          __break(1u);
LABEL_277:
          __break(1u);
LABEL_278:
          __break(1u);
LABEL_279:
          __break(1u);
LABEL_280:
          __break(1u);
LABEL_281:
          __break(1u);
LABEL_282:
          __break(1u);
LABEL_283:
          __break(1u);
LABEL_284:
          __break(1u);
LABEL_285:
          __break(1u);
LABEL_286:
          __break(1u);
LABEL_287:
          __break(1u);
LABEL_288:
          __break(1u);
LABEL_289:
          __break(1u);
LABEL_290:
          __break(1u);
LABEL_291:
          __break(1u);
LABEL_292:
          __break(1u);
        }
LABEL_113:
        if (v13 >= v4) {
          goto LABEL_174;
        }
        if (__OFSUB__(v13, v12)) {
          goto LABEL_272;
        }
        if (v13 - v12 >= v178) {
          goto LABEL_173;
        }
        uint64_t v12 = v190;
        if (__OFADD__(v190, v178)) {
          goto LABEL_274;
        }
        if (v190 + v178 >= v4) {
          uint64_t v81 = v4;
        }
        else {
          uint64_t v81 = v190 + v178;
        }
        if (v81 < v190) {
          goto LABEL_275;
        }
        if (v13 == v81) {
          goto LABEL_174;
        }
        v177 = v9;
        unint64_t v82 = (uint64_t *)(v11 + 56 * v13);
        uint64_t v179 = v81;
LABEL_124:
        unint64_t v83 = (uint64_t *)(v11 + 56 * v13);
        uint64_t v21 = *v83;
        uint64_t v16 = v83[1];
        unint64_t v84 = v83[2];
        uint64_t v85 = v83[5];
        unint64_t v222 = v83[4];
        uint64_t v225 = v83[3];
        unint64_t v228 = v83[6];
        v189 = v82;
        uint64_t v86 = v190;
        uint64_t v204 = v13;
        while (2)
        {
          uint64_t v24 = *(v82 - 7);
          unint64_t v25 = *(v82 - 6);
          unint64_t v87 = *(v82 - 5);
          unint64_t v211 = *(v82 - 3);
          uint64_t v213 = *(v82 - 4);
          uint64_t v216 = *(v82 - 2);
          unint64_t v219 = *(v82 - 1);
          uint64_t v88 = 0;
          switch((unint64_t)v16 >> 62)
          {
            case 1uLL:
              LODWORD(v88) = HIDWORD(v21) - v21;
              if (__OFSUB__(HIDWORD(v21), v21))
              {
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
LABEL_256:
                __break(1u);
LABEL_257:
                __break(1u);
LABEL_258:
                __break(1u);
LABEL_259:
                __break(1u);
LABEL_260:
                __break(1u);
LABEL_261:
                __break(1u);
LABEL_262:
                __break(1u);
LABEL_263:
                __break(1u);
LABEL_264:
                __break(1u);
LABEL_265:
                __break(1u);
LABEL_266:
                __break(1u);
LABEL_267:
                __break(1u);
LABEL_268:
                __break(1u);
LABEL_269:
                __break(1u);
LABEL_270:
                __break(1u);
LABEL_271:
                __break(1u);
LABEL_272:
                __break(1u);
LABEL_273:
                __break(1u);
LABEL_274:
                __break(1u);
LABEL_275:
                __break(1u);
                goto LABEL_276;
              }
              uint64_t v88 = (int)v88;
LABEL_130:
              switch(v25 >> 62)
              {
                case 1uLL:
                  if (__OFSUB__(HIDWORD(v24), v24)) {
                    goto LABEL_242;
                  }
                  if (v88 == HIDWORD(v24) - v24) {
                    goto LABEL_140;
                  }
                  goto LABEL_145;
                case 2uLL:
                  uint64_t v92 = *(void *)(v24 + 16);
                  uint64_t v91 = *(void *)(v24 + 24);
                  BOOL v123 = __OFSUB__(v91, v92);
                  uint64_t v93 = v91 - v92;
                  if (v123) {
                    goto LABEL_243;
                  }
                  if (v88 == v93)
                  {
LABEL_140:
                    if (v88 >= 1)
                    {
                      uint64_t v208 = v85;
                      unint64_t v194 = *(v82 - 5);
                      unint64_t v197 = v84;
                      switch((unint64_t)v16 >> 62)
                      {
                        case 1uLL:
                          if (v21 >> 32 < (int)v21) {
                            goto LABEL_258;
                          }
                          v200 = v2;
                          sub_1CA5B6FE8(v21, v16);
                          sub_1CA5B6FE8(v225, v222);
                          sub_1CA5B6FE8(v85, v228);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5B6FE8(v213, v211);
                          sub_1CA5B6FE8(v216, v219);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5B6FE8(v21, v16);
                          uint64_t v100 = sub_1CA5FD408();
                          if (v100)
                          {
                            uint64_t v101 = v100;
                            uint64_t v102 = sub_1CA5FD428();
                            if (__OFSUB__((int)v21, v102)) {
                              goto LABEL_262;
                            }
                            v184 = (void *)(v101 + (int)v21 - v102);
                          }
                          else
                          {
                            v184 = 0;
                          }
                          sub_1CA5FD418();
                          sub_1CA5DC100((uint64_t)v184, v24, v25, (char *)__s1);
                          if (v200) {
                            goto LABEL_298;
                          }
                          uint64_t v2 = 0;
                          sub_1CA5B6EF4(v24, v25);
                          sub_1CA5B6EF4(v21, v16);
LABEL_166:
                          if ((__s1[0] & 1) == 0) {
                            goto LABEL_146;
                          }
LABEL_167:
                          sub_1CA5B6EF4(v24, v25);
                          sub_1CA5B6EF4(v213, v211);
                          sub_1CA5B6EF4(v216, v219);
                          sub_1CA5B6EF4(v21, v16);
                          sub_1CA5B6EF4(v225, v222);
                          sub_1CA5B6EF4(v85, v228);
                          uint64_t v11 = v201;
                          uint64_t v13 = v204;
                          unint64_t v87 = v194;
                          unint64_t v84 = v197;
                          break;
                        case 2uLL:
                          v183 = *(void **)(v21 + 24);
                          v186 = *(char **)(v21 + 16);
                          sub_1CA5B6FE8(v21, v16);
                          sub_1CA5B6FE8(v225, v222);
                          sub_1CA5B6FE8(v85, v228);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5B6FE8(v213, v211);
                          sub_1CA5B6FE8(v216, v219);
                          sub_1CA5B6FE8(v24, v25);
                          swift_retain();
                          swift_retain();
                          uint64_t v96 = sub_1CA5FD408();
                          if (v96)
                          {
                            uint64_t v180 = v96;
                            uint64_t v97 = sub_1CA5FD428();
                            uint64_t v98 = v186;
                            if (__OFSUB__(v186, v97)) {
                              goto LABEL_261;
                            }
                            int v99 = &v186[v180 - v97];
                          }
                          else
                          {
                            int v99 = 0;
                            uint64_t v98 = v186;
                          }
                          if (__OFSUB__(v183, v98)) {
                            goto LABEL_259;
                          }
                          v187 = v99;
                          sub_1CA5FD418();
                          sub_1CA5DC100((uint64_t)v187, v24, v25, (char *)__s1);
                          if (v2) {
                            goto LABEL_297;
                          }
                          uint64_t v2 = 0;
                          sub_1CA5B6EF4(v24, v25);
                          swift_release();
                          swift_release();
                          goto LABEL_166;
                        case 3uLL:
                          memset(__s1, 0, 14);
                          sub_1CA5B6FE8(v21, v16);
                          sub_1CA5B6FE8(v225, v222);
                          sub_1CA5B6FE8(v85, v228);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5B6FE8(v213, v211);
                          sub_1CA5B6FE8(v216, v219);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5DC100((uint64_t)__s1, v24, v25, &v229);
                          if (v2) {
                            goto LABEL_295;
                          }
                          uint64_t v2 = 0;
                          sub_1CA5B6EF4(v24, v25);
                          if (v229 == 1) {
                            goto LABEL_167;
                          }
                          goto LABEL_146;
                        default:
                          __s1[0] = v21;
                          LOWORD(__s1[1]) = v16;
                          BYTE2(__s1[1]) = BYTE2(v16);
                          BYTE3(__s1[1]) = BYTE3(v16);
                          BYTE4(__s1[1]) = BYTE4(v16);
                          BYTE5(__s1[1]) = BYTE5(v16);
                          sub_1CA5B6FE8(v21, v16);
                          sub_1CA5B6FE8(v225, v222);
                          sub_1CA5B6FE8(v85, v228);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5B6FE8(v213, v211);
                          sub_1CA5B6FE8(v216, v219);
                          sub_1CA5B6FE8(v24, v25);
                          sub_1CA5DC100((uint64_t)__s1, v24, v25, &v229);
                          if (v2) {
                            goto LABEL_295;
                          }
                          uint64_t v2 = 0;
                          sub_1CA5B6EF4(v24, v25);
                          if (v229) {
                            goto LABEL_167;
                          }
                          goto LABEL_146;
                      }
                    }
LABEL_168:
                    if (v84 >= v87) {
                      goto LABEL_123;
                    }
                  }
                  else
                  {
LABEL_145:
                    sub_1CA5B6FE8(v21, v16);
                    sub_1CA5B6FE8(v225, v222);
                    uint64_t v208 = v85;
                    sub_1CA5B6FE8(v85, v228);
                    sub_1CA5B6FE8(v24, v25);
                    sub_1CA5B6FE8(v213, v211);
                    sub_1CA5B6FE8(v216, v219);
LABEL_146:
                    BOOL v94 = sub_1CA5B919C(v21, v16, v24, v25);
                    if (v2)
                    {
                      for (uint64_t i = v2; ; uint64_t i = (void *)v24)
                      {
LABEL_294:

                        sub_1CA5FDC18();
                        __break(1u);
LABEL_295:
                        uint64_t v169 = v24;
LABEL_296:
                        sub_1CA5B6EF4(v169, v25);
                        __break(1u);
LABEL_297:
                        sub_1CA5B6EF4(v24, v25);
                        swift_release();
                        swift_release();
                        __break(1u);
LABEL_298:
                        sub_1CA5B6EF4(v24, v25);
                        uint64_t v170 = v21;
LABEL_299:
                        sub_1CA5B6EF4(v170, v16);
                        __break(1u);
LABEL_300:
                        ;
                      }
                    }
                    BOOL v95 = v94;
                    sub_1CA5B6EF4(v24, v25);
                    sub_1CA5B6EF4(v213, v211);
                    sub_1CA5B6EF4(v216, v219);
                    sub_1CA5B6EF4(v21, v16);
                    sub_1CA5B6EF4(v225, v222);
                    sub_1CA5B6EF4(v208, v228);
                    uint64_t v11 = v201;
                    uint64_t v13 = v204;
                    if (!v95) {
                      goto LABEL_123;
                    }
                  }
                  if (!v11) {
                    goto LABEL_285;
                  }
                  uint64_t v21 = *v82;
                  uint64_t v16 = v82[1];
                  unint64_t v84 = v82[2];
                  uint64_t v103 = v82[3];
                  unint64_t v104 = v82[4];
                  uint64_t v85 = v82[5];
                  unint64_t v105 = v82[6];
                  long long v106 = *(_OWORD *)(v82 - 5);
                  *(_OWORD *)unint64_t v82 = *(_OWORD *)(v82 - 7);
                  *((_OWORD *)v82 + 1) = v106;
                  *((_OWORD *)v82 + 2) = *(_OWORD *)(v82 - 3);
                  v82[6] = *(v82 - 1);
                  *(v82 - 6) = v16;
                  *(v82 - 5) = v84;
                  unint64_t v222 = v104;
                  uint64_t v225 = v103;
                  *(v82 - 4) = v103;
                  *(v82 - 3) = v104;
                  *(v82 - 2) = v85;
                  *(v82 - 1) = v105;
                  unint64_t v228 = v105;
                  ++v86;
                  *(v82 - 7) = v21;
                  v82 -= 7;
                  if (v13 != v86) {
                    continue;
                  }
LABEL_123:
                  ++v13;
                  unint64_t v82 = v189 + 7;
                  if (v13 != v179) {
                    goto LABEL_124;
                  }
                  uint64_t v13 = v179;
                  uint64_t v9 = v177;
                  break;
                case 3uLL:
                  if (!v88) {
                    goto LABEL_168;
                  }
                  goto LABEL_145;
                default:
                  if (v88 != BYTE6(v25)) {
                    goto LABEL_145;
                  }
                  goto LABEL_140;
              }
LABEL_173:
              uint64_t v12 = v190;
LABEL_174:
              if (v13 < v12) {
                goto LABEL_271;
              }
              uint64_t v205 = v13;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v9 = sub_1CA5E19F0(0, *((void *)v9 + 2) + 1, 1, v9);
              }
              unint64_t v108 = *((void *)v9 + 2);
              unint64_t v107 = *((void *)v9 + 3);
              unint64_t v109 = v108 + 1;
              uint64_t v11 = v201;
              uint64_t v10 = v13;
              if (v108 >= v107 >> 1)
              {
                v159 = sub_1CA5E19F0((char *)(v107 > 1), v108 + 1, 1, v9);
                uint64_t v11 = v201;
                uint64_t v10 = v13;
                uint64_t v9 = v159;
              }
              *((void *)v9 + 2) = v109;
              int v110 = v9 + 32;
              unint64_t v111 = &v9[16 * v108 + 32];
              *(void *)unint64_t v111 = v190;
              *((void *)v111 + 1) = v10;
              if (v108)
              {
                while (1)
                {
                  unint64_t v112 = v109 - 1;
                  if (v109 >= 4)
                  {
                    long long v117 = &v110[16 * v109];
                    uint64_t v118 = *((void *)v117 - 8);
                    uint64_t v119 = *((void *)v117 - 7);
                    BOOL v123 = __OFSUB__(v119, v118);
                    uint64_t v120 = v119 - v118;
                    if (v123) {
                      goto LABEL_248;
                    }
                    uint64_t v122 = *((void *)v117 - 6);
                    uint64_t v121 = *((void *)v117 - 5);
                    BOOL v123 = __OFSUB__(v121, v122);
                    uint64_t v115 = v121 - v122;
                    char v116 = v123;
                    if (v123) {
                      goto LABEL_249;
                    }
                    unint64_t v124 = v109 - 2;
                    __int16 v125 = &v110[16 * v109 - 32];
                    uint64_t v127 = *(void *)v125;
                    uint64_t v126 = *((void *)v125 + 1);
                    BOOL v123 = __OFSUB__(v126, v127);
                    uint64_t v128 = v126 - v127;
                    if (v123) {
                      goto LABEL_251;
                    }
                    BOOL v123 = __OFADD__(v115, v128);
                    uint64_t v129 = v115 + v128;
                    if (v123) {
                      goto LABEL_254;
                    }
                    if (v129 >= v120)
                    {
                      v147 = &v110[16 * v112];
                      uint64_t v149 = *(void *)v147;
                      uint64_t v148 = *((void *)v147 + 1);
                      BOOL v123 = __OFSUB__(v148, v149);
                      uint64_t v150 = v148 - v149;
                      if (v123) {
                        goto LABEL_260;
                      }
                      BOOL v140 = v115 < v150;
                      goto LABEL_211;
                    }
                  }
                  else
                  {
                    if (v109 != 3)
                    {
                      uint64_t v141 = *((void *)v9 + 4);
                      uint64_t v142 = *((void *)v9 + 5);
                      BOOL v123 = __OFSUB__(v142, v141);
                      uint64_t v134 = v142 - v141;
                      char v135 = v123;
                      goto LABEL_205;
                    }
                    uint64_t v114 = *((void *)v9 + 4);
                    uint64_t v113 = *((void *)v9 + 5);
                    BOOL v123 = __OFSUB__(v113, v114);
                    uint64_t v115 = v113 - v114;
                    char v116 = v123;
                  }
                  if (v116) {
                    goto LABEL_250;
                  }
                  unint64_t v124 = v109 - 2;
                  v130 = &v110[16 * v109 - 32];
                  uint64_t v132 = *(void *)v130;
                  uint64_t v131 = *((void *)v130 + 1);
                  BOOL v133 = __OFSUB__(v131, v132);
                  uint64_t v134 = v131 - v132;
                  char v135 = v133;
                  if (v133) {
                    goto LABEL_253;
                  }
                  v136 = &v110[16 * v112];
                  uint64_t v138 = *(void *)v136;
                  uint64_t v137 = *((void *)v136 + 1);
                  BOOL v123 = __OFSUB__(v137, v138);
                  uint64_t v139 = v137 - v138;
                  if (v123) {
                    goto LABEL_256;
                  }
                  if (__OFADD__(v134, v139)) {
                    goto LABEL_257;
                  }
                  if (v134 + v139 >= v115)
                  {
                    BOOL v140 = v115 < v139;
LABEL_211:
                    if (v140) {
                      unint64_t v112 = v124;
                    }
                    goto LABEL_213;
                  }
LABEL_205:
                  if (v135) {
                    goto LABEL_252;
                  }
                  v143 = &v110[16 * v112];
                  uint64_t v145 = *(void *)v143;
                  uint64_t v144 = *((void *)v143 + 1);
                  BOOL v123 = __OFSUB__(v144, v145);
                  uint64_t v146 = v144 - v145;
                  if (v123) {
                    goto LABEL_255;
                  }
                  if (v146 < v134) {
                    goto LABEL_222;
                  }
LABEL_213:
                  unint64_t v151 = v112 - 1;
                  if (v112 - 1 >= v109) {
                    goto LABEL_244;
                  }
                  if (!v11) {
                    goto LABEL_290;
                  }
                  v152 = v9;
                  v153 = v2;
                  v154 = &v110[16 * v151];
                  uint64_t v155 = *(void *)v154;
                  v156 = &v110[16 * v112];
                  uint64_t v157 = *((void *)v156 + 1);
                  sub_1CA5B5304((uint64_t *)(v11 + 56 * *(void *)v154), (uint64_t *)(v11 + 56 * *(void *)v156), (uint64_t *)(v11 + 56 * v157), __dst);
                  if (v153)
                  {
LABEL_237:
                    swift_bridgeObjectRelease();
                    *(void *)(v174 + 16) = 0;
                    return swift_bridgeObjectRelease();
                  }
                  if (v157 < v155) {
                    goto LABEL_245;
                  }
                  if (v112 > *((void *)v152 + 2)) {
                    goto LABEL_246;
                  }
                  *(void *)v154 = v155;
                  *(void *)&v110[16 * v151 + 8] = v157;
                  unint64_t v158 = *((void *)v152 + 2);
                  if (v112 >= v158) {
                    goto LABEL_247;
                  }
                  uint64_t v9 = v152;
                  unint64_t v109 = v158 - 1;
                  memmove(&v110[16 * v112], v156 + 16, 16 * (v158 - 1 - v112));
                  *((void *)v152 + 2) = v158 - 1;
                  uint64_t v2 = 0;
                  uint64_t v11 = v201;
                  uint64_t v10 = v205;
                  if (v158 <= 2) {
                    goto LABEL_222;
                  }
                }
              }
              unint64_t v109 = 1;
LABEL_222:
              uint64_t v4 = v181;
              if (v10 < v181) {
                goto LABEL_13;
              }
LABEL_225:
              v160 = v9;
              if (v109 >= 2)
              {
                uint64_t v161 = *v172;
                do
                {
                  unint64_t v162 = v109 - 2;
                  if (v109 < 2) {
                    goto LABEL_263;
                  }
                  if (!v161) {
                    goto LABEL_292;
                  }
                  v163 = v2;
                  uint64_t v164 = *(void *)&v160[16 * v162 + 32];
                  uint64_t v165 = *(void *)&v160[16 * v109 + 24];
                  sub_1CA5B5304((uint64_t *)(v161 + 56 * v164), (uint64_t *)(v161 + 56 * *(void *)&v160[16 * v109 + 16]), (uint64_t *)(v161 + 56 * v165), __dst);
                  if (v163) {
                    goto LABEL_237;
                  }
                  if (v165 < v164) {
                    goto LABEL_268;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    v160 = sub_1CA5E1D3C((uint64_t)v160);
                  }
                  if (v162 >= *((void *)v160 + 2)) {
                    goto LABEL_269;
                  }
                  v166 = &v160[16 * v162 + 32];
                  *(void *)v166 = v164;
                  *((void *)v166 + 1) = v165;
                  unint64_t v167 = *((void *)v160 + 2);
                  if (v109 > v167) {
                    goto LABEL_270;
                  }
                  memmove(&v160[16 * v109 + 16], &v160[16 * v109 + 32], 16 * (v167 - v109));
                  *((void *)v160 + 2) = v167 - 1;
                  unint64_t v109 = v167 - 1;
                  uint64_t v2 = 0;
                }
                while (v167 > 2);
              }
              swift_bridgeObjectRelease();
              *(void *)(v174 + 16) = 0;
              return swift_bridgeObjectRelease();
            case 2uLL:
              uint64_t v90 = *(void *)(v21 + 16);
              uint64_t v89 = *(void *)(v21 + 24);
              BOOL v123 = __OFSUB__(v89, v90);
              uint64_t v88 = v89 - v90;
              if (!v123) {
                goto LABEL_130;
              }
              goto LABEL_241;
            case 3uLL:
              goto LABEL_130;
            default:
              uint64_t v88 = BYTE6(v16);
              goto LABEL_130;
          }
        }
      case 2uLL:
        uint64_t v59 = v39;
        uint64_t v60 = *(void *)(v39 + 16);
        uint64_t v188 = *(void *)(v39 + 24);
        uint64_t v61 = v42;
        sub_1CA5B6FE8(v39, v40);
        sub_1CA5B6FE8(v44, v215);
        sub_1CA5B6FE8(v24, v21);
        sub_1CA5B6FE8(v61, v16);
        sub_1CA5B6FE8(v221, v218);
        sub_1CA5B6FE8(v227, v224);
        unint64_t v192 = v16;
        sub_1CA5B6FE8(v61, v16);
        uint64_t v16 = v59;
        swift_retain();
        swift_retain();
        uint64_t v62 = sub_1CA5FD408();
        v185 = (void *)v24;
        if (!v62) {
          goto LABEL_84;
        }
        uint64_t v63 = sub_1CA5FD428();
        if (__OFSUB__(v60, v63)) {
          goto LABEL_279;
        }
        v62 += v60 - v63;
LABEL_84:
        uint64_t v24 = v188 - v60;
        if (__OFSUB__(v188, v60)) {
          goto LABEL_278;
        }
        sub_1CA5FD418();
        unint64_t v25 = v192;
        sub_1CA5DC100(v62, v212, v192, (char *)__s1);
        if (!v199)
        {
          sub_1CA5B6EF4(v212, v192);
          swift_release();
          uint64_t v53 = v16;
          swift_release();
          uint64_t v4 = v181;
          uint64_t v24 = (uint64_t)v185;
          if (__s1[0]) {
            goto LABEL_97;
          }
          goto LABEL_79;
        }
        uint64_t v171 = v212;
        goto LABEL_306;
      case 3uLL:
        memset(__s1, 0, 14);
        unint64_t v25 = v42;
        uint64_t v53 = v39;
        sub_1CA5B6FE8(v39, v40);
        sub_1CA5B6FE8(v44, v215);
        sub_1CA5B6FE8(v24, v21);
        sub_1CA5B6FE8(v25, v16);
        sub_1CA5B6FE8(v221, v218);
        sub_1CA5B6FE8(v227, v224);
        sub_1CA5B6FE8(v25, v16);
        sub_1CA5DC100((uint64_t)__s1, v25, v16, &v229);
        if (v199) {
          goto LABEL_307;
        }
        sub_1CA5B6EF4(v212, v16);
        unint64_t v25 = v16;
        if (v229 == 1) {
          goto LABEL_97;
        }
        goto LABEL_79;
      default:
        __s1[0] = v39;
        LOWORD(__s1[1]) = v40;
        BYTE2(__s1[1]) = BYTE2(v40);
        BYTE3(__s1[1]) = BYTE3(v40);
        BYTE4(__s1[1]) = BYTE4(v40);
        BYTE5(__s1[1]) = BYTE5(v40);
        uint64_t v52 = v42;
        uint64_t v53 = v39;
        sub_1CA5B6FE8(v39, v40);
        unint64_t v25 = v16;
        sub_1CA5B6FE8(v44, v215);
        sub_1CA5B6FE8(v24, v21);
        sub_1CA5B6FE8(v52, v16);
        sub_1CA5B6FE8(v221, v218);
        sub_1CA5B6FE8(v227, v224);
        sub_1CA5B6FE8(v52, v16);
        sub_1CA5DC100((uint64_t)__s1, v52, v16, &v229);
        if (v199)
        {
          uint64_t v169 = v212;
          goto LABEL_296;
        }
        sub_1CA5B6EF4(v212, v16);
        if (v229) {
          goto LABEL_97;
        }
        goto LABEL_79;
    }
  }
}

void sub_1CA5B3EFC(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1CA5FDC98();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if (v3) {
      sub_1CA5B5130(0, v3, 1, v2);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  BOOL v123 = v2;
  uint64_t v124 = v4;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v137 = MEMORY[0x1E4FBC860];
    long long __dst = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v48 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_101;
    }
  }
  else
  {
    uint64_t v6 = v2;
    uint64_t v7 = v5 >> 1;
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6083D8);
    uint64_t v8 = sub_1CA5FD988();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v2 = v6;
    long long __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v137 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *v2;
  uint64_t v121 = *v2 - 8;
  uint64_t v122 = *v2 + 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v128 = v3;
  uint64_t v134 = *v2;
  while (1)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v10 + 1;
    uint64_t v129 = v9;
    uint64_t v127 = v10;
    if (v10 + 1 < v3)
    {
      uint64_t v14 = *(void **)(v11 + 8 * v13);
      uint64_t v15 = *(void **)(v11 + 8 * v10);
      uint64_t v16 = sub_1CA5FD8A8();
      uint64_t v18 = v17;
      id v19 = v14;
      id v20 = v15;
      sub_1CA5C9EE4(v16, v18, &v136);
      if (v1)
      {
        swift_bridgeObjectRelease();

LABEL_115:
        swift_bridgeObjectRelease();
        *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1CA5FD968();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      unint64_t v22 = *((void *)&v136 + 1);
      uint64_t v21 = v136;
      uint64_t v23 = sub_1CA5FD8A8();
      sub_1CA5C9EE4(v23, v24, &v135);
      swift_bridgeObjectRelease();
      unint64_t v26 = *((void *)&v135 + 1);
      uint64_t v25 = v135;
      BOOL v125 = sub_1CA5B919C(v21, v22, v135, *((unint64_t *)&v135 + 1));
      sub_1CA5B6EF4(v21, v22);
      sub_1CA5B6EF4(v25, v26);

      uint64_t v12 = v127;
      uint64_t v3 = v128;
      uint64_t v13 = v127 + 2;
      if (v127 + 2 < v128)
      {
        uint64_t v27 = (void **)(v122 + 8 * v127);
        while (1)
        {
          uint64_t v130 = v13;
          uint64_t v29 = *(v27 - 1);
          uint64_t v28 = *v27;
          uint64_t v30 = sub_1CA5FD8A8();
          uint64_t v32 = v31;
          id v33 = v28;
          id v34 = v29;
          sub_1CA5C9EE4(v30, v32, &v136);
          swift_bridgeObjectRelease();
          long long v35 = v136;
          uint64_t v36 = sub_1CA5FD8A8();
          sub_1CA5C9EE4(v36, v37, &v135);
          swift_bridgeObjectRelease();
          long long v38 = v135;
          BOOL v39 = sub_1CA5B919C(v35, *((unint64_t *)&v35 + 1), v135, *((unint64_t *)&v135 + 1));
          sub_1CA5B6EF4(v35, *((unint64_t *)&v35 + 1));
          sub_1CA5B6EF4(v38, *((unint64_t *)&v38 + 1));

          if ((v125 ^ v39)) {
            break;
          }
          uint64_t v9 = v129;
          uint64_t v13 = v130 + 1;
          ++v27;
          uint64_t v3 = v128;
          if (v128 == v130 + 1)
          {
            uint64_t v13 = v128;
            goto LABEL_21;
          }
        }
        uint64_t v9 = v129;
        uint64_t v13 = v130;
        uint64_t v3 = v128;
LABEL_21:
        uint64_t v12 = v127;
      }
      uint64_t v11 = v134;
      if (v125)
      {
        if (v13 < v12) {
          goto LABEL_141;
        }
        if (v12 < v13)
        {
          unint64_t v40 = (uint64_t *)(v121 + 8 * v13);
          uint64_t v41 = v13;
          uint64_t v42 = v12;
          unint64_t v43 = (uint64_t *)(v134 + 8 * v12);
          do
          {
            if (v42 != --v41)
            {
              if (!v134) {
                goto LABEL_144;
              }
              uint64_t v44 = *v43;
              uint64_t *v43 = *v40;
              *unint64_t v40 = v44;
            }
            ++v42;
            --v40;
            ++v43;
          }
          while (v42 < v41);
        }
      }
    }
    if (v13 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_138;
    }
    if (v13 - v12 >= v124)
    {
LABEL_39:
      if (v13 < v12) {
        goto LABEL_136;
      }
      goto LABEL_40;
    }
    if (__OFADD__(v12, v124)) {
      goto LABEL_139;
    }
    uint64_t v45 = v12 + v124 >= v3 ? v3 : v12 + v124;
    if (v45 < v12) {
      break;
    }
    if (v13 == v45) {
      goto LABEL_39;
    }
    uint64_t v96 = v121 + 8 * v13;
    uint64_t v120 = v45;
    do
    {
      uint64_t v97 = *(void **)(v11 + 8 * v13);
      uint64_t v98 = v12;
      uint64_t v126 = v96;
      uint64_t v132 = v13;
      while (1)
      {
        int v99 = *(void **)v96;
        uint64_t v100 = sub_1CA5FD8A8();
        uint64_t v102 = v101;
        id v103 = v97;
        id v104 = v99;
        sub_1CA5C9EE4(v100, v102, &v136);
        if (v1)
        {
          swift_bridgeObjectRelease();

          goto LABEL_115;
        }
        swift_bridgeObjectRelease();
        long long v105 = v136;
        uint64_t v106 = sub_1CA5FD8A8();
        sub_1CA5C9EE4(v106, v107, &v135);
        unint64_t v108 = v104;
        swift_bridgeObjectRelease();
        long long v109 = v135;
        BOOL v110 = sub_1CA5B919C(v105, *((unint64_t *)&v105 + 1), v135, *((unint64_t *)&v135 + 1));
        sub_1CA5B6EF4(v105, *((unint64_t *)&v105 + 1));
        sub_1CA5B6EF4(v109, *((unint64_t *)&v109 + 1));

        if (!v110) {
          break;
        }
        uint64_t v11 = v134;
        uint64_t v12 = v127;
        if (!v134) {
          goto LABEL_145;
        }
        unint64_t v111 = *(void **)v96;
        uint64_t v97 = *(void **)(v96 + 8);
        *(void *)uint64_t v96 = v97;
        *(void *)(v96 + 8) = v111;
        v96 -= 8;
        ++v98;
        uint64_t v112 = v132;
        if (v132 == v98) {
          goto LABEL_97;
        }
      }
      uint64_t v11 = v134;
      uint64_t v112 = v132;
      uint64_t v12 = v127;
LABEL_97:
      uint64_t v13 = v112 + 1;
      uint64_t v96 = v126 + 8;
    }
    while (v13 != v120);
    uint64_t v13 = v120;
    uint64_t v9 = v129;
    if (v120 < v12) {
      goto LABEL_136;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1CA5E19F0(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v47 = *((void *)v9 + 2);
    unint64_t v46 = *((void *)v9 + 3);
    unint64_t v48 = v47 + 1;
    uint64_t v11 = v134;
    if (v47 >= v46 >> 1)
    {
      uint64_t v113 = sub_1CA5E19F0((char *)(v46 > 1), v47 + 1, 1, v9);
      uint64_t v11 = v134;
      uint64_t v9 = v113;
    }
    *((void *)v9 + 2) = v48;
    uint64_t v49 = v9 + 32;
    uint64_t v50 = &v9[16 * v47 + 32];
    *(void *)uint64_t v50 = v12;
    *((void *)v50 + 1) = v13;
    uint64_t v131 = v13;
    if (v47)
    {
LABEL_45:
      unint64_t v51 = v48 - 1;
      if (v48 >= 4)
      {
        unint64_t v56 = &v49[16 * v48];
        uint64_t v57 = *((void *)v56 - 8);
        uint64_t v58 = *((void *)v56 - 7);
        BOOL v62 = __OFSUB__(v58, v57);
        uint64_t v59 = v58 - v57;
        if (v62) {
          goto LABEL_121;
        }
        uint64_t v61 = *((void *)v56 - 6);
        uint64_t v60 = *((void *)v56 - 5);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v54 = v60 - v61;
        char v55 = v62;
        if (v62) {
          goto LABEL_122;
        }
        unint64_t v63 = v48 - 2;
        uint64_t v64 = &v49[16 * v48 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v62 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v62) {
          goto LABEL_124;
        }
        BOOL v62 = __OFADD__(v54, v67);
        uint64_t v68 = v54 + v67;
        if (v62) {
          goto LABEL_127;
        }
        if (v68 >= v59)
        {
          uint64_t v86 = &v49[16 * v51];
          uint64_t v88 = *(void *)v86;
          uint64_t v87 = *((void *)v86 + 1);
          BOOL v62 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          if (v62) {
            goto LABEL_135;
          }
          BOOL v79 = v54 < v89;
        }
        else
        {
LABEL_58:
          if (v55) {
            goto LABEL_123;
          }
          unint64_t v63 = v48 - 2;
          uint64_t v69 = &v49[16 * v48 - 32];
          uint64_t v71 = *(void *)v69;
          uint64_t v70 = *((void *)v69 + 1);
          BOOL v72 = __OFSUB__(v70, v71);
          uint64_t v73 = v70 - v71;
          char v74 = v72;
          if (v72) {
            goto LABEL_126;
          }
          long long v75 = &v49[16 * v51];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v62 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v62) {
            goto LABEL_129;
          }
          if (__OFADD__(v73, v78)) {
            goto LABEL_130;
          }
          if (v73 + v78 < v54) {
            goto LABEL_70;
          }
          BOOL v79 = v54 < v78;
        }
        if (v79) {
          unint64_t v51 = v63;
        }
      }
      else
      {
        if (v48 == 3)
        {
          uint64_t v53 = *((void *)v9 + 4);
          uint64_t v52 = *((void *)v9 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
          goto LABEL_58;
        }
        uint64_t v80 = *((void *)v9 + 4);
        uint64_t v81 = *((void *)v9 + 5);
        BOOL v62 = __OFSUB__(v81, v80);
        uint64_t v73 = v81 - v80;
        char v74 = v62;
LABEL_70:
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_128;
        }
        if (v85 < v73) {
          goto LABEL_87;
        }
      }
      unint64_t v90 = v51 - 1;
      if (v51 - 1 >= v48)
      {
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
        break;
      }
      if (!v11) {
        goto LABEL_142;
      }
      uint64_t v91 = &v49[16 * v90];
      uint64_t v92 = *(void *)v91;
      uint64_t v93 = &v49[16 * v51];
      uint64_t v94 = *((void *)v93 + 1);
      sub_1CA5B6390((void **)(v11 + 8 * *(void *)v91), (void **)(v11 + 8 * *(void *)v93), v11 + 8 * v94, __dst);
      if (v1) {
        goto LABEL_115;
      }
      if (v94 < v92) {
        goto LABEL_118;
      }
      if (v51 > *((void *)v9 + 2)) {
        goto LABEL_119;
      }
      *(void *)uint64_t v91 = v92;
      *(void *)&v49[16 * v90 + 8] = v94;
      unint64_t v95 = *((void *)v9 + 2);
      if (v51 >= v95) {
        goto LABEL_120;
      }
      unint64_t v48 = v95 - 1;
      memmove(&v49[16 * v51], v93 + 16, 16 * (v95 - 1 - v51));
      *((void *)v9 + 2) = v95 - 1;
      uint64_t v11 = v134;
      if (v95 <= 2) {
        goto LABEL_87;
      }
      goto LABEL_45;
    }
    unint64_t v48 = 1;
LABEL_87:
    uint64_t v3 = v128;
    uint64_t v10 = v131;
    if (v131 >= v128)
    {
LABEL_101:
      if (v48 >= 2)
      {
        uint64_t v114 = *v123;
        while (1)
        {
          unint64_t v115 = v48 - 2;
          if (v48 < 2) {
            goto LABEL_131;
          }
          if (!v114) {
            goto LABEL_143;
          }
          uint64_t v116 = *(void *)&v9[16 * v115 + 32];
          uint64_t v117 = *(void *)&v9[16 * v48 + 24];
          sub_1CA5B6390((void **)(v114 + 8 * v116), (void **)(v114 + 8 * *(void *)&v9[16 * v48 + 16]), v114 + 8 * v117, __dst);
          if (v1) {
            goto LABEL_115;
          }
          if (v117 < v116) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1CA5E1D3C((uint64_t)v9);
          }
          if (v115 >= *((void *)v9 + 2)) {
            goto LABEL_133;
          }
          uint64_t v118 = &v9[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v9 + 2);
          if (v48 > v119) {
            goto LABEL_134;
          }
          memmove(&v9[16 * v48 + 16], &v9[16 * v48 + 32], 16 * (v119 - v48));
          *((void *)v9 + 2) = v119 - 1;
          unint64_t v48 = v119 - 1;
          if (v119 <= 2) {
            goto LABEL_115;
          }
        }
      }
      goto LABEL_115;
    }
  }
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  sub_1CA5FDC08();
  __break(1u);
}

uint64_t sub_1CA5B494C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = result;
  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a3 != a2)
  {
    uint64_t v47 = *a4;
    uint64_t v6 = (uint64_t *)(*a4 + 56 * a3);
LABEL_5:
    uint64_t v7 = (uint64_t *)(v47 + 56 * a3);
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    unint64_t v10 = v7[2];
    uint64_t v11 = v7[5];
    unint64_t v53 = v7[4];
    uint64_t v54 = v7[3];
    unint64_t v55 = v7[6];
    unint64_t v43 = v6;
    uint64_t v12 = v36;
    uint64_t v46 = a3;
    while (2)
    {
      uint64_t v13 = *(v6 - 7);
      unint64_t v14 = *(v6 - 6);
      unint64_t v15 = *(v6 - 5);
      unint64_t v49 = *(v6 - 3);
      uint64_t v50 = *(v6 - 4);
      uint64_t v51 = *(v6 - 2);
      unint64_t v52 = *(v6 - 1);
      uint64_t v16 = 0;
      switch(v9 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8))
          {
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
          }
          uint64_t v16 = (int)v16;
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v8 + 16);
          uint64_t v17 = *(void *)(v8 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            break;
          }
          goto LABEL_54;
        case 3uLL:
          break;
        default:
          uint64_t v16 = BYTE6(v9);
          break;
      }
      switch(v14 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_55;
          }
          if (v16 == HIDWORD(v13) - v13) {
            goto LABEL_21;
          }
          goto LABEL_26;
        case 2uLL:
          uint64_t v21 = *(void *)(v13 + 16);
          uint64_t v20 = *(void *)(v13 + 24);
          BOOL v19 = __OFSUB__(v20, v21);
          uint64_t v22 = v20 - v21;
          if (v19) {
            goto LABEL_56;
          }
          if (v16 == v22)
          {
LABEL_21:
            if (v16 >= 1)
            {
              uint64_t v48 = v11;
              unint64_t v44 = *(v6 - 5);
              unint64_t v45 = v10;
              switch(v9 >> 62)
              {
                case 1uLL:
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_57;
                  }
                  sub_1CA5B6FE8(v8, v9);
                  sub_1CA5B6FE8(v54, v53);
                  sub_1CA5B6FE8(v11, v55);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5B6FE8(v50, v49);
                  sub_1CA5B6FE8(v51, v52);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5B6FE8(v8, v9);
                  uint64_t v29 = sub_1CA5FD408();
                  if (v29)
                  {
                    uint64_t v38 = v29;
                    uint64_t v30 = sub_1CA5FD428();
                    if (__OFSUB__((int)v8, v30)) {
                      goto LABEL_60;
                    }
                    unint64_t v40 = (void *)(v38 + (int)v8 - v30);
                  }
                  else
                  {
                    unint64_t v40 = 0;
                  }
                  sub_1CA5FD418();
                  sub_1CA5DC100((uint64_t)v40, v13, v14, (char *)__s1);
                  if (v5) {
                    goto LABEL_65;
                  }
                  uint64_t v5 = 0;
                  sub_1CA5B6EF4(v13, v14);
                  sub_1CA5B6EF4(v8, v9);
LABEL_47:
                  if ((__s1[0] & 1) == 0) {
                    goto LABEL_27;
                  }
LABEL_48:
                  sub_1CA5B6EF4(v13, v14);
                  sub_1CA5B6EF4(v50, v49);
                  sub_1CA5B6EF4(v51, v52);
                  sub_1CA5B6EF4(v8, v9);
                  sub_1CA5B6EF4(v54, v53);
                  uint64_t result = sub_1CA5B6EF4(v11, v55);
                  unint64_t v10 = v45;
                  a3 = v46;
                  unint64_t v15 = v44;
                  break;
                case 2uLL:
                  BOOL v39 = *(void **)(v8 + 24);
                  uint64_t v41 = *(char **)(v8 + 16);
                  sub_1CA5B6FE8(v8, v9);
                  sub_1CA5B6FE8(v54, v53);
                  sub_1CA5B6FE8(v11, v55);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5B6FE8(v50, v49);
                  sub_1CA5B6FE8(v51, v52);
                  sub_1CA5B6FE8(v13, v14);
                  swift_retain();
                  swift_retain();
                  uint64_t v25 = sub_1CA5FD408();
                  if (v25)
                  {
                    uint64_t v37 = v25;
                    uint64_t v26 = sub_1CA5FD428();
                    uint64_t v27 = v41;
                    if (__OFSUB__(v41, v26)) {
                      goto LABEL_59;
                    }
                    uint64_t v28 = &v41[v37 - v26];
                  }
                  else
                  {
                    uint64_t v28 = 0;
                    uint64_t v27 = v41;
                  }
                  if (__OFSUB__(v39, v27)) {
                    goto LABEL_58;
                  }
                  uint64_t v42 = v28;
                  sub_1CA5FD418();
                  sub_1CA5DC100((uint64_t)v42, v13, v14, (char *)__s1);
                  if (v5) {
                    goto LABEL_64;
                  }
                  uint64_t v5 = 0;
                  sub_1CA5B6EF4(v13, v14);
                  swift_release();
                  swift_release();
                  goto LABEL_47;
                case 3uLL:
                  memset(__s1, 0, 14);
                  sub_1CA5B6FE8(v8, v9);
                  sub_1CA5B6FE8(v54, v53);
                  sub_1CA5B6FE8(v11, v55);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5B6FE8(v50, v49);
                  sub_1CA5B6FE8(v51, v52);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5DC100((uint64_t)__s1, v13, v14, &v56);
                  if (v5) {
                    goto LABEL_63;
                  }
                  uint64_t v5 = 0;
                  sub_1CA5B6EF4(v13, v14);
                  if (v56 == 1) {
                    goto LABEL_48;
                  }
                  goto LABEL_27;
                default:
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  sub_1CA5B6FE8(v8, v9);
                  sub_1CA5B6FE8(v54, v53);
                  sub_1CA5B6FE8(v11, v55);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5B6FE8(v50, v49);
                  sub_1CA5B6FE8(v51, v52);
                  sub_1CA5B6FE8(v13, v14);
                  sub_1CA5DC100((uint64_t)__s1, v13, v14, &v56);
                  if (v5) {
                    goto LABEL_63;
                  }
                  uint64_t v5 = 0;
                  sub_1CA5B6EF4(v13, v14);
                  if (v56) {
                    goto LABEL_48;
                  }
                  goto LABEL_27;
              }
            }
LABEL_49:
            if (v10 >= v15) {
              goto LABEL_4;
            }
          }
          else
          {
LABEL_26:
            sub_1CA5B6FE8(v8, v9);
            sub_1CA5B6FE8(v54, v53);
            uint64_t v48 = v11;
            sub_1CA5B6FE8(v11, v55);
            sub_1CA5B6FE8(v13, v14);
            sub_1CA5B6FE8(v50, v49);
            sub_1CA5B6FE8(v51, v52);
LABEL_27:
            BOOL v23 = sub_1CA5B919C(v8, v9, v13, v14);
            if (v5)
            {

              sub_1CA5FDC18();
              __break(1u);
LABEL_63:
              sub_1CA5B6EF4(v13, v14);
              __break(1u);
LABEL_64:
              sub_1CA5B6EF4(v13, v14);
              swift_release();
              swift_release();
              __break(1u);
LABEL_65:
              sub_1CA5B6EF4(v13, v14);
              sub_1CA5B6EF4(v8, v9);
              __break(1u);
              JUMPOUT(0x1CA5B5100);
            }
            BOOL v24 = v23;
            sub_1CA5B6EF4(v13, v14);
            sub_1CA5B6EF4(v50, v49);
            sub_1CA5B6EF4(v51, v52);
            sub_1CA5B6EF4(v8, v9);
            sub_1CA5B6EF4(v54, v53);
            uint64_t result = sub_1CA5B6EF4(v48, v55);
            a3 = v46;
            if (!v24) {
              goto LABEL_4;
            }
          }
          if (!v47) {
            goto LABEL_61;
          }
          uint64_t v8 = *v6;
          unint64_t v9 = v6[1];
          unint64_t v10 = v6[2];
          uint64_t v31 = v6[3];
          unint64_t v32 = v6[4];
          uint64_t v11 = v6[5];
          unint64_t v33 = v6[6];
          long long v34 = *(_OWORD *)(v6 - 5);
          *(_OWORD *)uint64_t v6 = *(_OWORD *)(v6 - 7);
          *((_OWORD *)v6 + 1) = v34;
          *((_OWORD *)v6 + 2) = *(_OWORD *)(v6 - 3);
          v6[6] = *(v6 - 1);
          *(v6 - 6) = v9;
          *(v6 - 5) = v10;
          unint64_t v53 = v32;
          uint64_t v54 = v31;
          *(v6 - 4) = v31;
          *(v6 - 3) = v32;
          *(v6 - 2) = v11;
          *(v6 - 1) = v33;
          unint64_t v55 = v33;
          ++v12;
          *(v6 - 7) = v8;
          v6 -= 7;
          if (a3 != v12) {
            continue;
          }
LABEL_4:
          ++a3;
          uint64_t v6 = v43 + 7;
          if (a3 != a2) {
            goto LABEL_5;
          }
          return result;
        case 3uLL:
          if (!v16) {
            goto LABEL_49;
          }
          goto LABEL_26;
        default:
          if (v16 != BYTE6(v14)) {
            goto LABEL_26;
          }
          goto LABEL_21;
      }
    }
  }
  return result;
}

void sub_1CA5B5130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
    uint64_t v22 = a1;
    uint64_t v25 = *a4;
    while (2)
    {
      uint64_t v8 = *(void **)(v6 + 8 * v5);
      uint64_t v24 = v7;
      uint64_t v26 = v5;
      while (1)
      {
        uint64_t v29 = a1;
        unint64_t v9 = *(void **)v7;
        uint64_t v10 = sub_1CA5FD8A8();
        uint64_t v12 = v11;
        id v13 = v8;
        id v14 = v9;
        sub_1CA5C9EE4(v10, v12, &v28);
        if (v4)
        {

          swift_bridgeObjectRelease();
          return;
        }
        swift_bridgeObjectRelease();
        long long v15 = v28;
        uint64_t v16 = sub_1CA5FD8A8();
        sub_1CA5C9EE4(v16, v17, &v27);
        swift_bridgeObjectRelease();
        long long v18 = v27;
        BOOL v19 = sub_1CA5B919C(v15, *((unint64_t *)&v15 + 1), v27, *((unint64_t *)&v27 + 1));
        sub_1CA5B6EF4(v15, *((unint64_t *)&v15 + 1));
        sub_1CA5B6EF4(v18, *((unint64_t *)&v18 + 1));

        if (!v19) {
          break;
        }
        uint64_t v6 = v25;
        uint64_t v20 = v26;
        if (!v25)
        {
          __break(1u);
          return;
        }
        uint64_t v21 = *(void **)v7;
        uint64_t v8 = *(void **)(v7 + 8);
        *(void *)uint64_t v7 = v8;
        *(void *)(v7 + 8) = v21;
        v7 -= 8;
        a1 = v29 + 1;
        if (v26 == v29 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = v25;
      uint64_t v20 = v26;
LABEL_10:
      uint64_t v5 = v20 + 1;
      uint64_t v7 = v24 + 8;
      a1 = v22;
      if (v5 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1CA5B5304(uint64_t *__src, uint64_t *a2, uint64_t *a3, uint64_t *__dst)
{
  uint64_t v6 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  v124[1] = *(void **)MEMORY[0x1E4F143B8];
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = ((char *)a2 - (char *)__src) / 56;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = ((char *)a3 - (char *)a2) / 56;
  BOOL v123 = __dst;
  v124[0] = __src;
  if (v10 >= v12)
  {
    if (v11 < -55) {
      goto LABEL_143;
    }
    if (__dst != a2 || &a2[7 * v12] <= __dst)
    {
      unint64_t v44 = a3;
      memmove(__dst, a2, 56 * v12);
      a3 = v44;
    }
    unint64_t v45 = &v6[7 * v12];
    uint64_t v122 = v45;
    v124[0] = v7;
    if (v8 >= v7 || v11 < 56) {
      goto LABEL_125;
    }
    uint64_t v46 = v7;
    uint64_t v98 = v8;
    uint64_t v100 = v6;
    while (1)
    {
      uint64_t v47 = *(v45 - 7);
      uint64_t v11 = *(v45 - 6);
      uint64_t v48 = v45 - 7;
      unint64_t v49 = *(v45 - 5);
      uint64_t v50 = *(v45 - 2);
      unint64_t v112 = *(v45 - 3);
      uint64_t v114 = *(v45 - 4);
      unint64_t v116 = *(v45 - 1);
      unint64_t v5 = *(v46 - 7);
      unint64_t v4 = *(v46 - 6);
      v46 -= 7;
      unint64_t v51 = v46[2];
      unint64_t v104 = v46[4];
      uint64_t v106 = v46[3];
      unint64_t v108 = v46[6];
      uint64_t v110 = v46[5];
      uint64_t v52 = 0;
      switch((unint64_t)v11 >> 62)
      {
        case 1uLL:
          LODWORD(v52) = HIDWORD(v47) - v47;
          if (__OFSUB__(HIDWORD(v47), v47)) {
            goto LABEL_129;
          }
          uint64_t v52 = (int)v52;
          break;
        case 2uLL:
          uint64_t v54 = *(void *)(v47 + 16);
          uint64_t v53 = *(void *)(v47 + 24);
          BOOL v22 = __OFSUB__(v53, v54);
          uint64_t v52 = v53 - v54;
          if (!v22) {
            break;
          }
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        case 3uLL:
          break;
        default:
          uint64_t v52 = BYTE6(v11);
          break;
      }
      switch(v4 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v5), v5)) {
            goto LABEL_133;
          }
          if (v52 == HIDWORD(v5) - v5) {
            goto LABEL_84;
          }
          goto LABEL_88;
        case 2uLL:
          uint64_t v56 = *(void *)(v5 + 16);
          uint64_t v55 = *(void *)(v5 + 24);
          BOOL v22 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v22) {
            goto LABEL_131;
          }
          if (v52 == v57)
          {
LABEL_84:
            if (v52 >= 1)
            {
              uint64_t v118 = a3;
              uint64_t v102 = v45;
              unint64_t v95 = *(v45 - 5);
              uint64_t v96 = (char *)*(v45 - 6);
              uint64_t v93 = (void *)v46[2];
              switch((unint64_t)v11 >> 62)
              {
                case 1uLL:
                  if (v47 >> 32 < (int)v47) {
                    goto LABEL_135;
                  }
                  sub_1CA5B6FE8(v47, v11);
                  sub_1CA5B6FE8(v114, v112);
                  unint64_t v90 = (void *)v50;
                  sub_1CA5B6FE8(v50, v116);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5B6FE8(v106, v104);
                  sub_1CA5B6FE8(v110, v108);
                  sub_1CA5B6FE8(v5, v4);
                  uint64_t v86 = v47;
                  sub_1CA5B6FE8(v47, v11);
                  uint64_t v72 = sub_1CA5FD408();
                  if (v72)
                  {
                    uint64_t v73 = sub_1CA5FD428();
                    uint64_t v8 = v98;
                    if (__OFSUB__((int)v47, v73)) {
                      goto LABEL_141;
                    }
                    v72 += (int)v47 - v73;
                  }
                  else
                  {
                    uint64_t v8 = v98;
                  }
                  sub_1CA5FD418();
                  sub_1CA5DC100(v72, v5, v4, (char *)__s1);
                  uint64_t v50 = (uint64_t)v90;
                  if (v119) {
                    goto LABEL_150;
                  }
                  sub_1CA5B6EF4(v5, v4);
                  sub_1CA5B6EF4(v47, v11);
                  if (__s1[0]) {
                    goto LABEL_114;
                  }
                  goto LABEL_89;
                case 2uLL:
                  uint64_t v84 = *(void *)(v47 + 24);
                  uint64_t v85 = *(void *)(v47 + 16);
                  sub_1CA5B6FE8(v47, v11);
                  sub_1CA5B6FE8(v114, v112);
                  uint64_t v89 = (void *)v50;
                  sub_1CA5B6FE8(v50, v116);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5B6FE8(v106, v104);
                  sub_1CA5B6FE8(v110, v108);
                  uint64_t v66 = v5;
                  sub_1CA5B6FE8(v5, v4);
                  uint64_t v86 = v47;
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = sub_1CA5FD408();
                  if (v67)
                  {
                    uint64_t v68 = v67;
                    uint64_t v69 = sub_1CA5FD428();
                    uint64_t v70 = v85;
                    if (__OFSUB__(v85, v69)) {
                      goto LABEL_139;
                    }
                    uint64_t v71 = v68 + v85 - v69;
                  }
                  else
                  {
                    uint64_t v71 = 0;
                    uint64_t v70 = v85;
                  }
                  uint64_t v50 = (uint64_t)v89;
                  uint64_t v8 = v98;
                  if (__OFSUB__(v84, v70))
                  {
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
                  }
                  sub_1CA5FD418();
                  uint64_t v74 = v71;
                  unint64_t v5 = v66;
                  sub_1CA5DC100(v74, v66, v4, (char *)__s1);
                  if (v119) {
                    goto LABEL_149;
                  }
                  sub_1CA5B6EF4(v66, v4);
                  swift_release();
                  swift_release();
                  char v58 = __s1[0];
LABEL_109:
                  uint64_t v11 = (uint64_t)v96;
                  if ((v58 & 1) == 0) {
                    goto LABEL_89;
                  }
LABEL_114:
                  sub_1CA5B6EF4(v5, v4);
                  sub_1CA5B6EF4(v106, v104);
                  sub_1CA5B6EF4(v110, v108);
                  sub_1CA5B6EF4(v47, v11);
                  sub_1CA5B6EF4(v114, v112);
                  sub_1CA5B6EF4(v50, v116);
                  unint64_t v45 = v102;
                  a3 = v118;
                  unint64_t v51 = (unint64_t)v93;
                  unint64_t v49 = v95;
                  break;
                case 3uLL:
                  memset(__s1, 0, 14);
                  sub_1CA5B6FE8(v47, v11);
                  sub_1CA5B6FE8(v114, v112);
                  sub_1CA5B6FE8(v50, v116);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5B6FE8(v106, v104);
                  sub_1CA5B6FE8(v110, v108);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5DC100((uint64_t)__s1, v5, v4, &v120);
                  if (v119) {
                    goto LABEL_145;
                  }
                  sub_1CA5B6EF4(v5, v4);
                  if (v120 == 1) {
                    goto LABEL_114;
                  }
                  goto LABEL_89;
                default:
                  __s1[0] = *(v45 - 7);
                  LOWORD(__s1[1]) = v11;
                  BYTE2(__s1[1]) = BYTE2(v11);
                  BYTE3(__s1[1]) = BYTE3(v11);
                  BYTE4(__s1[1]) = BYTE4(v11);
                  BYTE5(__s1[1]) = BYTE5(v11);
                  sub_1CA5B6FE8(v47, v11);
                  sub_1CA5B6FE8(v114, v112);
                  sub_1CA5B6FE8(v50, v116);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5B6FE8(v106, v104);
                  sub_1CA5B6FE8(v110, v108);
                  sub_1CA5B6FE8(v5, v4);
                  sub_1CA5DC100((uint64_t)__s1, v5, v4, &v120);
                  if (v119) {
                    goto LABEL_145;
                  }
                  sub_1CA5B6EF4(v5, v4);
                  char v58 = v120;
                  uint64_t v8 = v98;
                  goto LABEL_109;
              }
            }
LABEL_115:
            unint64_t v62 = (unint64_t)(a3 - 7);
            if (v49 < v51) {
              goto LABEL_91;
            }
          }
          else
          {
LABEL_88:
            uint64_t v118 = a3;
            uint64_t v102 = v45;
            sub_1CA5B6FE8(v47, v11);
            sub_1CA5B6FE8(v114, v112);
            sub_1CA5B6FE8(v50, v116);
            sub_1CA5B6FE8(v5, v4);
            sub_1CA5B6FE8(v106, v104);
            sub_1CA5B6FE8(v110, v108);
LABEL_89:
            uint64_t v59 = v50;
            BOOL v60 = sub_1CA5B919C(v47, v11, v5, v4);
            if (v119)
            {
LABEL_142:

              sub_1CA5FDC18();
              __break(1u);
              goto LABEL_143;
            }
            BOOL v61 = v60;
            sub_1CA5B6EF4(v5, v4);
            sub_1CA5B6EF4(v106, v104);
            sub_1CA5B6EF4(v110, v108);
            sub_1CA5B6EF4(v47, v11);
            sub_1CA5B6EF4(v114, v112);
            sub_1CA5B6EF4(v59, v116);
            a3 = v118;
            unint64_t v62 = (unint64_t)(v118 - 7);
            unint64_t v45 = v102;
            uint64_t v8 = v98;
            if (v61)
            {
LABEL_91:
              if (a3 != v7 || v62 >= (unint64_t)v7)
              {
                long long v63 = *(_OWORD *)v46;
                long long v64 = *((_OWORD *)v46 + 1);
                long long v65 = *((_OWORD *)v46 + 2);
                *(void *)(v62 + 48) = v46[6];
                *(_OWORD *)(v62 + 16) = v64;
                *(_OWORD *)(v62 + 32) = v65;
                *(_OWORD *)unint64_t v62 = v63;
              }
              v124[0] = v46;
LABEL_123:
              long long v75 = v100;
              if (v46 <= v8) {
                goto LABEL_125;
              }
              goto LABEL_124;
            }
          }
          uint64_t v122 = v48;
          if (a3 < v45 || v62 >= (unint64_t)v45)
          {
            long long v79 = *(_OWORD *)v48;
            long long v80 = *((_OWORD *)v48 + 1);
            long long v81 = *((_OWORD *)v48 + 2);
            *(void *)(v62 + 48) = v48[6];
            *(_OWORD *)(v62 + 16) = v80;
            *(_OWORD *)(v62 + 32) = v81;
            *(_OWORD *)unint64_t v62 = v79;
            uint64_t v46 = v7;
            unint64_t v45 = v48;
            goto LABEL_123;
          }
          long long v75 = v100;
          if (a3 != v45)
          {
            long long v76 = *(_OWORD *)v48;
            long long v77 = *((_OWORD *)v48 + 1);
            long long v78 = *((_OWORD *)v48 + 2);
            *(void *)(v62 + 48) = v48[6];
            *(_OWORD *)(v62 + 16) = v77;
            *(_OWORD *)(v62 + 32) = v78;
            *(_OWORD *)unint64_t v62 = v76;
          }
          uint64_t v46 = v7;
          unint64_t v45 = v48;
          if (v7 <= v8) {
            goto LABEL_125;
          }
LABEL_124:
          uint64_t v7 = v46;
          a3 = (uint64_t *)v62;
          if (v45 <= v75) {
            goto LABEL_125;
          }
          break;
        case 3uLL:
          if (!v52) {
            goto LABEL_115;
          }
          goto LABEL_88;
        default:
          if (v52 != BYTE6(v4)) {
            goto LABEL_88;
          }
          goto LABEL_84;
      }
    }
  }
  if (v9 < -55)
  {
LABEL_143:
    sub_1CA5FDC68();
    __break(1u);
LABEL_144:
    sub_1CA5B6EF4(v11, v5);
    __break(1u);
LABEL_145:
    uint64_t v83 = v5;
    goto LABEL_148;
  }
  if (__dst != __src || &__src[7 * v10] <= __dst)
  {
    id v13 = a3;
    memmove(__dst, __src, 56 * v10);
    a3 = v13;
  }
  id v14 = &v6[7 * v10];
  uint64_t v122 = v14;
  if (v7 < a3 && v9 >= 56)
  {
    uint64_t v94 = v14;
    uint64_t v117 = a3;
    while (1)
    {
      uint64_t v15 = *v7;
      unint64_t v4 = v7[1];
      unint64_t v16 = v7[2];
      uint64_t v17 = v7[5];
      unint64_t v111 = v7[4];
      uint64_t v113 = v7[3];
      unint64_t v115 = v7[6];
      uint64_t v11 = *v6;
      unint64_t v5 = v6[1];
      unint64_t v18 = v6[2];
      unint64_t v103 = v6[4];
      uint64_t v105 = v6[3];
      unint64_t v107 = v6[6];
      uint64_t v109 = v6[5];
      uint64_t v19 = 0;
      switch(v4 >> 62)
      {
        case 1uLL:
          LODWORD(v19) = HIDWORD(v15) - v15;
          if (__OFSUB__(HIDWORD(v15), v15)) {
            goto LABEL_128;
          }
          uint64_t v19 = (int)v19;
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v20 = *(void *)(v15 + 24);
          BOOL v22 = __OFSUB__(v20, v21);
          uint64_t v19 = v20 - v21;
          if (!v22) {
            break;
          }
          __break(1u);
          goto LABEL_127;
        case 3uLL:
          break;
        default:
          uint64_t v19 = BYTE6(v4);
          break;
      }
      switch(v5 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v11), v11)) {
            goto LABEL_132;
          }
          if (v19 == HIDWORD(v11) - v11) {
            goto LABEL_24;
          }
          goto LABEL_29;
        case 2uLL:
          uint64_t v24 = *(void *)(v11 + 16);
          uint64_t v23 = *(void *)(v11 + 24);
          BOOL v22 = __OFSUB__(v23, v24);
          uint64_t v25 = v23 - v24;
          if (v22) {
            goto LABEL_130;
          }
          if (v19 == v25)
          {
LABEL_24:
            if (v19 >= 1)
            {
              uint64_t v99 = v7[2];
              uint64_t v101 = v7[5];
              uint64_t v97 = v6[2];
              switch(v4 >> 62)
              {
                case 1uLL:
                  if (v15 >> 32 < (int)v15) {
                    goto LABEL_134;
                  }
                  sub_1CA5B6FE8(v15, v4);
                  sub_1CA5B6FE8(v113, v111);
                  sub_1CA5B6FE8(v17, v115);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5B6FE8(v105, v103);
                  sub_1CA5B6FE8(v109, v107);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5B6FE8(v15, v4);
                  uint64_t v96 = (char *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
                  uint64_t v38 = sub_1CA5FD408();
                  if (v38)
                  {
                    uint64_t v39 = v38;
                    uint64_t v40 = sub_1CA5FD428();
                    if (__OFSUB__((int)v15, v40)) {
                      goto LABEL_140;
                    }
                    uint64_t v88 = (void *)(v39 + (int)v15 - v40);
                  }
                  else
                  {
                    uint64_t v88 = 0;
                  }
                  sub_1CA5FD418();
                  sub_1CA5DC100((uint64_t)v88, v11, v5, (char *)__s1);
                  id v14 = v94;
                  if (v119) {
                    goto LABEL_147;
                  }
                  sub_1CA5B6EF4(v11, v5);
                  sub_1CA5B6EF4(v15, v4);
                  if (__s1[0]) {
                    goto LABEL_54;
                  }
                  goto LABEL_30;
                case 2uLL:
                  uint64_t v87 = *(void **)(v15 + 24);
                  uint64_t v91 = *(char **)(v15 + 16);
                  sub_1CA5B6FE8(v15, v4);
                  sub_1CA5B6FE8(v113, v111);
                  sub_1CA5B6FE8(v17, v115);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5B6FE8(v105, v103);
                  sub_1CA5B6FE8(v109, v107);
                  sub_1CA5B6FE8(v11, v5);
                  swift_retain();
                  swift_retain();
                  uint64_t v96 = (char *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
                  uint64_t v33 = sub_1CA5FD408();
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    uint64_t v35 = sub_1CA5FD428();
                    uint64_t v36 = v91;
                    if (__OFSUB__(v91, v35)) {
                      goto LABEL_138;
                    }
                    uint64_t v37 = &v91[v34 - v35];
                  }
                  else
                  {
                    uint64_t v37 = 0;
                    uint64_t v36 = v91;
                  }
                  if (__OFSUB__(v87, v36))
                  {
LABEL_136:
                    __break(1u);
                    goto LABEL_137;
                  }
                  uint64_t v92 = v37;
                  sub_1CA5FD418();
                  sub_1CA5DC100((uint64_t)v92, v11, v5, (char *)__s1);
                  if (v119)
                  {
                    sub_1CA5B6EF4(v11, v5);
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_147:
                    sub_1CA5B6EF4(v11, v5);
                    uint64_t v83 = v15;
LABEL_148:
                    sub_1CA5B6EF4(v83, v4);
                    __break(1u);
LABEL_149:
                    sub_1CA5B6EF4(v5, v4);
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_150:
                    sub_1CA5B6EF4(v5, v4);
                    sub_1CA5B6EF4(v86, (unint64_t)v96);
                    __break(1u);
                    JUMPOUT(0x1CA5B6330);
                  }
                  sub_1CA5B6EF4(v11, v5);
                  swift_release();
                  swift_release();
                  id v14 = v94;
                  if ((__s1[0] & 1) == 0) {
                    goto LABEL_30;
                  }
LABEL_54:
                  sub_1CA5B6EF4(v11, v5);
                  sub_1CA5B6EF4(v105, v103);
                  sub_1CA5B6EF4(v109, v107);
                  sub_1CA5B6EF4(v15, v4);
                  sub_1CA5B6EF4(v113, v111);
                  sub_1CA5B6EF4(v17, v115);
                  unint64_t v18 = v97;
                  unint64_t v16 = v99;
                  break;
                case 3uLL:
                  memset(__s1, 0, 14);
                  sub_1CA5B6FE8(v15, v4);
                  sub_1CA5B6FE8(v113, v111);
                  sub_1CA5B6FE8(v17, v115);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5B6FE8(v105, v103);
                  sub_1CA5B6FE8(v109, v107);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5DC100((uint64_t)__s1, v11, v5, &v120);
                  if (v119) {
                    goto LABEL_144;
                  }
                  sub_1CA5B6EF4(v11, v5);
                  if (v120 == 1) {
                    goto LABEL_54;
                  }
                  goto LABEL_30;
                default:
                  __s1[0] = *v7;
                  LOWORD(__s1[1]) = v4;
                  BYTE2(__s1[1]) = BYTE2(v4);
                  BYTE3(__s1[1]) = BYTE3(v4);
                  BYTE4(__s1[1]) = BYTE4(v4);
                  BYTE5(__s1[1]) = BYTE5(v4);
                  uint64_t v96 = (char *)__s1 + BYTE6(v4);
                  sub_1CA5B6FE8(v15, v4);
                  sub_1CA5B6FE8(v113, v111);
                  sub_1CA5B6FE8(v17, v115);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5B6FE8(v105, v103);
                  sub_1CA5B6FE8(v109, v107);
                  sub_1CA5B6FE8(v11, v5);
                  sub_1CA5DC100((uint64_t)__s1, v11, v5, &v120);
                  if (v119) {
                    goto LABEL_144;
                  }
                  sub_1CA5B6EF4(v11, v5);
                  if (v120) {
                    goto LABEL_54;
                  }
                  goto LABEL_30;
              }
            }
LABEL_55:
            unint64_t v28 = (unint64_t)v117;
            if (v16 < v18)
            {
LABEL_32:
              uint64_t v29 = v7 + 7;
              if (v8 < v7 || v8 >= v29 || v8 != v7)
              {
                long long v30 = *(_OWORD *)v7;
                long long v31 = *((_OWORD *)v7 + 1);
                long long v32 = *((_OWORD *)v7 + 2);
                v8[6] = v7[6];
                *((_OWORD *)v8 + 1) = v31;
                *((_OWORD *)v8 + 2) = v32;
                *(_OWORD *)uint64_t v8 = v30;
              }
              goto LABEL_59;
            }
          }
          else
          {
LABEL_29:
            sub_1CA5B6FE8(v15, v4);
            sub_1CA5B6FE8(v113, v111);
            uint64_t v101 = v17;
            sub_1CA5B6FE8(v17, v115);
            sub_1CA5B6FE8(v11, v5);
            sub_1CA5B6FE8(v105, v103);
            sub_1CA5B6FE8(v109, v107);
LABEL_30:
            BOOL v26 = sub_1CA5B919C(v15, v4, v11, v5);
            if (v119) {
              goto LABEL_142;
            }
            BOOL v27 = v26;
            sub_1CA5B6EF4(v11, v5);
            sub_1CA5B6EF4(v105, v103);
            sub_1CA5B6EF4(v109, v107);
            sub_1CA5B6EF4(v15, v4);
            sub_1CA5B6EF4(v113, v111);
            sub_1CA5B6EF4(v101, v115);
            unint64_t v28 = (unint64_t)v117;
            if (v27) {
              goto LABEL_32;
            }
          }
          if (v8 != v6)
          {
            long long v41 = *(_OWORD *)v6;
            long long v42 = *((_OWORD *)v6 + 1);
            long long v43 = *((_OWORD *)v6 + 2);
            v8[6] = v6[6];
            *((_OWORD *)v8 + 1) = v42;
            *((_OWORD *)v8 + 2) = v43;
            *(_OWORD *)uint64_t v8 = v41;
          }
          v6 += 7;
          BOOL v123 = v6;
          uint64_t v29 = v7;
LABEL_59:
          v8 += 7;
          v124[0] = v8;
          if (v6 >= v14) {
            goto LABEL_125;
          }
          uint64_t v7 = v29;
          if ((unint64_t)v29 >= v28) {
            goto LABEL_125;
          }
          break;
        case 3uLL:
          if (!v19) {
            goto LABEL_55;
          }
          goto LABEL_29;
        default:
          if (v19 != BYTE6(v5)) {
            goto LABEL_29;
          }
          goto LABEL_24;
      }
    }
  }
LABEL_125:
  sub_1CA5E1AEC(v124, (const void **)&v123, &v122);
  return 1;
}

uint64_t sub_1CA5B6390(void **__src, void **a2, unint64_t a3, void **__dst)
{
  unint64_t v5 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  long long v63 = __src;
  unint64_t v62 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unint64_t v28 = &v5[v13];
      BOOL v61 = v28;
      long long v63 = v6;
      if (v7 >= v6 || v11 < 8) {
        goto LABEL_48;
      }
      uint64_t v29 = (void **)(a3 - 8);
      long long v30 = v6;
      uint64_t v54 = v5;
      uint64_t v56 = v7;
      while (1)
      {
        char v58 = v6;
        unint64_t v51 = (unint64_t)v28;
        long long v32 = v28 - 1;
        long long v31 = *(v28 - 1);
        uint64_t v33 = *(v30 - 1);
        uint64_t v48 = v30 - 1;
        uint64_t v34 = sub_1CA5FD8A8();
        uint64_t v36 = v35;
        id v37 = v31;
        id v38 = v33;
        sub_1CA5C9EE4(v34, v36, &v60);
        if (v4) {
          break;
        }
        swift_bridgeObjectRelease();
        long long v39 = v60;
        uint64_t v40 = sub_1CA5FD8A8();
        sub_1CA5C9EE4(v40, v41, &v59);
        long long v42 = v38;
        swift_bridgeObjectRelease();
        long long v43 = v59;
        BOOL v44 = sub_1CA5B919C(v39, *((unint64_t *)&v39 + 1), v59, *((unint64_t *)&v59 + 1));
        unint64_t v49 = v29 + 1;
        sub_1CA5B6EF4(v39, *((unint64_t *)&v39 + 1));
        sub_1CA5B6EF4(v43, *((unint64_t *)&v43 + 1));

        if (v44)
        {
          unint64_t v45 = v56;
          long long v30 = v48;
          uint64_t v46 = v54;
          unint64_t v28 = (void **)v51;
          if (v49 != v58 || v29 >= v58) {
            *uint64_t v29 = *v48;
          }
          long long v63 = v48;
        }
        else
        {
          BOOL v61 = v32;
          uint64_t v46 = v54;
          unint64_t v45 = v56;
          if ((unint64_t)v49 < v51 || (unint64_t)v29 >= v51 || v49 != (void **)v51) {
            *uint64_t v29 = *v32;
          }
          long long v30 = v58;
          unint64_t v28 = v32;
        }
        if (v30 > v45)
        {
          --v29;
          uint64_t v6 = v30;
          if (v28 > v46) {
            continue;
          }
        }
        goto LABEL_48;
      }

      goto LABEL_47;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v50 = &v5[v10];
    BOOL v61 = v50;
    if ((unint64_t)v6 >= a3 || v8 < 8) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v55 = v7;
      uint64_t v57 = v6;
      id v14 = *v6;
      uint64_t v53 = v5;
      uint64_t v15 = *v5;
      uint64_t v16 = sub_1CA5FD8A8();
      uint64_t v18 = v17;
      id v19 = v14;
      id v20 = v15;
      sub_1CA5C9EE4(v16, v18, &v60);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      long long v21 = v60;
      uint64_t v22 = sub_1CA5FD8A8();
      sub_1CA5C9EE4(v22, v23, &v59);
      swift_bridgeObjectRelease();
      long long v24 = v59;
      BOOL v25 = sub_1CA5B919C(v21, *((unint64_t *)&v21 + 1), v59, *((unint64_t *)&v59 + 1));
      sub_1CA5B6EF4(v21, *((unint64_t *)&v21 + 1));
      sub_1CA5B6EF4(v24, *((unint64_t *)&v24 + 1));

      if (v25)
      {
        BOOL v26 = v55;
        BOOL v27 = v57 + 1;
        unint64_t v5 = v53;
        if (v55 < v57 || v55 >= v27 || v55 != v57) {
          *uint64_t v55 = *v57;
        }
      }
      else
      {
        BOOL v26 = v55;
        if (v55 != v53) {
          *uint64_t v55 = *v53;
        }
        unint64_t v5 = v53 + 1;
        unint64_t v62 = v53 + 1;
        BOOL v27 = v57;
      }
      uint64_t v7 = v26 + 1;
      long long v63 = v7;
      if (v5 < v50)
      {
        uint64_t v6 = v27;
        if ((unint64_t)v27 < a3) {
          continue;
        }
      }
      goto LABEL_48;
    }

LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:
    sub_1CA5E1BC0(&v63, &v62, &v61);
    return 1;
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5B68A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA5B8634(&qword_1EA608718, &qword_1EA608710);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608710);
          uint64_t v12 = sub_1CA5EA3C4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ExpressMode.PassConfig();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5B6ACC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1CA5DC100((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1CA5B6BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1CA5FD408();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1CA5FD428();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1CA5FD418();
  sub_1CA5DC100(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1CA5B6C5C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1CA5B6EC4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1CA5B6FE8(a3, a4);
                  sub_1CA5B6FE8(a1, a2);
                  char v17 = sub_1CA5B6BA4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1CA5B6EF4(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1CA5B6FE8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1CA5B6BA4(v21, v22, v20, a3, a4);
                  sub_1CA5B6EF4(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1CA5B6FE8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1CA5B6FE8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1CA5B6ACC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1CA5B6EF4(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5B6EF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

_OWORD *sub_1CA5B6F4C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1CA5B6F60()
{
  unint64_t result = qword_1EA6086F0;
  if (!qword_1EA6086F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6086F0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AssociatedReader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1CA5B6FE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t destroy for AssociatedReader(uint64_t *a1)
{
  sub_1CA5B6EF4(*a1, a1[1]);
  sub_1CA5B6EF4(a1[3], a1[4]);
  uint64_t v2 = a1[5];
  unint64_t v3 = a1[6];

  return sub_1CA5B6EF4(v2, v3);
}

uint64_t *initializeWithCopy for AssociatedReader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1CA5B6FE8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  unint64_t v7 = a2[4];
  sub_1CA5B6FE8(v6, v7);
  a1[3] = v6;
  a1[4] = v7;
  uint64_t v9 = a2[5];
  unint64_t v8 = a2[6];
  sub_1CA5B6FE8(v9, v8);
  a1[5] = v9;
  a1[6] = v8;
  return a1;
}

uint64_t *assignWithCopy for AssociatedReader(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1CA5B6FE8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CA5B6EF4(v6, v7);
  a1[2] = a2[2];
  uint64_t v8 = a2[3];
  unint64_t v9 = a2[4];
  sub_1CA5B6FE8(v8, v9);
  uint64_t v10 = a1[3];
  unint64_t v11 = a1[4];
  a1[3] = v8;
  a1[4] = v9;
  sub_1CA5B6EF4(v10, v11);
  uint64_t v13 = a2[5];
  unint64_t v12 = a2[6];
  sub_1CA5B6FE8(v13, v12);
  uint64_t v14 = a1[5];
  unint64_t v15 = a1[6];
  a1[5] = v13;
  a1[6] = v12;
  sub_1CA5B6EF4(v14, v15);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssociatedReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CA5B6EF4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1CA5B6EF4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a1 + 40);
  unint64_t v10 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v8;
  sub_1CA5B6EF4(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssociatedReader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AssociatedReader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssociatedReader()
{
  return &type metadata for AssociatedReader;
}

void type metadata accessor for ATLError(uint64_t a1)
{
}

uint64_t sub_1CA5B72DC()
{
  return sub_1CA5B7324(&qword_1EA608700, type metadata accessor for ATLError);
}

uint64_t sub_1CA5B7324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA5B736C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1CA5B6EF4(a1, a2);
  }
  return a1;
}

unint64_t sub_1CA5B7380()
{
  unint64_t result = qword_1EA608728;
  if (!qword_1EA608728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608728);
  }
  return result;
}

uint64_t sub_1CA5B73D4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v11 = sub_1CA5FD8A8();
  uint64_t v13 = v12;
  sub_1CA5B6FE8(a3, a4);
  uint64_t v14 = sub_1CA5C9334(v11, v13);
  if (v5)
  {
    sub_1CA5B6EF4(a3, a4);
    swift_bridgeObjectRelease();

    return sub_1CA5B6EF4(a3, a4);
  }
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1CA5FD8A8();
  unint64_t v18 = v17;
  sub_1CA5C9604(v16, v17, v77);
  swift_bridgeObjectRelease();
  if (*((void *)&v77[0] + 1) >> 60 == 15) {
    goto LABEL_13;
  }
  switch(*((void *)&v77[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v77[0]) - LODWORD(v77[0]);
      if (__OFSUB__(DWORD1(v77[0]), v77[0]))
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        uint64_t v71 = v78;
        switch(v18 >> 62)
        {
          case 1uLL:
            LODWORD(v62) = DWORD1(v78) - v78;
            if (__OFSUB__(DWORD1(v78), v78))
            {
              __break(1u);
LABEL_81:
              __break(1u);
              JUMPOUT(0x1CA5B7F6CLL);
            }
            uint64_t v62 = (int)v62;
LABEL_70:
            if (v62 == 65)
            {

              long long v65 = v79;
              sub_1CA5B8510(v76, v74);
              sub_1CA5B8510(v71, v18);
              sub_1CA5B6EF4(v65, *((unint64_t *)&v65 + 1));
              sub_1CA5B6FE8(v76, v74);
              unint64_t v70 = v18;
              sub_1CA5B6FE8(v71, v18);
              sub_1CA5B6FE8(a3, a4);
              sub_1CA5B6EF4(a3, a4);
              sub_1CA5B736C(v71, v18);
              sub_1CA5B736C(v76, v74);
              unint64_t v34 = v74;
              sub_1CA5B6EF4(v76, v74);
              uint64_t v30 = v71;
              unint64_t v31 = v70;
              sub_1CA5B6EF4(v71, v70);
              uint64_t v32 = a3;
              unint64_t v33 = a4;
              goto LABEL_19;
            }
LABEL_72:
            if (qword_1EA608648 != -1) {
              swift_once();
            }
            uint64_t v66 = sub_1CA5FD648();
            __swift_project_value_buffer(v66, (uint64_t)qword_1EA608650);
            uint64_t v67 = sub_1CA5FD628();
            os_log_type_t v68 = sub_1CA5FD9E8();
            if (os_log_type_enabled(v67, v68))
            {
              uint64_t v69 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v69 = 0;
              _os_log_impl(&dword_1CA552000, v67, v68, "Public Key length should be 65 bytes", v69, 2u);
              MEMORY[0x1CB799300](v69, -1, -1);

              sub_1CA5B6EF4(a3, a4);
              sub_1CA5B736C(v71, v18);
              goto LABEL_39;
            }

            sub_1CA5B736C(v76, v74);
            sub_1CA5B736C(v71, v18);
            sub_1CA5B6EF4(a3, a4);

            break;
          case 2uLL:
            uint64_t v64 = *(void *)(v78 + 16);
            uint64_t v63 = *(void *)(v78 + 24);
            BOOL v23 = __OFSUB__(v63, v64);
            uint64_t v62 = v63 - v64;
            if (!v23) {
              goto LABEL_70;
            }
            goto LABEL_81;
          case 3uLL:
            goto LABEL_72;
          default:
            uint64_t v62 = BYTE6(v18);
            goto LABEL_70;
        }
LABEL_54:

        goto LABEL_55;
      }
      uint64_t v20 = (int)v20;
LABEL_10:
      if (v20 != 8)
      {
LABEL_12:
        sub_1CA5B736C(*(uint64_t *)&v77[0], *((unint64_t *)&v77[0] + 1));
LABEL_13:
        if (qword_1EA608648 != -1) {
          swift_once();
        }
        long long v75 = a5;
        uint64_t v26 = sub_1CA5FD648();
        __swift_project_value_buffer(v26, (uint64_t)qword_1EA608650);
        BOOL v27 = sub_1CA5FD628();
        os_log_type_t v28 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_1CA552000, v27, v28, "Priority Reader Identifier should be present and 8 bytes long", v29, 2u);
          MEMORY[0x1CB799300](v29, -1, -1);
        }
        goto LABEL_17;
      }
      unint64_t v74 = *((void *)&v77[0] + 1);
      uint64_t v76 = *(void *)&v77[0];
      uint64_t v24 = sub_1CA5FD8A8();
      sub_1CA5C9604(v24, v25, v77);
      swift_bridgeObjectRelease();
      if (*((void *)&v77[0] + 1) >> 60 == 15)
      {
LABEL_28:
        if (qword_1EA608648 != -1) {
          swift_once();
        }
        long long v75 = a5;
        uint64_t v38 = sub_1CA5FD648();
        __swift_project_value_buffer(v38, (uint64_t)qword_1EA608650);
        BOOL v27 = sub_1CA5FD628();
        os_log_type_t v39 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v27, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v40 = 0;
          _os_log_impl(&dword_1CA552000, v27, v39, "PK Reader Identifier should be present and at least 8 bytes long", v40, 2u);
          MEMORY[0x1CB799300](v40, -1, -1);
          sub_1CA5B6EF4(a3, a4);

          sub_1CA5B736C(v76, v74);
          goto LABEL_18;
        }
        sub_1CA5B736C(v76, v74);
LABEL_17:
        sub_1CA5B6EF4(a3, a4);

        goto LABEL_18;
      }
      long long v79 = v77[0];
      switch(*((void *)&v77[0] + 1) >> 62)
      {
        case 1:
          LODWORD(v35) = DWORD1(v77[0]) - LODWORD(v77[0]);
          if (!__OFSUB__(DWORD1(v77[0]), v77[0]))
          {
            uint64_t v35 = (int)v35;
            goto LABEL_26;
          }
          __break(1u);
          goto LABEL_78;
        case 2:
          uint64_t v37 = *(void *)(*(void *)&v77[0] + 16);
          uint64_t v36 = *(void *)(*(void *)&v77[0] + 24);
          BOOL v23 = __OFSUB__(v36, v37);
          uint64_t v35 = v36 - v37;
          if (!v23) {
            goto LABEL_26;
          }
LABEL_78:
          __break(1u);
          goto LABEL_79;
        case 3:
          goto LABEL_27;
        default:
          uint64_t v35 = BYTE14(v77[0]);
LABEL_26:
          if (v35 <= 7)
          {
LABEL_27:
            sub_1CA5B736C(*(uint64_t *)&v77[0], *((unint64_t *)&v77[0] + 1));
            goto LABEL_28;
          }
          uint64_t v41 = Data.popPrefix(_:)(8);
          unint64_t v43 = v42;
          char v73 = sub_1CA5B6C5C(v76, v74, v41, v42);
          sub_1CA5B6EF4(v41, v43);
          if ((v73 & 1) == 0)
          {
            if (qword_1EA608648 != -1) {
LABEL_79:
            }
              swift_once();
            uint64_t v46 = sub_1CA5FD648();
            __swift_project_value_buffer(v46, (uint64_t)qword_1EA608650);
            uint64_t v47 = sub_1CA5FD628();
            os_log_type_t v48 = sub_1CA5FD9E8();
            long long v75 = a5;
            if (os_log_type_enabled(v47, v48))
            {
              unint64_t v49 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v49 = 0;
              uint64_t v50 = "Priority and Key Reader Identifiers do not match";
LABEL_37:
              _os_log_impl(&dword_1CA552000, v47, v48, v50, v49, 2u);
              MEMORY[0x1CB799300](v49, -1, -1);
              goto LABEL_38;
            }
LABEL_53:
            sub_1CA5B736C(v76, v74);
            sub_1CA5B6EF4(a3, a4);

            goto LABEL_54;
          }
          uint64_t v44 = sub_1CA5FD8A8();
          unint64_t v51 = (void *)sub_1CA5C98E4(v44, v45);
          swift_bridgeObjectRelease();
          long long v75 = a5;
          if (!v51)
          {
            if (qword_1EA608648 != -1) {
              swift_once();
            }
            uint64_t v56 = sub_1CA5FD648();
            __swift_project_value_buffer(v56, (uint64_t)qword_1EA608650);
            uint64_t v47 = sub_1CA5FD628();
            os_log_type_t v48 = sub_1CA5FD9E8();
            if (os_log_type_enabled(v47, v48))
            {
              unint64_t v49 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v49 = 0;
              uint64_t v50 = "Public Key not provided for Lyon Express pass";
              goto LABEL_37;
            }
            goto LABEL_66;
          }
          uint64_t v72 = v51;
          if (objc_msgSend(v51, sel_count) != (id)1)
          {
            if (qword_1EA608648 != -1) {
              swift_once();
            }
            uint64_t v57 = sub_1CA5FD648();
            __swift_project_value_buffer(v57, (uint64_t)qword_1EA608650);
            uint64_t v47 = sub_1CA5FD628();
            os_log_type_t v58 = sub_1CA5FD9E8();
            if (!os_log_type_enabled(v47, v58))
            {

              goto LABEL_53;
            }
            long long v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v59 = 0;
            long long v60 = "Auxiliary element should have one, and only one, public key";
LABEL_51:
            _os_log_impl(&dword_1CA552000, v47, v58, v60, v59, 2u);
            MEMORY[0x1CB799300](v59, -1, -1);

LABEL_38:
            sub_1CA5B6EF4(a3, a4);

LABEL_39:
            sub_1CA5B736C(v76, v74);
            goto LABEL_55;
          }
          id v52 = [v51 objectAtIndexedSubscript:0];
          sub_1CA5FDA98();
          swift_unknownObjectRelease();
          sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6083D8);
          swift_dynamicCast();
          uint64_t v53 = v80;
          uint64_t v54 = sub_1CA5FD8A8();
          sub_1CA5C9604(v54, v55, &v78);

          swift_bridgeObjectRelease();
          unint64_t v18 = *((void *)&v78 + 1);
          if (*((void *)&v78 + 1) >> 60 != 15) {
            goto LABEL_63;
          }
          if (qword_1EA608648 != -1) {
            swift_once();
          }
          uint64_t v61 = sub_1CA5FD648();
          __swift_project_value_buffer(v61, (uint64_t)qword_1EA608650);
          uint64_t v47 = sub_1CA5FD628();
          os_log_type_t v58 = sub_1CA5FD9E8();
          if (os_log_type_enabled(v47, v58))
          {
            long long v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v59 = 0;
            long long v60 = "Auxiliary Element Public Key can't be nil";
            goto LABEL_51;
          }

LABEL_66:
          sub_1CA5B6EF4(a3, a4);

          sub_1CA5B736C(v76, v74);
LABEL_55:
          sub_1CA5B6EF4(v79, *((unint64_t *)&v79 + 1));
LABEL_18:
          uint64_t v76 = 0;
          uint64_t v15 = 0;
          uint64_t v30 = 0;
          unint64_t v31 = 0;
          uint64_t v32 = 0;
          unint64_t v33 = 0;
          unint64_t v34 = 0xF000000000000000;
LABEL_19:
          uint64_t result = sub_1CA5B6EF4(a3, a4);
          *long long v75 = v76;
          v75[1] = v34;
          v75[2] = v15;
          v75[3] = v30;
          v75[4] = v31;
          v75[5] = v32;
          v75[6] = v33;
          return result;
      }
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v77[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v77[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_10;
      }
      goto LABEL_62;
    case 3:
      goto LABEL_12;
    default:
      uint64_t v20 = BYTE14(v77[0]);
      goto LABEL_10;
  }
}

void *sub_1CA5B7F9C(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1CA5FDC28())
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v11 = (id)MEMORY[0x1CB798560](0, a1);
    }
    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      id v11 = *(id *)(a1 + 32);
    }
    id v5 = v11;
    if (!(a2 >> 62))
    {
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v12) {
        goto LABEL_42;
      }
      goto LABEL_8;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    uint64_t v12 = v23;
    if (!v23)
    {
LABEL_42:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (void *)MEMORY[0x1E4FBC860];
    }
LABEL_8:
    unint64_t v13 = 0;
    unint64_t v36 = a2 & 0xC000000000000001;
    uint64_t v26 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v27 = a2;
    uint64_t v25 = (char *)(a2 + 32);
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v28 = v12;
    uint64_t v29 = v10 - 1;
    while (1)
    {
      if (v36)
      {
        id v15 = (id)MEMORY[0x1CB798560](v13, v27);
      }
      else
      {
        if (v13 >= *(void *)(v26 + 16)) {
          goto LABEL_35;
        }
        id v15 = *(id *)&v25[8 * v13];
      }
      a2 = (unint64_t)v15;
      id v16 = v5;
      id v5 = (id)a2;
      sub_1CA5B6FE8(a3, a4);
      sub_1CA5B73D4(v16, v5, a3, a4, v33);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v14;
      }
      sub_1CA5B8524((uint64_t)v33, (uint64_t)v34);
      if (*((void *)&v34[0] + 1) >> 60 == 15)
      {
        long long v30 = 0u;
        long long v31 = 0u;
      }
      else
      {
        *((void *)&v31 + 1) = &type metadata for AssociatedReader;
        uint64_t v17 = swift_allocObject();
        *(void *)&long long v30 = v17;
        long long v18 = v34[1];
        long long v19 = v34[2];
        *(_OWORD *)(v17 + 16) = v34[0];
        *(_OWORD *)(v17 + 32) = v18;
        *(_OWORD *)(v17 + 48) = v19;
        *(void *)(v17 + 64) = v35;
      }

      if (*((void *)&v31 + 1))
      {
        sub_1CA5B6F4C(&v30, v32);
        sub_1CA5B6F4C(v32, &v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_1CA5C4A28(0, v14[2] + 1, 1, v14);
        }
        a2 = v14[2];
        unint64_t v20 = v14[3];
        if (a2 >= v20 >> 1) {
          uint64_t v14 = sub_1CA5C4A28((void *)(v20 > 1), a2 + 1, 1, v14);
        }
        v14[2] = a2 + 1;
        sub_1CA5B6F4C(&v30, &v14[4 * a2 + 4]);
      }
      else
      {
        sub_1CA5B858C((uint64_t)&v30);
      }
      if (v29 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
      unint64_t v21 = v13 + 1;
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v22 = (id)MEMORY[0x1CB798560](v13 + 1, a1);
      }
      else
      {
        if (v21 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        id v22 = *(id *)(a1 + 40 + 8 * v13);
      }
      id v5 = v22;
      if (__OFADD__(v21, 1)) {
        break;
      }
      if (v28 == ++v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v14;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t *sub_1CA5B8374(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  a2(*a1, a1[1]);
  a2(v4, v5);
  a2(v6, v7);
  return a1;
}

uint64_t sub_1CA5B83E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CA5B8440(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a2 >> 60 != 15)
  {
    sub_1CA5B6EF4(result, a2);
    sub_1CA5B6EF4(a4, a5);
    return sub_1CA5B6EF4(a6, a7);
  }
  return result;
}

uint64_t sub_1CA5B84AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1CA5B84E8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA5B84FC(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA5B8510(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1CA5B6FE8(a1, a2);
  }
  return a1;
}

uint64_t sub_1CA5B8524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA5B858C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608748);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CA5B85EC()
{
  sub_1CA5B6EF4(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1CA5B6EF4(*(void *)(v0 + 40), *(void *)(v0 + 48));
  sub_1CA5B6EF4(*(void *)(v0 + 56), *(void *)(v0 + 64));

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1CA5B8634(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_1CA5B868C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1CA5B86D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608768);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1CA602380;
    uint64_t v5 = sub_1CA5FD8A8();
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_1CA5FD8A8();
    *(void *)(v4 + 88) = v6;
    *(void *)(v4 + 64) = v8;
    *(void *)(v4 + 72) = v9;
    *(void *)(v4 + 96) = sub_1CA5FD8A8();
    *(void *)(v4 + 104) = v10;
    *(void *)(v4 + 152) = v6;
    *(void *)(v4 + 120) = v6;
    *(void *)(v4 + 128) = a1;
    *(void *)(v4 + 136) = a2;
    sub_1CA5B8C5C();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608768);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1CA6021C0;
    uint64_t v12 = sub_1CA5FD8A8();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    uint64_t v15 = sub_1CA5FD8A8();
    *(void *)(v11 + 88) = v13;
    *(void *)(v11 + 64) = v15;
    *(void *)(v11 + 72) = v16;
    sub_1CA5B8C5C();
  }
  return sub_1CA5FD9B8();
}

uint64_t sub_1CA5B8800()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1CA5FDD48();
  sub_1CA5FDD58();
  if (v1) {
    sub_1CA5FD8D8();
  }
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5B8870()
{
  if (!*(void *)(v0 + 8)) {
    return sub_1CA5FDD58();
  }
  sub_1CA5FDD58();

  return sub_1CA5FD8D8();
}

uint64_t sub_1CA5B88E8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1CA5FDD48();
  sub_1CA5FDD58();
  if (v1) {
    sub_1CA5FD8D8();
  }
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5B8954(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_1CA5FDCB8();
  }
}

uint64_t sub_1CA5B89A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v4;
  uint64_t v21 = v12;
  *uint64_t v6 = 0x8000000000000000;
  unint64_t v14 = sub_1CA5F1A20(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v5 = v13;
  if (*(void *)(v12 + 24) >= v17)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_12:
    sub_1CA5E34FC();
    uint64_t v12 = v21;
    goto LABEL_6;
  }
  sub_1CA5E2354(v17, isUniquelyReferenced_nonNull_native);
  uint64_t v12 = v21;
  uint64_t v18 = sub_1CA5F1A20(a3, a4);
  if ((v5 & 1) != (v19 & 1))
  {
    uint64_t result = sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v18;
LABEL_6:
  *uint64_t v6 = v12;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_1CA5E3120(v14, a3, a4, MEMORY[0x1E4FBC870], (void *)*v6);
    swift_bridgeObjectRetain();
  }
  sub_1CA5E3A20(&v21, a1, a2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA5B8B28(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v2 = result + 56;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v8 = v7 | (v1 << 6);
LABEL_5:
    if (*(void *)(*(void *)(result + 48) + 16 * v8 + 8)) {
      return 1;
    }
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v9 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v1;
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 1;
  if (v9 + 1 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 2;
  if (v9 + 2 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 3;
  if (v9 + 3 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10) {
    goto LABEL_24;
  }
  int64_t v1 = v9 + 4;
  if (v9 + 4 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v1);
  if (v10)
  {
LABEL_24:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v6) {
    return 0;
  }
  unint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v1 = v11;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v1 >= v6) {
      return 0;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v1);
    ++v11;
    if (v10) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1CA5B8C5C()
{
  unint64_t result = qword_1EA6083D8;
  if (!qword_1EA6083D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6083D8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ExpressModeRejectedPass.Conflict(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ExpressModeRejectedPass.Conflict()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ExpressModeRejectedPass.Conflict(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ExpressModeRejectedPass.Conflict(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressModeRejectedPass.Conflict(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ExpressModeRejectedPass.Conflict(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1CA5B8DFC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1CA5B8E18(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressModeRejectedPass.Conflict()
{
  return &type metadata for ExpressModeRejectedPass.Conflict;
}

uint64_t destroy for ExpressModeRejectedPass()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s24AppletTranslationLibrary23ExpressModeRejectedPassVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExpressModeRejectedPass(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExpressModeRejectedPass(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressModeRejectedPass(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpressModeRejectedPass(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressModeRejectedPass()
{
  return &type metadata for ExpressModeRejectedPass;
}

unint64_t sub_1CA5B9014()
{
  unint64_t result = qword_1EA608770;
  if (!qword_1EA608770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608770);
  }
  return result;
}

uint64_t Data.popPrefix(_:)(uint64_t a1)
{
  if (a1 < 0)
  {
LABEL_10:
    sub_1CA5BA220();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v2 = *(void *)v1;
    unint64_t v3 = *(void *)(v1 + 8);
    switch(v3 >> 62)
    {
      case 1uLL:
        LODWORD(v5) = HIDWORD(v2) - v2;
        if (__OFSUB__(HIDWORD(v2), v2))
        {
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x1CA5B918CLL);
        }
        uint64_t v5 = (int)v5;
LABEL_7:
        if (v5 < a1) {
          goto LABEL_10;
        }
LABEL_8:
        sub_1CA5B6FE8(*(void *)v1, *(void *)(v1 + 8));
        sub_1CA5B9ED4(a1, v2, v3, (uint64_t *)&v11);
        long long v9 = v11;
        sub_1CA5BA070(a1, v2, v3, (uint64_t *)&v11);
        *(_OWORD *)uint64_t v1 = v11;
        uint64_t result = sub_1CA5B94D4(v9, *((unint64_t *)&v9 + 1));
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(v2 + 16);
        uint64_t v6 = *(void *)(v2 + 24);
        BOOL v8 = __OFSUB__(v6, v7);
        uint64_t v5 = v6 - v7;
        if (!v8) {
          goto LABEL_7;
        }
        goto LABEL_12;
      case 3uLL:
        if (a1) {
          goto LABEL_10;
        }
        goto LABEL_8;
      default:
        uint64_t v5 = BYTE6(v3);
        goto LABEL_7;
    }
  }
  return result;
}

BOOL sub_1CA5B919C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6087B8);
  MEMORY[0x1F4188790]();
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1CA5B6FE8(a1, a2);
      sub_1CA5B6FE8(a1, a2);
      break;
    default:
      break;
  }
  sub_1CA5B6FE8(a3, a4);
  sub_1CA5FD608();
  sub_1CA5B6EF4(a1, a2);
  switch(a4 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1CA5B6FE8(a3, a4);
      break;
    default:
      break;
  }
  unint64_t v25 = a4 >> 62;
  sub_1CA5FD608();
  unint64_t v26 = a4;
  uint64_t v27 = a3;
  sub_1CA5B6EF4(a3, a4);
  uint64_t v11 = *(int *)(v8 + 56);
  v10[v11] = 0;
  sub_1CA5FD5F8();
  sub_1CA5BA680();
  while (1)
  {
    sub_1CA5FDA58();
    if (v31) {
      break;
    }
    int v12 = v30;
    sub_1CA5FDA58();
    if (v29 == 1) {
      break;
    }
    if (v28 != v12)
    {
      int v13 = (char)v28;
      sub_1CA5BA6F0((uint64_t)v10, &qword_1EA6087B8);
      return v12 < v13;
    }
  }
  v10[v11] = 1;
  sub_1CA5BA6F0((uint64_t)v10, &qword_1EA6087B8);
  uint64_t v15 = 0;
  switch((int)v24)
  {
    case 1:
      LODWORD(v15) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x1CA5B9494);
      }
      uint64_t v15 = (int)v15;
LABEL_15:
      uint64_t v19 = 0;
      switch((int)v25)
      {
        case 1:
          LODWORD(v19) = HIDWORD(v27) - v27;
          if (__OFSUB__(HIDWORD(v27), v27)) {
            goto LABEL_27;
          }
          uint64_t v19 = (int)v19;
LABEL_20:
          BOOL v14 = v15 < v19;
          break;
        case 2:
          uint64_t v21 = *(void *)(v27 + 16);
          uint64_t v20 = *(void *)(v27 + 24);
          BOOL v18 = __OFSUB__(v20, v21);
          uint64_t v19 = v20 - v21;
          if (!v18) {
            goto LABEL_20;
          }
          goto LABEL_28;
        case 3:
          goto LABEL_20;
        default:
          uint64_t v19 = BYTE6(v26);
          goto LABEL_20;
      }
      break;
    case 2:
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v16 = *(void *)(a1 + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_15;
      }
      goto LABEL_26;
    case 3:
      goto LABEL_15;
    default:
      uint64_t v15 = BYTE6(a2);
      goto LABEL_15;
  }
  return v14;
}

uint64_t sub_1CA5B94D4(uint64_t a1, unint64_t a2)
{
  v28[5] = *MEMORY[0x1E4F143B8];
  v28[3] = MEMORY[0x1E4F277C0];
  v28[4] = MEMORY[0x1E4F277B0];
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1Tm(v28, MEMORY[0x1E4F277C0]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_1CA5B6FE8(a1, a2);
      sub_1CA5B6FE8(v5, v6);
      uint64_t v8 = (unsigned char *)sub_1CA5FD408();
      if (v8)
      {
        uint64_t v9 = sub_1CA5FD428();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_1CA5FD418();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      int v12 = &v8[v11];
      if (v8) {
        int v13 = v12;
      }
      else {
        int v13 = 0;
      }
      sub_1CA5F19A8(v8, v13, &v27);
      sub_1CA5B6EF4(v5, v6);
LABEL_27:
      sub_1CA5B6EF4(a1, a2);
      uint64_t v24 = v27;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_1CA5B6FE8(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)sub_1CA5FD408();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_1CA5FD428();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_1CA5FD418();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      id v22 = &v16[v21];
      if (v16) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_1CA5F19A8(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_1CA5B6FE8(a1, a2);
      uint64_t v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_1CA5B6FE8(a1, a2);
      uint64_t v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_1CA5F19A8(v26, v7, &v27);
      goto LABEL_27;
  }
}

uint64_t sub_1CA5B9788(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x1E4FBB2B8];
  v8[4] = MEMORY[0x1E4F27EF0];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1Tm(v8, MEMORY[0x1E4FBB2B8]);
  unint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_1CA5F27D4(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_1CA5F2898((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_1CA5F2914((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  return v6;
}

uint64_t sub_1CA5B9844(uint64_t a1)
{
  v47[5] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608780);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608788);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608790);
  uint64_t v11 = MEMORY[0x1F4188790](v42);
  int v13 = (void *)((char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (void *)((char *)v38 - v14);
  *(void *)&long long v44 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608798);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6087A0);
  if (swift_dynamicCast())
  {
    sub_1CA5BA6D8(v45, (uint64_t)v47);
    __swift_project_boxed_opaque_existential_1Tm(v47, v47[3]);
    sub_1CA5FD458();
    swift_bridgeObjectRelease();
    v45[0] = v44;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v47);
    return *(void *)&v45[0];
  }
  v38[1] = 0;
  uint64_t v46 = 0;
  memset(v45, 0, sizeof(v45));
  sub_1CA5BA6F0((uint64_t)v45, &qword_1EA6087A8);
  uint64_t v41 = (char *)v38;
  v45[0] = xmmword_1CA6021D0;
  uint64_t v40 = *(int *)(v8 + 48);
  *int v13 = a1;
  v13[1] = 0;
  uint64_t v16 = (char *)v13 + *(int *)(v42 + 44);
  uint64_t v17 = a1;
  uint64_t v18 = sub_1CA5FD5F8();
  uint64_t v39 = *(void *)(v18 - 8);
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v43(v16, 1, 1, v18);
  sub_1CA5BA548((uint64_t)v13, (uint64_t)v10);
  *(void *)&v10[v40] = 0;
  uint64_t v40 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = *(void *)&v10[*(int *)(v8 + 48)];
  sub_1CA5BA548((uint64_t)v10, (uint64_t)v15);
  uint64_t v20 = *((void *)&v45[0] + 1) >> 62;
  switch(*((void *)&v45[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v21) = DWORD1(v45[0]) - LODWORD(v45[0]);
      if (__OFSUB__(DWORD1(v45[0]), v45[0])) {
        goto LABEL_39;
      }
      uint64_t v21 = (int)v21;
LABEL_8:
      if (v19 != v21)
      {
        if (v20)
        {
          if (v20 == 1)
          {
            if (*(uint64_t *)&v45[0] >> 32 < v19) {
              goto LABEL_37;
            }
          }
          else if (*(void *)(*(void *)&v45[0] + 24) < v19)
          {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v25 = BYTE14(v45[0]);
LABEL_32:
          if (v25 < v19)
          {
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
          }
        }
        sub_1CA5FD538();
        sub_1CA5BA6F0((uint64_t)v15, &qword_1EA608790);
        goto LABEL_34;
      }
LABEL_15:
      uint64_t v26 = 0;
      memset(v47, 0, 15);
      uint64_t v27 = (uint64_t)v15 + *(int *)(v42 + 44);
      unsigned __int8 v28 = (uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
      uint64_t v41 = (char *)&v44 + 14;
LABEL_16:
      uint64_t v42 = v26;
      while (1)
      {
        sub_1CA5BA5B0(v27, (uint64_t)v7);
        char v29 = *v28;
        unsigned int v30 = (*v28)(v7, 1, v18);
        sub_1CA5BA6F0((uint64_t)v7, &qword_1EA608780);
        if (v30 != 1)
        {
          if (v29((char *)v27, 1, v18) == 1) {
            goto LABEL_42;
          }
          sub_1CA5BA680();
          sub_1CA5FDA58();
          if (BYTE1(v44) != 1)
          {
            int v36 = v42;
            *((unsigned char *)v47 + v42) = v44;
            uint64_t v26 = (v36 + 1);
            if ((v26 >> 8)) {
              goto LABEL_41;
            }
            BYTE6(v47[1]) = v36 + 1;
            if ((v36 + 1) == 14)
            {
              *(void *)&long long v44 = v47[0];
              DWORD2(v44) = v47[1];
              WORD6(v44) = WORD2(v47[1]);
              sub_1CA5FD548();
              uint64_t v26 = 0;
              BYTE6(v47[1]) = 0;
            }
            goto LABEL_16;
          }
        }
        unint64_t v31 = v15[1];
        unint64_t v32 = *(void *)(*v15 + 16);
        if (v31 == v32) {
          break;
        }
        if (v31 >= v32) {
          goto LABEL_38;
        }
        uint64_t v33 = *v15 + 16 * v31;
        uint64_t v34 = *(void *)(v33 + 32);
        unint64_t v35 = *(void *)(v33 + 40);
        v15[1] = v31 + 1;
        switch(v35 >> 62)
        {
          case 1uLL:
          case 2uLL:
            sub_1CA5B6FE8(v34, v35);
            sub_1CA5B6FE8(v34, v35);
            sub_1CA5B6FE8(v34, v35);
            break;
          default:
            break;
        }
        sub_1CA5FD608();
        sub_1CA5B6EF4(v34, v35);
        sub_1CA5B6EF4(v34, v35);
        v43(v5, 0, 1, v18);
        sub_1CA5BA618((uint64_t)v5, v27);
      }
      if ((_BYTE)v42)
      {
        *(void *)&long long v44 = v47[0];
        DWORD2(v44) = v47[1];
        WORD6(v44) = WORD2(v47[1]);
        sub_1CA5FD548();
      }
      sub_1CA5BA6F0((uint64_t)v15, &qword_1EA608790);
LABEL_34:
      swift_bridgeObjectRelease();
      return *(void *)&v45[0];
    case 2:
      uint64_t v23 = *(void *)(*(void *)&v45[0] + 16);
      uint64_t v22 = *(void *)(*(void *)&v45[0] + 24);
      BOOL v24 = __OFSUB__(v22, v23);
      uint64_t v21 = v22 - v23;
      if (!v24) {
        goto LABEL_8;
      }
      goto LABEL_40;
    case 3:
      if (!v19) {
        goto LABEL_15;
      }
      uint64_t v25 = 0;
      goto LABEL_32;
    default:
      uint64_t v21 = BYTE14(v45[0]);
      goto LABEL_8;
  }
}

uint64_t sub_1CA5B9ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1CA5EA2D8(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_1CA5C0AE8(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x1CA5BA040);
  }
LABEL_16:
  uint64_t v14 = sub_1CA5FD558();
  uint64_t v16 = v15;
  uint64_t result = sub_1CA5B6EF4(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_1CA5BA070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1CA5EA2D8(v10, v9, a2, a3);
  if (!a1 || v11 < 0 || v11 >= a1)
  {
    uint64_t v12 = sub_1CA5C0AE8(v10, a1, a2, a3);
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 1:
        uint64_t v13 = a2 >> 32;
        break;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        break;
      case 3:
        break;
      default:
        uint64_t v13 = BYTE6(a3);
        break;
    }
    if (v13 < v12)
    {
LABEL_16:
      __break(1u);
      JUMPOUT(0x1CA5BA1F0);
    }
  }
  uint64_t v14 = sub_1CA5FD558();
  uint64_t v16 = v15;
  uint64_t result = sub_1CA5B6EF4(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

unint64_t sub_1CA5BA220()
{
  unint64_t result = qword_1EA608778;
  if (!qword_1EA608778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608778);
  }
  return result;
}

Swift::UInt8 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.safePopFirst()()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      BOOL v3 = __OFSUB__(HIDWORD(v1), v1);
      LODWORD(v1) = HIDWORD(v1) - v1;
      if (v3)
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1CA5BA328);
      }
      uint64_t v1 = (int)v1;
LABEL_6:
      if (v1 >= 1) {
        return sub_1CA5BA338();
      }
LABEL_8:
      sub_1CA5BA220();
      swift_allocError();
      return swift_willThrow();
    case 2uLL:
      uint64_t v6 = v1 + 16;
      uint64_t v4 = *(void *)(v1 + 16);
      uint64_t v5 = *(void *)(v6 + 8);
      BOOL v3 = __OFSUB__(v5, v4);
      uint64_t v1 = v5 - v4;
      if (!v3) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v1 = BYTE6(v2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5BA338()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = v2 >> 62;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)v1;
      uint64_t v5 = v1 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v4 = *(void *)(v1 + 16);
      uint64_t v5 = *(void *)(v1 + 24);
      goto LABEL_5;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v4 = 0;
      uint64_t v5 = BYTE6(v2);
LABEL_5:
      if (v4 == v5) {
        goto LABEL_17;
      }
      uint64_t v6 = sub_1CA5F4158(*(void *)v0, *(void *)(v0 + 8));
      if ((v6 & 0x100) != 0) {
        goto LABEL_16;
      }
      uint64_t v7 = v6;
      if (v3)
      {
        if (v3 == 1)
        {
          uint64_t v8 = (int)v1 + 1;
          uint64_t v9 = v1 >> 32;
        }
        else
        {
          uint64_t v10 = *(void *)(v1 + 16);
          uint64_t v8 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
LABEL_16:
            __break(1u);
LABEL_17:
            __break(1u);
LABEL_18:
            __break(1u);
            JUMPOUT(0x1CA5BA440);
          }
          uint64_t v9 = *(void *)(v1 + 24);
        }
      }
      else
      {
        uint64_t v9 = BYTE6(v2);
        uint64_t v8 = 1;
      }
      if (v9 < v8) {
        goto LABEL_18;
      }
      uint64_t v11 = sub_1CA5FD558();
      uint64_t v13 = v12;
      sub_1CA5B6EF4(v1, v2);
      *(void *)uint64_t v0 = v11;
      *(void *)(v0 + 8) = v13;
      return v7;
  }
}

uint64_t sub_1CA5BA450(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4228);
  unint64_t v10 = sub_1CA5BA4EC();
  v8[0] = a1;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1Tm(v8, v9);
  unint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1CA5F19A8(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  return v5;
}

unint64_t sub_1CA5BA4EC()
{
  unint64_t result = qword_1EBCB4230;
  if (!qword_1EBCB4230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB4228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBCB4230);
  }
  return result;
}

uint64_t sub_1CA5BA548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA5BA5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA5BA618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CA5BA680()
{
  unint64_t result = qword_1EA6087B0;
  if (!qword_1EA6087B0)
  {
    sub_1CA5FD5F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6087B0);
  }
  return result;
}

uint64_t sub_1CA5BA6D8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1CA5BA6F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1CA5BA74C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MetroStateMonitor()) init];
  qword_1EA60A488 = (uint64_t)result;
  return result;
}

unsigned char *sub_1CA5BA868@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1CA5BA874(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_state);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 20));
  sub_1CA5BB4C4((unsigned char *)(v5 + 16), v13);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 20));
  int v6 = LOBYTE(v13[0]);
  uint64_t result = swift_release();
  if (v6 == 1)
  {
    if (qword_1EA608698 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1CA5FD648();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EA6087C0);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1CA5FD628();
    os_log_type_t v10 = sub_1CA5FDA08();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v13[0] = v12;
      *(_DWORD *)uint64_t v11 = 67109378;
      sub_1CA5FDA68();
      *(_WORD *)(v11 + 8) = 2080;
      swift_bridgeObjectRetain();
      sub_1CA5DDA20(a1, a2, v13);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CA552000, v9, v10, "Metro state changed -> %{BOOL}d : %s", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v12, -1, -1);
      MEMORY[0x1CB799300](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return notify_post("com.apple.private.atl.metro.state.changed");
  }
  return result;
}

id sub_1CA5BAB0C()
{
  uint64_t v1 = sub_1CA5FD678();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1CA5FD6A8();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1CA5FD688();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_state;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6087F0);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 20) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  *(void *)&v0[v12] = v13;
  *(void *)&v0[OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_userDefaults] = 0;
  uint64_t v14 = &v0[OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_subscriber];
  uint64_t v15 = (objc_class *)type metadata accessor for MetroStateMonitor();
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v28.receiver = v0;
  v28.super_class = v15;
  id v16 = [super init];
  self;
  id v17 = v16;
  if (+[AppletTranslator isInternalBuild]())
  {
    sub_1CA5BB4E0();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCB48], v8);
    uint64_t v23 = sub_1CA5FDA28();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    aBlock[4] = sub_1CA5BB558;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CA5BB2B4;
    aBlock[3] = &block_descriptor;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v17;
    sub_1CA5FD698();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1CA5BB578();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608808);
    sub_1CA5B8634(&qword_1EA608810, &qword_1EA608808);
    sub_1CA5FDAB8();
    uint64_t v21 = (void *)v23;
    MEMORY[0x1CB798420](0, v7, v4, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    swift_release();
  }
  else
  {
  }
  return v17;
}

void sub_1CA5BAEFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608818);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  self;
  id v6 = +[AppletTranslator userDefaults]();
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_userDefaults);
  *(void *)(a1 + OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_userDefaults) = v6;
  id v8 = v6;

  swift_getKeyPath();
  sub_1CA5FD4D8();
  swift_release();
  sub_1CA5B8634(&qword_1EA608820, &qword_1EA608818);
  uint64_t v9 = sub_1CA5FD668();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  void v12[3] = sub_1CA5FD658();
  v12[0] = v9;
  uint64_t v10 = a1 + OBJC_IVAR____TtC24AppletTranslationLibrary17MetroStateMonitor_subscriber;
  swift_beginAccess();
  sub_1CA5BB610((uint64_t)v12, v10);
  swift_endAccess();
}

uint64_t sub_1CA5BB0C8(unsigned __int8 *a1)
{
  int v1 = *a1;
  if (qword_1EA608698 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1CA5FD648();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA6087C0);
  uint64_t v3 = sub_1CA5FD628();
  os_log_type_t v4 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v10 = v6;
    if (v1) {
      uint64_t v7 = 1702195828;
    }
    else {
      uint64_t v7 = 0x65736C6166;
    }
    if (v1) {
      unint64_t v8 = 0xE400000000000000;
    }
    else {
      unint64_t v8 = 0xE500000000000000;
    }
    sub_1CA5DDA20(v7, v8, &v10);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v3, v4, "Debug override state to --> %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v6, -1, -1);
    MEMORY[0x1CB799300](v5, -1, -1);
  }

  if (qword_1EA608690 != -1) {
    swift_once();
  }
  return sub_1CA5BA874(0x6775626544, 0xE500000000000000);
}

uint64_t sub_1CA5BB2B4(uint64_t a1)
{
  int v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_1CA5BB31C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetroStateMonitor();
  return [super dealloc];
}

uint64_t type metadata accessor for MetroStateMonitor()
{
  return self;
}

uint64_t sub_1CA5BB3D0()
{
  uint64_t v0 = sub_1CA5FD648();
  __swift_allocate_value_buffer(v0, qword_1EA6087C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA6087C0);
  return sub_1CA5FD638();
}

id sub_1CA5BB454(void *a1)
{
  id v1 = a1;
  objc_super v2 = (void *)sub_1CA5FD898();
  id v3 = [v1 sel_BOOLForKey_:v2];

  return v3;
}

unsigned char *sub_1CA5BB4C4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *(unsigned char *)(v2 + 16);
  char v4 = v3 ^ *result;
  *uint64_t result = v3;
  *a2 = v4 & 1;
  return result;
}

unint64_t sub_1CA5BB4E0()
{
  unint64_t result = qword_1EA6087F8;
  if (!qword_1EA6087F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6087F8);
  }
  return result;
}

uint64_t sub_1CA5BB520()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1CA5BB558()
{
  sub_1CA5BAEFC(*(void *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1CA5BB578()
{
  unint64_t result = qword_1EA608800;
  if (!qword_1EA608800)
  {
    sub_1CA5FD678();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608800);
  }
  return result;
}

char *keypath_get_selector_debugMetroStateValue()
{
  return sel_debugMetroStateValue;
}

id sub_1CA5BB5DC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 sel_debugMetroStateValue];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1CA5BB610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA5BB678(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1CA5FD808();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1CA5FD6F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA5BBCA4(&qword_1EA608828, MEMORY[0x1E4F25170]);
  sub_1CA5FD6D8();
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v18 = v8;
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      uint64_t v17 = 0;
      sub_1CA5B6FE8(a1, a2);
      sub_1CA5F2698((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v6);
      sub_1CA5B6EF4(a1, a2);
      uint64_t v8 = v18;
      goto LABEL_9;
    case 2uLL:
      uint64_t v17 = 0;
      uint64_t v18 = v8;
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      sub_1CA5B6FE8(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v13 = v12;
      uint64_t v8 = v18;
      sub_1CA5F2698(v13, v11, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v6);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v21, 0, 14);
      goto LABEL_7;
    default:
      v21[0] = a1;
      LOWORD(v21[1]) = a2;
      BYTE2(v21[1]) = BYTE2(a2);
      BYTE3(v21[1]) = BYTE3(a2);
      BYTE4(v21[1]) = BYTE4(a2);
      BYTE5(v21[1]) = BYTE5(a2);
LABEL_7:
      sub_1CA5FD6B8();
LABEL_8:
      sub_1CA5B6EF4(a1, a2);
LABEL_9:
      sub_1CA5FD6C8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      uint64_t v22 = v7;
      uint64_t v23 = sub_1CA5BBCA4(&qword_1EA608830, MEMORY[0x1E4F24F80]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
      __swift_project_boxed_opaque_existential_1Tm(v21, v22);
      sub_1CA5FD458();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v15 = v20;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      return v15;
  }
}

uint64_t sub_1CA5BBAB8@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)a1;
      uint64_t v7 = (int)a1 + a3;
      if (!__OFADD__((int)a1, a3)) {
        goto LABEL_6;
      }
      __break(1u);
LABEL_5:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = v6 + a3;
      if (__OFADD__(v6, a3)) {
        goto LABEL_13;
      }
LABEL_6:
      BOOL v8 = __OFADD__(v6, a3);
      uint64_t v9 = v6 + a3;
      if (v8)
      {
        __break(1u);
        goto LABEL_11;
      }
      BOOL v8 = __OFADD__(v9, a4);
      uint64_t v10 = v9 + a4;
      if (v8)
      {
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
      if (v10 < v7)
      {
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x1CA5BBBC8);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608838);
      sub_1CA5BBCEC();
      sub_1CA5BBD40();
      uint64_t result = sub_1CA5FD3E8();
      *a5 = result;
      return result;
    case 2uLL:
      goto LABEL_5;
    default:
      goto LABEL_6;
  }
}

uint64_t sub_1CA5BBBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void v14[3] = MEMORY[0x1E4FBB2B8];
  v14[4] = MEMORY[0x1E4F27EF0];
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1Tm(v14, MEMORY[0x1E4FBB2B8]);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (v6 = (unsigned char *)v4[1], uint64_t v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_1CA5F27D4(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_1CA5F2898((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_1CA5F2914((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t sub_1CA5BBCA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA5BBCEC()
{
  unint64_t result = qword_1EA608840;
  if (!qword_1EA608840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608840);
  }
  return result;
}

unint64_t sub_1CA5BBD40()
{
  unint64_t result = qword_1EA608848;
  if (!qword_1EA608848)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA608838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608848);
  }
  return result;
}

id sub_1CA5BBD9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1CA5F0C20(MEMORY[0x1E4FBC860]);
  if (a2)
  {
    uint64_t v8 = sub_1CA5FD8A8();
    uint64_t v10 = v9;
    unint64_t v25 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v24 = a1;
    *((void *)&v24 + 1) = a2;
    sub_1CA5B6F4C(&v24, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA5E2C84(v23, v8, v10, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a4)
  {
    uint64_t v12 = sub_1CA5FD8A8();
    uint64_t v14 = v13;
    id v15 = a4;
    uint64_t v16 = sub_1CA5FD4A8();
    unint64_t v25 = sub_1CA5BC514();
    *(void *)&long long v24 = v16;
    sub_1CA5B6F4C(&v24, v23);
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA5E2C84(v23, v12, v14, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v19 = (void *)sub_1CA5FD898();
  uint64_t v20 = (void *)sub_1CA5FD838();
  swift_bridgeObjectRelease();
  id v21 = [v18 initWithDomain:v19 code:a3 userInfo:v20];

  return v21;
}

uint64_t static DataAccessError.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t DataAccessError.hash(into:)()
{
  return sub_1CA5FDD58();
}

uint64_t DataAccessError.hashValue.getter()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BBFF4()
{
  return 1;
}

uint64_t sub_1CA5BBFFC()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC040()
{
  return sub_1CA5FDD58();
}

uint64_t sub_1CA5BC068()
{
  return sub_1CA5FDD78();
}

uint64_t static ATLError._nsErrorDomain.getter()
{
  return 0x412E436A624F5F5FLL;
}

unint64_t sub_1CA5BC0E0()
{
  unint64_t result = qword_1EA608850;
  if (!qword_1EA608850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608850);
  }
  return result;
}

uint64_t sub_1CA5BC134(uint64_t a1)
{
  uint64_t v2 = sub_1CA5BC4D0(&qword_1EA608708);

  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1CA5BC18C(uint64_t a1)
{
  uint64_t v2 = sub_1CA5BC4D0(&qword_1EA608708);

  return MEMORY[0x1F40E3BA0](a1, v2);
}

uint64_t sub_1CA5BC1E4()
{
  return sub_1CA5BC4D0(&qword_1EA608858);
}

uint64_t sub_1CA5BC218()
{
  return sub_1CA5BC4D0(&qword_1EA608860);
}

uint64_t sub_1CA5BC24C()
{
  return sub_1CA5BC4D0(&qword_1EA608868);
}

unint64_t sub_1CA5BC284()
{
  unint64_t result = qword_1EA608870;
  if (!qword_1EA608870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608870);
  }
  return result;
}

uint64_t sub_1CA5BC2D8()
{
  return 0x412E436A624F5F5FLL;
}

uint64_t sub_1CA5BC2FC()
{
  return sub_1CA5BC4D0((unint64_t *)&qword_1EA608730);
}

uint64_t sub_1CA5BC330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1CA5BC4D0(&qword_1EA608708);

  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

uint64_t getEnumTagSinglePayload for DataAccessError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DataAccessError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1CA5BC490);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CA5BC4B8()
{
  return 0;
}

ValueMetadata *type metadata accessor for DataAccessError()
{
  return &type metadata for DataAccessError;
}

uint64_t sub_1CA5BC4D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ATLError(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA5BC514()
{
  unint64_t result = qword_1EA6086E8;
  if (!qword_1EA6086E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6086E8);
  }
  return result;
}

uint64_t sub_1CA5BC554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = a2 >> 32;
      uint64_t v8 = (int)a2;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v8 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v10 = -a1;
  uint64_t v11 = sub_1CA5EA2D8(v9, v8, a2, a3);
  if (v11 <= 0 && v11 > v10)
  {
    uint64_t v12 = v5;
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = (int)a2;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 16);
        goto LABEL_14;
      case 3:
        goto LABEL_16;
      default:
        goto LABEL_11;
    }
  }
  uint64_t v12 = sub_1CA5C0AE8(v9, v10, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = a2 >> 32;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 24);
      break;
    case 3:
      break;
    default:
LABEL_11:
      uint64_t v13 = BYTE6(a3);
      break;
  }
  if (v13 < v12)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x1CA5BC6C8);
  }
LABEL_16:
  uint64_t v14 = sub_1CA5FD558();
  uint64_t v16 = v15;
  uint64_t result = sub_1CA5B6EF4(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

BOOL sub_1CA5BC6F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CA5C17B8(*a1, *a2);
}

BOOL sub_1CA5BC704(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1CA5BC71C()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC76C()
{
  return sub_1CA5FDD68();
}

uint64_t sub_1CA5BC7A4()
{
  return sub_1CA5FDD78();
}

unsigned __int8 *sub_1CA5BC7F0@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  if (v2 == 2) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (v2 == 1) {
    char v4 = 0;
  }
  else {
    char v4 = v3;
  }
  *a2 = v4;
  return result;
}

void sub_1CA5BC810(char *a1@<X8>)
{
  if (*v1) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  *a1 = v2;
}

uint64_t sub_1CA5BC828()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC870()
{
  return sub_1CA5FDD68();
}

uint64_t sub_1CA5BC8A0()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC8E4@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1CA5C1918(*a1);
  *a2 = result;
  return result;
}

void sub_1CA5BC910(unsigned char *a1@<X8>)
{
  *a1 = *v1 + 1;
}

BOOL sub_1CA5BC920(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CA5BC934()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC97C()
{
  return sub_1CA5FDD68();
}

uint64_t sub_1CA5BC9A8()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BC9EC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1CA5C1944(*a1);
  *a2 = result;
  return result;
}

void sub_1CA5BCA18(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1CA5BCA24(char *a1, char *a2)
{
  return asc_1CA60C1AB[*a1] == asc_1CA60C1AB[*a2];
}

uint64_t sub_1CA5BCA48()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BCA98()
{
  return sub_1CA5FDD68();
}

uint64_t sub_1CA5BCAD0()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5BCB1C@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1CA5C1DC8(*a1);
  *a2 = result;
  return result;
}

void sub_1CA5BCB48(unsigned char *a1@<X8>)
{
  *a1 = asc_1CA60C1AB[*v1];
}

uint64_t sub_1CA5BCB60()
{
  sub_1CA5C1958(v0, &v6);
  uint64_t result = (v9 >> 60) & 3 | (4 * v11);
  switch((v9 >> 60) & 3 | (4 * v11))
  {
    case 1uLL:
      if (v6) {
        uint64_t result = 1;
      }
      else {
        uint64_t result = 2;
      }
      break;
    case 2uLL:
      if ((v7 & 0x10000) != 0)
      {
        uint64_t result = 3;
      }
      else if (BYTE3(v7))
      {
        uint64_t result = 4;
      }
      else
      {
        uint64_t result = 5;
      }
      break;
    case 3uLL:
      uint64_t result = 8;
      break;
    case 4uLL:
      uint64_t result = 9;
      break;
    case 5uLL:
      uint64_t result = 10;
      break;
    case 6uLL:
      uint64_t result = 11;
      break;
    case 7uLL:
      uint64_t result = 13;
      break;
    case 8uLL:
      uint64_t result = 14;
      break;
    case 9uLL:
      uint64_t result = 15;
      break;
    case 10uLL:
      uint64_t result = 16;
      break;
    case 11uLL:
      uint64_t result = 17;
      break;
    case 12uLL:
      if (v10) {
        BOOL v2 = 0;
      }
      else {
        BOOL v2 = (v9 | (unint64_t)v6 | v8 | v7 | *((void *)&v6 + 1)) == 0;
      }
      if (v2)
      {
        uint64_t result = 6;
      }
      else
      {
        uint64_t v3 = v8 | v9 | v7 | *((void *)&v6 + 1);
        if (v10 || (void)v6 != 1 || v3)
        {
          if (v10 || (void)v6 != 2 || v3)
          {
            if (v3) {
              BOOL v4 = 0;
            }
            else {
              BOOL v4 = (void)v6 == 3;
            }
            if (v4 && v10 == 0) {
              uint64_t result = 18;
            }
            else {
              uint64_t result = 19;
            }
          }
          else
          {
            uint64_t result = 12;
          }
        }
        else
        {
          uint64_t result = 7;
        }
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CA5BCCF0(long long *a1, long long *a2)
{
  sub_1CA5C1958(a1, v4);
  sub_1CA5C1958(a2, v5);
  return sub_1CA5C0B64(v4, v5) & 1;
}

id sub_1CA5BCD98()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for LyonSwiftDecoder()) init];
  qword_1EA608878 = (uint64_t)result;
  return result;
}

id sub_1CA5BCE04()
{
  id v1 = &v0[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier];
  *id v1 = 0;
  v1[1] = 0;
  BOOL v2 = &v0[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier];
  *BOOL v2 = 0;
  v2[1] = 0;
  uint64_t v3 = OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointNotFoundReason;
  v0[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointNotFoundReason] = 4;
  v0[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state] = 0x80;
  *id v1 = 0;
  v1[1] = 0;
  BOOL v4 = v0;
  swift_bridgeObjectRelease();
  *(_WORD *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw] = -28672;
  v0[v3] = 4;
  v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_antiRelayResult] = 0;
  v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_requestAuth] = 0;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for LyonSwiftDecoder();
  return [super init];
}

uint64_t sub_1CA5BCEFC(long long *a1, uint64_t a2, uint64_t a3)
{
  sub_1CA5C1958(a1, v9);
  int v6 = (v10 >> 60) & 3 | (4 * v12);
  if (v6 == 4)
  {
    v10 &= 0xCFFFFFFFFFFFFFFFLL;
    return sub_1CA5BFC78((uint64_t)a1, a2, a3);
  }
  if (v6 != 11)
  {
    if (v6 != 12) {
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    }
    if (v11) {
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    }
    int8x16_t v7 = vorrq_s8(v9[0], v9[1]);
    if (*(void *)&vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)) | v10) {
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    }
    return sub_1CA5BFC78((uint64_t)a1, a2, a3);
  }
  v10 &= 0xCFFFFFFFFFFFFFFFLL;
  sub_1CA5BE1D0(v9[0].i16[0]);
  return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1CA5BCFE8(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1CA5C1958(a1, &v112);
  long long v8 = v112;
  sub_1CA5C1958(a1, &v113);
  unint64_t v9 = v116;
  switch((v116 >> 60) & 3 | (4 * v118))
  {
    case 1uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v10 = v116;
      char v95 = v113;
      unint64_t v11 = v114;
      uint64_t v12 = v115;
      int v13 = v117;
      uint64_t v107 = *((void *)&v113 + 1);
      sub_1CA5B6FE8(*((uint64_t *)&v113 + 1), v114);
      sub_1CA5B6FE8(v12, v10);
      if (qword_1EA6086A8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1CA5FD648();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EA608880);
      uint64_t v15 = sub_1CA5FD628();
      os_log_type_t v16 = sub_1CA5FD9E8();
      char v105 = v13;
      unint64_t v99 = v10;
      unint64_t v102 = v11;
      if (os_log_type_enabled(v15, v16))
      {
        char v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        v110[0] = v18;
        *(_DWORD *)char v17 = 136315138;
        if (v13 == 4) {
          char v19 = 0;
        }
        else {
          char v19 = v13 + 1;
        }
        LOBYTE(v111) = v19;
        BYTE1(v111) = v13 == 4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608900);
        uint64_t v20 = sub_1CA5FD8C8();
        uint64_t v111 = sub_1CA5DDA20(v20, v21, v110);
        sub_1CA5FDA68();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CA552000, v15, v16, "Endpoint not found: %s", v17, 0xCu);
        swift_arrayDestroy();
        uint64_t v22 = v18;
        unint64_t v11 = v102;
        MEMORY[0x1CB799300](v22, -1, -1);
        MEMORY[0x1CB799300](v17, -1, -1);
      }

      if ((v13 - 3) >= 2u)
      {
        v110[0] = sub_1CA5C4448(v107, v11);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5C1B64();
        uint64_t v77 = sub_1CA5FD888();
        uint64_t v79 = v78;
        swift_bridgeObjectRelease();
        long long v80 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier);
        *long long v80 = v77;
        v80[1] = v79;
        swift_bridgeObjectRelease();
        uint64_t v24 = v12;
        unint64_t v23 = v99;
        v110[0] = sub_1CA5C4448(v12, v99);
        uint64_t v81 = sub_1CA5FD888();
        uint64_t v83 = v82;
        unint64_t v11 = v102;
        swift_bridgeObjectRelease();
        uint64_t v84 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier);
        *uint64_t v84 = v81;
        v84[1] = v83;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = v12;
        unint64_t v23 = v99;
      }
      *(unsigned char *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = v95 | 0x40;
      *(unsigned char *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointNotFoundReason) = v105;
      unint64_t v50 = sub_1CA5F1004(MEMORY[0x1E4FBC860]);
      sub_1CA5B6EF4(v24, v23);
      uint64_t v51 = v107;
      unint64_t v52 = v11;
      goto LABEL_20;
    case 2uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v25 = v116;
      long long v26 = v113;
      __int16 v100 = v114;
      uint64_t v27 = v115;
      *(unsigned char *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = BYTE2(v114);
      sub_1CA5B6FE8(v26, *((unint64_t *)&v26 + 1));
      uint64_t v96 = a2;
      uint64_t v97 = v27;
      unint64_t v28 = v25;
      unint64_t v103 = v25;
      sub_1CA5B6FE8(v27, v25);
      sub_1CA5C4448(v26, *((unint64_t *)&v26 + 1));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5C1B64();
      uint64_t v29 = sub_1CA5FD888();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      unint64_t v32 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier);
      uint64_t *v32 = v29;
      v32[1] = v31;
      swift_bridgeObjectRelease();
      sub_1CA5C4448(v27, v28);
      uint64_t v33 = sub_1CA5FD888();
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      int v36 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier);
      *int v36 = v33;
      v36[1] = v35;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1CA602660;
      sub_1CA5FD8A8();
      uint64_t v38 = MEMORY[0x1E4FBB1A0];
      sub_1CA5FDAE8();
      uint64_t v39 = sub_1CA5FD8A8();
      *(void *)(v37 + 96) = v38;
      *(void *)(v37 + 72) = v39;
      *(void *)(v37 + 80) = v40;
      sub_1CA5FDAE8();
      *(void *)(v37 + 168) = v38;
      *(void *)(v37 + 144) = v96;
      *(void *)(v37 + 152) = a3;
      strcpy((char *)v110, "selectStatus");
      swift_bridgeObjectRetain();
      sub_1CA5FDAE8();
      *(void *)(v37 + 240) = MEMORY[0x1E4FBB550];
      *(void *)(v37 + 216) = 36864;
      strcpy((char *)v110, "command");
      sub_1CA5FDAE8();
      *(void *)(v37 + 312) = MEMORY[0x1E4FBC450];
      *(_WORD *)(v37 + 288) = v100;
      sub_1CA5FDAE8();
      sub_1CA5C4448(v26, *((unint64_t *)&v26 + 1));
      uint64_t v41 = sub_1CA5FD888();
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      *(void *)(v37 + 384) = v38;
      *(void *)(v37 + 360) = v41;
      *(void *)(v37 + 368) = v43;
      sub_1CA5FDAE8();
      sub_1CA5C4448(v97, v103);
      uint64_t v44 = sub_1CA5FD888();
      uint64_t v46 = v45;
      swift_bridgeObjectRelease();
      *(void *)(v37 + 456) = v38;
      *(void *)(v37 + 432) = v44;
      *(void *)(v37 + 440) = v46;
      strcpy((char *)v110, "informative");
      HIDWORD(v110[1]) = -352321536;
      sub_1CA5FDAE8();
      char v47 = *(unsigned char *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_antiRelayResult);
      *(void *)(v37 + 528) = MEMORY[0x1E4FBC358];
      *(unsigned char *)(v37 + 504) = v47;
      sub_1CA5FD8A8();
      sub_1CA5FDAE8();
      uint64_t v48 = MEMORY[0x1E4FBB390];
      *(void *)(v37 + 600) = MEMORY[0x1E4FBB390];
      *(unsigned char *)(v37 + 576) = 1;
      sub_1CA5FD8A8();
      sub_1CA5FDAE8();
      *(void *)(v37 + 672) = v48;
      *(unsigned char *)(v37 + 648) = 1;
      sub_1CA5FD8A8();
      sub_1CA5FDAE8();
      *(void *)(v37 + 744) = v48;
      *(unsigned char *)(v37 + 720) = 0;
      v110[0] = sub_1CA5FD8A8();
      v110[1] = v49;
      sub_1CA5FDAE8();
      *(void *)(v37 + 816) = MEMORY[0x1E4FBB550];
      *(void *)(v37 + 792) = 1000;
      unint64_t v50 = sub_1CA5F1004(v37);
      sub_1CA5B6EF4(v97, v103);
      unint64_t v52 = *((void *)&v26 + 1);
      uint64_t v51 = v26;
      goto LABEL_20;
    case 6uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v53 = v113;
      *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = v114 | 0x40;
      sub_1CA5B6FE8(v8, *((unint64_t *)&v8 + 1));
      v110[0] = sub_1CA5C4448(v53, *((unint64_t *)&v53 + 1));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5C1B64();
      uint64_t v54 = sub_1CA5FD888();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v57 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier);
      uint64_t *v57 = v54;
      v57[1] = v56;
      swift_bridgeObjectRelease();
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      *(unsigned char *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_requestAuth) = 1;
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    case 8uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      char v58 = v113;
      if (sub_1CA5CC49C(v113, (uint64_t)&unk_1F24D3B88))
      {
        *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_antiRelayResult) = v58;
        return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
      }
      else
      {
        *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = -127;
        if (qword_1EA6086A8 != -1) {
          swift_once();
        }
        uint64_t v86 = sub_1CA5FD648();
        __swift_project_value_buffer(v86, (uint64_t)qword_1EA608880);
        uint64_t v87 = sub_1CA5FD628();
        os_log_type_t v88 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = (uint8_t *)swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          v110[0] = v90;
          *(_DWORD *)uint64_t v89 = 136315138;
          LOBYTE(v111) = v58;
          uint64_t v91 = sub_1CA5FD8C8();
          uint64_t v111 = sub_1CA5DDA20(v91, v92, v110);
          sub_1CA5FDA68();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CA552000, v87, v88, "Applet detected an attack: %s", v89, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v90, -1, -1);
          MEMORY[0x1CB799300](v89, -1, -1);
        }

        type metadata accessor for ATLError(0);
        unint64_t v50 = v93;
        sub_1CA5C1970();
        swift_allocError();
        void *v94 = 5;
        swift_willThrow();
      }
      return v50;
    case 10uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v109 = v3;
      unint64_t v59 = v9 & 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v104 = v9 & 0xCFFFFFFFFFFFFFFFLL;
      __int16 v101 = v113;
      uint64_t v60 = *((void *)&v113 + 1);
      unint64_t v61 = v114;
      uint64_t v62 = v115;
      uint64_t v106 = v115;
      uint64_t v108 = *((void *)&v113 + 1);
      *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = -127;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_1CA602650;
      sub_1CA5FD8A8();
      unint64_t v98 = v61;
      sub_1CA5B6FE8(v60, v61);
      sub_1CA5B6FE8(v62, v59);
      uint64_t v64 = MEMORY[0x1E4FBB1A0];
      sub_1CA5FDAE8();
      uint64_t v65 = sub_1CA5FD8A8();
      *(void *)(v63 + 96) = v64;
      *(void *)(v63 + 72) = v65;
      *(void *)(v63 + 80) = v66;
      sub_1CA5FDAE8();
      *(void *)(v63 + 168) = v64;
      *(void *)(v63 + 144) = a2;
      *(void *)(v63 + 152) = a3;
      strcpy((char *)v110, "didError");
      swift_bridgeObjectRetain();
      sub_1CA5FDAE8();
      *(void *)(v63 + 240) = MEMORY[0x1E4FBB390];
      *(unsigned char *)(v63 + 216) = 1;
      strcpy((char *)v110, "command");
      v110[1] = 0xE700000000000000;
      sub_1CA5FDAE8();
      char v67 = asc_1CA60C1AB[sub_1CA5BCB60()];
      *(void *)(v63 + 312) = MEMORY[0x1E4FBC358];
      *(unsigned char *)(v63 + 288) = v67;
      sub_1CA5FDAE8();
      sub_1CA5C4448(v108, v61);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5C1B64();
      uint64_t v68 = sub_1CA5FD888();
      uint64_t v70 = v69;
      swift_bridgeObjectRelease();
      *(void *)(v63 + 384) = v64;
      *(void *)(v63 + 360) = v68;
      *(void *)(v63 + 368) = v70;
      sub_1CA5FDAE8();
      sub_1CA5C4448(v106, v104);
      uint64_t v71 = sub_1CA5FD888();
      uint64_t v73 = v72;
      swift_bridgeObjectRelease();
      *(void *)(v63 + 456) = v64;
      *(void *)(v63 + 432) = v71;
      *(void *)(v63 + 440) = v73;
      v110[0] = 0x737574617473;
      v110[1] = 0xE600000000000000;
      sub_1CA5FDAE8();
      __int16 v74 = *(_WORD *)(v109 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw);
      uint64_t v75 = MEMORY[0x1E4FBC450];
      *(void *)(v63 + 528) = MEMORY[0x1E4FBC450];
      *(_WORD *)(v63 + 504) = v74;
      strcpy((char *)v110, "informative");
      sub_1CA5FDAE8();
      *(void *)(v63 + 600) = v75;
      *(_WORD *)(v63 + 576) = v101;
      sub_1CA5FDAE8();
      *(void *)(v63 + 672) = v75;
      *(_WORD *)(v63 + 648) = 0;
      v110[0] = sub_1CA5FD8A8();
      v110[1] = v76;
      sub_1CA5FDAE8();
      *(void *)(v63 + 744) = MEMORY[0x1E4FBB390];
      *(unsigned char *)(v63 + 720) = 1;
      unint64_t v50 = sub_1CA5F1004(v63);
      sub_1CA5B6EF4(v106, v104);
      uint64_t v51 = v108;
      unint64_t v52 = v98;
LABEL_20:
      sub_1CA5B6EF4(v51, v52);
      return v50;
    case 11uLL:
      v116 &= 0xCFFFFFFFFFFFFFFFLL;
      sub_1CA5BE1D0(v113);
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    default:
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
  }
}

unint64_t sub_1CA5BDF24(long long *a1, uint64_t a2, unint64_t a3)
{
  sub_1CA5C1958(a1, &v15);
  long long v8 = v15;
  sub_1CA5C1958(a1, &v16);
  uint64_t v9 = v16;
  switch((v19 >> 60) & 3 | (4 * v21))
  {
    case 0uLL:
      v19 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v10 = sub_1CA5BEBCC(a1, a2, a3);
      if (!v4) {
        return v10;
      }
      return v3;
    case 4uLL:
      v19 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v10 = sub_1CA5BF6C0((uint64_t)a1, a2, a3);
      if (!v4) {
        return v10;
      }
      return v3;
    case 5uLL:
      v19 &= 0xCFFFFFFFFFFFFFFFLL;
      if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) & 0x81) == 0) {
        return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
      }
      unint64_t v11 = *((void *)&v16 + 1);
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      unint64_t v12 = sub_1CA5C2F70(v9, v11, a2, a3);
      goto LABEL_9;
    case 9uLL:
      v19 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v13 = *((void *)&v16 + 1);
      sub_1CA5B6FE8(v8, *((unint64_t *)&v8 + 1));
      unint64_t v12 = (unint64_t)sub_1CA5BE3B8(v9, v13, a2, a3);
LABEL_9:
      unint64_t v3 = v12;
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      return v3;
    case 11uLL:
      v19 &= 0xCFFFFFFFFFFFFFFFLL;
      sub_1CA5BE1D0(v16);
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    case 12uLL:
      if (v20 || v19 | (unint64_t)v16 | v18 | v17 | *((void *)&v16 + 1))
      {
        if (!v20 && (void)v16 == 3 && !(v18 | v19 | v17 | *((void *)&v16 + 1))) {
          *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = -127;
        }
        return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
      }
      else
      {
        unint64_t v10 = sub_1CA5BFC78((uint64_t)a1, a2, a3);
        if (v4) {
          return v3;
        }
      }
      return v10;
    default:
      return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
  }
}

void sub_1CA5BE1D0(__int16 a1)
{
  uint64_t v2 = v1;
  if (qword_1EA6086A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1CA5FD648();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EA608880);
  unint64_t v5 = sub_1CA5FD628();
  os_log_type_t v6 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v5, v6))
  {
    int8x16_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)int8x16_t v7 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x1E4FBC450];
    *(_OWORD *)(v9 + 16) = xmmword_1CA6021C0;
    uint64_t v11 = MEMORY[0x1E4FBC4B8];
    *(void *)(v9 + 56) = v10;
    *(void *)(v9 + 64) = v11;
    *(_WORD *)(v9 + 32) = a1;
    uint64_t v12 = sub_1CA5FD8B8();
    sub_1CA5DDA20(v12, v13, &v14);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v5, v6, "Fatal Lyon Error: SW=0x%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v8, -1, -1);
    MEMORY[0x1CB799300](v7, -1, -1);
  }

  if (*(__int16 *)(v2 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw) == -28672) {
    *(_WORD *)(v2 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw) = a1;
  }
}

_DWORD *sub_1CA5BE3B8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v6 = (char *)v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier;
  uint64_t v7 = *(void *)((char *)v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier + 8);
  if (v7)
  {
    unint64_t v10 = a2;
    uint64_t v11 = a1;
    uint64_t v4 = *(_DWORD **)v6;
    uint64_t v63 = a1;
    unint64_t v64 = a2;
    swift_bridgeObjectRetain();
    sub_1CA5B6FE8(v11, v10);
    while (1)
    {
      switch(v10 >> 62)
      {
        case 1uLL:
          LODWORD(v13) = HIDWORD(v11) - v11;
          if (!__OFSUB__(HIDWORD(v11), v11))
          {
            uint64_t v13 = (int)v13;
            goto LABEL_11;
          }
          __break(1u);
          goto LABEL_42;
        case 2uLL:
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v14 = *(void *)(v11 + 24);
          BOOL v16 = __OFSUB__(v14, v15);
          uint64_t v13 = v14 - v15;
          if (!v16) {
            goto LABEL_11;
          }
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        case 3uLL:
          goto LABEL_24;
        default:
          uint64_t v13 = BYTE6(v10);
LABEL_11:
          if (v13 < 1)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            if (qword_1EA6086A8 != -1) {
              swift_once();
            }
            uint64_t v32 = sub_1CA5FD648();
            __swift_project_value_buffer(v32, (uint64_t)qword_1EA608880);
            uint64_t v33 = sub_1CA5FD628();
            os_log_type_t v34 = sub_1CA5FD9C8();
            if (os_log_type_enabled(v33, v34))
            {
              uint64_t v35 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v35 = 0;
              _os_log_impl(&dword_1CA552000, v33, v34, "Received shareSession event without stepUpSK", v35, 2u);
              MEMORY[0x1CB799300](v35, -1, -1);
            }

            uint64_t v4 = (_DWORD *)sub_1CA5F1004(MEMORY[0x1E4FBC860]);
            sub_1CA5B6EF4(v11, v10);
            return v4;
          }
          uint64_t v17 = sub_1CA5F8544(&v63, 0);
          if (v5)
          {
            swift_bridgeObjectRelease();
            sub_1CA5B6EF4(v63, v64);
            return v4;
          }
          uint64_t v20 = v18;
          unint64_t v21 = v19;
          if (v17 == 129)
          {
            switch(v19 >> 62)
            {
              case 1uLL:
                LODWORD(v12) = HIDWORD(v18) - v18;
                if (__OFSUB__(HIDWORD(v18), v18)) {
                  goto LABEL_43;
                }
                uint64_t v12 = (int)v12;
                goto LABEL_4;
              case 2uLL:
                uint64_t v23 = *(void *)(v18 + 16);
                uint64_t v22 = *(void *)(v18 + 24);
                BOOL v16 = __OFSUB__(v22, v23);
                uint64_t v12 = v22 - v23;
                if (!v16) {
                  goto LABEL_4;
                }
                __break(1u);
                goto LABEL_20;
              case 3uLL:
                goto LABEL_5;
              default:
                uint64_t v12 = BYTE6(v19);
LABEL_4:
                if (v12 != 32) {
                  goto LABEL_5;
                }
                uint64_t v60 = v4;
                if (qword_1EA6086A8 != -1) {
                  swift_once();
                }
                uint64_t v36 = sub_1CA5FD648();
                __swift_project_value_buffer(v36, (uint64_t)qword_1EA608880);
                sub_1CA5B6FE8(v20, v21);
                sub_1CA5B6FE8(v20, v21);
                uint64_t v37 = sub_1CA5FD628();
                os_log_type_t v38 = sub_1CA5FD9C8();
                uint64_t v59 = a3;
                if (os_log_type_enabled(v37, v38))
                {
                  log = v37;
                  os_log_type_t type = v38;
                  uint64_t v39 = (uint8_t *)swift_slowAlloc();
                  uint64_t v57 = swift_slowAlloc();
                  uint64_t v65 = v57;
                  *(_DWORD *)uint64_t v39 = 136315138;
                  sub_1CA5B6FE8(v20, v21);
                  sub_1CA5BC554(4, v20, v21, &v61);
                  uint64_t v40 = v61;
                  unint64_t v55 = v62;
                  sub_1CA5C4448(v61, v62);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
                  sub_1CA5C1B64();
                  uint64_t v41 = sub_1CA5FD888();
                  unint64_t v43 = v42;
                  swift_bridgeObjectRelease();
                  sub_1CA5B6EF4(v40, v55);
                  uint64_t v61 = sub_1CA5DDA20(v41, v43, &v65);
                  sub_1CA5FDA68();
                  swift_bridgeObjectRelease();
                  sub_1CA5B6EF4(v20, v21);
                  sub_1CA5B6EF4(v20, v21);
                  uint64_t v37 = log;
                  _os_log_impl(&dword_1CA552000, log, type, "Received shareSession event with stepUpSK %s", v39, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1CB799300](v57, -1, -1);
                  MEMORY[0x1CB799300](v39, -1, -1);
                }
                else
                {
                  sub_1CA5B6EF4(v20, v21);
                  sub_1CA5B6EF4(v20, v21);
                }

                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_1CA602670;
                uint64_t v61 = sub_1CA5FD8A8();
                unint64_t v62 = v47;
                uint64_t v48 = MEMORY[0x1E4FBB1A0];
                sub_1CA5FDAE8();
                uint64_t v49 = sub_1CA5FD8A8();
                *(void *)(inited + 96) = v48;
                *(void *)(inited + 72) = v49;
                *(void *)(inited + 80) = v50;
                uint64_t v61 = 0xD000000000000010;
                unint64_t v62 = 0x80000001CA60C0E0;
                sub_1CA5FDAE8();
                *(void *)(inited + 168) = v48;
                *(void *)(inited + 144) = v59;
                *(void *)(inited + 152) = a4;
                uint64_t v61 = 0xD000000000000012;
                unint64_t v62 = 0x80000001CA60C120;
                swift_bridgeObjectRetain();
                sub_1CA5FDAE8();
                *(void *)(inited + 240) = v48;
                *(void *)(inited + 216) = v60;
                *(void *)(inited + 224) = v7;
                uint64_t v61 = sub_1CA5FD8A8();
                unint64_t v62 = v51;
                sub_1CA5FDAE8();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088F0);
                uint64_t v52 = swift_initStackObject();
                *(_OWORD *)(v52 + 16) = xmmword_1CA6021C0;
                *(void *)(v52 + 32) = sub_1CA5FD8A8();
                *(void *)(v52 + 40) = v53;
                *(void *)(v52 + 48) = v20;
                *(void *)(v52 + 56) = v21;
                sub_1CA5B6FE8(v20, v21);
                unint64_t v54 = sub_1CA5F1148(v52);
                *(void *)(inited + 312) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088F8);
                *(void *)(inited + 288) = v54;
                uint64_t v4 = (_DWORD *)sub_1CA5F1004(inited);
                sub_1CA5B6EF4(v20, v21);
                sub_1CA5B6EF4(v63, v64);
                break;
            }
            return v4;
          }
LABEL_5:
          sub_1CA5B6EF4(v18, v19);
          uint64_t v11 = v63;
          unint64_t v10 = v64;
          break;
      }
    }
  }
LABEL_20:
  if (qword_1EA6086A8 != -1) {
LABEL_44:
  }
    swift_once();
  uint64_t v24 = sub_1CA5FD648();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EA608880);
  long long v26 = v4;
  uint64_t v4 = (_DWORD *)v25;
  uint64_t v27 = sub_1CA5FD628();
  os_log_type_t v28 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v4 = (_DWORD *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v63 = v29;
    _DWORD *v4 = 136315138;
    if (*((void *)v6 + 1))
    {
      uint64_t v30 = *(void *)v6;
      unint64_t v31 = *((void *)v6 + 1);
    }
    else
    {
      unint64_t v31 = 0xE300000000000000;
      uint64_t v30 = 7104878;
    }
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1CA5DDA20(v30, v31, &v63);
    sub_1CA5FDA68();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v27, v28, "Missing mandatory information in Share Session: ep:%s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v29, -1, -1);
    MEMORY[0x1CB799300](v4, -1, -1);
  }
  else
  {
  }
  type metadata accessor for ATLError(0);
  sub_1CA5C1970();
  swift_allocError();
  void *v44 = 3;
  swift_willThrow();
  return v4;
}

unint64_t sub_1CA5BEBCC(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1CA5C1958(a1, &v67);
  uint64_t v9 = *((void *)&v67 + 1);
  unint64_t v8 = v68;
  sub_1CA5C1958(a1, &v69);
  if ((v71 >> 60) & 3 | (4 * v72))
  {
    if (qword_1EA6086A8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1CA5FD648();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EA608880);
    uint64_t v11 = sub_1CA5FD628();
    os_log_type_t v12 = sub_1CA5FD9E8();
    unint64_t v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1CA552000, v11, (os_log_type_t)v13, "Wrong handler", v14, 2u);
      MEMORY[0x1CB799300](v14, -1, -1);
    }

    type metadata accessor for ATLError(0);
    sub_1CA5C1970();
    swift_allocError();
    void *v15 = 3;
    swift_willThrow();
    return v13;
  }
  v71 &= 0xCFFFFFFFFFFFFFFFLL;
  BOOL v16 = (uint64_t *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier];
  if (*(void *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier + 8]
    && *(void *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8])
  {
    int v59 = v69;
    unint64_t v17 = v70;
    __int16 v62 = WORD1(v69);
    uint64_t v63 = *(void *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier + 8];
    uint64_t v64 = *(void *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8];
    uint64_t v60 = *v16;
    uint64_t v61 = *(void *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier];
    uint64_t v58 = a2;
    if (v70 >> 60 == 15)
    {
LABEL_18:
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      swift_bridgeObjectRetain();
    }
    else
    {
      switch(v70 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v69), DWORD2(v69)))
          {
            __break(1u);
LABEL_46:
            __break(1u);
            JUMPOUT(0x1CA5BF6B0);
          }
          uint64_t v56 = *((void *)&v69 + 1);
          uint64_t v18 = HIDWORD(v69) - DWORD2(v69);
          break;
        case 2uLL:
          uint64_t v44 = *(void *)(*((void *)&v69 + 1) + 16);
          uint64_t v43 = *(void *)(*((void *)&v69 + 1) + 24);
          uint64_t v18 = v43 - v44;
          if (__OFSUB__(v43, v44)) {
            goto LABEL_46;
          }
          uint64_t v56 = *((void *)&v69 + 1);
          break;
        case 3uLL:
          goto LABEL_18;
        default:
          uint64_t v56 = *((void *)&v69 + 1);
          uint64_t v18 = BYTE6(v70);
          break;
      }
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      if (v18 >= 1)
      {
        uint64_t v45 = qword_1EA6086A8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v45 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_1CA5FD648();
        __swift_project_value_buffer(v46, (uint64_t)qword_1EA608880);
        sub_1CA5B8510(v9, v8);
        sub_1CA5B8510(v9, v8);
        unint64_t v47 = sub_1CA5FD628();
        os_log_type_t v48 = sub_1CA5FD9C8();
        if (os_log_type_enabled(v47, v48))
        {
          os_log_type_t typea = v48;
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          uint64_t v65 = v53;
          *(_DWORD *)uint64_t v49 = 136315138;
          uint64_t v73 = sub_1CA5C4448(v56, v17);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5C1B64();
          uint64_t v50 = sub_1CA5FD888();
          unint64_t v52 = v51;
          swift_bridgeObjectRelease();
          uint64_t v73 = sub_1CA5DDA20(v50, v52, &v65);
          sub_1CA5FDA68();
          swift_bridgeObjectRelease();
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
          _os_log_impl(&dword_1CA552000, v47, typea, "Domain specific data: %s", v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v53, -1, -1);
          MEMORY[0x1CB799300](v49, -1, -1);
        }
        else
        {
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
        }
        goto LABEL_20;
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
LABEL_20:
    if (v59) {
      __int16 v27 = 64;
    }
    else {
      __int16 v27 = 0;
    }
    if ((v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state] & 0x81) != 0) {
      char v28 = 2;
    }
    else {
      char v28 = 1;
    }
    char type = v28;
    __int16 v57 = v27;
    v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state] = -127;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1CA602650;
    uint64_t v65 = sub_1CA5FD8A8();
    unint64_t v66 = v30;
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    sub_1CA5FDAE8();
    uint64_t v32 = sub_1CA5FD8A8();
    *(void *)(v29 + 96) = v31;
    *(void *)(v29 + 72) = v32;
    *(void *)(v29 + 80) = v33;
    uint64_t v65 = 0xD000000000000010;
    unint64_t v66 = 0x80000001CA60C0E0;
    sub_1CA5FDAE8();
    *(void *)(v29 + 168) = v31;
    *(void *)(v29 + 144) = v58;
    *(void *)(v29 + 152) = a3;
    uint64_t v65 = 0x726F727245646964;
    unint64_t v66 = 0xE800000000000000;
    swift_bridgeObjectRetain();
    sub_1CA5FDAE8();
    *(void *)(v29 + 240) = MEMORY[0x1E4FBB390];
    *(unsigned char *)(v29 + 216) = v59 ^ 1;
    uint64_t v65 = 0x646E616D6D6F63;
    unint64_t v66 = 0xE700000000000000;
    sub_1CA5FDAE8();
    char v34 = asc_1CA60C1AB[sub_1CA5BCB60()];
    uint64_t v35 = MEMORY[0x1E4FBC358];
    *(void *)(v29 + 312) = MEMORY[0x1E4FBC358];
    *(unsigned char *)(v29 + 288) = v34;
    uint64_t v65 = 0xD000000000000012;
    unint64_t v66 = 0x80000001CA60C100;
    sub_1CA5FDAE8();
    *(void *)(v29 + 384) = v35;
    *(unsigned char *)(v29 + 360) = type;
    uint64_t v65 = 0xD000000000000012;
    unint64_t v66 = 0x80000001CA60C120;
    sub_1CA5FDAE8();
    *(void *)(v29 + 456) = v31;
    *(void *)(v29 + 432) = v60;
    *(void *)(v29 + 440) = v63;
    uint64_t v65 = 0xD000000000000010;
    unint64_t v66 = 0x80000001CA60C050;
    sub_1CA5FDAE8();
    *(void *)(v29 + 528) = v31;
    *(void *)(v29 + 504) = v61;
    *(void *)(v29 + 512) = v64;
    uint64_t v65 = 0x737574617473;
    unint64_t v66 = 0xE600000000000000;
    sub_1CA5FDAE8();
    __int16 v36 = *(_WORD *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw];
    uint64_t v37 = MEMORY[0x1E4FBC450];
    *(void *)(v29 + 600) = MEMORY[0x1E4FBC450];
    *(_WORD *)(v29 + 576) = v36;
    uint64_t v65 = 0x74616D726F666E69;
    unint64_t v66 = 0xEB00000000657669;
    sub_1CA5FDAE8();
    *(void *)(v29 + 672) = v37;
    *(_WORD *)(v29 + 648) = v62;
    uint64_t v65 = 0x746C75736572;
    unint64_t v66 = 0xE600000000000000;
    sub_1CA5FDAE8();
    *(void *)(v29 + 744) = v37;
    *(_WORD *)(v29 + 720) = v57;
    unint64_t v13 = sub_1CA5F1004(v29);
    sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
    return v13;
  }
  sub_1CA5B8510(v9, v8);
  if (qword_1EA6086A8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1CA5FD648();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EA608880);
  uint64_t v20 = v4;
  unint64_t v21 = sub_1CA5FD628();
  os_log_type_t v22 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v65 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    if (v16[1])
    {
      uint64_t v25 = *v16;
      unint64_t v26 = v16[1];
    }
    else
    {
      uint64_t v25 = 7104878;
      unint64_t v26 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1CA5DDA20(v25, v26, &v65);
    sub_1CA5FDA68();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    if (*(void *)&v20[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8])
    {
      uint64_t v38 = *(void *)&v20[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier];
      unint64_t v39 = *(void *)&v20[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8];
    }
    else
    {
      uint64_t v38 = 7104878;
      unint64_t v39 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1CA5DDA20(v38, v39, &v65);
    sub_1CA5FDA68();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v21, v22, "Missing mandatory information in ControlFlow: ep:%s\n, readerId:%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v24, -1, -1);
    MEMORY[0x1CB799300](v23, -1, -1);
  }
  else
  {
  }
  type metadata accessor for ATLError(0);
  unint64_t v13 = v40;
  sub_1CA5C1970();
  swift_allocError();
  void *v41 = 3;
  swift_willThrow();
  sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
  return v13;
}

unint64_t sub_1CA5BF6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier];
  uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier + 8];
  if (v6
    && (uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8]) != 0)
  {
    uint64_t v34 = *v5;
    uint64_t v35 = *(void *)&v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier];
    unsigned __int8 v10 = sub_1CA5BCB60();
    __int16 v36 = word_1CA6029DE[v10];
    char v32 = asc_1CA60C1AB[v10];
    if ((v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state] & 0x81) != 0) {
      char v11 = 2;
    }
    else {
      char v11 = 1;
    }
    char v33 = v11;
    v3[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state] = -127;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CA602650;
    sub_1CA5FD8A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    sub_1CA5FDAE8();
    uint64_t v14 = sub_1CA5FD8A8();
    *(void *)(inited + 96) = v13;
    *(void *)(inited + 72) = v14;
    *(void *)(inited + 80) = v15;
    sub_1CA5FDAE8();
    *(void *)(inited + 168) = v13;
    *(void *)(inited + 144) = a2;
    *(void *)(inited + 152) = a3;
    swift_bridgeObjectRetain();
    sub_1CA5FDAE8();
    *(void *)(inited + 240) = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 216) = 1;
    sub_1CA5FDAE8();
    uint64_t v16 = MEMORY[0x1E4FBC358];
    *(void *)(inited + 312) = MEMORY[0x1E4FBC358];
    *(unsigned char *)(inited + 288) = v32;
    sub_1CA5FDAE8();
    *(void *)(inited + 384) = v16;
    *(unsigned char *)(inited + 360) = v33;
    sub_1CA5FDAE8();
    *(void *)(inited + 456) = v13;
    *(void *)(inited + 432) = v34;
    *(void *)(inited + 440) = v6;
    sub_1CA5FDAE8();
    *(void *)(inited + 528) = v13;
    *(void *)(inited + 504) = v35;
    *(void *)(inited + 512) = v7;
    uint64_t v37 = 0x737574617473;
    unint64_t v38 = 0xE600000000000000;
    sub_1CA5FDAE8();
    __int16 v17 = *(_WORD *)&v4[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw];
    uint64_t v18 = MEMORY[0x1E4FBC450];
    *(void *)(inited + 600) = MEMORY[0x1E4FBC450];
    *(_WORD *)(inited + 576) = v17;
    sub_1CA5FDAE8();
    *(void *)(inited + 672) = v18;
    *(_WORD *)(inited + 648) = v36;
    uint64_t v37 = sub_1CA5FD8A8();
    unint64_t v38 = v19;
    sub_1CA5FDAE8();
    *(void *)(inited + 744) = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 720) = 0;
    return sub_1CA5F1004(inited);
  }
  else
  {
    if (qword_1EA6086A8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1CA5FD648();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EA608880);
    os_log_type_t v22 = v3;
    uint64_t v23 = sub_1CA5FD628();
    os_log_type_t v24 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v37 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      if (v5[1])
      {
        uint64_t v27 = *v5;
        unint64_t v28 = v5[1];
      }
      else
      {
        uint64_t v27 = 7104878;
        unint64_t v28 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1CA5DDA20(v27, v28, &v37);
      sub_1CA5FDA68();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      if (*(void *)&v22[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8])
      {
        uint64_t v29 = *(void *)&v22[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier];
        unint64_t v30 = *(void *)&v22[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8];
      }
      else
      {
        uint64_t v29 = 7104878;
        unint64_t v30 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1CA5DDA20(v29, v30, &v37);
      sub_1CA5FDA68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA552000, v23, v24, "Missing mandatory information in Dummy: ep:%s\n, readerId:%s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v26, -1, -1);
      MEMORY[0x1CB799300](v25, -1, -1);
    }
    else
    {
    }
    type metadata accessor for ATLError(0);
    sub_1CA5C1970();
    swift_allocError();
    *uint64_t v31 = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1CA5BFC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_requestAuth)) {
    __int16 v7 = -4091;
  }
  else {
    __int16 v7 = word_1CA614F48[*(char *)(v3
  }
                                + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointNotFoundReason)];
  __int16 v29 = v7;
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) & 0x81) != 0) {
    char v8 = 2;
  }
  else {
    char v8 = 1;
  }
  *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = -127;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA602680;
  *(void *)(inited + 32) = sub_1CA5FD8A8();
  *(void *)(inited + 40) = v10;
  uint64_t v11 = sub_1CA5FD8A8();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001CA60C0E0;
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 104) = a3;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x726F727245646964;
  *(void *)(inited + 136) = 0xE800000000000000;
  uint64_t v14 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 168) = v14;
  *(void *)(inited + 176) = 0x646E616D6D6F63;
  *(void *)(inited + 184) = 0xE700000000000000;
  unsigned __int8 v15 = sub_1CA5BCB60();
  uint64_t v16 = MEMORY[0x1E4FBC358];
  *(unsigned char *)(inited + 192) = asc_1CA60C1AB[v15];
  *(void *)(inited + 216) = v16;
  *(void *)(inited + 224) = 0xD000000000000012;
  *(void *)(inited + 232) = 0x80000001CA60C100;
  *(unsigned char *)(inited + 240) = v8;
  *(void *)(inited + 264) = v16;
  *(void *)(inited + 272) = 0x737574617473;
  *(void *)(inited + 280) = 0xE600000000000000;
  uint64_t v17 = MEMORY[0x1E4FBC450];
  *(_WORD *)(inited + 288) = *(_WORD *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw);
  *(void *)(inited + 312) = v17;
  *(void *)(inited + 320) = 0x74616D726F666E69;
  *(void *)(inited + 328) = 0xEB00000000657669;
  *(unsigned char *)(inited + 336) = *(unsigned char *)(v3 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_antiRelayResult);
  *(void *)(inited + 360) = v16;
  *(void *)(inited + 368) = 0x746C75736572;
  *(void *)(inited + 376) = 0xE600000000000000;
  *(void *)(inited + 408) = v17;
  *(_WORD *)(inited + 384) = v29;
  *(void *)(inited + 416) = sub_1CA5FD8A8();
  *(void *)(inited + 424) = v18;
  *(void *)(inited + 456) = v14;
  *(unsigned char *)(inited + 432) = 1;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1CA5F0C20(inited);
  uint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier + 8);
  if (v20)
  {
    uint64_t v21 = *(void *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier);
    uint64_t v32 = v12;
    *(void *)&long long v31 = v21;
    *((void *)&v31 + 1) = v20;
    sub_1CA5B6F4C(&v31, v30);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v33 = v19;
    sub_1CA5E2C84(v30, 0xD000000000000012, 0x80000001CA60C120, isUniquelyReferenced_nonNull_native);
    unint64_t v19 = v33;
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (uint64_t *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier);
  uint64_t v24 = *(void *)(v4 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier + 8);
  if (v24)
  {
    uint64_t v25 = *v23;
    uint64_t v32 = v12;
    *(void *)&long long v31 = v25;
    *((void *)&v31 + 1) = v24;
    sub_1CA5B6F4C(&v31, v30);
    swift_bridgeObjectRetain();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v33 = v19;
    sub_1CA5E2C84(v30, 0xD000000000000010, 0x80000001CA60C050, v26);
    unint64_t v19 = v33;
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = sub_1CA5C5B40(v19);
  swift_bridgeObjectRelease();
  return v27;
}

id sub_1CA5C0224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const char *a8)
{
  sub_1CA5C3A00(a8);
  char v8 = (void *)sub_1CA5FD838();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1CA5C02E4()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state) = 0x80;
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointIdentifier);
  *uint64_t v1 = 0;
  v1[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_readerIdentifier);
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t result = swift_bridgeObjectRelease();
  *(_WORD *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_sw) = -28672;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_endpointNotFoundReason) = 4;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_antiRelayResult) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_requestAuth) = 0;
  return result;
}

id sub_1CA5C03B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyonSwiftDecoder();
  return [super dealloc];
}

uint64_t type metadata accessor for LyonSwiftDecoder()
{
  return self;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LyonConstants.AntiRelayResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LyonConstants.AntiRelayResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C05CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1CA5C05F4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1CA5C05FC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.AntiRelayResult()
{
  return &type metadata for LyonConstants.AntiRelayResult;
}

uint64_t getEnumTagSinglePayload for LyonConstants.ReasonEndpointNotFound(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LyonConstants.ReasonEndpointNotFound(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C0770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.ReasonEndpointNotFound()
{
  return &type metadata for LyonConstants.ReasonEndpointNotFound;
}

ValueMetadata *type metadata accessor for LyonConstants()
{
  return &type metadata for LyonConstants;
}

uint64_t getEnumTagSinglePayload for LyonConstants.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7E) {
    goto LABEL_17;
  }
  if (a2 + 130 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 130) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 130;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for LyonConstants.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *uint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C0930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1CA5C0958(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return v1 & 1 | 2u;
  }
}

unsigned char *sub_1CA5C0974(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1CA5C0984(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = a2 & 1 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.State()
{
  return &type metadata for LyonConstants.State;
}

unint64_t sub_1CA5C09C4()
{
  unint64_t result = qword_1EA6088D0;
  if (!qword_1EA6088D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6088D0);
  }
  return result;
}

unint64_t sub_1CA5C0A1C()
{
  unint64_t result = qword_1EA6088D8;
  if (!qword_1EA6088D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6088D8);
  }
  return result;
}

uint64_t sub_1CA5C0A70()
{
  uint64_t v0 = sub_1CA5FD648();
  __swift_allocate_value_buffer(v0, qword_1EA608880);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA608880);
  return sub_1CA5FD638();
}

uint64_t sub_1CA5C0AE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x1CA5C0B54);
  }
  return result;
}

uint64_t sub_1CA5C0B64(long long *a1, long long *a2)
{
  sub_1CA5C1958(a1, &v73);
  uint64_t v4 = v73;
  int v5 = (unsigned __int16)v73;
  switch((v76 >> 60) & 3 | (4 * v78))
  {
    case 1uLL:
      unint64_t v11 = v76 & 0xCFFFFFFFFFFFFFFFLL;
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v13 = *((void *)&v73 + 1);
      unint64_t v12 = v74;
      uint64_t v14 = v75;
      int v15 = v77;
      int v16 = HIBYTE(v77);
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 1) {
        goto LABEL_64;
      }
      unint64_t v17 = v70 & 0xCFFFFFFFFFFFFFFFLL;
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      if ((v4 ^ v68.u8[0])) {
        goto LABEL_64;
      }
      uint64_t v18 = v68.i64[1];
      int8x16_t v19 = v69;
      int v64 = HIBYTE(v71);
      int v66 = v71;
      sub_1CA5B6FE8(v13, v12);
      sub_1CA5B6FE8(v14, v11);
      sub_1CA5B6FE8(v18, v19.u64[0]);
      sub_1CA5B6FE8(v19.i64[1], v17);
      if ((sub_1CA5B6C5C(v13, v12, v18, v19.u64[0]) & 1) == 0)
      {
        sub_1CA5B6EF4(v19.i64[1], v17);
        sub_1CA5B6EF4(v18, v19.u64[0]);
        sub_1CA5B6EF4(v14, v11);
        uint64_t v58 = v13;
        goto LABEL_62;
      }
      char v63 = sub_1CA5B6C5C(v14, v11, v19.i64[1], v17);
      sub_1CA5B6EF4(v19.i64[1], v17);
      sub_1CA5B6EF4(v18, v19.u64[0]);
      sub_1CA5B6EF4(v14, v11);
      sub_1CA5B6EF4(v13, v12);
      char v8 = 0;
      if ((v63 & 1) != 0 && v15 == v66)
      {
        if (v16 == 4)
        {
          if (v64 == 4) {
            goto LABEL_89;
          }
        }
        else if (v64 != 4 && v16 == v64)
        {
          goto LABEL_89;
        }
        goto LABEL_64;
      }
      return v8 & 1;
    case 2uLL:
      unint64_t v20 = v76 & 0xCFFFFFFFFFFFFFFFLL;
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v12 = *((void *)&v73 + 1);
      int v21 = (unsigned __int16)v74;
      int v22 = BYTE2(v74);
      int v23 = BYTE3(v74);
      uint64_t v24 = v75;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 2) {
        goto LABEL_64;
      }
      int v67 = v22;
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v25 = v70;
      int8x16_t v26 = v68;
      int v27 = v69.u16[0];
      int v65 = v69.u8[2];
      int v62 = v69.u8[3];
      uint64_t v28 = v69.i64[1];
      sub_1CA5B6FE8(v4, v12);
      sub_1CA5B6FE8(v26.i64[0], v26.u64[1]);
      sub_1CA5B6FE8(v24, v20);
      sub_1CA5B6FE8(v28, v25);
      if ((sub_1CA5B6C5C(v4, v12, v26.i64[0], v26.u64[1]) & 1) == 0 || v21 != v27 || v67 != v65 || v23 != v62)
      {
        sub_1CA5B6EF4(v28, v25);
        sub_1CA5B6EF4(v24, v20);
        unint64_t v30 = v26.u64[1];
        uint64_t v29 = v26.i64[0];
        goto LABEL_61;
      }
      char v8 = sub_1CA5B6C5C(v24, v20, v28, v25);
      sub_1CA5B6EF4(v28, v25);
      sub_1CA5B6EF4(v24, v20);
      unint64_t v36 = v26.u64[1];
      uint64_t v35 = v26.i64[0];
      goto LABEL_25;
    case 3uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v12 = *((void *)&v73 + 1);
      uint64_t v31 = v74;
      unint64_t v32 = v75;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 3) {
        goto LABEL_64;
      }
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v33 = v68;
      int8x16_t v34 = v69;
      sub_1CA5B6FE8(v4, v12);
      sub_1CA5B6FE8(v33.i64[0], v33.u64[1]);
      sub_1CA5B6FE8(v31, v32);
      sub_1CA5B6FE8(v34.i64[0], v34.u64[1]);
      if ((sub_1CA5B6C5C(v4, v12, v33.i64[0], v33.u64[1]) & 1) == 0)
      {
        sub_1CA5B6EF4(v34.i64[0], v34.u64[1]);
        sub_1CA5B6EF4(v31, v32);
        unint64_t v30 = v33.u64[1];
        uint64_t v29 = v33.i64[0];
LABEL_61:
        sub_1CA5B6EF4(v29, v30);
        uint64_t v58 = v4;
LABEL_62:
        unint64_t v59 = v12;
        goto LABEL_63;
      }
      char v8 = sub_1CA5B6C5C(v31, v32, v34.i64[0], v34.u64[1]);
      sub_1CA5B6EF4(v34.i64[0], v34.u64[1]);
      sub_1CA5B6EF4(v31, v32);
      unint64_t v36 = v33.u64[1];
      uint64_t v35 = v33.i64[0];
LABEL_25:
      sub_1CA5B6EF4(v35, v36);
      sub_1CA5B6EF4(v4, v12);
      return v8 & 1;
    case 4uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v37 = *((void *)&v73 + 1);
      sub_1CA5C1958(a2, &v68);
      unint64_t v38 = v70;
      if (((v70 >> 60) & 3 | (4 * v72)) != 4) {
        goto LABEL_64;
      }
      goto LABEL_39;
    case 5uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v37 = *((void *)&v73 + 1);
      sub_1CA5C1958(a2, &v68);
      unint64_t v38 = v70;
      if (((v70 >> 60) & 3 | (4 * v72)) != 5) {
        goto LABEL_64;
      }
      goto LABEL_39;
    case 6uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v39 = *((void *)&v73 + 1);
      char v40 = v74;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 6) {
        goto LABEL_64;
      }
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v41 = v68;
      __int8 v42 = v69.i8[0];
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      char v43 = sub_1CA5B6C5C(v4, v39, v41.i64[0], v41.u64[1]);
      sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      if (v43) {
        char v8 = v40 ^ v42 ^ 1;
      }
      else {
        char v8 = 0;
      }
      return v8 & 1;
    case 7uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v37 = *((void *)&v73 + 1);
      sub_1CA5C1958(a2, &v68);
      unint64_t v38 = v70;
      if (((v70 >> 60) & 3 | (4 * v72)) != 7) {
        goto LABEL_64;
      }
      goto LABEL_39;
    case 8uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 8) {
        goto LABEL_64;
      }
      char v8 = v68.u8[0] == v4;
      return v8 & 1;
    case 9uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v37 = *((void *)&v73 + 1);
      sub_1CA5C1958(a2, &v68);
      unint64_t v38 = v70;
      if (((v70 >> 60) & 3 | (4 * v72)) != 9) {
        goto LABEL_64;
      }
LABEL_39:
      unint64_t v70 = v38 & 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v44 = v68;
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      char v8 = sub_1CA5B6C5C(v4, v37, v44.i64[0], v44.u64[1]);
      sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      return v8 & 1;
    case 10uLL:
      unint64_t v45 = v76 & 0xCFFFFFFFFFFFFFFFLL;
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v47 = *((void *)&v73 + 1);
      unint64_t v46 = v74;
      uint64_t v48 = v75;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 0xA) {
        goto LABEL_64;
      }
      unint64_t v49 = v70 & 0xCFFFFFFFFFFFFFFFLL;
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      if (v68.u16[0] != v5) {
        goto LABEL_64;
      }
      uint64_t v50 = v68.i64[1];
      int8x16_t v51 = v69;
      sub_1CA5B6FE8(v47, v46);
      sub_1CA5B6FE8(v48, v45);
      sub_1CA5B6FE8(v50, v51.u64[0]);
      sub_1CA5B6FE8(v51.i64[1], v49);
      if (sub_1CA5B6C5C(v47, v46, v50, v51.u64[0]))
      {
        char v8 = sub_1CA5B6C5C(v48, v45, v51.i64[1], v49);
        sub_1CA5B6EF4(v51.i64[1], v49);
        sub_1CA5B6EF4(v50, v51.u64[0]);
        sub_1CA5B6EF4(v48, v45);
        sub_1CA5B6EF4(v47, v46);
        return v8 & 1;
      }
      sub_1CA5B6EF4(v51.i64[1], v49);
      sub_1CA5B6EF4(v50, v51.u64[0]);
      sub_1CA5B6EF4(v48, v45);
      uint64_t v58 = v47;
      unint64_t v59 = v46;
LABEL_63:
      sub_1CA5B6EF4(v58, v59);
      goto LABEL_64;
    case 11uLL:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      sub_1CA5C1958(a2, &v68);
      if (((v70 >> 60) & 3 | (4 * v72)) != 0xB) {
        goto LABEL_64;
      }
      char v8 = v68.u16[0] == v5;
      return v8 & 1;
    case 12uLL:
      if (v77) {
        BOOL v52 = 0;
      }
      else {
        BOOL v52 = (v76 | (unint64_t)v73 | v75 | v74 | *((void *)&v73 + 1)) == 0;
      }
      if (v52)
      {
        sub_1CA5C1958(a2, &v68);
        uint64_t v55 = v70;
        if (((v70 >> 60) & 3 | (4 * v72)) != 0xC || v71) {
          goto LABEL_64;
        }
        int8x16_t v56 = vorrq_s8(v68, v69);
        uint64_t v57 = (uint64_t)vorr_s8(*(int8x8_t *)v56.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v56, v56, 8uLL));
      }
      else
      {
        unint64_t v53 = v75 | v76 | v74 | *((void *)&v73 + 1);
        if (v77 || (void)v73 != 1 || v53)
        {
          if (v77 || (void)v73 != 2 || v53)
          {
            if (v77 || (void)v73 != 3 || v53)
            {
              sub_1CA5C1958(a2, &v68);
              unint64_t v54 = v70;
              if (((v70 >> 60) & 3 | (4 * v72)) != 0xC || v71 || v68.i64[0] != 4) {
                goto LABEL_64;
              }
            }
            else
            {
              sub_1CA5C1958(a2, &v68);
              unint64_t v54 = v70;
              if (((v70 >> 60) & 3 | (4 * v72)) != 0xC || v71 || v68.i64[0] != 3) {
                goto LABEL_64;
              }
            }
          }
          else
          {
            sub_1CA5C1958(a2, &v68);
            unint64_t v54 = v70;
            if (((v70 >> 60) & 3 | (4 * v72)) != 0xC || v71 || v68.i64[0] != 2) {
              goto LABEL_64;
            }
          }
        }
        else
        {
          sub_1CA5C1958(a2, &v68);
          unint64_t v54 = v70;
          if (((v70 >> 60) & 3 | (4 * v72)) != 0xC || v71 || v68.i64[0] != 1) {
            goto LABEL_64;
          }
        }
        uint64_t v57 = v69.i64[1] | v69.i64[0];
        uint64_t v55 = v68.i64[1] | v54;
      }
      if (v57 | v55) {
        goto LABEL_64;
      }
      goto LABEL_89;
    default:
      v76 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v7 = *((void *)&v73 + 1);
      unint64_t v6 = v74;
      sub_1CA5C1958(a2, &v68);
      if ((v70 >> 60) & 3 | (4 * v72)) {
        goto LABEL_64;
      }
      char v8 = 0;
      v70 &= 0xCFFFFFFFFFFFFFFFLL;
      if (((v4 ^ v68.u8[0]) & 1) != 0 || v68.u16[1] != WORD1(v4)) {
        return v8 & 1;
      }
      uint64_t v9 = v68.i64[1];
      unint64_t v10 = v69.i64[0];
      if (v6 >> 60 != 15)
      {
        if ((unint64_t)v69.i64[0] >> 60 != 15)
        {
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
          sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
          char v61 = sub_1CA5B6C5C(v7, v6, v9, v10);
          sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
          sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
          if (v61) {
            goto LABEL_89;
          }
LABEL_64:
          char v8 = 0;
          return v8 & 1;
        }
LABEL_83:
        sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
        sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
        sub_1CA5B736C(v7, v6);
        sub_1CA5B736C(v9, v10);
        goto LABEL_64;
      }
      if ((unint64_t)v69.i64[0] >> 60 != 15) {
        goto LABEL_83;
      }
      sub_1CA5C19C8((uint64_t)a1, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
      sub_1CA5C19C8((uint64_t)a2, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
LABEL_89:
      char v8 = 1;
      return v8 & 1;
  }
}

BOOL sub_1CA5C17B8(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40) {
        return 0;
      }
      return ((a2 ^ a1) & 1) == 0;
    }
    if (a1 == 128)
    {
      if (a2 == 128) {
        return 1;
      }
    }
    else if (a2 == 129)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return ((a2 ^ a1) & 1) == 0;
  }
  return 0;
}

uint64_t sub_1CA5C1828(int a1)
{
  uint64_t result = (a1 - 1);
  if (result >= 4u)
  {
    if (qword_1EA6086A8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1CA5FD648();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EA608880);
    int v3 = sub_1CA5FD628();
    os_log_type_t v4 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v3, v4))
    {
      int v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v5 = 0;
      _os_log_impl(&dword_1CA552000, v3, v4, "Unexpected reason for ep not found", v5, 2u);
      MEMORY[0x1CB799300](v5, -1, -1);
    }

    return 4;
  }
  return result;
}

uint64_t sub_1CA5C1918(unsigned __int8 a1)
{
  if (a1 <= 4u) {
    return (0x302010004uLL >> (8 * a1));
  }
  else {
    return 4;
  }
}

uint64_t sub_1CA5C1944(uint64_t result)
{
  if (result >= 5u) {
    return 5;
  }
  else {
    return result;
  }
}

_OWORD *sub_1CA5C1958(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 27) = *(long long *)((char *)a1 + 27);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_1CA5C1970()
{
  unint64_t result = qword_1EA608730;
  if (!qword_1EA608730)
  {
    type metadata accessor for ATLError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608730);
  }
  return result;
}

uint64_t sub_1CA5C19C8(uint64_t a1, void (*a2)(uint64_t, uint64_t, void (*)(void)), void (*a3)(void))
{
  return a1;
}

void sub_1CA5C1A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, void (*a8)(uint64_t, uint64_t, void (*)(void)), void (*a9)(void))
{
  unint64_t v10 = a9;
  switch((a5 >> 60) & 3 | (4 * a7))
  {
    case 0uLL:
      a8(a2, a3, a9);
      return;
    case 1uLL:
    case 10uLL:
      unint64_t v11 = a9;
      ((void (*)(uint64_t, uint64_t))a9)(a2, a3);
      goto LABEL_7;
    case 2uLL:
    case 3uLL:
      unint64_t v11 = a9;
      a9();
LABEL_7:
      unint64_t v10 = v11;
      goto LABEL_8;
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
LABEL_8:
      v10();
      break;
    default:
      return;
  }
}

unint64_t sub_1CA5C1B64()
{
  unint64_t result = qword_1EA608720;
  if (!qword_1EA608720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB4220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608720);
  }
  return result;
}

uint64_t sub_1CA5C1BC0(char a1)
{
  char v2 = a1 + 1;
  if (a1 + 1) < 0x19u && ((0x1F1DFF9u >> v2)) {
    return byte_1CA602A06[v2];
  }
  if (qword_1EA6086A8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1CA5FD648();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA608880);
  os_log_type_t v4 = sub_1CA5FD628();
  os_log_type_t v5 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)unint64_t v6 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBC358];
    *(_OWORD *)(v8 + 16) = xmmword_1CA6021C0;
    uint64_t v10 = MEMORY[0x1E4FBC3B0];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(unsigned char *)(v8 + 32) = a1;
    uint64_t v11 = sub_1CA5FD8B8();
    sub_1CA5DDA20(v11, v12, &v14);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA552000, v4, v5, "Unknown event type %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v7, -1, -1);
    MEMORY[0x1CB799300](v6, -1, -1);
  }

  return 20;
}

uint64_t sub_1CA5C1DC8(char a1)
{
  if ((a1 + 1) > 0x18u) {
    return 20;
  }
  else {
    return byte_1CA602A1F[(char)(a1 + 1)];
  }
}

uint64_t sub_1CA5C1DF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = (HIDWORD(a1) - a1);
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        BOOL v11 = __OFSUB__(HIDWORD(v8), v8);
        int v101 = HIDWORD(v8) - v8;
        if (!v11)
        {
          uint64_t v64 = v101;
LABEL_97:
          uint64_t v104 = Data.popPrefix(_:)(v64);
          if (v3)
          {
LABEL_105:
            uint64_t v108 = v4;
            unint64_t v109 = v5;
LABEL_122:
            sub_1CA5B6EF4(v108, v109);
            return sub_1CA5B6EF4(a1, a2);
          }
          unint64_t v16 = v104;
          uint64_t v17 = v105;
          __int16 v19 = 0;
          char v20 = 0;
          uint64_t v18 = 0x3000000000000000;
          uint64_t v15 = v5;
LABEL_11:
          uint64_t v21 = v15;
          uint64_t result = sub_1CA5B6EF4(a1, a2);
          *(void *)a3 = v4;
          *(void *)(a3 + 8) = v21;
          *(void *)(a3 + 16) = v16;
          *(void *)(a3 + 24) = v17;
          *(void *)(a3 + 32) = v18;
          *(_WORD *)(a3 + 40) = v19;
          *(unsigned char *)(a3 + 42) = v20;
          return result;
        }
        goto LABEL_132;
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      if (v8 < 1) {
        goto LABEL_77;
      }
      char v12 = sub_1CA5BA338();
      unsigned __int8 v13 = sub_1CA5C1BC0(v12);
      if (!v3)
      {
        unsigned __int8 v14 = v13;
        if (v13 == 20)
        {
          uint64_t v15 = 0;
          unint64_t v16 = 0;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          __int16 v19 = 0;
          char v20 = 3;
LABEL_10:
          uint64_t v4 = 4;
          goto LABEL_11;
        }
        switch(a2 >> 62)
        {
          case 1uLL:
            LODWORD(v23) = HIDWORD(a1) - a1;
            if (__OFSUB__(HIDWORD(a1), a1))
            {
              __break(1u);
LABEL_124:
              __break(1u);
              goto LABEL_125;
            }
            uint64_t v23 = (int)v23;
LABEL_17:
            if (v23 < 1) {
              goto LABEL_77;
            }
            int v26 = sub_1CA5BA338();
            char v6 = v26;
            if (v14 - 1 < 5 || v14 == 10)
            {
              if (v26 != 17) {
                goto LABEL_26;
              }
            }
            else if (v26 != 16)
            {
LABEL_26:
              if (qword_1EA6086A8 == -1)
              {
LABEL_27:
                uint64_t v33 = sub_1CA5FD648();
                __swift_project_value_buffer(v33, (uint64_t)qword_1EA608880);
                int8x16_t v34 = sub_1CA5FD628();
                os_log_type_t v35 = sub_1CA5FD9E8();
                if (os_log_type_enabled(v34, v35))
                {
                  unint64_t v36 = (uint8_t *)swift_slowAlloc();
                  uint64_t v37 = swift_slowAlloc();
                  uint64_t v128 = v37;
                  *(_DWORD *)unint64_t v36 = 136315138;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                  uint64_t v38 = swift_allocObject();
                  uint64_t v39 = MEMORY[0x1E4FBC358];
                  *(_OWORD *)(v38 + 16) = xmmword_1CA6021C0;
                  uint64_t v40 = MEMORY[0x1E4FBC3B0];
                  *(void *)(v38 + 56) = v39;
                  *(void *)(v38 + 64) = v40;
                  *(unsigned char *)(v38 + 32) = v6;
                  uint64_t v41 = sub_1CA5FD8B8();
                  sub_1CA5DDA20(v41, v42, &v128);
                  sub_1CA5FDA68();
                  swift_bridgeObjectRelease();
                  char v43 = "Event version is different from expected: %s";
LABEL_29:
                  _os_log_impl(&dword_1CA552000, v34, v35, v43, v36, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1CB799300](v37, -1, -1);
                  MEMORY[0x1CB799300](v36, -1, -1);
                }
LABEL_30:

                type metadata accessor for ATLError(0);
                sub_1CA5C1970();
                swift_allocError();
                void *v44 = 3;
                goto LABEL_78;
              }
LABEL_125:
              swift_once();
              goto LABEL_27;
            }
            break;
          case 2uLL:
            uint64_t v24 = *(void *)(a1 + 16);
            uint64_t v25 = *(void *)(a1 + 24);
            BOOL v11 = __OFSUB__(v25, v24);
            uint64_t v23 = v25 - v24;
            if (!v11) {
              goto LABEL_17;
            }
            goto LABEL_124;
          case 3uLL:
            goto LABEL_77;
          default:
            uint64_t v23 = BYTE6(a2);
            goto LABEL_17;
        }
        char v20 = 3;
        __int16 v19 = 0;
        uint64_t v4 = 0;
        uint64_t v15 = 0;
        unint64_t v16 = 0;
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        switch(v26)
        {
          case 1:
          case 2:
            char v27 = v26;
            if (v26 != 17) {
              goto LABEL_35;
            }
            if (v14 == 1)
            {
              uint64_t v4 = v14;
            }
            else
            {
              if (v14 != 2) {
                goto LABEL_40;
              }
              uint64_t v4 = 0;
            }
            uint64_t v85 = Data.popPrefix(_:)(20);
            unint64_t v16 = v86;
            uint64_t v87 = v85;
            uint64_t v17 = Data.popPrefix(_:)(32);
            unint64_t v89 = v88;
            switch(a2 >> 62)
            {
              case 1uLL:
                LODWORD(v90) = HIDWORD(a1) - a1;
                if (__OFSUB__(HIDWORD(a1), a1)) {
                  goto LABEL_138;
                }
                uint64_t v90 = (int)v90;
LABEL_113:
                if (v90 < 1)
                {
LABEL_121:
                  sub_1CA5BA220();
                  swift_allocError();
                  swift_willThrow();
                  sub_1CA5B6EF4(v17, v89);
                  uint64_t v108 = v87;
                  unint64_t v109 = v16;
                  goto LABEL_122;
                }
                unsigned __int8 v117 = sub_1CA5BA338();
                switch(a2 >> 62)
                {
                  case 1uLL:
                    LODWORD(v118) = HIDWORD(a1) - a1;
                    if (__OFSUB__(HIDWORD(a1), a1)) {
                      goto LABEL_140;
                    }
                    uint64_t v118 = (int)v118;
LABEL_119:
                    if (v118 < 1) {
                      goto LABEL_121;
                    }
                    int v122 = sub_1CA5BA338();
                    char v20 = 0;
                    __int16 v19 = v117 | (unsigned __int16)((unsigned __int16)sub_1CA5C1828(v122) << 8);
                    uint64_t v18 = v89 | 0x1000000000000000;
                    uint64_t v15 = v87;
                    break;
                  case 2uLL:
                    uint64_t v120 = *(void *)(a1 + 16);
                    uint64_t v121 = *(void *)(a1 + 24);
                    BOOL v11 = __OFSUB__(v121, v120);
                    uint64_t v118 = v121 - v120;
                    if (!v11) {
                      goto LABEL_119;
                    }
                    goto LABEL_141;
                  case 3uLL:
                    goto LABEL_121;
                  default:
                    uint64_t v118 = BYTE6(a2);
                    goto LABEL_119;
                }
                break;
              case 2uLL:
                uint64_t v115 = *(void *)(a1 + 16);
                uint64_t v116 = *(void *)(a1 + 24);
                BOOL v11 = __OFSUB__(v116, v115);
                uint64_t v90 = v116 - v115;
                if (!v11) {
                  goto LABEL_113;
                }
                goto LABEL_139;
              case 3uLL:
                goto LABEL_121;
              default:
                uint64_t v90 = BYTE6(a2);
                goto LABEL_113;
            }
            goto LABEL_11;
          case 3:
          case 4:
          case 5:
            char v27 = v26;
            if (v26 == 17)
            {
              if ((v14 - 3) < 3u)
              {
                uint64_t v28 = qword_1CA602A38[(char)(v14 - 3)];
                uint64_t v4 = Data.popPrefix(_:)(20);
                uint64_t v124 = v29;
                uint64_t v30 = Data.popPrefix(_:)(2);
                unint64_t v32 = v31;
                unsigned __int16 v110 = sub_1CA5C6864(v30, v31, 0, 0);
                sub_1CA5B6EF4(v30, v32);
                uint64_t v17 = Data.popPrefix(_:)(32);
                __int16 v19 = 0;
                char v20 = 0;
                unint64_t v16 = v28 | ((unint64_t)(v14 == 4) << 24) | v110;
                uint64_t v18 = v119 | 0x2000000000000000;
                uint64_t v15 = v124;
                goto LABEL_11;
              }
LABEL_40:
              if (qword_1EA6086A8 != -1) {
                swift_once();
              }
              uint64_t v51 = sub_1CA5FD648();
              __swift_project_value_buffer(v51, (uint64_t)qword_1EA608880);
              int8x16_t v34 = sub_1CA5FD628();
              os_log_type_t v35 = sub_1CA5FD9E8();
              if (os_log_type_enabled(v34, v35))
              {
                unint64_t v36 = (uint8_t *)swift_slowAlloc();
                uint64_t v37 = swift_slowAlloc();
                uint64_t v128 = v37;
                *(_DWORD *)unint64_t v36 = 136315138;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                uint64_t v52 = swift_allocObject();
                char v53 = asc_1CA60C1AB[(char)v14];
                uint64_t v54 = MEMORY[0x1E4FBC358];
                *(_OWORD *)(v52 + 16) = xmmword_1CA6021C0;
                uint64_t v55 = MEMORY[0x1E4FBC3B0];
                *(void *)(v52 + 56) = v54;
                *(void *)(v52 + 64) = v55;
                *(unsigned char *)(v52 + 32) = v53;
                uint64_t v56 = sub_1CA5FD8B8();
                sub_1CA5DDA20(v56, v57, &v128);
                sub_1CA5FDA68();
                swift_bridgeObjectRelease();
                char v43 = "Unknown transaction type for event type: %s.";
                goto LABEL_29;
              }
            }
            else
            {
LABEL_35:
              if (qword_1EA6086A8 != -1) {
                swift_once();
              }
              uint64_t v45 = sub_1CA5FD648();
              __swift_project_value_buffer(v45, (uint64_t)qword_1EA608880);
              int8x16_t v34 = sub_1CA5FD628();
              os_log_type_t v35 = sub_1CA5FD9E8();
              if (os_log_type_enabled(v34, v35))
              {
                unint64_t v36 = (uint8_t *)swift_slowAlloc();
                uint64_t v37 = swift_slowAlloc();
                uint64_t v128 = v37;
                *(_DWORD *)unint64_t v36 = 136315138;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                uint64_t v46 = swift_allocObject();
                uint64_t v47 = MEMORY[0x1E4FBC358];
                *(_OWORD *)(v46 + 16) = xmmword_1CA6021C0;
                uint64_t v48 = MEMORY[0x1E4FBC3B0];
                *(void *)(v46 + 56) = v47;
                *(void *)(v46 + 64) = v48;
                *(unsigned char *)(v46 + 32) = v27;
                goto LABEL_39;
              }
            }
            goto LABEL_30;
          case 6:
            goto LABEL_11;
          case 7:
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            __int16 v19 = 0;
            uint64_t v4 = 1;
            goto LABEL_11;
          case 8:
            uint64_t v62 = Data.popPrefix(_:)(2);
            uint64_t v8 = a1;
            uint64_t v4 = v62;
            unint64_t v5 = v63;
            uint64_t v64 = 0;
            switch(a2 >> 62)
            {
              case 1uLL:
                goto LABEL_94;
              case 2uLL:
                uint64_t v102 = *(void *)(a1 + 16);
                uint64_t v103 = *(void *)(a1 + 24);
                uint64_t v64 = v103 - v102;
                if (!__OFSUB__(v103, v102)) {
                  goto LABEL_97;
                }
                goto LABEL_133;
              case 3uLL:
                goto LABEL_97;
              default:
                uint64_t v64 = BYTE6(a2);
                goto LABEL_97;
            }
          case 9:
            uint64_t v4 = Data.popPrefix(_:)(2);
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            __int16 v19 = 0;
            char v20 = 1;
            goto LABEL_11;
          case 10:
            char v65 = v26;
            if (v26 == 17)
            {
              uint64_t v66 = 0;
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (__OFSUB__(HIDWORD(a1), a1)) {
                    goto LABEL_130;
                  }
                  uint64_t v66 = HIDWORD(a1) - (int)a1;
LABEL_91:
                  uint64_t v4 = Data.popPrefix(_:)(v66);
                  unint64_t v16 = 0;
                  uint64_t v17 = 0;
                  __int16 v19 = 0;
                  char v20 = 1;
                  uint64_t v18 = 0x1000000000000000;
                  break;
                case 2uLL:
                  uint64_t v99 = *(void *)(a1 + 16);
                  uint64_t v100 = *(void *)(a1 + 24);
                  uint64_t v66 = v100 - v99;
                  if (!__OFSUB__(v100, v99)) {
                    goto LABEL_91;
                  }
                  goto LABEL_131;
                case 3uLL:
                  goto LABEL_91;
                default:
                  uint64_t v66 = BYTE6(a2);
                  goto LABEL_91;
              }
              goto LABEL_11;
            }
            if (qword_1EA6086A8 != -1) {
              swift_once();
            }
            uint64_t v81 = sub_1CA5FD648();
            __swift_project_value_buffer(v81, (uint64_t)qword_1EA608880);
            int8x16_t v34 = sub_1CA5FD628();
            os_log_type_t v35 = sub_1CA5FD9E8();
            if (!os_log_type_enabled(v34, v35)) {
              goto LABEL_30;
            }
            unint64_t v36 = (uint8_t *)swift_slowAlloc();
            uint64_t v37 = swift_slowAlloc();
            uint64_t v128 = v37;
            *(_DWORD *)unint64_t v36 = 136315138;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
            uint64_t v82 = swift_allocObject();
            uint64_t v83 = MEMORY[0x1E4FBC358];
            *(_OWORD *)(v82 + 16) = xmmword_1CA6021C0;
            uint64_t v84 = MEMORY[0x1E4FBC3B0];
            *(void *)(v82 + 56) = v83;
            *(void *)(v82 + 64) = v84;
            *(unsigned char *)(v82 + 32) = v65;
LABEL_39:
            uint64_t v49 = sub_1CA5FD8B8();
            sub_1CA5DDA20(v49, v50, &v128);
            sub_1CA5FDA68();
            swift_bridgeObjectRelease();
            char v43 = "Event version is different: %s.";
            goto LABEL_29;
          case 11:
            uint64_t v4 = Data.popPrefix(_:)(20);
            unint64_t v5 = v67;
            switch(a2 >> 62)
            {
              case 1uLL:
                LODWORD(v68) = HIDWORD(a1) - a1;
                if (__OFSUB__(HIDWORD(a1), a1)) {
                  goto LABEL_134;
                }
                uint64_t v68 = (int)v68;
LABEL_102:
                if (v68 >= 1)
                {
                  uint64_t v17 = 0;
                  __int16 v19 = 0;
                  unint64_t v16 = (sub_1CA5BA338() & 1) == 0;
                  char v20 = 1;
                  uint64_t v18 = 0x2000000000000000;
                  uint64_t v15 = v5;
                  goto LABEL_11;
                }
LABEL_104:
                sub_1CA5BA220();
                swift_allocError();
                swift_willThrow();
                break;
              case 2uLL:
                uint64_t v106 = *(void *)(a1 + 16);
                uint64_t v107 = *(void *)(a1 + 24);
                BOOL v11 = __OFSUB__(v107, v106);
                uint64_t v68 = v107 - v106;
                if (!v11) {
                  goto LABEL_102;
                }
                goto LABEL_135;
              case 3uLL:
                goto LABEL_104;
              default:
                uint64_t v68 = BYTE6(a2);
                goto LABEL_102;
            }
            goto LABEL_105;
          case 12:
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            __int16 v19 = 0;
            uint64_t v4 = 2;
            goto LABEL_11;
          case 13:
            uint64_t v4 = Data.popPrefix(_:)(20);
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            __int16 v19 = 0;
            char v20 = 1;
            uint64_t v18 = 0x3000000000000000;
            goto LABEL_11;
          case 14:
            switch(a2 >> 62)
            {
              case 1uLL:
                LODWORD(v69) = HIDWORD(a1) - a1;
                if (!__OFSUB__(HIDWORD(a1), a1))
                {
                  uint64_t v69 = (int)v69;
LABEL_74:
                  if (v69 >= 1)
                  {
                    unsigned __int8 v93 = sub_1CA5BA338() - 1;
                    if (v93 >= 4u)
                    {
                      uint64_t v4 = 0;
                      uint64_t v15 = 0;
                      unint64_t v16 = 0;
                      uint64_t v17 = 0;
                      uint64_t v18 = 0;
                      __int16 v19 = 0;
                    }
                    else
                    {
                      uint64_t v15 = 0;
                      unint64_t v16 = 0;
                      uint64_t v17 = 0;
                      uint64_t v18 = 0;
                      __int16 v19 = 0;
                      uint64_t v4 = v93 + 1;
                    }
                    char v20 = 2;
                    goto LABEL_11;
                  }
LABEL_77:
                  sub_1CA5BA220();
                  swift_allocError();
LABEL_78:
                  swift_willThrow();
                  return sub_1CA5B6EF4(a1, a2);
                }
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
                break;
              case 2uLL:
                uint64_t v91 = *(void *)(a1 + 16);
                uint64_t v92 = *(void *)(a1 + 24);
                BOOL v11 = __OFSUB__(v92, v91);
                uint64_t v69 = v92 - v91;
                if (!v11) {
                  goto LABEL_74;
                }
                goto LABEL_127;
              case 3uLL:
                goto LABEL_77;
              default:
                uint64_t v69 = BYTE6(a2);
                goto LABEL_74;
            }
            break;
          case 15:
            uint64_t v70 = 0;
            switch(a2 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(a1), a1)) {
                  goto LABEL_128;
                }
                uint64_t v70 = HIDWORD(a1) - (int)a1;
LABEL_83:
                uint64_t v4 = Data.popPrefix(_:)(v70);
                unint64_t v16 = 0;
                uint64_t v17 = 0;
                __int16 v19 = 0;
                char v20 = 2;
                uint64_t v18 = 0x1000000000000000;
                break;
              case 2uLL:
                uint64_t v94 = *(void *)(a1 + 16);
                uint64_t v95 = *(void *)(a1 + 24);
                uint64_t v70 = v95 - v94;
                if (!__OFSUB__(v95, v94)) {
                  goto LABEL_83;
                }
                goto LABEL_129;
              case 3uLL:
                goto LABEL_83;
              default:
                uint64_t v70 = BYTE6(a2);
                goto LABEL_83;
            }
            goto LABEL_11;
          case 16:
            uint64_t v71 = Data.popPrefix(_:)(2);
            unint64_t v73 = v72;
            unsigned __int16 v74 = sub_1CA5C6864(v71, v72, 0, 0);
            sub_1CA5B6EF4(v71, v73);
            uint64_t v75 = Data.popPrefix(_:)(20);
            unint64_t v16 = v76;
            uint64_t v17 = Data.popPrefix(_:)(32);
            __int16 v19 = 0;
            uint64_t v4 = v74;
            uint64_t v18 = v77 | 0x2000000000000000;
            char v20 = 2;
            uint64_t v15 = v75;
            goto LABEL_11;
          case 17:
            uint64_t v78 = Data.popPrefix(_:)(2);
            unint64_t v80 = v79;
            unsigned __int16 v98 = sub_1CA5C6864(v78, v79, 0, 0);
            sub_1CA5B6EF4(v78, v80);
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            __int16 v19 = 0;
            uint64_t v4 = v98;
            char v20 = 2;
            uint64_t v18 = 0x3000000000000000;
            goto LABEL_11;
          case 18:
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            __int16 v19 = 0;
            uint64_t v4 = 3;
            goto LABEL_11;
          case 19:
            uint64_t v15 = 0;
            unint64_t v16 = 0;
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            __int16 v19 = 0;
            goto LABEL_10;
          default:
            uint64_t v58 = Data.popPrefix(_:)(2);
            unint64_t v60 = v59;
            sub_1CA5B6FE8(v58, v59);
            __int16 v61 = sub_1CA5F4158(v58, v60);
            sub_1CA5B6EF4(v58, v60);
            sub_1CA5B6FE8(v58, v60);
            unsigned __int16 v123 = sub_1CA5C6864(v58, v60, 0, 0);
            int v96 = v61 & 0x1FF;
            sub_1CA5B6EF4(v58, v60);
            uint64_t v97 = 0;
            switch(a2 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(a1), a1)) {
                  goto LABEL_136;
                }
                uint64_t v97 = HIDWORD(a1) - (int)a1;
LABEL_109:
                uint64_t v113 = Data.popPrefix(_:)(v97);
                unint64_t v16 = v114;
                uint64_t v125 = v113;
                sub_1CA5B6EF4(v58, v60);
                uint64_t v17 = 0;
                uint64_t v18 = 0;
                __int16 v19 = 0;
                char v20 = 0;
                uint64_t v15 = v125;
                uint64_t v4 = (v96 == 1) | ((unint64_t)v123 << 16);
                break;
              case 2uLL:
                uint64_t v111 = *(void *)(a1 + 16);
                uint64_t v112 = *(void *)(a1 + 24);
                uint64_t v97 = v112 - v111;
                if (!__OFSUB__(v112, v111)) {
                  goto LABEL_109;
                }
                goto LABEL_137;
              case 3uLL:
                goto LABEL_109;
              default:
                uint64_t v97 = BYTE6(a2);
                goto LABEL_109;
            }
            goto LABEL_11;
        }
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
        JUMPOUT(0x1CA5C2E80);
      }
      return sub_1CA5B6EF4(a1, a2);
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_93;
    case 3uLL:
      goto LABEL_77;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1CA5C2F70(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1EA6086A8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1CA5FD648();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EA608880);
  sub_1CA5B6FE8(a1, a2);
  swift_bridgeObjectRetain();
  sub_1CA5B6FE8(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1CA5FD628();
  os_log_type_t v10 = sub_1CA5FD9C8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1CA5C4448(a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
    uint64_t v16 = a3;
    sub_1CA5C1B64();
    uint64_t v12 = sub_1CA5FD888();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1CA5DDA20(v12, v14, &v18);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease();
    sub_1CA5B6EF4(a1, a2);
    sub_1CA5B6EF4(a1, a2);
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1CA5DDA20(v16, a4, &v18);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CA552000, v9, v10, "messageInExchange %s for aid %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v17, -1, -1);
    MEMORY[0x1CB799300](v11, -1, -1);
  }
  else
  {
    sub_1CA5B6EF4(a1, a2);
    sub_1CA5B6EF4(a1, a2);

    swift_bridgeObjectRelease_n();
  }
  return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1CA5C322C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = v4;
  unsigned int v10 = v6[OBJC_IVAR____TtC24AppletTranslationLibrary16LyonSwiftDecoder_state];
  if (v10 >> 6)
  {
    if (v10 >> 6 == 1)
    {
      uint64_t v35 = a3;
      uint64_t v11 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))sub_1CA5C3B4C;
    }
    else
    {
      if (v10 != 128) {
        return sub_1CA5F1004(MEMORY[0x1E4FBC860]);
      }
      uint64_t v11 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))sub_1CA5C3B8C;
      uint64_t v35 = a3;
    }
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))sub_1CA5C3B68;
    uint64_t v35 = a3;
  }
  *(void *)(swift_allocObject() + 16) = v6;
  uint64_t v12 = v6;
  sub_1CA5B6FE8(a1, a2);
  sub_1CA5C1DF4(a1, a2, (uint64_t)v37);
  if (v5)
  {
    if (qword_1EA6086A8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1CA5FD648();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EA608880);
    sub_1CA5B6FE8(a1, a2);
    sub_1CA5B6FE8(a1, a2);
    uint64_t v24 = sub_1CA5FD628();
    os_log_type_t v25 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v24, v25))
    {
      int v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v38 = v36;
      *(_DWORD *)int v26 = 136315138;
      sub_1CA5C4448(a1, a2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5C1B64();
      uint64_t v27 = sub_1CA5FD888();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      sub_1CA5DDA20(v27, v29, &v38);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease();
      sub_1CA5B6EF4(a1, a2);
      sub_1CA5B6EF4(a1, a2);
      _os_log_impl(&dword_1CA552000, v24, v25, "LyonDecoder eventHandler error: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v36, -1, -1);
      MEMORY[0x1CB799300](v26, -1, -1);
    }
    else
    {
      sub_1CA5B6EF4(a1, a2);
      sub_1CA5B6EF4(a1, a2);
    }

    type metadata accessor for ATLError(0);
    uint64_t v22 = v30;
    sub_1CA5C1970();
    swift_allocError();
    *unint64_t v31 = 3;
    swift_willThrow();

    swift_release();
  }
  else
  {
    if (qword_1EA6086A8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1CA5FD648();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA608880);
    unint64_t v14 = v12;
    sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
    int8x16_t v34 = v14;
    sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
    uint64_t v15 = sub_1CA5FD628();
    os_log_type_t v16 = sub_1CA5FD9C8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v38 = v33;
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_1CA5BCB60();
      uint64_t v18 = sub_1CA5FD8C8();
      sub_1CA5DDA20(v18, v19, &v38);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease();
      sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v20 = sub_1CA5FD8C8();
      sub_1CA5DDA20(v20, v21, &v38);
      sub_1CA5FDA68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA552000, v15, v16, "Received event %s in state %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v33, -1, -1);
      MEMORY[0x1CB799300](v17, -1, -1);
    }
    else
    {
      sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
      sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
    }
    uint64_t v22 = v11(v37, v35, a4);
    swift_release();
    sub_1CA5C19C8((uint64_t)v37, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
  }
  return v22;
}

unint64_t sub_1CA5C3910()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA602380;
  sub_1CA5FD8A8();
  sub_1CA5FDAE8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 72) = 1;
  sub_1CA5FD8A8();
  sub_1CA5FDAE8();
  *(void *)(inited + 168) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 144) = 1000;
  return sub_1CA5F1004(inited);
}

uint64_t sub_1CA5C3A00(const char *a1)
{
  if (qword_1EA6086A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1CA5FD648();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA608880);
  uint64_t v3 = sub_1CA5FD628();
  os_log_type_t v4 = sub_1CA5FD9E8();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_1CA552000, v3, v4, a1, v5, 2u);
    MEMORY[0x1CB799300](v5, -1, -1);
  }

  type metadata accessor for ATLError(0);
  sub_1CA5C1970();
  swift_allocError();
  *char v6 = 2;
  return swift_willThrow();
}

uint64_t sub_1CA5C3B14()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1CA5C3B4C(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA5BCEFC(a1, a2, a3);
}

unint64_t sub_1CA5C3B68(long long *a1, uint64_t a2, unint64_t a3)
{
  return sub_1CA5BDF24(a1, a2, a3);
}

unint64_t sub_1CA5C3B8C(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA5BCFE8(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for LyonConstants.EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LyonConstants.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C3D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.EventType()
{
  return &type metadata for LyonConstants.EventType;
}

void destroy for LyonConstants.Event(uint64_t a1)
{
}

uint64_t initializeWithCopy for LyonConstants.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 42);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 40);
  sub_1CA5C1A18(*(void *)a2, v4, v5, v6, v7, v9, v8, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 42) = v8;
  return a1;
}

uint64_t assignWithCopy for LyonConstants.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 42);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 40);
  sub_1CA5C1A18(*(void *)a2, v4, v5, v6, v7, v9, v8, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B8510, (void (*)(void))sub_1CA5B6FE8);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  unint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  uint64_t v15 = *(unsigned __int16 *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v9;
  char v16 = *(unsigned char *)(a1 + 42);
  *(unsigned char *)(a1 + 42) = v8;
  sub_1CA5C1A18(v10, v11, v12, v13, v14, v15, v16, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
  return a1;
}

__n128 __swift_memcpy43_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LyonConstants.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  __int16 v4 = *(_WORD *)(a2 + 40);
  char v5 = *(unsigned char *)(a2 + 42);
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v3;
  uint64_t v12 = *(unsigned __int16 *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v4;
  char v13 = *(unsigned char *)(a1 + 42);
  *(unsigned char *)(a1 + 42) = v5;
  sub_1CA5C1A18(v6, v8, v7, v9, v10, v12, v13, (void (*)(uint64_t, uint64_t, void (*)(void)))sub_1CA5B736C, (void (*)(void))sub_1CA5B6EF4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LyonConstants.Event(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F4 && *(unsigned char *)(a1 + 43)) {
    return (*(_DWORD *)a1 + 1012);
  }
  unsigned int v3 = ((*(void *)(a1 + 32) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 42))) ^ 0x3FF;
  if (v3 >= 0x3F3) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LyonConstants.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F3)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 1012;
    if (a3 >= 0x3F4) {
      *(unsigned char *)(result + 43) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F4) {
      *(unsigned char *)(result + 43) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = (-a2 & 3) << 60;
      *(_WORD *)(result + 40) = 0;
      *(unsigned char *)(result + 42) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_1CA5C40B0(uint64_t a1)
{
  if (((*(void *)(a1 + 32) >> 60) & 3 | (4 * *(unsigned char *)(a1 + 42))) <= 0xBu) {
    return (*(void *)(a1 + 32) >> 60) & 3 | (4 * *(unsigned char *)(a1 + 42));
  }
  else {
    return (*(_DWORD *)a1 + 12);
  }
}

uint64_t sub_1CA5C40D8(uint64_t result)
{
  *(void *)(result + 32) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1CA5C40E8(uint64_t result, unsigned int a2)
{
  if (a2 < 0xC)
  {
    *(void *)(result + 32) = *(void *)(result + 32) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
    *(unsigned char *)(result + 42) = a2 >> 2;
  }
  else
  {
    *(void *)__n128 result = a2 - 12;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 42) = 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.Event()
{
  return &type metadata for LyonConstants.Event;
}

uint64_t getEnumTagSinglePayload for LyonConstants.TransactionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LyonConstants.TransactionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C4298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1CA5C42C0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LyonConstants.TransactionType()
{
  return &type metadata for LyonConstants.TransactionType;
}

unint64_t sub_1CA5C42E0()
{
  unint64_t result = qword_1EA608908;
  if (!qword_1EA608908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608908);
  }
  return result;
}

unint64_t sub_1CA5C4338()
{
  unint64_t result = qword_1EA608910;
  if (!qword_1EA608910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608910);
  }
  return result;
}

uint64_t sub_1CA5C43A0(uint64_t a1, unint64_t a2)
{
  sub_1CA5C4448(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
  uint64_t v2 = sub_1CA5FD888();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CA5C4448(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x1E4FBC860];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_1CA5DE698(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1CA5FD408();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1CA5FD428();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1CA5FD408();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1CA5FD428();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1CA6021C0;
        *(void *)(v16 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v16 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_1CA5FD8B8();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1CA5DE698(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v2;
        *(void *)(v21 + 40) = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5C47F0(char a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
  uint64_t v5 = sub_1CA5B8634((unint64_t *)&qword_1EBCB41A0, &qword_1EBCB4238);
  LOBYTE(v3[0]) = a1;
  __swift_project_boxed_opaque_existential_1Tm(v3, v4);
  sub_1CA5FD538();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

void *sub_1CA5C4918(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4240);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C50A8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1CA5C4A28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608938);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 5);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C557C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1CA5C4B38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C5674(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1CA5C4C48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1CA5C4F8C(a1, a2, a3, a4, &qword_1EA608928, &qword_1EBCB4220);
}

void *sub_1CA5C4C5C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608930);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C5768(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1CA5C4D6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1CA5C5950(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1CA5C4E68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      char v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C585C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1CA5C4F78(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1CA5C4F8C(a1, a2, a3, a4, &qword_1EA608918, &qword_1EA608920);
}

void *sub_1CA5C4F8C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      char v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      uint64_t v13[2] = v11;
      void v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      char v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA5C5A38(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_1CA5C50A8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C5194(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_1CA5FD448();
      swift_allocObject();
      sub_1CA5FD438();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1CA5FD518();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CA5C5230(uint64_t a1, unint64_t a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = HIBYTE(a2) & 0xF;
  v21[0] = a1;
  v21[1] = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v21[2] = 0;
  uint64_t v22 = v2;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1CA5FD908();
    if (!v4) {
      break;
    }
    uint64_t v5 = sub_1CA5FD878();
    char v7 = v6;
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1CA5C4918(0, v3[2] + 1, 1, v3);
      }
      unint64_t v9 = v3[2];
      unint64_t v8 = v3[3];
      if (v9 >= v8 >> 1) {
        uint64_t v3 = sub_1CA5C4918((void *)(v8 > 1), v9 + 1, 1, v3);
      }
      v3[2] = v9 + 1;
      v3[v9 + 4] = v5;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v3[2];
  if (v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v11 = sub_1CA5FD8E8();
  swift_bridgeObjectRelease();
  if (v10 != v11)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = sub_1CA5C5194(v10 >> 1);
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  if (v10)
  {
    unint64_t v14 = 0;
    do
    {
      unint64_t v16 = v3[2];
      if (v14 >= v16)
      {
        __break(1u);
LABEL_27:
        __break(1u);
      }
      unint64_t v17 = v14 + 1;
      if (v14 + 1 >= v16) {
        goto LABEL_27;
      }
      unint64_t v18 = v3[v14 + 5] | (16 * v3[v14 + 4]);
      if ((v18 & 0x8000000000000000) != 0 || v18 >= 0x100)
      {
        sub_1CA5FDC08();
        __break(1u);
        JUMPOUT(0x1CA5C556CLL);
      }
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
      uint64_t v22 = v15;
      uint64_t v23 = sub_1CA5B8634((unint64_t *)&qword_1EBCB41A0, &qword_1EBCB4238);
      LOBYTE(v21[0]) = v18;
      __swift_project_boxed_opaque_existential_1Tm(v21, v15);
      sub_1CA5FD538();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
      unint64_t v14 = v17 + 1;
    }
    while (v17 + 1 < v10);
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    uint64_t v19 = v12;
    swift_bridgeObjectRelease();
  }
  return v19;
}

uint64_t sub_1CA5C557C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C5674(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C5768(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C585C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

char *sub_1CA5C5950(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C5A38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5C5B40(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608970);
    uint64_t v2 = sub_1CA5FDC58();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1CA5B83E4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CA5B6F4C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1CA5B6F4C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1CA5B6F4C(v36, v37);
    sub_1CA5B6F4C(v37, &v33);
    uint64_t result = sub_1CA5FDAC8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1CA5B6F4C(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CA5C92D8();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1CA5C5F64()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AlphonsoSwiftDecoder()) init];
  qword_1EA608940 = (uint64_t)result;
  return result;
}

uint64_t sub_1CA5C6110(uint64_t a1, unint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608978);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA602380;
  *(void *)(inited + 32) = 0x61655273656C6966;
  *(void *)(inited + 40) = 0xE900000000000064;
  *(void *)(inited + 48) = 193;
  *(_WORD *)(inited + 56) = 0;
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  *(unsigned char *)(inited + 80) = -64;
  *(void *)(inited + 88) = &unk_1F24D3BB0;
  strcpy((char *)(inited + 96), "filesWritten");
  *(unsigned char *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(void *)(inited + 112) = 194;
  *(_WORD *)(inited + 120) = 0;
  *(void *)(inited + 128) = 0;
  *(void *)(inited + 136) = 0;
  *(unsigned char *)(inited + 144) = -64;
  *(void *)(inited + 152) = &unk_1F24D3C00;
  *(void *)&long long v10 = 225;
  WORD4(v10) = 0;
  uint64_t v11 = inited;
  uint64_t v12 = 1;
  char v13 = 64;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v8 = a1;
  unint64_t v9 = a2;
  sub_1CA5B6FE8(a1, a2);
  unint64_t v6 = sub_1CA5F4764((uint64_t)&v8, &v10);
  sub_1CA5B6EF4(v8, v9);
  if (v2)
  {
    sub_1CA5B6EF4(a1, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t inited = sub_1CA5C7590(v6);
    sub_1CA5B6EF4(a1, a2);
  }
  return inited;
}

id sub_1CA5C6514()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlphonsoSwiftDecoder();
  return [super dealloc];
}

uint64_t type metadata accessor for AlphonsoSwiftDecoder()
{
  return self;
}

uint64_t sub_1CA5C6570()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608758);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA602A50;
  *(void *)(v0 + 32) = [objc_allocWithZone(NSNumber) initWithInteger:25541];
  *(void *)(v0 + 40) = [objc_allocWithZone(NSNumber) initWithInteger:25540];
  *(void *)(v0 + 48) = [objc_allocWithZone(NSNumber) initWithInteger:25539];
  *(void *)(v0 + 56) = [objc_allocWithZone(NSNumber) initWithInteger:25538];
  *(void *)(v0 + 64) = [objc_allocWithZone(NSNumber) initWithInteger:25537];
  *(void *)(v0 + 72) = [objc_allocWithZone(NSNumber) initWithInteger:25536];
  uint64_t result = sub_1CA5FD968();
  qword_1EA608948 = v0;
  return result;
}

uint64_t sub_1CA5C6674()
{
  uint64_t v0 = sub_1CA5FD648();
  __swift_allocate_value_buffer(v0, qword_1EA608950);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA608950);
  return sub_1CA5FD638();
}

_OWORD *sub_1CA5C66EC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1CA5F1A20(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a4 & 1) == 0)
  {
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1CA5E3168();
      goto LABEL_7;
    }
    sub_1CA5E1D50(v17, a4 & 1);
    uint64_t v23 = sub_1CA5F1A20(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    sub_1CA5B6F4C((_OWORD *)(v20[7] + 32 * v14), a5);
    unint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
    return sub_1CA5B6F4C(a1, v21);
  }
LABEL_13:
  sub_1CA5E30B4(v14, a2, a3, a1, v20);
  *a5 = 0u;
  a5[1] = 0u;

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1CA5C6864(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a3 + 2;
  if (__OFADD__(a3, 2))
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  unint64_t v5 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_18;
      }
      uint64_t v8 = (int)v8;
LABEL_7:
      if (v8 < v4)
      {
LABEL_12:
        sub_1CA5FDB18();
        swift_bridgeObjectRelease();
        uint64_t v14 = 0xD000000000000012;
        uint64_t v15 = 0x80000001CA60C340;
        sub_1CA5FDCA8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5FD8F8();
        switch((int)v5)
        {
          case 1:
            if (!__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_16;
            }
            goto LABEL_20;
          case 2:
            if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
              goto LABEL_16;
            }
            goto LABEL_21;
          default:
LABEL_16:
            sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5FD8F8();
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5BBD9C(v14, v15, 8, 0);
            uint64_t result = swift_willThrow();
            break;
        }
      }
      else
      {
LABEL_8:
        sub_1CA5BBAB8(a1, a2, a3, 2, &v14);
        unsigned int v12 = bswap32(0) >> 16;
        if (a4) {
          return 0;
        }
        else {
          return v12;
        }
      }
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_7;
      }
      goto LABEL_19;
    case 3uLL:
      if (v4 > 0) {
        goto LABEL_12;
      }
      goto LABEL_8;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t sub_1CA5C6B54(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  unint64_t v4 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_16;
      }
      uint64_t v6 = (int)v6;
LABEL_7:
      if (v6 < v3)
      {
LABEL_10:
        sub_1CA5FDB18();
        swift_bridgeObjectRelease();
        uint64_t v11 = 0xD000000000000012;
        uint64_t v12 = 0x80000001CA60C340;
        sub_1CA5FDCA8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5FD8F8();
        switch((int)v4)
        {
          case 1:
            if (!__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_14;
            }
            goto LABEL_18;
          case 2:
            if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
              goto LABEL_14;
            }
            goto LABEL_19;
          default:
LABEL_14:
            sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5FD8F8();
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5BBD9C(v11, v12, 8, 0);
            uint64_t result = swift_willThrow();
            break;
        }
      }
      else
      {
LABEL_8:
        sub_1CA5BBAB8(a1, a2, a3, 1, &v11);
        return 0;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_7;
      }
      goto LABEL_17;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_10;
      }
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t sub_1CA5C6E30(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a3 + 4;
  if (__OFADD__(a3, 4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  unint64_t v5 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_18;
      }
      uint64_t v8 = (int)v8;
LABEL_7:
      if (v8 < v4)
      {
LABEL_12:
        sub_1CA5FDB18();
        swift_bridgeObjectRelease();
        uint64_t v14 = 0xD000000000000012;
        uint64_t v15 = 0x80000001CA60C340;
        sub_1CA5FDCA8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5FD8F8();
        switch((int)v5)
        {
          case 1:
            if (!__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_16;
            }
            goto LABEL_20;
          case 2:
            if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
              goto LABEL_16;
            }
            goto LABEL_21;
          default:
LABEL_16:
            sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5FD8F8();
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5BBD9C(v14, v15, 8, 0);
            uint64_t result = swift_willThrow();
            break;
        }
      }
      else
      {
LABEL_8:
        sub_1CA5BBAB8(a1, a2, a3, 4, &v14);
        unsigned int v12 = bswap32(0);
        if (a4) {
          return 0;
        }
        else {
          return v12;
        }
      }
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_7;
      }
      goto LABEL_19;
    case 3uLL:
      if (v4 > 0) {
        goto LABEL_12;
      }
      goto LABEL_8;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_1CA5C711C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C7570);
      }
      uint64_t v12 = (int)v12;
LABEL_6:
      if (v12 == 5)
      {
        sub_1CA5B6FE8(a1, a2);
        char v16 = sub_1CA5C6B54(a1, a2, 2);
        unint64_t result = sub_1CA5B6EF4(a1, a2);
        if (!v5)
        {
          sub_1CA5B6FE8(a1, a2);
          __int16 v18 = sub_1CA5C6864(a1, a2, 3, 0);
          sub_1CA5B6EF4(a1, a2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1CA602680;
          *(void *)(inited + 32) = sub_1CA5FD8A8();
          *(void *)(inited + 40) = v20;
          uint64_t v21 = sub_1CA5FD8A8();
          uint64_t v22 = MEMORY[0x1E4FBB1A0];
          *(void *)(inited + 48) = v21;
          *(void *)(inited + 56) = v23;
          *(void *)(inited + 72) = v22;
          *(void *)(inited + 80) = 0xD000000000000010;
          *(void *)(inited + 120) = v22;
          *(void *)(inited + 88) = 0x80000001CA60C0E0;
          *(void *)(inited + 96) = a3;
          *(void *)(inited + 104) = a4;
          *(void *)(inited + 128) = sub_1CA5FD8A8();
          *(void *)(inited + 136) = v24;
          uint64_t v25 = MEMORY[0x1E4FBC358];
          *(void *)(inited + 168) = MEMORY[0x1E4FBC358];
          *(unsigned char *)(inited + 144) = a5;
          *(void *)(inited + 176) = sub_1CA5FD8A8();
          *(void *)(inited + 184) = v26;
          *(unsigned char *)(inited + 192) = v16;
          *(void *)(inited + 216) = v25;
          strcpy((char *)(inited + 224), "selectStatus");
          *(unsigned char *)(inited + 237) = 0;
          *(_WORD *)(inited + 238) = -5120;
          *(void *)(inited + 264) = MEMORY[0x1E4FBC450];
          *(_WORD *)(inited + 240) = v18;
          *(void *)(inited + 272) = sub_1CA5FD8A8();
          *(void *)(inited + 280) = v27;
          *(void *)(inited + 312) = MEMORY[0x1E4FBB390];
          *(unsigned char *)(inited + 288) = 1;
          *(void *)(inited + 320) = sub_1CA5FD8A8();
          *(void *)(inited + 328) = v28;
          uint64_t v29 = MEMORY[0x1E4FBB550];
          *(void *)(inited + 360) = MEMORY[0x1E4FBB550];
          *(void *)(inited + 336) = 0;
          *(void *)(inited + 368) = sub_1CA5FD8A8();
          *(void *)(inited + 376) = v30;
          *(void *)(inited + 408) = v29;
          *(void *)(inited + 384) = 0;
          *(void *)(inited + 416) = sub_1CA5FD8A8();
          *(void *)(inited + 424) = v31;
          *(void *)(inited + 456) = v29;
          *(void *)(inited + 432) = 2000;
          swift_bridgeObjectRetain();
          return sub_1CA5F0C20(inited);
        }
      }
      else
      {
LABEL_9:
        if (qword_1EA6086C0 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_1CA5FD648();
        __swift_project_value_buffer(v32, (uint64_t)qword_1EA608950);
        sub_1CA5B6FE8(a1, a2);
        long long v33 = sub_1CA5FD628();
        os_log_type_t v34 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (_DWORD *)swift_slowAlloc();
          _DWORD *v35 = 134218240;
          uint64_t v36 = v35;
          switch((int)v6)
          {
            case 1:
              if (!__OFSUB__(HIDWORD(a1), a1)) {
                goto LABEL_17;
              }
              goto LABEL_22;
            case 2:
              if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
                goto LABEL_17;
              }
              goto LABEL_23;
            default:
LABEL_17:
              sub_1CA5FDA68();
              sub_1CA5B6EF4(a1, a2);
              *((_WORD *)v36 + 6) = 256;
              sub_1CA5FDA68();
              _os_log_impl(&dword_1CA552000, v33, v34, "Start event length %ld (exp) %hhu", (uint8_t *)v36, 0xFu);
              MEMORY[0x1CB799300](v36, -1, -1);
              break;
          }
        }
        else
        {
          sub_1CA5B6EF4(a1, a2);
        }

        type metadata accessor for ATLError(0);
        sub_1CA5C1970();
        swift_allocError();
        void *v37 = 3;
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5C7590(unint64_t a1)
{
  if (a1 >> 61 != 3)
  {
    sub_1CA5C92E0();
    swift_allocError();
    *(void *)(v15 + 8) = 0;
    *(void *)(v15 + 16) = 0;
    *(void *)uint64_t v15 = 4;
    *(unsigned char *)(v15 + 24) = 3;
    swift_willThrow();
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  if (!*(void *)(v3 + 16))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1CA5F1A20(0x61655273656C6966, 0xE900000000000064);
  if ((v5 & 1) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
  if (v6 >> 61 != 1)
  {
    sub_1CA5C92E0();
    swift_allocError();
    *(void *)(v16 + 8) = 0;
    *(void *)(v16 + 16) = 0;
    *(void *)uint64_t v16 = 4;
    *(unsigned char *)(v16 + 24) = 3;
    swift_retain();
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((v6 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  unint64_t v7 = *(void *)((v6 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v9 = *(void *)(v3 + 16);
  sub_1CA5B6FE8(v8, v7);
  if (v9)
  {
    uint64_t v10 = sub_1CA5F1A20(0x69725773656C6966, 0xEC0000006E657474);
    if (v11)
    {
      unint64_t v12 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v12 >> 61 == 1)
      {
        uint64_t v13 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v14 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        sub_1CA5B6FE8(v13, v14);
        swift_release();
        sub_1CA5B6FE8(v8, v7);
        uint64_t v2 = sub_1CA5C6864(v8, v7, 0, 0);
        sub_1CA5B6EF4(v8, v7);
        if (v1)
        {
          swift_release();
          sub_1CA5B6EF4(v8, v7);
          sub_1CA5B6EF4(v13, v14);
        }
        else
        {
          unsigned __int16 v19 = sub_1CA5C6864(v13, v14, 0, 0);
          sub_1CA5B6EF4(v13, v14);
          sub_1CA5B6EF4(v8, v7);
          swift_release();
          return (unsigned __int16)v2 | (v19 << 16);
        }
        return v2;
      }
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)(v17 + 8) = 0;
      *(void *)(v17 + 16) = 0;
      *(void *)uint64_t v17 = 4;
      *(unsigned char *)(v17 + 24) = 3;
      swift_willThrow();
      swift_release();
      sub_1CA5B6EF4(v8, v7);
LABEL_13:
      swift_release();
      return v2;
    }
  }
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1CA5C7888(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C7E24);
      }
      uint64_t v12 = (int)v12;
LABEL_6:
      if (v12 == 19)
      {
        sub_1CA5B6FE8(a1, a2);
        unsigned __int16 v16 = sub_1CA5C6864(a1, a2, 2, 0);
        sub_1CA5B6EF4(a1, a2);
        if (!v5)
        {
          sub_1CA5B6FE8(a1, a2);
          int v17 = sub_1CA5C6E30(a1, a2, 4, 0);
          sub_1CA5B6EF4(a1, a2);
          int v42 = v17;
          uint64_t v18 = sub_1CA5FD5D8();
          unint64_t v20 = v19;
          sub_1CA5B6FE8(v18, v19);
          int v40 = sub_1CA5C6110(v18, v20);
          uint64_t v41 = v18;
          sub_1CA5B6FE8(a1, a2);
          LOBYTE(v18) = sub_1CA5C6B54(a1, a2, 18);
          sub_1CA5B6EF4(a1, a2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1CA602650;
          *(void *)(inited + 32) = sub_1CA5FD8A8();
          *(void *)(inited + 40) = v28;
          uint64_t v29 = sub_1CA5FD8A8();
          uint64_t v30 = MEMORY[0x1E4FBB1A0];
          *(void *)(inited + 48) = v29;
          *(void *)(inited + 56) = v31;
          *(void *)(inited + 72) = v30;
          *(void *)(inited + 80) = 0xD000000000000010;
          *(void *)(inited + 120) = v30;
          *(void *)(inited + 88) = 0x80000001CA60C0E0;
          *(void *)(inited + 96) = a3;
          *(void *)(inited + 104) = a4;
          *(void *)(inited + 128) = sub_1CA5FD8A8();
          *(void *)(inited + 136) = v32;
          uint64_t v33 = MEMORY[0x1E4FBC358];
          *(unsigned char *)(inited + 144) = a5;
          *(void *)(inited + 168) = v33;
          *(void *)(inited + 176) = 0x737574617473;
          *(void *)(inited + 184) = 0xE600000000000000;
          uint64_t v34 = MEMORY[0x1E4FBC450];
          *(_WORD *)(inited + 192) = v16;
          *(void *)(inited + 216) = v34;
          *(void *)(inited + 224) = 0x646E616D6D6F63;
          *(void *)(inited + 232) = 0xE700000000000000;
          *(void *)(inited + 264) = MEMORY[0x1E4FBC4C0];
          *(_DWORD *)(inited + 240) = v42;
          *(void *)(inited + 272) = sub_1CA5FD8A8();
          *(void *)(inited + 280) = v35;
          *(void *)(inited + 312) = v34;
          *(_WORD *)(inited + 288) = v40;
          *(void *)(inited + 320) = sub_1CA5FD8A8();
          *(void *)(inited + 328) = v36;
          *(_WORD *)(inited + 336) = HIWORD(v40);
          *(void *)(inited + 360) = v34;
          *(void *)(inited + 368) = 0xD000000000000012;
          *(void *)(inited + 376) = 0x80000001CA60C380;
          *(unsigned char *)(inited + 384) = v18;
          *(void *)(inited + 408) = v33;
          *(void *)(inited + 416) = 0x726F727245646964;
          *(void *)(inited + 424) = 0xE800000000000000;
          uint64_t v37 = MEMORY[0x1E4FBB390];
          *(unsigned char *)(inited + 432) = v16 != 36864;
          *(void *)(inited + 456) = v37;
          *(void *)(inited + 464) = 0x746C75736572;
          *(void *)(inited + 472) = 0xE600000000000000;
          id v38 = objc_allocWithZone(NSNumber);
          swift_bridgeObjectRetain();
          id v39 = [v38 initWithUnsignedShort:((v16 == 36864) << 6)];
          *(void *)(inited + 504) = sub_1CA5B84AC(0, &qword_1EA6086E0);
          *(void *)(inited + 480) = v39;
          a4 = sub_1CA5F0C20(inited);
          sub_1CA5B6EF4(v41, v20);
        }
      }
      else
      {
LABEL_9:
        if (qword_1EA6086C0 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_1CA5FD648();
        __swift_project_value_buffer(v21, (uint64_t)qword_1EA608950);
        sub_1CA5B6FE8(a1, a2);
        uint64_t v22 = sub_1CA5FD628();
        a4 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v22, (os_log_type_t)a4))
        {
          uint64_t v23 = (_DWORD *)swift_slowAlloc();
          *uint64_t v23 = 134218240;
          uint64_t v24 = v23;
          switch((int)v6)
          {
            case 1:
              if (!__OFSUB__(HIDWORD(a1), a1)) {
                goto LABEL_17;
              }
              goto LABEL_22;
            case 2:
              if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
                goto LABEL_17;
              }
              goto LABEL_23;
            default:
LABEL_17:
              sub_1CA5FDA68();
              sub_1CA5B6EF4(a1, a2);
              *((_WORD *)v24 + 6) = 256;
              sub_1CA5FDA68();
              _os_log_impl(&dword_1CA552000, v22, (os_log_type_t)a4, "End event length %ld (exp) %hhu", (uint8_t *)v24, 0xFu);
              MEMORY[0x1CB799300](v24, -1, -1);
              break;
          }
        }
        else
        {
          sub_1CA5B6EF4(a1, a2);
        }

        type metadata accessor for ATLError(0);
        sub_1CA5C1970();
        swift_allocError();
        *uint64_t v25 = 3;
        swift_willThrow();
      }
      return a4;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1CA5C7E44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5C8264);
      }
      uint64_t v12 = (int)v12;
LABEL_6:
      if (v12 == 6)
      {
        sub_1CA5B6FE8(a1, a2);
        char v16 = sub_1CA5C6B54(a1, a2, 2);
        unint64_t result = sub_1CA5B6EF4(a1, a2);
        if (!v5)
        {
          sub_1CA5B6FE8(a1, a2);
          __int16 v18 = sub_1CA5C6864(a1, a2, 3, 0);
          sub_1CA5B6EF4(a1, a2);
          sub_1CA5B6FE8(a1, a2);
          char v19 = sub_1CA5C6B54(a1, a2, 5);
          sub_1CA5B6EF4(a1, a2);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1CA602A60;
          *(void *)(inited + 32) = sub_1CA5FD8A8();
          *(void *)(inited + 40) = v21;
          uint64_t v22 = sub_1CA5FD8A8();
          uint64_t v23 = MEMORY[0x1E4FBB1A0];
          *(void *)(inited + 48) = v22;
          *(void *)(inited + 56) = v24;
          *(void *)(inited + 72) = v23;
          *(void *)(inited + 80) = 0xD000000000000010;
          *(void *)(inited + 120) = v23;
          *(void *)(inited + 88) = 0x80000001CA60C0E0;
          *(void *)(inited + 96) = a3;
          *(void *)(inited + 104) = a4;
          *(void *)(inited + 128) = sub_1CA5FD8A8();
          *(void *)(inited + 136) = v25;
          uint64_t v26 = MEMORY[0x1E4FBC358];
          *(void *)(inited + 168) = MEMORY[0x1E4FBC358];
          *(unsigned char *)(inited + 144) = a5;
          *(void *)(inited + 176) = sub_1CA5FD8A8();
          *(void *)(inited + 184) = v27;
          *(void *)(inited + 216) = v26;
          *(unsigned char *)(inited + 192) = v16;
          *(void *)(inited + 224) = sub_1CA5FD8A8();
          *(void *)(inited + 232) = v28;
          *(void *)(inited + 264) = MEMORY[0x1E4FBC450];
          *(_WORD *)(inited + 240) = v18;
          *(void *)(inited + 272) = sub_1CA5FD8A8();
          *(void *)(inited + 280) = v29;
          *(void *)(inited + 312) = v26;
          *(unsigned char *)(inited + 288) = v19;
          swift_bridgeObjectRetain();
          return sub_1CA5F0C20(inited);
        }
      }
      else
      {
LABEL_9:
        if (qword_1EA6086C0 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_1CA5FD648();
        __swift_project_value_buffer(v30, (uint64_t)qword_1EA608950);
        sub_1CA5B6FE8(a1, a2);
        uint64_t v31 = sub_1CA5FD628();
        os_log_type_t v32 = sub_1CA5FD9E8();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (_DWORD *)swift_slowAlloc();
          *uint64_t v33 = 134218240;
          uint64_t v34 = v33;
          switch((int)v6)
          {
            case 1:
              if (!__OFSUB__(HIDWORD(a1), a1)) {
                goto LABEL_17;
              }
              goto LABEL_22;
            case 2:
              if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
                goto LABEL_17;
              }
              goto LABEL_23;
            default:
LABEL_17:
              sub_1CA5FDA68();
              sub_1CA5B6EF4(a1, a2);
              *((_WORD *)v34 + 6) = 256;
              sub_1CA5FDA68();
              _os_log_impl(&dword_1CA552000, v31, v32, "Start event length %ld (exp) %hhu", (uint8_t *)v34, 0xFu);
              MEMORY[0x1CB799300](v34, -1, -1);
              break;
          }
        }
        else
        {
          sub_1CA5B6EF4(a1, a2);
        }

        type metadata accessor for ATLError(0);
        sub_1CA5C1970();
        swift_allocError();
        void *v35 = 3;
        return swift_willThrow();
      }
      return result;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5C8284(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (!__OFSUB__(HIDWORD(a1), a1))
      {
        uint64_t v9 = (int)v9;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_33;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v9 = BYTE6(a2);
LABEL_6:
      if (v9 < 2)
      {
LABEL_7:
        if (qword_1EA6086C0 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_1CA5FD648();
        __swift_project_value_buffer(v13, (uint64_t)qword_1EA608950);
        uint64_t v14 = sub_1CA5FD628();
        os_log_type_t v15 = sub_1CA5FD9E8();
        if (!os_log_type_enabled(v14, v15)) {
          goto LABEL_12;
        }
        char v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v16 = 0;
        int v17 = "Invalid event data";
LABEL_11:
        _os_log_impl(&dword_1CA552000, v14, v15, v17, v16, 2u);
        MEMORY[0x1CB799300](v16, -1, -1);
LABEL_12:

        type metadata accessor for ATLError(0);
        sub_1CA5C1970();
        swift_allocError();
        *__int16 v18 = 3;
        return swift_willThrow();
      }
      sub_1CA5B6FE8(a1, a2);
      char v20 = sub_1CA5C6B54(a1, a2, 0);
      uint64_t result = sub_1CA5B6EF4(a1, a2);
      if (!v4)
      {
        sub_1CA5B6FE8(a1, a2);
        char v21 = sub_1CA5C6B54(a1, a2, 1);
        sub_1CA5B6EF4(a1, a2);
        if (v21 != 8)
        {
          if (qword_1EA6086C0 != -1) {
LABEL_34:
          }
            swift_once();
          uint64_t v23 = sub_1CA5FD648();
          __swift_project_value_buffer(v23, (uint64_t)qword_1EA608950);
          uint64_t v14 = sub_1CA5FD628();
          os_log_type_t v15 = sub_1CA5FD9E8();
          if (!os_log_type_enabled(v14, v15)) {
            goto LABEL_12;
          }
          char v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v16 = 0;
          int v17 = "Invalid hci event version";
          goto LABEL_11;
        }
        switch(v20)
        {
          case 1:
            unint64_t v22 = sub_1CA5C711C(a1, a2, a3, a4, 8);
            goto LABEL_24;
          case 2:
            unint64_t v22 = sub_1CA5C7888(a1, a2, a3, a4, 8);
            goto LABEL_24;
          case 3:
            unint64_t v22 = sub_1CA5C7E44(a1, a2, a3, a4, 8);
LABEL_24:
            uint64_t v24 = sub_1CA5C5B40(v22);
            swift_bridgeObjectRelease();
            return v24;
          case 18:
            goto LABEL_31;
          default:
            if (qword_1EA6086C0 != -1) {
              swift_once();
            }
            uint64_t v25 = sub_1CA5FD648();
            __swift_project_value_buffer(v25, (uint64_t)qword_1EA608950);
            sub_1CA5B6FE8(a1, a2);
            sub_1CA5B6FE8(a1, a2);
            uint64_t v26 = sub_1CA5FD628();
            os_log_type_t v27 = sub_1CA5FD9C8();
            if (os_log_type_enabled(v26, v27))
            {
              uint64_t v28 = swift_slowAlloc();
              uint64_t v32 = swift_slowAlloc();
              uint64_t v33 = v32;
              *(_DWORD *)uint64_t v28 = 16777730;
              sub_1CA5FDA68();
              *(_WORD *)(v28 + 5) = 2080;
              sub_1CA5B6FE8(a1, a2);
              uint64_t v29 = sub_1CA5FD508();
              unint64_t v31 = v30;
              sub_1CA5B6EF4(a1, a2);
              sub_1CA5DDA20(v29, v31, &v33);
              sub_1CA5FDA68();
              swift_bridgeObjectRelease();
              sub_1CA5B6EF4(a1, a2);
              sub_1CA5B6EF4(a1, a2);
              _os_log_impl(&dword_1CA552000, v26, v27, "Unkown event with event type %hhu and contents %s", (uint8_t *)v28, 0xFu);
              swift_arrayDestroy();
              MEMORY[0x1CB799300](v32, -1, -1);
              MEMORY[0x1CB799300](v28, -1, -1);
            }
            else
            {
              sub_1CA5B6EF4(a1, a2);
              sub_1CA5B6EF4(a1, a2);
            }

LABEL_31:
            uint64_t result = sub_1CA5F1004(MEMORY[0x1E4FBC860]);
            break;
        }
      }
      return result;
  }
}

uint64_t sub_1CA5C8828(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v100 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA602380;
  *(void *)(inited + 32) = sub_1CA5FD8A8();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 0;
  *(void *)(inited + 80) = sub_1CA5FD8A8();
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608968);
  *(void *)(inited + 96) = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1CA5F0C20(inited);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1CA5C5230(a2, a3);
  if (v11 >> 60 == 15) {
    __break(1u);
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  uint64_t v14 = (void *)sub_1CA5FD578();
  sub_1CA5B736C(v12, v13);
  id v15 = (id)SelectByNameCmd(v14);

  uint64_t v16 = sub_1CA5FD598();
  unint64_t v18 = v17;

  char v19 = (void *)sub_1CA5FD578();
  *(void *)&v97[0] = 0;
  id v20 = [a1 transceiveAndCheckSW:v19 error:v97];

  id v21 = *(id *)&v97[0];
  if (!v20)
  {
    unint64_t v67 = v21;
    uint64_t v68 = (void *)sub_1CA5FD4B8();

    swift_willThrow();
    if (qword_1EA6086C0 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_1CA5FD648();
    __swift_project_value_buffer(v69, (uint64_t)qword_1EA608950);
    swift_bridgeObjectRetain_n();
    uint64_t v70 = sub_1CA5FD628();
    os_log_type_t v71 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(void *)&v97[0] = v73;
      *(_DWORD *)unint64_t v72 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v95 = sub_1CA5DDA20(a2, a3, (uint64_t *)v97);
      sub_1CA5FDA68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CA552000, v70, v71, "Could not SELECT %s while getting applet state and history", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB799300](v73, -1, -1);
      MEMORY[0x1CB799300](v72, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v28 = sub_1CA5F1004(MEMORY[0x1E4FBC860]);
    sub_1CA5B6EF4(v16, v18);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v92 = (void *)v9;
  uint64_t v93 = v16;
  unint64_t v91 = v18;
  uint64_t v22 = sub_1CA5FD598();
  unint64_t v24 = v23;

  sub_1CA5B6EF4(v22, v24);
  uint64_t v25 = sub_1CA5BA450((uint64_t)&unk_1F24D3C50);
  unint64_t v27 = v26;
  uint64_t v98 = v25;
  unint64_t v99 = v26;
  sub_1CA5B6FE8(v25, v26);
  sub_1CA5FD618();
  sub_1CA5B6EF4(v25, v27);
  sub_1CA5FD568();
  uint64_t v29 = v98;
  uint64_t v28 = v99;
  sub_1CA5B6FE8(v98, v99);
  unint64_t v30 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v29, v28);
  if (qword_1EA6086B8 != -1) {
    swift_once();
  }
  sub_1CA5B84AC(0, &qword_1EA6086E0);
  unint64_t v31 = (void *)sub_1CA5FD948();
  *(void *)&v97[0] = 0;
  id v32 = [a1 transceiveAndCheckSW:v30 inArray:v31 keepingSW:1 error:v97];

  id v33 = *(id *)&v97[0];
  if (!v32)
  {
    unsigned __int16 v74 = v33;
    sub_1CA5FD4B8();

    swift_willThrow();
    sub_1CA5B6EF4(v93, v91);
    uint64_t v75 = v29;
    unint64_t v76 = v28;
LABEL_21:
    sub_1CA5B6EF4(v75, v76);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v90 = sub_1CA5FD598();
  unint64_t v35 = v34;

  sub_1CA5FD618();
  sub_1CA5FD568();
  uint64_t v28 = v98;
  unint64_t v36 = v99;
  sub_1CA5B6FE8(v98, v99);
  uint64_t v37 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v28, v36);
  id v38 = (void *)sub_1CA5FD948();
  *(void *)&v97[0] = 0;
  id v39 = [a1 sel_transceiveAndCheckSW_inArray_keepingSW_error_:v37, v38, 1, v97];

  id v40 = *(id *)&v97[0];
  if (!v39)
  {
    uint64_t v77 = v40;
    sub_1CA5FD4B8();

    swift_willThrow();
    sub_1CA5B6EF4(v93, v91);
    sub_1CA5B6EF4(v90, v35);
    uint64_t v75 = v28;
    unint64_t v76 = v36;
    goto LABEL_21;
  }
  uint64_t v41 = sub_1CA5FD598();
  unint64_t v43 = v42;

  uint64_t v44 = v90;
  uint64_t v45 = (void *)sub_1CA5FD578();
  int SW = GetSW(v45);

  uint64_t v47 = v93;
  if (SW == 25536)
  {
    *((void *)&v96 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v95) = 1;
    uint64_t v48 = sub_1CA5FD8A8();
    uint64_t v50 = v49;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA5C66EC(&v95, v48, v50, isUniquelyReferenced_nonNull_native, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5B858C((uint64_t)v97);
    *((void *)&v96 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
    *(void *)&long long v95 = &unk_1F24D3C78;
    uint64_t v52 = sub_1CA5FD8A8();
    uint64_t v54 = v53;
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = v52;
    uint64_t v44 = v90;
    sub_1CA5C66EC(&v95, v56, v54, v55, v97);
    uint64_t v47 = v93;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5B858C((uint64_t)v97);
  }
  unint64_t v57 = (void *)sub_1CA5FD578();
  int v58 = GetSW(v57);

  if (v58 != 25536) {
    goto LABEL_29;
  }
  *((void *)&v96 + 1) = MEMORY[0x1E4FBB390];
  LOBYTE(v95) = 1;
  uint64_t v59 = sub_1CA5FD8A8();
  uint64_t v61 = v60;
  char v62 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v94 = (void *)v9;
  sub_1CA5C66EC(&v95, v59, v61, v62, v97);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA5B858C((uint64_t)v97);
  uint64_t v63 = sub_1CA5FD8A8();
  if (*(void *)(v9 + 16) && (uint64_t v65 = sub_1CA5F1A20(v63, v64), (v66 & 1) != 0))
  {
    sub_1CA5B83E4(*(void *)(v9 + 56) + 32 * v65, (uint64_t)&v95);
  }
  else
  {
    long long v95 = 0u;
    long long v96 = 0u;
  }
  uint64_t v78 = v47;
  uint64_t result = swift_bridgeObjectRelease();
  if (*((void *)&v96 + 1))
  {
    sub_1CA5B6F4C(&v95, v97);
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
    swift_dynamicCast();
    uint64_t v81 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v81 = sub_1CA5C4B38(0, v92[2] + 1, 1, v92);
      uint64_t v94 = v81;
    }
    unint64_t v83 = v81[2];
    unint64_t v82 = v81[3];
    if (v83 >= v82 >> 1)
    {
      uint64_t v81 = sub_1CA5C4B38((void *)(v82 > 1), v83 + 1, 1, v81);
      uint64_t v94 = v81;
    }
    v81[2] = v83 + 1;
    uint64_t v84 = &v81[2 * v83];
    v84[4] = 0xD00000000000001ELL;
    v84[5] = 0x80000001CA60C300;
    *((void *)&v96 + 1) = v80;
    *(void *)&long long v95 = v94;
    uint64_t v85 = sub_1CA5FD8A8();
    uint64_t v87 = v86;
    swift_bridgeObjectRetain();
    char v88 = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA5C66EC(&v95, v85, v87, v88, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5B858C((uint64_t)v97);
    swift_bridgeObjectRelease();
    uint64_t v44 = v90;
    uint64_t v47 = v78;
LABEL_29:
    uint64_t v89 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_1CA5C5B40(v89);
    sub_1CA5B6EF4(v47, v91);
    swift_bridgeObjectRelease();
    sub_1CA5B6EF4(v41, v43);
    sub_1CA5B6EF4(v44, v35);
    sub_1CA5B6EF4(v98, v99);
    swift_bridgeObjectRelease();
    return v28;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CA5C91E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6088E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA602380;
  sub_1CA5FD8A8();
  sub_1CA5FDAE8();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 72) = 1;
  sub_1CA5FD8A8();
  sub_1CA5FDAE8();
  *(void *)(inited + 168) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 144) = 2000;
  return sub_1CA5F1004(inited);
}

uint64_t sub_1CA5C92D8()
{
  return swift_release();
}

unint64_t sub_1CA5C92E0()
{
  unint64_t result = qword_1EA608980;
  if (!qword_1EA608980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608980);
  }
  return result;
}

uint64_t sub_1CA5C9334(uint64_t a1, uint64_t a2)
{
  *(void *)&v6[0] = a1;
  *((void *)&v6[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v6, &v7);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v7, (uint64_t)v6);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
      return v5;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v6[0] = 0;
      *((void *)&v6[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Value for key ");
      HIBYTE(v6[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AC0);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v7, v8);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v6[0], *((uint64_t *)&v6[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
}

uint64_t sub_1CA5C9604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  *(void *)&v9[0] = a1;
  *((void *)&v9[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v6 = [v4 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v9, &v10);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v10, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AB0);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
      *a3 = v8;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v9[0] = 0;
      *((void *)&v9[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v9, "Value for key ");
      HIBYTE(v9[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AB8);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v10, v11);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v9[0], *((uint64_t *)&v9[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1CA5C98E4(uint64_t a1, uint64_t a2)
{
  return sub_1CA5C9C08(a1, a2, &qword_1EA608AA0, &qword_1EA608AA8);
}

uint64_t sub_1CA5C990C(uint64_t a1, uint64_t a2)
{
  *(void *)&v6[0] = a1;
  *((void *)&v6[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v6, &v7);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v7, (uint64_t)v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AE8);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
      return v5;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v6[0] = 0;
      *((void *)&v6[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Value for key ");
      HIBYTE(v6[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AF0);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v7, v8);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v6[0], *((uint64_t *)&v6[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
}

uint64_t sub_1CA5C9BE0(uint64_t a1, uint64_t a2)
{
  return sub_1CA5C9C08(a1, a2, &qword_1EA608AD8, &qword_1EA608AE0);
}

uint64_t sub_1CA5C9C08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  *(void *)&v9[0] = a1;
  *((void *)&v9[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v7 = [v4 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v9, &v10);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v10, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
      return v12;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v9[0] = 0;
      *((void *)&v9[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v9, "Value for key ");
      HIBYTE(v9[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(a4);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v10, v11);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v9[0], *((uint64_t *)&v9[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
}

uint64_t sub_1CA5C9EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  *(void *)&v9[0] = a1;
  *((void *)&v9[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v6 = [v4 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v9, &v10);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v10, (uint64_t)v9);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
      *a3 = v8;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v9[0] = 0;
      *((void *)&v9[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v9, "Value for key ");
      HIBYTE(v9[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AC8);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v10, v11);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v9[0], *((uint64_t *)&v9[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1CA5CA1BC(uint64_t a1, uint64_t a2)
{
  *(void *)&v6[0] = a1;
  *((void *)&v6[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v6, &v7);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v7, (uint64_t)v6);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
      return v5;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v6[0] = 0;
      *((void *)&v6[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Value for key ");
      HIBYTE(v6[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A40);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v7, v8);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v6[0], *((uint64_t *)&v6[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(0xD000000000000016, 0x80000001CA60CBD0, 8, 0);
    return swift_willThrow();
  }
}

uint64_t sub_1CA5CA488(uint64_t a1, uint64_t a2)
{
  *(void *)&v6[0] = a1;
  *((void *)&v6[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2[sub_1CA5FDCC8()]];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v6, &v7);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v7, (uint64_t)v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AE8);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
      return v5;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v6[0] = 0;
      *((void *)&v6[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Value for key ");
      HIBYTE(v6[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608AF0);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v7, v8);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v6[0], *((uint64_t *)&v6[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1CA5CA6E0(uint64_t a1, uint64_t a2)
{
  return sub_1CA5CAE0C(a1, a2, &qword_1EA608750, &qword_1EA608AD0);
}

uint64_t sub_1CA5CA708(uint64_t a1, uint64_t a2)
{
  *(void *)&v5[0] = a1;
  *((void *)&v5[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v5, &v6);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v6, (uint64_t)v5);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v6);
      return v8;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v5[0] = 0;
      *((void *)&v5[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v5, "Value for key ");
      HIBYTE(v5[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A48);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v6, v7);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v5[0], *((uint64_t *)&v5[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 2;
  }
}

uint64_t sub_1CA5CA954(uint64_t a1, uint64_t a2)
{
  *(void *)&v6[0] = a1;
  *((void *)&v6[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v3 = [v2 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v6, &v7);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v7, (uint64_t)v6);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
      return v5;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v6[0] = 0;
      *((void *)&v6[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v6, "Value for key ");
      HIBYTE(v6[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A40);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v7, v8);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v6[0], *((uint64_t *)&v6[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1CA5CABA4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  *(void *)&v11[0] = a1;
  *((void *)&v11[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v8 = [v5 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v8)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v11, &v12);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v12, (uint64_t)v11);
    sub_1CA5B84AC(0, a3);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
      return v10;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v11[0] = 0;
      *((void *)&v11[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v11, "Value for key ");
      HIBYTE(v11[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(a5);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v12, v13);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v11[0], *((uint64_t *)&v11[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1CA5CAE0C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  *(void *)&v9[0] = a1;
  *((void *)&v9[0] + 1) = a2;
  swift_bridgeObjectRetain_n();
  id v7 = [v4 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
    sub_1CA5B6F4C(v9, &v10);
    swift_bridgeObjectRelease();
    sub_1CA5B83E4((uint64_t)&v10, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
      return v12;
    }
    else
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      *(void *)&v9[0] = 0;
      *((void *)&v9[0] + 1) = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v9, "Value for key ");
      HIBYTE(v9[0]) = -18;
      sub_1CA5FD8F8();
      sub_1CA5FD8F8();
      __swift_instantiateConcreteTypeFromMangledName(a4);
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5FD8F8();
      __swift_project_boxed_opaque_existential_1Tm(&v10, v11);
      swift_getDynamicType();
      sub_1CA5FDDB8();
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(*(uint64_t *)&v9[0], *((uint64_t *)&v9[0] + 1), 8, 0);
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1CA5CB068(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1CA5EAC54(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1CA5DF518(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1CA5CB0D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1CA5EAC68();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1CA5DFD50(v6);
  return sub_1CA5FDB98();
}

uint64_t sub_1CA5CB150(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v8 << 6))
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v13 = v12[1];
    if (v13)
    {
      uint64_t v20 = *v12;
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1CA5C4B38(0, v9[2] + 1, 1, v9);
        unint64_t v9 = (void *)result;
      }
      unint64_t v18 = v9[2];
      unint64_t v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_1CA5C4B38((void *)(v17 > 1), v18 + 1, 1, v9);
        unint64_t v9 = (void *)result;
      }
      _OWORD v9[2] = v18 + 1;
      char v19 = &v9[2 * v18];
      v19[4] = v20;
      v19[5] = v13;
      if (v5) {
        goto LABEL_4;
      }
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v6) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v15 = *(void *)(v2 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CA5CB344(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 48;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v4 = *(void *)(v2 - 8);
    uint64_t v5 = *(void *)(v2 - 16);
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1CA5EAFA8(v6, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v7 + 16);
    int64_t v9 = v3[2];
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v10 <= v3[3] >> 1)
    {
      if (*(void *)(v7 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v9 <= v10) {
        int64_t v12 = v9 + v8;
      }
      else {
        int64_t v12 = v9;
      }
      uint64_t v3 = sub_1CA5C4C48(isUniquelyReferenced_nonNull_native, v12, 1, v3);
      if (*(void *)(v7 + 16))
      {
LABEL_14:
        uint64_t v13 = v3[2];
        if ((v3[3] >> 1) - v13 < v8) {
          goto LABEL_28;
        }
        unint64_t v14 = (unint64_t)&v3[v13 + 4];
        if (v7 + 32 < v14 + 8 * v8 && v14 < v7 + 32 + 8 * v8) {
          goto LABEL_30;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v16 = v3[2];
          BOOL v17 = __OFADD__(v16, v8);
          uint64_t v18 = v16 + v8;
          if (v17) {
            goto LABEL_29;
          }
          v3[2] = v18;
        }
        goto LABEL_4;
      }
    }
    if (v8) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v2 += 24;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5CB540(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1CA5FDC28();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CA5CB5A0(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1CA5DE698(0, v3, 0);
    uint64_t v4 = v17;
    uint64_t v6 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      unint64_t v7 = *v6;
      sub_1CA5B6FE8(v8, *v6);
      uint64_t v16 = v2;
      sub_1CA5C4448(v8, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
      uint64_t v9 = sub_1CA5FD888();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1CA5B6EF4(v8, v7);
      unint64_t v13 = *(void *)(v17 + 16);
      unint64_t v12 = *(void *)(v17 + 24);
      if (v13 >= v12 >> 1) {
        sub_1CA5DE698(v12 > 1, v13 + 1, 1);
      }
      v6 += 2;
      *(void *)(v17 + 16) = v13 + 1;
      uint64_t v14 = v17 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      --v3;
      uint64_t v2 = v16;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1CA5CB710(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1CA5FDBA8();
    uint64_t result = sub_1CA5EACFC(a1);
    int64_t v4 = result;
    int v6 = v5;
    char v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_11;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_12;
      }
      uint64_t v9 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v4);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      swift_bridgeObjectRetain();
      sub_1CA5B86D4(v11, v10);
      swift_bridgeObjectRelease();
      sub_1CA5FDB88();
      sub_1CA5FDBB8();
      sub_1CA5FDBC8();
      sub_1CA5FDB98();
      uint64_t result = sub_1CA5EAD9C(v4, v6, v8 & 1, a1);
      int64_t v4 = result;
      int v6 = v12;
      char v8 = v13 & 1;
      if (!--v2)
      {
        sub_1CA5F0860(result, v12, v13 & 1);
        return v14;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA5CB878(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1CA5DE6D8(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_1CA5EAE80(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v24 = v3 + 80;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v28 = v7;
    uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v29 = *v12;
    uint64_t v14 = *(void *)(*(void *)(v3 + 56) + 8 * v6);
    uint64_t v15 = v3;
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_1CA5DE6D8(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v30 + 16) = v17 + 1;
    uint64_t v18 = (void *)(v30 + 24 * v17);
    v18[4] = v29;
    v18[5] = v13;
    v18[6] = v14;
    int64_t v9 = 1 << *(unsigned char *)(v15 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v15;
    int v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v28 + 1;
    uint64_t v6 = v9;
    if (v28 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1CA5CBAA8(unsigned int a1)
{
  v3[5] = *MEMORY[0x1E4F143B8];
  __int16 v2 = bswap32(a1) >> 16;
  void v3[3] = MEMORY[0x1E4FBB2B8];
  v3[4] = MEMORY[0x1E4F27EF0];
  v3[0] = &v2;
  v3[1] = v3;
  __swift_project_boxed_opaque_existential_1Tm(v3, MEMORY[0x1E4FBB2B8]);
  sub_1CA5FD548();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

uint64_t sub_1CA5CBB38(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x1E4F143B8];
  _OWORD v10[3] = MEMORY[0x1E4F277C0];
  v10[4] = MEMORY[0x1E4F277B0];
  v10[0] = a1;
  v10[1] = a2;
  int64_t v4 = __swift_project_boxed_opaque_existential_1Tm(v10, MEMORY[0x1E4F277C0]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_1CA5B6FE8(a1, a2);
      sub_1CA5B6FE8(v5, v6);
      sub_1CA5EA244((int)v5, v5 >> 32);
      sub_1CA5B6EF4(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_1CA5B6FE8(a1, a2);
      swift_retain();
      swift_retain();
      sub_1CA5EA244(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_1CA5B6FE8(a1, a2);
      sub_1CA5FD548();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
}

uint64_t sub_1CA5CBD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v59[5] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608780);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v50 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D8);
  MEMORY[0x1F4188790](v51);
  unint64_t v20 = (void *)((char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56[0] = a1;
  v56[1] = a2;
  v56[2] = a3;
  v56[3] = a4;
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6087A0);
  if (swift_dynamicCast())
  {
    sub_1CA5BA6D8(v57, (uint64_t)v59);
    unint64_t v21 = __swift_project_boxed_opaque_existential_1Tm(v59, v59[3]);
    MEMORY[0x1F4188790](v21);
    v50[-2] = v5;
    sub_1CA5FD458();
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v59);
  }
  else
  {
    uint64_t v58 = 0;
    memset(v57, 0, sizeof(v57));
    sub_1CA5BA6F0((uint64_t)v57, &qword_1EA6087A8);
    uint64_t v23 = *v5;
    unint64_t v24 = v5[1];
    uint64_t v25 = 0;
    switch(v24 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v23), v23)) {
          goto LABEL_46;
        }
        uint64_t v25 = HIDWORD(v23) - (int)v23;
        uint64_t v26 = v23 >> 32;
LABEL_8:
        if (v26 < 0) {
          goto LABEL_42;
        }
LABEL_9:
        uint64_t v29 = sub_1CA5FD528();
        MEMORY[0x1F4188790](v29);
        v50[-4] = v25;
        v50[-3] = 0;
        v50[-2] = v56;
        sub_1CA5DE078((uint64_t (*)(uint64_t, uint64_t))sub_1CA5F0398);
        uint64_t v30 = *(void *)&v18[*(int *)(v16 + 48)];
        sub_1CA5F07B4((uint64_t)v18, (uint64_t)v20, &qword_1EA6089D8);
        if (!v30)
        {
          v50[1] = 0;
          v50[3] = v5;
          uint64_t v34 = 0;
          memset(v59, 0, 15);
          uint64_t v35 = (uint64_t)v20 + *(int *)(v51 + 44);
          v50[2] = (char *)v57 + 14;
          while (1)
          {
            uint64_t v51 = v34;
            while (1)
            {
              sub_1CA5BA5B0(v35, (uint64_t)v15);
              uint64_t v36 = sub_1CA5FD5F8();
              uint64_t v37 = *(void *)(v36 - 8);
              id v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
              int v39 = v38(v15, 1, v36);
              sub_1CA5BA6F0((uint64_t)v15, &qword_1EA608780);
              if (v39 != 1)
              {
                if (v38((char *)v35, 1, v36) == 1) {
                  goto LABEL_49;
                }
                sub_1CA5F0818((unint64_t *)&qword_1EA6087B0, MEMORY[0x1E4F27788]);
                sub_1CA5FDA58();
                if (BYTE1(v57[0]) != 1) {
                  break;
                }
              }
              uint64_t v40 = v20[4];
              uint64_t v41 = v20[3] >> 1;
              if (v40 == v41)
              {
                if ((_BYTE)v51)
                {
                  *(void *)&v57[0] = v59[0];
                  DWORD2(v57[0]) = v59[1];
                  WORD6(v57[0]) = WORD2(v59[1]);
                  sub_1CA5FD548();
                }
                goto LABEL_39;
              }
              if (v40 >= v41 || v40 < v20[2])
              {
                __break(1u);
LABEL_42:
                __break(1u);
LABEL_43:
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
LABEL_48:
                __break(1u);
LABEL_49:
                __break(1u);
              }
              unint64_t v43 = (uint64_t *)(v20[1] + 16 * v40);
              uint64_t v44 = *v43;
              unint64_t v45 = v43[1];
              v20[4] = v40 + 1;
              switch(v45 >> 62)
              {
                case 1uLL:
                case 2uLL:
                  sub_1CA5B6FE8(v44, v45);
                  sub_1CA5B6FE8(v44, v45);
                  sub_1CA5B6FE8(v44, v45);
                  break;
                default:
                  break;
              }
              sub_1CA5FD608();
              sub_1CA5B6EF4(v44, v45);
              sub_1CA5B6EF4(v44, v45);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v13, 0, 1, v36);
              sub_1CA5BA618((uint64_t)v13, v35);
            }
            int v46 = v51;
            *((unsigned char *)v59 + v51) = v57[0];
            uint64_t v34 = (v46 + 1);
            if ((v34 >> 8)) {
              goto LABEL_48;
            }
            BYTE6(v59[1]) = v46 + 1;
            if ((v46 + 1) == 14)
            {
              *(void *)&v57[0] = v59[0];
              DWORD2(v57[0]) = v59[1];
              WORD6(v57[0]) = WORD2(v59[1]);
              sub_1CA5FD548();
              uint64_t v34 = 0;
              BYTE6(v59[1]) = 0;
            }
          }
        }
        uint64_t v31 = *v5;
        unint64_t v32 = v5[1];
        uint64_t v33 = 0;
        switch(v32 >> 62)
        {
          case 1uLL:
            uint64_t v33 = (int)v31;
            break;
          case 2uLL:
            uint64_t v33 = *(void *)(v31 + 16);
            break;
          default:
            break;
        }
        BOOL v47 = __OFADD__(v33, v25);
        uint64_t v48 = v33 + v25;
        if (v47) {
          goto LABEL_43;
        }
        if (__OFADD__(v48, v30)) {
          goto LABEL_44;
        }
        uint64_t v49 = 0;
        switch(v32 >> 62)
        {
          case 1uLL:
            uint64_t v49 = v31 >> 32;
            break;
          case 2uLL:
            uint64_t v49 = *(void *)(v31 + 24);
            break;
          case 3uLL:
            break;
          default:
            uint64_t v49 = BYTE6(v32);
            break;
        }
        if (v49 < v48 + v30) {
          goto LABEL_45;
        }
        sub_1CA5FD538();
LABEL_39:
        uint64_t result = sub_1CA5BA6F0((uint64_t)v20, &qword_1EA6089D8);
        break;
      case 2uLL:
        uint64_t v28 = v23 + 16;
        uint64_t v27 = *(void *)(v23 + 16);
        uint64_t v26 = *(void *)(v28 + 8);
        uint64_t v25 = v26 - v27;
        if (!__OFSUB__(v26, v27)) {
          goto LABEL_8;
        }
        goto LABEL_47;
      case 3uLL:
        goto LABEL_9;
      default:
        uint64_t v25 = BYTE6(v24);
        goto LABEL_9;
    }
  }
  return result;
}

BOOL sub_1CA5CC49C(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5CC4FC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  unint64_t v5 = a2;
  uint64_t v7 = (char *)(a2 >> 62);
  unint64_t v75 = HIDWORD(a1);
  BOOL v8 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v78 = v8;
  size_t __n = BYTE6(a2);
  uint64_t v76 = (int)a1;
  size_t v77 = HIDWORD(a1) - (int)a1;
  uint64_t v74 = a1 >> 32;
  uint64_t v70 = (a1 >> 32) - (int)a1;
  swift_bridgeObjectRetain();
  int64_t v9 = (unint64_t *)(a3 + 40);
  unint64_t v72 = HIDWORD(v5);
  unint64_t v73 = v5 >> 40;
  uint64_t v80 = v7;
  unint64_t v71 = v5;
  int v79 = (int)v7;
  while (2)
  {
    uint64_t v11 = *(v9 - 1);
    unint64_t v10 = *v9;
    unint64_t v12 = *v9 >> 62;
    v9 += 2;
    uint64_t v13 = 0;
    switch(v12)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v11), v11))
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
        }
        uint64_t v13 = HIDWORD(v11) - (int)v11;
LABEL_14:
        sub_1CA5B6FE8(v11, v10);
        break;
      case 2uLL:
        uint64_t v15 = *(void *)(v11 + 16);
        uint64_t v14 = *(void *)(v11 + 24);
        uint64_t v13 = v14 - v15;
        if (!__OFSUB__(v14, v15)) {
          goto LABEL_14;
        }
        goto LABEL_121;
      case 3uLL:
        break;
      default:
        uint64_t v13 = BYTE6(v10);
        break;
    }
    size_t v16 = __n;
    switch(v80)
    {
      case 1:
        size_t v16 = v77;
        if (v78) {
          goto LABEL_122;
        }
        goto LABEL_19;
      case 2:
        uint64_t v18 = *(void *)(a1 + 16);
        uint64_t v17 = *(void *)(a1 + 24);
        BOOL v19 = __OFSUB__(v17, v18);
        size_t v16 = v17 - v18;
        if (!v19) {
          goto LABEL_19;
        }
        goto LABEL_123;
      case 3:
        if (v13) {
          goto LABEL_7;
        }
        goto LABEL_118;
      default:
LABEL_19:
        if (v13 != v16)
        {
LABEL_7:
          sub_1CA5B6EF4(v11, v10);
LABEL_8:
          if (!--v3)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        if (v13 >= 1)
        {
          switch((int)v12)
          {
            case 1:
              if ((int)v11 > v11 >> 32) {
                goto LABEL_124;
              }
              uint64_t v24 = sub_1CA5FD408();
              if (v24)
              {
                uint64_t v25 = v24;
                uint64_t v26 = sub_1CA5FD428();
                if (__OFSUB__((int)v11, v26)) {
                  goto LABEL_126;
                }
                uint64_t v27 = (const void *)(v25 + (int)v11 - v26);
              }
              else
              {
                uint64_t v27 = 0;
              }
              sub_1CA5FD418();
              LODWORD(v7) = v79;
              if (!v79)
              {
                LOWORD(__s1[0]) = a1;
                BYTE2(__s1[0]) = BYTE2(a1);
                BYTE3(__s1[0]) = BYTE3(a1);
                BYTE4(__s1[0]) = v75;
                BYTE5(__s1[0]) = BYTE5(a1);
                BYTE6(__s1[0]) = BYTE6(a1);
                HIBYTE(__s1[0]) = HIBYTE(a1);
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = v72;
                BYTE5(__s1[1]) = v73;
                if (!v27) {
                  goto LABEL_154;
                }
                int v34 = memcmp(v27, __s1, __n);
                goto LABEL_101;
              }
              if (v79 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_135;
                }
                swift_retain();
                uint64_t v41 = (char *)sub_1CA5FD408();
                if (v41)
                {
                  uint64_t v42 = sub_1CA5FD428();
                  if (__OFSUB__(v76, v42)) {
                    goto LABEL_142;
                  }
                  v41 += v76 - v42;
                }
                uint64_t v43 = sub_1CA5FD418();
                size_t v44 = v70;
                if (v43 < v70) {
                  size_t v44 = v43;
                }
                if (!v27) {
                  goto LABEL_147;
                }
                if (!v41) {
                  goto LABEL_148;
                }
                int v34 = memcmp(v27, v41, v44);
                sub_1CA5B6EF4(a1, v5);
LABEL_101:
                sub_1CA5B6EF4(v11, v10);
LABEL_102:
                if (!v34) {
                  goto LABEL_119;
                }
                goto LABEL_8;
              }
              uint64_t v61 = *(void *)(a1 + 16);
              uint64_t v62 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v63 = (char *)sub_1CA5FD408();
              if (v63)
              {
                uint64_t v64 = sub_1CA5FD428();
                if (__OFSUB__(v61, v64)) {
                  goto LABEL_141;
                }
                v63 += v61 - v64;
              }
              BOOL v19 = __OFSUB__(v62, v61);
              int64_t v65 = v62 - v61;
              if (v19) {
                goto LABEL_136;
              }
              uint64_t v66 = sub_1CA5FD418();
              if (v66 >= v65) {
                size_t v67 = v65;
              }
              else {
                size_t v67 = v66;
              }
              if (!v27) {
                goto LABEL_155;
              }
              unint64_t v5 = v71;
              LODWORD(v7) = v79;
              if (!v63) {
                goto LABEL_156;
              }
              int v40 = memcmp(v27, v63, v67);
              swift_release();
              swift_release();
LABEL_114:
              sub_1CA5B6EF4(v11, v10);
              if (!v40) {
                goto LABEL_119;
              }
              break;
            case 2:
              uint64_t v28 = *(void *)(v11 + 16);
              swift_retain();
              swift_retain();
              uint64_t v29 = (char *)sub_1CA5FD408();
              if (!v29) {
                goto LABEL_36;
              }
              uint64_t v30 = sub_1CA5FD428();
              if (__OFSUB__(v28, v30)) {
                goto LABEL_125;
              }
              v29 += v28 - v30;
LABEL_36:
              sub_1CA5FD418();
              LODWORD(v7) = v79;
              if (!v79)
              {
                LOWORD(__s1[0]) = a1;
                BYTE2(__s1[0]) = BYTE2(a1);
                BYTE3(__s1[0]) = BYTE3(a1);
                BYTE4(__s1[0]) = v75;
                BYTE5(__s1[0]) = BYTE5(a1);
                BYTE6(__s1[0]) = BYTE6(a1);
                HIBYTE(__s1[0]) = HIBYTE(a1);
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = v72;
                BYTE5(__s1[1]) = v73;
                if (!v29) {
                  goto LABEL_151;
                }
                int v34 = memcmp(v29, __s1, __n);
                swift_release();
                swift_release();
                goto LABEL_101;
              }
              if (v79 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_129;
                }
                swift_retain();
                uint64_t v7 = (char *)sub_1CA5FD408();
                if (v7)
                {
                  uint64_t v31 = sub_1CA5FD428();
                  if (__OFSUB__(v76, v31)) {
                    goto LABEL_140;
                  }
                  v7 += v76 - v31;
                }
                uint64_t v32 = sub_1CA5FD418();
                size_t v33 = v70;
                if (v32 < v70) {
                  size_t v33 = v32;
                }
                if (!v29) {
                  goto LABEL_144;
                }
                if (!v7) {
                  goto LABEL_145;
                }
                int v34 = memcmp(v29, v7, v33);
                sub_1CA5B6EF4(a1, v5);
                swift_release();
                swift_release();
                sub_1CA5B6EF4(v11, v10);
                LODWORD(v7) = v79;
                goto LABEL_102;
              }
              uint64_t v55 = *(void *)(a1 + 16);
              uint64_t v69 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v56 = (char *)sub_1CA5FD408();
              if (v56)
              {
                uint64_t v57 = sub_1CA5FD428();
                if (__OFSUB__(v55, v57)) {
                  goto LABEL_139;
                }
                v56 += v55 - v57;
              }
              BOOL v19 = __OFSUB__(v69, v55);
              int64_t v58 = v69 - v55;
              if (v19) {
                goto LABEL_134;
              }
              uint64_t v59 = sub_1CA5FD418();
              if (v59 >= v58) {
                size_t v60 = v58;
              }
              else {
                size_t v60 = v59;
              }
              if (!v29) {
                goto LABEL_152;
              }
              unint64_t v5 = v71;
              if (!v56) {
                goto LABEL_153;
              }
              int v39 = memcmp(v29, v56, v60);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
LABEL_96:
              sub_1CA5B6EF4(v11, v10);
LABEL_97:
              LODWORD(v7) = v79;
              if (!v39) {
                goto LABEL_119;
              }
              goto LABEL_8;
            case 3:
              memset(__s1, 0, 14);
              if (!v7) {
                goto LABEL_56;
              }
              if (v7 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_128;
                }
                sub_1CA5B6FE8(a1, v5);
                uint64_t v35 = sub_1CA5FD408();
                if (!v35) {
                  goto LABEL_146;
                }
                uint64_t v21 = v35;
                uint64_t v36 = sub_1CA5FD428();
                uint64_t v23 = v76 - v36;
                if (__OFSUB__(v76, v36)) {
                  goto LABEL_133;
                }
LABEL_52:
                uint64_t v37 = sub_1CA5FD418();
                if (v37 >= v70) {
                  size_t v38 = v70;
                }
                else {
                  size_t v38 = v37;
                }
                int v39 = memcmp(__s1, (const void *)(v21 + v23), v38);
                sub_1CA5B6EF4(a1, v5);
                goto LABEL_96;
              }
              uint64_t v51 = *(void *)(a1 + 16);
              uint64_t v52 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              BOOL v47 = (char *)sub_1CA5FD408();
              if (v47)
              {
                uint64_t v53 = sub_1CA5FD428();
                if (__OFSUB__(v51, v53)) {
                  goto LABEL_138;
                }
                v47 += v51 - v53;
              }
              BOOL v19 = __OFSUB__(v52, v51);
              int64_t v49 = v52 - v51;
              if (v19) {
                goto LABEL_131;
              }
              uint64_t v50 = sub_1CA5FD418();
              if (!v47) {
                goto LABEL_150;
              }
LABEL_80:
              if (v50 >= v49) {
                size_t v54 = v49;
              }
              else {
                size_t v54 = v50;
              }
              int v39 = memcmp(__s1, v47, v54);
              swift_release();
              swift_release();
              sub_1CA5B6EF4(v11, v10);
              unint64_t v5 = v71;
              goto LABEL_97;
            default:
              __s1[0] = v11;
              LOWORD(__s1[1]) = v10;
              BYTE2(__s1[1]) = BYTE2(v10);
              BYTE3(__s1[1]) = BYTE3(v10);
              BYTE4(__s1[1]) = BYTE4(v10);
              BYTE5(__s1[1]) = BYTE5(v10);
              if (!v7)
              {
LABEL_56:
                __int16 __s2 = a1;
                char v83 = BYTE2(a1);
                char v84 = BYTE3(a1);
                char v85 = v75;
                char v86 = BYTE5(a1);
                char v87 = BYTE6(a1);
                char v88 = HIBYTE(a1);
                __int16 v89 = v5;
                char v90 = BYTE2(v5);
                char v91 = BYTE3(v5);
                char v92 = v72;
                char v93 = v73;
                int v40 = memcmp(__s1, &__s2, __n);
                goto LABEL_114;
              }
              if (v7 == 1)
              {
                if (v74 < v76) {
                  goto LABEL_127;
                }
                sub_1CA5B6FE8(a1, v5);
                uint64_t v20 = sub_1CA5FD408();
                if (!v20)
                {
                  sub_1CA5FD418();
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  sub_1CA5FD418();
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
                  JUMPOUT(0x1CA5CCE4CLL);
                }
                uint64_t v21 = v20;
                uint64_t v22 = sub_1CA5FD428();
                uint64_t v23 = v76 - v22;
                if (__OFSUB__(v76, v22)) {
                  goto LABEL_132;
                }
                goto LABEL_52;
              }
              uint64_t v45 = *(void *)(a1 + 16);
              uint64_t v46 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              BOOL v47 = (char *)sub_1CA5FD408();
              if (v47)
              {
                uint64_t v48 = sub_1CA5FD428();
                if (__OFSUB__(v45, v48)) {
                  goto LABEL_137;
                }
                v47 += v45 - v48;
              }
              BOOL v19 = __OFSUB__(v46, v45);
              int64_t v49 = v46 - v45;
              if (v19) {
                goto LABEL_130;
              }
              uint64_t v50 = sub_1CA5FD418();
              if (!v47) {
                goto LABEL_149;
              }
              goto LABEL_80;
          }
          goto LABEL_8;
        }
LABEL_118:
        sub_1CA5B6EF4(v11, v10);
LABEL_119:
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

uint64_t sub_1CA5CCE7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1CA5FDCB8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  int64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1CA5FDCB8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5CD38C(uint64_t a1, int a2)
{
  unint64_t v5 = v3;
  int v221 = a2;
  v247[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1CA5FD4C8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v10 = (char *)v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild];
  unint64_t v224 = v2;
  if (v11 == 1)
  {
    BOOL v12 = *(void **)&v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults];
    unint64_t v4 = sub_1CA5FD898();
    LODWORD(v12) = [v12 sel_BOOLForKey_:v4];

    if (v12)
    {
      uint64_t v13 = self;
      *(void *)&long long __s1 = 0;
      id v14 = [v13 dataWithPropertyList:a1 format:200 options:0 error:&__s1];
      id v15 = (id)__s1;
      if (v14)
      {
        uint64_t v16 = sub_1CA5FD598();
        unint64_t v4 = v17;

        sub_1CA5B6FE8(v16, v4);
        sub_1CA5B6FE8(v16, v4);
        uint64_t v18 = sub_1CA5FD628();
        os_log_type_t v19 = sub_1CA5FD9C8();
        LODWORD(v241) = v19;
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v240 = (uint64_t)v18;
          uint64_t v20 = (_DWORD *)swift_slowAlloc();
          unint64_t v238 = swift_slowAlloc();
          *(void *)&long long __s1 = v238;
          unint64_t v232 = v3;
          *(void *)&long long v239 = v20;
          *uint64_t v20 = 136315138;
          v237 = (uint64_t *)(v20 + 1);
          uint64_t v21 = sub_1CA5FD588();
          *(void *)&long long __s2 = sub_1CA5DDA20(v21, v22, (uint64_t *)&__s1);
          unint64_t v5 = v232;
          sub_1CA5FDA68();
          swift_bridgeObjectRelease();
          sub_1CA5B6EF4(v16, v4);
          sub_1CA5B6EF4(v16, v4);
          _os_log_impl(&dword_1CA552000, (os_log_t)v240, (os_log_type_t)v241, "Raw Config : %s", (uint8_t *)v239, 0xCu);
          unint64_t v23 = v238;
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v23, -1, -1);
          MEMORY[0x1CB799300](v239, -1, -1);
          sub_1CA5B6EF4(v16, v4);
        }
        else
        {
          sub_1CA5B6EF4(v16, v4);

          sub_1CA5B6EF4(v16, v4);
          sub_1CA5B6EF4(v16, v4);
        }
      }
      else
      {
        unint64_t v4 = (unint64_t)v15;
        uint64_t v24 = (void *)sub_1CA5FD4B8();

        swift_willThrow();
        unint64_t v5 = 0;
      }
    }
  }
  v247[0] = MEMORY[0x1E4FBC860];
  id v25 = (id)a1;
  sub_1CA5FDA38();

  LOBYTE(a1) = sub_1CA5F0818(&qword_1EBCB4190, MEMORY[0x1E4F27660]);
  while (1)
  {
    sub_1CA5FDA58();
    if (!v246) {
      break;
    }
    sub_1CA5B6F4C(&__s1, &__s2);
    sub_1CA5B83E4((uint64_t)&__s2, (uint64_t)&v243);
    type metadata accessor for ExpressMode.PassConfig();
    swift_allocObject();
    uint64_t v26 = sub_1CA5D5828(&v243);
    if (v5)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&__s2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      return v7;
    }
    unint64_t v4 = v26;
    uint64_t v27 = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&__s2);
    if (v4)
    {
      MEMORY[0x1CB798340](v27);
      if (*(void *)((v247[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v247[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1CA5FD978();
      }
      sub_1CA5FD998();
      sub_1CA5FD968();
    }
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v230 = v247[0];
  unint64_t v242 = v247[0];
  if ((v11 & 1) != 0
    && (uint64_t v28 = *(void **)&v224[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults],
        uint64_t v29 = (void *)sub_1CA5FD898(),
        uint64_t v30 = (uint64_t)objc_msgSend(v28, sel_integerForKey_, v29),
        v29,
        v30 >= 1))
  {
    a1 = v224;
    uint64_t v31 = sub_1CA5FD628();
    os_log_type_t v32 = sub_1CA5FDA08();
    if (os_log_type_enabled(v31, v32))
    {
      unint64_t v232 = v5;
      unint64_t v4 = swift_slowAlloc();
      *(_DWORD *)unint64_t v4 = 134217984;
      size_t v33 = (void *)sub_1CA5FD898();
      id v34 = [v28 sel_integerForKey:v33];

      *(void *)&long long __s1 = v34;
      unint64_t v5 = v232;
      sub_1CA5FDA68();

      _os_log_impl(&dword_1CA552000, v31, v32, "Skipping compatibility check due to %ld", (uint8_t *)v4, 0xCu);
      MEMORY[0x1CB799300](v4, -1, -1);
    }
    else
    {
    }
    uint64_t v223 = MEMORY[0x1E4FBC860];
    int64_t v35 = v230;
  }
  else
  {
    int64_t v35 = v230;
    unint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v223 = sub_1CA5EC7D8(v36, v221 & 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v243 = MEMORY[0x1E4FBC870];
  int64_t v37 = (int64_t)v224;
  if ((unint64_t)v35 >> 62) {
    goto LABEL_324;
  }
  uint64_t v38 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v38)
  {
    unint64_t v40 = 0;
    int64_t v222 = v37 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_logger;
    unint64_t v234 = v35 & 0xC000000000000001;
    uint64_t v229 = v35 & 0xFFFFFFFFFFFFFF8;
    int64_t v228 = v35 + 32;
    unint64_t v212 = (char *)&__s2 + 8;
    uint64_t v216 = (char *)&__s1 + 8;
    *(void *)&long long v39 = 136315138;
    long long v219 = v39;
    *((void *)&v41 + 1) = 2;
    long long v236 = xmmword_1CA6021C0;
    uint64_t v218 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v41 = 136315394;
    long long v213 = v41;
    uint64_t v233 = v38;
LABEL_29:
    if (v234)
    {
      uint64_t v42 = MEMORY[0x1CB798560](v40, v35);
      BOOL v43 = __OFADD__(v40++, 1);
      if (v43) {
        goto LABEL_306;
      }
    }
    else
    {
      if (v40 >= *(void *)(v229 + 16)) {
        goto LABEL_308;
      }
      uint64_t v42 = *(void *)(v228 + 8 * v40);
      swift_retain();
      BOOL v43 = __OFADD__(v40++, 1);
      if (v43) {
        goto LABEL_306;
      }
    }
    uint64_t v44 = *(void *)(v42 + 144);
    if (v44 && *(void *)(v44 + 16) || (*(unsigned char *)(v42 + 160) & 1) != 0 || *(void *)(v42 + 152) != 2)
    {
      swift_release();
      goto LABEL_28;
    }
    uint64_t v45 = v242;
    if (v242 >> 62)
    {
      if ((v242 & 0x8000000000000000) != 0) {
        int64_t v37 = v242;
      }
      else {
        int64_t v37 = v242 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      a1 = sub_1CA5FDC28();
      swift_bridgeObjectRelease();
    }
    else
    {
      a1 = *(void *)((v242 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    unint64_t v235 = v40;
    unint64_t v232 = v5;
    v237 = (uint64_t *)v42;
    if (!a1)
    {
LABEL_167:
      swift_bridgeObjectRelease_n();
      swift_retain_n();
      a1 = sub_1CA5FD628();
      int v111 = sub_1CA5FD9C8();
      if (!os_log_type_enabled((os_log_t)a1, (os_log_type_t)v111))
      {
        swift_release_n();

        unint64_t v5 = v232;
        unint64_t v40 = v235;
        goto LABEL_28;
      }
      unint64_t v4 = swift_slowAlloc();
      uint64_t v220 = swift_slowAlloc();
      *(void *)&long long __s2 = v220;
      *(_DWORD *)unint64_t v4 = v219;
      unint64_t v112 = *(void *)(v42 + 32);
      unint64_t v238 = *(void *)(v42 + 40);
      int64_t v37 = v238 >> 62;
      uint64_t v113 = MEMORY[0x1E4FBC860];
      unint64_t v40 = v235;
      switch(v238 >> 62)
      {
        case 1uLL:
          LODWORD(v217) = v111;
          if (__OFSUB__(HIDWORD(v112), v112)) {
            goto LABEL_359;
          }
          uint64_t v114 = HIDWORD(v112) - (int)v112;
LABEL_174:
          if (!v114) {
            goto LABEL_204;
          }
          uint64_t v225 = HIDWORD(v112);
          unint64_t v214 = v4;
          os_log_t v215 = (os_log_t)a1;
          v247[0] = MEMORY[0x1E4FBC860];
          unint64_t v4 = v114 & ~(v114 >> 63);
          uint64_t v240 = v112;
          sub_1CA5DE698(0, v4, 0);
          unint64_t v5 = v240;
          uint64_t v113 = v247[0];
          int64_t v231 = (int)v240;
          if (v37)
          {
            if (v37 == 1) {
              int64_t v35 = v231;
            }
            else {
              int64_t v35 = *(void *)(v240 + 16);
            }
            if (v114 < 0) {
              goto LABEL_358;
            }
          }
          else
          {
            if (v114 < 0) {
              goto LABEL_361;
            }
            int64_t v35 = 0;
          }
          *(void *)&long long v239 = v238 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v226 = v240 >> 32;
          uint64_t v227 = BYTE6(v238);
          uint64_t v241 = v37;
          while (v4)
          {
            if (v37)
            {
              LOBYTE(a1) = v113;
              if (v37 == 1)
              {
                if (v35 < v231 || v35 >= v226) {
                  goto LABEL_309;
                }
                uint64_t v117 = sub_1CA5FD408();
                if (!v117) {
                  goto LABEL_370;
                }
                int64_t v37 = v117;
                uint64_t v118 = sub_1CA5FD428();
                int64_t v119 = v35 - v118;
                if (__OFSUB__(v35, v118)) {
                  goto LABEL_312;
                }
              }
              else
              {
                if (v35 < *(void *)(v5 + 16)) {
                  goto LABEL_311;
                }
                if (v35 >= *(void *)(v5 + 24)) {
                  goto LABEL_313;
                }
                uint64_t v121 = sub_1CA5FD408();
                if (!v121) {
                  goto LABEL_371;
                }
                int64_t v37 = v121;
                uint64_t v122 = sub_1CA5FD428();
                int64_t v119 = v35 - v122;
                if (__OFSUB__(v35, v122)) {
                  goto LABEL_314;
                }
              }
              char v120 = *(unsigned char *)(v37 + v119);
              unint64_t v5 = v240;
            }
            else
            {
              if (v35 >= v227) {
                goto LABEL_310;
              }
              LOWORD(__s1) = v5;
              BYTE2(__s1) = BYTE2(v5);
              BYTE3(__s1) = BYTE3(v5);
              BYTE4(__s1) = v225;
              BYTE5(__s1) = BYTE5(v5);
              BYTE6(__s1) = BYTE6(v5);
              BYTE7(__s1) = HIBYTE(v5);
              DWORD2(__s1) = v238;
              WORD6(__s1) = WORD2(v238);
              char v120 = *((unsigned char *)&__s1 + v35);
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
            uint64_t v123 = swift_allocObject();
            *(_OWORD *)(v123 + 16) = v236;
            *(void *)(v123 + 56) = MEMORY[0x1E4FBC358];
            *(void *)(v123 + 64) = MEMORY[0x1E4FBC3B0];
            *(unsigned char *)(v123 + 32) = v120;
            a1 = sub_1CA5FD8B8();
            uint64_t v125 = v124;
            v247[0] = v113;
            unint64_t v127 = *(void *)(v113 + 16);
            unint64_t v126 = *(void *)(v113 + 24);
            if (v127 >= v126 >> 1)
            {
              sub_1CA5DE698(v126 > 1, v127 + 1, 1);
              unint64_t v5 = v240;
              uint64_t v113 = v247[0];
            }
            *(void *)(v113 + 16) = v127 + 1;
            uint64_t v128 = v113 + 16 * v127;
            *(void *)(v128 + 32) = a1;
            *(void *)(v128 + 40) = v125;
            ++v35;
            --v4;
            --v114;
            unint64_t v40 = v235;
            int64_t v37 = v241;
            if (!v114)
            {
              int64_t v35 = v230;
              a1 = (uint64_t)v215;
              unint64_t v4 = v214;
LABEL_204:
              LOBYTE(v111) = (_BYTE)v217;
LABEL_205:
              *(void *)&long long __s1 = v113;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
              sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
              uint64_t v129 = sub_1CA5FD888();
              unint64_t v131 = v130;
              swift_bridgeObjectRelease();
              *(void *)(v4 + 4) = sub_1CA5DDA20(v129, v131, (uint64_t *)&__s2);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1CA552000, (os_log_t)a1, (os_log_type_t)v111, "Trying to fold %s but head applet not express", (uint8_t *)v4, 0xCu);
              int64_t v37 = v220;
              swift_arrayDestroy();
              MEMORY[0x1CB799300](v37, -1, -1);
              MEMORY[0x1CB799300](v4, -1, -1);
              swift_release();

              unint64_t v5 = v232;
              goto LABEL_28;
            }
          }
          break;
        case 2uLL:
          LODWORD(v217) = v111;
          uint64_t v116 = *(void *)(v112 + 16);
          uint64_t v115 = *(void *)(v112 + 24);
          uint64_t v114 = v115 - v116;
          if (!__OFSUB__(v115, v116)) {
            goto LABEL_174;
          }
          goto LABEL_360;
        case 3uLL:
          goto LABEL_205;
        default:
          LODWORD(v217) = v111;
          uint64_t v114 = BYTE6(v238);
          goto LABEL_174;
      }
      goto LABEL_307;
    }
    uint64_t v240 = v45 & 0xC000000000000001;
    uint64_t v46 = 4;
    unint64_t v238 = a1;
    *(void *)&long long v239 = v45;
    while (1)
    {
      int64_t v37 = v46 - 4;
      if (!v240) {
        break;
      }
      uint64_t v47 = MEMORY[0x1CB798560](v46 - 4, v45);
      unint64_t v4 = v46 - 3;
      if (__OFADD__(v37, 1)) {
        goto LABEL_305;
      }
LABEL_50:
      int64_t v37 = *(void *)(v47 + 32);
      unint64_t v5 = *(void *)(v47 + 40);
      a1 = *(void *)(v42 + 128);
      unint64_t v48 = *(void *)(v42 + 136);
      if (v48 >> 60 == 15)
      {
        sub_1CA5B6FE8(*(void *)(v47 + 32), *(void *)(v47 + 40));
        sub_1CA5B736C(v37, v5);
        sub_1CA5B736C(a1, v48);
        goto LABEL_44;
      }
      uint64_t v49 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          LODWORD(v49) = HIDWORD(v37) - v37;
          if (__OFSUB__(HIDWORD(v37), v37)) {
            goto LABEL_315;
          }
          uint64_t v49 = (int)v49;
LABEL_56:
          uint64_t v241 = *(void *)(v42 + 128);
          a1 = v48 >> 62;
          switch(v48 >> 62)
          {
            case 1uLL:
              LODWORD(v52) = HIDWORD(v241) - v241;
              if (__OFSUB__(HIDWORD(v241), v241)) {
                goto LABEL_317;
              }
              uint64_t v52 = (int)v52;
LABEL_61:
              if (v49 != v52) {
                goto LABEL_44;
              }
              if (v49 < 1) {
                goto LABEL_162;
              }
              break;
            case 2uLL:
              uint64_t v54 = *(void *)(v241 + 16);
              uint64_t v53 = *(void *)(v241 + 24);
              BOOL v43 = __OFSUB__(v53, v54);
              uint64_t v52 = v53 - v54;
              if (!v43) {
                goto LABEL_61;
              }
              goto LABEL_318;
            case 3uLL:
              if (!v49) {
                goto LABEL_162;
              }
              goto LABEL_44;
            default:
              uint64_t v52 = BYTE6(v48);
              goto LABEL_61;
          }
          break;
        case 2uLL:
          uint64_t v51 = *(void *)(v37 + 16);
          uint64_t v50 = *(void *)(v37 + 24);
          BOOL v43 = __OFSUB__(v50, v51);
          uint64_t v49 = v50 - v51;
          if (!v43) {
            goto LABEL_56;
          }
          goto LABEL_316;
        case 3uLL:
          goto LABEL_56;
        default:
          uint64_t v49 = BYTE6(v5);
          goto LABEL_56;
      }
      switch(v5 >> 62)
      {
        case 1uLL:
          int64_t v35 = (int)v37;
          if ((int)v37 > v37 >> 32) {
            goto LABEL_321;
          }
          int64_t v231 = v47;
          uint64_t v45 = v5 & 0x3FFFFFFFFFFFFFFFLL;
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B8510(v241, v48);
          uint64_t v59 = sub_1CA5FD408();
          if (v59)
          {
            uint64_t v60 = v59;
            uint64_t v61 = sub_1CA5FD428();
            if (__OFSUB__((int)v37, v61)) {
              goto LABEL_323;
            }
            uint64_t v227 = v60 + (int)v37 - v61;
          }
          else
          {
            uint64_t v227 = 0;
          }
          uint64_t v42 = (uint64_t)v237;
          sub_1CA5FD418();
          int64_t v35 = v230;
          if (!a1)
          {
            uint64_t v75 = v241;
            *(void *)&long long __s1 = v241;
            WORD4(__s1) = v48;
            BYTE10(__s1) = BYTE2(v48);
            BYTE11(__s1) = BYTE3(v48);
            BYTE12(__s1) = BYTE4(v48);
            BYTE13(__s1) = BYTE5(v48);
            if (!v227) {
              goto LABEL_387;
            }
            int v69 = memcmp((const void *)v227, &__s1, BYTE6(v48));
            goto LABEL_147;
          }
          if (a1 == 1)
          {
            int64_t v55 = (int)v241;
            uint64_t v76 = (v241 >> 32) - (int)v241;
            if (v241 >> 32 < (int)v241) {
              goto LABEL_349;
            }
            swift_retain();
            size_t v77 = (char *)sub_1CA5FD408();
            if (v77)
            {
              uint64_t v78 = sub_1CA5FD428();
              if (__OFSUB__(v55, v78)) {
                goto LABEL_357;
              }
              v77 += v55 - v78;
            }
            int64_t v35 = v230;
            uint64_t v79 = sub_1CA5FD418();
            if (v79 >= v76) {
              size_t v80 = v76;
            }
            else {
              size_t v80 = v79;
            }
            if (!v227) {
              goto LABEL_380;
            }
            uint64_t v42 = (uint64_t)v237;
            if (!v77) {
              goto LABEL_381;
            }
            int v69 = memcmp((const void *)v227, v77, v80);
            uint64_t v75 = v241;
            sub_1CA5B736C(v241, v48);
            goto LABEL_147;
          }
          uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v97 = *(void *)(v241 + 16);
          uint64_t v96 = *(void *)(v241 + 24);
          swift_retain();
          swift_retain();
          a1 = sub_1CA5FD408();
          if (a1)
          {
            uint64_t v98 = sub_1CA5FD428();
            if (__OFSUB__(v97, v98)) {
              goto LABEL_356;
            }
            a1 += v97 - v98;
          }
          BOOL v43 = __OFSUB__(v96, v97);
          int64_t v55 = v96 - v97;
          if (v43) {
            goto LABEL_350;
          }
          uint64_t v99 = sub_1CA5FD418();
          if (v99 >= v55) {
            size_t v100 = v55;
          }
          else {
            size_t v100 = v99;
          }
          if (!v227) {
            goto LABEL_388;
          }
          int64_t v35 = v230;
          uint64_t v42 = (uint64_t)v237;
          if (!a1) {
            goto LABEL_389;
          }
          int v89 = memcmp((const void *)v227, (const void *)a1, v100);
          goto LABEL_160;
        case 2uLL:
          int64_t v231 = v47;
          uint64_t v226 = *(void *)(v37 + 16);
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B8510(v241, v48);
          swift_retain();
          swift_retain();
          uint64_t v62 = sub_1CA5FD408();
          uint64_t v227 = v5 & 0x3FFFFFFFFFFFFFFFLL;
          if (v62)
          {
            uint64_t v63 = v62;
            uint64_t v64 = sub_1CA5FD428();
            if (__OFSUB__(v226, v64)) {
              goto LABEL_322;
            }
            uint64_t v226 = v63 + v226 - v64;
          }
          else
          {
            uint64_t v226 = 0;
          }
          uint64_t v45 = v227;
          sub_1CA5FD418();
          uint64_t v42 = (uint64_t)v237;
          if (a1)
          {
            if (a1 != 1)
            {
              uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
              uint64_t v92 = *(void *)(v241 + 16);
              uint64_t v91 = *(void *)(v241 + 24);
              swift_retain();
              swift_retain();
              a1 = sub_1CA5FD408();
              if (a1)
              {
                uint64_t v93 = sub_1CA5FD428();
                if (__OFSUB__(v92, v93)) {
                  goto LABEL_354;
                }
                a1 += v92 - v93;
              }
              BOOL v43 = __OFSUB__(v91, v92);
              int64_t v55 = v91 - v92;
              if (v43) {
                goto LABEL_348;
              }
              uint64_t v94 = sub_1CA5FD418();
              if (v94 >= v55) {
                size_t v95 = v55;
              }
              else {
                size_t v95 = v94;
              }
              if (!v226) {
                goto LABEL_385;
              }
              int64_t v35 = v230;
              uint64_t v42 = (uint64_t)v237;
              if (!a1) {
                goto LABEL_386;
              }
              int v89 = memcmp((const void *)v226, (const void *)a1, v95);
              swift_release();
              swift_release();
LABEL_160:
              swift_release();
              uint64_t v101 = v241;
              swift_release();
              sub_1CA5B736C(v101, v48);
              sub_1CA5B6EF4(v37, v5);
              sub_1CA5B6EF4(v37, v5);
              goto LABEL_161;
            }
            int64_t v55 = (int)v241;
            uint64_t v70 = (v241 >> 32) - (int)v241;
            if (v241 >> 32 < (int)v241) {
              goto LABEL_343;
            }
            swift_retain();
            unint64_t v71 = (char *)sub_1CA5FD408();
            if (v71)
            {
              uint64_t v72 = sub_1CA5FD428();
              if (__OFSUB__(v55, v72)) {
                goto LABEL_355;
              }
              v71 += v55 - v72;
            }
            int64_t v35 = v230;
            uint64_t v73 = sub_1CA5FD418();
            if (v73 >= v70) {
              size_t v74 = v70;
            }
            else {
              size_t v74 = v73;
            }
            if (!v226) {
              goto LABEL_378;
            }
            uint64_t v42 = (uint64_t)v237;
            if (!v71) {
              goto LABEL_379;
            }
            int v69 = memcmp((const void *)v226, v71, v74);
            uint64_t v75 = v241;
            sub_1CA5B736C(v241, v48);
          }
          else
          {
            uint64_t v75 = v241;
            *(void *)&long long __s1 = v241;
            WORD4(__s1) = v48;
            BYTE10(__s1) = BYTE2(v48);
            BYTE11(__s1) = BYTE3(v48);
            BYTE12(__s1) = BYTE4(v48);
            BYTE13(__s1) = BYTE5(v48);
            if (!v226) {
              goto LABEL_384;
            }
            int v69 = memcmp((const void *)v226, &__s1, BYTE6(v48));
          }
          swift_release();
          swift_release();
LABEL_147:
          sub_1CA5B736C(v75, v48);
          sub_1CA5B6EF4(v37, v5);
          sub_1CA5B6EF4(v37, v5);
          goto LABEL_148;
        case 3uLL:
          *(void *)((char *)&__s1 + 6) = 0;
          *(void *)&long long __s1 = 0;
          if (!a1) {
            goto LABEL_89;
          }
          int64_t v231 = v47;
          if (a1 != 1)
          {
            uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v85 = v241;
            uint64_t v86 = *(void *)(v241 + 16);
            uint64_t v227 = *(void *)(v241 + 24);
            sub_1CA5B6FE8(v37, v5);
            sub_1CA5B8510(v85, v48);
            swift_retain();
            swift_retain();
            a1 = sub_1CA5FD408();
            if (a1)
            {
              uint64_t v87 = sub_1CA5FD428();
              if (__OFSUB__(v86, v87)) {
                goto LABEL_353;
              }
              a1 += v86 - v87;
            }
            int64_t v55 = v227 - v86;
            if (__OFSUB__(v227, v86)) {
              goto LABEL_345;
            }
            uint64_t v84 = sub_1CA5FD418();
            if (!a1) {
              goto LABEL_383;
            }
            goto LABEL_128;
          }
          a1 = v241;
          int64_t v55 = (int)v241;
          uint64_t v56 = (a1 >> 32) - (int)a1;
          if (a1 >> 32 < (int)a1) {
            goto LABEL_342;
          }
          uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B8510(a1, v48);
          uint64_t v65 = sub_1CA5FD408();
          if (!v65) {
            goto LABEL_377;
          }
          a1 = v65;
          uint64_t v66 = sub_1CA5FD428();
          BOOL v43 = __OFSUB__(v55, v66);
          v55 -= v66;
          if (v43) {
            goto LABEL_347;
          }
          goto LABEL_85;
        default:
          *(void *)&long long __s1 = v37;
          WORD4(__s1) = v5;
          BYTE10(__s1) = BYTE2(v5);
          BYTE11(__s1) = BYTE3(v5);
          BYTE12(__s1) = BYTE4(v5);
          BYTE13(__s1) = BYTE5(v5);
          if (!a1)
          {
LABEL_89:
            *(void *)&long long __s2 = v241;
            WORD4(__s2) = v48;
            BYTE10(__s2) = BYTE2(v48);
            BYTE11(__s2) = BYTE3(v48);
            BYTE12(__s2) = BYTE4(v48);
            BYTE13(__s2) = BYTE5(v48);
            int64_t v37 = v47;
            if (!memcmp(&__s1, &__s2, BYTE6(v48))) {
              goto LABEL_162;
            }
            goto LABEL_44;
          }
          int64_t v231 = v47;
          if (a1 != 1)
          {
            uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v81 = v241;
            uint64_t v82 = *(void *)(v241 + 16);
            uint64_t v227 = *(void *)(v241 + 24);
            sub_1CA5B6FE8(v37, v5);
            sub_1CA5B8510(v81, v48);
            swift_retain();
            swift_retain();
            a1 = sub_1CA5FD408();
            if (a1)
            {
              uint64_t v83 = sub_1CA5FD428();
              if (__OFSUB__(v82, v83))
              {
                __break(1u);
LABEL_353:
                __break(1u);
LABEL_354:
                __break(1u);
LABEL_355:
                __break(1u);
LABEL_356:
                __break(1u);
LABEL_357:
                __break(1u);
LABEL_358:
                __break(1u);
LABEL_359:
                __break(1u);
LABEL_360:
                __break(1u);
LABEL_361:
                __break(1u);
                goto LABEL_362;
              }
              a1 += v82 - v83;
            }
            int64_t v55 = v227 - v82;
            if (__OFSUB__(v227, v82)) {
              goto LABEL_344;
            }
            uint64_t v84 = sub_1CA5FD418();
            if (!a1) {
              goto LABEL_382;
            }
LABEL_128:
            if (v84 >= v55) {
              size_t v88 = v55;
            }
            else {
              size_t v88 = v84;
            }
            int v89 = memcmp(&__s1, (const void *)a1, v88);
            swift_release();
            uint64_t v90 = v241;
            swift_release();
            sub_1CA5B736C(v90, v48);
            sub_1CA5B6EF4(v37, v5);
            int64_t v35 = v230;
            uint64_t v42 = (uint64_t)v237;
LABEL_161:
            uint64_t v47 = v231;
            if (v89) {
              goto LABEL_44;
            }
LABEL_162:
            int64_t v231 = v47;
            swift_bridgeObjectRelease_n();
            uint64_t v102 = (void *)v231;
            unint64_t v103 = *(void *)(v231 + 80);
            if (v103 >= 3)
            {
              unint64_t v104 = *(void *)(v42 + 80);
              if (v104 >= 3)
              {
                uint64_t v132 = *(void *)(v231 + 88);
                uint64_t v133 = *(void *)(v231 + 96);
                uint64_t v134 = *(void *)(v42 + 88);
                uint64_t v135 = *(void *)(v42 + 96);
                swift_retain();
                uint64_t v240 = v133;
                uint64_t v241 = v132;
                sub_1CA5EAF08(v103);
                swift_retain();
                unint64_t v238 = v104;
                uint64_t v227 = v134;
                *(void *)&long long v239 = v135;
                sub_1CA5EAF08(v104);
                long long v136 = sub_1CA5FD628();
                os_log_type_t v137 = sub_1CA5FD9C8();
                BOOL v138 = os_log_type_enabled(v136, v137);
                unint64_t v40 = v235;
                if (v138)
                {
                  uint64_t v139 = (uint8_t *)swift_slowAlloc();
                  uint64_t v140 = swift_slowAlloc();
                  *(void *)&long long __s1 = v140;
                  *(_DWORD *)uint64_t v139 = v219;
                  uint64_t v226 = (uint64_t)(v139 + 4);
                  swift_retain();
                  uint64_t v141 = sub_1CA5D654C(0);
                  unint64_t v143 = v142;
                  swift_release();
                  *(void *)&long long __s2 = sub_1CA5DDA20(v141, v143, (uint64_t *)&__s1);
                  uint64_t v42 = (uint64_t)v237;
                  sub_1CA5FDA68();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1CA552000, v136, v137, "Folded %s", v139, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1CB799300](v140, -1, -1);
                  MEMORY[0x1CB799300](v139, -1, -1);
                }
                else
                {
                  swift_release_n();
                }

                unint64_t v5 = v232;
                unint64_t v4 = v240;
                v237 = sub_1CA5CFCC0(v238, v227, v239);
                unint64_t v232 = v144;
                uint64_t v226 = v145;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a1 = v231;
                unint64_t v146 = *(void *)(v231 + 80);
                unint64_t v147 = v232;
                *(void *)(v231 + 80) = v237;
                *(void *)(a1 + 88) = v147;
                *(void *)(a1 + 96) = v226;
                sub_1CA5EAF58(v146);
                *(unsigned char *)(a1 + 164) = 1;
                int64_t v37 = *(void *)(v42 + 32);
                unint64_t v148 = *(void *)(v42 + 40);
                sub_1CA5B6FE8(v37, v148);
                sub_1CA5E3CE0((uint64_t *)&__s1, v37, v148);
                swift_release();
                swift_release();
                sub_1CA5B6EF4(__s1, *((unint64_t *)&__s1 + 1));
                goto LABEL_279;
              }
            }
            swift_retain_n();
            swift_retain_n();
            int64_t v37 = (int64_t)v102;
            uint64_t v105 = sub_1CA5FD628();
            LODWORD(a1) = sub_1CA5FD9C8();
            BOOL v106 = os_log_type_enabled(v105, (os_log_type_t)a1);
            unint64_t v5 = v232;
            unint64_t v40 = v235;
            if (!v106)
            {
              swift_release_n();
              swift_release_n();

              goto LABEL_28;
            }
            LODWORD(v214) = a1;
            os_log_t v215 = v105;
            uint64_t v107 = (_DWORD *)swift_slowAlloc();
            uint64_t v211 = swift_slowAlloc();
            *(void *)&long long __s2 = v211;
            uint64_t v217 = v107;
            _DWORD *v107 = v213;
            unint64_t v108 = *(void *)(v42 + 32);
            unint64_t v238 = *(void *)(v42 + 40);
            int64_t v37 = v238 >> 62;
            uint64_t v109 = MEMORY[0x1E4FBC860];
            switch(v238 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(v108), v108)) {
                  goto LABEL_364;
                }
                uint64_t v110 = HIDWORD(v108) - (int)v108;
LABEL_213:
                if (!v110)
                {
                  uint64_t v109 = MEMORY[0x1E4FBC860];
                  unint64_t v40 = v235;
                  goto LABEL_243;
                }
                uint64_t v220 = HIDWORD(v108);
                v247[0] = MEMORY[0x1E4FBC860];
                unint64_t v5 = v110 & ~(v110 >> 63);
                *(void *)&long long v239 = v108;
                sub_1CA5DE698(0, v5, 0);
                a1 = v239;
                uint64_t v109 = v247[0];
                uint64_t v227 = (int)v239;
                if (v37)
                {
                  if (v37 == 1) {
                    uint64_t v151 = v227;
                  }
                  else {
                    uint64_t v151 = *(void *)(v239 + 16);
                  }
                  if ((v110 & 0x8000000000000000) == 0) {
                    goto LABEL_222;
                  }
LABEL_362:
                  __break(1u);
                  goto LABEL_363;
                }
                if (v110 < 0) {
                  goto LABEL_368;
                }
                uint64_t v151 = 0;
LABEL_222:
                uint64_t v45 = v238 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v225 = (uint64_t)v239 >> 32;
                uint64_t v226 = BYTE6(v238);
                uint64_t v240 = v238 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v241 = v37;
                break;
              case 2uLL:
                uint64_t v150 = *(void *)(v108 + 16);
                uint64_t v149 = *(void *)(v108 + 24);
                uint64_t v110 = v149 - v150;
                if (!__OFSUB__(v149, v150)) {
                  goto LABEL_213;
                }
                goto LABEL_365;
              case 3uLL:
                goto LABEL_243;
              default:
                uint64_t v110 = BYTE6(v238);
                goto LABEL_213;
            }
            while (2)
            {
              if (!v5) {
                goto LABEL_319;
              }
              if (!v37)
              {
                if (v151 >= v226) {
                  goto LABEL_326;
                }
                unint64_t v4 = v109;
                LOWORD(__s1) = a1;
                BYTE2(__s1) = BYTE2(a1);
                BYTE3(__s1) = BYTE3(a1);
                BYTE4(__s1) = v220;
                BYTE5(__s1) = BYTE5(a1);
                BYTE6(__s1) = BYTE6(a1);
                BYTE7(__s1) = HIBYTE(a1);
                DWORD2(__s1) = v238;
                WORD6(__s1) = WORD2(v238);
                char v155 = *((unsigned char *)&__s1 + v151);
                goto LABEL_239;
              }
              if (v37 != 1)
              {
                if (v151 < *(void *)(a1 + 16)) {
                  goto LABEL_327;
                }
                if (v151 >= *(void *)(a1 + 24)) {
                  goto LABEL_329;
                }
                unint64_t v4 = v109;
                uint64_t v156 = sub_1CA5FD408();
                if (!v156) {
                  goto LABEL_373;
                }
                int64_t v37 = v156;
                uint64_t v157 = sub_1CA5FD428();
                uint64_t v154 = v151 - v157;
                if (__OFSUB__(v151, v157)) {
                  goto LABEL_330;
                }
                goto LABEL_238;
              }
              if (v151 < v227 || v151 >= v225)
              {
                __break(1u);
LABEL_326:
                __break(1u);
LABEL_327:
                __break(1u);
LABEL_328:
                __break(1u);
LABEL_329:
                __break(1u);
LABEL_330:
                __break(1u);
LABEL_331:
                __break(1u);
LABEL_332:
                __break(1u);
LABEL_333:
                __break(1u);
LABEL_334:
                __break(1u);
LABEL_335:
                __break(1u);
LABEL_336:
                __break(1u);
LABEL_337:
                swift_bridgeObjectRetain();
                int64_t v55 = sub_1CA5FDC28();
                swift_bridgeObjectRelease();
                if (v55 < v37) {
                  goto LABEL_338;
                }
                goto LABEL_286;
              }
              unint64_t v4 = v109;
              uint64_t v152 = sub_1CA5FD408();
              if (!v152)
              {
                swift_release();
                swift_release();
                __break(1u);
LABEL_373:
                swift_release();
                swift_release();
                __break(1u);
LABEL_374:
                swift_release();
                __break(1u);
LABEL_375:
                swift_release();
                __break(1u);
LABEL_376:
                sub_1CA5FD418();
                __break(1u);
LABEL_377:
                sub_1CA5FD418();
                __break(1u);
LABEL_378:
                __break(1u);
LABEL_379:
                __break(1u);
LABEL_380:
                __break(1u);
LABEL_381:
                __break(1u);
LABEL_382:
                __break(1u);
LABEL_383:
                __break(1u);
LABEL_384:
                __break(1u);
LABEL_385:
                __break(1u);
LABEL_386:
                __break(1u);
LABEL_387:
                __break(1u);
LABEL_388:
                __break(1u);
LABEL_389:
                __break(1u);
                JUMPOUT(0x1CA5CFC60);
              }
              int64_t v37 = v152;
              uint64_t v153 = sub_1CA5FD428();
              uint64_t v154 = v151 - v153;
              if (__OFSUB__(v151, v153)) {
                goto LABEL_328;
              }
LABEL_238:
              char v155 = *(unsigned char *)(v37 + v154);
              a1 = v239;
LABEL_239:
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
              uint64_t v158 = swift_allocObject();
              *(_OWORD *)(v158 + 16) = v236;
              *(void *)(v158 + 56) = MEMORY[0x1E4FBC358];
              *(void *)(v158 + 64) = MEMORY[0x1E4FBC3B0];
              *(unsigned char *)(v158 + 32) = v155;
              int64_t v35 = sub_1CA5FD8B8();
              uint64_t v160 = v159;
              uint64_t v109 = v4;
              v247[0] = v4;
              unint64_t v4 = *(void *)(v4 + 16);
              unint64_t v161 = *(void *)(v109 + 24);
              if (v4 >= v161 >> 1)
              {
                sub_1CA5DE698(v161 > 1, v4 + 1, 1);
                a1 = v239;
                uint64_t v109 = v247[0];
              }
              *(void *)(v109 + 16) = v4 + 1;
              unint64_t v162 = v109 + 16 * v4;
              *(void *)(v162 + 32) = v35;
              *(void *)(v162 + 40) = v160;
              ++v151;
              --v5;
              --v110;
              uint64_t v45 = v240;
              int64_t v37 = v241;
              if (v110) {
                continue;
              }
              break;
            }
            unint64_t v5 = v232;
            unint64_t v40 = v235;
LABEL_243:
            unint64_t v232 = v5;
            unint64_t v4 = (unint64_t)v217;
            *(void *)&long long __s1 = v109;
            uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
            v210[1] = sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
            uint64_t v164 = sub_1CA5FD888();
            int64_t v35 = v165;
            swift_bridgeObjectRelease();
            *(void *)&long long __s1 = sub_1CA5DDA20(v164, v35, (uint64_t *)&__s2);
            sub_1CA5FDA68();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v4 + 12) = 2080;
            LOBYTE(a1) = v231;
            unint64_t v166 = *(void *)(v231 + 32);
            unint64_t v238 = *(void *)(v231 + 40);
            int64_t v37 = v238 >> 62;
            uint64_t v45 = MEMORY[0x1E4FBC860];
            switch(v238 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(v166), v166)) {
                  goto LABEL_366;
                }
                uint64_t v167 = HIDWORD(v166) - (int)v166;
LABEL_248:
                if (v167)
                {
                  uint64_t v220 = HIDWORD(v166);
                  v210[0] = v163;
                  v247[0] = MEMORY[0x1E4FBC860];
                  int64_t v170 = v167 & ~(v167 >> 63);
                  uint64_t v240 = v166;
                  sub_1CA5DE698(0, v170, 0);
                  unint64_t v5 = v240;
                  uint64_t v45 = v247[0];
                  uint64_t v227 = (int)v240;
                  if (v37)
                  {
                    if (v37 == 1) {
                      uint64_t v171 = v227;
                    }
                    else {
                      uint64_t v171 = *(void *)(v240 + 16);
                    }
                    if ((v167 & 0x8000000000000000) == 0) {
                      goto LABEL_257;
                    }
LABEL_363:
                    __break(1u);
LABEL_364:
                    __break(1u);
LABEL_365:
                    __break(1u);
LABEL_366:
                    __break(1u);
LABEL_367:
                    __break(1u);
LABEL_368:
                    __break(1u);
LABEL_369:
                    __break(1u);
LABEL_370:
                    swift_release();
                    __break(1u);
LABEL_371:
                    swift_release();
                    __break(1u);
                  }
                  if (v167 < 0) {
                    goto LABEL_369;
                  }
                  uint64_t v171 = 0;
LABEL_257:
                  *(void *)&long long v239 = v238 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v225 = v240 >> 32;
                  uint64_t v226 = BYTE6(v238);
                  uint64_t v241 = v37;
                  do
                  {
                    if (!v170) {
                      goto LABEL_320;
                    }
                    if (v37)
                    {
                      uint64_t v172 = v45;
                      if (v37 == 1)
                      {
                        uint64_t v45 = v239;
                        if (v171 < v227 || v171 >= v225) {
                          goto LABEL_331;
                        }
                        uint64_t v173 = sub_1CA5FD408();
                        if (!v173) {
                          goto LABEL_374;
                        }
                        int64_t v37 = v173;
                        uint64_t v174 = sub_1CA5FD428();
                        uint64_t v175 = v171 - v174;
                        if (__OFSUB__(v171, v174)) {
                          goto LABEL_334;
                        }
                      }
                      else
                      {
                        uint64_t v45 = v239;
                        if (v171 < *(void *)(v5 + 16)) {
                          goto LABEL_333;
                        }
                        if (v171 >= *(void *)(v5 + 24)) {
                          goto LABEL_335;
                        }
                        uint64_t v177 = sub_1CA5FD408();
                        if (!v177) {
                          goto LABEL_375;
                        }
                        int64_t v37 = v177;
                        uint64_t v178 = sub_1CA5FD428();
                        uint64_t v175 = v171 - v178;
                        if (__OFSUB__(v171, v178)) {
                          goto LABEL_336;
                        }
                      }
                      char v176 = *(unsigned char *)(v37 + v175);
                      unint64_t v5 = v240;
                      uint64_t v45 = v172;
                    }
                    else
                    {
                      if (v171 >= v226) {
                        goto LABEL_332;
                      }
                      LOWORD(__s1) = v5;
                      BYTE2(__s1) = BYTE2(v5);
                      BYTE3(__s1) = BYTE3(v5);
                      BYTE4(__s1) = v220;
                      BYTE5(__s1) = BYTE5(v5);
                      BYTE6(__s1) = BYTE6(v5);
                      BYTE7(__s1) = HIBYTE(v5);
                      DWORD2(__s1) = v238;
                      WORD6(__s1) = WORD2(v238);
                      char v176 = *((unsigned char *)&__s1 + v171);
                    }
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                    uint64_t v179 = swift_allocObject();
                    *(_OWORD *)(v179 + 16) = v236;
                    *(void *)(v179 + 56) = MEMORY[0x1E4FBC358];
                    *(void *)(v179 + 64) = MEMORY[0x1E4FBC3B0];
                    *(unsigned char *)(v179 + 32) = v176;
                    int64_t v35 = sub_1CA5FD8B8();
                    uint64_t v181 = v180;
                    v247[0] = v45;
                    unint64_t v4 = *(void *)(v45 + 16);
                    unint64_t v182 = *(void *)(v45 + 24);
                    if (v4 >= v182 >> 1)
                    {
                      sub_1CA5DE698(v182 > 1, v4 + 1, 1);
                      unint64_t v5 = v240;
                      uint64_t v45 = v247[0];
                    }
                    *(void *)(v45 + 16) = v4 + 1;
                    unint64_t v183 = v45 + 16 * v4;
                    *(void *)(v183 + 32) = v35;
                    *(void *)(v183 + 40) = v181;
                    ++v171;
                    --v170;
                    --v167;
                    LOBYTE(a1) = v231;
                    int64_t v37 = v241;
                  }
                  while (v167);
                  unint64_t v40 = v235;
                }
                else
                {
                  unint64_t v40 = v235;
                }
LABEL_278:
                unint64_t v4 = (unint64_t)v217;
                *(void *)&long long __s1 = v45;
                uint64_t v184 = sub_1CA5FD888();
                unint64_t v186 = v185;
                swift_bridgeObjectRelease();
                *(void *)&long long __s1 = sub_1CA5DDA20(v184, v186, (uint64_t *)&__s2);
                sub_1CA5FDA68();
                swift_release_n();
                swift_bridgeObjectRelease();
                int64_t v37 = (int64_t)v215;
                _os_log_impl(&dword_1CA552000, v215, (os_log_type_t)v214, "Trying to fold %s into %s but not ECP2", (uint8_t *)v4, 0x16u);
                uint64_t v187 = v211;
                swift_arrayDestroy();
                MEMORY[0x1CB799300](v187, -1, -1);
                MEMORY[0x1CB799300](v4, -1, -1);
                swift_release();
                swift_release();

                unint64_t v5 = v232;
                break;
              case 2uLL:
                uint64_t v169 = *(void *)(v166 + 16);
                uint64_t v168 = *(void *)(v166 + 24);
                uint64_t v167 = v168 - v169;
                if (!__OFSUB__(v168, v169)) {
                  goto LABEL_248;
                }
                goto LABEL_367;
              case 3uLL:
                goto LABEL_278;
              default:
                uint64_t v167 = BYTE6(v238);
                goto LABEL_248;
            }
LABEL_279:
            int64_t v35 = v230;
LABEL_28:
            if (v40 == v233) {
              goto LABEL_284;
            }
            goto LABEL_29;
          }
          a1 = v241;
          int64_t v55 = (int)v241;
          uint64_t v56 = (a1 >> 32) - (int)a1;
          if (a1 >> 32 < (int)a1) {
            goto LABEL_341;
          }
          uint64_t v45 = v48 & 0x3FFFFFFFFFFFFFFFLL;
          sub_1CA5B6FE8(v37, v5);
          sub_1CA5B8510(a1, v48);
          uint64_t v57 = sub_1CA5FD408();
          if (!v57) {
            goto LABEL_376;
          }
          a1 = v57;
          uint64_t v58 = sub_1CA5FD428();
          BOOL v43 = __OFSUB__(v55, v58);
          v55 -= v58;
          if (v43) {
            goto LABEL_346;
          }
LABEL_85:
          uint64_t v67 = sub_1CA5FD418();
          if (v67 >= v56) {
            size_t v68 = v56;
          }
          else {
            size_t v68 = v67;
          }
          int v69 = memcmp(&__s1, (const void *)(a1 + v55), v68);
          sub_1CA5B736C(v241, v48);
          sub_1CA5B6EF4(v37, v5);
          int64_t v35 = v230;
          uint64_t v42 = (uint64_t)v237;
LABEL_148:
          uint64_t v47 = v231;
          if (!v69) {
            goto LABEL_162;
          }
LABEL_44:
          swift_release();
          ++v46;
          LOBYTE(a1) = v238;
          uint64_t v45 = v239;
          if (v4 == v238) {
            goto LABEL_167;
          }
          break;
      }
    }
    uint64_t v47 = *(void *)(v45 + 8 * v46);
    swift_retain();
    unint64_t v4 = v46 - 3;
    if (!__OFADD__(v37, 1)) {
      goto LABEL_50;
    }
LABEL_305:
    __break(1u);
LABEL_306:
    __break(1u);
LABEL_307:
    __break(1u);
LABEL_308:
    __break(1u);
LABEL_309:
    __break(1u);
LABEL_310:
    __break(1u);
LABEL_311:
    __break(1u);
LABEL_312:
    __break(1u);
LABEL_313:
    __break(1u);
LABEL_314:
    __break(1u);
LABEL_315:
    __break(1u);
LABEL_316:
    __break(1u);
LABEL_317:
    __break(1u);
LABEL_318:
    __break(1u);
LABEL_319:
    __break(1u);
LABEL_320:
    __break(1u);
LABEL_321:
    __break(1u);
LABEL_322:
    __break(1u);
LABEL_323:
    __break(1u);
LABEL_324:
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1CA5FDC28();
  }
LABEL_284:
  swift_bridgeObjectRelease();
  uint64_t v188 = sub_1CA5E9D84(&v242, &v243);
  int64_t v37 = v188;
  uint64_t v45 = v242;
  if (v242 >> 62) {
    goto LABEL_337;
  }
  int64_t v55 = *(void *)((v242 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v55 < v188)
  {
LABEL_338:
    __break(1u);
    goto LABEL_339;
  }
LABEL_286:
  sub_1CA5ED228(v37, v55);
  v189 = &v224[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_logger];
  swift_bridgeObjectRetain_n();
  uint64_t v241 = (uint64_t)v189;
  uint64_t v45 = sub_1CA5FD628();
  LOBYTE(a1) = sub_1CA5FDA08();
  BOOL v190 = os_log_type_enabled((os_log_t)v45, (os_log_type_t)a1);
  unint64_t v232 = v5;
  if (!v190)
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_291;
  }
  int64_t v55 = swift_slowAlloc();
  unint64_t v4 = swift_slowAlloc();
  *(void *)&long long __s1 = v4;
  *(_DWORD *)int64_t v55 = 134218498;
  swift_beginAccess();
  if (v242 >> 62) {
    goto LABEL_351;
  }
  uint64_t v191 = *(void *)((v242 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v247[0] = v191;
    sub_1CA5FDA68();
    *(_WORD *)(v55 + 12) = 2080;
    uint64_t v192 = swift_bridgeObjectRetain();
    uint64_t v193 = MEMORY[0x1CB798360](v192, &type metadata for ExpressModeRejectedPass);
    unint64_t v195 = v194;
    swift_bridgeObjectRelease();
    v247[0] = sub_1CA5DDA20(v193, v195, (uint64_t *)&__s1);
    sub_1CA5FDA68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 1024;
    LODWORD(v247[0]) = v221 & 1;
    sub_1CA5FDA68();
    _os_log_impl(&dword_1CA552000, (os_log_t)v45, (os_log_type_t)a1, "  configCount %ld, Incompatible applets? %s useLegacyBehavior? %{BOOL}d", (uint8_t *)v55, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1CB799300](v4, -1, -1);
    MEMORY[0x1CB799300](v55, -1, -1);

LABEL_291:
    swift_beginAccess();
    int64_t v55 = v242;
    if (v242 >> 62)
    {
LABEL_339:
      swift_bridgeObjectRetain();
      uint64_t v196 = sub_1CA5FDC28();
    }
    else
    {
      uint64_t v196 = *(void *)((v242 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (!v196) {
      break;
    }
    if (v196 >= 1)
    {
      uint64_t v198 = 0;
      unint64_t v199 = v55 & 0xC000000000000001;
      *(void *)&long long v197 = 136315138;
      long long v239 = v197;
      unint64_t v238 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v240 = v55;
      do
      {
        if (v199) {
          MEMORY[0x1CB798560](v198, v55);
        }
        else {
          swift_retain();
        }
        swift_retain_n();
        unint64_t v207 = sub_1CA5FD628();
        os_log_type_t v208 = sub_1CA5FD9C8();
        if (os_log_type_enabled(v207, v208))
        {
          unint64_t v200 = v199;
          uint64_t v201 = v196;
          uint64_t v202 = swift_slowAlloc();
          uint64_t v203 = swift_slowAlloc();
          v247[0] = v203;
          *(_DWORD *)uint64_t v202 = v239;
          uint64_t v204 = sub_1CA5D654C(2);
          *(void *)(v202 + 4) = sub_1CA5DDA20(v204, v205, v247);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CA552000, v207, v208, "PassConfig:\n%s", (uint8_t *)v202, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v203, -1, -1);
          uint64_t v206 = v202;
          uint64_t v196 = v201;
          unint64_t v199 = v200;
          int64_t v55 = v240;
          MEMORY[0x1CB799300](v206, -1, -1);

          swift_release();
        }
        else
        {

          swift_release_n();
        }
        ++v198;
      }
      while (v196 != v198);
      break;
    }
    __break(1u);
LABEL_341:
    __break(1u);
LABEL_342:
    __break(1u);
LABEL_343:
    __break(1u);
LABEL_344:
    __break(1u);
LABEL_345:
    __break(1u);
LABEL_346:
    __break(1u);
LABEL_347:
    __break(1u);
LABEL_348:
    __break(1u);
LABEL_349:
    __break(1u);
LABEL_350:
    __break(1u);
LABEL_351:
    swift_bridgeObjectRetain();
    uint64_t v191 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v242;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t *sub_1CA5CFCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1CA5B1EF0(v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1CA5ED118(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1CA5DE44C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA5B1EF0(a2);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1CA5ED118(v9);
  swift_bridgeObjectRelease();
  sub_1CA5DE44C(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA5B1DA8(a3);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1CA5ED1B4(v11);
  swift_bridgeObjectRelease();
  sub_1CA5DE374(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1CA5CFE20(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1CA5FDD48();
  sub_1CA5FD5A8();
  uint64_t v6 = sub_1CA5FDD78();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = a3 + 56;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  unint64_t v10 = a2 >> 62;
  uint64_t v79 = ~v7;
  unint64_t v76 = a2;
  unint64_t v78 = a2 >> 62;
  BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v77 = v11;
  uint64_t v74 = (a1 >> 32) - (int)a1;
  uint64_t v75 = a1 >> 32;
  uint64_t v80 = v10;
  size_t __n = BYTE6(a2);
  while (2)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    uint64_t v15 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_15:
        sub_1CA5B6FE8(v14, v13);
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v14 + 16);
        uint64_t v16 = *(void *)(v14 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_15;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v13);
        break;
    }
    size_t v18 = __n;
    switch(v80)
    {
      case 1:
        size_t v18 = HIDWORD(a1) - (int)a1;
        if (v77) {
          goto LABEL_121;
        }
        goto LABEL_20;
      case 2:
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        BOOL v21 = __OFSUB__(v19, v20);
        size_t v18 = v19 - v20;
        if (!v21) {
          goto LABEL_20;
        }
        goto LABEL_122;
      case 3:
        if (v15) {
          goto LABEL_8;
        }
        goto LABEL_118;
      default:
LABEL_20:
        if (v15 != v18)
        {
LABEL_8:
          sub_1CA5B6EF4(v14, v13);
          goto LABEL_9;
        }
        if (v15 >= 1)
        {
          switch(v13 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              uint64_t v25 = sub_1CA5FD408();
              if (v25)
              {
                uint64_t v26 = v25;
                uint64_t v27 = sub_1CA5FD428();
                if (__OFSUB__((int)v14, v27)) {
                  goto LABEL_125;
                }
                uint64_t v28 = (const void *)(v26 + (int)v14 - v27);
              }
              else
              {
                uint64_t v28 = 0;
              }
              sub_1CA5FD418();
              LODWORD(v10) = v78;
              if (!v78)
              {
                *(void *)long long __s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v28) {
                  goto LABEL_153;
                }
                int v36 = memcmp(v28, __s1, __n);
                goto LABEL_115;
              }
              if (v78 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_134;
                }
                swift_retain();
                BOOL v43 = (char *)sub_1CA5FD408();
                if (v43)
                {
                  uint64_t v44 = sub_1CA5FD428();
                  if (__OFSUB__((int)a1, v44)) {
                    goto LABEL_141;
                  }
                  v43 += (int)a1 - v44;
                }
                uint64_t v45 = sub_1CA5FD418();
                size_t v46 = (a1 >> 32) - (int)a1;
                if (v45 < v74) {
                  size_t v46 = v45;
                }
                if (!v28) {
                  goto LABEL_146;
                }
                if (!v43) {
                  goto LABEL_147;
                }
                int v36 = memcmp(v28, v43, v46);
                sub_1CA5B6EF4(a1, a2);
                goto LABEL_115;
              }
              uint64_t v65 = *(void *)(a1 + 16);
              uint64_t v66 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v67 = (char *)sub_1CA5FD408();
              if (v67)
              {
                uint64_t v68 = sub_1CA5FD428();
                if (__OFSUB__(v65, v68)) {
                  goto LABEL_140;
                }
                v67 += v65 - v68;
              }
              BOOL v21 = __OFSUB__(v66, v65);
              int64_t v69 = v66 - v65;
              if (v21) {
                goto LABEL_135;
              }
              uint64_t v70 = sub_1CA5FD418();
              if (v70 >= v69) {
                size_t v71 = v69;
              }
              else {
                size_t v71 = v70;
              }
              a2 = v76;
              if (!v28) {
                goto LABEL_154;
              }
              LODWORD(v10) = v78;
              if (!v67) {
                goto LABEL_155;
              }
              int v36 = memcmp(v28, v67, v71);
              swift_release();
              goto LABEL_114;
            case 2uLL:
              uint64_t v29 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v30 = (char *)sub_1CA5FD408();
              if (!v30) {
                goto LABEL_37;
              }
              uint64_t v31 = sub_1CA5FD428();
              if (__OFSUB__(v29, v31)) {
                goto LABEL_124;
              }
              v30 += v29 - v31;
LABEL_37:
              sub_1CA5FD418();
              LODWORD(v10) = v78;
              if (!v78)
              {
                *(void *)long long __s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v30) {
                  goto LABEL_150;
                }
                int v36 = memcmp(v30, __s1, __n);
                goto LABEL_90;
              }
              if (v78 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_128;
                }
                swift_retain();
                os_log_type_t v32 = (char *)sub_1CA5FD408();
                if (v32)
                {
                  uint64_t v33 = sub_1CA5FD428();
                  if (__OFSUB__((int)a1, v33)) {
                    goto LABEL_139;
                  }
                  v32 += (int)a1 - v33;
                }
                uint64_t v34 = sub_1CA5FD418();
                size_t v35 = (a1 >> 32) - (int)a1;
                if (v34 < v74) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_143;
                }
                if (!v32) {
                  goto LABEL_144;
                }
                int v36 = memcmp(v30, v32, v35);
                a2 = v76;
                sub_1CA5B6EF4(a1, v76);
LABEL_90:
                swift_release();
LABEL_114:
                swift_release();
LABEL_115:
                sub_1CA5B6EF4(v14, v13);
                uint64_t v9 = a3 + 56;
                if (!v36) {
                  return 1;
                }
                break;
              }
              uint64_t v58 = *(void *)(a1 + 16);
              uint64_t v73 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v59 = (char *)sub_1CA5FD408();
              if (v59)
              {
                uint64_t v60 = sub_1CA5FD428();
                if (__OFSUB__(v58, v60)) {
                  goto LABEL_138;
                }
                v59 += v58 - v60;
              }
              BOOL v21 = __OFSUB__(v73, v58);
              int64_t v61 = v73 - v58;
              if (v21) {
                goto LABEL_133;
              }
              uint64_t v62 = sub_1CA5FD418();
              if (v62 >= v61) {
                size_t v63 = v61;
              }
              else {
                size_t v63 = v62;
              }
              if (!v30) {
                goto LABEL_151;
              }
              LODWORD(v10) = v78;
              if (!v59) {
                goto LABEL_152;
              }
              int v64 = memcmp(v30, v59, v63);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1CA5B6EF4(v14, v13);
              a2 = v76;
              uint64_t v9 = a3 + 56;
              if (!v64) {
                return 1;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)long long __s1 = 0;
              if (!v10) {
                goto LABEL_58;
              }
              if (v10 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_127;
                }
                sub_1CA5B6FE8(a1, a2);
                uint64_t v37 = sub_1CA5FD408();
                if (!v37) {
                  goto LABEL_145;
                }
                uint64_t v23 = v37;
                uint64_t v38 = sub_1CA5FD428();
                unint64_t v10 = (int)a1 - v38;
                if (__OFSUB__((int)a1, v38)) {
                  goto LABEL_132;
                }
LABEL_53:
                uint64_t v39 = sub_1CA5FD418();
                if (v39 >= v74) {
                  size_t v40 = (a1 >> 32) - (int)a1;
                }
                else {
                  size_t v40 = v39;
                }
                int v41 = memcmp(__s1, (const void *)(v23 + v10), v40);
                sub_1CA5B6EF4(a1, a2);
                sub_1CA5B6EF4(v14, v13);
                LODWORD(v10) = v78;
                if (!v41) {
                  return 1;
                }
              }
              else
              {
                uint64_t v54 = *(void *)(a1 + 16);
                uint64_t v53 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v49 = (char *)sub_1CA5FD408();
                if (v49)
                {
                  uint64_t v55 = sub_1CA5FD428();
                  if (__OFSUB__(v54, v55)) {
                    goto LABEL_137;
                  }
                  v49 += v54 - v55;
                }
                BOOL v21 = __OFSUB__(v53, v54);
                int64_t v51 = v53 - v54;
                if (v21) {
                  goto LABEL_130;
                }
                uint64_t v52 = sub_1CA5FD418();
                a2 = v76;
                if (!v49) {
                  goto LABEL_149;
                }
LABEL_83:
                if (v52 >= v51) {
                  size_t v56 = v51;
                }
                else {
                  size_t v56 = v52;
                }
                int v57 = memcmp(__s1, v49, v56);
                swift_release();
                swift_release();
                sub_1CA5B6EF4(v14, v13);
                LODWORD(v10) = v78;
                if (!v57) {
                  return 1;
                }
              }
              break;
            default:
              *(void *)long long __s1 = v14;
              *(_WORD *)&__s1[8] = v13;
              __s1[10] = BYTE2(v13);
              __s1[11] = BYTE3(v13);
              __s1[12] = BYTE4(v13);
              __s1[13] = BYTE5(v13);
              if (!v10)
              {
LABEL_58:
                uint64_t __s2 = a1;
                __int16 v83 = a2;
                char v84 = BYTE2(a2);
                char v85 = BYTE3(a2);
                char v86 = BYTE4(a2);
                char v87 = BYTE5(a2);
                int v42 = memcmp(__s1, &__s2, __n);
                sub_1CA5B6EF4(v14, v13);
                if (!v42) {
                  return 1;
                }
                break;
              }
              if (v10 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_126;
                }
                sub_1CA5B6FE8(a1, a2);
                uint64_t v22 = sub_1CA5FD408();
                if (!v22)
                {
                  sub_1CA5FD418();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  sub_1CA5FD418();
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x1CA5D07C0);
                }
                uint64_t v23 = v22;
                uint64_t v24 = sub_1CA5FD428();
                unint64_t v10 = (int)a1 - v24;
                if (__OFSUB__((int)a1, v24)) {
                  goto LABEL_131;
                }
                goto LABEL_53;
              }
              uint64_t v47 = *(void *)(a1 + 16);
              uint64_t v48 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v49 = (char *)sub_1CA5FD408();
              if (v49)
              {
                uint64_t v50 = sub_1CA5FD428();
                if (__OFSUB__(v47, v50)) {
                  goto LABEL_136;
                }
                v49 += v47 - v50;
              }
              BOOL v21 = __OFSUB__(v48, v47);
              int64_t v51 = v48 - v47;
              if (v21) {
                goto LABEL_129;
              }
              uint64_t v52 = sub_1CA5FD418();
              a2 = v76;
              if (!v49) {
                goto LABEL_148;
              }
              goto LABEL_83;
          }
LABEL_9:
          unint64_t v8 = (v8 + 1) & v79;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_118:
        sub_1CA5B6EF4(v14, v13);
        return 1;
    }
  }
}

BOOL sub_1CA5D07F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((sub_1CA5B6C5C(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a5 + 32), *(void *)(a5 + 40)) & 1) == 0)
  {
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v37 = a3;
    if (v16)
    {
      uint64_t v35 = a4;
      uint64_t v36 = a8;
      swift_bridgeObjectRetain();
      uint64_t v17 = (unint64_t *)(a2 + 40);
      while (1)
      {
        uint64_t v19 = *(v17 - 1);
        unint64_t v18 = *v17;
        sub_1CA5B6FE8(v19, *v17);
        swift_bridgeObjectRetain();
        char v20 = sub_1CA5CC4FC(v19, v18, a6);
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v19, v18);
        if (v20) {
          goto LABEL_29;
        }
        v17 += 2;
        if (!--v16)
        {
          swift_bridgeObjectRelease();
          a4 = v35;
          a8 = v36;
          a3 = v37;
          break;
        }
      }
    }
    uint64_t v21 = *(void *)(a3 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = (unint64_t *)(a3 + 40);
      while (1)
      {
        uint64_t v24 = *(v22 - 1);
        unint64_t v23 = *v22;
        sub_1CA5B6FE8(v24, *v22);
        swift_bridgeObjectRetain();
        char v25 = sub_1CA5CC4FC(v24, v23, a7);
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v24, v23);
        if (v25) {
          break;
        }
        v22 += 2;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
LABEL_29:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
LABEL_12:
  if (*(void *)(a1 + 16) != *(void *)(a5 + 16) || *(void *)(a1 + 24) != *(void *)(a5 + 24))
  {
    char v27 = sub_1CA5FDCB8();
    char v28 = 0;
    if ((v27 & 1) == 0)
    {
LABEL_19:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_23;
      }
LABEL_22:
      if (!((*(void *)(a8 + 16) == 0) | v28 & 1)) {
        return 1;
      }
      goto LABEL_23;
    }
  }
  if (*(unsigned char *)(a1 + 163))
  {
    char v28 = 0;
    goto LABEL_19;
  }
  char v28 = *(unsigned char *)(a5 + 163) ^ 1;
  if (*(void *)(a4 + 16)) {
    goto LABEL_22;
  }
LABEL_23:
  unint64_t v29 = *(void *)(a1 + 72);
  if (v29 >> 60 == 15) {
    return 0;
  }
  uint64_t v30 = *(void *)(a1 + 64);
  uint64_t v32 = *(void *)(a5 + 64);
  unint64_t v31 = *(void *)(a5 + 72);
  if (v31 >> 60 == 15)
  {
    sub_1CA5B6FE8(v30, v29);
    sub_1CA5B736C(v30, v29);
    sub_1CA5B736C(v32, v31);
    return 0;
  }
  sub_1CA5B8510(v30, v29);
  sub_1CA5B8510(v32, v31);
  char v33 = sub_1CA5B6C5C(v30, v29, v32, v31);
  sub_1CA5B736C(v32, v31);
  sub_1CA5B736C(v30, v29);
  return (v33 & 1) != 0;
}

uint64_t sub_1CA5D0A5C(unint64_t a1)
{
  v92[1] = *MEMORY[0x1E4F143B8];
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild) == 1)
  {
    unint64_t v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults);
    unint64_t v4 = v1;
    uint64_t v5 = (void *)sub_1CA5FD898();
    LODWORD(v3) = [v3 sel_BOOLForKey_:v5];

    int64_t v1 = v4;
    if (v3)
    {
      uint64_t v6 = sub_1CA5FD628();
      os_log_type_t v7 = sub_1CA5FDA08();
      if (os_log_type_enabled(v6, v7))
      {
        unint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v8 = 0;
        _os_log_impl(&dword_1CA552000, v6, v7, "Forcing slow mode due to debug pref", v8, 2u);
        MEMORY[0x1CB799300](v8, -1, -1);
      }

      return 0;
    }
  }
  if (a1 >> 62)
  {
LABEL_140:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    if (v10 < 0)
    {
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)v10 <= 1) {
    return 1;
  }
  uint64_t v78 = (uint64_t)v1;
  uint64_t v11 = 0;
  unint64_t v88 = a1 & 0xC000000000000001;
  uint64_t v81 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v82 = a1 + 32;
  uint64_t v12 = 1;
  uint64_t v79 = v10;
  unint64_t v80 = a1;
LABEL_14:
  unint64_t v13 = v11;
  uint64_t v83 = v12;
  uint64_t v84 = v11;
  while (1)
  {
    if (v12 >= v10) {
      goto LABEL_130;
    }
    if (v88)
    {
      uint64_t v14 = MEMORY[0x1CB798560](v13, a1);
    }
    else
    {
      if (v13 >= *(void *)(v81 + 16)) {
        goto LABEL_137;
      }
      uint64_t v14 = *(void *)(v82 + 8 * v13);
      swift_retain();
    }
    unint64_t v15 = *(void *)(v14 + 80);
    int64_t v1 = *(void **)(v14 + 88);
    sub_1CA5EAF08(v15);
    swift_release();
    uint64_t v87 = v12;
    if (v88)
    {
      uint64_t v16 = MEMORY[0x1CB798560](v12, a1);
    }
    else
    {
      if ((unint64_t)v12 >= *(void *)(v81 + 16)) {
        goto LABEL_138;
      }
      uint64_t v16 = *(void *)(v82 + 8 * v12);
      swift_retain();
    }
    unint64_t v17 = *(void *)(v16 + 80);
    sub_1CA5EAF08(v17);
    swift_release();
    if (!v15) {
      goto LABEL_30;
    }
    if (v15 == 1) {
      break;
    }
    if (v15 != 2)
    {
      if (v17 && v17 != 2)
      {
        if (v17 == 1)
        {
          sub_1CA5EAF58(v15);
          return 0;
        }
        if (v88)
        {
          uint64_t v28 = MEMORY[0x1CB798560](v84, a1);
          uint64_t v29 = MEMORY[0x1CB798560](v12, a1);
        }
        else
        {
          uint64_t v28 = *(void *)(v82 + 8 * v84);
          uint64_t v29 = *(void *)(v82 + 8 * v12);
          swift_retain();
          swift_retain();
        }
        BOOL v34 = sub_1CA5D1764(v28, v29, v78);
        swift_release();
        sub_1CA5EAF58(v17);
        sub_1CA5EAF58(v15);
        swift_release();
        uint64_t v10 = v79;
        a1 = v80;
        if (!v34) {
          return 0;
        }
        goto LABEL_17;
      }
      sub_1CA5EAF58(v15);
      goto LABEL_16;
    }
LABEL_30:
    if (v17 == 1)
    {
      if (v88)
      {
        uint64_t v18 = MEMORY[0x1CB798560](v12, a1);
        uint64_t v20 = *(void *)(v18 + 112);
        unint64_t v19 = *(void *)(v18 + 120);
        unint64_t v21 = v19 >> 62;
        unint64_t v85 = v19;
        sub_1CA5B6FE8(v20, v19);
        swift_unknownObjectRelease();
        uint64_t v22 = MEMORY[0x1E4FBC860];
        switch(v21)
        {
          case 1uLL:
            goto LABEL_51;
          case 2uLL:
            goto LABEL_54;
          case 3uLL:
            goto LABEL_81;
          default:
            goto LABEL_44;
        }
      }
      uint64_t v30 = *(void *)(v82 + 8 * v12);
      uint64_t v20 = *(void *)(v30 + 112);
      unint64_t v85 = *(void *)(v30 + 120);
      uint64_t v22 = MEMORY[0x1E4FBC860];
      switch(v85 >> 62)
      {
        case 1uLL:
          sub_1CA5B6FE8(v20, v85);
LABEL_51:
          if (__OFSUB__(HIDWORD(v20), v20)) {
            goto LABEL_142;
          }
          uint64_t v31 = HIDWORD(v20) - (int)v20;
LABEL_55:
          if (v31)
          {
            v92[0] = MEMORY[0x1E4FBC860];
            int64_t v37 = v31 & ~(v31 >> 63);
            int64_t v1 = v92;
            sub_1CA5DE698(0, v37, 0);
            uint64_t v22 = v92[0];
            unint64_t v38 = v85 >> 62;
            uint64_t v39 = 0;
            switch(v85 >> 62)
            {
              case 1uLL:
                uint64_t v39 = (int)v20;
                goto LABEL_61;
              case 2uLL:
                uint64_t v39 = *(void *)(v20 + 16);
                goto LABEL_61;
              case 3uLL:
LABEL_61:
                if ((v31 & 0x8000000000000000) == 0) {
                  goto LABEL_62;
                }
                goto LABEL_139;
              default:
                if (v31 < 0) {
                  goto LABEL_147;
                }
                uint64_t v39 = 0;
LABEL_62:
                int64_t v1 = (void *)(v85 & 0x3FFFFFFFFFFFFFFFLL);
                while (2)
                {
                  if (v37)
                  {
                    switch((int)v38)
                    {
                      case 0:
                        if (v39 >= BYTE6(v85)) {
                          goto LABEL_124;
                        }
                        uint64_t v89 = v20;
                        int v90 = v85;
                        __int16 v91 = WORD2(v85);
                        char v40 = *((unsigned char *)&v89 + v39);
                        goto LABEL_78;
                      case 1:
                        if (v39 < (int)v20 || v39 >= v20 >> 32) {
                          goto LABEL_125;
                        }
                        uint64_t v41 = sub_1CA5FD408();
                        if (!v41) {
                          goto LABEL_150;
                        }
                        uint64_t v42 = v41;
                        uint64_t v43 = sub_1CA5FD428();
                        uint64_t v44 = v39 - v43;
                        if (!__OFSUB__(v39, v43)) {
                          goto LABEL_77;
                        }
                        goto LABEL_127;
                      case 2:
                        if (v39 < *(void *)(v20 + 16)) {
                          goto LABEL_126;
                        }
                        if (v39 >= *(void *)(v20 + 24)) {
                          goto LABEL_128;
                        }
                        uint64_t v45 = sub_1CA5FD408();
                        if (!v45) {
                          goto LABEL_151;
                        }
                        uint64_t v42 = v45;
                        uint64_t v46 = sub_1CA5FD428();
                        uint64_t v44 = v39 - v46;
                        if (__OFSUB__(v39, v46)) {
                          goto LABEL_129;
                        }
LABEL_77:
                        char v40 = *(unsigned char *)(v42 + v44);
LABEL_78:
                        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                        uint64_t v47 = swift_allocObject();
                        *(_OWORD *)(v47 + 16) = xmmword_1CA6021C0;
                        *(void *)(v47 + 56) = MEMORY[0x1E4FBC358];
                        *(void *)(v47 + 64) = MEMORY[0x1E4FBC3B0];
                        *(unsigned char *)(v47 + 32) = v40;
                        uint64_t v48 = sub_1CA5FD8B8();
                        uint64_t v50 = v49;
                        v92[0] = v22;
                        unint64_t v52 = *(void *)(v22 + 16);
                        unint64_t v51 = *(void *)(v22 + 24);
                        a1 = v52 + 1;
                        if (v52 >= v51 >> 1)
                        {
                          sub_1CA5DE698(v51 > 1, v52 + 1, 1);
                          uint64_t v22 = v92[0];
                        }
                        *(void *)(v22 + 16) = a1;
                        unint64_t v53 = v22 + 16 * v52;
                        *(void *)(v53 + 32) = v48;
                        *(void *)(v53 + 40) = v50;
                        ++v39;
                        --v37;
                        --v31;
                        int64_t v1 = (void *)(v85 & 0x3FFFFFFFFFFFFFFFLL);
                        LODWORD(v38) = v85 >> 62;
                        if (!v31) {
                          goto LABEL_81;
                        }
                        continue;
                      case 3:
                        goto LABEL_149;
                      default:
                        goto LABEL_155;
                    }
                  }
                  break;
                }
                __break(1u);
                break;
            }
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
LABEL_81:
          uint64_t v89 = v22;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v54 = sub_1CA5FD888();
          int64_t v1 = v55;
          swift_bridgeObjectRelease();
          sub_1CA5B6EF4(v20, v85);
          if (v54 == 0xD000000000000018 && v1 == (void *)0x80000001CA60CA20)
          {
LABEL_117:
            swift_bridgeObjectRelease();
            uint64_t v10 = v79;
            a1 = v80;
          }
          else
          {
LABEL_118:
            char v77 = sub_1CA5FDCB8();
            swift_bridgeObjectRelease();
            uint64_t v10 = v79;
            a1 = v80;
            if ((v77 & 1) == 0) {
              return 0;
            }
          }
          break;
        case 2uLL:
          sub_1CA5B6FE8(v20, v85);
LABEL_54:
          uint64_t v36 = *(void *)(v20 + 16);
          uint64_t v35 = *(void *)(v20 + 24);
          uint64_t v31 = v35 - v36;
          if (!__OFSUB__(v35, v36)) {
            goto LABEL_55;
          }
          goto LABEL_143;
        case 3uLL:
          goto LABEL_81;
        default:
LABEL_44:
          uint64_t v31 = BYTE6(v85);
          goto LABEL_55;
      }
      goto LABEL_17;
    }
LABEL_16:
    sub_1CA5EAF58(v17);
LABEL_17:
    uint64_t v12 = v87 + 1;
    uint64_t v11 = v83;
    unint64_t v13 = v84;
    if (v87 + 1 == v10)
    {
      uint64_t v12 = v83 + 1;
      uint64_t result = 1;
      if (v83 + 1 == v10) {
        return result;
      }
      goto LABEL_14;
    }
  }
  switch(v17)
  {
    case 0uLL:
      goto LABEL_36;
    case 1uLL:
      goto LABEL_17;
    case 2uLL:
LABEL_36:
      if (v88)
      {
        uint64_t v23 = MEMORY[0x1CB798560](v84, a1);
        uint64_t v25 = *(void *)(v23 + 112);
        unint64_t v24 = *(void *)(v23 + 120);
        unint64_t v26 = v24 >> 62;
        unint64_t v86 = v24;
        sub_1CA5B6FE8(v25, v24);
        swift_unknownObjectRelease();
        uint64_t v27 = MEMORY[0x1E4FBC860];
        switch(v26)
        {
          case 1uLL:
            goto LABEL_85;
          case 2uLL:
            goto LABEL_88;
          case 3uLL:
            goto LABEL_115;
          default:
            goto LABEL_46;
        }
      }
      uint64_t v32 = *(void *)(v82 + 8 * v84);
      uint64_t v25 = *(void *)(v32 + 112);
      unint64_t v86 = *(void *)(v32 + 120);
      uint64_t v27 = MEMORY[0x1E4FBC860];
      switch(v86 >> 62)
      {
        case 1uLL:
          sub_1CA5B6FE8(v25, v86);
LABEL_85:
          if (__OFSUB__(HIDWORD(v25), v25)) {
            goto LABEL_145;
          }
          uint64_t v33 = HIDWORD(v25) - (int)v25;
LABEL_89:
          if (v33)
          {
            v92[0] = MEMORY[0x1E4FBC860];
            int64_t v58 = v33 & ~(v33 >> 63);
            sub_1CA5DE698(0, v58, 0);
            uint64_t v27 = v92[0];
            unint64_t v59 = v86 >> 62;
            uint64_t v60 = 0;
            switch(v86 >> 62)
            {
              case 1uLL:
                uint64_t v60 = (int)v25;
                goto LABEL_95;
              case 2uLL:
                uint64_t v60 = *(void *)(v25 + 16);
                goto LABEL_95;
              case 3uLL:
LABEL_95:
                if ((v33 & 0x8000000000000000) == 0) {
                  goto LABEL_96;
                }
                goto LABEL_144;
              default:
                if (v33 < 0) {
                  goto LABEL_148;
                }
                uint64_t v60 = 0;
LABEL_96:
                int64_t v1 = (void *)(v86 & 0x3FFFFFFFFFFFFFFFLL);
                while (2)
                {
                  if (v58)
                  {
                    switch((int)v59)
                    {
                      case 0:
                        if (v60 >= BYTE6(v86)) {
                          goto LABEL_131;
                        }
                        uint64_t v89 = v25;
                        int v90 = v86;
                        __int16 v91 = WORD2(v86);
                        char v61 = *((unsigned char *)&v89 + v60);
                        goto LABEL_112;
                      case 1:
                        if (v60 < (int)v25 || v60 >= v25 >> 32) {
                          goto LABEL_132;
                        }
                        uint64_t v62 = sub_1CA5FD408();
                        if (!v62) {
                          goto LABEL_153;
                        }
                        uint64_t v63 = v62;
                        uint64_t v64 = sub_1CA5FD428();
                        uint64_t v65 = v60 - v64;
                        if (!__OFSUB__(v60, v64)) {
                          goto LABEL_111;
                        }
                        goto LABEL_134;
                      case 2:
                        if (v60 < *(void *)(v25 + 16)) {
                          goto LABEL_133;
                        }
                        if (v60 >= *(void *)(v25 + 24)) {
                          goto LABEL_135;
                        }
                        uint64_t v66 = sub_1CA5FD408();
                        if (!v66) {
                          goto LABEL_154;
                        }
                        uint64_t v63 = v66;
                        uint64_t v67 = sub_1CA5FD428();
                        uint64_t v65 = v60 - v67;
                        if (__OFSUB__(v60, v67)) {
                          goto LABEL_136;
                        }
LABEL_111:
                        char v61 = *(unsigned char *)(v63 + v65);
LABEL_112:
                        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                        uint64_t v68 = swift_allocObject();
                        *(_OWORD *)(v68 + 16) = xmmword_1CA6021C0;
                        *(void *)(v68 + 56) = MEMORY[0x1E4FBC358];
                        *(void *)(v68 + 64) = MEMORY[0x1E4FBC3B0];
                        *(unsigned char *)(v68 + 32) = v61;
                        uint64_t v69 = sub_1CA5FD8B8();
                        uint64_t v71 = v70;
                        v92[0] = v27;
                        unint64_t v73 = *(void *)(v27 + 16);
                        unint64_t v72 = *(void *)(v27 + 24);
                        a1 = v73 + 1;
                        if (v73 >= v72 >> 1)
                        {
                          sub_1CA5DE698(v72 > 1, v73 + 1, 1);
                          uint64_t v27 = v92[0];
                        }
                        *(void *)(v27 + 16) = a1;
                        unint64_t v74 = v27 + 16 * v73;
                        *(void *)(v74 + 32) = v69;
                        *(void *)(v74 + 40) = v71;
                        ++v60;
                        --v58;
                        --v33;
                        int64_t v1 = (void *)(v86 & 0x3FFFFFFFFFFFFFFFLL);
                        LODWORD(v59) = v86 >> 62;
                        if (!v33) {
                          goto LABEL_115;
                        }
                        continue;
                      case 3:
                        goto LABEL_152;
                      default:
LABEL_155:
                        JUMPOUT(0);
                    }
                  }
                  return result;
                }
            }
            goto LABEL_123;
          }
LABEL_115:
          uint64_t v89 = v27;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v75 = sub_1CA5FD888();
          int64_t v1 = v76;
          swift_bridgeObjectRelease();
          sub_1CA5B6EF4(v25, v86);
          if (v75 == 0xD000000000000018 && v1 == (void *)0x80000001CA60CA20) {
            goto LABEL_117;
          }
          goto LABEL_118;
        case 2uLL:
          sub_1CA5B6FE8(v25, v86);
LABEL_88:
          uint64_t v57 = *(void *)(v25 + 16);
          uint64_t v56 = *(void *)(v25 + 24);
          uint64_t v33 = v56 - v57;
          if (!__OFSUB__(v56, v57)) {
            goto LABEL_89;
          }
          goto LABEL_146;
        case 3uLL:
          goto LABEL_115;
        default:
LABEL_46:
          uint64_t v33 = BYTE6(v86);
          goto LABEL_89;
      }
  }
  sub_1CA5EAF58(v17);
  return 0;
}

BOOL sub_1CA5D1764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_modulesRequiringSlowPath);
  uint64_t v6 = *(void *)(a1 + 112);
  unint64_t v5 = *(void *)(a1 + 120);
  swift_bridgeObjectRetain();
  sub_1CA5B6FE8(v6, v5);
  char v7 = sub_1CA5CC4FC(v6, v5, v4);
  sub_1CA5B6EF4(v6, v5);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 112);
    unint64_t v9 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    sub_1CA5B6FE8(v8, v9);
    char v10 = sub_1CA5CC4FC(v8, v9, v4);
    sub_1CA5B6EF4(v8, v9);
    swift_bridgeObjectRelease();
    if (v10) {
      return 0;
    }
  }
  uint64_t v11 = self;
  sub_1CA5C4448(v6, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_1CA5FD898();
  swift_bridgeObjectRelease();
  unsigned int v13 = [v11 sel_isEMV:v12];

  if (v13)
  {
    sub_1CA5C4448(*(void *)(a2 + 112), *(void *)(a2 + 120));
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_1CA5FD898();
    swift_bridgeObjectRelease();
    unsigned __int8 v15 = [v11 sel_isEMV_:v14];

    if (v15) {
      return 0;
    }
  }
  sub_1CA5C4448(v6, v5);
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1CA5FD898();
  swift_bridgeObjectRelease();
  unint64_t v17 = &selRef_getTransactionsFromRecord_withCityCode_withServerRefreshRequired_withStateDict_withError_;
  unsigned int v18 = [v11 sel_isEMV_:v16];

  if (v18)
  {
    unint64_t v38 = v11;
    uint64_t v19 = *(void *)(a2 + 112);
    unint64_t v20 = *(void *)(a2 + 120);
    uint64_t v21 = sub_1CA5FD8A8();
    unint64_t v23 = v22;
    sub_1CA5B6FE8(v19, v20);
    uint64_t v24 = sub_1CA5C5230(v21, v23);
    unint64_t v26 = v25;
    if (v25 >> 60 == 15)
    {
      sub_1CA5B736C(v19, v20);
      sub_1CA5B736C(v24, v26);
      uint64_t v11 = v38;
      unint64_t v17 = &selRef_getTransactionsFromRecord_withCityCode_withServerRefreshRequired_withStateDict_withError_;
    }
    else
    {
      sub_1CA5B6FE8(v19, v20);
      char v37 = sub_1CA5B6C5C(v19, v20, v24, v26);
      sub_1CA5B736C(v24, v26);
      sub_1CA5B6EF4(v19, v20);
      sub_1CA5B6EF4(v19, v20);
      uint64_t v11 = v38;
      unint64_t v17 = &selRef_getTransactionsFromRecord_withCityCode_withServerRefreshRequired_withStateDict_withError_;
      if (v37) {
        return 0;
      }
    }
  }
  sub_1CA5C4448(*(void *)(a2 + 112), *(void *)(a2 + 120));
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)sub_1CA5FD898();
  swift_bridgeObjectRelease();
  unsigned int v28 = [v11 v17[46] v27];

  if (v28)
  {
    uint64_t v29 = sub_1CA5FD8A8();
    unint64_t v31 = v30;
    sub_1CA5B6FE8(v6, v5);
    uint64_t v32 = sub_1CA5C5230(v29, v31);
    unint64_t v34 = v33;
    if (v33 >> 60 == 15)
    {
      sub_1CA5B736C(v6, v5);
      sub_1CA5B736C(v32, v34);
      return 1;
    }
    sub_1CA5B6FE8(v6, v5);
    char v35 = sub_1CA5B6C5C(v6, v5, v32, v34);
    sub_1CA5B736C(v32, v34);
    sub_1CA5B6EF4(v6, v5);
    sub_1CA5B6EF4(v6, v5);
    return (v35 & 1) == 0;
  }
  return 1;
}

void sub_1CA5D1BDC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, unsigned char *a6, char a7, char a8)
{
  char v10 = v8;
  *(void *)v357 = a4;
  uint64_t v11 = a1;
  uint64_t v366 = *MEMORY[0x1E4F143B8];
  unint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    char v15 = sub_1CA5B8B28(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      uint64_t v16 = 0xD000000000000023;
      unint64_t v17 = "Trying to set incompatible applets?";
LABEL_180:
      sub_1CA5BBD9C(v16, (unint64_t)(v17 - 32) | 0x8000000000000000, 8, 0);
      swift_willThrow();
      return;
    }
    if (v12 != 1)
    {
      uint64_t v9 = v13 + 72;
      uint64_t v11 = 1;
      do
      {
        uint64_t v18 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_332;
        }
        swift_bridgeObjectRetain();
        uint64_t v19 = swift_bridgeObjectRetain();
        char v20 = sub_1CA5B8B28(v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_3;
        }
        v9 += 24;
        ++v11;
      }
      while (v18 != v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = a1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1CA5CB540(v11);
  if (v18)
  {
    unint64_t v12 = v11 & 0xC000000000000001;
    uint64_t v21 = 4;
    while (2)
    {
      uint64_t v23 = v21 - 4;
      if (v12)
      {
        unint64_t v13 = MEMORY[0x1CB798560](v21 - 4, v11);
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v21 - 3;
        if (v24) {
          goto LABEL_329;
        }
      }
      else
      {
        unint64_t v13 = *(void *)(v11 + 8 * v21);
        swift_retain();
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v21 - 3;
        if (v24)
        {
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
LABEL_337:
          __break(1u);
LABEL_338:
          __break(1u);
LABEL_339:
          __break(1u);
LABEL_340:
          __break(1u);
LABEL_341:
          __break(1u);
LABEL_342:
          __break(1u);
LABEL_343:
          __break(1u);
LABEL_344:
          __break(1u);
          goto LABEL_345;
        }
      }
      uint64_t v9 = *(void *)(v13 + 112);
      unint64_t v26 = *(void *)(v13 + 120);
      switch(v26 >> 62)
      {
        case 1uLL:
          swift_release();
          uint64_t v27 = (int)v9;
          v9 >>= 32;
          if (v27 == v9) {
            goto LABEL_23;
          }
          goto LABEL_13;
        case 2uLL:
          uint64_t v22 = *(void *)(v9 + 16);
          uint64_t v9 = *(void *)(v9 + 24);
          swift_release();
          if (v22 != v9) {
            goto LABEL_13;
          }
          goto LABEL_23;
        case 3uLL:
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_179;
        default:
          swift_release();
          if ((v26 & 0xFF000000000000) == 0)
          {
LABEL_23:
            swift_bridgeObjectRelease_n();
LABEL_179:
            sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
            uint64_t v16 = 0xD00000000000003ELL;
            unint64_t v17 = "Cannot apply configuration with missing/empty moduleIdentifier";
            goto LABEL_180;
          }
LABEL_13:
          ++v21;
          if (v25 != v18) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          *(void *)&long long __s1 = MEMORY[0x1E4FBC860];
          if (v18 < 1) {
            goto LABEL_347;
          }
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v18; ++i)
          {
            if (v12)
            {
              uint64_t v30 = MEMORY[0x1CB798560](i, v11);
            }
            else
            {
              uint64_t v30 = *(void *)(v11 + 8 * i + 32);
              swift_retain();
            }
            if (*(unsigned char *)(v30 + 162) == 1)
            {
              sub_1CA5FDB88();
              sub_1CA5FDBB8();
              sub_1CA5FDBC8();
              sub_1CA5FDB98();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v28 = __s1;
          break;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();
    unint64_t v28 = MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = *(void *)v357;
  uint64_t v343 = v18;
  if (a5 >> 60 != 15)
  {
    uint64_t v364 = MEMORY[0x1E4FBC860];
    uint64_t v362 = MEMORY[0x1E4FBC860];
    sub_1CA5B6FE8(*(uint64_t *)v357, a5);
    uint64_t v354 = sub_1CA5CB540(v28);
    if (!v354)
    {
      swift_release();
      __int16 v91 = (unsigned char *)MEMORY[0x1E4FBC860];
LABEL_163:
      unint64_t v92 = swift_bridgeObjectRetain();
      uint64_t v93 = sub_1CA5CB540(v92);
      swift_bridgeObjectRelease();
      if ((v93 & 0x8000000000000000) == 0)
      {
        unint64_t v13 = v362;
        unint64_t v12 = *(void *)v357;
        if (v93)
        {
          unint64_t v94 = 0;
          do
          {
            if ((v364 & 0xC000000000000001) != 0)
            {
              uint64_t v11 = MEMORY[0x1CB798560](v94);
            }
            else
            {
              if (*(void *)((v364 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v94) {
                goto LABEL_331;
              }
              uint64_t v11 = *(void *)(v364 + 8 * v94 + 32);
              swift_retain();
            }
            ++v94;
            swift_retain();
            unint64_t v95 = swift_bridgeObjectRetain();
            uint64_t v9 = sub_1CA5EDB44(v95, v11);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1CA5B2044(v9);
            swift_release();
          }
          while (v93 != v94);
          __int16 v91 = (unsigned char *)v364;
        }
        swift_bridgeObjectRelease();
        sub_1CA5B736C(*(uint64_t *)v357, a5);
        goto LABEL_173;
      }
LABEL_345:
      __break(1u);
LABEL_346:
      __break(1u);
LABEL_347:
      __break(1u);
LABEL_348:
      __break(1u);
LABEL_349:
      __break(1u);
LABEL_350:
      __break(1u);
LABEL_351:
      __break(1u);
LABEL_352:
      __break(1u);
LABEL_353:
      __break(1u);
LABEL_354:
      __break(1u);
LABEL_355:
      __break(1u);
      goto LABEL_356;
    }
    unint64_t v353 = v28 & 0xC000000000000001;
    BOOL v34 = __OFSUB__(v357[1], v357[0]);
    BOOL v332 = v34;
    uint64_t v18 = BYTE6(a5);
    uint64_t v11 = a5 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v324 = *(uint64_t *)v357 >> 32;
    uint64_t v321 = a5 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v12 = 4;
    uint64_t v326 = a5 & 0x3FFFFFFFFFFFFFFFLL;
    uint64_t v328 = a5 >> 62;
    id v356 = (id)(a5 >> 62);
    unint64_t log = v28;
    while (1)
    {
      unint64_t v13 = v12 - 4;
      if (v353)
      {
        uint64_t v37 = MEMORY[0x1CB798560](v12 - 4, v28);
        unint64_t v38 = v12 - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_330;
        }
      }
      else
      {
        uint64_t v37 = *(void *)(v28 + 8 * v12);
        swift_retain();
        unint64_t v38 = v12 - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_330;
        }
      }
      unint64_t v13 = *(void *)(v37 + 32);
      uint64_t v11 = *(void *)(v37 + 40);
      uint64_t v9 = 0;
      switch((unint64_t)v11 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_333;
          }
          uint64_t v9 = HIDWORD(v13) - (int)v13;
LABEL_66:
          sub_1CA5B6FE8(*(void *)(v37 + 32), *(void *)(v37 + 40));
          break;
        case 2uLL:
          uint64_t v40 = *(void *)(v13 + 16);
          uint64_t v39 = *(void *)(v13 + 24);
          uint64_t v9 = v39 - v40;
          if (!__OFSUB__(v39, v40)) {
            goto LABEL_66;
          }
          goto LABEL_334;
        case 3uLL:
          break;
        default:
          uint64_t v9 = BYTE6(v11);
          break;
      }
      uint64_t v41 = v18;
      switch(a5 >> 62)
      {
        case 1uLL:
          uint64_t v41 = v357[1] - v357[0];
          if (v332) {
            goto LABEL_336;
          }
          goto LABEL_71;
        case 2uLL:
          uint64_t v43 = *(void *)(*(void *)v357 + 16);
          uint64_t v42 = *(void *)(*(void *)v357 + 24);
          BOOL v24 = __OFSUB__(v42, v43);
          uint64_t v41 = v42 - v43;
          if (!v24) {
            goto LABEL_71;
          }
          goto LABEL_335;
        case 3uLL:
          if (v9) {
            goto LABEL_79;
          }
          goto LABEL_53;
        default:
LABEL_71:
          if (v9 == v41)
          {
            if (v9 < 1)
            {
LABEL_53:
              sub_1CA5B6EF4(v13, v11);
              goto LABEL_54;
            }
            switch((unint64_t)v11 >> 62)
            {
              case 1uLL:
                uint64_t v9 = (int)v13;
                if ((int)v13 > (uint64_t)v13 >> 32) {
                  goto LABEL_341;
                }
                uint64_t v63 = sub_1CA5FD408();
                if (v63)
                {
                  uint64_t v18 = v63;
                  uint64_t v64 = sub_1CA5FD428();
                  if (__OFSUB__((int)v13, v64)) {
                    goto LABEL_349;
                  }
                  uint64_t v9 = v18 + (int)v13 - v64;
                }
                else
                {
                  uint64_t v9 = 0;
                }
                uint64_t v18 = BYTE6(a5);
                sub_1CA5FD418();
                if (!v328)
                {
                  unint64_t v74 = v315 & 0xFF00000000000000 | v321;
                  uint64_t v76 = *(void *)v357;
                  unint64_t v315 = v74;
                  p_s1 = (long long *)v9;
LABEL_137:
                  BOOL v79 = sub_1CA5EDE10(v76, v74, p_s1);
                  sub_1CA5B6EF4(v13, v11);
                  if (v79) {
                    goto LABEL_54;
                  }
                  goto LABEL_80;
                }
                osunint64_t log = (long long *)v9;
                if (v328 == 1)
                {
                  uint64_t v18 = *(uint64_t *)v357 >> 32;
                  if (v324 < v357[0]) {
                    goto LABEL_354;
                  }
                  uint64_t v9 = *(void *)v357;
                  sub_1CA5B8510(*(uint64_t *)v357, a5);
                  uint64_t v45 = v357[0];
                  uint64_t v46 = *(uint64_t *)v357 >> 32;
                  uint64_t v47 = a5 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v44 = oslog;
                  goto LABEL_126;
                }
                uint64_t v9 = *(void *)v357;
                uint64_t v81 = *(void *)(*(void *)v357 + 16);
                uint64_t v80 = *(void *)(*(void *)v357 + 24);
                swift_retain();
                uint64_t v18 = a5 & 0x3FFFFFFFFFFFFFFFLL;
                swift_retain();
                uint64_t v68 = v81;
                uint64_t v69 = v80;
                uint64_t v70 = a5 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v67 = oslog;
                goto LABEL_140;
              case 2uLL:
                uint64_t v9 = *(void *)(v13 + 16);
                swift_retain();
                swift_retain();
                uint64_t v56 = sub_1CA5FD408();
                if (v56)
                {
                  uint64_t v18 = v56;
                  uint64_t v57 = sub_1CA5FD428();
                  if (__OFSUB__(v9, v57)) {
                    goto LABEL_348;
                  }
                  int64_t v58 = (v18 + v9 - v57);
                }
                else
                {
                  int64_t v58 = 0;
                }
                sub_1CA5FD418();
                uint64_t v18 = BYTE6(a5);
                if (v328)
                {
                  osunint64_t log = (long long *)v58;
                  if (v328 == 1)
                  {
                    uint64_t v18 = v357[0];
                    uint64_t v9 = *(uint64_t *)v357 >> 32;
                    if (v324 < v357[0]) {
                      goto LABEL_353;
                    }
                    sub_1CA5B8510(*(uint64_t *)v357, a5);
                    char v71 = sub_1CA5EDEF4(v357[0], v324, v326, oslog);
                    if (v10) {
                      goto LABEL_371;
                    }
                    char v72 = v71;
                    char v10 = 0;
                    sub_1CA5B736C(*(uint64_t *)v357, a5);
                    swift_release();
                    swift_release();
                    sub_1CA5B6EF4(v13, v11);
                    uint64_t v18 = BYTE6(a5);
                    if (v72) {
                      goto LABEL_54;
                    }
                  }
                  else
                  {
                    uint64_t v9 = *(void *)v357;
                    uint64_t v78 = *(void *)(*(void *)v357 + 16);
                    uint64_t v316 = *(void *)(*(void *)v357 + 24);
                    swift_retain();
                    uint64_t v18 = a5 & 0x3FFFFFFFFFFFFFFFLL;
                    swift_retain();
                    LODWORD(oslog) = sub_1CA5EDEF4(v78, v316, v326, oslog);
                    if (v10) {
                      goto LABEL_374;
                    }
                    char v10 = 0;
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1CA5B6EF4(v13, v11);
                    uint64_t v18 = BYTE6(a5);
                    if (oslog) {
                      goto LABEL_54;
                    }
                  }
                }
                else
                {
                  unint64_t v317 = v317 & 0xFF00000000000000 | v321;
                  BOOL v77 = sub_1CA5EDE10(*(uint64_t *)v357, v317, v58);
                  swift_release();
                  swift_release();
                  sub_1CA5B6EF4(v13, v11);
                  if (v77) {
                    goto LABEL_54;
                  }
                }
                goto LABEL_80;
              case 3uLL:
                *(void *)((char *)&__s1 + 6) = 0;
                *(void *)&long long __s1 = 0;
                if (!v328)
                {
                  unint64_t v74 = v318 & 0xFF00000000000000 | v321;
                  p_s1 = &__s1;
                  uint64_t v76 = *(void *)v357;
                  unint64_t v318 = v74;
                  goto LABEL_137;
                }
                if (v328 != 1) {
                  goto LABEL_113;
                }
                if (v324 < v357[0]) {
                  goto LABEL_351;
                }
                uint64_t v9 = *(void *)v357;
                uint64_t v18 = a5;
                sub_1CA5B8510(*(uint64_t *)v357, a5);
                char v59 = sub_1CA5EDEF4(v357[0], v324, v326, &__s1);
                if (v10) {
                  goto LABEL_370;
                }
                char v60 = v59;
                char v10 = 0;
                uint64_t v61 = *(void *)v357;
                unint64_t v62 = a5;
                goto LABEL_128;
              default:
                *(void *)&long long __s1 = v13;
                WORD4(__s1) = v11;
                BYTE10(__s1) = BYTE2(v11);
                BYTE11(__s1) = BYTE3(v11);
                BYTE12(__s1) = BYTE4(v11);
                BYTE13(__s1) = BYTE5(v11);
                if (!v328)
                {
                  unint64_t v74 = v319 & 0xFF00000000000000 | v321;
                  p_s1 = &__s1;
                  uint64_t v76 = *(void *)v357;
                  unint64_t v319 = v74;
                  goto LABEL_137;
                }
                if (v328 == 1)
                {
                  uint64_t v18 = *(uint64_t *)v357 >> 32;
                  if (v324 < v357[0]) {
                    goto LABEL_352;
                  }
                  uint64_t v9 = *(void *)v357;
                  sub_1CA5B8510(*(uint64_t *)v357, a5);
                  uint64_t v44 = &__s1;
                  uint64_t v45 = v357[0];
                  uint64_t v46 = *(uint64_t *)v357 >> 32;
                  uint64_t v47 = a5 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_126:
                  char v73 = sub_1CA5EDEF4(v45, v46, v47, v44);
                  if (v10)
                  {
                    uint64_t v307 = v9;
                    goto LABEL_373;
                  }
                  char v60 = v73;
                  char v10 = 0;
                  uint64_t v61 = v9;
                  unint64_t v62 = a5;
LABEL_128:
                  sub_1CA5B736C(v61, v62);
                }
                else
                {
LABEL_113:
                  uint64_t v9 = *(void *)v357;
                  uint64_t v66 = *(void *)(*(void *)v357 + 16);
                  uint64_t v65 = *(void *)(*(void *)v357 + 24);
                  swift_retain();
                  uint64_t v18 = a5 & 0x3FFFFFFFFFFFFFFFLL;
                  swift_retain();
                  uint64_t v67 = &__s1;
                  uint64_t v68 = v66;
                  uint64_t v69 = v65;
                  uint64_t v70 = a5 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_140:
                  char v82 = sub_1CA5EDEF4(v68, v69, v70, v67);
                  if (v10) {
                    goto LABEL_374;
                  }
                  char v60 = v82;
                  char v10 = 0;
                  swift_release();
                  swift_release();
                }
                sub_1CA5B6EF4(v13, v11);
                uint64_t v18 = BYTE6(a5);
                if (v60) {
                  goto LABEL_54;
                }
                goto LABEL_80;
            }
          }
LABEL_79:
          sub_1CA5B6EF4(v13, v11);
LABEL_80:
          uint64_t v11 = *(void *)(v37 + 128);
          unint64_t v13 = *(void *)(v37 + 136);
          if (v13 >> 60 == 15)
          {
            sub_1CA5B8510(*(uint64_t *)v357, a5);
            sub_1CA5B736C(v11, v13);
            uint64_t v48 = *(void *)v357;
            unint64_t v49 = a5;
LABEL_98:
            sub_1CA5B736C(v48, v49);
LABEL_99:
            uint64_t v55 = swift_retain();
            unint64_t v13 = (unint64_t)&v362;
            MEMORY[0x1CB798340](v55);
            uint64_t v9 = *(void *)((v362 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_1CA5DD97C(v9);
            goto LABEL_55;
          }
          uint64_t v9 = 0;
          switch(v13 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v11), v11)) {
                goto LABEL_338;
              }
              uint64_t v9 = HIDWORD(v11) - (int)v11;
LABEL_87:
              sub_1CA5B6FE8(*(void *)(v37 + 128), *(void *)(v37 + 136));
              sub_1CA5B6FE8(v11, v13);
              break;
            case 2uLL:
              uint64_t v51 = *(void *)(v11 + 16);
              uint64_t v50 = *(void *)(v11 + 24);
              uint64_t v9 = v50 - v51;
              if (!__OFSUB__(v50, v51)) {
                goto LABEL_87;
              }
              goto LABEL_337;
            case 3uLL:
              break;
            default:
              uint64_t v9 = BYTE6(v13);
              break;
          }
          uint64_t v52 = v18;
          switch(a5 >> 62)
          {
            case 1uLL:
              uint64_t v52 = v357[1] - v357[0];
              if (v332) {
                goto LABEL_340;
              }
              goto LABEL_92;
            case 2uLL:
              uint64_t v54 = *(void *)(*(void *)v357 + 16);
              uint64_t v53 = *(void *)(*(void *)v357 + 24);
              BOOL v24 = __OFSUB__(v53, v54);
              uint64_t v52 = v53 - v54;
              if (!v24) {
                goto LABEL_92;
              }
              goto LABEL_339;
            case 3uLL:
              if (v9) {
                goto LABEL_97;
              }
              goto LABEL_100;
            default:
LABEL_92:
              if (v9 != v52)
              {
LABEL_97:
                sub_1CA5B736C(v11, v13);
                uint64_t v48 = v11;
                unint64_t v49 = v13;
                goto LABEL_98;
              }
              if (v9 < 1)
              {
LABEL_100:
                sub_1CA5B736C(v11, v13);
                sub_1CA5B736C(v11, v13);
              }
              else
              {
                switch(v13 >> 62)
                {
                  case 1uLL:
                    uint64_t v9 = (int)v11;
                    if ((int)v11 > v11 >> 32) {
                      goto LABEL_355;
                    }
                    sub_1CA5B8510(*(uint64_t *)v357, a5);
                    unint64_t v88 = (char *)sub_1CA5FD408();
                    if (!v88) {
                      goto LABEL_154;
                    }
                    uint64_t v89 = sub_1CA5FD428();
                    if (__OFSUB__((int)v11, v89)) {
                      goto LABEL_358;
                    }
                    v88 += (int)v11 - v89;
LABEL_154:
                    sub_1CA5FD418();
                    char v90 = sub_1CA5EDF94(*(uint64_t *)v357, a5, v88);
                    sub_1CA5B736C(*(uint64_t *)v357, a5);
                    sub_1CA5B736C(v11, v13);
                    sub_1CA5B736C(v11, v13);
                    if ((v90 & 1) == 0) {
                      goto LABEL_158;
                    }
                    goto LABEL_149;
                  case 2uLL:
                    uint64_t v83 = *(void *)(v11 + 16);
                    sub_1CA5B8510(*(uint64_t *)v357, a5);
                    swift_retain();
                    swift_retain();
                    uint64_t v84 = sub_1CA5FD408();
                    if (v84)
                    {
                      uint64_t v85 = v84;
                      uint64_t v86 = sub_1CA5FD428();
                      if (__OFSUB__(v83, v86))
                      {
                        __break(1u);
LABEL_358:
                        __break(1u);
LABEL_359:
                        __break(1u);
LABEL_360:
                        __break(1u);
                        __break(1u);
LABEL_361:
                        __break(1u);
LABEL_362:
                        __break(1u);
LABEL_363:
                        __break(1u);
LABEL_364:
                        __break(1u);
LABEL_365:
                        __break(1u);
LABEL_366:
                        __break(1u);
LABEL_367:
                        __break(1u);
                      }
                      osunint64_t log = (long long *)(v85 + v83 - v86);
                    }
                    else
                    {
                      osunint64_t log = 0;
                    }
                    sub_1CA5FD418();
                    LODWORD(oslog) = sub_1CA5EDF94(*(uint64_t *)v357, a5, oslog);
                    swift_release();
                    swift_release();
                    sub_1CA5B736C(*(uint64_t *)v357, a5);
                    sub_1CA5B736C(v11, v13);
                    sub_1CA5B736C(v11, v13);
                    if ((oslog & 1) == 0)
                    {
LABEL_158:
                      uint64_t v18 = BYTE6(a5);
                      goto LABEL_99;
                    }
LABEL_149:
                    uint64_t v18 = BYTE6(a5);
                    break;
                  case 3uLL:
                    *(void *)((char *)&__s1 + 6) = 0;
                    *(void *)&long long __s1 = 0;
                    goto LABEL_148;
                  default:
                    *(void *)&long long __s1 = v11;
                    WORD4(__s1) = v13;
                    BYTE10(__s1) = BYTE2(v13);
                    BYTE11(__s1) = BYTE3(v13);
                    BYTE12(__s1) = BYTE4(v13);
                    BYTE13(__s1) = BYTE5(v13);
LABEL_148:
                    sub_1CA5B8510(*(uint64_t *)v357, a5);
                    char v87 = sub_1CA5EDF94(*(uint64_t *)v357, a5, &__s1);
                    sub_1CA5B736C(*(uint64_t *)v357, a5);
                    sub_1CA5B736C(v11, v13);
                    sub_1CA5B736C(v11, v13);
                    if (v87) {
                      goto LABEL_149;
                    }
                    goto LABEL_158;
                }
              }
              break;
          }
LABEL_54:
          uint64_t v35 = swift_retain();
          unint64_t v13 = (unint64_t)&v364;
          MEMORY[0x1CB798340](v35);
          uint64_t v9 = *(void *)((v364 & 0xFFFFFFFFFFFFFF8) + 0x10);
          sub_1CA5DD97C(v9);
LABEL_55:
          sub_1CA5FD998();
          sub_1CA5FD968();
          swift_release();
          ++v12;
          BOOL v36 = v38 == v354;
          unint64_t v28 = log;
          if (v36)
          {
            swift_release();
            __int16 v91 = (unsigned char *)v364;
            goto LABEL_163;
          }
          break;
      }
    }
  }
  *(void *)&long long __s1 = MEMORY[0x1E4FBC860];
  uint64_t v31 = sub_1CA5CB540(v28);
  if (!v31)
  {
    swift_release();
    __int16 v91 = (unsigned char *)MEMORY[0x1E4FBC860];
    goto LABEL_173;
  }
  unint64_t v13 = v31;
  if (v31 < 1) {
    goto LABEL_350;
  }
  for (uint64_t j = 0; j != v13; ++j)
  {
    if ((v28 & 0xC000000000000001) != 0)
    {
      uint64_t v33 = MEMORY[0x1CB798560](j, v28);
      if (*(unsigned char *)(v33 + 104)) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v33 = *(void *)(v28 + 8 * j + 32);
      swift_retain();
      if (*(unsigned char *)(v33 + 104)) {
        goto LABEL_39;
      }
    }
    if ((a7 & 1) == 0 && *(void *)(v33 + 80) == 1)
    {
LABEL_39:
      swift_release();
      continue;
    }
    sub_1CA5FDB88();
    sub_1CA5FDBB8();
    sub_1CA5FDBC8();
    sub_1CA5FDB98();
  }
  swift_release();
  __int16 v91 = (unsigned char *)__s1;
LABEL_173:
  unsigned __int8 v96 = sub_1CA5D0A5C((unint64_t)v91);
  uint64_t v97 = v10;
  uint64_t v98 = sub_1CA5EE0D0((uint64_t)v91, v96 & 1);
  if (v10)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v100 = v99;
  uint64_t v101 = v98;
  unint64_t v353 = v99;
  switch(v99 >> 62)
  {
    case 1uLL:
      LODWORD(v102) = HIDWORD(v98) - v98;
      if (__OFSUB__(HIDWORD(v98), v98)) {
        goto LABEL_359;
      }
      uint64_t v102 = (int)v102;
LABEL_182:
      if (v102 >= 0x2000)
      {
        unint64_t v150 = v99 >> 62;
        swift_bridgeObjectRelease();
        *(void *)&long long __s1 = 0;
        *((void *)&__s1 + 1) = 0xE000000000000000;
        sub_1CA5FDB18();
        swift_bridgeObjectRelease();
        *(void *)&long long __s1 = 0xD00000000000002ALL;
        *((void *)&__s1 + 1) = 0x80000001CA60C8F0;
        if (v150 == 2)
        {
          uint64_t v152 = *(void *)(v101 + 16);
          uint64_t v151 = *(void *)(v101 + 24);
          uint64_t v143 = v151 - v152;
          if (__OFSUB__(v151, v152))
          {
            __break(1u);
            goto LABEL_194;
          }
        }
        else
        {
          if (__OFSUB__(HIDWORD(v101), v101)) {
            goto LABEL_362;
          }
          uint64_t v143 = HIDWORD(v101) - (int)v101;
        }
        sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
        uint64_t v364 = v143;
        sub_1CA5FDCA8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5BBD9C(__s1, *((uint64_t *)&__s1 + 1), 8, 0);
        swift_willThrow();
        sub_1CA5B6EF4(v101, v353);
        return;
      }
LABEL_183:
      unsigned __int8 v311 = v96;
      uint64_t v328 = (uint64_t)v91;
      unint64_t v309 = v99 >> 62;
      id v356 = 0;
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = v101;
      *(void *)(v105 + 24) = v100;
      sub_1CA5B6FE8(v101, v100);
      sub_1CA5B6FE8(v101, v100);
      BOOL v106 = sub_1CA5FD628();
      uint64_t v354 = v101;
      os_log_type_t v107 = sub_1CA5FD9D8();
      uint64_t v108 = swift_allocObject();
      *(unsigned char *)(v108 + 16) = 32;
      uint64_t v109 = swift_allocObject();
      *(unsigned char *)(v109 + 16) = 8;
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = sub_1CA5EFA10;
      *(void *)(v110 + 24) = v105;
      uint64_t v111 = swift_allocObject();
      *(void *)(v111 + 16) = sub_1CA5EFA44;
      *(void *)(v111 + 24) = v110;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6083E0);
      uint64_t inited = swift_initStackObject();
      long long v310 = xmmword_1CA602AD0;
      *(_OWORD *)(inited + 16) = xmmword_1CA602AD0;
      *(void *)(inited + 32) = sub_1CA5EFA2C;
      *(void *)(inited + 40) = v108;
      *(void *)(inited + 48) = sub_1CA5F0BD0;
      *(void *)(inited + 56) = v109;
      *(void *)(inited + 64) = sub_1CA5EFA6C;
      *(void *)(inited + 72) = v111;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      unint64_t v113 = v100;
      os_log_type_t v114 = v107;
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v115 = (uint8_t *)swift_slowAlloc();
        uint64_t v339 = swift_slowAlloc();
        *(void *)&long long __s1 = v339;
        *(_WORD *)uint64_t v115 = 258;
        v115[2] = 32;
        swift_release();
        v115[3] = 8;
        swift_release();
        sub_1CA5F1528();
        uint64_t v116 = sub_1CA5FD588();
        uint64_t v364 = sub_1CA5DDA20(v116, v117, (uint64_t *)&__s1);
        sub_1CA5FDA68();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v354, v113);
        _os_log_impl(&dword_1CA552000, v106, v114, "Serialized configuration %s", v115, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CB799300](v339, -1, -1);
        MEMORY[0x1CB799300](v115, -1, -1);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_1CA5B6EF4(v354, v113);
      }
      uint64_t v118 = swift_allocObject();
      *(unsigned char *)(v118 + 16) = v311 & 1;
      uint64_t v119 = v118;
      uint64_t v120 = swift_allocObject();
      *(void *)(v120 + 16) = a6;
      uint64_t v121 = v120;
      uint64_t v122 = swift_allocObject();
      *(unsigned char *)(v122 + 16) = a8 & 1;
      uint64_t v327 = swift_allocObject();
      *(void *)(v327 + 16) = *(void *)v357;
      *(void *)(v327 + 24) = a5;
      sub_1CA5B8510(*(uint64_t *)v357, a5);
      sub_1CA5B8510(*(uint64_t *)v357, a5);
      osunint64_t log = (long long *)sub_1CA5FD628();
      os_log_type_t v312 = sub_1CA5FDA08();
      uint64_t v123 = swift_allocObject();
      *(unsigned char *)(v123 + 16) = 0;
      uint64_t v323 = swift_allocObject();
      *(unsigned char *)(v323 + 16) = 4;
      uint64_t v124 = swift_allocObject();
      *(void *)(v124 + 16) = sub_1CA5EFA84;
      *(void *)(v124 + 24) = v119;
      uint64_t v125 = v124;
      uint64_t v126 = swift_allocObject();
      *(void *)(v126 + 16) = sub_1CA5EFB28;
      *(void *)(v126 + 24) = v125;
      uint64_t v127 = v126;
      uint64_t v128 = swift_allocObject();
      *(void *)(v128 + 16) = sub_1CA5EFB54;
      *(void *)(v128 + 24) = v127;
      uint64_t v129 = v128;
      uint64_t v313 = swift_allocObject();
      *(void *)(v313 + 16) = sub_1CA5EFB7C;
      *(void *)(v313 + 24) = v129;
      uint64_t v314 = swift_allocObject();
      *(unsigned char *)(v314 + 16) = 0;
      uint64_t v325 = swift_allocObject();
      *(unsigned char *)(v325 + 16) = 4;
      uint64_t v130 = swift_allocObject();
      *(void *)(v130 + 16) = sub_1CA5EFA9C;
      *(void *)(v130 + 24) = v121;
      uint64_t v131 = v130;
      uint64_t v132 = swift_allocObject();
      *(void *)(v132 + 16) = sub_1CA5F0C1C;
      *(void *)(v132 + 24) = v131;
      uint64_t v133 = v132;
      uint64_t v134 = swift_allocObject();
      *(void *)(v134 + 16) = sub_1CA5F0BC0;
      *(void *)(v134 + 24) = v133;
      uint64_t v135 = v134;
      uint64_t loga = swift_allocObject();
      *(void *)(loga + 16) = sub_1CA5F0BC8;
      *(void *)(loga + 24) = v135;
      uint64_t v335 = swift_allocObject();
      *(unsigned char *)(v335 + 16) = 0;
      uint64_t v340 = swift_allocObject();
      *(unsigned char *)(v340 + 16) = 4;
      uint64_t v136 = swift_allocObject();
      *(void *)(v136 + 16) = sub_1CA5F0BD4;
      *(void *)(v136 + 24) = v122;
      uint64_t v137 = swift_allocObject();
      *(void *)(v137 + 16) = sub_1CA5F0C1C;
      *(void *)(v137 + 24) = v136;
      uint64_t v138 = swift_allocObject();
      *(void *)(v138 + 16) = sub_1CA5F0BC0;
      *(void *)(v138 + 24) = v137;
      uint64_t v322 = swift_allocObject();
      *(void *)(v322 + 16) = sub_1CA5F0BC8;
      *(void *)(v322 + 24) = v138;
      uint64_t v139 = swift_allocObject();
      *(unsigned char *)(v139 + 16) = 32;
      uint64_t v333 = swift_allocObject();
      *(unsigned char *)(v333 + 16) = 8;
      uint64_t v140 = swift_allocObject();
      *(void *)(v140 + 16) = sub_1CA5EFB00;
      *(void *)(v140 + 24) = v327;
      uint64_t v141 = swift_allocObject();
      *(void *)(v141 + 16) = sub_1CA5F0BC4;
      *(void *)(v141 + 24) = v140;
      uint64_t v142 = swift_initStackObject();
      *(_OWORD *)(v142 + 16) = xmmword_1CA602AE0;
      *(void *)(v142 + 32) = sub_1CA5F0BD0;
      *(void *)(v142 + 40) = v123;
      *(void *)(v142 + 48) = sub_1CA5F0BD0;
      *(void *)(v142 + 56) = v323;
      *(void *)(v142 + 64) = sub_1CA5EFBAC;
      *(void *)(v142 + 72) = v313;
      *(void *)(v142 + 80) = sub_1CA5F0BD0;
      *(void *)(v142 + 88) = v314;
      *(void *)(v142 + 96) = sub_1CA5F0BD0;
      *(void *)(v142 + 104) = v325;
      *(void *)(v142 + 112) = sub_1CA5EFBAC;
      *(void *)(v142 + 120) = loga;
      *(void *)(v142 + 128) = sub_1CA5F0BD0;
      *(void *)(v142 + 136) = v335;
      *(void *)(v142 + 144) = sub_1CA5F0BD0;
      *(void *)(v142 + 152) = v340;
      *(void *)(v142 + 160) = sub_1CA5EFBAC;
      *(void *)(v142 + 168) = v322;
      *(void *)(v142 + 176) = sub_1CA5F0BD0;
      *(void *)(v142 + 184) = v139;
      *(void *)(v142 + 192) = sub_1CA5F0BD0;
      *(void *)(v142 + 200) = v333;
      *(void *)(v142 + 208) = sub_1CA5F0BCC;
      *(void *)(v142 + 216) = v141;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v9 = v322;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled((os_log_t)oslog, v312))
      {
        uint64_t v143 = swift_slowAlloc();
        uint64_t v308 = swift_slowAlloc();
        *(void *)&long long __s1 = v308;
        *(_WORD *)uint64_t v143 = 1026;
        *(unsigned char *)(v143 + 2) = 0;
        swift_release();
        *(unsigned char *)(v143 + 3) = 4;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        LODWORD(v364) = v311 & 1;
        sub_1CA5FDA68();
        swift_release();
        swift_release();
        *(unsigned char *)(v143 + 8) = 0;
        swift_release();
        *(unsigned char *)(v143 + 9) = 4;
        swift_release();
        int v144 = *a6;
        swift_release();
        swift_release();
        swift_release();
        LODWORD(v364) = v144;
        sub_1CA5FDA68();
        swift_release();
        swift_release();
        *(unsigned char *)(v143 + 14) = 0;
        swift_release();
        *(unsigned char *)(v143 + 15) = 4;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        LODWORD(v364) = a8 & 1;
        sub_1CA5FDA68();
        swift_release();
        swift_release();
        *(unsigned char *)(v143 + 20) = 32;
        swift_release();
        *(unsigned char *)(v143 + 21) = 8;
        swift_release();
        if (a5 >> 60 == 15)
        {
          unint64_t v145 = 0xE300000000000000;
          uint64_t v146 = 7104878;
          id v147 = v97;
          uint64_t v148 = *(void *)v357;
          uint64_t v9 = v354;
          unint64_t v149 = a5;
          goto LABEL_195;
        }
LABEL_194:
        uint64_t v148 = *(void *)v357;
        unint64_t v149 = a5;
        uint64_t v146 = sub_1CA5C43A0(*(uint64_t *)v357, a5);
        unint64_t v145 = v153;
        id v147 = v356;
        uint64_t v9 = v354;
LABEL_195:
        uint64_t v364 = sub_1CA5DDA20(v146, v145, (uint64_t *)&__s1);
        sub_1CA5FDA68();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1CA5B736C(v148, v149);
        _os_log_impl(&dword_1CA552000, (os_log_t)oslog, v312, "Configuring SE on fastPath %{BOOL}d have %{BOOL}d skip %{BOOL}d inSession %s", (uint8_t *)v143, 0x1Eu);
        swift_arrayDestroy();
        MEMORY[0x1CB799300](v308, -1, -1);
        MEMORY[0x1CB799300](v143, -1, -1);

        uint64_t v18 = v9;
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1CA5B736C(*(uint64_t *)v357, a5);
        id v147 = v97;
        uint64_t v18 = v354;
      }
      uint64_t v11 = v328;
      if (a5 >> 60 == 15)
      {
        uint64_t v154 = MEMORY[0x1E4FBC860];
        *(void *)&long long __s1 = MEMORY[0x1E4FBC860];
        if (v343)
        {
          swift_bridgeObjectRetain();
          for (uint64_t k = 0; k != v343; ++k)
          {
            if ((a1 & 0xC000000000000001) != 0)
            {
              uint64_t v156 = MEMORY[0x1CB798560](k, a1);
            }
            else
            {
              uint64_t v156 = *(void *)(a1 + 8 * k + 32);
              swift_retain();
            }
            if (*(unsigned char *)(v156 + 161) == 1)
            {
              sub_1CA5FDB88();
              sub_1CA5FDBB8();
              sub_1CA5FDBC8();
              sub_1CA5FDB98();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v157 = __s1;
        }
        else
        {
          unint64_t v157 = MEMORY[0x1E4FBC860];
        }
        *(void *)&long long __s1 = v154;
        uint64_t v158 = sub_1CA5CB540(v157);
        if (v158)
        {
          uint64_t v159 = v158;
          if (v158 < 1) {
            goto LABEL_361;
          }
          uint64_t v160 = 0;
          uint64_t v9 = v157 & 0xC000000000000001;
          while (2)
          {
            if (v9)
            {
              uint64_t v161 = MEMORY[0x1CB798560](v160, v157);
              if ((*(unsigned char *)(v161 + 104) & 1) == 0) {
                goto LABEL_217;
              }
              goto LABEL_211;
            }
            uint64_t v161 = *(void *)(v157 + 8 * v160 + 32);
            swift_retain();
            if (*(unsigned char *)(v161 + 104)) {
              goto LABEL_211;
            }
LABEL_217:
            if ((a7 & 1) == 0 && *(void *)(v161 + 80) == 1)
            {
LABEL_211:
              swift_release();
            }
            else
            {
              sub_1CA5FDB88();
              sub_1CA5FDBB8();
              sub_1CA5FDBC8();
              sub_1CA5FDB98();
            }
            if (v159 == ++v160)
            {
              swift_release();
              unint64_t v13 = __s1;
              goto LABEL_222;
            }
            continue;
          }
        }
        swift_release();
        unint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_222:
        unint64_t v12 = (unint64_t)a3;
        if (qword_1EA6086C8 == -1)
        {
LABEL_223:
          sub_1CA5D52A0(v11, v13, (void *)v12);
          id v147 = v356;
          if (v356)
          {
            swift_bridgeObjectRelease();
            sub_1CA5B6EF4(v18, v353);
            swift_release();
            return;
          }
          swift_release();
          goto LABEL_226;
        }
LABEL_356:
        swift_once();
        goto LABEL_223;
      }
LABEL_226:
      id v356 = v147;
      uint64_t v162 = sub_1CA5C5230(0xD000000000000012, 0x80000001CA60BDB0);
      if (v163 >> 60 == 15)
      {
        __break(1u);
        while (1)
        {
LABEL_369:
          sub_1CA5FDC08();
          __break(1u);
LABEL_370:
          sub_1CA5B736C(v9, v18);
          __break(1u);
LABEL_371:
          uint64_t v307 = *(void *)v357;
LABEL_373:
          sub_1CA5B736C(v307, a5);
          __break(1u);
LABEL_374:
          swift_release();
          swift_release();
          __break(1u);
        }
      }
      uint64_t v164 = v162;
      unint64_t v165 = v163;
      unint64_t v166 = (void *)sub_1CA5FD578();
      id v167 = (id)SelectByNameCmd(v166);

      uint64_t v168 = sub_1CA5FD598();
      unint64_t v170 = v169;

      uint64_t v171 = (void *)sub_1CA5FD578();
      sub_1CA5B6EF4(v168, v170);
      *(void *)&long long __s1 = 0;
      uint64_t v172 = a3;
      id v173 = [a3 transceiveAndCheckSW:v171 error:&__s1];

      id v174 = (id)__s1;
      if (!v173)
      {
        uint64_t v177 = v174;
        swift_bridgeObjectRelease();
        sub_1CA5FD4B8();

        swift_willThrow();
        sub_1CA5B6EF4(v18, v353);
        sub_1CA5B736C(v164, v165);
        return;
      }
      uint64_t v341 = v164;
      unint64_t v344 = v165;
      uint64_t v175 = sub_1CA5FD598();
      sub_1CA5B6EF4(v175, v176);

      sub_1CA5D85F8(a3);
      if (a8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_270;
      }
      if (*a6 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
        uint64_t v178 = swift_allocObject();
        *(_OWORD *)(v178 + 16) = xmmword_1CA602AF0;
        *(void *)(v178 + 32) = 0x4F020001F080;
        uint64_t v179 = sub_1CA5BA450(v178);
        unint64_t v181 = v180;
        swift_bridgeObjectRelease();
        unint64_t v182 = (void *)sub_1CA5FD578();
        *(void *)&long long __s1 = 0;
        id v183 = [a3 transceiveAndCheckSW:v182 error:&__s1];

        id v184 = (id)__s1;
        if (!v183)
        {
          uint64_t v202 = v184;
          swift_bridgeObjectRelease();
          sub_1CA5FD4B8();

          swift_willThrow();
          sub_1CA5B6EF4(v18, v353);
          sub_1CA5B736C(v164, v344);
          sub_1CA5B6EF4(v179, v181);
          return;
        }
        uint64_t v185 = sub_1CA5FD598();
        unint64_t v187 = v186;
        sub_1CA5B6EF4(v179, v181);
        sub_1CA5B6EF4(v185, v187);

        uint64_t v172 = a3;
      }
      unint64_t v188 = swift_bridgeObjectRetain();
      uint64_t v189 = sub_1CA5CB540(v188);
      swift_bridgeObjectRelease();
      int v190 = (v189 != 0) & v311;
      if (v190 != 1)
      {
        swift_bridgeObjectRelease();
        *a6 = v190;
        goto LABEL_270;
      }
      int64_t v191 = sub_1CA5CB540(v11);
      if (!v191)
      {
        swift_bridgeObjectRelease();
        unint64_t v199 = (unsigned char *)MEMORY[0x1E4FBC860];
        goto LABEL_254;
      }
      unint64_t v13 = v191;
      uint64_t v364 = MEMORY[0x1E4FBC860];
      sub_1CA5DD904(v191);
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_367;
      }
      unint64_t v12 = 0;
      unint64_t v192 = v11 & 0xC000000000000001;
      a5 = 2;
      do
      {
        if (v13 == v12) {
          goto LABEL_346;
        }
        if (v192)
        {
          uint64_t v193 = MEMORY[0x1CB798560](v12, v11);
        }
        else
        {
          uint64_t v193 = *(void *)(v11 + 8 * v12 + 32);
          swift_retain();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1CA602380;
        *(unsigned char *)(v9 + 32) = 79;
        uint64_t v194 = *(void *)(v193 + 32);
        unint64_t v195 = *(void *)(v193 + 40);
        unint64_t v196 = sub_1CA5FD5B8();
        if ((v196 & 0x8000000000000000) != 0 || v196 >= 0x100) {
          goto LABEL_369;
        }
        *(unsigned char *)(v9 + 33) = v196;
        uint64_t v197 = sub_1CA5BA450(v9);
        uint64_t v18 = v198;
        swift_bridgeObjectRelease();
        sub_1CA5B6FE8(v194, v195);
        sub_1CA5D54F0(v197, v18, v194, v195, (uint64_t *)&__s1);
        sub_1CA5B6EF4(v194, v195);
        sub_1CA5B6EF4(v197, v18);
        swift_release();
        *(_OWORD *)v357 = __s1;
        sub_1CA5DE63C();
        unint64_t v199 = (unsigned char *)v364;
        unint64_t v201 = *(void *)(v364 + 16);
        unint64_t v200 = *(void *)(v364 + 24);
        if (v201 >= v200 >> 1)
        {
          sub_1CA5DE758(v200 > 1, v201 + 1, 1);
          unint64_t v199 = (unsigned char *)v364;
        }
        ++v12;
        *((void *)v199 + 2) = v201 + 1;
        *(_OWORD *)&v199[16 * v201 + 32] = *(_OWORD *)v357;
        uint64_t v11 = v328;
      }
      while (v13 != v12);
      swift_bridgeObjectRelease();
      uint64_t v172 = a3;
LABEL_254:
      uint64_t v203 = sub_1CA5ED118((uint64_t)v199);
      swift_bridgeObjectRelease();
      uint64_t v204 = sub_1CA5DE44C(v203);
      swift_bridgeObjectRelease();
      uint64_t v205 = sub_1CA5EFCA8(0, v204[2], 15, (uint64_t)v204);
      swift_release();
      uint64_t v9 = *(void *)(v205 + 16);
      if (!v9)
      {
        swift_bridgeObjectRelease();
        *a6 = 1;
        goto LABEL_269;
      }
      uint64_t v18 = v205 + 56;
      *(void *)v357 = 5;
      a5 = 16904320;
      uint64_t v328 = MEMORY[0x1E4FBC840] + 8;
      while (2)
      {
        uint64_t v207 = *(void *)(v18 - 24);
        uint64_t v206 = *(void *)(v18 - 16);
        uint64_t v208 = *(void *)(v18 - 8);
        unint64_t v209 = *(void *)v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
        uint64_t v210 = swift_allocObject();
        *(_OWORD *)(v210 + 16) = xmmword_1CA602B00;
        *(_DWORD *)(v210 + 32) = 16904320;
        swift_unknownObjectRetain_n();
        uint64_t v211 = sub_1CA5EFF30(v206, v208, v209);
        unint64_t v214 = sub_1CA5F003C(v211, v213, v212 & 1, v209 >> 1, 0, 1, v206, v208, v209);
        swift_unknownObjectRelease();
        if ((v214 & 0x8000000000000000) != 0 || v214 >= 0x100) {
          goto LABEL_369;
        }
        *(unsigned char *)(v210 + 36) = v214;
        uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4228);
        uint64_t v360 = v215;
        uint64_t v361 = sub_1CA5B8634((unint64_t *)&qword_1EBCB4230, &qword_1EBCB4228);
        *(void *)&long long __s1 = v210;
        uint64_t v216 = __swift_project_boxed_opaque_existential_1Tm(&__s1, v215);
        uint64_t v217 = (unsigned char *)(*v216 + 32);
        uint64_t v218 = &v217[*(void *)(*v216 + 16)];
        swift_bridgeObjectRetain();
        sub_1CA5F19A8(v217, v218, &v364);
        swift_bridgeObjectRelease();
        long long v219 = (unsigned char *)v364;
        unint64_t v220 = v365;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&__s1);
        *(void *)&long long __s1 = v219;
        *((void *)&__s1 + 1) = v220;
        swift_unknownObjectRetain();
        sub_1CA5B6FE8((uint64_t)v219, v220);
        sub_1CA5CBD5C(v207, v206, v208, v209);
        swift_unknownObjectRelease();
        sub_1CA5B6EF4((uint64_t)v219, v220);
        unint64_t v221 = *((void *)&__s1 + 1);
        uint64_t v222 = __s1;
        uint64_t v223 = (void *)sub_1CA5FD578();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608758);
        uint64_t v224 = swift_allocObject();
        *(_OWORD *)(v224 + 16) = xmmword_1CA6021A0;
        sub_1CA5B84AC(0, &qword_1EA6086E0);
        *(void *)(v224 + 32) = sub_1CA5FDA48();
        *(void *)(v224 + 40) = sub_1CA5FDA48();
        *(void *)&long long __s1 = v224;
        sub_1CA5FD968();
        uint64_t v225 = (void *)sub_1CA5FD948();
        swift_bridgeObjectRelease();
        *(void *)&long long __s1 = 0;
        id v226 = [a3 transceiveAndCheckSW_inArray_keepingSW_error:v223 v225:1 error:&__s1];

        id v227 = (id)__s1;
        if (!v226)
        {
          v244 = v227;
          swift_bridgeObjectRelease();
          sub_1CA5FD4B8();

          swift_willThrow();
          sub_1CA5B6EF4(v354, v353);
          sub_1CA5B736C(v341, v344);
          swift_unknownObjectRelease_n();
          uint64_t v245 = v222;
          goto LABEL_325;
        }
        uint64_t v228 = sub_1CA5FD598();
        unint64_t v230 = v229;

        int64_t v231 = (void *)sub_1CA5FD578();
        int SW = GetSW(v231);

        if (SW == 36864)
        {
          swift_unknownObjectRelease_n();
          sub_1CA5B6EF4(v222, v221);
          sub_1CA5B6EF4(v228, v230);
        }
        else
        {
          uint64_t v345 = v222;
          unint64_t v348 = v221;
          uint64_t v350 = v9;
          uint64_t v233 = swift_allocObject();
          *(void *)(v233 + 16) = v228;
          *(void *)(v233 + 24) = v230;
          sub_1CA5B6FE8(v228, v230);
          uint64_t v234 = sub_1CA5FD628();
          unint64_t v336 = v230;
          os_log_type_t v235 = sub_1CA5FD9F8();
          uint64_t v236 = swift_allocObject();
          *(unsigned char *)(v236 + 16) = 32;
          uint64_t v237 = swift_allocObject();
          *(unsigned char *)(v237 + 16) = 8;
          uint64_t v238 = swift_allocObject();
          *(void *)(v238 + 16) = sub_1CA5F0370;
          *(void *)(v238 + 24) = v233;
          long long v239 = v234;
          uint64_t v240 = swift_allocObject();
          *(void *)(v240 + 16) = sub_1CA5F0BC4;
          *(void *)(v240 + 24) = v238;
          uint64_t v241 = swift_initStackObject();
          *(_OWORD *)(v241 + 16) = v310;
          *(void *)(v241 + 32) = sub_1CA5F0BD0;
          *(void *)(v241 + 40) = v236;
          *(void *)(v241 + 48) = sub_1CA5F0BD0;
          *(void *)(v241 + 56) = v237;
          *(void *)(v241 + 64) = sub_1CA5F0BCC;
          *(void *)(v241 + 72) = v240;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v239, v235))
          {
            v330 = v239;
            unint64_t v242 = (uint8_t *)swift_slowAlloc();
            uint64_t v243 = swift_slowAlloc();
            uint64_t v362 = 0;
            uint64_t v358 = v243;
            *(_WORD *)unint64_t v242 = 258;
            uint64_t v364 = (uint64_t)(v242 + 2);
            sub_1CA5B23C8((unsigned char **)&v364, (uint64_t)&v362, (uint64_t)&v358, 32);
            swift_release();
            *(void *)&long long __s1 = sub_1CA5F0BD0;
            *((void *)&__s1 + 1) = v237;
            sub_1CA5B2380((uint64_t (**)(uint64_t, uint64_t, uint64_t))&__s1, (uint64_t)&v364, (uint64_t)&v362, (uint64_t)&v358);
            if (!v356)
            {
              swift_release();
              *(void *)&long long __s1 = sub_1CA5F0BCC;
              *((void *)&__s1 + 1) = v240;
              sub_1CA5B2380((uint64_t (**)(uint64_t, uint64_t, uint64_t))&__s1, (uint64_t)&v364, (uint64_t)&v362, (uint64_t)&v358);
              swift_release();
              _os_log_impl(&dword_1CA552000, v330, v235, "Activation parially succeeded, warning : %s", v242, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1CB799300](v243, -1, -1);
              sub_1CA5B23BC();
            }

            __break(1u);
            __break(1u);
LABEL_377:
            __break(1u);
            JUMPOUT(0x1CA5D511CLL);
          }
          swift_unknownObjectRelease_n();
          sub_1CA5B6EF4(v345, v348);
          sub_1CA5B6EF4(v228, v336);
          swift_release();
          swift_release();
          swift_release();

          uint64_t v9 = v350;
        }
        v18 += 32;
        if (--v9) {
          continue;
        }
        break;
      }
      swift_bridgeObjectRelease();
      *a6 = 1;
      uint64_t v172 = a3;
LABEL_269:
      uint64_t v18 = v354;
LABEL_270:
      a5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
      uint64_t v246 = swift_allocObject();
      *(_OWORD *)(v246 + 16) = xmmword_1CA602670;
      *(_DWORD *)(v246 + 32) = 50393984;
      uint64_t v247 = sub_1CA5BA450(v246);
      uint64_t v9 = v248;
      swift_bridgeObjectRelease();
      v249 = (void *)sub_1CA5FD578();
      *(void *)&long long __s1 = 0;
      id v250 = [v172 transceiveAndCheckSW:v249 error:&__s1];

      id v251 = (id)__s1;
      if (!v250)
      {
        v257 = v251;
        v258 = (void *)sub_1CA5FD4B8();

        swift_willThrow();
        id v259 = 0;
        goto LABEL_291;
      }
      break;
    case 2uLL:
      uint64_t v104 = *(void *)(v98 + 16);
      uint64_t v103 = *(void *)(v98 + 24);
      BOOL v24 = __OFSUB__(v103, v104);
      uint64_t v102 = v103 - v104;
      if (!v24) {
        goto LABEL_182;
      }
      goto LABEL_360;
    default:
      goto LABEL_183;
  }
  uint64_t v252 = sub_1CA5FD598();
  unint64_t v254 = v253;

  unint64_t v255 = v254 >> 62;
  switch(v254 >> 62)
  {
    case 1uLL:
      LODWORD(v256) = HIDWORD(v252) - v252;
      if (__OFSUB__(HIDWORD(v252), v252)) {
        goto LABEL_365;
      }
      uint64_t v256 = (int)v256;
LABEL_277:
      if (v256 != 34)
      {
LABEL_281:
        sub_1CA5B6EF4(v252, v254);
        id v259 = v356;
        goto LABEL_291;
      }
      if (v255)
      {
        if (v255 == 1) {
          uint64_t v262 = v252 >> 32;
        }
        else {
          uint64_t v262 = *(void *)(v252 + 24);
        }
        sub_1CA5B6FE8(v252, v254);
      }
      else
      {
        uint64_t v262 = BYTE6(v254);
      }
      uint64_t v337 = v247;
      if (v262 < 2) {
        goto LABEL_377;
      }
      uint64_t v263 = sub_1CA5FD558();
      unint64_t v265 = v264;
      sub_1CA5B6EF4(v252, v254);
      uint64_t v266 = sub_1CA5BB678(v18, v353);
      unint64_t v268 = v267;
      char v269 = sub_1CA5B6C5C(v263, v265, v266, v267);
      sub_1CA5B6EF4(v266, v268);
      sub_1CA5B6EF4(v263, v265);
      if ((v269 & 1) == 0)
      {
        sub_1CA5B6EF4(v252, v254);
        id v259 = v356;
        uint64_t v247 = v337;
LABEL_291:
        unint64_t v273 = 0;
        switch((int)v309)
        {
          case 1:
            if (__OFSUB__(HIDWORD(v18), v18)) {
              goto LABEL_363;
            }
            unint64_t v273 = HIDWORD(v18) - (int)v18;
LABEL_296:
            id v356 = v259;
            uint64_t v276 = swift_allocObject();
            *(_OWORD *)(v276 + 16) = xmmword_1CA602B00;
            *(_DWORD *)(v276 + 32) = 16839552;
            *(unsigned char *)(v276 + 36) = 2;
            v277 = (unsigned char *)sub_1CA5BA450(v276);
            unint64_t v279 = v278;
            swift_bridgeObjectRelease();
            uint64_t v364 = (uint64_t)v277;
            unint64_t v365 = v279;
            if ((v273 & 0x8000000000000000) != 0 || v273 >= 0x10000) {
              goto LABEL_369;
            }
            sub_1CA5CBAA8(v273);
            v280 = (unsigned char *)v364;
            unint64_t v281 = v273;
            unint64_t v221 = v365;
            sub_1CA5B6FE8(v364, v365);
            v282 = (void *)sub_1CA5FD578();
            sub_1CA5B6EF4((uint64_t)v280, v221);
            *(void *)&long long __s1 = 0;
            id v283 = [a3 transceiveAndCheckSW:v282 error:&__s1];

            id v284 = (id)__s1;
            if (v283)
            {
              uint64_t v285 = sub_1CA5FD598();
              sub_1CA5B6EF4(v285, v286);

              sub_1CA5FD448();
              swift_allocObject();
              unint64_t v12 = sub_1CA5FD438() | 0x4000000000000000;
              uint64_t v362 = 0;
              unint64_t v363 = v12;
              if (v281)
              {
                unint64_t v334 = v9;
                uint64_t v338 = v247;
                int64_t v287 = 0;
                uint64_t v288 = 0;
                uint64_t v346 = v281;
                uint64_t v289 = v281;
                while (2)
                {
                  uint64_t v18 = v287 + 255;
                  uint64_t v11 = __OFADD__(v287, 255);
                  uint64_t v290 = v289 - 255;
                  if (v289 >= 255) {
                    unint64_t v13 = 255;
                  }
                  else {
                    unint64_t v13 = v289;
                  }
                  switch(v12 >> 62)
                  {
                    case 1uLL:
                      uint64_t v291 = (int)v288;
                      uint64_t v292 = v288 >> 32;
                      goto LABEL_310;
                    case 2uLL:
                      uint64_t v291 = *(void *)(v288 + 16);
                      uint64_t v292 = *(void *)(v288 + 24);
LABEL_310:
                      if (v292 >= v291) {
                        goto LABEL_311;
                      }
                      goto LABEL_342;
                    default:
LABEL_311:
                      sub_1CA5FD538();
                      uint64_t v293 = swift_initStackObject();
                      *(_OWORD *)(v293 + 16) = xmmword_1CA602670;
                      *(_DWORD *)(v293 + 32) = 33616768;
                      sub_1CA5FD548();
                      swift_bridgeObjectRelease();
                      if ((v13 & 0x8000000000000000) != 0) {
                        goto LABEL_369;
                      }
                      unint64_t v12 = 0;
                      switch(v363 >> 62)
                      {
                        case 1uLL:
                          unint64_t v12 = v362 >> 32;
                          break;
                        case 2uLL:
                          unint64_t v12 = *(void *)(v362 + 24);
                          break;
                        case 3uLL:
                          break;
                        default:
                          unint64_t v12 = BYTE6(v363);
                          break;
                      }
                      uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
                      uint64_t v360 = v294;
                      uint64_t v361 = sub_1CA5B8634((unint64_t *)&qword_1EBCB41A0, &qword_1EBCB4238);
                      LOBYTE(__s1) = v13;
                      LOBYTE(v358) = *(unsigned char *)__swift_project_boxed_opaque_existential_1Tm(&__s1, v294);
                      sub_1CA5FD538();
                      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&__s1);
                      if (__OFADD__(v287, v13)) {
                        goto LABEL_343;
                      }
                      *(void *)v357 = v290;
                      if ((uint64_t)(v287 + v13) < v287) {
                        goto LABEL_344;
                      }
                      uint64_t v295 = sub_1CA5FD558();
                      unint64_t v297 = v296;
                      sub_1CA5FD5C8();
                      sub_1CA5B6EF4(v295, v297);
                      uint64_t v288 = v362;
                      unint64_t v12 = v363;
                      sub_1CA5B6FE8(v362, v363);
                      v298 = (void *)sub_1CA5FD578();
                      sub_1CA5B6EF4(v288, v12);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608758);
                      uint64_t v299 = swift_allocObject();
                      *(_OWORD *)(v299 + 16) = xmmword_1CA6021A0;
                      sub_1CA5B84AC(0, &qword_1EA6086E0);
                      *(void *)(v299 + 32) = sub_1CA5FDA48();
                      *(void *)(v299 + 40) = sub_1CA5FDA48();
                      *(void *)&long long __s1 = v299;
                      sub_1CA5FD968();
                      uint64_t v9 = sub_1CA5FD948();
                      swift_bridgeObjectRelease();
                      *(void *)&long long __s1 = 0;
                      id v300 = [a3 sel_transceiveAndCheckSW_inArray_error_:v298 v9:&__s1];

                      id v301 = (id)__s1;
                      if (!v300)
                      {
                        v306 = v301;
                        sub_1CA5FD4B8();

                        swift_willThrow();
                        sub_1CA5B736C(v341, v344);
                        sub_1CA5B6EF4(v338, v334);
                        sub_1CA5B6EF4(v354, v353);
                        sub_1CA5B6EF4(v288, v12);
                        sub_1CA5B6EF4(v364, v365);
                        return;
                      }
                      uint64_t v302 = sub_1CA5FD598();
                      sub_1CA5B6EF4(v302, v303);

                      if (v18 >= v346) {
                        int v304 = 1;
                      }
                      else {
                        int v304 = v11;
                      }
                      v287 += 255;
                      uint64_t v289 = *(void *)v357;
                      if (v304 != 1) {
                        continue;
                      }
                      sub_1CA5B736C(v341, v344);
                      sub_1CA5B6EF4(v338, v334);
                      v280 = (unsigned char *)v364;
                      unint64_t v221 = v365;
                      break;
                  }
                  break;
                }
              }
              else
              {
                sub_1CA5B736C(v341, v344);
                sub_1CA5B6EF4(v247, v9);
                uint64_t v288 = 0;
              }
              sub_1CA5B6EF4(v354, v353);
              sub_1CA5B6EF4(v288, v12);
              sub_1CA5B6EF4((uint64_t)v280, v221);
              return;
            }
            v305 = v284;
            sub_1CA5FD4B8();

            swift_willThrow();
            sub_1CA5B736C(v341, v344);
            sub_1CA5B6EF4(v247, v9);
            sub_1CA5B6EF4(v354, v353);
            uint64_t v245 = (uint64_t)v280;
            break;
          case 2:
            uint64_t v275 = *(void *)(v18 + 16);
            uint64_t v274 = *(void *)(v18 + 24);
            unint64_t v273 = v274 - v275;
            if (!__OFSUB__(v274, v275)) {
              goto LABEL_296;
            }
            goto LABEL_364;
          case 3:
            goto LABEL_296;
          default:
            unint64_t v273 = BYTE6(v353);
            goto LABEL_296;
        }
LABEL_325:
        sub_1CA5B6EF4(v245, v221);
        return;
      }
      v270 = sub_1CA5FD628();
      os_log_type_t v271 = sub_1CA5FDA08();
      if (os_log_type_enabled(v270, v271))
      {
        v272 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v272 = 0;
        _os_log_impl(&dword_1CA552000, v270, v271, "SE is already up to date with latest config", v272, 2u);
        MEMORY[0x1CB799300](v272, -1, -1);
      }
      sub_1CA5B6EF4(v18, v353);
      sub_1CA5B736C(v341, v344);
      sub_1CA5B6EF4(v337, v9);
      sub_1CA5B6EF4(v252, v254);

      return;
    case 2uLL:
      uint64_t v261 = *(void *)(v252 + 16);
      uint64_t v260 = *(void *)(v252 + 24);
      BOOL v24 = __OFSUB__(v260, v261);
      uint64_t v256 = v260 - v261;
      if (!v24) {
        goto LABEL_277;
      }
      goto LABEL_366;
    case 3uLL:
      goto LABEL_281;
    default:
      uint64_t v256 = BYTE6(v254);
      goto LABEL_277;
  }
}

uint64_t sub_1CA5D51DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    return 7104878;
  }
  sub_1CA5C4448(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
  uint64_t v2 = sub_1CA5FD888();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1CA5D52A0(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = sub_1CA5D90CC(a1, 0, 0);
  if (!v4)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1CA5D90CC(a1, 1, 0);
    uint64_t v11 = sub_1CA5D90CC(a1, 2, 0);
    uint64_t v12 = sub_1CA5D90CC(a2, 2, 1);
    uint64_t v13 = sub_1CA5D9874(v12, v11);
    uint64_t v19 = OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_homeEndpoints;
    uint64_t v14 = *(void *)(v3
                    + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_homeEndpoints);
    swift_bridgeObjectRetain();
    char v22 = sub_1CA5DC374(v10, v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_hydraEndpoints;
    uint64_t v16 = *(void *)(v3
                    + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_hydraEndpoints);
    swift_bridgeObjectRetain();
    char v17 = sub_1CA5DC374(v9, v16);
    swift_bridgeObjectRelease();
    uint64_t v20 = OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_lyonEndpoints;
    uint64_t v18 = *(void *)(v3
                    + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_lyonEndpoints);
    swift_bridgeObjectRetain();
    char v21 = sub_1CA5DC374(v13, v18);
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0 || !*(void *)(v9 + 16))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)(v3 + v15) = v9;
      swift_bridgeObjectRelease();
      sub_1CA5D9A24(0, a3);
    }
    if ((v22 & 1) != 0 || !*(void *)(v10 + 16))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)(v3 + v19) = v10;
      swift_bridgeObjectRelease();
      sub_1CA5D9A24(1, a3);
    }
    if (v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)(v3 + v20) = v13;
      swift_bridgeObjectRelease();
      sub_1CA5D9A24(2, a3);
      sub_1CA5DA6F0(2, a3);
    }
  }
}

uint64_t sub_1CA5D54F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  sub_1CA5B6FE8(a1, a2);
  sub_1CA5B6FE8(a3, a4);
  sub_1CA5CBB38(a3, a4);

  return sub_1CA5B6EF4(a3, a4);
}

uint64_t sub_1CA5D5558(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = sub_1CA5FD8A8();
  uint64_t result = sub_1CA5C5230(v4, v5);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    unint64_t v9 = v7;
    char v10 = sub_1CA5B6C5C(v2, v3, result, v7);
    sub_1CA5B736C(v8, v9);
    if (v10) {
      return 4;
    }
    uint64_t v12 = self;
    uint64_t v13 = *(void *)(a1 + 32);
    unint64_t v26 = *(void *)(a1 + 40);
    sub_1CA5C4448(v13, v26);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
    sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_1CA5FD898();
    swift_bridgeObjectRelease();
    unsigned __int8 v15 = [v12 sel_supportsStepUp:v14];

    if (v15) {
      return 5;
    }
    uint64_t v16 = self;
    sub_1CA5C4448(v13, v26);
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
    char v17 = (void *)sub_1CA5FD898();
    swift_bridgeObjectRelease();
    LOBYTE(v16) = [v16 sel_supportsStepUp_:v17];

    if (v16) {
      return 5;
    }
    unint64_t v18 = *(void *)(a1 + 80);
    BOOL v19 = v18 >= 3;
    unsigned int v20 = 0x10301u >> (8 * v18);
    if (v19) {
      uint64_t v11 = 2;
    }
    else {
      uint64_t v11 = v20;
    }
    if (*(unsigned char *)(a1 + 164)) {
      return v11 | 0xFFFFFF80;
    }
    uint64_t v21 = sub_1CA5D84E0();
    if (v21)
    {
      char v22 = (void *)v21;
      sub_1CA5C4448(v13, v26);
      uint64_t v23 = sub_1CA5FD888();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      LOBYTE(v23) = sub_1CA5CCE7C(v23, v25, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        return v11 | 0xFFFFFF80;
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_1CA5D5828(void *a1)
{
  uint64_t v3 = v1;
  *(unsigned char *)(v1 + 164) = 0;
  sub_1CA5B83E4((uint64_t)a1, (uint64_t)&v104);
  sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6083D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    uint64_t v104 = 0;
    uint64_t v105 = 0xE000000000000000;
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    uint64_t v104 = 0xD00000000000002DLL;
    uint64_t v105 = 0x80000001CA60BE10;
    __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
    swift_getDynamicType();
    sub_1CA5FDDB8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5BBD9C(v104, v105, 8, 0);
    swift_willThrow();
    goto LABEL_6;
  }
  unint64_t v5 = v106;
  uint64_t v6 = sub_1CA5FD8A8();
  char v8 = sub_1CA5CA708(v6, v7);
  if (v2)
  {

    swift_bridgeObjectRelease();
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
LABEL_7:
    type metadata accessor for ExpressMode.PassConfig();
    swift_deallocPartialClassInstance();
    return v3;
  }
  char v9 = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 162) = v9 & 1;
  uint64_t v10 = sub_1CA5FD8A8();
  char v12 = sub_1CA5CA708(v10, v11);
  char v14 = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 161) = v14 & 1;
  if ((*(unsigned char *)(v3 + 162) & 1) == 0 && (v14 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);

    type metadata accessor for ExpressMode.PassConfig();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v15 = sub_1CA5FD8A8();
  uint64_t v17 = sub_1CA5CA1BC(v15, v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v17;
  *(void *)(v3 + 24) = v19;
  uint64_t v20 = sub_1CA5FD8A8();
  uint64_t v22 = sub_1CA5CA1BC(v20, v21);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1CA5C5230(v22, v24);
  if (v26 >> 60 == 15)
  {
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    uint64_t v104 = 0;
    uint64_t v105 = 0xE000000000000000;
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    uint64_t v104 = 0x412074656C707041;
    uint64_t v105 = 0xEB00000000204449;
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(v104, v105, 8, 0);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v27 = v25;
  unint64_t v28 = v26;
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = v27;
  *(void *)(v3 + 40) = v28;
  uint64_t v29 = sub_1CA5FD8A8();
  uint64_t v31 = v30;
  sub_1CA5B6FE8(v27, v28);
  uint64_t v32 = sub_1CA5CA954(v29, v31);
  unint64_t v34 = v33;
  uint64_t v103 = v27;
  swift_bridgeObjectRelease();
  if (v34)
  {
    uint64_t v35 = sub_1CA5C5230(v32, v34);
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xF000000000000000;
  }
  *(void *)(v3 + 48) = v35;
  *(void *)(v3 + 56) = v36;
  uint64_t v37 = sub_1CA5FD8A8();
  uint64_t v39 = sub_1CA5CA954(v37, v38);
  unint64_t v41 = v40;
  swift_bridgeObjectRelease();
  if (v41)
  {
    uint64_t v42 = sub_1CA5C5230(v39, v41);
  }
  else
  {
    uint64_t v42 = 0;
    unint64_t v43 = 0xF000000000000000;
  }
  *(void *)(v3 + 64) = v42;
  *(void *)(v3 + 72) = v43;
  uint64_t v44 = sub_1CA5FD8A8();
  uint64_t v46 = sub_1CA5CA1BC(v44, v45);
  uint64_t v48 = v47;
  id v101 = (id)v46;
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_1CA5FD8A8();
  uint64_t v51 = (void *)sub_1CA5CABA4(v49, v50, (unint64_t *)&qword_1EA6083D8, 0x1E4F1C9E8, &qword_1EA608A38);
  swift_bridgeObjectRelease();
  id v52 = v51;
  *(void *)(v3 + 80) = sub_1CA5EC370((uint64_t)v101, v48, v51);
  *(void *)(v3 + 88) = v53;
  *(void *)(v3 + 96) = v54;
  uint64_t v55 = sub_1CA5FD8A8();
  id v102 = (id)sub_1CA5CABA4(v55, v56, &qword_1EA6086E0, 0x1E4F28ED0, &qword_1EA608A30);
  swift_bridgeObjectRelease();
  if (v102) {
    unsigned __int8 v57 = [v102 sel_BOOLValue];
  }
  else {
    unsigned __int8 v57 = 0;
  }
  *(unsigned char *)(v3 + 104) = v57;
  uint64_t v58 = sub_1CA5FD8A8();
  id v100 = (id)sub_1CA5CABA4(v58, v59, &qword_1EA6086E0, 0x1E4F28ED0, &qword_1EA608A30);
  swift_bridgeObjectRelease();
  if (v100) {
    unsigned __int8 v60 = [v100 sel_BOOLValue];
  }
  else {
    unsigned __int8 v60 = 0;
  }
  *(unsigned char *)(v3 + 163) = v60;
  uint64_t v61 = sub_1CA5FD8A8();
  uint64_t v63 = sub_1CA5CA954(v61, v62);
  unint64_t v65 = v64;
  swift_bridgeObjectRelease();
  if (v65) {
    uint64_t v66 = v63;
  }
  else {
    uint64_t v66 = 0;
  }
  if (v65) {
    unint64_t v67 = v65;
  }
  else {
    unint64_t v67 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v98 = sub_1CA5C5230(v66, v67);
  unint64_t v99 = v68;
  if (v68 >> 60 == 15)
  {
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    uint64_t v104 = 0;
    uint64_t v105 = 0xE000000000000000;
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    uint64_t v104 = 0xD000000000000011;
    uint64_t v105 = 0x80000001CA60CAF0;
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(v104, v105, 8, 0);
    swift_willThrow();

    sub_1CA5B736C(v103, v28);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1CA5B6EF4(*(void *)(v3 + 32), *(void *)(v3 + 40));
    sub_1CA5B736C(*(void *)(v3 + 48), *(void *)(v3 + 56));
    sub_1CA5B736C(*(void *)(v3 + 64), *(void *)(v3 + 72));
    sub_1CA5EAF58(*(void *)(v3 + 80));
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  *(void *)(v3 + 112) = v98;
  *(void *)(v3 + 120) = v99;
  uint64_t v96 = sub_1CA5FD8A8();
  uint64_t v70 = v69;
  sub_1CA5B6FE8(v98, v99);
  uint64_t v71 = sub_1CA5CA954(v96, v70);
  unint64_t v73 = v72;
  swift_bridgeObjectRelease();
  if (v73)
  {
    uint64_t v74 = sub_1CA5C5230(v71, v73);
  }
  else
  {
    uint64_t v74 = 0;
    unint64_t v75 = 0xF000000000000000;
  }
  *(void *)(v3 + 128) = v74;
  *(void *)(v3 + 136) = v75;
  uint64_t v76 = sub_1CA5FD8A8();
  uint64_t v92 = sub_1CA5CAE0C(v76, v77, &qword_1EBCB4220, &qword_1EA608A28);
  swift_bridgeObjectRelease();
  if (v92)
  {
    uint64_t v78 = *(void *)(v92 + 16);
    if (v78)
    {
      BOOL v79 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
      uint64_t v97 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v82 = *(v79 - 1);
        unint64_t v81 = *v79;
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1CA5C5230(v82, v81);
        unint64_t v94 = v84;
        uint64_t v95 = v83;
        if (v84 >> 60 != 15)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1CA5C4E68(0, v97[2] + 1, 1, v97);
          }
          unint64_t v86 = v97[2];
          unint64_t v85 = v97[3];
          int64_t v93 = v86 + 1;
          if (v86 >= v85 >> 1) {
            uint64_t v97 = sub_1CA5C4E68((void *)(v85 > 1), v93, 1, v97);
          }
          _OWORD v97[2] = v93;
          uint64_t v80 = &v97[2 * v86];
          v80[4] = v95;
          v80[5] = v94;
        }
        v79 += 2;
        --v78;
      }
      while (v78);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v97 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v97 = 0;
  }
  *(void *)(v3 + 144) = v97;
  uint64_t v87 = sub_1CA5FD8A8();
  uint64_t v89 = (void *)sub_1CA5CABA4(v87, v88, &qword_1EA6086E0, 0x1E4F28ED0, &qword_1EA608A30);
  swift_bridgeObjectRelease();
  if (v89)
  {
    id v90 = v89;
    id v91 = [v90 integerValue];

    sub_1CA5B736C(v98, v99);
    sub_1CA5B736C(v103, v28);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);

    sub_1CA5B736C(v103, v28);
    sub_1CA5B736C(v98, v99);
    id v91 = 0;
  }
  *(void *)(v3 + 152) = v91;
  *(unsigned char *)(v3 + 160) = v89 == 0;
  return v3;
}

uint64_t sub_1CA5D654C(uint64_t a1)
{
  MEMORY[0x1CB798330](8224, 0xE200000000000000);
  sub_1CA5FDB18();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  swift_bridgeObjectRetain();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5C4448(v1[4], v1[5]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
  sub_1CA5FD888();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  unint64_t v2 = v1[7];
  if (v2 >> 60 != 15)
  {
    sub_1CA5C4448(v1[6], v2);
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
  }
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  unint64_t v3 = v1[9];
  if (v3 >> 60 != 15)
  {
    sub_1CA5C4448(v1[8], v3);
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
  }
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  uint64_t result = sub_1CA5FD8F8();
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v1[11];
    unint64_t v6 = v1[10];
    sub_1CA5EAF08(v6);
    sub_1CA5D6D14(a1 + 1, v6, v5);
    sub_1CA5EAF58(v6);
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5C4448(v1[14], v1[15]);
    sub_1CA5FD888();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    unint64_t v7 = v1[17];
    if (v7 >> 60 != 15)
    {
      sub_1CA5C4448(v1[16], v7);
      sub_1CA5FD888();
      swift_bridgeObjectRelease();
    }
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    if (v1[18])
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1CA5CB5A0(v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    MEMORY[0x1CB798360](v9, MEMORY[0x1E4FBB1A0]);
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    sub_1CA5FDCA8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1CA5D6D14(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = MEMORY[0x1CB798330](8224, 0xE200000000000000, a1);
  if (a2 <= 2)
  {
    uint64_t v8 = v6;
    sub_1CA5FD8F8();
    return v8;
  }
  uint64_t v8 = v6;
  sub_1CA5FD8F8();
  uint64_t result = a1 + 1;
  if (!__OFADD__(a1, 1))
  {
    sub_1CA5D6EE4(result, a2, a3);
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5D6E30()
{
  swift_bridgeObjectRelease();
  sub_1CA5B6EF4(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_1CA5B736C(*(void *)(v0 + 48), *(void *)(v0 + 56));
  sub_1CA5B736C(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_1CA5EAF58(*(void *)(v0 + 80));
  sub_1CA5B6EF4(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_1CA5B736C(*(void *)(v0 + 128), *(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CA5D6E8C()
{
  uint64_t v0 = sub_1CA5D6E30();

  return MEMORY[0x1F4186488](v0, 165, 7);
}

uint64_t sub_1CA5D6EBC()
{
  return sub_1CA5D654C(0);
}

uint64_t sub_1CA5D6EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  MEMORY[0x1CB798330](8224, 0xE200000000000000, a1);
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  sub_1CA5FDB18();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  int64_t v6 = *(void *)(a2 + 16);
  uint64_t v75 = a3;
  if (v6)
  {
    uint64_t v89 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1CA5DE698(0, v6, 0);
    uint64_t v7 = 0;
    uint64_t v8 = v89;
    uint64_t v9 = a2 + 32;
    uint64_t v76 = a2 + 32;
    int64_t v78 = v6;
LABEL_3:
    uint64_t v10 = (uint64_t *)(v9 + 16 * v7);
    uint64_t v81 = v7 + 1;
    uint64_t v11 = *v10;
    unint64_t v83 = v10[1];
    unint64_t v12 = v83 >> 62;
    uint64_t v13 = v5;
    unint64_t v14 = HIDWORD(*v10);
    switch(v83 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(v14, v11)) {
          goto LABEL_99;
        }
        uint64_t v15 = (int)v14 - (int)v11;
LABEL_9:
        sub_1CA5B6FE8(v11, v83);
        if (!v15)
        {
LABEL_5:
          uint64_t v13 = v5;
          goto LABEL_37;
        }
LABEL_10:
        uint64_t v88 = v5;
        int64_t v18 = v15 & ~(v15 >> 63);
        sub_1CA5DE698(0, v18, 0);
        uint64_t v13 = v88;
        if (!v12)
        {
          if ((v15 & 0x8000000000000000) == 0)
          {
            uint64_t v19 = 0;
            break;
          }
          goto LABEL_104;
        }
        if (v12 == 1) {
          uint64_t v19 = (int)v11;
        }
        else {
          uint64_t v19 = *(void *)(v11 + 16);
        }
        if (v15 < 0) {
          goto LABEL_98;
        }
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v11 + 16);
        uint64_t v16 = *(void *)(v11 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_9;
        }
        goto LABEL_100;
      case 3uLL:
        goto LABEL_37;
      default:
        uint64_t v15 = BYTE6(v83);
        if (!BYTE6(v83)) {
          goto LABEL_5;
        }
        goto LABEL_10;
    }
    while (v18)
    {
      if (v12)
      {
        if (v12 == 1)
        {
          if (v19 < (int)v11 || v19 >= v11 >> 32) {
            goto LABEL_88;
          }
          uint64_t v20 = sub_1CA5FD408();
          if (!v20) {
            goto LABEL_106;
          }
          uint64_t v21 = v20;
          uint64_t v22 = sub_1CA5FD428();
          uint64_t v23 = v19 - v22;
          if (__OFSUB__(v19, v22)) {
            goto LABEL_90;
          }
        }
        else
        {
          if (v19 < *(void *)(v11 + 16)) {
            goto LABEL_87;
          }
          if (v19 >= *(void *)(v11 + 24)) {
            goto LABEL_89;
          }
          uint64_t v25 = sub_1CA5FD408();
          if (!v25) {
            goto LABEL_107;
          }
          uint64_t v21 = v25;
          uint64_t v26 = sub_1CA5FD428();
          uint64_t v23 = v19 - v26;
          if (__OFSUB__(v19, v26)) {
            goto LABEL_91;
          }
        }
        char v24 = *(unsigned char *)(v21 + v23);
      }
      else
      {
        if (v19 >= BYTE6(v83)) {
          goto LABEL_86;
        }
        uint64_t v85 = v11;
        int v86 = v83;
        __int16 v87 = WORD2(v83);
        char v24 = *((unsigned char *)&v85 + v19);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1CA6021C0;
      *(void *)(v27 + 56) = MEMORY[0x1E4FBC358];
      *(void *)(v27 + 64) = MEMORY[0x1E4FBC3B0];
      *(unsigned char *)(v27 + 32) = v24;
      uint64_t v28 = sub_1CA5FD8B8();
      uint64_t v30 = v29;
      uint64_t v88 = v13;
      unint64_t v12 = *(void *)(v13 + 16);
      unint64_t v31 = *(void *)(v13 + 24);
      if (v12 >= v31 >> 1)
      {
        sub_1CA5DE698(v31 > 1, v12 + 1, 1);
        uint64_t v13 = v88;
      }
      *(void *)(v13 + 16) = v12 + 1;
      unint64_t v32 = v13 + 16 * v12;
      *(void *)(v32 + 32) = v28;
      *(void *)(v32 + 40) = v30;
      ++v19;
      --v18;
      --v15;
      LODWORD(v12) = v83 >> 62;
      if (!v15)
      {
        uint64_t v5 = MEMORY[0x1E4FBC860];
        int64_t v6 = v78;
        uint64_t v9 = v76;
LABEL_37:
        uint64_t v85 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
        uint64_t v33 = sub_1CA5FD888();
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v11, v83);
        uint64_t v89 = v8;
        unint64_t v37 = *(void *)(v8 + 16);
        unint64_t v36 = *(void *)(v8 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1CA5DE698(v36 > 1, v37 + 1, 1);
          uint64_t v8 = v89;
        }
        *(void *)(v8 + 16) = v37 + 1;
        uint64_t v38 = v8 + 16 * v37;
        *(void *)(v38 + 32) = v33;
        *(void *)(v38 + 40) = v35;
        uint64_t v7 = v81;
        if (v81 == v6)
        {
          swift_bridgeObjectRelease();
          a3 = v75;
          goto LABEL_42;
        }
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_42:
  MEMORY[0x1CB798360](v8, MEMORY[0x1E4FBB1A0]);
  sub_1CA5FD8F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  sub_1CA5FD8F8();
  int64_t v39 = *(void *)(a3 + 16);
  uint64_t v40 = MEMORY[0x1E4FBC860];
  if (!v39)
  {
    uint64_t v42 = MEMORY[0x1E4FBC860];
    goto LABEL_83;
  }
  uint64_t v89 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1CA5DE698(0, v39, 0);
  uint64_t v41 = 0;
  uint64_t v42 = v89;
  uint64_t v80 = a3 + 32;
  int64_t v77 = v39;
  while (2)
  {
    uint64_t v43 = v41;
    uint64_t v44 = (uint64_t *)(v80 + 16 * v41);
    uint64_t v82 = v43 + 1;
    uint64_t v45 = *v44;
    unint64_t v84 = v44[1];
    unint64_t v46 = v84 >> 62;
    uint64_t v47 = v40;
    unint64_t v48 = HIDWORD(*v44);
    switch(v84 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(v48, v45)) {
          goto LABEL_102;
        }
        uint64_t v49 = (int)v48 - (int)v45;
LABEL_50:
        sub_1CA5B6FE8(v45, v84);
        if (v49)
        {
LABEL_51:
          uint64_t v88 = v40;
          int64_t v52 = v49 & ~(v49 >> 63);
          sub_1CA5DE698(0, v52, 0);
          uint64_t v47 = v88;
          uint64_t v79 = v42;
          if (!v46)
          {
            if ((v49 & 0x8000000000000000) == 0)
            {
              uint64_t v53 = 0;
              goto LABEL_58;
            }
            goto LABEL_105;
          }
          if (v46 == 1) {
            uint64_t v53 = (int)v45;
          }
          else {
            uint64_t v53 = *(void *)(v45 + 16);
          }
          if (v49 < 0) {
            goto LABEL_101;
          }
          do
          {
LABEL_58:
            if (!v52) {
              goto LABEL_85;
            }
            if (v46)
            {
              if (v46 == 1)
              {
                if (v53 < (int)v45 || v53 >= v45 >> 32) {
                  goto LABEL_94;
                }
                uint64_t v54 = sub_1CA5FD408();
                if (!v54) {
                  goto LABEL_108;
                }
                uint64_t v55 = v54;
                uint64_t v56 = sub_1CA5FD428();
                uint64_t v57 = v53 - v56;
                if (__OFSUB__(v53, v56)) {
                  goto LABEL_96;
                }
              }
              else
              {
                if (v53 < *(void *)(v45 + 16)) {
                  goto LABEL_93;
                }
                if (v53 >= *(void *)(v45 + 24)) {
                  goto LABEL_95;
                }
                uint64_t v59 = sub_1CA5FD408();
                if (!v59) {
                  goto LABEL_109;
                }
                uint64_t v55 = v59;
                uint64_t v60 = sub_1CA5FD428();
                uint64_t v57 = v53 - v60;
                if (__OFSUB__(v53, v60)) {
                  goto LABEL_97;
                }
              }
              char v58 = *(unsigned char *)(v55 + v57);
            }
            else
            {
              if (v53 >= BYTE6(v84)) {
                goto LABEL_92;
              }
              uint64_t v85 = v45;
              int v86 = v84;
              __int16 v87 = WORD2(v84);
              char v58 = *((unsigned char *)&v85 + v53);
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
            uint64_t v61 = swift_allocObject();
            *(_OWORD *)(v61 + 16) = xmmword_1CA6021C0;
            *(void *)(v61 + 56) = MEMORY[0x1E4FBC358];
            *(void *)(v61 + 64) = MEMORY[0x1E4FBC3B0];
            *(unsigned char *)(v61 + 32) = v58;
            uint64_t v62 = sub_1CA5FD8B8();
            uint64_t v64 = v63;
            uint64_t v88 = v47;
            unint64_t v46 = *(void *)(v47 + 16);
            unint64_t v65 = *(void *)(v47 + 24);
            if (v46 >= v65 >> 1)
            {
              sub_1CA5DE698(v65 > 1, v46 + 1, 1);
              uint64_t v47 = v88;
            }
            *(void *)(v47 + 16) = v46 + 1;
            unint64_t v66 = v47 + 16 * v46;
            *(void *)(v66 + 32) = v62;
            *(void *)(v66 + 40) = v64;
            ++v53;
            --v52;
            --v49;
            LODWORD(v46) = v84 >> 62;
          }
          while (v49);
          uint64_t v40 = MEMORY[0x1E4FBC860];
          int64_t v39 = v77;
          uint64_t v42 = v79;
        }
        else
        {
LABEL_46:
          uint64_t v47 = v40;
        }
LABEL_78:
        uint64_t v85 = v47;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
        uint64_t v67 = sub_1CA5FD888();
        uint64_t v69 = v68;
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v45, v84);
        uint64_t v89 = v42;
        unint64_t v71 = *(void *)(v42 + 16);
        unint64_t v70 = *(void *)(v42 + 24);
        if (v71 >= v70 >> 1)
        {
          sub_1CA5DE698(v70 > 1, v71 + 1, 1);
          uint64_t v42 = v89;
        }
        *(void *)(v42 + 16) = v71 + 1;
        uint64_t v72 = v42 + 16 * v71;
        *(void *)(v72 + 32) = v67;
        *(void *)(v72 + 40) = v69;
        uint64_t v41 = v82;
        if (v82 != v39) {
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_83:
        MEMORY[0x1CB798360](v42, MEMORY[0x1E4FBB1A0]);
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1CA5FD8F8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5FD8F8();
        uint64_t v73 = swift_bridgeObjectRetain();
        MEMORY[0x1CB798360](v73, MEMORY[0x1E4FBC358]);
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v90;
      case 2uLL:
        uint64_t v51 = *(void *)(v45 + 16);
        uint64_t v50 = *(void *)(v45 + 24);
        uint64_t v49 = v50 - v51;
        if (!__OFSUB__(v50, v51)) {
          goto LABEL_50;
        }
        goto LABEL_103;
      case 3uLL:
        goto LABEL_78;
      default:
        uint64_t v49 = BYTE6(v84);
        if (!BYTE6(v84)) {
          goto LABEL_46;
        }
        goto LABEL_51;
    }
  }
}

uint64_t sub_1CA5D792C()
{
  return sub_1CA5D6D14(0, *(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1CA5D793C(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4)
  {
    if (v4 != 1)
    {
      if (v4 == 2)
      {
        if (v5 != 2) {
          return 0;
        }
      }
      else
      {
        if (v5 < 3) {
          return 0;
        }
        uint64_t v8 = a2[1];
        uint64_t v7 = a2[2];
        uint64_t v10 = a1[1];
        uint64_t v9 = a1[2];
        if ((sub_1CA5D79E4(v4, v5) & 1) == 0 || (sub_1CA5D79E4(v10, v8) & 1) == 0 || !sub_1CA5D834C(v9, v7)) {
          return 0;
        }
      }
      return 1;
    }
    if (v5 == 1) {
      return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA5D79E4(uint64_t a1, uint64_t a2)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_1CA5B6FE8(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_1CA5B6EF4(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                uint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_1CA5B6FE8(v8, v7);
                uint64_t v23 = (char *)sub_1CA5FD408();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_1CA5FD428();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_1CA5FD418();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  int64_t v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_1CA5FD408();
                  if (v25)
                  {
                    uint64_t v26 = sub_1CA5FD428();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_1CA5FD418();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_1CA5B6EF4(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_1CA5FD408();
                if (v68)
                {
                  uint64_t v69 = sub_1CA5FD428();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_1CA5FD418();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  unint64_t v71 = &v74[-v67];
                }
                else {
                  unint64_t v71 = (char *)v70;
                }
                uint64_t v56 = v23;
                unint64_t v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                uint64_t v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                int64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_1CA5B6FE8(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1CA5FD408();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1CA5FD428();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  uint64_t v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                sub_1CA5FD418();
                unint64_t v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    uint64_t v42 = (char *)sub_1CA5FD408();
                    if (v42)
                    {
                      uint64_t v43 = sub_1CA5FD428();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_1CA5FD418();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    unint64_t v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_1CA5B6EF4(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_1CA5B6EF4(v8, v7);
LABEL_104:
                    sub_1CA5B6EF4(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v61 = (char *)sub_1CA5FD408();
                    if (v61)
                    {
                      uint64_t v62 = sub_1CA5FD428();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_1CA5FD418();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    unint64_t v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1CA5B6EF4(v8, v7);
                    sub_1CA5B6EF4(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_1CA5B6EF4(v8, v7);
                  sub_1CA5B6EF4(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                uint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_1CA5B6FE8(v8, v7);
                  uint64_t v34 = sub_1CA5FD408();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_1CA5FD428();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_1CA5FD418();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_1CA5B6EF4(v8, v7);
                  sub_1CA5B6EF4(v6, v5);
                  unint64_t v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_1CA5B6FE8(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_1CA5FD408();
                if (v48)
                {
                  uint64_t v54 = sub_1CA5FD428();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_1CA5FD418();
                unint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                uint64_t v56 = __s1;
                uint64_t v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_1CA5B6FE8(v8, v7);
                  int64_t v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                uint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_1CA5B6FE8(v8, v7);
                  uint64_t v19 = sub_1CA5FD408();
                  if (!v19)
                  {
                    sub_1CA5FD418();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_1CA5FD418();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x1CA5D831CLL);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_1CA5FD428();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_1CA5B6FE8(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_1CA5FD408();
                if (v48)
                {
                  uint64_t v49 = sub_1CA5FD428();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_1CA5FD418();
                unint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_1CA5B6FE8(v8, v7);
LABEL_121:
          sub_1CA5B6EF4(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

BOOL sub_1CA5D834C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  unint64_t v3 = (unsigned __int8 *)(a1 + 33);
  uint64_t v4 = (unsigned __int8 *)(a2 + 33);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1CA5D83B8()
{
  return sub_1CA5D6EE4(0, *v0, v0[1]);
}

BOOL sub_1CA5D83C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_1CA5D79E4(*a1, *a2) & 1) == 0 || (sub_1CA5D79E4(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_1CA5D834C(v3, v5);
}

id sub_1CA5D8448()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ExpressMode(0)) sel_init];
  qword_1EBCB4200 = (uint64_t)result;
  return result;
}

uint64_t sub_1CA5D847C()
{
  if (qword_1EA6086D0 != -1) {
    swift_once();
  }
  qword_1EA608988 = qword_1EA608990;

  return swift_retain();
}

uint64_t sub_1CA5D84E0()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults);
  uint64_t v2 = (void *)sub_1CA5FD898();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1CA5F07B4((uint64_t)v6, (uint64_t)v7, &qword_1EA608748);
  if (!v8)
  {
    sub_1CA5BA6F0((uint64_t)v7, &qword_1EA608748);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

void sub_1CA5D85F8(void *a1)
{
  uint64_t v2 = v1;
  v46[1] = *(id *)MEMORY[0x1E4F143B8];
  if ((byte_1EA60A490 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1CA602670;
    *(_WORD *)(v4 + 32) = -3200;
    *(unsigned char *)(v4 + 34) = 2;
    int v5 = v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild];
    if (v5 == 1
      && (uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults],
          int v7 = (void *)sub_1CA5FD898(),
          LOBYTE(v6) = objc_msgSend(v6, sel_BOOLForKey_, v7),
          v7,
          (v6 & 1) != 0))
    {
      char v8 = 90;
    }
    else
    {
      char v8 = -91;
    }
    *(unsigned char *)(v4 + 35) = v8;
    uint64_t v9 = sub_1CA5BA450(v4);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1CA5FD578();
    v46[0] = 0;
    id v13 = [a1 sel_transceive_error_:v12, v46];

    id v14 = v46[0];
    if (v13)
    {
      uint64_t v15 = sub_1CA5FD598();
      sub_1CA5B6EF4(v15, v16);
    }
    else
    {
      BOOL v17 = v14;
      id v13 = (id)sub_1CA5FD4B8();

      swift_willThrow();
    }

    byte_1EA60A490 = 1;
    uint64_t v18 = v2;
    uint64_t v19 = sub_1CA5FD628();
    os_log_type_t v20 = sub_1CA5FDA08();
    if (!os_log_type_enabled(v19, v20))
    {

      sub_1CA5B6EF4(v9, v11);
LABEL_17:

      goto LABEL_18;
    }
    uint64_t v21 = a1;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 67109120;
    if (v5)
    {
      uint64_t v23 = *(void **)&v18[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults];
      uint64_t v24 = (void *)sub_1CA5FD898();
      LOBYTE(v23) = [v23 sel_BOOLForKey_:v24];

      if (v23)
      {
        int v25 = 1;
LABEL_16:
        LODWORD(v46[0]) = v25;
        sub_1CA5FDA68();

        _os_log_impl(&dword_1CA552000, v19, v20, "Configured express debug : enabled %{BOOL}d", v22, 8u);
        MEMORY[0x1CB799300](v22, -1, -1);
        sub_1CA5B6EF4(v9, v11);
        a1 = v21;
        goto LABEL_17;
      }
    }
    else
    {
    }
    int v25 = 0;
    goto LABEL_16;
  }
LABEL_18:
  if (v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild] == 1)
  {
    uint64_t v26 = *(void **)&v2[OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults];
    uint64_t v27 = (void *)sub_1CA5FD898();
    LODWORD(v26) = [v26 sel_BOOLForKey_:v27];

    if (v26)
    {
      uint64_t v28 = sub_1CA5BA450((uint64_t)&unk_1F24D4170);
      unint64_t v30 = v29;
      uint64_t v31 = (void *)sub_1CA5FD578();
      v46[0] = 0;
      id v32 = [a1 sel_transceive_error_:v31 v46];

      id v33 = v46[0];
      if (v32)
      {
        uint64_t v34 = sub_1CA5FD598();
        unint64_t v36 = v35;
      }
      else
      {
        size_t v37 = v33;
        int v38 = (void *)sub_1CA5FD4B8();

        swift_willThrow();
        uint64_t v34 = 0;
        unint64_t v36 = 0xF000000000000000;
      }
      sub_1CA5B8510(v34, v36);
      sub_1CA5B8510(v34, v36);
      int64_t v39 = sub_1CA5FD628();
      os_log_type_t v40 = sub_1CA5FDA08();
      if (os_log_type_enabled(v39, v40))
      {
        size_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        v46[0] = v42;
        *(_DWORD *)size_t v41 = 136315138;
        if (v36 >> 60 == 15)
        {
          unint64_t v43 = 0xE700000000000000;
          uint64_t v44 = 0x3E726F7272653CLL;
        }
        else
        {
          sub_1CA5C4448(v34, v36);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v44 = sub_1CA5FD888();
          unint64_t v43 = v45;
          swift_bridgeObjectRelease();
        }
        sub_1CA5DDA20(v44, v43, (uint64_t *)v46);
        sub_1CA5FDA68();
        swift_bridgeObjectRelease();
        sub_1CA5B736C(v34, v36);
        sub_1CA5B736C(v34, v36);
        _os_log_impl(&dword_1CA552000, v39, v40, "Express Mode Debug Log: %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CB799300](v42, -1, -1);
        MEMORY[0x1CB799300](v41, -1, -1);
        sub_1CA5B6EF4(v28, v30);
        sub_1CA5B736C(v34, v36);
      }
      else
      {
        sub_1CA5B6EF4(v28, v30);
        sub_1CA5B736C(v34, v36);

        sub_1CA5B736C(v34, v36);
        sub_1CA5B736C(v34, v36);
      }
    }
  }
}

uint64_t sub_1CA5D8C18()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5D8C60()
{
  return sub_1CA5FDD58();
}

uint64_t sub_1CA5D8C8C()
{
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5D8CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1CA5BA450(a1);
  unint64_t v6 = v5;
  uint64_t v7 = *v2;
  unint64_t v8 = v2[1];
  unint64_t v13 = v5;
  sub_1CA5B6FE8(*v2, v8);
  sub_1CA5B6FE8(v4, v6);
  sub_1CA5CBB38(v7, v8);
  sub_1CA5B6EF4(v7, v8);
  sub_1CA5B6EF4(v4, v6);
  uint64_t v9 = sub_1CA5BA450(a2);
  unint64_t v11 = v10;
  sub_1CA5B6FE8(v4, v13);
  sub_1CA5CBB38(v9, v11);
  sub_1CA5B6EF4(v9, v11);
  sub_1CA5B6EF4(v4, v13);
  return v4;
}

uint64_t sub_1CA5D8DAC()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_1CA5FDD48();
  sub_1CA5B6FE8(v1, v2);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v1, v2);
  sub_1CA5B6FE8(v3, v4);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v3, v4);
  sub_1CA5FDD58();
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5D8E5C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_1CA5B6FE8(*v0, v2);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v1, v2);
  sub_1CA5B6FE8(v3, v4);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v3, v4);
  return sub_1CA5FDD58();
}

uint64_t sub_1CA5D8EF4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_1CA5FDD48();
  sub_1CA5B6FE8(v1, v2);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v1, v2);
  sub_1CA5B6FE8(v3, v4);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v3, v4);
  sub_1CA5FDD58();
  return sub_1CA5FDD78();
}

uint64_t sub_1CA5D8FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  if ((sub_1CA5B6C5C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  if (sub_1CA5B6C5C(v2, v3, v5, v6)) {
    return v4 ^ v7 ^ 1u;
  }
  return 0;
}

uint64_t sub_1CA5D9020()
{
  type metadata accessor for ExpressMode.PTAExpressModeManager(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1CA5FD638();
  uint64_t v2 = MEMORY[0x1E4FBC870];
  *(void *)(v0
            + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_homeEndpoints) = MEMORY[0x1E4FBC870];
  *(void *)(v0
            + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_hydraEndpoints) = v2;
  *(void *)(v0
            + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_lyonEndpoints) = v2;
  qword_1EA608990 = v0;
  return result;
}

uint64_t sub_1CA5D90CC(unint64_t a1, char a2, char a3)
{
  LOBYTE(v3) = a3;
  unint64_t v4 = a1;
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  uint64_t v54 = MEMORY[0x1E4FBC870];
  if (a1 >> 62) {
    goto LABEL_84;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1CA5FDC28())
  {
    unint64_t v6 = 0;
    char v44 = v3 & 1;
    unint64_t v47 = v4 & 0xC000000000000001;
    unint64_t v40 = v4 + 32;
    uint64_t v41 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v42 = v5;
    unint64_t v43 = v4;
LABEL_5:
    if (v47)
    {
      int v7 = (void *)MEMORY[0x1CB798560](v6, v4);
      BOOL v8 = __OFADD__(v6++, 1);
      if (v8) {
        goto LABEL_78;
      }
    }
    else
    {
      if (v6 >= *(void *)(v41 + 16)) {
        goto LABEL_79;
      }
      int v7 = *(void **)(v40 + 8 * v6);
      swift_retain();
      BOOL v8 = __OFADD__(v6++, 1);
      if (v8) {
        goto LABEL_78;
      }
    }
    uint64_t v9 = v7[4];
    unint64_t v51 = v7[5];
    uint64_t v10 = MEMORY[0x1E4FBC860];
    switch(v51 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_81;
        }
        uint64_t v3 = HIDWORD(v9) - (int)v9;
LABEL_16:
        if (!v3) {
          goto LABEL_45;
        }
        uint64_t v46 = v7;
        uint64_t v53 = MEMORY[0x1E4FBC860];
        int64_t v13 = v3 & ~(v3 >> 63);
        sub_1CA5DE698(0, v13, 0);
        int v14 = v51 >> 62;
        uint64_t v10 = v53;
        uint64_t v50 = (int)v9;
        unint64_t v48 = HIDWORD(v9);
        if (v14)
        {
          if (v51 >> 62 == 1) {
            uint64_t v15 = (int)v9;
          }
          else {
            uint64_t v15 = *(void *)(v9 + 16);
          }
          if (v3 < 0) {
            goto LABEL_80;
          }
        }
        else
        {
          if (v3 < 0) {
            goto LABEL_83;
          }
          uint64_t v15 = 0;
        }
        uint64_t v49 = v9 >> 32;
        uint64_t v52 = v9;
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v9 + 16);
        uint64_t v11 = *(void *)(v9 + 24);
        uint64_t v3 = v11 - v12;
        if (!__OFSUB__(v11, v12)) {
          goto LABEL_16;
        }
        goto LABEL_82;
      case 3uLL:
        goto LABEL_45;
      default:
        uint64_t v3 = BYTE6(v51);
        goto LABEL_16;
    }
    while (v13)
    {
      if (v14)
      {
        if (v14 == 1)
        {
          if (v15 < v50 || v15 >= v49) {
            goto LABEL_72;
          }
          uint64_t v16 = sub_1CA5FD408();
          if (!v16)
          {
            __break(1u);
LABEL_87:
            __break(1u);
          }
          uint64_t v17 = v16;
          uint64_t v18 = sub_1CA5FD428();
          uint64_t v19 = v15 - v18;
          if (__OFSUB__(v15, v18)) {
            goto LABEL_75;
          }
        }
        else
        {
          if (v15 < *(void *)(v9 + 16)) {
            goto LABEL_74;
          }
          if (v15 >= *(void *)(v9 + 24)) {
            goto LABEL_76;
          }
          uint64_t v21 = sub_1CA5FD408();
          if (!v21) {
            goto LABEL_87;
          }
          uint64_t v17 = v21;
          uint64_t v22 = sub_1CA5FD428();
          uint64_t v19 = v15 - v22;
          if (__OFSUB__(v15, v22)) {
            goto LABEL_77;
          }
        }
        char v20 = *(unsigned char *)(v17 + v19);
      }
      else
      {
        if (v15 >= BYTE6(v51)) {
          goto LABEL_73;
        }
        LOWORD(v55) = v9;
        BYTE2(v55) = BYTE2(v9);
        BYTE3(v55) = BYTE3(v9);
        BYTE4(v55) = v48;
        BYTE5(v55) = BYTE5(v9);
        BYTE6(v55) = BYTE6(v9);
        HIBYTE(v55) = HIBYTE(v9);
        LODWORD(v56) = v51;
        WORD2(v56) = WORD2(v51);
        char v20 = *((unsigned char *)&v55 + v15);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1CA6021C0;
      *(void *)(v23 + 56) = MEMORY[0x1E4FBC358];
      *(void *)(v23 + 64) = MEMORY[0x1E4FBC3B0];
      *(unsigned char *)(v23 + 32) = v20;
      uint64_t v24 = sub_1CA5FD8B8();
      uint64_t v26 = v25;
      unint64_t v4 = *(void *)(v53 + 16);
      unint64_t v27 = *(void *)(v53 + 24);
      if (v4 >= v27 >> 1) {
        sub_1CA5DE698(v27 > 1, v4 + 1, 1);
      }
      *(void *)(v53 + 16) = v4 + 1;
      unint64_t v28 = v53 + 16 * v4;
      *(void *)(v28 + 32) = v24;
      *(void *)(v28 + 40) = v26;
      ++v15;
      --v13;
      --v3;
      uint64_t v9 = v52;
      int v14 = v51 >> 62;
      if (!v3)
      {
        uint64_t v5 = v42;
        unint64_t v4 = v43;
        int v7 = v46;
LABEL_45:
        uint64_t v55 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
        sub_1CA5FD888();
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_1CA5FDC78();
        swift_bridgeObjectRelease();
        uint64_t v3 = 0x80000001CA60BB20;
        if (v29)
        {
          if (v29 != 1)
          {
            if (v29 == 2)
            {
              unint64_t v30 = 0xD000000000000012;
              unint64_t v31 = 0x80000001CA60BB60;
              goto LABEL_51;
            }
LABEL_4:
            swift_release();
            if (v6 == v5)
            {
LABEL_67:
              swift_bridgeObjectRelease();
              return v54;
            }
            goto LABEL_5;
          }
          unint64_t v31 = 0x80000001CA60BB40;
          unint64_t v30 = 0xD000000000000018;
        }
        else
        {
          unint64_t v30 = 0xD000000000000018;
          unint64_t v31 = 0x80000001CA60BB20;
        }
LABEL_51:
        if (a2)
        {
          if (a2 == 1) {
            unint64_t v32 = 0xD000000000000018;
          }
          else {
            unint64_t v32 = 0xD000000000000012;
          }
          if (a2 == 1) {
            uint64_t v3 = 0x80000001CA60BB40;
          }
          else {
            uint64_t v3 = 0x80000001CA60BB60;
          }
          if (v30 != v32) {
            goto LABEL_63;
          }
LABEL_61:
          if (v31 == v3)
          {
            swift_bridgeObjectRelease_n();
LABEL_64:
            unint64_t v34 = v7[7];
            if (v34 >> 60 == 15)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
              sub_1CA5BBD9C(0xD00000000000002ALL, 0x80000001CA60C990, 8, 0);
              swift_willThrow();
              return swift_release();
            }
            uint64_t v35 = v7[6];
            unint64_t v36 = v7[9];
            if (v36 >> 60 == 15)
            {
              sub_1CA5B6FE8(v7[6], v7[7]);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
              sub_1CA5BBD9C(0xD00000000000002DLL, 0x80000001CA60C9C0, 8, 0);
              swift_willThrow();
              sub_1CA5B736C(v35, v34);
              return swift_release();
            }
            uint64_t v37 = v7[8];
            v59[0] = v7[6];
            v59[1] = v34;
            v59[2] = v37;
            v59[3] = v36;
            char v60 = v44;
            sub_1CA5B8510(v35, v34);
            sub_1CA5B8510(v37, v36);
            sub_1CA5B8510(v35, v34);
            sub_1CA5B8510(v37, v36);
            sub_1CA5E472C((uint64_t)&v55, (uint64_t)v59);
            swift_release();
            sub_1CA5B736C(v37, v36);
            sub_1CA5B736C(v35, v34);
            uint64_t v3 = v57;
            unint64_t v38 = v58;
            sub_1CA5B6EF4(v55, v56);
            sub_1CA5B6EF4(v3, v38);
            if (v6 == v5) {
              goto LABEL_67;
            }
            goto LABEL_5;
          }
        }
        else if (v30 == 0xD000000000000018)
        {
          goto LABEL_61;
        }
LABEL_63:
        char v33 = sub_1CA5FDCB8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0) {
          goto LABEL_4;
        }
        goto LABEL_64;
      }
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1CA5D9874(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v5 = result + 56;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v21 = a2;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v9) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v3;
    if (!v18)
    {
      int64_t v3 = v17 + 1;
      if (v17 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v3);
      if (!v18)
      {
        int64_t v3 = v17 + 2;
        if (v17 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v3);
        if (!v18)
        {
          int64_t v3 = v17 + 3;
          if (v17 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v18 = *(void *)(v5 + 8 * v3);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v3 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(v2 + 48) + 40 * v11;
    char v13 = *(unsigned char *)(v12 + 32);
    long long v14 = *(_OWORD *)(v12 + 16);
    v22[0] = *(_OWORD *)v12;
    v22[1] = v14;
    char v23 = v13;
    sub_1CA5F0478((uint64_t *)v22, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    sub_1CA5E472C((uint64_t)v20, (uint64_t)v22);
    uint64_t v15 = v20[2];
    unint64_t v16 = v20[3];
    sub_1CA5B6EF4(v20[0], v20[1]);
    uint64_t result = sub_1CA5B6EF4(v15, v16);
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v3 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v3);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1CA5D9A24(char a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v125 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = 0xD000000000000018;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v7 = &OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_homeEndpoints;
    }
    else {
      uint64_t v7 = &OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_lyonEndpoints;
    }
    if (a1 == 1)
    {
      unint64_t v8 = 0x80000001CA60BB40;
    }
    else
    {
      uint64_t v6 = 0xD000000000000012;
      unint64_t v8 = 0x80000001CA60BB60;
    }
  }
  else
  {
    unint64_t v8 = 0x80000001CA60BB20;
    uint64_t v7 = &OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_hydraEndpoints;
  }
  uint64_t v9 = *(void *)(v2 + *v7);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1CA5C5230(v6, v8);
  if (v11 >> 60 == 15) {
    goto LABEL_108;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  long long v14 = (void *)sub_1CA5FD578();
  id v15 = (id)SelectByNameCmd(v14);

  uint64_t v16 = sub_1CA5FD598();
  unint64_t v18 = v17;

  int64_t v19 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v16, v18);
  *(void *)unint64_t v113 = 0;
  id v20 = [a2 transceiveAndCheckSW:v19 error:&v113];

  id v21 = *(id *)v113;
  if (!v20)
  {
    uint64_t v96 = v21;
    swift_bridgeObjectRelease();
    sub_1CA5FD4B8();

    swift_willThrow();
    sub_1CA5B736C(v12, v13);
    return;
  }
  uint64_t v98 = v12;
  unint64_t v99 = v13;
  uint64_t v22 = sub_1CA5FD598();
  sub_1CA5B6EF4(v22, v23);

  uint64_t v24 = sub_1CA5BA450((uint64_t)&unk_1F24D40D0);
  unint64_t v26 = v25;
  unint64_t v27 = (void *)sub_1CA5FD578();
  *(void *)unint64_t v113 = 0;
  id v28 = [a2 transceiveAndCheckSW:v27 error:&v113];

  id v29 = *(id *)v113;
  if (!v28)
  {
    uint64_t v97 = v29;
    swift_bridgeObjectRelease();
    sub_1CA5FD4B8();

    swift_willThrow();
LABEL_88:
    sub_1CA5B736C(v98, v99);
    sub_1CA5B6EF4(v24, v26);
    return;
  }
  uint64_t v30 = sub_1CA5FD598();
  sub_1CA5B6EF4(v30, v31);

  int64_t v32 = 0;
  uint64_t v109 = v9 + 56;
  uint64_t v33 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & *(void *)(v9 + 56);
  int64_t v110 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v101 = v9;
  unint64_t v104 = v26;
  id v102 = a2;
  uint64_t v108 = v24;
  while (1)
  {
    do
    {
      if (v35)
      {
        unint64_t v39 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        unint64_t v40 = v39 | (v32 << 6);
      }
      else
      {
        if (__OFADD__(v32++, 1)) {
          goto LABEL_99;
        }
        if (v32 >= v110)
        {
LABEL_86:
          swift_release();
          goto LABEL_88;
        }
        unint64_t v42 = *(void *)(v109 + 8 * v32);
        if (!v42)
        {
          int64_t v43 = v32 + 1;
          if (v32 + 1 >= v110) {
            goto LABEL_86;
          }
          unint64_t v42 = *(void *)(v109 + 8 * v43);
          if (!v42)
          {
            int64_t v43 = v32 + 2;
            if (v32 + 2 >= v110) {
              goto LABEL_86;
            }
            unint64_t v42 = *(void *)(v109 + 8 * v43);
            if (!v42)
            {
              int64_t v43 = v32 + 3;
              if (v32 + 3 >= v110) {
                goto LABEL_86;
              }
              unint64_t v42 = *(void *)(v109 + 8 * v43);
              if (!v42)
              {
                while (1)
                {
                  int64_t v32 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    goto LABEL_100;
                  }
                  if (v32 >= v110) {
                    goto LABEL_86;
                  }
                  unint64_t v42 = *(void *)(v109 + 8 * v32);
                  ++v43;
                  if (v42) {
                    goto LABEL_29;
                  }
                }
              }
            }
          }
          int64_t v32 = v43;
        }
LABEL_29:
        unint64_t v35 = (v42 - 1) & v42;
        unint64_t v40 = __clz(__rbit64(v42)) + (v32 << 6);
      }
      uint64_t v44 = *(void *)(v9 + 48) + 40 * v40;
      long long v46 = *(_OWORD *)v44;
      long long v45 = *(_OWORD *)(v44 + 16);
      char v117 = *(unsigned char *)(v44 + 32);
      v116[0] = v46;
      v116[1] = v45;
    }
    while ((v117 & 1) != 0);
    unint64_t v111 = v35;
    int64_t v112 = v32;
    sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    unint64_t v47 = sub_1CA5FD628();
    os_log_type_t v48 = sub_1CA5FDA08();
    if (os_log_type_enabled(v47, v48))
    {
      os_log_type_t v106 = v48;
      uint64_t v107 = v4;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v105 = (void *)swift_slowAlloc();
      id v115 = v105;
      *(_DWORD *)uint64_t v49 = 136315138;
      long long v118 = v116[0];
      sub_1CA5F04CC((uint64_t)&v118, (uint64_t)v119);
      sub_1CA5F04CC((uint64_t)v119, (uint64_t)&v123);
      unsigned __int8 v50 = BYTE6(v124);
      uint64_t v51 = MEMORY[0x1E4FBC860];
      switch(v124 >> 62)
      {
        case 1uLL:
          v124 &= 0x3FFFFFFFFFFFFFFFuLL;
          if (__OFSUB__(HIDWORD(v123), v123)) {
            goto LABEL_102;
          }
          uint64_t v103 = v49;
          uint64_t v52 = HIDWORD(v123) - (int)v123;
LABEL_42:
          if (!v52) {
            goto LABEL_72;
          }
          break;
        case 2uLL:
          uint64_t v103 = v49;
          v124 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v53 = *(void *)(v123 + 16);
          uint64_t v54 = *(void *)(v123 + 24);
          uint64_t v52 = v54 - v53;
          if (!__OFSUB__(v54, v53)) {
            goto LABEL_42;
          }
          goto LABEL_103;
        case 3uLL:
          goto LABEL_73;
        default:
          uint64_t v103 = v49;
          v124 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v52 = v50;
          goto LABEL_42;
      }
      id v100 = v47;
      uint64_t v114 = MEMORY[0x1E4FBC860];
      int64_t v55 = v52 & ~(v52 >> 63);
      sub_1CA5DE698(0, v55, 0);
      uint64_t v51 = v114;
      sub_1CA5F04CC((uint64_t)v119, (uint64_t)&v121);
      uint64_t v56 = 0;
      switch(v122 >> 62)
      {
        case 1uLL:
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v56 = (int)v121;
          goto LABEL_47;
        case 2uLL:
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v56 = *(void *)(v121 + 16);
          if ((v52 & 0x8000000000000000) == 0) {
            goto LABEL_50;
          }
          goto LABEL_101;
        case 3uLL:
LABEL_47:
          if (v52 < 0) {
            goto LABEL_101;
          }
          goto LABEL_50;
        default:
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          if (v52 < 0) {
            goto LABEL_104;
          }
          uint64_t v56 = 0;
LABEL_50:
          while (2)
          {
            if (!v55)
            {
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_106:
              sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_107:
              sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_108:
              __break(1u);
            }
            sub_1CA5F04CC((uint64_t)v119, (uint64_t)&v120);
            unsigned __int8 v57 = BYTE14(v120);
            switch(*((void *)&v120 + 1) >> 62)
            {
              case 1:
                *((void *)&v120 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v56 < (int)v120 || v56 >= SDWORD1(v120)) {
                  goto LABEL_94;
                }
                uint64_t v60 = sub_1CA5FD408();
                if (!v60) {
                  goto LABEL_106;
                }
                uint64_t v61 = v60;
                uint64_t v62 = sub_1CA5FD428();
                uint64_t v63 = v56 - v62;
                if (!__OFSUB__(v56, v62)) {
                  goto LABEL_67;
                }
                goto LABEL_96;
              case 2:
                *((void *)&v120 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v56 < *(void *)(v120 + 16)) {
                  goto LABEL_95;
                }
                if (v56 >= *(void *)(v120 + 24)) {
                  goto LABEL_97;
                }
                uint64_t v64 = sub_1CA5FD408();
                if (!v64) {
                  goto LABEL_107;
                }
                uint64_t v61 = v64;
                uint64_t v65 = sub_1CA5FD428();
                uint64_t v63 = v56 - v65;
                if (__OFSUB__(v56, v65)) {
                  goto LABEL_98;
                }
LABEL_67:
                char v58 = *(unsigned char *)(v61 + v63);
LABEL_68:
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                uint64_t v66 = swift_allocObject();
                *(_OWORD *)(v66 + 16) = xmmword_1CA6021C0;
                *(void *)(v66 + 56) = MEMORY[0x1E4FBC358];
                *(void *)(v66 + 64) = MEMORY[0x1E4FBC3B0];
                *(unsigned char *)(v66 + 32) = v58;
                uint64_t v67 = sub_1CA5FD8B8();
                uint64_t v69 = v68;
                uint64_t v114 = v51;
                unint64_t v71 = *(void *)(v51 + 16);
                unint64_t v70 = *(void *)(v51 + 24);
                if (v71 >= v70 >> 1)
                {
                  sub_1CA5DE698(v70 > 1, v71 + 1, 1);
                  uint64_t v51 = v114;
                }
                *(void *)(v51 + 16) = v71 + 1;
                uint64_t v72 = v51 + 16 * v71;
                *(void *)(v72 + 32) = v67;
                *(void *)(v72 + 40) = v69;
                ++v56;
                --v55;
                if (--v52) {
                  continue;
                }
                unint64_t v26 = v104;
                unint64_t v47 = v100;
                break;
              case 3:
                goto LABEL_105;
              default:
                *((void *)&v120 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v56 >= v57) {
                  goto LABEL_93;
                }
                *(void *)unint64_t v113 = v120;
                *(void *)&v113[6] = *(void *)((char *)&v120 + 6);
                char v58 = v113[v56];
                goto LABEL_68;
            }
            break;
          }
LABEL_72:
          uint64_t v49 = v103;
LABEL_73:
          *(void *)unint64_t v113 = v51;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v73 = sub_1CA5FD888();
          unint64_t v75 = v74;
          swift_bridgeObjectRelease();
          *(void *)(v49 + 4) = sub_1CA5DDA20(v73, v75, (uint64_t *)&v115);
          swift_bridgeObjectRelease();
          sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          _os_log_impl(&dword_1CA552000, v47, v106, "Setup Endpoint for persistent CL visibility over Identifier: %s", (uint8_t *)v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v105, -1, -1);
          MEMORY[0x1CB799300](v49, -1, -1);

          uint64_t v4 = v107;
          uint64_t v9 = v101;
          a2 = v102;
          break;
      }
    }
    else
    {

      sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
      sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
    }
    uint64_t v76 = sub_1CA5D8CD0((uint64_t)&unk_1F24D4080, (uint64_t)&unk_1F24D40A8);
    unint64_t v78 = v77;
    __int16 v79 = (void *)sub_1CA5FD578();
    if (qword_1EA608688 != -1) {
      swift_once();
    }
    sub_1CA5B84AC(0, &qword_1EA6086E0);
    char v80 = (void *)sub_1CA5FD948();
    *(void *)unint64_t v113 = 0;
    id v81 = [a2 transceiveAndCheckSW_inArray_error:v79, v80, v113];

    id v82 = *(id *)v113;
    if (v81)
    {
      uint64_t v36 = sub_1CA5FD598();
      unint64_t v38 = v37;
      sub_1CA5B6EF4(v76, v78);
      sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
      sub_1CA5B6EF4(v36, v38);

      goto LABEL_16;
    }
    char v83 = v82;
    unint64_t v84 = (void *)sub_1CA5FD4B8();

    swift_willThrow();
    *(void *)unint64_t v113 = v84;
    id v85 = v84;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A00);
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    if (!swift_dynamicCast())
    {
      swift_release();
      sub_1CA5B736C(v98, v99);
      sub_1CA5B6EF4(v108, v26);
      sub_1CA5B6EF4(v76, v78);
      goto LABEL_91;
    }
    id v86 = v115;
    id v87 = [v115 sel_domain];
    uint64_t v88 = sub_1CA5FD8A8();
    uint64_t v90 = v89;

    if (v88 != 5002305 || v90 != 0xE300000000000000) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v26 = v104;
LABEL_82:

    uint64_t v92 = sub_1CA5FD628();
    os_log_type_t v93 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v92, v93))
    {
      unint64_t v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v94 = 0;
      _os_log_impl(&dword_1CA552000, v92, v93, "Setup Failed.. continue", v94, 2u);
      uint64_t v95 = v94;
      unint64_t v26 = v104;
      MEMORY[0x1CB799300](v95, -1, -1);
    }
    sub_1CA5B6EF4(v76, v78);

    sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
    uint64_t v4 = 0;
LABEL_16:
    uint64_t v24 = v108;
    unint64_t v35 = v111;
    int64_t v32 = v112;
  }
  char v91 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  unint64_t v26 = v104;
  if (v91) {
    goto LABEL_82;
  }
  swift_release();
  sub_1CA5B736C(v98, v99);
  sub_1CA5B6EF4(v108, v104);
  sub_1CA5B6EF4(v76, v78);

LABEL_91:
  sub_1CA5F0478((uint64_t *)v116, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
}

void sub_1CA5DA6F0(char a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v123 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = 0xD000000000000018;
  uint64_t v7 = *(void *)(v2
                 + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_lyonEndpoints);
  if (a1)
  {
    if (a1 == 1)
    {
      unint64_t v8 = 0x80000001CA60BB40;
    }
    else
    {
      uint64_t v6 = 0xD000000000000012;
      unint64_t v8 = 0x80000001CA60BB60;
    }
  }
  else
  {
    unint64_t v8 = 0x80000001CA60BB20;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1CA5C5230(v6, v8);
  if (v10 >> 60 == 15) {
    goto LABEL_105;
  }
  uint64_t v11 = v9;
  unint64_t v12 = v10;
  unint64_t v13 = (void *)sub_1CA5FD578();
  id v14 = (id)SelectByNameCmd(v13);

  uint64_t v15 = sub_1CA5FD598();
  unint64_t v17 = v16;

  unint64_t v18 = (void *)sub_1CA5FD578();
  sub_1CA5B6EF4(v15, v17);
  *(void *)unint64_t v111 = 0;
  id v19 = [a2 transceiveAndCheckSW:v18 error:v111];

  id v20 = *(id *)v111;
  if (!v19)
  {
    unint64_t v94 = v20;
    swift_bridgeObjectRelease();
    sub_1CA5FD4B8();

    swift_willThrow();
    sub_1CA5B736C(v11, v12);
    return;
  }
  uint64_t v96 = v11;
  unint64_t v97 = v12;
  uint64_t v21 = sub_1CA5FD598();
  sub_1CA5B6EF4(v21, v22);

  uint64_t v23 = sub_1CA5BA450((uint64_t)&unk_1F24D4148);
  unint64_t v25 = v24;
  unint64_t v26 = (void *)sub_1CA5FD578();
  *(void *)unint64_t v111 = 0;
  id v27 = [a2 transceiveAndCheckSW:v26 error:v111];

  id v28 = *(id *)v111;
  if (!v27)
  {
    uint64_t v95 = v28;
    swift_bridgeObjectRelease();
    sub_1CA5FD4B8();

    swift_willThrow();
LABEL_85:
    sub_1CA5B736C(v96, v97);
    sub_1CA5B6EF4(v23, v25);
    return;
  }
  uint64_t v29 = sub_1CA5FD598();
  sub_1CA5B6EF4(v29, v30);

  int64_t v31 = 0;
  uint64_t v107 = v7 + 56;
  uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & *(void *)(v7 + 56);
  int64_t v108 = (unint64_t)(v32 + 63) >> 6;
  id v100 = a2;
  uint64_t v101 = v7;
  uint64_t v105 = v23;
  unint64_t v106 = v25;
  while (1)
  {
    do
    {
      if (v34)
      {
        unint64_t v38 = __clz(__rbit64(v34));
        v34 &= v34 - 1;
        unint64_t v39 = v38 | (v31 << 6);
      }
      else
      {
        if (__OFADD__(v31++, 1)) {
          goto LABEL_96;
        }
        if (v31 >= v108)
        {
LABEL_83:
          swift_release();
          goto LABEL_85;
        }
        unint64_t v41 = *(void *)(v107 + 8 * v31);
        if (!v41)
        {
          int64_t v42 = v31 + 1;
          if (v31 + 1 >= v108) {
            goto LABEL_83;
          }
          unint64_t v41 = *(void *)(v107 + 8 * v42);
          if (!v41)
          {
            int64_t v42 = v31 + 2;
            if (v31 + 2 >= v108) {
              goto LABEL_83;
            }
            unint64_t v41 = *(void *)(v107 + 8 * v42);
            if (!v41)
            {
              int64_t v42 = v31 + 3;
              if (v31 + 3 >= v108) {
                goto LABEL_83;
              }
              unint64_t v41 = *(void *)(v107 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v31 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_97;
                  }
                  if (v31 >= v108) {
                    goto LABEL_83;
                  }
                  unint64_t v41 = *(void *)(v107 + 8 * v31);
                  ++v42;
                  if (v41) {
                    goto LABEL_26;
                  }
                }
              }
            }
          }
          int64_t v31 = v42;
        }
LABEL_26:
        unint64_t v34 = (v41 - 1) & v41;
        unint64_t v39 = __clz(__rbit64(v41)) + (v31 << 6);
      }
      uint64_t v43 = *(void *)(v7 + 48) + 40 * v39;
      long long v45 = *(_OWORD *)v43;
      long long v44 = *(_OWORD *)(v43 + 16);
      char v115 = *(unsigned char *)(v43 + 32);
      v114[0] = v45;
      v114[1] = v44;
    }
    while (v115 != 1);
    unint64_t v109 = v34;
    int64_t v110 = v31;
    sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
    long long v46 = sub_1CA5FD628();
    os_log_type_t v47 = sub_1CA5FDA08();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v104 = v4;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v103 = (void *)swift_slowAlloc();
      id v113 = v103;
      *(_DWORD *)uint64_t v48 = 136315138;
      long long v116 = v114[0];
      sub_1CA5F04CC((uint64_t)&v116, (uint64_t)v117);
      sub_1CA5F04CC((uint64_t)v117, (uint64_t)&v121);
      unsigned __int8 v49 = BYTE6(v122);
      uint64_t v50 = MEMORY[0x1E4FBC860];
      switch(v122 >> 62)
      {
        case 1uLL:
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          if (__OFSUB__(HIDWORD(v121), v121)) {
            goto LABEL_99;
          }
          os_log_type_t v102 = v47;
          uint64_t v51 = HIDWORD(v121) - (int)v121;
LABEL_39:
          if (!v51) {
            goto LABEL_69;
          }
          break;
        case 2uLL:
          os_log_type_t v102 = v47;
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v52 = *(void *)(v121 + 16);
          uint64_t v53 = *(void *)(v121 + 24);
          uint64_t v51 = v53 - v52;
          if (!__OFSUB__(v53, v52)) {
            goto LABEL_39;
          }
          goto LABEL_100;
        case 3uLL:
          goto LABEL_70;
        default:
          os_log_type_t v102 = v47;
          v122 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v51 = v49;
          goto LABEL_39;
      }
      uint64_t v98 = v48;
      unint64_t v99 = v46;
      uint64_t v112 = MEMORY[0x1E4FBC860];
      int64_t v54 = v51 & ~(v51 >> 63);
      sub_1CA5DE698(0, v54, 0);
      uint64_t v50 = v112;
      sub_1CA5F04CC((uint64_t)v117, (uint64_t)&v119);
      uint64_t v55 = 0;
      switch(v120 >> 62)
      {
        case 1uLL:
          v120 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v55 = (int)v119;
          goto LABEL_44;
        case 2uLL:
          v120 &= 0x3FFFFFFFFFFFFFFFuLL;
          uint64_t v55 = *(void *)(v119 + 16);
          if ((v51 & 0x8000000000000000) == 0) {
            goto LABEL_47;
          }
          goto LABEL_98;
        case 3uLL:
LABEL_44:
          if (v51 < 0) {
            goto LABEL_98;
          }
          goto LABEL_47;
        default:
          v120 &= 0x3FFFFFFFFFFFFFFFuLL;
          if (v51 < 0) {
            goto LABEL_101;
          }
          uint64_t v55 = 0;
LABEL_47:
          while (2)
          {
            if (!v54)
            {
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
LABEL_92:
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_103:
              sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_104:
              sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
              __break(1u);
LABEL_105:
              __break(1u);
            }
            sub_1CA5F04CC((uint64_t)v117, (uint64_t)&v118);
            unsigned __int8 v56 = BYTE14(v118);
            switch(*((void *)&v118 + 1) >> 62)
            {
              case 1:
                *((void *)&v118 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v55 < (int)v118 || v55 >= SDWORD1(v118)) {
                  goto LABEL_91;
                }
                uint64_t v59 = sub_1CA5FD408();
                if (!v59) {
                  goto LABEL_103;
                }
                uint64_t v60 = v59;
                uint64_t v61 = sub_1CA5FD428();
                uint64_t v62 = v55 - v61;
                if (!__OFSUB__(v55, v61)) {
                  goto LABEL_64;
                }
                goto LABEL_93;
              case 2:
                *((void *)&v118 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v55 < *(void *)(v118 + 16)) {
                  goto LABEL_92;
                }
                if (v55 >= *(void *)(v118 + 24)) {
                  goto LABEL_94;
                }
                uint64_t v63 = sub_1CA5FD408();
                if (!v63) {
                  goto LABEL_104;
                }
                uint64_t v60 = v63;
                uint64_t v64 = sub_1CA5FD428();
                uint64_t v62 = v55 - v64;
                if (__OFSUB__(v55, v64)) {
                  goto LABEL_95;
                }
LABEL_64:
                char v57 = *(unsigned char *)(v60 + v62);
LABEL_65:
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                uint64_t v65 = swift_allocObject();
                *(_OWORD *)(v65 + 16) = xmmword_1CA6021C0;
                *(void *)(v65 + 56) = MEMORY[0x1E4FBC358];
                *(void *)(v65 + 64) = MEMORY[0x1E4FBC3B0];
                *(unsigned char *)(v65 + 32) = v57;
                uint64_t v66 = sub_1CA5FD8B8();
                uint64_t v68 = v67;
                uint64_t v112 = v50;
                unint64_t v70 = *(void *)(v50 + 16);
                unint64_t v69 = *(void *)(v50 + 24);
                if (v70 >= v69 >> 1)
                {
                  sub_1CA5DE698(v69 > 1, v70 + 1, 1);
                  uint64_t v50 = v112;
                }
                *(void *)(v50 + 16) = v70 + 1;
                uint64_t v71 = v50 + 16 * v70;
                *(void *)(v71 + 32) = v66;
                *(void *)(v71 + 40) = v68;
                ++v55;
                --v54;
                if (--v51) {
                  continue;
                }
                uint64_t v48 = v98;
                long long v46 = v99;
                break;
              case 3:
                goto LABEL_102;
              default:
                *((void *)&v118 + 1) &= 0x3FFFFFFFFFFFFFFFuLL;
                if (v55 >= v56) {
                  goto LABEL_90;
                }
                *(void *)unint64_t v111 = v118;
                *(void *)&v111[6] = *(void *)((char *)&v118 + 6);
                char v57 = v111[v55];
                goto LABEL_65;
            }
            break;
          }
LABEL_69:
          os_log_type_t v47 = v102;
LABEL_70:
          *(void *)unint64_t v111 = v50;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v72 = sub_1CA5FD888();
          unint64_t v74 = v73;
          swift_bridgeObjectRelease();
          *(void *)(v48 + 4) = sub_1CA5DDA20(v72, v74, (uint64_t *)&v113);
          swift_bridgeObjectRelease();
          sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
          _os_log_impl(&dword_1CA552000, v46, v47, "Setup Endpoint for persistent BT visibility over Identifier: %s", (uint8_t *)v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CB799300](v103, -1, -1);
          MEMORY[0x1CB799300](v48, -1, -1);

          uint64_t v4 = v104;
          a2 = v100;
          uint64_t v7 = v101;
          break;
      }
    }
    else
    {

      sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
      sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
    }
    uint64_t v75 = sub_1CA5D8CD0((uint64_t)&unk_1F24D40F8, (uint64_t)&unk_1F24D4120);
    unint64_t v77 = v76;
    unint64_t v78 = (void *)sub_1CA5FD578();
    if (qword_1EA608688 != -1) {
      swift_once();
    }
    sub_1CA5B84AC(0, &qword_1EA6086E0);
    __int16 v79 = (void *)sub_1CA5FD948();
    *(void *)unint64_t v111 = 0;
    id v80 = [a2 transceiveAndCheckSW:v78 inArray:v79 error:v111];

    id v81 = *(id *)v111;
    if (v80)
    {
      uint64_t v35 = sub_1CA5FD598();
      unint64_t v37 = v36;
      sub_1CA5B6EF4(v75, v77);
      sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
      sub_1CA5B6EF4(v35, v37);

      goto LABEL_13;
    }
    id v82 = v81;
    char v83 = (void *)sub_1CA5FD4B8();

    swift_willThrow();
    *(void *)unint64_t v111 = v83;
    id v84 = v83;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A00);
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    if (!swift_dynamicCast())
    {
      swift_release();
      sub_1CA5B736C(v96, v97);
      sub_1CA5B6EF4(v105, v106);
      sub_1CA5B6EF4(v75, v77);
      goto LABEL_88;
    }
    id v85 = v113;
    id v86 = [v113 sel_domain];
    uint64_t v87 = sub_1CA5FD8A8();
    uint64_t v89 = v88;

    if (v87 != 5002305 || v89 != 0xE300000000000000) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_79:

    char v91 = sub_1CA5FD628();
    os_log_type_t v92 = sub_1CA5FD9E8();
    if (os_log_type_enabled(v91, v92))
    {
      os_log_type_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v93 = 0;
      _os_log_impl(&dword_1CA552000, v91, v92, "Setup Failed.. continue", v93, 2u);
      MEMORY[0x1CB799300](v93, -1, -1);
    }
    sub_1CA5B6EF4(v75, v77);

    sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
    uint64_t v4 = 0;
LABEL_13:
    uint64_t v23 = v105;
    unint64_t v25 = v106;
    unint64_t v34 = v109;
    int64_t v31 = v110;
  }
  char v90 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v90) {
    goto LABEL_79;
  }
  swift_release();
  sub_1CA5B736C(v96, v97);
  sub_1CA5B6EF4(v105, v106);
  sub_1CA5B6EF4(v75, v77);

LABEL_88:
  sub_1CA5F0478((uint64_t *)v114, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
}

uint64_t sub_1CA5DB384()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC24AppletTranslationLibrary11ExpressModeP33_F6A5673F67A2A086B8B4649671CBFF8221PTAExpressModeManager_logger;
  uint64_t v2 = sub_1CA5FD648();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v3, v4);
}

id sub_1CA5DB454()
{
  uint64_t v1 = v0;
  sub_1CA5FD638();
  uint64_t v2 = sub_1CA5FD8A8();
  unint64_t v4 = v3;
  uint64_t v50 = v2;
  unint64_t v51 = v3;
  uint64_t v5 = sub_1CA5FD8A8();
  unint64_t v7 = v6;
  uint64_t v52 = v5;
  unint64_t v53 = v6;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  sub_1CA5DE758(0, 2, 0);
  uint64_t v8 = v49;
  swift_bridgeObjectRetain_n();
  id result = (id)sub_1CA5C5230(v2, v4);
  if (v10 >> 60 == 15) {
    goto LABEL_8;
  }
  id v11 = result;
  unint64_t v12 = v10;
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v49 + 16);
  unint64_t v13 = *(void *)(v49 + 24);
  if (v14 >= v13 >> 1)
  {
    sub_1CA5DE758(v13 > 1, v14 + 1, 1);
    uint64_t v8 = v49;
  }
  *(void *)(v8 + 16) = v14 + 1;
  uint64_t v15 = v8 + 16 * v14;
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v12;
  swift_bridgeObjectRetain_n();
  id result = (id)sub_1CA5C5230(v5, v7);
  if (v16 >> 60 == 15)
  {
LABEL_8:
    __break(1u);
  }
  else
  {
    id v17 = result;
    unint64_t v18 = v16;
    swift_bridgeObjectRelease();
    uint64_t v49 = v8;
    unint64_t v20 = *(void *)(v8 + 16);
    unint64_t v19 = *(void *)(v8 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1CA5DE758(v19 > 1, v20 + 1, 1);
      uint64_t v8 = v49;
    }
    *(void *)(v8 + 16) = v20 + 1;
    uint64_t v21 = v8 + 16 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    uint64_t v22 = OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_modulesRequiringSlowPath;
    swift_arrayDestroy();
    *(void *)&v1[v22] = v8;
    uint64_t v23 = OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_reservedTCIs;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CA602B10;
    *(void *)(inited + 32) = sub_1CA5BA450((uint64_t)&unk_1F24D4198);
    *(void *)(inited + 40) = v25;
    *(void *)(inited + 48) = sub_1CA5BA450((uint64_t)&unk_1F24D41C0);
    *(void *)(inited + 56) = v26;
    *(void *)(inited + 64) = sub_1CA5BA450((uint64_t)&unk_1F24D41E8);
    *(void *)(inited + 72) = v27;
    *(void *)(inited + 80) = sub_1CA5BA450((uint64_t)&unk_1F24D4210);
    *(void *)(inited + 88) = v28;
    *(void *)(inited + 96) = sub_1CA5BA450((uint64_t)&unk_1F24D4238);
    *(void *)(inited + 104) = v29;
    *(void *)(inited + 112) = sub_1CA5BA450((uint64_t)&unk_1F24D4260);
    *(void *)(inited + 120) = v30;
    *(void *)(inited + 128) = sub_1CA5BA450((uint64_t)&unk_1F24D4288);
    *(void *)(inited + 136) = v31;
    *(void *)(inited + 144) = sub_1CA5BA450((uint64_t)&unk_1F24D42B0);
    *(void *)(inited + 152) = v32;
    *(void *)(inited + 160) = sub_1CA5BA450((uint64_t)&unk_1F24D42D8);
    *(void *)(inited + 168) = v33;
    *(void *)(inited + 176) = sub_1CA5BA450((uint64_t)&unk_1F24D4300);
    *(void *)(inited + 184) = v34;
    *(void *)(inited + 192) = sub_1CA5BA450((uint64_t)&unk_1F24D4328);
    *(void *)(inited + 200) = v35;
    *(void *)(inited + 208) = sub_1CA5BA450((uint64_t)&unk_1F24D4350);
    *(void *)(inited + 216) = v36;
    *(void *)(inited + 224) = sub_1CA5BA450((uint64_t)&unk_1F24D4378);
    *(void *)(inited + 232) = v37;
    *(void *)(inited + 240) = sub_1CA5BA450((uint64_t)&unk_1F24D43A0);
    *(void *)(inited + 248) = v38;
    *(void *)(inited + 256) = sub_1CA5BA450((uint64_t)&unk_1F24D43C8);
    *(void *)(inited + 264) = v39;
    *(void *)(inited + 272) = sub_1CA5BA450((uint64_t)&unk_1F24D43F0);
    *(void *)(inited + 280) = v40;
    *(void *)(inited + 288) = sub_1CA5BA450((uint64_t)&unk_1F24D4418);
    *(void *)(inited + 296) = v41;
    *(void *)(inited + 304) = sub_1CA5BA450((uint64_t)&unk_1F24D4440);
    *(void *)(inited + 312) = v42;
    *(void *)(inited + 320) = sub_1CA5BA450((uint64_t)&unk_1F24D4468);
    *(void *)(inited + 328) = v43;
    *(void *)(inited + 336) = sub_1CA5BA450((uint64_t)&unk_1F24D4490);
    *(void *)(inited + 344) = v44;
    uint64_t v45 = sub_1CA5ED118(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    *(void *)&v1[v23] = v45;
    uint64_t v46 = OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_internalBuild;
    self;
    v1[v46] = +[AppletTranslator isInternalBuild]();
    uint64_t v47 = OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_userDefaults;
    *(void *)&v1[v47] = +[AppletTranslator userDefaults]();

    v48.receiver = v1;
    v48.super_class = (Class)type metadata accessor for ExpressMode(0);
    return [super init];
  }
  return result;
}

id sub_1CA5DB86C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpressMode(0);
  return [super dealloc];
}

uint64_t sub_1CA5DB944()
{
  return type metadata accessor for ExpressMode(0);
}

uint64_t type metadata accessor for ExpressMode(uint64_t a1)
{
  return sub_1CA5DBA70(a1, (uint64_t *)&unk_1EBCB4210);
}

uint64_t sub_1CA5DB96C()
{
  uint64_t result = sub_1CA5FD648();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExpressMode.PassConfig()
{
  return self;
}

uint64_t sub_1CA5DBA48()
{
  return type metadata accessor for ExpressMode.PTAExpressModeManager(0);
}

uint64_t type metadata accessor for ExpressMode.PTAExpressModeManager(uint64_t a1)
{
  return sub_1CA5DBA70(a1, (uint64_t *)&unk_1EA6089B8);
}

uint64_t sub_1CA5DBA70(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1CA5DBAA8()
{
  uint64_t result = sub_1CA5FD648();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t *a1)
{
  sub_1CA5B6EF4(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];

  return sub_1CA5B6EF4(v2, v3);
}

uint64_t initializeWithCopy for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1CA5B6FE8(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_1CA5B6FE8(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1CA5B6FE8(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1CA5B6EF4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1CA5B6FE8(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_1CA5B6EF4(v10, v11);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CA5B6EF4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1CA5B6EF4(v6, v7);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpressMode.PTAExpressModeManager.PTAEndpointConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressMode.PTAExpressModeManager.PTAEndpointConfig()
{
  return &type metadata for ExpressMode.PTAExpressModeManager.PTAEndpointConfig;
}

unint64_t destroy for ExpressMode.ExpressInfo(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s24AppletTranslationLibrary11ExpressModeC11ExpressInfoOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for ExpressMode.ExpressInfo(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExpressMode.ExpressInfo(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressMode.ExpressInfo(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ExpressMode.ExpressInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1CA5DC060(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1CA5DC078(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ExpressMode.ExpressInfo()
{
  return &type metadata for ExpressMode.ExpressInfo;
}

unint64_t sub_1CA5DC0AC()
{
  unint64_t result = qword_1EA6089C8;
  if (!qword_1EA6089C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6089C8);
  }
  return result;
}

uint64_t sub_1CA5DC100@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1CA5B6FE8(a2, a3);
      uint64_t v10 = (char *)sub_1CA5FD408();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1CA5FD428();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1CA5FD418();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1CA5DC364);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      long long __s1 = sub_1CA5B6EF4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      id v17 = (char *)sub_1CA5FD408();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1CA5FD428();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1CA5FD418();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      long long __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        long long __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1CA5DC374(uint64_t a1, uint64_t a2)
{
  uint64_t v173 = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v2 = 0;
    uint64_t v3 = a1 + 56;
    uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(a1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = a2 + 56;
    uint64_t v166 = a2;
    uint64_t v159 = a2 + 56;
    uint64_t v143 = a1 + 56;
    uint64_t v144 = a1;
    int64_t v142 = v7;
    if (v6) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_274;
    }
    if (v10 < v7)
    {
      unint64_t v11 = *(void *)(v3 + 8 * v10);
      int64_t v12 = v2 + 1;
      if (v11) {
        goto LABEL_23;
      }
      int64_t v12 = v10 + 1;
      if (v10 + 1 < v7)
      {
        unint64_t v11 = *(void *)(v3 + 8 * v12);
        if (v11) {
          goto LABEL_23;
        }
        int64_t v12 = v10 + 2;
        if (v10 + 2 < v7)
        {
          unint64_t v11 = *(void *)(v3 + 8 * v12);
          if (v11) {
            goto LABEL_23;
          }
          int64_t v12 = v10 + 3;
          if (v10 + 3 < v7)
          {
            unint64_t v11 = *(void *)(v3 + 8 * v12);
            if (v11) {
              goto LABEL_23;
            }
            int64_t v13 = v10 + 4;
            if (v13 < v7)
            {
              unint64_t v11 = *(void *)(v3 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_299;
                  }
                  if (v12 >= v7) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v3 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v13;
LABEL_23:
              uint64_t v148 = (v11 - 1) & v11;
              int64_t v149 = v12;
              unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
              while (1)
              {
                uint64_t v14 = *(void *)(a1 + 48) + 40 * v9;
                uint64_t v15 = *(void *)v14;
                unint64_t v16 = *(void *)(v14 + 8);
                uint64_t v17 = *(void *)(v14 + 16);
                unint64_t v18 = *(void *)(v14 + 24);
                int v19 = *(unsigned __int8 *)(v14 + 32);
                uint64_t v20 = a2;
                sub_1CA5FDD48();
                sub_1CA5B6FE8(v15, v16);
                sub_1CA5B6FE8(v17, v18);
                sub_1CA5B6FE8(v15, v16);
                sub_1CA5FD5A8();
                uint64_t v168 = v15;
                unint64_t v162 = v16;
                sub_1CA5B6EF4(v15, v16);
                sub_1CA5B6FE8(v17, v18);
                sub_1CA5FD5A8();
                uint64_t v161 = v17;
                unint64_t v158 = v18;
                sub_1CA5B6EF4(v17, v18);
                int v157 = v19;
                sub_1CA5FDD58();
                uint64_t v21 = sub_1CA5FDD78();
                uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
                unint64_t v23 = v21 & ~v22;
                if (((*(void *)(v8 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                  break;
                }
                uint64_t v24 = v20;
                uint64_t v25 = (char *)(v16 >> 62);
                unint64_t v164 = v18 >> 62;
                uint64_t v26 = ~v22;
                BOOL v27 = __OFSUB__(HIDWORD(v168), v168);
                BOOL v160 = v27;
                size_t v28 = BYTE6(v16);
                uint64_t v154 = v168 >> 32;
                uint64_t v153 = (v168 >> 32) - (int)v168;
                unint64_t v152 = HIDWORD(v17);
                BOOL v29 = __OFSUB__(HIDWORD(v17), v17);
                BOOL v156 = v29;
                uint64_t v155 = HIDWORD(v17) - (int)v17;
                uint64_t v150 = (v17 >> 32) - (int)v17;
                uint64_t v151 = v17 >> 32;
                unint64_t v163 = v16 >> 62;
                uint64_t v165 = ~v22;
                while (2)
                {
                  uint64_t v30 = *(void *)(v24 + 48) + 40 * v23;
                  uint64_t v31 = *(void *)v30;
                  unint64_t v32 = *(void *)(v30 + 8);
                  uint64_t v33 = *(void *)(v30 + 16);
                  unint64_t v34 = *(void *)(v30 + 24);
                  uint64_t v35 = 0;
                  switch(v32 >> 62)
                  {
                    case 1uLL:
                      LODWORD(v35) = HIDWORD(v31) - v31;
                      if (__OFSUB__(HIDWORD(v31), v31))
                      {
                        __break(1u);
LABEL_253:
                        __break(1u);
LABEL_254:
                        __break(1u);
LABEL_255:
                        __break(1u);
LABEL_256:
                        __break(1u);
LABEL_257:
                        __break(1u);
LABEL_258:
                        __break(1u);
LABEL_259:
                        __break(1u);
LABEL_260:
                        __break(1u);
LABEL_261:
                        __break(1u);
LABEL_262:
                        __break(1u);
LABEL_263:
                        __break(1u);
LABEL_264:
                        __break(1u);
LABEL_265:
                        __break(1u);
LABEL_266:
                        __break(1u);
LABEL_267:
                        __break(1u);
LABEL_268:
                        __break(1u);
LABEL_269:
                        __break(1u);
LABEL_270:
                        __break(1u);
LABEL_271:
                        __break(1u);
LABEL_272:
                        __break(1u);
LABEL_273:
                        __break(1u);
LABEL_274:
                        __break(1u);
LABEL_275:
                        __break(1u);
LABEL_276:
                        __break(1u);
LABEL_277:
                        __break(1u);
LABEL_278:
                        __break(1u);
LABEL_279:
                        __break(1u);
LABEL_280:
                        __break(1u);
LABEL_281:
                        __break(1u);
LABEL_282:
                        __break(1u);
LABEL_283:
                        __break(1u);
LABEL_284:
                        __break(1u);
LABEL_285:
                        __break(1u);
LABEL_286:
                        __break(1u);
LABEL_287:
                        __break(1u);
LABEL_288:
                        __break(1u);
LABEL_289:
                        __break(1u);
LABEL_290:
                        __break(1u);
LABEL_291:
                        __break(1u);
LABEL_292:
                        __break(1u);
LABEL_293:
                        __break(1u);
LABEL_294:
                        __break(1u);
LABEL_295:
                        __break(1u);
LABEL_296:
                        __break(1u);
LABEL_297:
                        __break(1u);
LABEL_298:
                        __break(1u);
LABEL_299:
                        __break(1u);
                      }
                      uint64_t v35 = (int)v35;
LABEL_40:
                      size_t v39 = v28;
                      switch((int)v25)
                      {
                        case 1:
                          size_t v39 = HIDWORD(v168) - (int)v168;
                          if (v160) {
                            goto LABEL_254;
                          }
                          goto LABEL_44;
                        case 2:
                          uint64_t v41 = *(void *)(v168 + 16);
                          uint64_t v40 = *(void *)(v168 + 24);
                          BOOL v38 = __OFSUB__(v40, v41);
                          size_t v39 = v40 - v41;
                          if (!v38) {
                            goto LABEL_44;
                          }
                          goto LABEL_255;
                        case 3:
                          if (!v35) {
                            goto LABEL_55;
                          }
                          goto LABEL_34;
                        default:
LABEL_44:
                          if (v35 != v39) {
                            goto LABEL_34;
                          }
                          if (v35 < 1)
                          {
LABEL_55:
                            int v167 = *(unsigned __int8 *)(v30 + 32);
                            sub_1CA5B6FE8(v31, v32);
                            sub_1CA5B6FE8(v33, v34);
                          }
                          else
                          {
                            int v167 = *(unsigned __int8 *)(v30 + 32);
                            switch(v32 >> 62)
                            {
                              case 1uLL:
                                if ((int)v31 > v31 >> 32) {
                                  goto LABEL_260;
                                }
                                sub_1CA5B6FE8(v31, v32);
                                sub_1CA5B6FE8(v33, v34);
                                sub_1CA5B6FE8(v31, v32);
                                unsigned __int8 v56 = (char *)sub_1CA5FD408();
                                if (!v56) {
                                  goto LABEL_79;
                                }
                                uint64_t v57 = sub_1CA5FD428();
                                if (__OFSUB__((int)v31, v57)) {
                                  goto LABEL_262;
                                }
                                v56 += (int)v31 - v57;
LABEL_79:
                                sub_1CA5FD418();
                                if (!v163)
                                {
                                  *(void *)long long __s1 = v168;
                                  *(_DWORD *)&__s1[8] = v162;
                                  *(_WORD *)&__s1[12] = WORD2(v162);
                                  if (!v56) {
                                    goto LABEL_311;
                                  }
                                  int v62 = memcmp(v56, __s1, v28);
                                  uint64_t v74 = v31;
                                  unint64_t v75 = v32;
                                  goto LABEL_146;
                                }
                                if (v163 == 1)
                                {
                                  if (v154 < (int)v168) {
                                    goto LABEL_271;
                                  }
                                  swift_retain();
                                  char v58 = (char *)sub_1CA5FD408();
                                  if (v58)
                                  {
                                    uint64_t v59 = sub_1CA5FD428();
                                    if (__OFSUB__((int)v168, v59)) {
                                      goto LABEL_280;
                                    }
                                    v58 += (int)v168 - v59;
                                  }
                                  uint64_t v60 = sub_1CA5FD418();
                                  size_t v61 = (v168 >> 32) - (int)v168;
                                  if (v60 < v153) {
                                    size_t v61 = v60;
                                  }
                                  if (!v56) {
                                    goto LABEL_301;
                                  }
                                  if (!v58) {
                                    goto LABEL_302;
                                  }
                                  int v62 = memcmp(v56, v58, v61);
                                  sub_1CA5B6EF4(v168, v162);
                                }
                                else
                                {
                                  uint64_t v93 = *(void *)(v168 + 16);
                                  uint64_t v92 = *(void *)(v168 + 24);
                                  swift_retain();
                                  swift_retain();
                                  unint64_t v94 = (char *)sub_1CA5FD408();
                                  if (v94)
                                  {
                                    uint64_t v95 = sub_1CA5FD428();
                                    if (__OFSUB__(v93, v95)) {
                                      goto LABEL_279;
                                    }
                                    v94 += v93 - v95;
                                  }
                                  BOOL v38 = __OFSUB__(v92, v93);
                                  int64_t v96 = v92 - v93;
                                  if (v38) {
                                    goto LABEL_272;
                                  }
                                  uint64_t v97 = sub_1CA5FD418();
                                  if (v97 >= v96) {
                                    size_t v98 = v96;
                                  }
                                  else {
                                    size_t v98 = v97;
                                  }
                                  uint64_t v8 = v159;
                                  if (!v56) {
                                    goto LABEL_312;
                                  }
                                  if (!v94) {
                                    goto LABEL_313;
                                  }
                                  int v62 = memcmp(v56, v94, v98);
                                  swift_release();
                                  swift_release();
                                }
                                sub_1CA5B6EF4(v31, v32);
                                goto LABEL_158;
                              case 2uLL:
                                uint64_t v63 = *(void *)(v31 + 16);
                                sub_1CA5B6FE8(v31, v32);
                                sub_1CA5B6FE8(v33, v34);
                                swift_retain();
                                swift_retain();
                                uint64_t v64 = (char *)sub_1CA5FD408();
                                if (!v64) {
                                  goto LABEL_93;
                                }
                                uint64_t v65 = sub_1CA5FD428();
                                if (__OFSUB__(v63, v65)) {
                                  goto LABEL_261;
                                }
                                v64 += v63 - v65;
LABEL_93:
                                sub_1CA5FD418();
                                uint64_t v8 = v159;
                                if (v163)
                                {
                                  if (v163 == 1)
                                  {
                                    if (v154 < (int)v168) {
                                      goto LABEL_265;
                                    }
                                    swift_retain();
                                    uint64_t v66 = (char *)sub_1CA5FD408();
                                    if (v66)
                                    {
                                      uint64_t v67 = sub_1CA5FD428();
                                      if (__OFSUB__((int)v168, v67)) {
                                        goto LABEL_278;
                                      }
                                      v66 += (int)v168 - v67;
                                    }
                                    uint64_t v68 = sub_1CA5FD418();
                                    size_t v69 = (v168 >> 32) - (int)v168;
                                    if (v68 < v153) {
                                      size_t v69 = v68;
                                    }
                                    if (!v64) {
                                      goto LABEL_303;
                                    }
                                    if (!v66) {
                                      goto LABEL_304;
                                    }
                                    int v62 = memcmp(v64, v66, v69);
                                    sub_1CA5B6EF4(v168, v162);
                                    swift_release();
                                  }
                                  else
                                  {
                                    uint64_t v86 = *(void *)(v168 + 16);
                                    uint64_t v145 = *(void *)(v168 + 24);
                                    swift_retain();
                                    swift_retain();
                                    uint64_t v87 = (char *)sub_1CA5FD408();
                                    if (v87)
                                    {
                                      uint64_t v88 = sub_1CA5FD428();
                                      if (__OFSUB__(v86, v88)) {
                                        goto LABEL_277;
                                      }
                                      v87 += v86 - v88;
                                    }
                                    BOOL v38 = __OFSUB__(v145, v86);
                                    int64_t v89 = v145 - v86;
                                    if (v38) {
                                      goto LABEL_270;
                                    }
                                    uint64_t v90 = sub_1CA5FD418();
                                    if (v90 >= v89) {
                                      size_t v91 = v89;
                                    }
                                    else {
                                      size_t v91 = v90;
                                    }
                                    if (!v64) {
                                      goto LABEL_309;
                                    }
                                    if (!v87) {
                                      goto LABEL_310;
                                    }
                                    int v62 = memcmp(v64, v87, v91);
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                  }
                                  swift_release();
                                  uint64_t v8 = v159;
                                }
                                else
                                {
                                  *(void *)long long __s1 = v168;
                                  *(_DWORD *)&__s1[8] = v162;
                                  *(_WORD *)&__s1[12] = WORD2(v162);
                                  if (!v64) {
                                    goto LABEL_308;
                                  }
                                  int v62 = memcmp(v64, __s1, v28);
                                  swift_release();
                                  swift_release();
                                }
                                goto LABEL_158;
                              case 3uLL:
                                *(void *)&__s1[6] = 0;
                                *(void *)long long __s1 = 0;
                                if (!v25) {
                                  goto LABEL_113;
                                }
                                if (v25 == 1)
                                {
                                  if (v154 < (int)v168) {
                                    goto LABEL_264;
                                  }
                                  sub_1CA5B6FE8(v168, v162);
                                  sub_1CA5B6FE8(v31, v32);
                                  sub_1CA5B6FE8(v33, v34);
                                  uint64_t v70 = sub_1CA5FD408();
                                  if (!v70) {
                                    goto LABEL_305;
                                  }
                                  uint64_t v43 = v70;
                                  uint64_t v71 = sub_1CA5FD428();
                                  uint64_t v45 = (int)v168 - v71;
                                  if (__OFSUB__((int)v168, v71)) {
                                    goto LABEL_269;
                                  }
                                  goto LABEL_109;
                                }
                                uint64_t v81 = *(void *)(v168 + 16);
                                uint64_t v82 = *(void *)(v168 + 24);
                                sub_1CA5B6FE8(v31, v32);
                                sub_1CA5B6FE8(v33, v34);
                                swift_retain();
                                swift_retain();
                                uint64_t v25 = (char *)sub_1CA5FD408();
                                if (v25)
                                {
                                  uint64_t v83 = sub_1CA5FD428();
                                  if (__OFSUB__(v81, v83)) {
                                    goto LABEL_276;
                                  }
                                  v25 += v81 - v83;
                                }
                                BOOL v38 = __OFSUB__(v82, v81);
                                int64_t v79 = v82 - v81;
                                if (v38) {
                                  goto LABEL_267;
                                }
                                uint64_t v80 = sub_1CA5FD418();
                                uint64_t v8 = v159;
                                if (!v25) {
                                  goto LABEL_307;
                                }
                                goto LABEL_126;
                              default:
                                *(void *)long long __s1 = *(void *)v30;
                                *(_WORD *)&__s1[8] = v32;
                                __s1[10] = BYTE2(v32);
                                __s1[11] = BYTE3(v32);
                                __s1[12] = BYTE4(v32);
                                __s1[13] = BYTE5(v32);
                                if (v25)
                                {
                                  if (v25 == 1)
                                  {
                                    if (v154 < (int)v168) {
                                      goto LABEL_263;
                                    }
                                    sub_1CA5B6FE8(v168, v162);
                                    sub_1CA5B6FE8(v31, v32);
                                    sub_1CA5B6FE8(v33, v34);
                                    uint64_t v42 = sub_1CA5FD408();
                                    if (!v42)
                                    {
                                      sub_1CA5FD418();
                                      __break(1u);
LABEL_301:
                                      __break(1u);
LABEL_302:
                                      __break(1u);
LABEL_303:
                                      __break(1u);
LABEL_304:
                                      __break(1u);
LABEL_305:
                                      sub_1CA5FD418();
                                      __break(1u);
LABEL_306:
                                      __break(1u);
LABEL_307:
                                      __break(1u);
LABEL_308:
                                      __break(1u);
LABEL_309:
                                      __break(1u);
LABEL_310:
                                      __break(1u);
LABEL_311:
                                      __break(1u);
LABEL_312:
                                      __break(1u);
LABEL_313:
                                      __break(1u);
LABEL_314:
                                      sub_1CA5FD418();
                                      __break(1u);
LABEL_315:
                                      __break(1u);
LABEL_316:
                                      __break(1u);
LABEL_317:
                                      sub_1CA5FD418();
                                      __break(1u);
LABEL_318:
                                      __break(1u);
LABEL_319:
                                      __break(1u);
LABEL_320:
                                      __break(1u);
LABEL_321:
                                      __break(1u);
LABEL_322:
                                      __break(1u);
LABEL_323:
                                      __break(1u);
LABEL_324:
                                      __break(1u);
LABEL_325:
                                      __break(1u);
LABEL_326:
                                      __break(1u);
LABEL_327:
                                      __break(1u);
                                      JUMPOUT(0x1CA5DD8A4);
                                    }
                                    uint64_t v43 = v42;
                                    uint64_t v44 = sub_1CA5FD428();
                                    uint64_t v45 = (int)v168 - v44;
                                    if (__OFSUB__((int)v168, v44)) {
                                      goto LABEL_268;
                                    }
LABEL_109:
                                    uint64_t v72 = sub_1CA5FD418();
                                    if (v72 >= v153) {
                                      size_t v73 = (v168 >> 32) - (int)v168;
                                    }
                                    else {
                                      size_t v73 = v72;
                                    }
                                    int v62 = memcmp(__s1, (const void *)(v43 + v45), v73);
                                    uint64_t v74 = v168;
                                    unint64_t v75 = v162;
LABEL_146:
                                    sub_1CA5B6EF4(v74, v75);
LABEL_158:
                                    LODWORD(v25) = v163;
                                    if (v62) {
                                      goto LABEL_33;
                                    }
                                  }
                                  else
                                  {
                                    uint64_t v76 = *(void *)(v168 + 16);
                                    uint64_t v77 = *(void *)(v168 + 24);
                                    sub_1CA5B6FE8(v31, v32);
                                    sub_1CA5B6FE8(v33, v34);
                                    swift_retain();
                                    swift_retain();
                                    uint64_t v25 = (char *)sub_1CA5FD408();
                                    if (v25)
                                    {
                                      uint64_t v78 = sub_1CA5FD428();
                                      if (__OFSUB__(v76, v78)) {
                                        goto LABEL_275;
                                      }
                                      v25 += v76 - v78;
                                    }
                                    BOOL v38 = __OFSUB__(v77, v76);
                                    int64_t v79 = v77 - v76;
                                    if (v38) {
                                      goto LABEL_266;
                                    }
                                    uint64_t v80 = sub_1CA5FD418();
                                    uint64_t v8 = v159;
                                    if (!v25) {
                                      goto LABEL_306;
                                    }
LABEL_126:
                                    if (v80 >= v79) {
                                      size_t v84 = v79;
                                    }
                                    else {
                                      size_t v84 = v80;
                                    }
                                    int v85 = memcmp(__s1, v25, v84);
                                    swift_release();
                                    swift_release();
                                    LODWORD(v25) = v163;
                                    if (v85) {
                                      goto LABEL_33;
                                    }
                                  }
                                }
                                else
                                {
LABEL_113:
                                  uint64_t __s2 = v168;
                                  int v170 = v162;
                                  __int16 v171 = WORD2(v162);
                                  sub_1CA5B6FE8(v31, v32);
                                  sub_1CA5B6FE8(v33, v34);
                                  if (memcmp(__s1, &__s2, v28)) {
                                    goto LABEL_33;
                                  }
                                }
                                break;
                            }
                          }
                          uint64_t v46 = 0;
                          switch(v34 >> 62)
                          {
                            case 1uLL:
                              LODWORD(v46) = HIDWORD(v33) - v33;
                              if (__OFSUB__(HIDWORD(v33), v33)) {
                                goto LABEL_256;
                              }
                              uint64_t v46 = (int)v46;
LABEL_61:
                              uint64_t v49 = BYTE6(v158);
                              switch((int)v164)
                              {
                                case 1:
                                  uint64_t v49 = v155;
                                  if (v156) {
                                    goto LABEL_258;
                                  }
                                  goto LABEL_65;
                                case 2:
                                  uint64_t v51 = *(void *)(v161 + 16);
                                  uint64_t v50 = *(void *)(v161 + 24);
                                  BOOL v38 = __OFSUB__(v50, v51);
                                  uint64_t v49 = v50 - v51;
                                  if (!v38) {
                                    goto LABEL_65;
                                  }
                                  goto LABEL_259;
                                case 3:
                                  if (v46) {
                                    goto LABEL_33;
                                  }
                                  goto LABEL_246;
                                default:
LABEL_65:
                                  if (v46 != v49) {
                                    goto LABEL_33;
                                  }
                                  if (v46 < 1) {
                                    goto LABEL_246;
                                  }
                                  break;
                              }
                              break;
                            case 2uLL:
                              uint64_t v48 = *(void *)(v33 + 16);
                              uint64_t v47 = *(void *)(v33 + 24);
                              BOOL v38 = __OFSUB__(v47, v48);
                              uint64_t v46 = v47 - v48;
                              if (!v38) {
                                goto LABEL_61;
                              }
                              goto LABEL_257;
                            case 3uLL:
                              goto LABEL_61;
                            default:
                              uint64_t v46 = BYTE6(v34);
                              goto LABEL_61;
                          }
                          break;
                      }
                      break;
                    case 2uLL:
                      uint64_t v37 = *(void *)(v31 + 16);
                      uint64_t v36 = *(void *)(v31 + 24);
                      BOOL v38 = __OFSUB__(v36, v37);
                      uint64_t v35 = v36 - v37;
                      if (!v38) {
                        goto LABEL_40;
                      }
                      goto LABEL_253;
                    case 3uLL:
                      goto LABEL_40;
                    default:
                      uint64_t v35 = BYTE6(v32);
                      goto LABEL_40;
                  }
                  switch(v34 >> 62)
                  {
                    case 1uLL:
                      if ((int)v33 > v33 >> 32) {
                        goto LABEL_273;
                      }
                      sub_1CA5B6FE8(v33, v34);
                      unint64_t v99 = (char *)sub_1CA5FD408();
                      if (!v99) {
                        goto LABEL_164;
                      }
                      uint64_t v100 = sub_1CA5FD428();
                      if (__OFSUB__((int)v33, v100)) {
                        goto LABEL_282;
                      }
                      v99 += (int)v33 - v100;
LABEL_164:
                      sub_1CA5FD418();
                      if (!v164)
                      {
                        *(_DWORD *)long long __s1 = v161;
                        void __s1[4] = v152;
                        *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v161 + 5);
                        __s1[7] = HIBYTE(v161);
                        *(_DWORD *)&__s1[8] = v158;
                        *(_WORD *)&__s1[12] = WORD2(v158);
                        if (!v99) {
                          goto LABEL_327;
                        }
                        int v113 = memcmp(v99, __s1, BYTE6(v158));
                        uint64_t v114 = v33;
                        unint64_t v115 = v34;
LABEL_232:
                        sub_1CA5B6EF4(v114, v115);
                        LODWORD(v25) = v163;
                        if (!v113) {
                          goto LABEL_246;
                        }
LABEL_33:
                        sub_1CA5B6EF4(v31, v32);
                        sub_1CA5B6EF4(v33, v34);
                        size_t v28 = BYTE6(v162);
                        uint64_t v26 = v165;
                        uint64_t v24 = v166;
LABEL_34:
                        unint64_t v23 = (v23 + 1) & v26;
                        if (((*(void *)(v8 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                          goto LABEL_250;
                        }
                        continue;
                      }
                      if (v164 == 1)
                      {
                        if (v151 < (int)v161) {
                          goto LABEL_291;
                        }
                        swift_retain();
                        uint64_t v101 = (char *)sub_1CA5FD408();
                        if (v101)
                        {
                          uint64_t v102 = sub_1CA5FD428();
                          if (__OFSUB__((int)v161, v102)) {
                            goto LABEL_298;
                          }
                          v101 += (int)v161 - v102;
                        }
                        uint64_t v103 = sub_1CA5FD418();
                        size_t v104 = v150;
                        if (v103 < v150) {
                          size_t v104 = v103;
                        }
                        if (!v99) {
                          goto LABEL_315;
                        }
                        if (!v101) {
                          goto LABEL_316;
                        }
                        int v105 = memcmp(v99, v101, v104);
                        sub_1CA5B6EF4(v161, v158);
                      }
                      else
                      {
                        uint64_t v135 = *(void *)(v161 + 16);
                        uint64_t v147 = *(void *)(v161 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v136 = (char *)sub_1CA5FD408();
                        if (v136)
                        {
                          uint64_t v137 = sub_1CA5FD428();
                          if (__OFSUB__(v135, v137)) {
                            goto LABEL_297;
                          }
                          v136 += v135 - v137;
                        }
                        if (__OFSUB__(v147, v135)) {
                          goto LABEL_292;
                        }
                        uint64_t v138 = sub_1CA5FD418();
                        if (v138 >= v147 - v135) {
                          size_t v139 = v147 - v135;
                        }
                        else {
                          size_t v139 = v138;
                        }
                        uint64_t v8 = v159;
                        if (!v99) {
                          goto LABEL_325;
                        }
                        if (!v136) {
                          goto LABEL_326;
                        }
                        int v105 = memcmp(v99, v136, v139);
                        swift_release();
                        swift_release();
                      }
                      sub_1CA5B6EF4(v33, v34);
LABEL_245:
                      LODWORD(v25) = v163;
                      if (v105) {
                        goto LABEL_33;
                      }
LABEL_246:
                      sub_1CA5B6EF4(v31, v32);
                      sub_1CA5B6EF4(v33, v34);
                      size_t v28 = BYTE6(v162);
                      uint64_t v26 = v165;
                      uint64_t v24 = v166;
                      if (v157 != v167) {
                        goto LABEL_34;
                      }
                      sub_1CA5B6EF4(v168, v162);
                      sub_1CA5B6EF4(v161, v158);
                      a2 = v166;
                      uint64_t v3 = v143;
                      a1 = v144;
                      int64_t v7 = v142;
                      unint64_t v6 = v148;
                      int64_t v2 = v149;
                      if (!v148) {
                        goto LABEL_8;
                      }
LABEL_7:
                      uint64_t v148 = (v6 - 1) & v6;
                      int64_t v149 = v2;
                      unint64_t v9 = __clz(__rbit64(v6)) | (v2 << 6);
                      break;
                    case 2uLL:
                      uint64_t v106 = *(void *)(v33 + 16);
                      swift_retain();
                      swift_retain();
                      uint64_t v107 = (char *)sub_1CA5FD408();
                      if (v107)
                      {
                        uint64_t v108 = sub_1CA5FD428();
                        if (__OFSUB__(v106, v108)) {
                          goto LABEL_281;
                        }
                        v107 += v106 - v108;
                        uint64_t v8 = v159;
                      }
                      else
                      {
                        uint64_t v8 = v159;
                      }
                      sub_1CA5FD418();
                      if (v164)
                      {
                        if (v164 == 1)
                        {
                          if (v151 < (int)v161) {
                            goto LABEL_285;
                          }
                          swift_retain();
                          long long v116 = (char *)sub_1CA5FD408();
                          if (v116)
                          {
                            uint64_t v117 = sub_1CA5FD428();
                            if (__OFSUB__((int)v161, v117)) {
                              goto LABEL_296;
                            }
                            v116 += (int)v161 - v117;
                          }
                          uint64_t v118 = sub_1CA5FD418();
                          size_t v119 = v150;
                          if (v118 < v150) {
                            size_t v119 = v118;
                          }
                          if (!v107) {
                            goto LABEL_318;
                          }
                          if (!v116) {
                            goto LABEL_319;
                          }
                          int v105 = memcmp(v107, v116, v119);
                          sub_1CA5B6EF4(v161, v158);
                          swift_release();
                        }
                        else
                        {
                          uint64_t v141 = v107;
                          uint64_t v130 = *(void *)(v161 + 16);
                          uint64_t v146 = *(void *)(v161 + 24);
                          swift_retain();
                          swift_retain();
                          uint64_t v131 = (char *)sub_1CA5FD408();
                          if (v131)
                          {
                            uint64_t v132 = sub_1CA5FD428();
                            if (__OFSUB__(v130, v132)) {
                              goto LABEL_295;
                            }
                            v131 += v130 - v132;
                          }
                          if (__OFSUB__(v146, v130)) {
                            goto LABEL_290;
                          }
                          uint64_t v133 = sub_1CA5FD418();
                          if (v133 >= v146 - v130) {
                            size_t v134 = v146 - v130;
                          }
                          else {
                            size_t v134 = v133;
                          }
                          if (!v141) {
                            goto LABEL_323;
                          }
                          if (!v131) {
                            goto LABEL_324;
                          }
                          int v105 = memcmp(v141, v131, v134);
                          swift_release();
                          swift_release();
                          swift_release();
                        }
                        swift_release();
                        uint64_t v8 = v159;
                      }
                      else
                      {
                        *(_DWORD *)long long __s1 = v161;
                        void __s1[4] = v152;
                        *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v161 + 5);
                        __s1[7] = HIBYTE(v161);
                        *(_DWORD *)&__s1[8] = v158;
                        *(_WORD *)&__s1[12] = WORD2(v158);
                        if (!v107) {
                          goto LABEL_322;
                        }
                        int v105 = memcmp(v107, __s1, BYTE6(v158));
                        swift_release();
                        swift_release();
                      }
                      goto LABEL_245;
                    case 3uLL:
                      *(void *)&__s1[6] = 0;
                      *(void *)long long __s1 = 0;
                      if (!v164) {
                        goto LABEL_187;
                      }
                      if (v164 == 1)
                      {
                        if (v151 < (int)v161) {
                          goto LABEL_284;
                        }
                        sub_1CA5B6FE8(v161, v158);
                        uint64_t v109 = sub_1CA5FD408();
                        if (!v109) {
                          goto LABEL_317;
                        }
                        uint64_t v53 = v109;
                        uint64_t v110 = sub_1CA5FD428();
                        uint64_t v55 = (int)v161 - v110;
                        if (__OFSUB__((int)v161, v110)) {
                          goto LABEL_289;
                        }
                        goto LABEL_183;
                      }
                      uint64_t v125 = *(void *)(v161 + 16);
                      uint64_t v126 = *(void *)(v161 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v25 = (char *)sub_1CA5FD408();
                      if (v25)
                      {
                        uint64_t v127 = sub_1CA5FD428();
                        if (__OFSUB__(v125, v127)) {
                          goto LABEL_294;
                        }
                        v25 += v125 - v127;
                      }
                      BOOL v38 = __OFSUB__(v126, v125);
                      int64_t v123 = v126 - v125;
                      if (v38) {
                        goto LABEL_287;
                      }
                      uint64_t v124 = sub_1CA5FD418();
                      uint64_t v8 = v159;
                      if (!v25) {
                        goto LABEL_321;
                      }
                      goto LABEL_212;
                    default:
                      *(void *)long long __s1 = v33;
                      *(_WORD *)&__s1[8] = v34;
                      __s1[10] = BYTE2(v34);
                      __s1[11] = BYTE3(v34);
                      __s1[12] = BYTE4(v34);
                      __s1[13] = BYTE5(v34);
                      if (!v164)
                      {
LABEL_187:
                        LODWORD(__s2) = v161;
                        BYTE4(__s2) = v152;
                        *(_WORD *)((char *)&__s2 + 5) = *(_WORD *)((char *)&v161 + 5);
                        HIBYTE(__s2) = HIBYTE(v161);
                        int v170 = v158;
                        __int16 v171 = WORD2(v158);
                        if (!memcmp(__s1, &__s2, BYTE6(v158))) {
                          goto LABEL_246;
                        }
                        goto LABEL_33;
                      }
                      if (v164 == 1)
                      {
                        if (v151 < (int)v161) {
                          goto LABEL_283;
                        }
                        sub_1CA5B6FE8(v161, v158);
                        uint64_t v52 = sub_1CA5FD408();
                        if (!v52) {
                          goto LABEL_314;
                        }
                        uint64_t v53 = v52;
                        uint64_t v54 = sub_1CA5FD428();
                        uint64_t v55 = (int)v161 - v54;
                        if (__OFSUB__((int)v161, v54)) {
                          goto LABEL_288;
                        }
LABEL_183:
                        uint64_t v111 = sub_1CA5FD418();
                        if (v111 >= v150) {
                          size_t v112 = v150;
                        }
                        else {
                          size_t v112 = v111;
                        }
                        int v113 = memcmp(__s1, (const void *)(v53 + v55), v112);
                        uint64_t v114 = v161;
                        unint64_t v115 = v158;
                        goto LABEL_232;
                      }
                      uint64_t v120 = *(void *)(v161 + 16);
                      uint64_t v121 = *(void *)(v161 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v25 = (char *)sub_1CA5FD408();
                      if (v25)
                      {
                        uint64_t v122 = sub_1CA5FD428();
                        if (__OFSUB__(v120, v122)) {
                          goto LABEL_293;
                        }
                        v25 += v120 - v122;
                      }
                      BOOL v38 = __OFSUB__(v121, v120);
                      int64_t v123 = v121 - v120;
                      if (v38) {
                        goto LABEL_286;
                      }
                      uint64_t v124 = sub_1CA5FD418();
                      uint64_t v8 = v159;
                      if (!v25) {
                        goto LABEL_320;
                      }
LABEL_212:
                      if (v124 >= v123) {
                        size_t v128 = v123;
                      }
                      else {
                        size_t v128 = v124;
                      }
                      int v129 = memcmp(__s1, v25, v128);
                      swift_release();
                      swift_release();
                      LODWORD(v25) = v163;
                      if (!v129) {
                        goto LABEL_246;
                      }
                      goto LABEL_33;
                  }
                  break;
                }
              }
LABEL_250:
              sub_1CA5B6EF4(v168, v162);
              sub_1CA5B6EF4(v161, v158);
              return 0;
            }
          }
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1CA5DD904(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_1CA5DE758(result, v5, 0);
  }
  return result;
}

uint64_t sub_1CA5DD97C(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1CA5FD978();
  }
  return result;
}

uint64_t sub_1CA5DD9A8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1CA5DDA20(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1CA5FDA68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1CA5DDA20(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1CA5DDAF4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1CA5B83E4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1CA5B83E4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1CA5DDAF4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1CA5FDA78();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1CA5DDCB0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1CA5FDB78();
  if (!v8)
  {
    sub_1CA5FDC08();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1CA5FDC68();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1CA5DDCB0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1CA5DDD48(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1CA5DDF28(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1CA5DDF28(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CA5DDD48(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1CA5DDEC0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1CA5FDB28();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1CA5FDC08();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1CA5FD918();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1CA5FDC68();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1CA5FDC08();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1CA5DDEC0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  long long v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1CA5DDF28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DE078(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_1CA5DE2C4(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1CA5FD4E8();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_1CA5FD408();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x1CA5DE2B4);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_1CA5FD428();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_1CA5FD418();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *uint64_t v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *uint64_t v1 = v4;
      v1[1] = v5;
      return result;
  }
}

uint64_t sub_1CA5DE2C4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_1CA5FD4F8();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1CA5FD408();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_1CA5FD428();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_1CA5FD418();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

uint64_t sub_1CA5DE374(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_1CA5EA500(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA5C92D8();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t *sub_1CA5DE44C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (uint64_t *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41A8);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  void v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1CA5EA694((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA5C92D8();
  if (v6 != v1)
  {
    __break(1u);
    return (uint64_t *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1CA5DE534(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608758);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      long long v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

uint64_t sub_1CA5DE63C()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_1CA5DE758(0, v3, 1);
  }
  return result;
}

uint64_t sub_1CA5DE698(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DE7B8(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE6B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DE924(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE6D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DEAB0(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE6F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DEC38(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1CA5DE718(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DEDE4(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1CA5DE738(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DEF70(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE758(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DF0D0(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE778(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DF23C(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_1CA5DE798(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1CA5DF3C8(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1CA5DE7B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DE924(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DEAB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A58);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DEC38(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A80);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A88);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DEDE4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608978);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    void v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  uint64_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A10);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DEF70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4240);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DF0D0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DF23C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089E8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DF3C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5DF518(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1CA5FDC98();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if (v3) {
      return sub_1CA5E0D7C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v119 = v3;
  uint64_t v115 = result;
  uint64_t v110 = a1;
  if (v3 < 2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v120 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v39 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1CA5FD988();
    *(void *)(v7 + 16) = v6;
    uint64_t v120 = (uint64_t *)(v7 + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v111 = *a1 + 40;
  uint64_t v109 = *a1 - 16;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v116 = v7;
  uint64_t v11 = v119;
  uint64_t v121 = *a1;
  do
  {
    uint64_t v12 = v8;
    uint64_t v13 = v8 + 1;
    if (v8 + 1 < v11)
    {
      unint64_t v14 = (uint64_t *)(v9 + 16 * v13);
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      uint64_t v17 = (uint64_t *)(v9 + 16 * v8);
      uint64_t v18 = v8;
      uint64_t v20 = *v17;
      unint64_t v19 = v17[1];
      sub_1CA5B6FE8(v16, v15);
      sub_1CA5B6FE8(v20, v19);
      BOOL v21 = sub_1CA5B919C(v16, v15, v20, v19);
      if (v1)
      {
        sub_1CA5B6EF4(v20, v19);
        sub_1CA5B6EF4(v16, v15);
        goto LABEL_116;
      }
      BOOL v22 = v21;
      sub_1CA5B6EF4(v20, v19);
      sub_1CA5B6EF4(v16, v15);
      uint64_t v13 = v18 + 2;
      uint64_t v12 = v18;
      if (v18 + 2 >= v119)
      {
        uint64_t v9 = v121;
        if (v22) {
          goto LABEL_21;
        }
      }
      else
      {
        size_t v112 = v10;
        uint64_t v113 = v18;
        unint64_t v23 = (unint64_t *)(v111 + 16 * v18);
        BOOL v24 = v22;
        while (1)
        {
          uint64_t v25 = v13;
          uint64_t v26 = *(v23 - 1);
          unint64_t v27 = *v23;
          uint64_t v28 = *(v23 - 3);
          unint64_t v29 = *(v23 - 2);
          sub_1CA5B6FE8(v26, *v23);
          sub_1CA5B6FE8(v28, v29);
          BOOL v30 = sub_1CA5B919C(v26, v27, v28, v29);
          sub_1CA5B6EF4(v28, v29);
          sub_1CA5B6EF4(v26, v27);
          if ((v24 ^ v30)) {
            break;
          }
          v23 += 2;
          uint64_t v13 = v25 + 1;
          if (v119 == v25 + 1)
          {
            uint64_t v13 = v119;
            uint64_t v10 = v112;
            goto LABEL_30;
          }
        }
        uint64_t v10 = v112;
        uint64_t v13 = v25;
LABEL_30:
        uint64_t v12 = v113;
        uint64_t v9 = v121;
        if (v24)
        {
LABEL_21:
          if (v13 < v12) {
            goto LABEL_145;
          }
          uint64_t v11 = v119;
          if (v12 < v13)
          {
            uint64_t v31 = (long long *)(v109 + 16 * v13);
            uint64_t v32 = v13;
            uint64_t v33 = v12;
            unint64_t v34 = (long long *)(v9 + 16 * v12);
            while (1)
            {
              if (v33 != --v32)
              {
                if (!v9) {
                  goto LABEL_148;
                }
                long long v35 = *v34;
                long long *v34 = *v31;
                *uint64_t v31 = v35;
              }
              ++v33;
              --v31;
              ++v34;
              if (v33 >= v32) {
                goto LABEL_32;
              }
            }
          }
          goto LABEL_32;
        }
      }
      uint64_t v11 = v119;
    }
LABEL_32:
    if (v13 >= v11) {
      goto LABEL_40;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_142;
    }
    if (v13 - v12 >= v115)
    {
LABEL_40:
      if (v13 < v12) {
        goto LABEL_140;
      }
      goto LABEL_41;
    }
    uint64_t v36 = v12 + v115;
    if (__OFADD__(v12, v115)) {
      goto LABEL_143;
    }
    if (v36 >= v11) {
      uint64_t v36 = v11;
    }
    if (v36 < v12)
    {
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      uint64_t result = sub_1CA5FDC08();
      __break(1u);
      return result;
    }
    if (v13 == v36) {
      goto LABEL_40;
    }
    uint64_t v114 = v12;
    uint64_t v88 = (uint64_t *)(v9 + 16 * v13);
    uint64_t v107 = v36;
    do
    {
      uint64_t v118 = v13;
      int64_t v89 = (uint64_t *)(v9 + 16 * v13);
      uint64_t v90 = *v89;
      unint64_t v91 = v89[1];
      uint64_t v92 = v12;
      uint64_t v108 = v88;
      while (1)
      {
        uint64_t v93 = *(v88 - 2);
        unint64_t v94 = *(v88 - 1);
        sub_1CA5B6FE8(v90, v91);
        sub_1CA5B6FE8(v93, v94);
        BOOL v95 = sub_1CA5B919C(v90, v91, v93, v94);
        if (v1)
        {
          sub_1CA5B6EF4(v93, v94);
          sub_1CA5B6EF4(v90, v91);
LABEL_116:
          swift_bridgeObjectRelease();
          *(void *)(v116 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        BOOL v96 = v95;
        sub_1CA5B6EF4(v93, v94);
        sub_1CA5B6EF4(v90, v91);
        if (!v96) {
          break;
        }
        uint64_t v9 = v121;
        if (!v121) {
          goto LABEL_147;
        }
        uint64_t v90 = *v88;
        unint64_t v91 = v88[1];
        *(_OWORD *)uint64_t v88 = *((_OWORD *)v88 - 1);
        *(v88 - 1) = v91;
        *(v88 - 2) = v90;
        v88 -= 2;
        if (v118 == ++v92) {
          goto LABEL_98;
        }
      }
      uint64_t v9 = v121;
LABEL_98:
      uint64_t v13 = v118 + 1;
      uint64_t v88 = v108 + 2;
      uint64_t v12 = v114;
    }
    while (v118 + 1 != v107);
    uint64_t v13 = v107;
    if (v107 < v114) {
      goto LABEL_140;
    }
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1CA5E19F0(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v38 = *((void *)v10 + 2);
    unint64_t v37 = *((void *)v10 + 3);
    unint64_t v39 = v38 + 1;
    uint64_t v9 = v121;
    if (v38 >= v37 >> 1)
    {
      uint64_t v97 = sub_1CA5E19F0((char *)(v37 > 1), v38 + 1, 1, v10);
      uint64_t v9 = v121;
      uint64_t v10 = v97;
    }
    *((void *)v10 + 2) = v39;
    uint64_t v40 = v10 + 32;
    uint64_t v41 = &v10[16 * v38 + 32];
    *(void *)uint64_t v41 = v12;
    *((void *)v41 + 1) = v13;
    uint64_t v117 = v13;
    if (v38)
    {
      while (2)
      {
        unint64_t v42 = v39 - 1;
        if (v39 >= 4)
        {
          uint64_t v47 = &v40[16 * v39];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_125;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_126;
          }
          unint64_t v54 = v39 - 2;
          uint64_t v55 = &v40[16 * v39 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_128;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_131;
          }
          if (v59 >= v50)
          {
            uint64_t v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_135;
            }
            BOOL v70 = v45 < v80;
          }
          else
          {
LABEL_59:
            if (v46) {
              goto LABEL_127;
            }
            unint64_t v54 = v39 - 2;
            uint64_t v60 = &v40[16 * v39 - 32];
            uint64_t v62 = *(void *)v60;
            uint64_t v61 = *((void *)v60 + 1);
            BOOL v63 = __OFSUB__(v61, v62);
            uint64_t v64 = v61 - v62;
            char v65 = v63;
            if (v63) {
              goto LABEL_130;
            }
            uint64_t v66 = &v40[16 * v42];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v53 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v53) {
              goto LABEL_133;
            }
            if (__OFADD__(v64, v69)) {
              goto LABEL_134;
            }
            if (v64 + v69 < v45) {
              goto LABEL_71;
            }
            BOOL v70 = v45 < v69;
          }
          if (v70) {
            unint64_t v42 = v54;
          }
        }
        else
        {
          if (v39 == 3)
          {
            uint64_t v44 = *((void *)v10 + 4);
            uint64_t v43 = *((void *)v10 + 5);
            BOOL v53 = __OFSUB__(v43, v44);
            uint64_t v45 = v43 - v44;
            char v46 = v53;
            goto LABEL_59;
          }
          uint64_t v71 = *((void *)v10 + 4);
          uint64_t v72 = *((void *)v10 + 5);
          BOOL v53 = __OFSUB__(v72, v71);
          uint64_t v64 = v72 - v71;
          char v65 = v53;
LABEL_71:
          if (v65) {
            goto LABEL_129;
          }
          size_t v73 = &v40[16 * v42];
          uint64_t v75 = *(void *)v73;
          uint64_t v74 = *((void *)v73 + 1);
          BOOL v53 = __OFSUB__(v74, v75);
          uint64_t v76 = v74 - v75;
          if (v53) {
            goto LABEL_132;
          }
          if (v76 < v64) {
            goto LABEL_88;
          }
        }
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v39)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v9) {
          goto LABEL_146;
        }
        uint64_t v82 = v10;
        uint64_t v83 = &v40[16 * v81];
        uint64_t v84 = *(void *)v83;
        int v85 = &v40[16 * v42];
        uint64_t v86 = *((void *)v85 + 1);
        sub_1CA5E10D4((uint64_t *)(v9 + 16 * *(void *)v83), (uint64_t *)(v9 + 16 * *(void *)v85), v9 + 16 * v86, v120);
        if (v1) {
          goto LABEL_116;
        }
        if (v86 < v84) {
          goto LABEL_122;
        }
        if (v42 > *((void *)v82 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v83 = v84;
        *(void *)&v40[16 * v81 + 8] = v86;
        unint64_t v87 = *((void *)v82 + 2);
        if (v42 >= v87) {
          goto LABEL_124;
        }
        uint64_t v10 = v82;
        unint64_t v39 = v87 - 1;
        memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
        *((void *)v10 + 2) = v87 - 1;
        uint64_t v9 = v121;
        if (v87 <= 2) {
          goto LABEL_88;
        }
        continue;
      }
    }
    unint64_t v39 = 1;
LABEL_88:
    uint64_t v11 = v119;
    uint64_t v7 = v116;
    uint64_t v8 = v117;
  }
  while (v117 < v119);
LABEL_103:
  uint64_t v98 = v7;
  if (v39 >= 2)
  {
    uint64_t v99 = *v110;
    do
    {
      unint64_t v100 = v39 - 2;
      if (v39 < 2) {
        goto LABEL_136;
      }
      if (!v99) {
        goto LABEL_149;
      }
      uint64_t v101 = v10;
      uint64_t v102 = v10 + 32;
      uint64_t v103 = *(void *)&v10[16 * v100 + 32];
      uint64_t v104 = *(void *)&v10[16 * v39 + 24];
      sub_1CA5E10D4((uint64_t *)(v99 + 16 * v103), (uint64_t *)(v99 + 16 * *(void *)&v102[16 * v39 - 16]), v99 + 16 * v104, v120);
      if (v1) {
        break;
      }
      if (v104 < v103) {
        goto LABEL_137;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v101 = sub_1CA5E1D3C((uint64_t)v101);
      }
      if (v100 >= *((void *)v101 + 2)) {
        goto LABEL_138;
      }
      int v105 = &v101[16 * v100 + 32];
      *(void *)int v105 = v103;
      *((void *)v105 + 1) = v104;
      unint64_t v106 = *((void *)v101 + 2);
      if (v39 > v106) {
        goto LABEL_139;
      }
      uint64_t v10 = v101;
      memmove(&v101[16 * v39 + 16], &v101[16 * v39 + 32], 16 * (v106 - v39));
      *((void *)v101 + 2) = v106 - 1;
      unint64_t v39 = v106 - 1;
    }
    while (v106 > 2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v98 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA5DFD50(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v190 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[1];
  uint64_t result = sub_1CA5FDC98();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_232;
    }
    if (v4) {
      return sub_1CA5E0EC0(0, v4, 1, a1);
    }
  }
  else
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
      sub_1CA5FDC08();
      __break(1u);
      JUMPOUT(0x1CA5E0D5CLL);
    }
    uint64_t v7 = result;
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v155 = a1;
    if (v4 >= 2)
    {
      uint64_t v9 = v6 >> 1;
      type metadata accessor for ExpressMode.PassConfig();
      uint64_t v10 = sub_1CA5FD988();
      *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
      long long __dst = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v189 = v10;
LABEL_12:
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v156 = *a1 + 16;
      uint64_t v157 = v7;
      uint64_t v154 = *a1 - 8;
      uint64_t v167 = *a1;
      uint64_t v165 = v4;
      while (1)
      {
        uint64_t v13 = v11;
        uint64_t v14 = v11 + 1;
        uint64_t v159 = v8;
        uint64_t v160 = v11;
        if (v11 + 1 < v4)
        {
          uint64_t v15 = v2;
          uint64_t v16 = *(void *)(v12 + 8 * v14);
          uint64_t v17 = *(void *)(v12 + 8 * v11);
          uint64_t v18 = *(void *)(v16 + 32);
          unint64_t v19 = *(void *)(v16 + 40);
          swift_retain();
          swift_retain();
          uint64_t v185 = sub_1CA5C4448(v18, v19);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
          sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
          uint64_t v20 = sub_1CA5FD888();
          uint64_t v22 = v21;
          swift_bridgeObjectRelease();
          uint64_t v175 = v15;
          uint64_t v185 = sub_1CA5C4448(*(void *)(v17 + 32), *(void *)(v17 + 40));
          uint64_t v23 = sub_1CA5FD888();
          uint64_t v25 = v24;
          swift_bridgeObjectRelease();
          if (v20 == v23 && v22 == v25) {
            int v181 = 0;
          }
          else {
            int v181 = sub_1CA5FDCB8();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          uint64_t v13 = v160;
          uint64_t v14 = v160 + 2;
          if (v160 + 2 < v165)
          {
            uint64_t v26 = v156 + 8 * v160;
            while (1)
            {
              uint64_t v168 = v14;
              uint64_t v27 = *(void *)(v26 - 8);
              uint64_t v29 = *(void *)(*(void *)v26 + 32);
              unint64_t v28 = *(void *)(*(void *)v26 + 40);
              swift_retain();
              swift_retain();
              uint64_t v185 = sub_1CA5C4448(v29, v28);
              uint64_t v182 = sub_1CA5FD888();
              uint64_t v31 = v30;
              swift_bridgeObjectRelease();
              uint64_t v185 = sub_1CA5C4448(*(void *)(v27 + 32), *(void *)(v27 + 40));
              uint64_t v32 = sub_1CA5FD888();
              uint64_t v34 = v33;
              swift_bridgeObjectRelease();
              if (v182 != v32) {
                goto LABEL_23;
              }
              if (v31 == v34) {
                int v35 = 0;
              }
              else {
LABEL_23:
              }
                int v35 = sub_1CA5FDCB8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              if ((v181 ^ v35)) {
                break;
              }
              ++v14;
              v26 += 8;
              if (v165 == v168 + 1)
              {
                uint64_t v14 = v165;
                break;
              }
            }
            uint64_t v13 = v160;
          }
          uint64_t v2 = v175;
          uint64_t v8 = v159;
          uint64_t v12 = v167;
          if (v181)
          {
            if (v14 < v13) {
              goto LABEL_236;
            }
            if (v13 < v14)
            {
              uint64_t v36 = (uint64_t *)(v154 + 8 * v14);
              uint64_t v37 = v14;
              uint64_t v38 = v13;
              unint64_t v39 = (uint64_t *)(v167 + 8 * v13);
              do
              {
                if (v38 != --v37)
                {
                  if (!v167) {
                    goto LABEL_245;
                  }
                  uint64_t v40 = *v39;
                  *unint64_t v39 = *v36;
                  *uint64_t v36 = v40;
                }
                ++v38;
                --v36;
                ++v39;
              }
              while (v38 < v37);
            }
          }
        }
        if (v14 < v165)
        {
          if (__OFSUB__(v14, v13)) {
            goto LABEL_233;
          }
          if (v14 - v13 < v157)
          {
            uint64_t v41 = v13 + v157;
            if (__OFADD__(v13, v157)) {
              goto LABEL_237;
            }
            if (v41 >= v165) {
              uint64_t v41 = v165;
            }
            if (v41 < v13)
            {
LABEL_238:
              __break(1u);
LABEL_239:
              __break(1u);
LABEL_240:
              __break(1u);
LABEL_241:
              __break(1u);
LABEL_242:
              __break(1u);
LABEL_243:
              __break(1u);
LABEL_244:
              __break(1u);
LABEL_245:
              __break(1u);
LABEL_246:
              __break(1u);
            }
            if (v14 != v41) {
              break;
            }
          }
        }
        if (v14 < v13) {
          goto LABEL_225;
        }
LABEL_46:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1CA5E19F0(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v43 = *((void *)v8 + 2);
        unint64_t v42 = *((void *)v8 + 3);
        unint64_t v44 = v43 + 1;
        uint64_t v12 = v167;
        uint64_t v169 = v14;
        if (v43 >= v42 >> 1)
        {
          uint64_t v147 = sub_1CA5E19F0((char *)(v42 > 1), v43 + 1, 1, v8);
          uint64_t v12 = v167;
          uint64_t v8 = v147;
        }
        *((void *)v8 + 2) = v44;
        uint64_t v45 = v8 + 32;
        char v46 = &v8[16 * v43 + 32];
        *(void *)char v46 = v13;
        *((void *)v46 + 1) = v169;
        if (v43)
        {
          while (1)
          {
            unint64_t v47 = v44 - 1;
            if (v44 >= 4)
            {
              uint64_t v52 = &v45[16 * v44];
              uint64_t v53 = *((void *)v52 - 8);
              uint64_t v54 = *((void *)v52 - 7);
              BOOL v58 = __OFSUB__(v54, v53);
              uint64_t v55 = v54 - v53;
              if (v58) {
                goto LABEL_210;
              }
              uint64_t v57 = *((void *)v52 - 6);
              uint64_t v56 = *((void *)v52 - 5);
              BOOL v58 = __OFSUB__(v56, v57);
              uint64_t v50 = v56 - v57;
              char v51 = v58;
              if (v58) {
                goto LABEL_211;
              }
              unint64_t v59 = v44 - 2;
              uint64_t v60 = &v45[16 * v44 - 32];
              uint64_t v62 = *(void *)v60;
              uint64_t v61 = *((void *)v60 + 1);
              BOOL v58 = __OFSUB__(v61, v62);
              uint64_t v63 = v61 - v62;
              if (v58) {
                goto LABEL_213;
              }
              BOOL v58 = __OFADD__(v50, v63);
              uint64_t v64 = v50 + v63;
              if (v58) {
                goto LABEL_216;
              }
              if (v64 >= v55)
              {
                uint64_t v82 = &v45[16 * v47];
                uint64_t v84 = *(void *)v82;
                uint64_t v83 = *((void *)v82 + 1);
                BOOL v58 = __OFSUB__(v83, v84);
                uint64_t v85 = v83 - v84;
                if (v58) {
                  goto LABEL_220;
                }
                BOOL v75 = v50 < v85;
                goto LABEL_82;
              }
            }
            else
            {
              if (v44 != 3)
              {
                uint64_t v76 = *((void *)v8 + 4);
                uint64_t v77 = *((void *)v8 + 5);
                BOOL v58 = __OFSUB__(v77, v76);
                uint64_t v69 = v77 - v76;
                char v70 = v58;
                goto LABEL_76;
              }
              uint64_t v49 = *((void *)v8 + 4);
              uint64_t v48 = *((void *)v8 + 5);
              BOOL v58 = __OFSUB__(v48, v49);
              uint64_t v50 = v48 - v49;
              char v51 = v58;
            }
            if (v51) {
              goto LABEL_212;
            }
            unint64_t v59 = v44 - 2;
            char v65 = &v45[16 * v44 - 32];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v68 = __OFSUB__(v66, v67);
            uint64_t v69 = v66 - v67;
            char v70 = v68;
            if (v68) {
              goto LABEL_215;
            }
            uint64_t v71 = &v45[16 * v47];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v58 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v58) {
              goto LABEL_218;
            }
            if (__OFADD__(v69, v74)) {
              goto LABEL_219;
            }
            if (v69 + v74 >= v50)
            {
              BOOL v75 = v50 < v74;
LABEL_82:
              if (v75) {
                unint64_t v47 = v59;
              }
              goto LABEL_84;
            }
LABEL_76:
            if (v70) {
              goto LABEL_214;
            }
            uint64_t v78 = &v45[16 * v47];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v58 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v58) {
              goto LABEL_217;
            }
            if (v81 < v69) {
              goto LABEL_93;
            }
LABEL_84:
            unint64_t v86 = v47 - 1;
            if (v47 - 1 >= v44) {
              goto LABEL_206;
            }
            if (!v12) {
              goto LABEL_243;
            }
            unint64_t v87 = v8;
            uint64_t v88 = &v45[16 * v86];
            uint64_t v89 = *(void *)v88;
            uint64_t v90 = &v45[16 * v47];
            uint64_t v91 = *((void *)v90 + 1);
            sub_1CA5E1490((char *)(v12 + 8 * *(void *)v88), (char *)(v12 + 8 * *(void *)v90), v12 + 8 * v91, __dst);
            if (v2) {
              goto LABEL_190;
            }
            if (v91 < v89) {
              goto LABEL_207;
            }
            if (v47 > *((void *)v87 + 2)) {
              goto LABEL_208;
            }
            *(void *)uint64_t v88 = v89;
            *(void *)&v45[16 * v86 + 8] = v91;
            unint64_t v92 = *((void *)v87 + 2);
            if (v47 >= v92) {
              goto LABEL_209;
            }
            uint64_t v8 = v87;
            unint64_t v44 = v92 - 1;
            memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
            *((void *)v87 + 2) = v92 - 1;
            uint64_t v12 = v167;
            if (v92 <= 2) {
              goto LABEL_93;
            }
          }
        }
        unint64_t v44 = 1;
LABEL_93:
        uint64_t v4 = v165;
        uint64_t v11 = v169;
        if (v169 >= v165) {
          goto LABEL_179;
        }
      }
      uint64_t v158 = v41;
LABEL_98:
      uint64_t v170 = v14;
      uint64_t v95 = *(void *)(v12 + 8 * v14);
      uint64_t v96 = v14;
LABEL_99:
      uint64_t v176 = v2;
      uint64_t v97 = *(void *)(v12 + 8 * (v96 - 1));
      uint64_t v98 = *(void *)(v95 + 32);
      unint64_t v179 = *(void *)(v95 + 40);
      unint64_t v99 = v179 >> 62;
      unint64_t v177 = HIDWORD(v98);
      uint64_t v161 = v96 - 1;
      uint64_t v162 = v96;
      switch(v179 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v98), v98)) {
            goto LABEL_229;
          }
          uint64_t v100 = HIDWORD(v98) - (int)v98;
LABEL_104:
          if (!v100)
          {
LABEL_108:
            swift_retain();
            swift_retain();
            uint64_t v106 = MEMORY[0x1E4FBC860];
            uint64_t v107 = v97;
            uint64_t v104 = MEMORY[0x1E4FBC860];
            goto LABEL_134;
          }
          uint64_t v188 = MEMORY[0x1E4FBC860];
          int64_t v103 = v100 & ~(v100 >> 63);
          swift_retain();
          swift_retain();
          sub_1CA5DE698(0, v103, 0);
          uint64_t v104 = v188;
          uint64_t v174 = (int)v98;
          if (v99)
          {
            if (v99 == 1) {
              uint64_t v105 = (int)v98;
            }
            else {
              uint64_t v105 = *(void *)(v98 + 16);
            }
            if (v100 < 0) {
              goto LABEL_226;
            }
          }
          else
          {
            if (v100 < 0) {
              goto LABEL_234;
            }
            uint64_t v105 = 0;
          }
          uint64_t v171 = v98 >> 32;
          uint64_t v183 = v98;
          while (v103)
          {
            if (v99)
            {
              if (v99 == 1)
              {
                if (v105 < v174 || v105 >= v171) {
                  goto LABEL_196;
                }
                uint64_t v108 = sub_1CA5FD408();
                if (!v108) {
                  goto LABEL_239;
                }
                uint64_t v109 = v108;
                uint64_t v110 = sub_1CA5FD428();
                uint64_t v111 = v105 - v110;
                if (__OFSUB__(v105, v110)) {
                  goto LABEL_198;
                }
              }
              else
              {
                if (v105 < *(void *)(v98 + 16)) {
                  goto LABEL_194;
                }
                if (v105 >= *(void *)(v98 + 24)) {
                  goto LABEL_197;
                }
                uint64_t v113 = sub_1CA5FD408();
                if (!v113) {
                  goto LABEL_240;
                }
                uint64_t v109 = v113;
                uint64_t v114 = sub_1CA5FD428();
                uint64_t v111 = v105 - v114;
                if (__OFSUB__(v105, v114)) {
                  goto LABEL_199;
                }
              }
              char v112 = *(unsigned char *)(v109 + v111);
            }
            else
            {
              if (v105 >= BYTE6(v179)) {
                goto LABEL_195;
              }
              LOWORD(v185) = v98;
              BYTE2(v185) = BYTE2(v98);
              BYTE3(v185) = BYTE3(v98);
              BYTE4(v185) = v177;
              BYTE5(v185) = BYTE5(v98);
              BYTE6(v185) = BYTE6(v98);
              HIBYTE(v185) = HIBYTE(v98);
              int v186 = v179;
              __int16 v187 = WORD2(v179);
              char v112 = *((unsigned char *)&v185 + v105);
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
            uint64_t v115 = swift_allocObject();
            *(_OWORD *)(v115 + 16) = xmmword_1CA6021C0;
            *(void *)(v115 + 56) = MEMORY[0x1E4FBC358];
            *(void *)(v115 + 64) = MEMORY[0x1E4FBC3B0];
            *(unsigned char *)(v115 + 32) = v112;
            uint64_t v116 = sub_1CA5FD8B8();
            uint64_t v118 = v117;
            uint64_t v188 = v104;
            unint64_t v120 = *(void *)(v104 + 16);
            unint64_t v119 = *(void *)(v104 + 24);
            if (v120 >= v119 >> 1)
            {
              sub_1CA5DE698(v119 > 1, v120 + 1, 1);
              uint64_t v104 = v188;
            }
            *(void *)(v104 + 16) = v120 + 1;
            unint64_t v121 = v104 + 16 * v120;
            *(void *)(v121 + 32) = v116;
            *(void *)(v121 + 40) = v118;
            ++v105;
            --v103;
            --v100;
            LODWORD(v99) = v179 >> 62;
            uint64_t v98 = v183;
            if (!v100)
            {
              uint64_t v8 = v159;
              uint64_t v106 = MEMORY[0x1E4FBC860];
              uint64_t v107 = v97;
LABEL_134:
              uint64_t v185 = v104;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
              sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
              uint64_t v163 = sub_1CA5FD888();
              uint64_t v164 = v122;
              swift_bridgeObjectRelease();
              uint64_t v123 = *(void *)(v107 + 32);
              unint64_t v180 = *(void *)(v107 + 40);
              unint64_t v124 = v180 >> 62;
              uint64_t v2 = v176;
              switch(v180 >> 62)
              {
                case 1uLL:
                  if (__OFSUB__(HIDWORD(v123), v123)) {
                    goto LABEL_230;
                  }
                  uint64_t v125 = HIDWORD(v123) - (int)v123;
LABEL_139:
                  if (!v125) {
                    goto LABEL_168;
                  }
                  unint64_t v172 = HIDWORD(v123);
                  uint64_t v188 = MEMORY[0x1E4FBC860];
                  int64_t v128 = v125 & ~(v125 >> 63);
                  sub_1CA5DE698(0, v128, 0);
                  uint64_t v106 = v188;
                  uint64_t v178 = (int)v123;
                  if (v124)
                  {
                    if (v124 == 1) {
                      uint64_t v129 = (int)v123;
                    }
                    else {
                      uint64_t v129 = *(void *)(v123 + 16);
                    }
                    if ((v125 & 0x8000000000000000) == 0) {
                      goto LABEL_147;
                    }
LABEL_227:
                    __break(1u);
LABEL_228:
                    __break(1u);
LABEL_229:
                    __break(1u);
LABEL_230:
                    __break(1u);
LABEL_231:
                    __break(1u);
LABEL_232:
                    __break(1u);
LABEL_233:
                    __break(1u);
LABEL_234:
                    __break(1u);
LABEL_235:
                    __break(1u);
LABEL_236:
                    __break(1u);
LABEL_237:
                    __break(1u);
                    goto LABEL_238;
                  }
                  if (v125 < 0) {
                    goto LABEL_235;
                  }
                  uint64_t v129 = 0;
LABEL_147:
                  uint64_t v173 = v123 >> 32;
                  uint64_t v184 = v123;
                  do
                  {
                    if (!v128) {
                      goto LABEL_193;
                    }
                    if (v124)
                    {
                      if (v124 == 1)
                      {
                        if (v129 < v178 || v129 >= v173) {
                          goto LABEL_202;
                        }
                        uint64_t v130 = sub_1CA5FD408();
                        if (!v130) {
                          goto LABEL_241;
                        }
                        uint64_t v131 = v130;
                        uint64_t v132 = sub_1CA5FD428();
                        uint64_t v133 = v129 - v132;
                        if (__OFSUB__(v129, v132)) {
                          goto LABEL_204;
                        }
                      }
                      else
                      {
                        if (v129 < *(void *)(v123 + 16)) {
                          goto LABEL_200;
                        }
                        if (v129 >= *(void *)(v123 + 24)) {
                          goto LABEL_203;
                        }
                        uint64_t v135 = sub_1CA5FD408();
                        if (!v135) {
                          goto LABEL_242;
                        }
                        uint64_t v131 = v135;
                        uint64_t v136 = sub_1CA5FD428();
                        uint64_t v133 = v129 - v136;
                        if (__OFSUB__(v129, v136)) {
                          goto LABEL_205;
                        }
                      }
                      char v134 = *(unsigned char *)(v131 + v133);
                    }
                    else
                    {
                      if (v129 >= BYTE6(v180)) {
                        goto LABEL_201;
                      }
                      LOWORD(v185) = v123;
                      BYTE2(v185) = BYTE2(v123);
                      BYTE3(v185) = BYTE3(v123);
                      BYTE4(v185) = v172;
                      BYTE5(v185) = BYTE5(v123);
                      BYTE6(v185) = BYTE6(v123);
                      HIBYTE(v185) = HIBYTE(v123);
                      int v186 = v180;
                      __int16 v187 = WORD2(v180);
                      char v134 = *((unsigned char *)&v185 + v129);
                    }
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
                    uint64_t v137 = swift_allocObject();
                    *(_OWORD *)(v137 + 16) = xmmword_1CA6021C0;
                    *(void *)(v137 + 56) = MEMORY[0x1E4FBC358];
                    *(void *)(v137 + 64) = MEMORY[0x1E4FBC3B0];
                    *(unsigned char *)(v137 + 32) = v134;
                    unint64_t v124 = sub_1CA5FD8B8();
                    uint64_t v139 = v138;
                    uint64_t v188 = v106;
                    unint64_t v141 = *(void *)(v106 + 16);
                    unint64_t v140 = *(void *)(v106 + 24);
                    if (v141 >= v140 >> 1)
                    {
                      sub_1CA5DE698(v140 > 1, v141 + 1, 1);
                      uint64_t v106 = v188;
                    }
                    *(void *)(v106 + 16) = v141 + 1;
                    unint64_t v142 = v106 + 16 * v141;
                    *(void *)(v142 + 32) = v124;
                    *(void *)(v142 + 40) = v139;
                    ++v129;
                    --v128;
                    --v125;
                    LODWORD(v124) = v180 >> 62;
                    uint64_t v123 = v184;
                  }
                  while (v125);
                  uint64_t v2 = v176;
                  uint64_t v8 = v159;
LABEL_168:
                  uint64_t v185 = v106;
                  uint64_t v143 = sub_1CA5FD888();
                  uint64_t v145 = v144;
                  swift_bridgeObjectRelease();
                  if (v163 == v143 && v164 == v145)
                  {
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease_n();
                    uint64_t v12 = v167;
                    uint64_t v93 = v170;
                    uint64_t v13 = v160;
                    uint64_t v94 = v158;
                    goto LABEL_97;
                  }
                  char v146 = sub_1CA5FDCB8();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v13 = v160;
                  uint64_t v94 = v158;
                  if ((v146 & 1) == 0)
                  {
                    uint64_t v12 = v167;
                    uint64_t v93 = v170;
                    goto LABEL_97;
                  }
                  uint64_t v12 = v167;
                  if (!v167) {
                    goto LABEL_244;
                  }
                  uint64_t v95 = *(void *)(v167 + 8 * v162);
                  *(void *)(v167 + 8 * v162) = *(void *)(v167 + 8 * v161);
                  *(void *)(v167 + 8 * v161) = v95;
                  uint64_t v96 = v161;
                  uint64_t v93 = v170;
                  if (v161 != v160) {
                    goto LABEL_99;
                  }
LABEL_97:
                  uint64_t v14 = v93 + 1;
                  if (v14 != v94) {
                    goto LABEL_98;
                  }
                  uint64_t v14 = v94;
                  if (v94 < v13) {
                    goto LABEL_225;
                  }
                  goto LABEL_46;
                case 2uLL:
                  uint64_t v127 = *(void *)(v123 + 16);
                  uint64_t v126 = *(void *)(v123 + 24);
                  uint64_t v125 = v126 - v127;
                  if (!__OFSUB__(v126, v127)) {
                    goto LABEL_139;
                  }
                  goto LABEL_231;
                case 3uLL:
                  goto LABEL_168;
                default:
                  uint64_t v125 = BYTE6(v180);
                  goto LABEL_139;
              }
            }
          }
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
          break;
        case 2uLL:
          uint64_t v102 = *(void *)(v98 + 16);
          uint64_t v101 = *(void *)(v98 + 24);
          uint64_t v100 = v101 - v102;
          if (!__OFSUB__(v101, v102)) {
            goto LABEL_104;
          }
          goto LABEL_228;
        case 3uLL:
          goto LABEL_108;
        default:
          uint64_t v100 = BYTE6(v179);
          goto LABEL_104;
      }
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
      goto LABEL_227;
    }
    uint64_t v189 = MEMORY[0x1E4FBC860];
    long long __dst = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 == 1) {
      goto LABEL_12;
    }
    unint64_t v44 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_179:
    if (v44 >= 2)
    {
      uint64_t v148 = *v155;
      do
      {
        unint64_t v149 = v44 - 2;
        if (v44 < 2) {
          goto LABEL_221;
        }
        if (!v148) {
          goto LABEL_246;
        }
        uint64_t v150 = *(void *)&v8[16 * v149 + 32];
        uint64_t v151 = *(void *)&v8[16 * v44 + 24];
        sub_1CA5E1490((char *)(v148 + 8 * v150), (char *)(v148 + 8 * *(void *)&v8[16 * v44 + 16]), v148 + 8 * v151, __dst);
        if (v2) {
          break;
        }
        if (v151 < v150) {
          goto LABEL_222;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1CA5E1D3C((uint64_t)v8);
        }
        if (v149 >= *((void *)v8 + 2)) {
          goto LABEL_223;
        }
        unint64_t v152 = &v8[16 * v149 + 32];
        *(void *)unint64_t v152 = v150;
        *((void *)v152 + 1) = v151;
        unint64_t v153 = *((void *)v8 + 2);
        if (v44 > v153) {
          goto LABEL_224;
        }
        memmove(&v8[16 * v44 + 16], &v8[16 * v44 + 32], 16 * (v153 - v44));
        *((void *)v8 + 2) = v153 - 1;
        unint64_t v44 = v153 - 1;
      }
      while (v153 > 2);
    }
LABEL_190:
    swift_bridgeObjectRelease();
    *(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1CA5FD968();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA5E0D7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  if (a3 != a2)
  {
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = (uint64_t *)(*a4 + 16 * a3);
    uint64_t v17 = result;
    uint64_t v20 = *a4;
LABEL_3:
    uint64_t v9 = (uint64_t *)(v7 + 16 * a3);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    unint64_t v19 = v8;
    uint64_t v21 = a3;
    while (1)
    {
      uint64_t v12 = *(v8 - 2);
      unint64_t v13 = *(v8 - 1);
      sub_1CA5B6FE8(v10, v11);
      sub_1CA5B6FE8(v12, v13);
      uint64_t v14 = v5;
      BOOL v15 = sub_1CA5B919C(v10, v11, v12, v13);
      sub_1CA5B6EF4(v12, v13);
      uint64_t result = sub_1CA5B6EF4(v10, v11);
      if (v14) {
        break;
      }
      if (!v15)
      {
        uint64_t v16 = v21;
        uint64_t v5 = 0;
        uint64_t v7 = v20;
LABEL_10:
        a3 = v16 + 1;
        uint64_t v8 = v19 + 2;
        uint64_t v6 = v17;
        if (a3 != a2) {
          goto LABEL_3;
        }
        return result;
      }
      uint64_t v7 = v20;
      if (!v20)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *v8;
      unint64_t v11 = v8[1];
      *(_OWORD *)uint64_t v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v11;
      *(v8 - 2) = v10;
      v8 -= 2;
      ++v6;
      uint64_t v16 = v21;
      uint64_t v5 = 0;
      if (v21 == v6) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t sub_1CA5E0EC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v20 = result;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v4 = (void *)(*a4 + 8 * a3 - 8);
LABEL_7:
    uint64_t v6 = *(void *)(v22 + 8 * a3);
    uint64_t v7 = v20;
    uint64_t v21 = v4;
    uint64_t v23 = a3;
    while (1)
    {
      uint64_t v24 = v7;
      uint64_t v8 = *v4;
      uint64_t v9 = *(void *)(v6 + 32);
      unint64_t v10 = *(void *)(v6 + 40);
      swift_retain();
      swift_retain();
      sub_1CA5C4448(v9, v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
      uint64_t v11 = sub_1CA5FD888();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      sub_1CA5C4448(*(void *)(v8 + 32), *(void *)(v8 + 40));
      uint64_t v14 = sub_1CA5FD888();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      if (v11 == v14 && v13 == v16)
      {
        swift_release();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        uint64_t v5 = v23;
LABEL_6:
        a3 = v5 + 1;
        uint64_t v4 = v21 + 1;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_7;
      }
      char v17 = sub_1CA5FDCB8();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v22) {
        break;
      }
      uint64_t v18 = *v4;
      uint64_t v6 = v4[1];
      void *v4 = v6;
      v4[1] = v18;
      --v4;
      uint64_t v5 = v23;
      uint64_t v7 = v24 + 1;
      if (v23 == v24 + 1) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA5E10D4(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 4;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v45 = __src;
  unint64_t v44 = a4;
  if (v8 >= v10 >> 4)
  {
    if (v9 < -15) {
      goto LABEL_50;
    }
    if (a4 != a2 || &a2[2 * v11] <= a4) {
      memmove(a4, a2, 16 * v11);
    }
    uint64_t v22 = (char *)&a4[2 * v11];
    unint64_t v43 = v22;
    uint64_t v45 = v4;
    if (v5 >= v4 || v9 < 16)
    {
LABEL_49:
      sub_1CA5E1BC4((void **)&v45, (const void **)&v44, &v43);
      return 1;
    }
    uint64_t v23 = (uint64_t *)(a3 - 16);
    uint64_t v24 = v4;
    uint64_t v36 = v5;
    while (1)
    {
      unint64_t v39 = (unint64_t)v22;
      uint64_t v41 = v4;
      uint64_t v26 = *((void *)v22 - 2);
      unint64_t v27 = *((void *)v22 - 1);
      uint64_t v25 = v22 - 16;
      uint64_t v28 = *(v24 - 2);
      unint64_t v29 = *(v24 - 1);
      v24 -= 2;
      sub_1CA5B6FE8(v26, v27);
      sub_1CA5B6FE8(v28, v29);
      BOOL v30 = sub_1CA5B919C(v26, v27, v28, v29);
      if (v42)
      {
        sub_1CA5B6EF4(v28, v29);
        sub_1CA5B6EF4(v26, v27);
        goto LABEL_49;
      }
      BOOL v31 = v30;
      uint64_t v32 = v23 + 2;
      sub_1CA5B6EF4(v28, v29);
      sub_1CA5B6EF4(v26, v27);
      if (v31)
      {
        uint64_t v22 = (char *)v39;
        if (v32 != v41 || v23 >= v41) {
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        }
        uint64_t v45 = v24;
      }
      else
      {
        unint64_t v43 = v25;
        if ((unint64_t)v32 >= v39 && (unint64_t)v23 < v39)
        {
          unint64_t v33 = (unint64_t)v36;
          if (v32 != (uint64_t *)v39) {
            *(_OWORD *)uint64_t v23 = *(_OWORD *)v25;
          }
          uint64_t v24 = v41;
          uint64_t v22 = v25;
          uint64_t v34 = (char *)a4;
          goto LABEL_44;
        }
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v25;
        uint64_t v24 = v41;
        uint64_t v22 = v25;
      }
      unint64_t v33 = (unint64_t)v36;
      uint64_t v34 = (char *)a4;
LABEL_44:
      if ((unint64_t)v24 > v33)
      {
        v23 -= 2;
        uint64_t v4 = v24;
        if (v22 > v34) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v6 >= -15)
  {
    uint64_t v12 = a4;
    if (a4 != __src || &__src[2 * v8] <= a4) {
      memmove(a4, __src, 16 * v8);
    }
    uint64_t v38 = (char *)&a4[2 * v8];
    unint64_t v43 = v38;
    if ((unint64_t)v4 < a3 && v6 >= 16)
    {
      while (1)
      {
        uint64_t v13 = v5;
        uint64_t v14 = *v4;
        unint64_t v15 = v4[1];
        uint64_t v16 = *v12;
        unint64_t v17 = v12[1];
        sub_1CA5B6FE8(*v4, v15);
        sub_1CA5B6FE8(v16, v17);
        BOOL v18 = sub_1CA5B919C(v14, v15, v16, v17);
        if (v42) {
          break;
        }
        BOOL v19 = v18;
        sub_1CA5B6EF4(v16, v17);
        sub_1CA5B6EF4(v14, v15);
        if (v19)
        {
          uint64_t v20 = v4 + 2;
          uint64_t v21 = v13;
          if (v13 < v4 || v13 >= v20 || v13 != v4) {
            *(_OWORD *)uint64_t v13 = *(_OWORD *)v4;
          }
        }
        else
        {
          uint64_t v21 = v13;
          if (v13 != v12) {
            *(_OWORD *)uint64_t v13 = *(_OWORD *)v12;
          }
          v12 += 2;
          unint64_t v44 = v12;
          uint64_t v20 = v4;
        }
        uint64_t v42 = 0;
        uint64_t v5 = v21 + 2;
        uint64_t v45 = v5;
        if (v12 < (uint64_t *)v38)
        {
          uint64_t v4 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_49;
      }
      sub_1CA5B6EF4(v16, v17);
      sub_1CA5B6EF4(v14, v15);
    }
    goto LABEL_49;
  }
LABEL_50:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

uint64_t sub_1CA5E1490(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v5 = v4;
  int64_t v6 = __dst;
  int64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v10 = a2 - __src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  unint64_t v59 = __src;
  BOOL v58 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7) {
      goto LABEL_52;
    }
    if (__dst != a2 || &a2[8 * v14] <= __dst) {
      memmove(__dst, a2, 8 * v14);
    }
    BOOL v30 = &v6[8 * v14];
    uint64_t v57 = v30;
    unint64_t v59 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_51:
      sub_1CA5E1C80((void **)&v59, &v58, &v57);
      return 1;
    }
    BOOL v31 = (char *)(a3 - 8);
    uint64_t v32 = v7;
    uint64_t v52 = v8;
    while (1)
    {
      uint64_t v55 = v7;
      unint64_t v50 = (unint64_t)v30;
      uint64_t v33 = *((void *)v30 - 1);
      uint64_t v34 = *((void *)v32 - 1);
      char v46 = v30 - 8;
      uint64_t v48 = v32 - 8;
      uint64_t v36 = *(void *)(v33 + 32);
      unint64_t v35 = *(void *)(v33 + 40);
      swift_retain();
      swift_retain();
      sub_1CA5C4448(v36, v35);
      uint64_t v56 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
      uint64_t v37 = sub_1CA5FD888();
      uint64_t v39 = v38;
      swift_bridgeObjectRelease();
      sub_1CA5C4448(*(void *)(v34 + 32), *(void *)(v34 + 40));
      uint64_t v40 = sub_1CA5FD888();
      uint64_t v42 = v41;
      swift_bridgeObjectRelease();
      if (v37 != v40) {
        goto LABEL_36;
      }
      if (v39 == v42) {
        char v43 = 0;
      }
      else {
LABEL_36:
      }
        char v43 = sub_1CA5FDCB8();
      unint64_t v44 = v31 + 8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (v43) {
        break;
      }
      uint64_t v57 = v46;
      uint64_t v5 = v56;
      if ((unint64_t)v44 < v50 || (unint64_t)v31 >= v50)
      {
        *(void *)BOOL v31 = *(void *)v46;
        uint64_t v32 = v55;
        BOOL v30 = v46;
        goto LABEL_49;
      }
      if (v44 != (char *)v50) {
        *(void *)BOOL v31 = *(void *)v46;
      }
      uint64_t v32 = v55;
      BOOL v30 = v46;
      if (v55 <= v52) {
        goto LABEL_51;
      }
LABEL_50:
      v31 -= 8;
      int64_t v7 = v32;
      if (v30 <= v6) {
        goto LABEL_51;
      }
    }
    uint64_t v5 = v56;
    uint64_t v32 = v48;
    BOOL v30 = (char *)v50;
    if (v44 != v55 || v31 >= v55) {
      *(void *)BOOL v31 = *(void *)v48;
    }
    unint64_t v59 = v48;
LABEL_49:
    if (v32 <= v52) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v9 >= -7)
  {
    if (__dst != __src || &__src[8 * v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    unint64_t v47 = &v6[8 * v11];
    uint64_t v57 = v47;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        char v51 = v8;
        uint64_t v53 = v6;
        uint64_t v54 = v7;
        uint64_t v15 = *(void *)v7;
        uint64_t v16 = *(void *)v6;
        uint64_t v18 = *(void *)(v15 + 32);
        unint64_t v17 = *(void *)(v15 + 40);
        swift_retain();
        swift_retain();
        uint64_t v19 = v18;
        uint64_t v20 = v5;
        sub_1CA5C4448(v19, v17);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
        uint64_t v21 = sub_1CA5FD888();
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        sub_1CA5C4448(*(void *)(v16 + 32), *(void *)(v16 + 40));
        uint64_t v24 = sub_1CA5FD888();
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        if (v21 == v24 && v23 == v26)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v27 = sub_1CA5FDCB8();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27)
          {
            uint64_t v28 = v54 + 8;
            unint64_t v29 = v51;
            uint64_t v5 = v20;
            if (v51 < v54 || v51 >= v28 || v51 != v54) {
              *(void *)char v51 = *(void *)v54;
            }
            goto LABEL_23;
          }
        }
        unint64_t v29 = v51;
        uint64_t v5 = v20;
        if (v51 != v6) {
          *(void *)char v51 = *(void *)v6;
        }
        v6 += 8;
        BOOL v58 = v53 + 8;
        uint64_t v28 = v54;
LABEL_23:
        uint64_t v8 = v29 + 8;
        if (v6 < v47)
        {
          int64_t v7 = v28;
          if ((unint64_t)v28 < a3) {
            continue;
          }
        }
        unint64_t v59 = v8;
        goto LABEL_51;
      }
    }
    goto LABEL_51;
  }
LABEL_52:
  uint64_t result = sub_1CA5FDC68();
  __break(1u);
  return result;
}

char *sub_1CA5E19F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A18);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1CA5E1AEC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_1CA5FDC68();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

char *sub_1CA5E1BC4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1CA5FDC68();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1CA5E1C80(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1CA5FDC68();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1CA5E1D3C(uint64_t a1)
{
  return sub_1CA5E19F0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1CA5E1D50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A70);
  uint64_t v6 = sub_1CA5FDC48();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1CA5B6F4C(v24, v35);
      }
      else
      {
        sub_1CA5B83E4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1CA5FDD48();
      sub_1CA5FD8D8();
      uint64_t result = sub_1CA5FDD78();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1CA5B6F4C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1CA5E2050(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A98);
  uint64_t v6 = sub_1CA5FDC48();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    char v30 = *(unsigned char *)(*(void *)(v5 + 56) + v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1CA5B6FE8(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1CA5FDD48();
    sub_1CA5FD5A8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1CA5E2354(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A60);
  char v36 = a2;
  uint64_t v6 = sub_1CA5FDC48();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CA5FDD48();
    sub_1CA5FD8D8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1CA5E266C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A78);
  char v37 = a2;
  uint64_t v6 = sub_1CA5FDC48();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1CA5FDD48();
    sub_1CA5FD8D8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1CA5E2980(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A20);
  uint64_t v6 = sub_1CA5FDC48();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    __int16 v30 = *(_WORD *)(*(void *)(v5 + 56) + 2 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1CA5B6FE8(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1CA5FDD48();
    sub_1CA5FD5A8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(_WORD *)(*(void *)(v7 + 56) + 2 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1CA5E2C84(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1CA5F1A20(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CA5E3168();
      goto LABEL_7;
    }
    sub_1CA5E1D50(v15, a4 & 1);
    uint64_t v21 = sub_1CA5F1A20(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    long long v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
    return sub_1CA5B6F4C(a1, v19);
  }
LABEL_13:
  sub_1CA5E30B4(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1CA5E2DD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1CA5F1A20(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1CA5E36B4();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1CA5E266C(v15, a4 & 1);
  uint64_t v21 = sub_1CA5F1A20(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA5E2F4C(__int16 a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1CA5F1A4C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1CA5E3870();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(_WORD *)(v18[7] + 2 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1CA5E2980(result, a4 & 1);
  uint64_t result = sub_1CA5F1A4C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(_WORD *)(v18[7] + 2 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return sub_1CA5B6FE8(a2, a3);
}

_OWORD *sub_1CA5E30B4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1CA5B6F4C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1CA5E3120(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void *sub_1CA5E3168()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDC38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1CA5B83E4(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1CA5B6F4C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA5E3350()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDC38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
    uint64_t result = (void *)sub_1CA5B6FE8(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA5E34FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDC38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA5E36B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDC38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA5E3870()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDC38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 56) + 2 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(_WORD *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)sub_1CA5B6FE8(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E3A20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1CA5FDD48();
  sub_1CA5FDD58();
  swift_bridgeObjectRetain();
  if (a3) {
    sub_1CA5FD8D8();
  }
  uint64_t v8 = sub_1CA5FDD78();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1CA5E681C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  while (1)
  {
    int64_t v13 = (void *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!a3) {
      goto LABEL_15;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (!a3) {
    goto LABEL_6;
  }
  BOOL v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (sub_1CA5FDCB8() & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
  uint64_t v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1CA5E3BDC(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1CB798740](*(void *)(v6 + 40), a2, 1);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1CA5E69C0(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v10 + v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1CA5E3CE0(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *v3;
  sub_1CA5FDD48();
  swift_bridgeObjectRetain();
  sub_1CA5FD5A8();
  uint64_t v7 = sub_1CA5FDD78();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)long long __s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_1CA5B6FE8(a2, a3);
    sub_1CA5E6AE8(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v86 = ~v8;
  unint64_t v11 = a3 >> 62;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    int64_t v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_1CA5B6FE8(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_1CA5B6EF4(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              unint64_t v27 = (char *)sub_1CA5FD408();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = sub_1CA5FD428();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              sub_1CA5FD418();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v29 = (char *)sub_1CA5FD408();
                  if (v29)
                  {
                    uint64_t v30 = sub_1CA5FD428();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = sub_1CA5FD418();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_1CA5B6EF4(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)sub_1CA5FD408();
                  if (v67)
                  {
                    uint64_t v68 = sub_1CA5FD428();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_1CA5FD418();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
LABEL_112:
                  swift_release();
                }
                sub_1CA5B6EF4(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)long long __s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                unint64_t v47 = (uint64_t *)__s1;
                char v46 = v27;
LABEL_99:
                int v45 = memcmp(v46, v47, __n);
LABEL_100:
                sub_1CA5B6EF4(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              int64_t v35 = (char *)sub_1CA5FD408();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = sub_1CA5FD428();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              sub_1CA5FD418();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)long long __s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                goto LABEL_112;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                char v37 = (char *)sub_1CA5FD408();
                if (v37)
                {
                  uint64_t v38 = sub_1CA5FD428();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = sub_1CA5FD418();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_1CA5B6EF4(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_1CA5FD408();
                if (v60)
                {
                  uint64_t v61 = sub_1CA5FD428();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_1CA5FD418();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_1CA5B6EF4(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)long long __s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                sub_1CA5B6FE8(a2, a3);
                uint64_t v41 = sub_1CA5FD408();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = sub_1CA5FD428();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = sub_1CA5FD418();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                a3 = v78;
                sub_1CA5B6EF4(a2, v78);
                goto LABEL_100;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              unint64_t v50 = (char *)sub_1CA5FD408();
              if (v50)
              {
                uint64_t v56 = sub_1CA5FD428();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_1CA5FD418();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_1CA5B6EF4(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)long long __s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t v88 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                char v46 = __s1;
                unint64_t v47 = &v88;
                goto LABEL_99;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                sub_1CA5B6FE8(a2, a3);
                uint64_t v23 = sub_1CA5FD408();
                if (!v23)
                {
                  sub_1CA5FD418();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  sub_1CA5FD418();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x1CA5E46FCLL);
                }
                uint64_t v24 = v23;
                uint64_t v25 = sub_1CA5FD428();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              unint64_t v50 = (char *)sub_1CA5FD408();
              if (v50)
              {
                uint64_t v51 = sub_1CA5FD428();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_1CA5FD418();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_1CA5B6EF4(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(a2, a3);
        uint64_t v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_1CA5B6FE8(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_1CA5E472C(uint64_t a1, uint64_t a2)
{
  uint64_t v184 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  sub_1CA5FDD48();
  uint64_t v6 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  sub_1CA5B6FE8(v6, v5);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v6, v5);
  uint64_t v7 = *(void *)(a2 + 16);
  unint64_t v8 = *(void *)(a2 + 24);
  sub_1CA5B6FE8(v7, v8);
  sub_1CA5FD5A8();
  sub_1CA5B6EF4(v7, v8);
  uint64_t v151 = a2;
  int v161 = *(unsigned __int8 *)(a2 + 32);
  sub_1CA5FDD58();
  uint64_t v9 = sub_1CA5FDD78();
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v171 = v4 + 56;
  if ((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    unint64_t v12 = v5 >> 62;
    unint64_t v170 = v8 >> 62;
    uint64_t v13 = ~v10;
    unint64_t v155 = HIDWORD(v6);
    BOOL v14 = __OFSUB__(HIDWORD(v6), v6);
    BOOL v167 = v14;
    unint64_t v165 = v5;
    size_t v166 = HIDWORD(v6) - (int)v6;
    uint64_t v162 = (int)v6;
    uint64_t v163 = v7;
    uint64_t v153 = (v6 >> 32) - (int)v6;
    uint64_t v154 = v6 >> 32;
    unint64_t v146 = HIDWORD(v7);
    BOOL v15 = __OFSUB__(HIDWORD(v7), v7);
    BOOL v157 = v15;
    size_t v156 = HIDWORD(v7) - (int)v7;
    unint64_t v149 = v8;
    uint64_t v147 = v7 >> 32;
    uint64_t v148 = (int)v7;
    uint64_t v145 = (v7 >> 32) - (int)v7;
    uint64_t v168 = v6;
    size_t __n = BYTE6(v8);
    size_t v16 = BYTE6(v5);
    uint64_t v164 = v4;
    uint64_t v17 = v4 + 56;
    unint64_t v176 = v5 >> 62;
    uint64_t v173 = ~v10;
    size_t v172 = BYTE6(v5);
    while (1)
    {
      uint64_t v18 = *(void *)(v4 + 48) + 40 * v11;
      uint64_t v19 = *(void *)v18;
      unint64_t v20 = *(void *)(v18 + 8);
      uint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      uint64_t v23 = 0;
      switch(v20 >> 62)
      {
        case 1uLL:
          LODWORD(v23) = HIDWORD(v19) - v19;
          if (__OFSUB__(HIDWORD(v19), v19))
          {
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
          }
          uint64_t v23 = (int)v23;
          break;
        case 2uLL:
          uint64_t v25 = *(void *)(v19 + 16);
          uint64_t v24 = *(void *)(v19 + 24);
          BOOL v26 = __OFSUB__(v24, v25);
          uint64_t v23 = v24 - v25;
          if (!v26) {
            break;
          }
          goto LABEL_232;
        case 3uLL:
          break;
        default:
          uint64_t v23 = BYTE6(v20);
          break;
      }
      size_t v27 = v16;
      switch((int)v12)
      {
        case 1:
          size_t v27 = v166;
          if (v167) {
            goto LABEL_233;
          }
          goto LABEL_21;
        case 2:
          uint64_t v29 = *(void *)(v6 + 16);
          uint64_t v28 = *(void *)(v6 + 24);
          BOOL v26 = __OFSUB__(v28, v29);
          size_t v27 = v28 - v29;
          if (!v26) {
            goto LABEL_21;
          }
          goto LABEL_234;
        case 3:
          if (!v23) {
            goto LABEL_32;
          }
          goto LABEL_11;
        default:
LABEL_21:
          if (v23 != v27) {
            goto LABEL_11;
          }
          if (v23 < 1)
          {
LABEL_32:
            int v174 = *(unsigned __int8 *)(v18 + 32);
            uint64_t v175 = 40 * v11;
            sub_1CA5B6FE8(v19, v20);
            sub_1CA5B6FE8(v22, v21);
          }
          else
          {
            uint64_t v175 = 40 * v11;
            int v174 = *(unsigned __int8 *)(v18 + 32);
            switch(v20 >> 62)
            {
              case 1uLL:
                if ((int)v19 > v19 >> 32) {
                  goto LABEL_239;
                }
                sub_1CA5B6FE8(v19, v20);
                sub_1CA5B6FE8(v22, v21);
                sub_1CA5B6FE8(v19, v20);
                uint64_t v44 = sub_1CA5FD408();
                if (v44)
                {
                  uint64_t v45 = v44;
                  uint64_t v46 = sub_1CA5FD428();
                  if (__OFSUB__((int)v19, v46)) {
                    goto LABEL_241;
                  }
                  unint64_t v47 = (const void *)(v45 + (int)v19 - v46);
                }
                else
                {
                  unint64_t v47 = 0;
                }
                sub_1CA5FD418();
                uint64_t v6 = v168;
                uint64_t v17 = v171;
                if (v176)
                {
                  if (v176 == 1)
                  {
                    if (v154 < v162) {
                      goto LABEL_250;
                    }
                    swift_retain();
                    uint64_t v61 = (char *)sub_1CA5FD408();
                    if (v61)
                    {
                      uint64_t v62 = sub_1CA5FD428();
                      if (__OFSUB__(v162, v62)) {
                        goto LABEL_258;
                      }
                      v61 += v162 - v62;
                    }
                    uint64_t v63 = sub_1CA5FD418();
                    size_t v64 = v153;
                    if (v63 < v153) {
                      size_t v64 = v63;
                    }
                    if (!v47) {
                      goto LABEL_281;
                    }
                    if (!v61) {
                      goto LABEL_282;
                    }
                    int v65 = memcmp(v47, v61, v64);
                    uint64_t v6 = v168;
                    sub_1CA5B6EF4(v168, v165);
                  }
                  else
                  {
                    uint64_t v82 = *(void *)(v168 + 16);
                    uint64_t v83 = *(void *)(v168 + 24);
                    swift_retain();
                    swift_retain();
                    BOOL v84 = (char *)sub_1CA5FD408();
                    if (v84)
                    {
                      uint64_t v85 = sub_1CA5FD428();
                      if (__OFSUB__(v82, v85)) {
                        goto LABEL_257;
                      }
                      v84 += v82 - v85;
                    }
                    BOOL v26 = __OFSUB__(v83, v82);
                    int64_t v86 = v83 - v82;
                    if (v26) {
                      goto LABEL_251;
                    }
                    uint64_t v87 = sub_1CA5FD418();
                    if (v87 >= v86) {
                      size_t v88 = v86;
                    }
                    else {
                      size_t v88 = v87;
                    }
                    if (!v47) {
                      goto LABEL_289;
                    }
                    uint64_t v17 = v171;
                    if (!v84) {
                      goto LABEL_290;
                    }
                    int v65 = memcmp(v47, v84, v88);
                    swift_release();
                    uint64_t v6 = v168;
                    swift_release();
                  }
                }
                else
                {
                  *(_DWORD *)long long __s1 = v168;
                  void __s1[4] = v155;
                  *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v168 + 5);
                  __s1[7] = HIBYTE(v168);
                  *(_DWORD *)&__s1[8] = v165;
                  *(_WORD *)&__s1[12] = WORD2(v165);
                  if (!v47) {
                    goto LABEL_288;
                  }
                  int v65 = memcmp(v47, __s1, v16);
                }
                sub_1CA5B6EF4(v19, v20);
                goto LABEL_138;
              case 2uLL:
                uint64_t v48 = *(void *)(v19 + 16);
                sub_1CA5B6FE8(v19, v20);
                sub_1CA5B6FE8(v22, v21);
                swift_retain();
                swift_retain();
                uint64_t v49 = sub_1CA5FD408();
                if (v49)
                {
                  uint64_t v50 = v49;
                  uint64_t v51 = sub_1CA5FD428();
                  if (__OFSUB__(v48, v51)) {
                    goto LABEL_240;
                  }
                  uint64_t v158 = (void *)(v50 + v48 - v51);
                }
                else
                {
                  uint64_t v158 = 0;
                }
                uint64_t v6 = v168;
                sub_1CA5FD418();
                uint64_t v17 = v171;
                if (!v176)
                {
                  *(_DWORD *)long long __s1 = v168;
                  void __s1[4] = v155;
                  *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v168 + 5);
                  __s1[7] = HIBYTE(v168);
                  *(_DWORD *)&__s1[8] = v165;
                  *(_WORD *)&__s1[12] = WORD2(v165);
                  if (!v158) {
                    goto LABEL_285;
                  }
                  int v65 = memcmp(v158, __s1, v16);
                  swift_release();
                  swift_release();
LABEL_138:
                  uint64_t v4 = v164;
                  if (v65)
                  {
LABEL_10:
                    sub_1CA5B6EF4(v19, v20);
                    sub_1CA5B6EF4(v22, v21);
                    LODWORD(v12) = v176;
                    uint64_t v13 = v173;
                    size_t v16 = v172;
                    goto LABEL_11;
                  }
                  break;
                }
                if (v176 == 1)
                {
                  if (v154 < v162) {
                    goto LABEL_244;
                  }
                  swift_retain();
                  size_t v57 = (char *)sub_1CA5FD408();
                  if (v57)
                  {
                    uint64_t v58 = sub_1CA5FD428();
                    if (__OFSUB__(v162, v58)) {
                      goto LABEL_256;
                    }
                    v57 += v162 - v58;
                  }
                  uint64_t v59 = sub_1CA5FD418();
                  size_t v60 = v153;
                  if (v59 < v153) {
                    size_t v60 = v59;
                  }
                  if (!v158) {
                    goto LABEL_279;
                  }
                  if (!v57) {
                    goto LABEL_280;
                  }
                  int v56 = memcmp(v158, v57, v60);
                  sub_1CA5B6EF4(v168, v165);
                  swift_release();
                }
                else
                {
                  uint64_t v77 = *(void *)(v168 + 16);
                  uint64_t v143 = *(void *)(v168 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v78 = (char *)sub_1CA5FD408();
                  if (v78)
                  {
                    uint64_t v79 = sub_1CA5FD428();
                    if (__OFSUB__(v77, v79)) {
                      goto LABEL_255;
                    }
                    v78 += v77 - v79;
                  }
                  if (__OFSUB__(v143, v77)) {
                    goto LABEL_249;
                  }
                  uint64_t v80 = sub_1CA5FD418();
                  if (v80 >= v143 - v77) {
                    size_t v81 = v143 - v77;
                  }
                  else {
                    size_t v81 = v80;
                  }
                  if (!v158) {
                    goto LABEL_286;
                  }
                  uint64_t v6 = v168;
                  if (!v78) {
                    goto LABEL_287;
                  }
                  int v56 = memcmp(v158, v78, v81);
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_release();
                uint64_t v4 = v164;
                goto LABEL_123;
              case 3uLL:
                *(void *)&__s1[6] = 0;
                *(void *)long long __s1 = 0;
                if (!v12) {
                  goto LABEL_68;
                }
                if (v12 != 1)
                {
                  uint64_t v72 = *(void *)(v6 + 16);
                  uint64_t v73 = *(void *)(v6 + 24);
                  sub_1CA5B6FE8(v19, v20);
                  sub_1CA5B6FE8(v22, v21);
                  swift_retain();
                  swift_retain();
                  uint64_t v68 = (char *)sub_1CA5FD408();
                  if (v68)
                  {
                    uint64_t v74 = sub_1CA5FD428();
                    if (__OFSUB__(v72, v74)) {
                      goto LABEL_254;
                    }
                    v68 += v72 - v74;
                  }
                  BOOL v26 = __OFSUB__(v73, v72);
                  int64_t v70 = v73 - v72;
                  if (v26) {
                    goto LABEL_246;
                  }
                  uint64_t v71 = sub_1CA5FD418();
                  if (!v68) {
                    goto LABEL_284;
                  }
LABEL_105:
                  if (v71 >= v70) {
                    size_t v75 = v70;
                  }
                  else {
                    size_t v75 = v71;
                  }
                  int v76 = memcmp(__s1, v68, v75);
                  swift_release();
                  uint64_t v6 = v168;
                  swift_release();
                  uint64_t v4 = v164;
                  uint64_t v17 = v171;
                  if (v76) {
                    goto LABEL_10;
                  }
                  break;
                }
                if (v154 < v162) {
                  goto LABEL_243;
                }
                sub_1CA5B6FE8(v6, v165);
                sub_1CA5B6FE8(v19, v20);
                sub_1CA5B6FE8(v22, v21);
                uint64_t v52 = sub_1CA5FD408();
                if (!v52) {
                  goto LABEL_278;
                }
                uint64_t v31 = v52;
                uint64_t v53 = sub_1CA5FD428();
                uint64_t v33 = v162 - v53;
                if (__OFSUB__(v162, v53)) {
                  goto LABEL_248;
                }
                goto LABEL_64;
              default:
                *(void *)long long __s1 = *(void *)v18;
                *(_WORD *)&__s1[8] = v20;
                __s1[10] = BYTE2(v20);
                __s1[11] = BYTE3(v20);
                __s1[12] = BYTE4(v20);
                __s1[13] = BYTE5(v20);
                if (v12)
                {
                  if (v12 != 1)
                  {
                    uint64_t v66 = *(void *)(v6 + 16);
                    uint64_t v67 = *(void *)(v6 + 24);
                    sub_1CA5B6FE8(v19, v20);
                    sub_1CA5B6FE8(v22, v21);
                    swift_retain();
                    swift_retain();
                    uint64_t v68 = (char *)sub_1CA5FD408();
                    if (v68)
                    {
                      uint64_t v69 = sub_1CA5FD428();
                      if (__OFSUB__(v66, v69)) {
                        goto LABEL_253;
                      }
                      v68 += v66 - v69;
                    }
                    BOOL v26 = __OFSUB__(v67, v66);
                    int64_t v70 = v67 - v66;
                    if (v26) {
                      goto LABEL_245;
                    }
                    uint64_t v71 = sub_1CA5FD418();
                    if (!v68) {
                      goto LABEL_283;
                    }
                    goto LABEL_105;
                  }
                  if (v154 < v162) {
                    goto LABEL_242;
                  }
                  sub_1CA5B6FE8(v6, v165);
                  sub_1CA5B6FE8(v19, v20);
                  sub_1CA5B6FE8(v22, v21);
                  uint64_t v30 = sub_1CA5FD408();
                  if (!v30)
                  {
                    sub_1CA5FD418();
                    __break(1u);
LABEL_278:
                    sub_1CA5FD418();
                    __break(1u);
LABEL_279:
                    __break(1u);
LABEL_280:
                    __break(1u);
LABEL_281:
                    __break(1u);
LABEL_282:
                    __break(1u);
LABEL_283:
                    __break(1u);
LABEL_284:
                    __break(1u);
LABEL_285:
                    __break(1u);
LABEL_286:
                    __break(1u);
LABEL_287:
                    __break(1u);
LABEL_288:
                    __break(1u);
LABEL_289:
                    __break(1u);
LABEL_290:
                    __break(1u);
LABEL_291:
                    sub_1CA5FD418();
                    __break(1u);
LABEL_292:
                    sub_1CA5FD418();
                    __break(1u);
LABEL_293:
                    __break(1u);
LABEL_294:
                    __break(1u);
LABEL_295:
                    __break(1u);
LABEL_296:
                    __break(1u);
LABEL_297:
                    __break(1u);
LABEL_298:
                    __break(1u);
LABEL_299:
                    __break(1u);
LABEL_300:
                    __break(1u);
LABEL_301:
                    __break(1u);
LABEL_302:
                    __break(1u);
LABEL_303:
                    __break(1u);
LABEL_304:
                    __break(1u);
                    JUMPOUT(0x1CA5E5BDCLL);
                  }
                  uint64_t v31 = v30;
                  uint64_t v32 = sub_1CA5FD428();
                  uint64_t v33 = v162 - v32;
                  if (__OFSUB__(v162, v32)) {
                    goto LABEL_247;
                  }
LABEL_64:
                  uint64_t v54 = sub_1CA5FD418();
                  if (v54 >= v153) {
                    size_t v55 = v153;
                  }
                  else {
                    size_t v55 = v54;
                  }
                  int v56 = memcmp(__s1, (const void *)(v31 + v33), v55);
                  uint64_t v6 = v168;
                  sub_1CA5B6EF4(v168, v165);
LABEL_123:
                  uint64_t v17 = v171;
                  if (v56) {
                    goto LABEL_10;
                  }
                }
                else
                {
LABEL_68:
                  LOWORD(__s2) = v6;
                  BYTE2(__s2) = BYTE2(v6);
                  HIBYTE(__s2) = BYTE3(v6);
                  char v178 = v155;
                  LOBYTE(v179) = BYTE5(v6);
                  HIBYTE(v179) = BYTE6(v6);
                  char v180 = HIBYTE(v6);
                  int v181 = v165;
                  __int16 v182 = WORD2(v165);
                  sub_1CA5B6FE8(v19, v20);
                  sub_1CA5B6FE8(v22, v21);
                  if (memcmp(__s1, &__s2, v16)) {
                    goto LABEL_10;
                  }
                }
                break;
            }
          }
          uint64_t v34 = 0;
          switch(v21 >> 62)
          {
            case 1uLL:
              LODWORD(v34) = HIDWORD(v22) - v22;
              if (__OFSUB__(HIDWORD(v22), v22)) {
                goto LABEL_235;
              }
              uint64_t v34 = (int)v34;
LABEL_38:
              size_t v37 = __n;
              switch((int)v170)
              {
                case 1:
                  size_t v37 = v156;
                  if (v157) {
                    goto LABEL_237;
                  }
                  goto LABEL_42;
                case 2:
                  uint64_t v39 = *(void *)(v163 + 16);
                  uint64_t v38 = *(void *)(v163 + 24);
                  BOOL v26 = __OFSUB__(v38, v39);
                  size_t v37 = v38 - v39;
                  if (!v26) {
                    goto LABEL_42;
                  }
                  goto LABEL_238;
                case 3:
                  if (v34) {
                    goto LABEL_10;
                  }
                  goto LABEL_228;
                default:
LABEL_42:
                  if (v34 != v37) {
                    goto LABEL_10;
                  }
                  if (v34 < 1) {
                    goto LABEL_228;
                  }
                  break;
              }
              break;
            case 2uLL:
              uint64_t v36 = *(void *)(v22 + 16);
              uint64_t v35 = *(void *)(v22 + 24);
              BOOL v26 = __OFSUB__(v35, v36);
              uint64_t v34 = v35 - v36;
              if (!v26) {
                goto LABEL_38;
              }
              goto LABEL_236;
            case 3uLL:
              goto LABEL_38;
            default:
              uint64_t v34 = BYTE6(v21);
              goto LABEL_38;
          }
          switch(v21 >> 62)
          {
            case 1uLL:
              if ((int)v22 > v22 >> 32) {
                goto LABEL_252;
              }
              sub_1CA5B6FE8(v22, v21);
              __int16 v89 = (char *)sub_1CA5FD408();
              if (v89)
              {
                uint64_t v90 = sub_1CA5FD428();
                if (__OFSUB__((int)v22, v90)) {
                  goto LABEL_260;
                }
                v89 += (int)v22 - v90;
                uint64_t v17 = v171;
              }
              else
              {
                uint64_t v17 = v171;
              }
              sub_1CA5FD418();
              if (v170)
              {
                if (v170 == 1)
                {
                  if (v147 < v148) {
                    goto LABEL_269;
                  }
                  swift_retain();
                  uint64_t v106 = (char *)sub_1CA5FD408();
                  if (v106)
                  {
                    uint64_t v107 = sub_1CA5FD428();
                    if (__OFSUB__(v148, v107)) {
                      goto LABEL_276;
                    }
                    v106 += v148 - v107;
                  }
                  uint64_t v108 = sub_1CA5FD418();
                  size_t v109 = v145;
                  if (v108 < v145) {
                    size_t v109 = v108;
                  }
                  if (!v89) {
                    goto LABEL_295;
                  }
                  if (!v106) {
                    goto LABEL_296;
                  }
                  int v99 = memcmp(v89, v106, v109);
                  sub_1CA5B6EF4(v163, v149);
                }
                else
                {
                  uint64_t v129 = *(void *)(v163 + 16);
                  uint64_t v160 = *(char **)(v163 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v130 = (char *)sub_1CA5FD408();
                  if (v130)
                  {
                    uint64_t v131 = sub_1CA5FD428();
                    if (__OFSUB__(v129, v131)) {
                      goto LABEL_275;
                    }
                    v130 += v129 - v131;
                  }
                  BOOL v26 = __OFSUB__(v160, v129);
                  uint64_t v132 = &v160[-v129];
                  if (v26) {
                    goto LABEL_270;
                  }
                  uint64_t v133 = sub_1CA5FD418();
                  if (v133 >= (uint64_t)v132) {
                    size_t v134 = (size_t)v132;
                  }
                  else {
                    size_t v134 = v133;
                  }
                  if (!v89) {
                    goto LABEL_303;
                  }
                  uint64_t v4 = v164;
                  if (!v130) {
                    goto LABEL_304;
                  }
                  int v99 = memcmp(v89, v130, v134);
                  swift_release();
                  swift_release();
                }
                uint64_t v100 = v22;
                unint64_t v101 = v21;
LABEL_226:
                sub_1CA5B6EF4(v100, v101);
                uint64_t v6 = v168;
                goto LABEL_227;
              }
              *(_DWORD *)long long __s1 = v163;
              void __s1[4] = v146;
              *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v163 + 5);
              __s1[7] = HIBYTE(v163);
              *(_DWORD *)&__s1[8] = v149;
              *(_WORD *)&__s1[12] = WORD2(v149);
              if (!v89) {
                goto LABEL_302;
              }
              int v128 = memcmp(v89, __s1, __n);
              sub_1CA5B6EF4(v22, v21);
              uint64_t v6 = v168;
              if (v128) {
                goto LABEL_10;
              }
              break;
            case 2uLL:
              uint64_t v91 = *(void *)(v22 + 16);
              swift_retain();
              swift_retain();
              uint64_t v92 = sub_1CA5FD408();
              if (v92)
              {
                uint64_t v93 = v92;
                uint64_t v94 = sub_1CA5FD428();
                if (__OFSUB__(v91, v94)) {
                  goto LABEL_259;
                }
                uint64_t v159 = (void *)(v93 + v91 - v94);
                uint64_t v17 = v171;
              }
              else
              {
                uint64_t v159 = 0;
                uint64_t v17 = v171;
              }
              sub_1CA5FD418();
              uint64_t v6 = v168;
              if (v170)
              {
                if (v170 == 1)
                {
                  if (v147 < v148) {
                    goto LABEL_265;
                  }
                  swift_retain();
                  uint64_t v102 = (char *)sub_1CA5FD408();
                  if (v102)
                  {
                    uint64_t v103 = sub_1CA5FD428();
                    if (__OFSUB__(v148, v103)) {
                      goto LABEL_274;
                    }
                    v102 += v148 - v103;
                  }
                  uint64_t v104 = sub_1CA5FD418();
                  size_t v105 = v145;
                  if (v104 < v145) {
                    size_t v105 = v104;
                  }
                  if (!v159) {
                    goto LABEL_293;
                  }
                  if (!v102) {
                    goto LABEL_294;
                  }
                  int v99 = memcmp(v159, v102, v105);
                  sub_1CA5B6EF4(v163, v149);
                  swift_release();
                }
                else
                {
                  uint64_t v122 = *(void *)(v163 + 16);
                  uint64_t v144 = *(void *)(v163 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v123 = (char *)sub_1CA5FD408();
                  if (v123)
                  {
                    uint64_t v124 = sub_1CA5FD428();
                    if (__OFSUB__(v122, v124)) {
                      goto LABEL_273;
                    }
                    v123 += v122 - v124;
                  }
                  BOOL v26 = __OFSUB__(v144, v122);
                  int64_t v125 = v144 - v122;
                  if (v26) {
                    goto LABEL_268;
                  }
                  uint64_t v126 = sub_1CA5FD418();
                  if (v126 >= v125) {
                    size_t v127 = v125;
                  }
                  else {
                    size_t v127 = v126;
                  }
                  if (!v159) {
                    goto LABEL_300;
                  }
                  uint64_t v6 = v168;
                  if (!v123) {
                    goto LABEL_301;
                  }
                  int v99 = memcmp(v159, v123, v127);
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_release();
                uint64_t v4 = v164;
LABEL_227:
                uint64_t v17 = v171;
                if (v99) {
                  goto LABEL_10;
                }
                break;
              }
              *(_DWORD *)long long __s1 = v163;
              void __s1[4] = v146;
              *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v163 + 5);
              __s1[7] = HIBYTE(v163);
              *(_DWORD *)&__s1[8] = v149;
              *(_WORD *)&__s1[12] = WORD2(v149);
              if (!v159) {
                goto LABEL_299;
              }
              int v121 = memcmp(v159, __s1, __n);
              swift_release();
              swift_release();
              uint64_t v4 = v164;
              if (v121) {
                goto LABEL_10;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)long long __s1 = 0;
              if (!v170) {
                goto LABEL_156;
              }
              if (v170 == 1)
              {
                if (v147 < v148) {
                  goto LABEL_262;
                }
                sub_1CA5B6FE8(v163, v149);
                uint64_t v95 = sub_1CA5FD408();
                if (!v95) {
                  goto LABEL_292;
                }
                uint64_t v41 = v95;
                uint64_t v96 = sub_1CA5FD428();
                uint64_t v43 = v148 - v96;
                if (__OFSUB__(v148, v96)) {
                  goto LABEL_264;
                }
LABEL_152:
                uint64_t v97 = sub_1CA5FD418();
                if (v97 >= v145) {
                  size_t v98 = v145;
                }
                else {
                  size_t v98 = v97;
                }
                int v99 = memcmp(__s1, (const void *)(v41 + v43), v98);
                uint64_t v100 = v163;
                unint64_t v101 = v149;
                goto LABEL_226;
              }
              uint64_t v116 = *(void *)(v163 + 16);
              uint64_t v117 = *(void *)(v163 + 24);
              swift_retain();
              swift_retain();
              char v112 = (char *)sub_1CA5FD408();
              if (v112)
              {
                uint64_t v118 = sub_1CA5FD428();
                if (__OFSUB__(v116, v118)) {
                  goto LABEL_272;
                }
                v112 += v116 - v118;
              }
              BOOL v26 = __OFSUB__(v117, v116);
              int64_t v114 = v117 - v116;
              if (v26) {
                goto LABEL_267;
              }
              uint64_t v115 = sub_1CA5FD418();
              uint64_t v4 = v164;
              if (!v112) {
                goto LABEL_298;
              }
LABEL_193:
              if (v115 >= v114) {
                size_t v119 = v114;
              }
              else {
                size_t v119 = v115;
              }
              int v120 = memcmp(__s1, v112, v119);
              swift_release();
              swift_release();
              uint64_t v6 = v168;
              uint64_t v17 = v171;
              if (v120) {
                goto LABEL_10;
              }
              break;
            default:
              *(void *)long long __s1 = v22;
              *(_WORD *)&__s1[8] = v21;
              __s1[10] = BYTE2(v21);
              __s1[11] = BYTE3(v21);
              __s1[12] = BYTE4(v21);
              __s1[13] = BYTE5(v21);
              if (!v170)
              {
LABEL_156:
                int __s2 = v163;
                char v178 = v146;
                __int16 v179 = *(_WORD *)((char *)&v163 + 5);
                char v180 = HIBYTE(v163);
                int v181 = v149;
                __int16 v182 = WORD2(v149);
                if (memcmp(__s1, &__s2, __n)) {
                  goto LABEL_10;
                }
                break;
              }
              if (v170 == 1)
              {
                if (v147 < v148) {
                  goto LABEL_261;
                }
                sub_1CA5B6FE8(v163, v149);
                uint64_t v40 = sub_1CA5FD408();
                if (!v40) {
                  goto LABEL_291;
                }
                uint64_t v41 = v40;
                uint64_t v42 = sub_1CA5FD428();
                uint64_t v43 = v148 - v42;
                if (__OFSUB__(v148, v42)) {
                  goto LABEL_263;
                }
                goto LABEL_152;
              }
              uint64_t v110 = *(void *)(v163 + 16);
              uint64_t v111 = *(void *)(v163 + 24);
              swift_retain();
              swift_retain();
              char v112 = (char *)sub_1CA5FD408();
              if (v112)
              {
                uint64_t v113 = sub_1CA5FD428();
                if (__OFSUB__(v110, v113)) {
                  goto LABEL_271;
                }
                v112 += v110 - v113;
              }
              BOOL v26 = __OFSUB__(v111, v110);
              int64_t v114 = v111 - v110;
              if (v26) {
                goto LABEL_266;
              }
              uint64_t v115 = sub_1CA5FD418();
              uint64_t v4 = v164;
              if (!v112) {
                goto LABEL_297;
              }
              goto LABEL_193;
          }
LABEL_228:
          sub_1CA5B6EF4(v19, v20);
          sub_1CA5B6EF4(v22, v21);
          LODWORD(v12) = v176;
          uint64_t v13 = v173;
          size_t v16 = v172;
          if (v161 == v174)
          {
            swift_bridgeObjectRelease();
            sub_1CA5F0478((uint64_t *)v151, (void (*)(uint64_t, uint64_t))sub_1CA5B6EF4);
            uint64_t v135 = *(void *)(*(void *)v150 + 48) + v175;
            uint64_t v136 = *(void *)v135;
            unint64_t v137 = *(void *)(v135 + 8);
            uint64_t v138 = *(void *)(v135 + 16);
            unint64_t v139 = *(void *)(v135 + 24);
            LOBYTE(v135) = *(unsigned char *)(v135 + 32);
            *(void *)a1 = v136;
            *(void *)(a1 + 8) = v137;
            *(void *)(a1 + 16) = v138;
            *(void *)(a1 + 24) = v139;
            *(unsigned char *)(a1 + 32) = v135;
            sub_1CA5B6FE8(v136, v137);
            sub_1CA5B6FE8(v138, v139);
            return 0;
          }
LABEL_11:
          unint64_t v11 = (v11 + 1) & v13;
          if (((*(void *)(v17 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_230;
          }
          break;
      }
    }
  }
LABEL_230:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)long long __s1 = *(void *)v150;
  *(void *)uint64_t v150 = 0x8000000000000000;
  sub_1CA5F0478((uint64_t *)v151, (void (*)(uint64_t, uint64_t))sub_1CA5B6FE8);
  sub_1CA5E750C(v151, v11, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v150 = *(void *)__s1;
  swift_bridgeObjectRelease();
  long long v142 = *(_OWORD *)(v151 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v151;
  *(_OWORD *)(a1 + 16) = v142;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v151 + 32);
  return 1;
}

uint64_t sub_1CA5E5C3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A68);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_35;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_35;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_35;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_41;
                  }
                  if (v11 >= v8) {
                    goto LABEL_35;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1CA5FDD48();
      sub_1CA5FDD58();
      if (v20) {
        sub_1CA5FD8D8();
      }
      uint64_t result = sub_1CA5FDD78();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1CA5E5F38()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A50);
  uint64_t result = sub_1CA5FDB08();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned __int8 v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      uint64_t result = MEMORY[0x1CB798740](*(void *)(v4 + 40), v18, 1);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1CA5E61D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089F8);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1CA5FDD48();
      sub_1CA5FD5A8();
      uint64_t result = sub_1CA5FDD78();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1CA5E64B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A08);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    for (i = v2; ; uint64_t v2 = i)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 40 * v14;
      uint64_t v19 = *(void *)v18;
      unint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      char v23 = *(unsigned char *)(v18 + 32);
      sub_1CA5FDD48();
      sub_1CA5B6FE8(v19, v20);
      sub_1CA5FD5A8();
      sub_1CA5B6EF4(v19, v20);
      sub_1CA5B6FE8(v21, v22);
      sub_1CA5FD5A8();
      sub_1CA5B6EF4(v21, v22);
      sub_1CA5FDD58();
      uint64_t result = sub_1CA5FDD78();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 40 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(void *)(v12 + 16) = v21;
      *(void *)(v12 + 24) = v22;
      *(unsigned char *)(v12 + 32) = v23;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1CA5E681C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1CA5E5C3C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1CA5E8980();
      goto LABEL_22;
    }
    sub_1CA5E9054();
  }
  uint64_t v11 = *v4;
  sub_1CA5FDD48();
  sub_1CA5FDD58();
  if (a2) {
    sub_1CA5FD8D8();
  }
  uint64_t result = sub_1CA5FDD78();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v11 + 48);
    do
    {
      unint64_t v16 = (void *)(v15 + 16 * a3);
      uint64_t v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          BOOL v18 = *v16 == v8 && v17 == a2;
          if (v18 || (uint64_t result = sub_1CA5FDCB8(), (result & 1) != 0))
          {
LABEL_21:
            uint64_t result = sub_1CA5FDCD8();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_21;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_22:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
  *unint64_t v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_1CA5E69C0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1CA5E5F38();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1CA5E8B30();
      goto LABEL_14;
    }
    sub_1CA5E9320();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x1CB798740](*(void *)(*v3 + 40), v5, 1);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1CA5FDCD8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1CA5E6AE8(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  uint64_t v96 = *MEMORY[0x1E4F143B8];
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1CA5E61D0();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (uint64_t)sub_1CA5E8CC4();
        goto LABEL_123;
      }
      sub_1CA5E9588();
    }
    uint64_t v11 = *v4;
    sub_1CA5FDD48();
    sub_1CA5FD5A8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v88 = ~v12;
      uint64_t v84 = v11;
      uint64_t v86 = v11 + 56;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v85 = v14;
      unint64_t v87 = a2 >> 62;
      uint64_t v82 = (v8 >> 32) - (int)v8;
      uint64_t v83 = v8 >> 32;
      size_t v81 = v4;
      while (1)
      {
        uint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_1CA5B6FE8(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v85) {
                  goto LABEL_127;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_128;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_163;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  uint64_t result = sub_1CA5B6EF4(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_163;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_126;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_130;
            }
            uint64_t v43 = (unsigned char *)sub_1CA5FD408();
            if (!v43) {
              goto LABEL_63;
            }
            uint64_t v44 = sub_1CA5FD428();
            if (__OFSUB__((int)v17, v44)) {
              goto LABEL_132;
            }
            v43 += (int)v17 - v44;
LABEL_63:
            sub_1CA5FD418();
            uint64_t v13 = v86;
            if (!v87)
            {
              *(void *)long long __s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v43) {
                goto LABEL_158;
              }
              uint64_t v50 = (uint64_t *)__s1;
              uint64_t v49 = v43;
LABEL_107:
              int v68 = memcmp(v49, v50, BYTE6(a2));
              uint64_t result = sub_1CA5B6EF4(v17, v16);
              if (!v68) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_141;
              }
              swift_retain();
              uint64_t v45 = sub_1CA5FD408();
              if (v45)
              {
                uint64_t v46 = sub_1CA5FD428();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_148;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_1CA5FD418();
              uint64_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v82) {
                uint64_t v48 = v47;
              }
              if (!v43) {
                goto LABEL_153;
              }
              if (!v45) {
                goto LABEL_154;
              }
              size_t v41 = v48;
              uint64_t v42 = v43;
              uint64_t v40 = (const void *)v45;
              goto LABEL_74;
            }
            uint64_t v69 = *(void *)(v8 + 16);
            uint64_t v70 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v71 = (char *)sub_1CA5FD408();
            if (v71)
            {
              uint64_t v72 = sub_1CA5FD428();
              if (__OFSUB__(v69, v72)) {
                goto LABEL_147;
              }
              v71 += v69 - v72;
            }
            BOOL v24 = __OFSUB__(v70, v69);
            int64_t v73 = v70 - v69;
            if (v24) {
              goto LABEL_142;
            }
            uint64_t v74 = sub_1CA5FD418();
            if (v74 >= v73) {
              size_t v75 = v73;
            }
            else {
              size_t v75 = v74;
            }
            uint64_t v5 = v81;
            if (!v43) {
              goto LABEL_161;
            }
            uint64_t v11 = v84;
            if (!v71) {
              goto LABEL_162;
            }
            int v36 = memcmp(v43, v71, v75);
            swift_release();
            goto LABEL_119;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            uint64_t v30 = (char *)sub_1CA5FD408();
            if (!v30) {
              goto LABEL_39;
            }
            uint64_t v31 = sub_1CA5FD428();
            if (__OFSUB__(v29, v31)) {
              goto LABEL_131;
            }
            v30 += v29 - v31;
LABEL_39:
            sub_1CA5FD418();
            uint64_t v11 = v84;
            if (v87)
            {
              if (v87 == 1)
              {
                if (v83 < (int)v8) {
                  goto LABEL_135;
                }
                swift_retain();
                int64_t v32 = (char *)sub_1CA5FD408();
                if (v32)
                {
                  uint64_t v33 = sub_1CA5FD428();
                  if (__OFSUB__((int)v8, v33)) {
                    goto LABEL_146;
                  }
                  v32 += (int)v8 - v33;
                }
                uint64_t v34 = sub_1CA5FD418();
                size_t v35 = (v8 >> 32) - (int)v8;
                if (v34 < v82) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_150;
                }
                if (!v32) {
                  goto LABEL_151;
                }
                int v36 = memcmp(v30, v32, v35);
                sub_1CA5B6EF4(v8, a2);
                swift_release();
              }
              else
              {
                uint64_t v62 = *(void *)(v8 + 16);
                uint64_t v80 = *(void *)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1CA5FD408();
                if (v63)
                {
                  uint64_t v64 = sub_1CA5FD428();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_145;
                  }
                  v63 += v62 - v64;
                }
                BOOL v24 = __OFSUB__(v80, v62);
                int64_t v65 = v80 - v62;
                if (v24) {
                  goto LABEL_140;
                }
                uint64_t v66 = sub_1CA5FD418();
                if (v66 >= v65) {
                  size_t v67 = v65;
                }
                else {
                  size_t v67 = v66;
                }
                if (!v30) {
                  goto LABEL_159;
                }
                uint64_t v11 = v84;
                if (!v63) {
                  goto LABEL_160;
                }
                int v36 = memcmp(v30, v63, v67);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              uint64_t result = sub_1CA5B6EF4(v17, v16);
              uint64_t v5 = v81;
            }
            else
            {
              *(void *)long long __s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v30) {
                goto LABEL_157;
              }
              int v36 = memcmp(v30, __s1, BYTE6(a2));
              swift_release();
LABEL_119:
              swift_release();
LABEL_120:
              uint64_t result = sub_1CA5B6EF4(v17, v16);
            }
            uint64_t v13 = v86;
            if (!v36) {
              goto LABEL_164;
            }
            goto LABEL_15;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)long long __s1 = 0;
            if (!v87) {
              goto LABEL_75;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_134;
              }
              sub_1CA5B6FE8(v8, a2);
              uint64_t v37 = sub_1CA5FD408();
              if (!v37) {
                goto LABEL_152;
              }
              uint64_t v26 = v37;
              uint64_t v38 = sub_1CA5FD428();
              uint64_t v28 = (int)v8 - v38;
              if (__OFSUB__((int)v8, v38)) {
                goto LABEL_139;
              }
              goto LABEL_55;
            }
            uint64_t v57 = *(void *)(v8 + 16);
            uint64_t v58 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_1CA5FD408();
            if (v53)
            {
              uint64_t v59 = sub_1CA5FD428();
              if (__OFSUB__(v57, v59)) {
                goto LABEL_144;
              }
              v53 += v57 - v59;
            }
            BOOL v24 = __OFSUB__(v58, v57);
            int64_t v55 = v58 - v57;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v56 = sub_1CA5FD418();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_156;
            }
            goto LABEL_87;
          default:
            *(void *)long long __s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v87)
            {
LABEL_75:
              uint64_t v89 = v8;
              __int16 v90 = a2;
              char v91 = BYTE2(a2);
              char v92 = BYTE3(a2);
              char v93 = BYTE4(a2);
              char v94 = BYTE5(a2);
              uint64_t v49 = __s1;
              uint64_t v50 = &v89;
              goto LABEL_107;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_133;
              }
              sub_1CA5B6FE8(v8, a2);
              uint64_t v25 = sub_1CA5FD408();
              if (!v25)
              {
                sub_1CA5FD418();
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                sub_1CA5FD418();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_1CA5B6EF4(v17, v16);
LABEL_164:
                sub_1CA5FDCD8();
                __break(1u);
                JUMPOUT(0x1CA5E74DCLL);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_1CA5FD428();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_138;
              }
LABEL_55:
              uint64_t v39 = sub_1CA5FD418();
              uint64_t v40 = (const void *)(v26 + v28);
              if (v39 >= v82) {
                size_t v41 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v41 = v39;
              }
              uint64_t v42 = __s1;
LABEL_74:
              int v36 = memcmp(v42, v40, v41);
              sub_1CA5B6EF4(v8, a2);
              goto LABEL_120;
            }
            uint64_t v51 = *(void *)(v8 + 16);
            uint64_t v52 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_1CA5FD408();
            if (v53)
            {
              uint64_t v54 = sub_1CA5FD428();
              if (__OFSUB__(v51, v54)) {
                goto LABEL_143;
              }
              v53 += v51 - v54;
            }
            BOOL v24 = __OFSUB__(v52, v51);
            int64_t v55 = v52 - v51;
            if (v24) {
              goto LABEL_136;
            }
            uint64_t v56 = sub_1CA5FD418();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_155;
            }
LABEL_87:
            if (v56 >= v55) {
              size_t v60 = v55;
            }
            else {
              size_t v60 = v56;
            }
            int v61 = memcmp(__s1, v53, v60);
            swift_release();
            swift_release();
            uint64_t result = sub_1CA5B6EF4(v17, v16);
            uint64_t v13 = v86;
            if (!v61) {
              goto LABEL_164;
            }
LABEL_15:
            a3 = (a3 + 1) & v88;
            if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              goto LABEL_123;
            }
            break;
        }
      }
    }
  }
LABEL_123:
  uint64_t v76 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v77 = (uint64_t *)(*(void *)(v76 + 48) + 16 * a3);
  *uint64_t v77 = v8;
  v77[1] = a2;
  uint64_t v78 = *(void *)(v76 + 16);
  BOOL v24 = __OFADD__(v78, 1);
  uint64_t v79 = v78 + 1;
  if (v24) {
    goto LABEL_129;
  }
  *(void *)(v76 + 16) = v79;
  return result;
}

uint64_t sub_1CA5E750C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  uint64_t v174 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v156 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1CA5E64B0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1CA5E8E78();
        goto LABEL_235;
      }
      sub_1CA5E983C();
    }
    uint64_t v8 = *v3;
    sub_1CA5FDD48();
    uint64_t v10 = *(void *)v5;
    unint64_t v9 = *(void *)(v5 + 8);
    sub_1CA5B6FE8(*(void *)v5, v9);
    sub_1CA5FD5A8();
    sub_1CA5B6EF4(v10, v9);
    uint64_t v11 = *(void *)(v5 + 16);
    unint64_t v12 = *(void *)(v5 + 24);
    sub_1CA5B6FE8(v11, v12);
    sub_1CA5FD5A8();
    sub_1CA5B6EF4(v11, v12);
    int v150 = *(unsigned __int8 *)(v5 + 32);
    sub_1CA5FDD58();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v13 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v13;
    uint64_t v161 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      unint64_t v14 = v9 >> 62;
      unint64_t v162 = v12 >> 62;
      uint64_t v15 = ~v13;
      unint64_t v147 = HIDWORD(v10);
      BOOL v16 = __OFSUB__(HIDWORD(v10), v10);
      BOOL v158 = v16;
      size_t v157 = HIDWORD(v10) - (int)v10;
      size_t v17 = BYTE6(v9);
      uint64_t v152 = v11;
      unint64_t v153 = v9;
      uint64_t v151 = (int)v10;
      uint64_t v145 = (v10 >> 32) - (int)v10;
      uint64_t v146 = v10 >> 32;
      unint64_t v142 = HIDWORD(v11);
      BOOL v18 = __OFSUB__(HIDWORD(v11), v11);
      BOOL v149 = v18;
      size_t v148 = HIDWORD(v11) - (int)v11;
      uint64_t v143 = (int)v11;
      unint64_t v144 = v12;
      uint64_t v140 = (v11 >> 32) - (int)v11;
      uint64_t v141 = v11 >> 32;
      size_t __n = BYTE6(v12);
      uint64_t v154 = v8;
      uint64_t v159 = v10;
      uint64_t v19 = v8 + 56;
      unint64_t v166 = v9 >> 62;
      uint64_t v164 = ~v13;
      size_t v163 = BYTE6(v9);
      while (1)
      {
        uint64_t v20 = *(void *)(v8 + 48) + 40 * a2;
        uint64_t v22 = *(void *)v20;
        unint64_t v21 = *(void *)(v20 + 8);
        uint64_t v24 = *(void *)(v20 + 16);
        unint64_t v23 = *(void *)(v20 + 24);
        uint64_t v25 = 0;
        switch(v21 >> 62)
        {
          case 1uLL:
            LODWORD(v25) = HIDWORD(v22) - v22;
            if (__OFSUB__(HIDWORD(v22), v22)) {
              goto LABEL_238;
            }
            uint64_t v25 = (int)v25;
            break;
          case 2uLL:
            uint64_t v27 = *(void *)(v22 + 16);
            uint64_t v26 = *(void *)(v22 + 24);
            BOOL v28 = __OFSUB__(v26, v27);
            uint64_t v25 = v26 - v27;
            if (!v28) {
              break;
            }
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
            goto LABEL_241;
          case 3uLL:
            break;
          default:
            uint64_t v25 = BYTE6(v21);
            break;
        }
        size_t v29 = v17;
        switch((int)v14)
        {
          case 1:
            size_t v29 = v157;
            if (v158) {
              goto LABEL_239;
            }
            goto LABEL_28;
          case 2:
            uint64_t v31 = *(void *)(v10 + 16);
            uint64_t v30 = *(void *)(v10 + 24);
            BOOL v28 = __OFSUB__(v30, v31);
            size_t v29 = v30 - v31;
            if (!v28) {
              goto LABEL_28;
            }
            goto LABEL_240;
          case 3:
            if (!v25) {
              goto LABEL_39;
            }
            goto LABEL_18;
          default:
LABEL_28:
            if (v25 != v29) {
              goto LABEL_18;
            }
            if (v25 < 1)
            {
LABEL_39:
              int v165 = *(unsigned __int8 *)(v20 + 32);
              sub_1CA5B6FE8(v22, v21);
              sub_1CA5B6FE8(v24, v23);
            }
            else
            {
              int v165 = *(unsigned __int8 *)(v20 + 32);
              switch(v21 >> 62)
              {
                case 1uLL:
                  if ((int)v22 > v22 >> 32) {
                    goto LABEL_246;
                  }
                  sub_1CA5B6FE8(v22, v21);
                  sub_1CA5B6FE8(v24, v23);
                  sub_1CA5B6FE8(v22, v21);
                  uint64_t v58 = sub_1CA5FD408();
                  if (v58)
                  {
                    uint64_t v59 = v58;
                    uint64_t v60 = sub_1CA5FD428();
                    if (__OFSUB__((int)v22, v60)) {
                      goto LABEL_248;
                    }
                    int v61 = (const void *)(v59 + (int)v22 - v60);
                  }
                  else
                  {
                    int v61 = 0;
                  }
                  sub_1CA5FD418();
                  uint64_t v10 = v159;
                  uint64_t v19 = v161;
                  if (!v166)
                  {
                    *(_DWORD *)long long __s1 = v159;
                    void __s1[4] = v147;
                    *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v159 + 5);
                    __s1[7] = HIBYTE(v159);
                    *(_DWORD *)&__s1[8] = v153;
                    *(_WORD *)&__s1[12] = WORD2(v153);
                    if (!v61) {
                      goto LABEL_295;
                    }
                    int v83 = memcmp(v61, __s1, v17);
                    sub_1CA5B6EF4(v22, v21);
                    uint64_t v8 = v154;
                    if (v83)
                    {
LABEL_17:
                      sub_1CA5B6EF4(v22, v21);
                      uint64_t result = sub_1CA5B6EF4(v24, v23);
                      LODWORD(v14) = v166;
                      uint64_t v15 = v164;
                      size_t v17 = v163;
                      goto LABEL_18;
                    }
                    break;
                  }
                  if (v166 == 1)
                  {
                    if (v146 < v151) {
                      goto LABEL_257;
                    }
                    swift_retain();
                    uint64_t v62 = (char *)sub_1CA5FD408();
                    if (v62)
                    {
                      uint64_t v63 = sub_1CA5FD428();
                      if (__OFSUB__(v151, v63)) {
                        goto LABEL_265;
                      }
                      v62 += v151 - v63;
                    }
                    uint64_t v64 = sub_1CA5FD418();
                    size_t v65 = v145;
                    if (v64 < v145) {
                      size_t v65 = v64;
                    }
                    if (!v61) {
                      goto LABEL_288;
                    }
                    if (!v62) {
                      goto LABEL_289;
                    }
                    int v53 = memcmp(v61, v62, v65);
                    sub_1CA5B6EF4(v159, v153);
                  }
                  else
                  {
                    uint64_t v84 = *(void *)(v159 + 16);
                    uint64_t v85 = *(void *)(v159 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v86 = (char *)sub_1CA5FD408();
                    if (v86)
                    {
                      uint64_t v87 = sub_1CA5FD428();
                      if (__OFSUB__(v84, v87)) {
                        goto LABEL_264;
                      }
                      v86 += v84 - v87;
                    }
                    BOOL v28 = __OFSUB__(v85, v84);
                    int64_t v88 = v85 - v84;
                    if (v28) {
                      goto LABEL_258;
                    }
                    uint64_t v89 = sub_1CA5FD418();
                    if (v89 >= v88) {
                      size_t v90 = v88;
                    }
                    else {
                      size_t v90 = v89;
                    }
                    if (!v61) {
                      goto LABEL_296;
                    }
                    uint64_t v10 = v159;
                    if (!v86) {
                      goto LABEL_297;
                    }
                    int v53 = memcmp(v61, v86, v90);
                    swift_release();
                    swift_release();
                  }
                  sub_1CA5B6EF4(v22, v21);
LABEL_144:
                  uint64_t v8 = v154;
                  goto LABEL_145;
                case 2uLL:
                  uint64_t v46 = *(void *)(v22 + 16);
                  sub_1CA5B6FE8(v22, v21);
                  sub_1CA5B6FE8(v24, v23);
                  swift_retain();
                  swift_retain();
                  uint64_t v47 = (char *)sub_1CA5FD408();
                  if (!v47) {
                    goto LABEL_62;
                  }
                  uint64_t v48 = sub_1CA5FD428();
                  if (__OFSUB__(v46, v48)) {
                    goto LABEL_247;
                  }
                  v47 += v46 - v48;
LABEL_62:
                  sub_1CA5FD418();
                  uint64_t v10 = v159;
                  if (!v166)
                  {
                    *(_DWORD *)long long __s1 = v159;
                    void __s1[4] = v147;
                    *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v159 + 5);
                    __s1[7] = HIBYTE(v159);
                    *(_DWORD *)&__s1[8] = v153;
                    *(_WORD *)&__s1[12] = WORD2(v153);
                    if (!v47) {
                      goto LABEL_292;
                    }
                    int v53 = memcmp(v47, __s1, v17);
LABEL_118:
                    swift_release();
                    goto LABEL_129;
                  }
                  if (v166 == 1)
                  {
                    if (v146 < v151) {
                      goto LABEL_251;
                    }
                    swift_retain();
                    uint64_t v49 = (char *)sub_1CA5FD408();
                    if (v49)
                    {
                      uint64_t v50 = sub_1CA5FD428();
                      if (__OFSUB__(v151, v50)) {
                        goto LABEL_263;
                      }
                      v49 += v151 - v50;
                    }
                    uint64_t v51 = sub_1CA5FD418();
                    size_t v52 = v145;
                    if (v51 < v145) {
                      size_t v52 = v51;
                    }
                    if (!v47) {
                      goto LABEL_285;
                    }
                    if (!v49) {
                      goto LABEL_286;
                    }
                    int v53 = memcmp(v47, v49, v52);
                    sub_1CA5B6EF4(v159, v153);
                    goto LABEL_118;
                  }
                  uint64_t v77 = *(void *)(v159 + 16);
                  uint64_t v138 = *(void *)(v159 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v78 = (char *)sub_1CA5FD408();
                  if (v78)
                  {
                    uint64_t v79 = sub_1CA5FD428();
                    if (__OFSUB__(v77, v79)) {
                      goto LABEL_262;
                    }
                    v78 += v77 - v79;
                  }
                  BOOL v28 = __OFSUB__(v138, v77);
                  int64_t v80 = v138 - v77;
                  if (v28) {
                    goto LABEL_256;
                  }
                  uint64_t v81 = sub_1CA5FD418();
                  if (v81 >= v80) {
                    size_t v82 = v80;
                  }
                  else {
                    size_t v82 = v81;
                  }
                  if (!v47) {
                    goto LABEL_293;
                  }
                  uint64_t v10 = v159;
                  if (!v78) {
                    goto LABEL_294;
                  }
                  int v53 = memcmp(v47, v78, v82);
                  swift_release();
                  swift_release();
                  swift_release();
LABEL_129:
                  swift_release();
                  goto LABEL_144;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)long long __s1 = 0;
                  if (!v14) {
                    goto LABEL_86;
                  }
                  if (v14 != 1)
                  {
                    uint64_t v66 = *(void *)(v10 + 16);
                    uint64_t v67 = *(void *)(v10 + 24);
                    sub_1CA5B6FE8(v22, v21);
                    sub_1CA5B6FE8(v24, v23);
                    swift_retain();
                    swift_retain();
                    int v68 = (char *)sub_1CA5FD408();
                    if (v68)
                    {
                      uint64_t v69 = sub_1CA5FD428();
                      if (__OFSUB__(v66, v69)) {
                        goto LABEL_260;
                      }
                      v68 += v66 - v69;
                    }
                    int64_t v70 = v67 - v66;
                    if (__OFSUB__(v67, v66)) {
                      goto LABEL_252;
                    }
                    uint64_t v71 = sub_1CA5FD418();
                    uint64_t v8 = v154;
                    if (!v68) {
                      goto LABEL_291;
                    }
                    goto LABEL_111;
                  }
                  if (v146 < v151) {
                    goto LABEL_250;
                  }
                  sub_1CA5B6FE8(v10, v153);
                  sub_1CA5B6FE8(v22, v21);
                  sub_1CA5B6FE8(v24, v23);
                  uint64_t v54 = sub_1CA5FD408();
                  if (!v54) {
                    goto LABEL_287;
                  }
                  uint64_t v33 = v54;
                  uint64_t v55 = sub_1CA5FD428();
                  uint64_t v35 = v151 - v55;
                  if (__OFSUB__(v151, v55)) {
                    goto LABEL_255;
                  }
                  goto LABEL_78;
                default:
                  *(void *)long long __s1 = *(void *)v20;
                  *(_WORD *)&__s1[8] = v21;
                  __s1[10] = BYTE2(v21);
                  __s1[11] = BYTE3(v21);
                  __s1[12] = BYTE4(v21);
                  __s1[13] = BYTE5(v21);
                  if (v14)
                  {
                    if (v14 != 1)
                    {
                      uint64_t v72 = *(void *)(v10 + 16);
                      uint64_t v73 = *(void *)(v10 + 24);
                      sub_1CA5B6FE8(v22, v21);
                      sub_1CA5B6FE8(v24, v23);
                      swift_retain();
                      swift_retain();
                      int v68 = (char *)sub_1CA5FD408();
                      if (v68)
                      {
                        uint64_t v74 = sub_1CA5FD428();
                        if (__OFSUB__(v72, v74)) {
                          goto LABEL_261;
                        }
                        v68 += v72 - v74;
                      }
                      int64_t v70 = v73 - v72;
                      if (__OFSUB__(v73, v72)) {
                        goto LABEL_253;
                      }
                      uint64_t v71 = sub_1CA5FD418();
                      uint64_t v8 = v154;
                      if (!v68) {
                        goto LABEL_290;
                      }
LABEL_111:
                      if (v71 >= v70) {
                        size_t v75 = v70;
                      }
                      else {
                        size_t v75 = v71;
                      }
                      int v76 = memcmp(__s1, v68, v75);
                      swift_release();
                      uint64_t v10 = v159;
                      swift_release();
                      uint64_t v19 = v161;
                      if (v76) {
                        goto LABEL_17;
                      }
                      break;
                    }
                    if (v146 < v151) {
                      goto LABEL_249;
                    }
                    sub_1CA5B6FE8(v10, v153);
                    sub_1CA5B6FE8(v22, v21);
                    sub_1CA5B6FE8(v24, v23);
                    uint64_t v32 = sub_1CA5FD408();
                    if (!v32)
                    {
                      sub_1CA5FD418();
                      __break(1u);
LABEL_285:
                      __break(1u);
LABEL_286:
                      __break(1u);
LABEL_287:
                      sub_1CA5FD418();
                      __break(1u);
LABEL_288:
                      __break(1u);
LABEL_289:
                      __break(1u);
LABEL_290:
                      __break(1u);
LABEL_291:
                      __break(1u);
LABEL_292:
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      __break(1u);
LABEL_295:
                      __break(1u);
LABEL_296:
                      __break(1u);
LABEL_297:
                      __break(1u);
LABEL_298:
                      sub_1CA5FD418();
                      __break(1u);
LABEL_299:
                      __break(1u);
LABEL_300:
                      __break(1u);
LABEL_301:
                      __break(1u);
LABEL_302:
                      __break(1u);
LABEL_303:
                      __break(1u);
LABEL_304:
                      sub_1CA5FD418();
                      __break(1u);
LABEL_305:
                      __break(1u);
LABEL_306:
                      __break(1u);
LABEL_307:
                      __break(1u);
LABEL_308:
                      __break(1u);
LABEL_309:
                      __break(1u);
LABEL_310:
                      __break(1u);
LABEL_311:
                      __break(1u);
                      JUMPOUT(0x1CA5E8920);
                    }
                    uint64_t v33 = v32;
                    uint64_t v34 = sub_1CA5FD428();
                    uint64_t v35 = v151 - v34;
                    if (__OFSUB__(v151, v34)) {
                      goto LABEL_254;
                    }
LABEL_78:
                    uint64_t v56 = sub_1CA5FD418();
                    if (v56 >= v145) {
                      size_t v57 = v145;
                    }
                    else {
                      size_t v57 = v56;
                    }
                    int v53 = memcmp(__s1, (const void *)(v33 + v35), v57);
                    uint64_t v10 = v159;
                    sub_1CA5B6EF4(v159, v153);
LABEL_145:
                    uint64_t v19 = v161;
                    if (v53) {
                      goto LABEL_17;
                    }
                  }
                  else
                  {
LABEL_86:
                    LOWORD(__s2) = v10;
                    BYTE2(__s2) = BYTE2(v10);
                    HIBYTE(__s2) = BYTE3(v10);
                    char v168 = v147;
                    LOBYTE(v169) = BYTE5(v10);
                    HIBYTE(v169) = BYTE6(v10);
                    char v170 = HIBYTE(v10);
                    int v171 = v153;
                    __int16 v172 = WORD2(v153);
                    sub_1CA5B6FE8(v22, v21);
                    sub_1CA5B6FE8(v24, v23);
                    if (memcmp(__s1, &__s2, v17)) {
                      goto LABEL_17;
                    }
                  }
                  break;
              }
            }
            uint64_t v36 = 0;
            switch(v23 >> 62)
            {
              case 1uLL:
                LODWORD(v36) = HIDWORD(v24) - v24;
                if (__OFSUB__(HIDWORD(v24), v24)) {
                  goto LABEL_242;
                }
                uint64_t v36 = (int)v36;
LABEL_45:
                size_t v39 = __n;
                switch((int)v162)
                {
                  case 1:
                    size_t v39 = v148;
                    if (v149) {
                      goto LABEL_245;
                    }
                    goto LABEL_49;
                  case 2:
                    uint64_t v41 = *(void *)(v152 + 16);
                    uint64_t v40 = *(void *)(v152 + 24);
                    BOOL v28 = __OFSUB__(v40, v41);
                    size_t v39 = v40 - v41;
                    if (!v28) {
                      goto LABEL_49;
                    }
                    goto LABEL_244;
                  case 3:
                    if (v36) {
                      goto LABEL_17;
                    }
                    goto LABEL_233;
                  default:
LABEL_49:
                    if (v36 != v39) {
                      goto LABEL_17;
                    }
                    if (v36 < 1) {
                      goto LABEL_233;
                    }
                    break;
                }
                break;
              case 2uLL:
                uint64_t v38 = *(void *)(v24 + 16);
                uint64_t v37 = *(void *)(v24 + 24);
                BOOL v28 = __OFSUB__(v37, v38);
                uint64_t v36 = v37 - v38;
                if (!v28) {
                  goto LABEL_45;
                }
                goto LABEL_243;
              case 3uLL:
                goto LABEL_45;
              default:
                uint64_t v36 = BYTE6(v23);
                goto LABEL_45;
            }
            switch(v23 >> 62)
            {
              case 1uLL:
                if ((int)v24 > v24 >> 32) {
                  goto LABEL_259;
                }
                sub_1CA5B6FE8(v24, v23);
                int v99 = (char *)sub_1CA5FD408();
                if (!v99) {
                  goto LABEL_163;
                }
                uint64_t v100 = sub_1CA5FD428();
                if (__OFSUB__((int)v24, v100)) {
                  goto LABEL_267;
                }
                v99 += (int)v24 - v100;
LABEL_163:
                uint64_t v10 = v159;
                sub_1CA5FD418();
                if (!v162)
                {
                  *(_DWORD *)long long __s1 = v152;
                  void __s1[4] = v142;
                  *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v152 + 5);
                  __s1[7] = HIBYTE(v152);
                  *(_DWORD *)&__s1[8] = v144;
                  *(_WORD *)&__s1[12] = WORD2(v144);
                  if (!v99) {
                    goto LABEL_309;
                  }
                  int v98 = memcmp(v99, __s1, __n);
                  sub_1CA5B6EF4(v24, v23);
                  goto LABEL_220;
                }
                if (v162 == 1)
                {
                  if (v141 < v143) {
                    goto LABEL_276;
                  }
                  swift_retain();
                  unint64_t v101 = (char *)sub_1CA5FD408();
                  if (v101)
                  {
                    uint64_t v102 = sub_1CA5FD428();
                    if (__OFSUB__(v143, v102)) {
                      goto LABEL_283;
                    }
                    v101 += v143 - v102;
                  }
                  uint64_t v103 = sub_1CA5FD418();
                  size_t v104 = v140;
                  if (v103 < v140) {
                    size_t v104 = v103;
                  }
                  if (!v99) {
                    goto LABEL_305;
                  }
                  if (!v101) {
                    goto LABEL_306;
                  }
                  int v98 = memcmp(v99, v101, v104);
                  sub_1CA5B6EF4(v152, v144);
                  sub_1CA5B6EF4(v24, v23);
LABEL_217:
                  uint64_t v8 = v154;
                  goto LABEL_220;
                }
                uint64_t v126 = *(void *)(v152 + 16);
                uint64_t v127 = *(void *)(v152 + 24);
                swift_retain();
                swift_retain();
                int v128 = (char *)sub_1CA5FD408();
                if (v128)
                {
                  uint64_t v129 = sub_1CA5FD428();
                  if (__OFSUB__(v126, v129)) {
                    goto LABEL_281;
                  }
                  v128 += v126 - v129;
                }
                BOOL v28 = __OFSUB__(v127, v126);
                int64_t v130 = v127 - v126;
                if (v28) {
                  goto LABEL_277;
                }
                uint64_t v131 = sub_1CA5FD418();
                if (v131 >= v130) {
                  size_t v132 = v130;
                }
                else {
                  size_t v132 = v131;
                }
                if (!v99) {
                  goto LABEL_310;
                }
                uint64_t v10 = v159;
                if (!v128) {
                  goto LABEL_311;
                }
                int v119 = memcmp(v99, v128, v132);
                swift_release();
                swift_release();
                sub_1CA5B6EF4(v24, v23);
                uint64_t v8 = v154;
                break;
              case 2uLL:
                uint64_t v91 = *(void *)(v24 + 16);
                swift_retain();
                swift_retain();
                char v92 = (char *)sub_1CA5FD408();
                if (v92)
                {
                  uint64_t v93 = sub_1CA5FD428();
                  if (__OFSUB__(v91, v93)) {
                    goto LABEL_266;
                  }
                  v92 += v91 - v93;
                  uint64_t v10 = v159;
                }
                else
                {
                  uint64_t v10 = v159;
                }
                sub_1CA5FD418();
                if (!v162)
                {
                  *(_DWORD *)long long __s1 = v152;
                  void __s1[4] = v142;
                  *(_WORD *)&__s1[5] = *(_WORD *)((char *)&v152 + 5);
                  __s1[7] = HIBYTE(v152);
                  *(_DWORD *)&__s1[8] = v144;
                  *(_WORD *)&__s1[12] = WORD2(v144);
                  if (!v92) {
                    goto LABEL_308;
                  }
                  int v98 = memcmp(v92, __s1, __n);
LABEL_205:
                  swift_release();
                  goto LABEL_216;
                }
                if (v162 == 1)
                {
                  if (v141 < v143) {
                    goto LABEL_271;
                  }
                  swift_retain();
                  size_t v105 = (char *)sub_1CA5FD408();
                  if (v105)
                  {
                    uint64_t v106 = sub_1CA5FD428();
                    if (__OFSUB__(v143, v106)) {
                      goto LABEL_282;
                    }
                    v105 += v143 - v106;
                  }
                  uint64_t v107 = sub_1CA5FD418();
                  size_t v108 = v140;
                  if (v107 < v140) {
                    size_t v108 = v107;
                  }
                  if (!v92) {
                    goto LABEL_299;
                  }
                  if (!v105) {
                    goto LABEL_300;
                  }
                  int v98 = memcmp(v92, v105, v108);
                  sub_1CA5B6EF4(v152, v144);
                  goto LABEL_205;
                }
                uint64_t v120 = *(void *)(v152 + 16);
                uint64_t v139 = *(void *)(v152 + 24);
                swift_retain();
                swift_retain();
                int v121 = (char *)sub_1CA5FD408();
                if (v121)
                {
                  uint64_t v122 = sub_1CA5FD428();
                  if (__OFSUB__(v120, v122)) {
                    goto LABEL_280;
                  }
                  v121 += v120 - v122;
                }
                BOOL v28 = __OFSUB__(v139, v120);
                int64_t v123 = v139 - v120;
                if (v28) {
                  goto LABEL_275;
                }
                uint64_t v124 = sub_1CA5FD418();
                if (v124 >= v123) {
                  size_t v125 = v123;
                }
                else {
                  size_t v125 = v124;
                }
                if (!v92) {
                  goto LABEL_302;
                }
                uint64_t v10 = v159;
                if (!v121) {
                  goto LABEL_303;
                }
                int v98 = memcmp(v92, v121, v125);
                swift_release();
                swift_release();
                swift_release();
LABEL_216:
                swift_release();
                goto LABEL_217;
              case 3uLL:
                *(void *)&__s1[6] = 0;
                *(void *)long long __s1 = 0;
                if (!v162) {
                  goto LABEL_174;
                }
                if (v162 == 1)
                {
                  if (v141 < v143) {
                    goto LABEL_268;
                  }
                  sub_1CA5B6FE8(v152, v144);
                  uint64_t v94 = sub_1CA5FD408();
                  if (!v94) {
                    goto LABEL_298;
                  }
                  uint64_t v43 = v94;
                  uint64_t v95 = sub_1CA5FD428();
                  uint64_t v45 = v143 - v95;
                  if (__OFSUB__(v143, v95)) {
                    goto LABEL_273;
                  }
LABEL_155:
                  uint64_t v96 = sub_1CA5FD418();
                  if (v96 >= v140) {
                    size_t v97 = v140;
                  }
                  else {
                    size_t v97 = v96;
                  }
                  int v98 = memcmp(__s1, (const void *)(v43 + v45), v97);
                  sub_1CA5B6EF4(v152, v144);
                  uint64_t v10 = v159;
LABEL_220:
                  uint64_t v19 = v161;
                  if (v98) {
                    goto LABEL_17;
                  }
                  goto LABEL_233;
                }
                uint64_t v109 = *(void *)(v152 + 16);
                uint64_t v110 = *(void *)(v152 + 24);
                swift_retain();
                swift_retain();
                uint64_t v111 = (char *)sub_1CA5FD408();
                if (v111)
                {
                  uint64_t v112 = sub_1CA5FD428();
                  if (__OFSUB__(v109, v112)) {
                    goto LABEL_278;
                  }
                  v111 += v109 - v112;
                }
                BOOL v28 = __OFSUB__(v110, v109);
                int64_t v113 = v110 - v109;
                if (v28) {
                  goto LABEL_272;
                }
                uint64_t v114 = sub_1CA5FD418();
                uint64_t v8 = v154;
                if (!v111) {
                  goto LABEL_301;
                }
LABEL_199:
                if (v114 >= v113) {
                  size_t v118 = v113;
                }
                else {
                  size_t v118 = v114;
                }
                int v119 = memcmp(__s1, v111, v118);
                swift_release();
                swift_release();
                uint64_t v10 = v159;
                break;
              default:
                *(void *)long long __s1 = v24;
                *(_WORD *)&__s1[8] = v23;
                __s1[10] = BYTE2(v23);
                __s1[11] = BYTE3(v23);
                __s1[12] = BYTE4(v23);
                __s1[13] = BYTE5(v23);
                if (!v162)
                {
LABEL_174:
                  int __s2 = v152;
                  char v168 = v142;
                  __int16 v169 = *(_WORD *)((char *)&v152 + 5);
                  char v170 = HIBYTE(v152);
                  int v171 = v144;
                  __int16 v172 = WORD2(v144);
                  if (memcmp(__s1, &__s2, __n)) {
                    goto LABEL_17;
                  }
                  goto LABEL_233;
                }
                if (v162 == 1)
                {
                  if (v141 < v143) {
                    goto LABEL_269;
                  }
                  sub_1CA5B6FE8(v152, v144);
                  uint64_t v42 = sub_1CA5FD408();
                  if (!v42) {
                    goto LABEL_304;
                  }
                  uint64_t v43 = v42;
                  uint64_t v44 = sub_1CA5FD428();
                  uint64_t v45 = v143 - v44;
                  if (__OFSUB__(v143, v44)) {
                    goto LABEL_274;
                  }
                  goto LABEL_155;
                }
                uint64_t v115 = *(void *)(v152 + 16);
                uint64_t v116 = *(void *)(v152 + 24);
                swift_retain();
                swift_retain();
                uint64_t v111 = (char *)sub_1CA5FD408();
                if (v111)
                {
                  uint64_t v117 = sub_1CA5FD428();
                  if (__OFSUB__(v115, v117)) {
                    goto LABEL_279;
                  }
                  v111 += v115 - v117;
                }
                BOOL v28 = __OFSUB__(v116, v115);
                int64_t v113 = v116 - v115;
                if (v28) {
                  goto LABEL_270;
                }
                uint64_t v114 = sub_1CA5FD418();
                uint64_t v8 = v154;
                if (!v111) {
                  goto LABEL_307;
                }
                goto LABEL_199;
            }
            uint64_t v19 = v161;
            if (v119) {
              goto LABEL_17;
            }
LABEL_233:
            sub_1CA5B6EF4(v22, v21);
            uint64_t result = sub_1CA5B6EF4(v24, v23);
            LODWORD(v14) = v166;
            uint64_t v15 = v164;
            size_t v17 = v163;
            if (v150 == v165)
            {
              uint64_t result = sub_1CA5FDCD8();
              __break(1u);
              goto LABEL_235;
            }
LABEL_18:
            a2 = (a2 + 1) & v15;
            if (((*(void *)(v19 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_235;
            }
            break;
        }
      }
    }
  }
LABEL_235:
  uint64_t v133 = *v155;
  *(void *)(*v155 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v134 = *(void *)(v133 + 48) + 40 * a2;
  long long v135 = *(_OWORD *)(v156 + 16);
  *(_OWORD *)uint64_t v134 = *(_OWORD *)v156;
  *(_OWORD *)(v134 + 16) = v135;
  *(unsigned char *)(v134 + 32) = *(unsigned char *)(v156 + 32);
  uint64_t v136 = *(void *)(v133 + 16);
  BOOL v28 = __OFADD__(v136, 1);
  uint64_t v137 = v136 + 1;
  if (v28)
  {
LABEL_241:
    __break(1u);
LABEL_242:
    __break(1u);
LABEL_243:
    __break(1u);
LABEL_244:
    __break(1u);
LABEL_245:
    __break(1u);
LABEL_246:
    __break(1u);
LABEL_247:
    __break(1u);
LABEL_248:
    __break(1u);
LABEL_249:
    __break(1u);
LABEL_250:
    __break(1u);
LABEL_251:
    __break(1u);
LABEL_252:
    __break(1u);
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    __break(1u);
LABEL_256:
    __break(1u);
LABEL_257:
    __break(1u);
LABEL_258:
    __break(1u);
LABEL_259:
    __break(1u);
LABEL_260:
    __break(1u);
LABEL_261:
    __break(1u);
LABEL_262:
    __break(1u);
LABEL_263:
    __break(1u);
LABEL_264:
    __break(1u);
LABEL_265:
    __break(1u);
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
LABEL_269:
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
LABEL_276:
    __break(1u);
LABEL_277:
    __break(1u);
LABEL_278:
    __break(1u);
LABEL_279:
    __break(1u);
LABEL_280:
    __break(1u);
LABEL_281:
    __break(1u);
LABEL_282:
    __break(1u);
LABEL_283:
    __break(1u);
  }
  *(void *)(v133 + 16) = v137;
  return result;
}

void *sub_1CA5E8980()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A68);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDAF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA5E8B30()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDAF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA5E8CC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDAF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_1CA5B6FE8(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA5E8E78()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1CA5FDAF8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    unint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    unint64_t v21 = *(void *)(v17 + 24);
    LOBYTE(v17) = *(unsigned char *)(v17 + 32);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v22 = v18;
    *(void *)(v22 + 8) = v19;
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = v21;
    *(unsigned char *)(v22 + 32) = v17;
    sub_1CA5B6FE8(v18, v19);
    uint64_t result = (void *)sub_1CA5B6FE8(v20, v21);
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E9054()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A68);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_1CA5FDD48();
    sub_1CA5FDD58();
    if (v20)
    {
      swift_bridgeObjectRetain();
      sub_1CA5FD8D8();
    }
    uint64_t result = sub_1CA5FDD78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E9320()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A50);
  uint64_t result = sub_1CA5FDB08();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned __int8 v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    uint64_t result = MEMORY[0x1CB798740](*(void *)(v4 + 40), v18, 1);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E9588()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089F8);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_1CA5FDD48();
    sub_1CA5B6FE8(v20, v21);
    sub_1CA5FD5A8();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E983C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A08);
  uint64_t v3 = sub_1CA5FDB08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v31 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v31 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 40 * v14;
    uint64_t v19 = *(void *)v18;
    unint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    unint64_t v22 = *(void *)(v18 + 24);
    char v23 = *(unsigned char *)(v18 + 32);
    sub_1CA5FDD48();
    sub_1CA5B6FE8(v19, v20);
    sub_1CA5B6FE8(v21, v22);
    sub_1CA5B6FE8(v19, v20);
    sub_1CA5FD5A8();
    sub_1CA5B6EF4(v19, v20);
    sub_1CA5B6FE8(v21, v22);
    sub_1CA5FD5A8();
    sub_1CA5B6EF4(v21, v22);
    sub_1CA5FDD58();
    uint64_t result = sub_1CA5FDD78();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v8 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 40 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(void *)(v12 + 24) = v22;
    *(unsigned char *)(v12 + 32) = v23;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CA5E9B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v31 = a8;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D8);
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    uint64_t v19 = a2 - a1 - a3;
    if (__OFSUB__(a2 - a1, a3))
    {
      __break(1u);
      return result;
    }
    unint64_t v20 = (unsigned char *)(a1 + a3);
    uint64_t v21 = &v20[v19];
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v20 = 0;
  }
  unint64_t v22 = (void *)swift_allocObject();
  _OWORD v22[2] = a4;
  v22[3] = a5;
  id v22[4] = a6;
  v22[5] = a7;
  if (v20)
  {
    uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D0) + 48);
    swift_unknownObjectRetain_n();
    uint64_t v24 = v31;
    *(void *)(v24 + v23) = sub_1CA5EA894(v31, v20, v21 - v20, a4, a5, a6, a7);
    swift_unknownObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D0) + 48);
    *uint64_t v18 = a4;
    v18[1] = a5;
    v18[2] = a6;
    v18[3] = a7;
    v18[4] = a6;
    unint64_t v26 = (char *)v18 + *(int *)(v15 + 44);
    uint64_t v27 = sub_1CA5FD5F8();
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
    swift_unknownObjectRetain();
    v28(v26, 1, 1, v27);
    uint64_t v29 = v31;
    sub_1CA5F07B4((uint64_t)v18, v31, &qword_1EA6089D8);
    swift_unknownObjectRetain();
    uint64_t result = swift_release();
    *(void *)(v29 + v25) = 0;
  }
  return result;
}

uint64_t sub_1CA5E9D84(unint64_t *a1, uint64_t *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v31 = a2;
  unint64_t v6 = sub_1CA5EA0F4(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1CA5FDC28();
      swift_bridgeObjectRelease();
      if (v9 != v29) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = MEMORY[0x1CB798560](i - 4);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          uint64_t v13 = *(void *)(v12 + 8 * i);
          swift_retain();
        }
        uint64_t v14 = *v31;
        uint64_t v15 = *(void *)(v13 + 32);
        unint64_t v16 = *(void *)(v13 + 40);
        swift_bridgeObjectRetain();
        sub_1CA5B6FE8(v15, v16);
        uint64_t v9 = sub_1CA5CFE20(v15, v16, v14);
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v15, v16);
        swift_release();
        if ((v9 & 1) == 0) {
          break;
        }
LABEL_32:
        uint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_1CA5FDC28();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v26 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v26) {
          return v6;
        }
      }
      if (v11 == v6)
      {
LABEL_31:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      unint64_t v17 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = MEMORY[0x1CB798560](v6, *a1);
        unint64_t v17 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v19 = *(void *)(v17 + 8 * i);
          swift_retain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v18 = *(void *)(v17 + 8 * v6 + 32);
        swift_retain();
        if ((v17 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v19 = MEMORY[0x1CB798560](i - 4, v17);
      unint64_t v17 = *a1;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v17;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v17 & 0x8000000000000000) != 0
        || (v17 & 0x4000000000000000) != 0)
      {
        sub_1CA5EAC80(v17);
        unint64_t v17 = v21;
        *a1 = v21;
      }
      *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v19;
      swift_release();
      sub_1CA5FD968();
      unint64_t v22 = *a1;
      int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!v23 || (v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
      {
        sub_1CA5EAC80(v22);
        unint64_t v22 = v24;
        *a1 = v24;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v18;
      swift_release();
      sub_1CA5FD968();
      goto LABEL_31;
    }
    return v6;
  }
  unint64_t v27 = *a1;
  if (!(v27 >> 62)) {
    return *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1CA5FDC28();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1CA5EA0F4(unint64_t a1, uint64_t *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1CA5FDC28();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  for (uint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = MEMORY[0x1CB798560](i, a1);
    }
    else
    {
      uint64_t v5 = *(void *)(a1 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v6 = *a2;
    uint64_t v8 = *(void *)(v5 + 32);
    unint64_t v7 = *(void *)(v5 + 40);
    swift_bridgeObjectRetain();
    sub_1CA5B6FE8(v8, v7);
    char v9 = sub_1CA5CFE20(v8, v7, v6);
    swift_bridgeObjectRelease();
    sub_1CA5B6EF4(v8, v7);
    swift_release();
    if (v9) {
      break;
    }
    uint64_t v10 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v10 == v3) {
      return 0;
    }
  }
  return i;
}

uint64_t sub_1CA5EA244(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1CA5FD408();
  if (!result || (uint64_t result = sub_1CA5FD428(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1CA5FD418();
      return sub_1CA5FD548();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5EA2D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x1CA5EA3A4);
  }
  return result;
}

uint64_t (*sub_1CA5EA3C4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1CA5EA478(v6, a2, a3);
  return sub_1CA5EA42C;
}

void sub_1CA5EA430(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1CA5EA478(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1CB798560](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1CA5EA4F8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5EA4F8()
{
  return swift_release();
}

void *sub_1CA5EA500(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1CA5EA694(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    long long v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    uint64_t *v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1CA5B6FE8(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_1CA5B6FE8(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA5EA894(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608780);
  uint64_t v13 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6089D8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = a4;
  v21[1] = a5;
  v21[2] = a6;
  void v21[3] = a7;
  v21[4] = a6;
  uint64_t v22 = (uint64_t)v21 + *(int *)(v19 + 52);
  uint64_t v23 = sub_1CA5FD5F8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v43(v22, 1, 1, v23);
  uint64_t v41 = a2;
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x1CA5EAC30);
      }
      uint64_t v38 = a3;
      uint64_t v25 = 0;
      uint64_t v26 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
      while (2)
      {
        uint64_t v40 = v25;
        uint64_t v39 = v25 + 1;
        while (1)
        {
          sub_1CA5BA5B0(v22, (uint64_t)v17);
          unint64_t v27 = *v26;
          unsigned int v28 = (*v26)(v17, 1, v23);
          sub_1CA5BA6F0((uint64_t)v17, &qword_1EA608780);
          if (v28 != 1)
          {
            if (v27((char *)v22, 1, v23) == 1) {
              goto LABEL_24;
            }
            sub_1CA5F0818((unint64_t *)&qword_1EA6087B0, MEMORY[0x1E4F27788]);
            sub_1CA5FDA58();
            if (v45 != 1) {
              break;
            }
          }
          uint64_t v29 = v21[4];
          uint64_t v30 = v21[3] >> 1;
          if (v29 == v30)
          {
            a3 = v40;
            goto LABEL_21;
          }
          if (v29 >= v30 || v29 < v21[2])
          {
            __break(1u);
            goto LABEL_23;
          }
          int64_t v32 = (uint64_t *)(v21[1] + 16 * v29);
          uint64_t v33 = *v32;
          unint64_t v34 = v32[1];
          v21[4] = v29 + 1;
          switch(v34 >> 62)
          {
            case 1uLL:
            case 2uLL:
              sub_1CA5B6FE8(v33, v34);
              sub_1CA5B6FE8(v33, v34);
              sub_1CA5B6FE8(v33, v34);
              break;
            default:
              break;
          }
          sub_1CA5FD608();
          sub_1CA5B6EF4(v33, v34);
          sub_1CA5B6EF4(v33, v34);
          v43((uint64_t)v15, 0, 1, v23);
          sub_1CA5BA618((uint64_t)v15, v22);
        }
        uint64_t v35 = v41;
        unsigned char *v41 = v44;
        uint64_t v41 = v35 + 1;
        uint64_t v25 = v39;
        if (v39 != v38) {
          continue;
        }
        break;
      }
      a3 = v38;
    }
  }
  else
  {
    a3 = 0;
  }
LABEL_21:
  sub_1CA5F07B4((uint64_t)v21, v42, &qword_1EA6089D8);
  return a3;
}

uint64_t sub_1CA5EAC40(uint64_t a1)
{
  return sub_1CA5DE924(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1CA5EAC54(uint64_t a1)
{
  return sub_1CA5DF0D0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1CA5EAC68()
{
}

void sub_1CA5EAC80(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA5FDC28();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1CB798570);
}

uint64_t sub_1CA5EACFC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1CA5EAD9C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CA5EAE80(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_1CA5EAF08(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1CA5EAF58(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA5EAFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v10 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v15 = v14[1];
    if (v15)
    {
      uint64_t v19 = *v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41B0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1CA602380;
      *(void *)(v20 + 32) = a2;
      *(void *)(v20 + 40) = a3;
      *(void *)(v20 + 48) = v19;
      *(void *)(v20 + 56) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1CA5C4C48(0, v11[2] + 1, 1, v11);
        unint64_t v11 = (void *)result;
      }
      unint64_t v22 = v11[2];
      unint64_t v21 = v11[3];
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_1CA5C4C48((void *)(v21 > 1), v22 + 1, 1, v11);
        unint64_t v11 = (void *)result;
      }
      _OWORD v11[2] = v22 + 1;
      v11[v22 + 4] = v20;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v8) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v10);
        if (!v17)
        {
          int64_t v10 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v10);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v11;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CA5EB1E8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  uint64_t v34 = (uint64_t)a3 >> 32;
  uint64_t v35 = BYTE6(a4);
  uint64_t v36 = (int)a3;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  unint64_t v32 = a3 >> 16;
  unint64_t v33 = a3 >> 8;
  unint64_t v31 = a3 >> 24;
  unint64_t v29 = a3 >> 40;
  unint64_t v30 = HIDWORD(a3);
  unint64_t v27 = HIBYTE(a3);
  unint64_t v28 = HIWORD(a3);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  unint64_t v26 = a4 >> 8;
  uint64_t v8 = a1;
  uint64_t v9 = a1;
  unint64_t v38 = a4 >> 62;
  while (1)
  {
    uint64_t v10 = v8 <= a2 ? a2 : v8;
    while (2)
    {
      if (a2 == v9) {
        return v25;
      }
      if (a2 < a1)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
      }
      if (v8 < a1) {
        goto LABEL_36;
      }
      if (v10 == v9) {
        goto LABEL_37;
      }
      uint64_t v13 = v9 / 8;
      switch(v38)
      {
        case 1uLL:
          if (v13 < v36 || v13 >= v34) {
            goto LABEL_39;
          }
          uint64_t v14 = sub_1CA5FD408();
          if (!v14) {
            goto LABEL_45;
          }
          uint64_t v15 = v14;
          uint64_t v16 = sub_1CA5FD428();
          uint64_t v17 = v13 - v16;
          if (!__OFSUB__(v13, v16)) {
            goto LABEL_5;
          }
          goto LABEL_41;
        case 2uLL:
          if (v13 < *(void *)(v5 + 16)) {
            goto LABEL_40;
          }
          if (v13 >= *(void *)(v5 + 24)) {
            goto LABEL_42;
          }
          uint64_t v18 = sub_1CA5FD408();
          if (!v18) {
            goto LABEL_46;
          }
          uint64_t v15 = v18;
          uint64_t v19 = sub_1CA5FD428();
          uint64_t v17 = v13 - v19;
          if (__OFSUB__(v13, v19)) {
            goto LABEL_43;
          }
LABEL_5:
          int v11 = *(unsigned __int8 *)(v15 + v17);
          unint64_t v5 = a3;
LABEL_6:
          if (v9 % 8 >= 0) {
            int v12 = 1 << (v9 % 8);
          }
          else {
            int v12 = 0;
          }
          ++v9;
          if ((v11 & v12) == 0) {
            continue;
          }
          uint64_t v20 = v25;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v40 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1CA5DE738(0, *(void *)(v25 + 16) + 1, 1);
            unint64_t v5 = a3;
            uint64_t v20 = v40;
          }
          unint64_t v23 = *(void *)(v20 + 16);
          unint64_t v22 = *(void *)(v20 + 24);
          if (v23 >= v22 >> 1)
          {
            sub_1CA5DE738(v22 > 1, v23 + 1, 1);
            unint64_t v5 = a3;
            uint64_t v20 = v40;
          }
          *(void *)(v20 + 16) = v23 + 1;
          uint64_t v25 = v20;
          *(void *)(v20 + 8 * v23 + 32) = v9 - 1;
          uint64_t v8 = v9;
          break;
        case 3uLL:
          goto LABEL_44;
        default:
          if (v13 >= v35) {
            goto LABEL_38;
          }
          v39[0] = v36;
          v39[1] = v33;
          v39[2] = v32;
          v39[3] = v31;
          v39[4] = v30;
          v39[5] = v29;
          v39[6] = v28;
          v39[7] = v27;
          v39[8] = a4;
          v39[9] = v26;
          v39[10] = BYTE2(a4);
          v39[11] = BYTE3(a4);
          v39[12] = BYTE4(a4);
          v39[13] = BYTE5(a4);
          int v11 = v39[v13];
          goto LABEL_6;
      }
      break;
    }
  }
}

unint64_t sub_1CA5EB514(unint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v58 = sub_1CA5FD8A8();
  *((void *)&v58 + 1) = v4;
  swift_bridgeObjectRetain();
  id v5 = [a1 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1CA5F07B4((uint64_t)&v58, (uint64_t)v60, &qword_1EA608748);
  if (v61)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608920);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      v60[0] = 0;
      v60[1] = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      v60[0] = 0xD00000000000001ALL;
      v60[1] = 0x80000001CA60CBB0;
      uint64_t v9 = 738;
      goto LABEL_65;
    }
    unint64_t v6 = v56;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5BA6F0((uint64_t)v60, &qword_1EA608748);
    unint64_t v6 = 0;
  }
  *(void *)&long long v58 = sub_1CA5FD8A8();
  *((void *)&v58 + 1) = v7;
  swift_bridgeObjectRetain();
  id v8 = [a1 objectForKeyedSubscript:sub_1CA5FDCC8()];
  swift_unknownObjectRelease();
  if (v8)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1CA5F07B4((uint64_t)&v58, (uint64_t)v60, &qword_1EA608748);
  if (v61)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608920);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      v60[0] = 0;
      v60[1] = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      v60[0] = 0xD00000000000001ALL;
      v60[1] = 0x80000001CA60CBB0;
      uint64_t v9 = 741;
      goto LABEL_65;
    }
    uint64_t v10 = v56;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA5BA6F0((uint64_t)v60, &qword_1EA608748);
    uint64_t v10 = 0;
  }
  uint64_t v11 = sub_1CA5FD8A8();
  unint64_t v13 = v12;
  *(void *)&long long v58 = v11;
  *((void *)&v58 + 1) = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1CA5FDCC8();
  id v15 = [a1 objectForKeyedSubscript:v14];
  swift_unknownObjectRelease();
  if (v15)
  {
    sub_1CA5FDA98();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1CA5F07B4((uint64_t)&v58, (uint64_t)v60, &qword_1EA608748);
  if (v61)
  {
    if (swift_dynamicCast())
    {
      id v62 = (id)a1;
      unint64_t v17 = v56;
      unint64_t v16 = v57;
      swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_37;
      }
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    v60[0] = 0;
    v60[1] = 0xE000000000000000;
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    v60[0] = 0xD00000000000001ALL;
    v60[1] = 0x80000001CA60CBB0;
    uint64_t v9 = 744;
LABEL_65:
    *(void *)&long long v58 = v9;
    sub_1CA5FDCA8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5BBD9C(v60[0], v60[1], 8, 0);
    swift_willThrow();

    return a1;
  }
  id v62 = (id)a1;
  swift_bridgeObjectRelease();
  sub_1CA5BA6F0((uint64_t)v60, &qword_1EA608748);
  unint64_t v17 = 0;
  unint64_t v16 = 0xF000000000000000;
  if (!v6)
  {
LABEL_37:
    if (v10)
    {
      a1 = *(void *)(v10 + 16);
      if (a1)
      {
        uint64_t v24 = v2;
        swift_bridgeObjectRetain_n();
        uint64_t v2 = (uint64_t *)(v10 + 40);
        while (2)
        {
          uint64_t v25 = *(v2 - 1);
          uint64_t v14 = *v2;
          unint64_t v26 = (unint64_t)*v2 >> 62;
          v2 += 2;
          switch(v26)
          {
            case 1uLL:
              unint64_t v20 = (HIDWORD(v25) - v25);
              if (__OFSUB__(HIDWORD(v25), v25)) {
                goto LABEL_115;
              }
              unint64_t v20 = (int)v20;
LABEL_47:
              if (v20 != 3)
              {
LABEL_100:
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
                v60[0] = 0;
                v60[1] = 0xE000000000000000;
                sub_1CA5FDB18();
                swift_bridgeObjectRelease();
                v60[0] = 0xD00000000000001ALL;
                v60[1] = 0x80000001CA60CBB0;
                uint64_t v48 = 750;
                goto LABEL_101;
              }
              if (--a1) {
                continue;
              }
              swift_bridgeObjectRelease_n();
              uint64_t v2 = v24;
              break;
            case 2uLL:
              uint64_t v28 = *(void *)(v25 + 16);
              uint64_t v27 = *(void *)(v25 + 24);
              BOOL v23 = __OFSUB__(v27, v28);
              unint64_t v20 = v27 - v28;
              if (!v23) {
                goto LABEL_47;
              }
              goto LABEL_114;
            case 3uLL:
              sub_1CA5B6EF4(v25, v14);
              goto LABEL_100;
            default:
              sub_1CA5B6EF4(v25, v14);
              unint64_t v20 = BYTE6(v14);
              goto LABEL_47;
          }
          break;
        }
      }
    }
    if (v16 >> 60 == 15)
    {
      if (!v6) {
        unint64_t v6 = MEMORY[0x1E4FBC860];
      }
      if (v10) {
        uint64_t v29 = v10;
      }
      else {
        uint64_t v29 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRetain();
      uint64_t v53 = v29;
      swift_bridgeObjectRetain();
    }
    else
    {
      a1 = (unint64_t)v62;
      switch(v16 >> 62)
      {
        case 1uLL:
          unint64_t v20 = (HIDWORD(v17) - v17);
          if (__OFSUB__(HIDWORD(v17), v17)) {
            goto LABEL_117;
          }
          unint64_t v20 = (int)v20;
LABEL_83:
          if (v20 != 5)
          {
LABEL_96:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
            v60[0] = 0;
            v60[1] = 0xE000000000000000;
            sub_1CA5FDB18();
            swift_bridgeObjectRelease();
            v60[0] = 0xD00000000000001ALL;
            v60[1] = 0x80000001CA60CBB0;
            *(void *)&long long v58 = 753;
            sub_1CA5FDCA8();
            sub_1CA5FD8F8();
            swift_bridgeObjectRelease();
            sub_1CA5BBD9C(v60[0], v60[1], 8, 0);
            swift_willThrow();

            goto LABEL_102;
          }
          uint64_t v44 = MEMORY[0x1E4FBC860];
          if (!v6) {
            unint64_t v6 = MEMORY[0x1E4FBC860];
          }
          if (v10) {
            uint64_t v45 = v10;
          }
          else {
            uint64_t v45 = MEMORY[0x1E4FBC860];
          }
          sub_1CA5B8510(v17, v16);
          swift_bridgeObjectRetain();
          uint64_t v53 = v45;
          swift_bridgeObjectRetain();
          sub_1CA5B8510(v17, v16);
          uint64_t v46 = sub_1CA5EB1E8(0, 40, v17, v16);
          sub_1CA5B736C(v17, v16);
          uint64_t v14 = *(void *)(v46 + 16);
          if (v14)
          {
            unint64_t v54 = v6;
            v60[0] = v44;
            sub_1CA5DE798(0, v14, 0);
            a1 = *(void *)(v46 + 32);
            if ((a1 & 0x8000000000000000) != 0 || a1 > 0xFF)
            {
LABEL_120:
              sub_1CA5FDC08();
              __break(1u);
              JUMPOUT(0x1CA5EC340);
            }
            uint64_t v10 = v46;
            unint64_t v13 = v17;
            uint64_t v47 = v60[0];
            uint64_t v2 = *(uint64_t **)(v60[0] + 16);
            unint64_t v20 = *(void *)(v60[0] + 24);
            unint64_t v17 = (unint64_t)v2 + 1;
            if ((unint64_t)v2 >= v20 >> 1) {
              goto LABEL_119;
            }
            while (1)
            {
              *(void *)(v47 + 16) = v17;
              unint64_t v20 = (unint64_t)v2 + v47;
              *((unsigned char *)v2 + v47 + 32) = a1;
              a1 = v14 - 1;
              if (v14 == 1)
              {
                unint64_t v17 = v13;
LABEL_95:
                sub_1CA5B736C(v17, v16);
                swift_bridgeObjectRelease();
                unint64_t v6 = v54;
                goto LABEL_57;
              }
              uint64_t v2 = (uint64_t *)((char *)v2 + 33);
              uint64_t v50 = (unint64_t *)(v10 + 40);
              unint64_t v17 = v13;
              while (a1)
              {
                unint64_t v13 = *v50;
                if ((*v50 & 0x8000000000000000) != 0 || v13 > 0xFF) {
                  goto LABEL_120;
                }
                v60[0] = v47;
                unint64_t v20 = *(void *)(v47 + 24);
                uint64_t v14 = (uint64_t)v2 - 31;
                if ((unint64_t)(v2 - 4) >= v20 >> 1)
                {
                  sub_1CA5DE798(v20 > 1, (int64_t)v2 - 31, 1);
                  uint64_t v47 = v60[0];
                }
                *(void *)(v47 + 16) = v14;
                *((unsigned char *)v2 + v47) = v13;
                uint64_t v2 = (uint64_t *)((char *)v2 + 1);
                ++v50;
                if (!--a1) {
                  goto LABEL_95;
                }
              }
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              sub_1CA5DE798(v20 > 1, v17, 1);
              uint64_t v47 = v60[0];
            }
          }
          sub_1CA5B736C(v17, v16);
          swift_bridgeObjectRelease();
          break;
        case 2uLL:
          uint64_t v43 = *(void *)(v17 + 16);
          uint64_t v42 = *(void *)(v17 + 24);
          BOOL v23 = __OFSUB__(v42, v43);
          unint64_t v20 = v42 - v43;
          if (!v23) {
            goto LABEL_83;
          }
          goto LABEL_118;
        case 3uLL:
          goto LABEL_96;
        default:
          unint64_t v20 = BYTE6(v16);
          goto LABEL_83;
      }
    }
LABEL_57:
    uint64_t v30 = *(void *)(v6 + 16);
    unint64_t v51 = v16;
    uint64_t v52 = v17;
    unint64_t v55 = v6;
    if (v30)
    {
      swift_bridgeObjectRetain();
      unint64_t v31 = (unint64_t *)(v6 + 40);
      while (1)
      {
        uint64_t v32 = *(v31 - 1);
        unint64_t v33 = *v31;
        sub_1CA5B6FE8(v32, *v31);
        if (qword_1EBCB4208 != -1) {
          swift_once();
        }
        uint64_t v34 = *(void *)(qword_1EBCB4200 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_reservedTCIs);
        swift_bridgeObjectRetain();
        char v35 = sub_1CA5CFE20(v32, v33, v34);
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v32, v33);
        if (v35) {
          break;
        }
        v31 += 2;
        if (!--v30)
        {
          swift_bridgeObjectRelease();
          unint64_t v17 = v52;
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      v60[0] = 0;
      v60[1] = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v60, "PrimaryTCIs ");
      BYTE5(v60[1]) = 0;
      HIWORD(v60[1]) = -5120;
      MEMORY[0x1CB798360](v55, MEMORY[0x1E4F277C0]);
      sub_1CA5FD8F8();
    }
    else
    {
LABEL_69:
      uint64_t v36 = *(void *)(v53 + 16);
      if (!v36)
      {

LABEL_79:
        sub_1CA5B736C(v17, v51);
        swift_bridgeObjectRelease();
        a1 = v55;
        swift_bridgeObjectRelease();
        return a1;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = (unint64_t *)(v53 + 40);
      while (1)
      {
        uint64_t v38 = *(v37 - 1);
        unint64_t v39 = *v37;
        sub_1CA5B6FE8(v38, *v37);
        if (qword_1EBCB4208 != -1) {
          swift_once();
        }
        uint64_t v40 = *(void *)(qword_1EBCB4200 + OBJC_IVAR____TtC24AppletTranslationLibrary11ExpressMode_reservedTCIs);
        swift_bridgeObjectRetain();
        char v41 = sub_1CA5CFE20(v38, v39, v40);
        swift_bridgeObjectRelease();
        sub_1CA5B6EF4(v38, v39);
        if (v41) {
          break;
        }
        v37 += 2;
        if (!--v36)
        {

          swift_bridgeObjectRelease();
          unint64_t v17 = v52;
          goto LABEL_79;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      v60[0] = 0;
      v60[1] = 0xE000000000000000;
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      strcpy((char *)v60, "AuxTCIs ");
      BYTE1(v60[1]) = 0;
      WORD1(v60[1]) = 0;
      HIDWORD(v60[1]) = -402653184;
      MEMORY[0x1CB798360](v53, MEMORY[0x1E4F277C0]);
      sub_1CA5FD8F8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA5FD8F8();
    sub_1CA5BBD9C(v60[0], v60[1], 8, 0);
    a1 = v52;
    swift_willThrow();

    sub_1CA5B736C(v52, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_25:
  a1 = *(void *)(v6 + 16);
  if (!a1) {
    goto LABEL_37;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v2 = (uint64_t *)(v6 + 40);
  while (2)
  {
    uint64_t v18 = *(v2 - 1);
    uint64_t v14 = *v2;
    unint64_t v19 = (unint64_t)*v2 >> 62;
    v2 += 2;
    switch(v19)
    {
      case 1uLL:
        unint64_t v20 = (HIDWORD(v18) - v18);
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_113;
        }
        unint64_t v20 = (int)v20;
LABEL_34:
        if (v20 == 3)
        {
          if (!--a1)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v2 = v1;
            goto LABEL_37;
          }
          continue;
        }
LABEL_98:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
        v60[0] = 0;
        v60[1] = 0xE000000000000000;
        sub_1CA5FDB18();
        swift_bridgeObjectRelease();
        v60[0] = 0xD00000000000001ALL;
        v60[1] = 0x80000001CA60CBB0;
        uint64_t v48 = 747;
LABEL_101:
        *(void *)&long long v58 = v48;
        sub_1CA5FDCA8();
        sub_1CA5FD8F8();
        swift_bridgeObjectRelease();
        sub_1CA5BBD9C(v60[0], v60[1], 8, 0);
        swift_willThrow();

LABEL_102:
        sub_1CA5B736C(v17, v16);
        return a1;
      case 2uLL:
        uint64_t v22 = *(void *)(v18 + 16);
        uint64_t v21 = *(void *)(v18 + 24);
        BOOL v23 = __OFSUB__(v21, v22);
        unint64_t v20 = v21 - v22;
        if (!v23) {
          goto LABEL_34;
        }
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
        goto LABEL_116;
      case 3uLL:
        sub_1CA5B6EF4(v18, v14);
        goto LABEL_98;
      default:
        sub_1CA5B6EF4(v18, v14);
        unint64_t v20 = BYTE6(v14);
        goto LABEL_34;
    }
  }
}

uint64_t sub_1CA5EC370(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = a1;
  if (sub_1CA5FD8A8() == a1 && v7 == a2)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v9 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
LABEL_8:

    return 0;
  }
  if (sub_1CA5FD8A8() == v6 && v11 == a2)
  {
    uint64_t v6 = 2;
    swift_bridgeObjectRelease_n();

    return v6;
  }
  char v12 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();

    return 2;
  }
  if (sub_1CA5FD8A8() == v6 && v13 == a2) {
    goto LABEL_17;
  }
  char v14 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_22;
  }
  if (sub_1CA5FD8A8() == v6 && v15 == a2)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
LABEL_23:

    return 1;
  }
  char v16 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (sub_1CA5FD8A8() == v6 && v17 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB41A8);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1CA602380;
    *(void *)(v6 + 32) = sub_1CA5BA450((uint64_t)&unk_1F24D3CA8);
    *(void *)(v6 + 40) = v19;
    *(void *)(v6 + 48) = sub_1CA5BA450((uint64_t)&unk_1F24D3CD0);
    *(void *)(v6 + 56) = v20;

    return v6;
  }
  char v18 = sub_1CA5FDCB8();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_28;
  }
  if (sub_1CA5FD8A8() == v6 && v21 == a2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v6 = sub_1CA5FDCB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
      sub_1CA5FDB18();
      swift_bridgeObjectRelease();
      sub_1CA5FDCA8();
      uint64_t v6 = v23;
      sub_1CA5FD8F8();
      swift_bridgeObjectRelease();
      sub_1CA5BBD9C(0xD000000000000023, 0x80000001CA60CB50, 8, 0);
      swift_willThrow();

      return v6;
    }
  }
  if (a3)
  {
    unint64_t v22 = sub_1CA5EB514((unint64_t)a3);
    if (!v3) {
      return v22;
    }
  }
  else
  {
    sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
    sub_1CA5FDB18();
    swift_bridgeObjectRelease();
    sub_1CA5FDCA8();
    sub_1CA5FD8F8();
    swift_bridgeObjectRelease();
    sub_1CA5BBD9C(0xD000000000000023, 0x80000001CA60CB50, 8, 0);
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1CA5EC7D8(unint64_t a1, char a2)
{
  uint64_t v83 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1CA5FDC28();
    if (!v3) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_17;
    }
  }
  if (v3 < 1)
  {
LABEL_114:
    __break(1u);
LABEL_115:
    sub_1CA5FDCD8();
    __break(1u);
LABEL_116:
    uint64_t result = sub_1CA5FDCE8();
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = MEMORY[0x1CB798560](i, a1);
      if (*(unsigned char *)(v5 + 162) != 1 || (*(unsigned char *)(v5 + 104) & 1) != 0)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1CA5FDB88();
        sub_1CA5FDBB8();
        sub_1CA5FDBC8();
        sub_1CA5FDB98();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v3; ++j)
    {
      uint64_t v7 = *(void *)(a1 + 8 * j + 32);
      if (*(unsigned char *)(v7 + 162) == 1 && (*(unsigned char *)(v7 + 104) & 1) == 0)
      {
        swift_retain();
        sub_1CA5FDB88();
        sub_1CA5FDBB8();
        sub_1CA5FDBC8();
        sub_1CA5FDB98();
      }
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v8 = v83;
  uint64_t v84 = (void *)sub_1CA5F0EC0(MEMORY[0x1E4FBC860]);
  if (v83 < 0 || (v83 & 0x4000000000000000) != 0) {
    goto LABEL_112;
  }
  uint64_t v9 = *(void *)(v83 + 16);
  while (1)
  {
    if (!v9) {
      goto LABEL_104;
    }
    unint64_t v10 = 0;
    unint64_t v81 = v8 & 0xC000000000000001;
    uint64_t v79 = v8 + 32;
    uint64_t v76 = v8;
    uint64_t v77 = v9;
LABEL_23:
    if (a2) {
      goto LABEL_29;
    }
    if (v81) {
      break;
    }
    if (v10 < *(void *)(v8 + 16))
    {
      uint64_t v11 = *(void **)(v79 + 8 * v10);
      if (v11[10] != 1) {
        goto LABEL_29;
      }
      swift_retain();
      goto LABEL_28;
    }
LABEL_111:
    __break(1u);
LABEL_112:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1CA5FDC28();
    swift_release();
    if (v9 < 0)
    {
      __break(1u);
      goto LABEL_114;
    }
  }
  uint64_t v70 = *(void *)(MEMORY[0x1CB798560](v10, v8) + 80);
  swift_release();
  if (v70 == 1)
  {
    uint64_t v11 = (void *)MEMORY[0x1CB798560](v10, v8);
LABEL_28:
    uint64_t v12 = v11[2];
    uint64_t v13 = v11[3];
    swift_bridgeObjectRetain();
    swift_release();
    sub_1CA5B89A0(0, 0, v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v9 = v77;
  }
LABEL_29:
  uint64_t v14 = v10 + 1;
  if (v10 + 1 != v9)
  {
    unint64_t v75 = v10 + 1;
    unint64_t v80 = v10;
    while (1)
    {
      if (v14 >= v9)
      {
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      if (v81)
      {
        char v16 = (void *)MEMORY[0x1CB798560](v10, v8);
      }
      else
      {
        if (v10 >= *(void *)(v8 + 16)) {
          goto LABEL_106;
        }
        char v16 = *(void **)(v79 + 8 * v10);
        swift_retain();
      }
      unint64_t v18 = v16[10];
      uint64_t v17 = v16[11];
      uint64_t v19 = v16[12];
      sub_1CA5EAF08(v18);
      swift_release();
      if (v81)
      {
        uint64_t v20 = (void *)MEMORY[0x1CB798560](v14, v8);
      }
      else
      {
        if ((unint64_t)v14 >= *(void *)(v8 + 16)) {
          goto LABEL_107;
        }
        uint64_t v20 = *(void **)(v79 + 8 * v14);
        swift_retain();
      }
      unint64_t v21 = v20[10];
      uint64_t v22 = v20[11];
      uint64_t v23 = v20[12];
      sub_1CA5EAF08(v21);
      swift_release();
      if (v18)
      {
        if (v18 == 1)
        {
          if (!v21) {
            goto LABEL_33;
          }
          if (v21 != 1)
          {
            if (v21 == 2) {
              goto LABEL_33;
            }
LABEL_55:
            unint64_t v15 = v21;
LABEL_32:
            sub_1CA5EAF58(v15);
            goto LABEL_33;
          }
        }
        else if (v18 == 2)
        {
          if (v21 < 2) {
            goto LABEL_33;
          }
          if (v21 != 2) {
            goto LABEL_55;
          }
        }
        else
        {
          if (v21 <= 2)
          {
            unint64_t v15 = v18;
            goto LABEL_32;
          }
          if (v81)
          {
            uint64_t v24 = MEMORY[0x1CB798560](v80, v8);
            uint64_t v25 = MEMORY[0x1CB798560](v14, v8);
          }
          else
          {
            uint64_t v24 = *(void *)(v79 + 8 * v80);
            uint64_t v25 = *(void *)(v79 + 8 * v14);
            swift_retain();
            swift_retain();
          }
          BOOL v78 = sub_1CA5D07F0(v24, v18, v17, v19, v25, v21, v22, v23);
          swift_release();
          sub_1CA5EAF58(v21);
          sub_1CA5EAF58(v18);
          swift_release();
          uint64_t v9 = v77;
          if (!v78) {
            goto LABEL_33;
          }
        }
      }
      else
      {
        if (v21 - 1 < 2) {
          goto LABEL_33;
        }
        if (v21) {
          goto LABEL_55;
        }
      }
      if (v81)
      {
        uint64_t v26 = MEMORY[0x1CB798560](v14, v8);
        uint64_t v28 = *(void *)(v26 + 16);
        uint64_t v27 = *(void *)(v26 + 24);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v29 = MEMORY[0x1CB798560](v80, v8);
      }
      else
      {
        uint64_t v30 = *(void *)(v79 + 8 * v14);
        uint64_t v28 = *(void *)(v30 + 16);
        uint64_t v27 = *(void *)(v30 + 24);
        uint64_t v29 = *(void *)(v79 + 8 * v80);
        swift_bridgeObjectRetain();
        swift_retain();
      }
      uint64_t v31 = *(void *)(v29 + 16);
      uint64_t v32 = *(void *)(v29 + 24);
      swift_bridgeObjectRetain_n();
      swift_release();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v35 = sub_1CA5F1A20(v31, v32);
      uint64_t v36 = v84[2];
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37)) {
        goto LABEL_108;
      }
      char v39 = v34;
      if (v84[3] >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1CA5E34FC();
        }
      }
      else
      {
        sub_1CA5E2354(v38, isUniquelyReferenced_nonNull_native);
        uint64_t v40 = sub_1CA5F1A20(v31, v32);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_116;
        }
        unint64_t v35 = v40;
      }
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
        v84[(v35 >> 6) + 8] |= 1 << v35;
        uint64_t v42 = (uint64_t *)(v84[6] + 16 * v35);
        *uint64_t v42 = v31;
        v42[1] = v32;
        *(void *)(v84[7] + 8 * v35) = MEMORY[0x1E4FBC870];
        uint64_t v43 = v84[2];
        BOOL v44 = __OFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_110;
        }
        v84[2] = v45;
        swift_bridgeObjectRetain();
      }
      uint64_t v46 = v84[7];
      uint64_t v47 = *(void *)(v46 + 8 * v35);
      sub_1CA5FDD48();
      sub_1CA5FDD58();
      swift_bridgeObjectRetain();
      sub_1CA5FD8D8();
      uint64_t v48 = sub_1CA5FDD78();
      uint64_t v49 = -1 << *(unsigned char *)(v47 + 32);
      unint64_t v50 = v48 & ~v49;
      if ((*(void *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50))
      {
        uint64_t v51 = ~v49;
        uint64_t v52 = *(void *)(v47 + 48);
        while (1)
        {
          uint64_t v53 = (void *)(v52 + 16 * v50);
          uint64_t v54 = v53[1];
          if (v54)
          {
            BOOL v55 = *v53 == v28 && v54 == v27;
            if (v55 || (sub_1CA5FDCB8() & 1) != 0) {
              break;
            }
          }
          unint64_t v50 = (v50 + 1) & v51;
          if (((*(void *)(v47 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
            goto LABEL_83;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_83:
        swift_bridgeObjectRelease();
        uint64_t v56 = 8 * v35;
        int v57 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = *(void *)(v46 + v56);
        uint64_t v8 = v82;
        *(void *)(v46 + v56) = 0x8000000000000000;
        unint64_t v58 = *(void *)(v82 + 16);
        unint64_t v59 = *(void *)(v82 + 24);
        swift_bridgeObjectRetain();
        if (v59 <= v58)
        {
          if (v57) {
            sub_1CA5E5C3C();
          }
          else {
            sub_1CA5E9054();
          }
          uint64_t v8 = v82;
          sub_1CA5FDD48();
          sub_1CA5FDD58();
          sub_1CA5FD8D8();
          uint64_t v60 = sub_1CA5FDD78();
          uint64_t v61 = -1 << *(unsigned char *)(v82 + 32);
          unint64_t v50 = v60 & ~v61;
          if ((*(void *)(v82 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50))
          {
            uint64_t v62 = ~v61;
            uint64_t v63 = *(void *)(v82 + 48);
            do
            {
              uint64_t v64 = (void *)(v63 + 16 * v50);
              uint64_t v65 = v64[1];
              if (v65)
              {
                BOOL v66 = *v64 == v28 && v65 == v27;
                if (v66 || (sub_1CA5FDCB8() & 1) != 0) {
                  goto LABEL_115;
                }
              }
              unint64_t v50 = (v50 + 1) & v62;
            }
            while (((*(void *)(v82 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v50) & 1) != 0);
          }
        }
        else if ((v57 & 1) == 0)
        {
          sub_1CA5E8980();
          uint64_t v8 = v82;
        }
        *(void *)(v8 + ((v50 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v50;
        uint64_t v67 = (void *)(*(void *)(v8 + 48) + 16 * v50);
        *uint64_t v67 = v28;
        v67[1] = v27;
        uint64_t v68 = *(void *)(v8 + 16);
        BOOL v44 = __OFADD__(v68, 1);
        uint64_t v69 = v68 + 1;
        if (v44) {
          goto LABEL_109;
        }
        *(void *)(v8 + 16) = v69;
        *(void *)(v46 + v56) = v8;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v8 = v76;
      uint64_t v9 = v77;
LABEL_33:
      ++v14;
      unint64_t v10 = v80;
      if (v14 == v9)
      {
        unint64_t v10 = v75;
        goto LABEL_23;
      }
    }
  }
LABEL_104:
  swift_release();
  uint64_t v71 = swift_bridgeObjectRetain();
  uint64_t v72 = sub_1CA5CB878(v71);
  swift_bridgeObjectRelease_n();
  return v72;
}

uint64_t sub_1CA5ED118(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1CA5F0424();
  uint64_t result = sub_1CA5FD9A8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_1CA5B6FE8(v5, *v4);
      sub_1CA5E3CE0(v7, v5, v6);
      sub_1CA5B6EF4(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1CA5ED1B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1CA5FD9A8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1CA5E3BDC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CA5ED228(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1CA5FDC28();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1CA5FDC28();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x1CB798570](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for ExpressMode.PassConfig();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1CA5FDC28();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_1CA5FDC68();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1CA5FDC28();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1CA5FD968();
}

uint64_t sub_1CA5ED534(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_1EBCB4208 != -1) {
    swift_once();
  }
  sub_1CA5CD38C(a1, a2 & 1);
  uint64_t v7 = v2;
  if (!v2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(void *)(v6 + 16);
    if (v9)
    {
      uint64_t v26 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1CA5FDBA8();
      sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6083D8);
      unint64_t v10 = (uint64_t *)(v8 + 48);
      uint64_t v11 = MEMORY[0x1E4FBB1A0];
      do
      {
        uint64_t v12 = *(v10 - 2);
        uint64_t v13 = *(v10 - 1);
        uint64_t v14 = *v10;
        v10 += 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608768);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1CA602AD0;
        *(void *)(v15 + 32) = sub_1CA5FD8A8();
        *(void *)(v15 + 40) = v16;
        *(void *)(v15 + 88) = v11;
        *(void *)(v15 + 56) = v11;
        *(void *)(v15 + 64) = v12;
        *(void *)(v15 + 72) = v13;
        uint64_t v17 = sub_1CA5FD8A8();
        *(void *)(v15 + 120) = v11;
        *(void *)(v15 + 96) = v17;
        *(void *)(v15 + 104) = v18;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v19 = v7;
        uint64_t v20 = sub_1CA5CB710(v14);
        swift_bridgeObjectRelease();
        *(void *)(v15 + 152) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608750);
        *(void *)(v15 + 128) = v20;
        uint64_t v21 = sub_1CA5FD8A8();
        *(void *)(v15 + 184) = v11;
        *(void *)(v15 + 160) = v21;
        *(void *)(v15 + 168) = v22;
        uint64_t v23 = swift_bridgeObjectRetain();
        uint64_t v24 = sub_1CA5CB150(v23);
        uint64_t v7 = v19;
        swift_bridgeObjectRelease();
        *(void *)(v15 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
        *(void *)(v15 + 192) = v24;
        sub_1CA5FD9B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1CA5FDB88();
        sub_1CA5FDBB8();
        sub_1CA5FDBC8();
        sub_1CA5FDB98();
        --v9;
      }
      while (v9);
      uint64_t v3 = v26;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1CA5ED7C8(uint64_t a1, uint64_t a2, char a3)
{
  if (qword_1EBCB4208 != -1) {
    swift_once();
  }
  uint64_t result = sub_1CA5CD38C(a1, a3 & 1);
  if (!v3)
  {
    unint64_t v9 = result;
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v24 = v8;
    if (v10)
    {
      uint64_t v23 = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = swift_bridgeObjectRetain();
      char v12 = sub_1CA5B8B28(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_6:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1CA5B84AC(0, (unint64_t *)&qword_1EA6086E8);
        sub_1CA5BBD9C(0xD000000000000023, 0x80000001CA60C960, 8, 0);
        return swift_willThrow();
      }
      if (v10 != 1)
      {
        uint64_t v13 = v24 + 72;
        a2 = 1;
        while (1)
        {
          uint64_t v14 = a2 + 1;
          if (__OFADD__(a2, 1)) {
            break;
          }
          swift_bridgeObjectRetain();
          uint64_t v15 = swift_bridgeObjectRetain();
          char v16 = sub_1CA5B8B28(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_6;
          }
          v13 += 24;
          ++a2;
          if (v14 == v10) {
            goto LABEL_12;
          }
        }
        __break(1u);
        goto LABEL_32;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      a2 = v23;
    }
    unint64_t v25 = MEMORY[0x1E4FBC860];
    if (!(v9 >> 62))
    {
      uint64_t v17 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v17) {
        goto LABEL_33;
      }
      goto LABEL_15;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1CA5FDC28();
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_33;
    }
LABEL_15:
    if (v17 < 1)
    {
      __break(1u);
      return result;
    }
    if ((v9 & 0xC000000000000001) == 0)
    {
      uint64_t v20 = a2;
      for (uint64_t i = 0; i != v17; ++i)
      {
        if ((a3 & 1) != 0 || *(void *)(*(void *)(v9 + 8 * i + 32) + 80) != 1)
        {
          swift_retain();
          sub_1CA5FDB88();
          sub_1CA5FDBB8();
          sub_1CA5FDBC8();
          sub_1CA5FDB98();
        }
      }
      swift_bridgeObjectRelease();
      a2 = v20;
      goto LABEL_34;
    }
    for (uint64_t j = 0; j != v17; ++j)
    {
      uint64_t v19 = MEMORY[0x1CB798560](j, v9);
      if ((a3 & 1) != 0 || *(void *)(v19 + 80) != 1)
      {
        sub_1CA5FDB88();
        sub_1CA5FDBB8();
        sub_1CA5FDBC8();
        sub_1CA5FDB98();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
LABEL_33:
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v22 = sub_1CA5D0A5C(v25);
    uint64_t result = swift_release();
    *(unsigned char *)a2 = v22 & 1;
  }
  return result;
}

uint64_t sub_1CA5EDB44(unint64_t a1, uint64_t a2)
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_20:
    uint64_t v4 = sub_1CA5FDC28();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = MEMORY[0x1CB798560](i, a1);
          unint64_t v7 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_17:
            __break(1u);
            return v10;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_20;
          }
          uint64_t v6 = *(void *)(a1 + 8 * i + 32);
          swift_retain();
          unint64_t v7 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_17;
          }
        }
        BOOL v8 = *(void *)(v6 + 16) == *(void *)(a2 + 16) && *(void *)(v6 + 24) == *(void *)(a2 + 24);
        if (v8 || (sub_1CA5FDCB8() & 1) != 0)
        {
          sub_1CA5FDB88();
          sub_1CA5FDBB8();
          sub_1CA5FDBC8();
          sub_1CA5FDB98();
        }
        else
        {
          swift_release();
        }
        if (v7 == v4) {
          return v10;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1CA5EDCB8(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 40;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v15 = result + 40;
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    BOOL v8 = (unint64_t *)(v5 + 16 * v4);
    for (unint64_t i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(v8 - 1);
      unint64_t v11 = *v8;
      unint64_t v4 = i + 1;
      sub_1CA5B6FE8(v10, *v8);
      if ((sub_1CA5CC4FC(v10, v11, a2) & 1) == 0) {
        break;
      }
      uint64_t result = sub_1CA5B6EF4(v10, v11);
      v8 += 2;
      if (v2 == v4) {
        return v6;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_1CA5DE758(0, *(void *)(v6 + 16) + 1, 1);
    }
    unint64_t v13 = *(void *)(v6 + 16);
    unint64_t v12 = *(void *)(v6 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t result = sub_1CA5DE758(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v6 + 16) = v13 + 1;
    uint64_t v14 = v6 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v11;
    uint64_t v5 = v15;
  }
  while (v2 - 1 != i);
  return v6;
}

BOOL sub_1CA5EDE10(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t __s2 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  if (!__s1) {
    __break(1u);
  }
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t sub_1CA5EDEF4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = sub_1CA5FD408();
  char v8 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1CA5FD428();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = sub_1CA5FD418();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

uint64_t sub_1CA5EDF94(uint64_t a1, unint64_t a2, void *__s1)
{
  uint64_t v7 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
        JUMPOUT(0x1CA5EE0C0);
      }
      swift_retain();
      char v4 = sub_1CA5EDEF4((int)v7, v7 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, __s1);
      sub_1CA5B6EF4(v7, a2);
      break;
    case 2uLL:
      uint64_t v9 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v4 = sub_1CA5EDEF4(v10, v11, v9, __s1);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      a1 = 0;
      uint64_t v8 = 0;
      goto LABEL_7;
    default:
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
LABEL_7:
      BOOL v12 = sub_1CA5EDE10(a1, v8, __s1);
      if (!v3) {
        char v4 = v12;
      }
      break;
  }
  return v4 & 1;
}

uint64_t sub_1CA5EE0D0(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v181 = *MEMORY[0x1E4F143B8];
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_199;
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    *(void *)&long long v168 = v5;
    sub_1CA5CB0D4((uint64_t *)&v168);
    if (v4)
    {
LABEL_208:
      swift_release();
      __break(1u);
      JUMPOUT(0x1CA5EF98CLL);
    }
    uint64_t v6 = v168;
    LODWORD(v7) = (uint64_t)v168 < 0 || (v168 & 0x4000000000000000) != 0;
    if (v7 == 1) {
      goto LABEL_197;
    }
    uint64_t v4 = *(void *)(v168 + 16);
LABEL_10:
    if ((unsigned __int128)(v4 * (__int128)18) >> 64 == (18 * v4) >> 63) {
      break;
    }
    __break(1u);
LABEL_199:
    unint64_t v132 = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t)sub_1CA5DE534(v132, (void (*)(void *, uint64_t, unint64_t))sub_1CA5B68A8);
    swift_bridgeObjectRelease();
  }
  uint64_t v179 = sub_1CA5C5194(18 * v4);
  unint64_t v180 = v8;
  v164[2] = MEMORY[0x1E4FBC870];
  long long v178 = xmmword_1CA6021D0;
  if (v7)
  {
    swift_retain();
    uint64_t v9 = sub_1CA5FDC28();
  }
  else
  {
    uint64_t v9 = *(void *)(v6 + 16);
    swift_retain();
  }
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v149 = v6;
  uint64_t v148 = v9;
  if (v9)
  {
    if (v9 < 1)
    {
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
    }
    unint64_t v7 = 0;
    unint64_t v11 = v6 & 0xC000000000000001;
    do
    {
      if (v11)
      {
        uint64_t v12 = MEMORY[0x1CB798560](v7, v6);
      }
      else
      {
        uint64_t v12 = *(void *)(v6 + 8 * v7 + 32);
        swift_retain();
      }
      unint64_t v13 = *(void *)(v12 + 80);
      if (v13 < 3)
      {
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1CA5C4F78(0, v10[2] + 1, 1, v10);
        }
        unint64_t v15 = v10[2];
        unint64_t v14 = v10[3];
        if (v15 >= v14 >> 1) {
          uint64_t v10 = sub_1CA5C4F78((void *)(v14 > 1), v15 + 1, 1, v10);
        }
        void v10[2] = v15 + 1;
        v10[v15 + 4] = v13;
        uint64_t v6 = v149;
        uint64_t v9 = v148;
      }
      ++v7;
    }
    while (v9 != v7);
  }
  swift_release();
  *(void *)&long long v168 = MEMORY[0x1E4FBC860];
  uint64_t v16 = v10[2];
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      ++v6;
      uint64_t v17 = swift_bridgeObjectRetain();
      unint64_t v7 = (unint64_t)&v168;
      sub_1CA5B1EF0(v17);
    }
    while (v16 != v6);
    swift_bridgeObjectRelease_n();
    uint64_t v18 = v168;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v139 = v18;
  sub_1CA5F0424();
  uint64_t v19 = sub_1CA5FD858();
  if (!v148)
  {
    swift_bridgeObjectRelease();
    swift_release();
    unsigned int v140 = 0;
    uint64_t v136 = 0;
    char v141 = 1;
    unsigned int v134 = 0;
    char v135 = 1;
    char v137 = 1;
    char v138 = 1;
LABEL_146:
    uint64_t v98 = v179;
    unint64_t v97 = v180;
    switch(v180 >> 62)
    {
      case 1uLL:
        if ((int)v179 != v179 >> 32) {
          goto LABEL_148;
        }
        goto LABEL_150;
      case 2uLL:
        if (*(void *)(v179 + 16) == *(void *)(v179 + 24)) {
          goto LABEL_150;
        }
        goto LABEL_148;
      case 3uLL:
        goto LABEL_150;
      default:
        if ((v180 & 0xFF000000000000) == 0)
        {
LABEL_150:
          swift_bridgeObjectRelease();
          uint64_t v101 = sub_1CA5BA450((uint64_t)&unk_1F24D3FC8);
          sub_1CA5B6EF4(v178, *((unint64_t *)&v178 + 1));
          swift_bridgeObjectRelease();
          uint64_t v102 = v98;
          unint64_t v103 = v97;
          goto LABEL_178;
        }
LABEL_148:
        uint64_t v99 = swift_bridgeObjectRetain();
        uint64_t v100 = sub_1CA5DE44C(v99);
        swift_bridgeObjectRelease();
        *(void *)&long long v168 = v100;
        sub_1CA5CB068((uint64_t *)&v168);
        swift_bridgeObjectRelease();
        uint64_t v104 = sub_1CA5B9844(v168);
        uint64_t v106 = v105;
        id v107 = [self sel_getExpressModeSettings];
        uint64_t v108 = sub_1CA5FD848();

        *(void *)&long long __dst = sub_1CA5FD8A8();
        *((void *)&__dst + 1) = v109;
        sub_1CA5FDAE8();
        if (*(void *)(v108 + 16) && (unint64_t v110 = sub_1CA5F1B0C((uint64_t)&v168), (v111 & 1) != 0))
        {
          sub_1CA5B83E4(*(void *)(v108 + 56) + 32 * v110, (uint64_t)&__dst);
        }
        else
        {
          long long __dst = 0u;
          long long v166 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_1CA5F0528((uint64_t)&v168);
        if (*((void *)&v166 + 1))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608920);
          if (swift_dynamicCast())
          {
            uint64_t v112 = v164[0];
            goto LABEL_162;
          }
        }
        else
        {
          sub_1CA5BA6F0((uint64_t)&__dst, &qword_1EA608748);
        }
        uint64_t v112 = MEMORY[0x1E4FBC860];
LABEL_162:
        *(void *)&long long v168 = v112;
        swift_bridgeObjectRetain();
        sub_1CA5CB068((uint64_t *)&v168);
        swift_bridgeObjectRelease();
        uint64_t v113 = sub_1CA5B9844(v168);
        *((void *)&v157 + 1) = v114;
        uint64_t v159 = sub_1CA5BA450((uint64_t)&unk_1F24D3FF0);
        unint64_t v163 = v115;
        if (a2) {
          __int16 v116 = 3840;
        }
        else {
          __int16 v116 = 3328;
        }
        if (v137)
        {
          sub_1CA5B6FE8(v98, v97);
          long long v117 = xmmword_1CA6021B0;
        }
        else
        {
          LOWORD(__dst) = bswap32(v136) >> 16;
          sub_1CA5B6FE8(v98, v97);
          sub_1CA5BBBD8((uint64_t)&__dst, (uint64_t)&__dst + 2, (uint64_t *)&v168);
          long long v117 = v168;
        }
        long long v156 = v117;
        if (v135)
        {
          long long v118 = xmmword_1CA6021B0;
        }
        else
        {
          LOWORD(__dst) = bswap32(v134) >> 16;
          sub_1CA5BBBD8((uint64_t)&__dst, (uint64_t)&__dst + 2, (uint64_t *)&v168);
          long long v118 = v168;
        }
        *(void *)&long long v157 = v113;
        *(void *)&long long v160 = v104;
        *((void *)&v160 + 1) = v106;
        long long v154 = v118;
        if (v141)
        {
          uint64_t v119 = 0;
          unint64_t v120 = 0xF000000000000000;
        }
        else
        {
          LOWORD(__dst) = bswap32(v140) >> 16;
          sub_1CA5BBBD8((uint64_t)&__dst, (uint64_t)&__dst + 2, (uint64_t *)&v168);
          unint64_t v120 = *((void *)&v168 + 1);
          uint64_t v119 = v168;
        }
        uint64_t v121 = v178;
        LOWORD(__dst) = v116;
        unint64_t v122 = *((void *)&v178 + 1);
        sub_1CA5B6FE8(v178, *((unint64_t *)&v178 + 1));
        sub_1CA5BBBD8((uint64_t)&__dst, (uint64_t)&__dst + 2, (uint64_t *)&v168);
        long long v123 = v168;
        if (v138)
        {
          long long v124 = xmmword_1CA6021B0;
        }
        else
        {
          LOWORD(__dst) = bswap32(HIDWORD(v136)) >> 16;
          long long v152 = v168;
          sub_1CA5BBBD8((uint64_t)&__dst, (uint64_t)&__dst + 2, (uint64_t *)&v168);
          long long v123 = v152;
          long long v124 = v168;
        }
        *(void *)&long long v168 = v98;
        *((void *)&v168 + 1) = v97;
        long long v169 = v156;
        long long v170 = v154;
        *(void *)&long long v171 = v119;
        *((void *)&v171 + 1) = v120;
        int64_t v50 = *((void *)&v160 + 1);
        unint64_t v3 = v160;
        long long v172 = v160;
        *(void *)&long long v173 = v121;
        *((void *)&v173 + 1) = v122;
        unint64_t v155 = v122;
        long long v174 = v123;
        long long v175 = v124;
        uint64_t v153 = v121;
        unint64_t v7 = *((void *)&v157 + 1);
        uint64_t v21 = v157;
        long long v176 = v157;
        *(void *)&long long v177 = v159;
        *((void *)&v177 + 1) = v163;
        *((void *)&v166 + 1) = &type metadata for SEEMConfiguration;
        BOOL v167 = &off_1F24D5A30;
        size_t v125 = (_OWORD *)swift_allocObject();
        *(void *)&long long __dst = v125;
        long long v126 = v175;
        v125[7] = v174;
        v125[8] = v126;
        long long v127 = v177;
        v125[9] = v176;
        v125[10] = v127;
        long long v128 = v171;
        v125[3] = v170;
        v125[4] = v128;
        long long v129 = v173;
        unint64_t v47 = v159;
        v125[5] = v172;
        v125[6] = v129;
        long long v130 = v169;
        v125[1] = v168;
        v125[2] = v130;
        sub_1CA5B6FE8(v157, *((unint64_t *)&v157 + 1));
        sub_1CA5B6FE8(v159, v163);
        sub_1CA5B6FE8(v160, *((unint64_t *)&v160 + 1));
        sub_1CA5F068C(&v168, (void (*)(void, void))sub_1CA5B6FE8, (void (*)(uint64_t, uint64_t))sub_1CA5B8510);
        uint64_t v78 = sub_1CA5F43CC(&__dst);
        break;
    }
    goto LABEL_180;
  }
  unsigned int v140 = 0;
  unsigned int v134 = 0;
  uint64_t v136 = 0;
  unint64_t v20 = 0;
  char v141 = 1;
  uint64_t v153 = 1;
  uint64_t v21 = MEMORY[0x1E4FBB2B8];
  char v135 = 1;
  char v137 = 1;
  char v138 = 1;
LABEL_37:
  if ((v149 & 0xC000000000000001) != 0)
  {
    unint64_t v22 = v20;
    uint64_t v23 = MEMORY[0x1CB798560](v20, v149);
    unint64_t v24 = v20 + 1;
    if (__OFADD__(v22, 1)) {
      goto LABEL_189;
    }
  }
  else
  {
    if (v20 >= *(void *)(v149 + 16)) {
      goto LABEL_192;
    }
    uint64_t v23 = swift_retain();
    BOOL v25 = __OFADD__(v20, 1);
    unint64_t v24 = v20 + 1;
    if (v25) {
      goto LABEL_189;
    }
  }
  unint64_t v155 = v23;
  unint64_t v147 = v24;
  if (!*(void *)(v19 + 16)) {
    goto LABEL_47;
  }
  uint64_t v26 = *(void *)(v23 + 32);
  unint64_t v27 = *(void *)(v23 + 40);
  sub_1CA5B6FE8(v26, v27);
  LODWORD(v7) = v19;
  uint64_t v28 = sub_1CA5F1A4C(v26, v27);
  if ((v29 & 1) == 0)
  {
    sub_1CA5B6EF4(v26, v27);
LABEL_47:
    unint64_t v3 = 0;
    switch(v180 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v179), v179)) {
          goto LABEL_194;
        }
        unint64_t v3 = HIDWORD(v179) - (int)v179;
LABEL_52:
        if ((v3 & 0x8000000000000000) != 0 || v3 >= 0x10000)
        {
LABEL_207:
          sub_1CA5FDC08();
          __break(1u);
          goto LABEL_208;
        }
LABEL_54:
        uint64_t v34 = *(void *)(v155 + 32);
        LODWORD(v7) = 0;
        switch(*(void *)(v155 + 40) >> 62)
        {
          case 1:
            BOOL v25 = __OFSUB__(HIDWORD(v34), v34);
            int v35 = HIDWORD(v34) - v34;
            if (v25) {
              goto LABEL_195;
            }
            unint64_t v7 = v35;
LABEL_59:
            if ((v7 & 0x8000000000000000) != 0 || v7 >= 0x100) {
              goto LABEL_207;
            }
LABEL_61:
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
            *((void *)&v169 + 1) = v39;
            uint64_t v40 = sub_1CA5B8634((unint64_t *)&qword_1EBCB41A0, &qword_1EBCB4238);
            *(void *)&long long v170 = v40;
            LOBYTE(v168) = v7;
            LOBYTE(__dst) = *(unsigned char *)__swift_project_boxed_opaque_existential_1Tm(&v168, v39);
            sub_1CA5FD538();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
            uint64_t v41 = *(void *)(v155 + 32);
            unint64_t v42 = *(void *)(v155 + 40);
            sub_1CA5B6FE8(v41, v42);
            sub_1CA5FD5C8();
            sub_1CA5B6EF4(v41, v42);
            char v43 = sub_1CA5D5558(v155);
            uint64_t v6 = 0;
            unsigned int v30 = v3;
            switch(v180 >> 62)
            {
              case 1uLL:
                uint64_t v6 = v179 >> 32;
                break;
              case 2uLL:
                uint64_t v6 = *(void *)(v179 + 24);
                break;
              case 3uLL:
                break;
              default:
                uint64_t v6 = BYTE6(v180);
                break;
            }
            *((void *)&v169 + 1) = v39;
            *(void *)&long long v170 = v40;
            LOBYTE(v168) = v43;
            LOBYTE(__dst) = *(unsigned char *)__swift_project_boxed_opaque_existential_1Tm(&v168, v39);
            sub_1CA5FD538();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
            uint64_t v31 = (void *)v155;
            uint64_t v44 = *(void *)(v155 + 32);
            unint64_t v45 = *(void *)(v155 + 40);
            sub_1CA5B6FE8(v44, v45);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v168 = v19;
            unint64_t v7 = (unint64_t)&v168;
            sub_1CA5E2F4C(v3, v44, v45, isUniquelyReferenced_nonNull_native);
            uint64_t v19 = v168;
            swift_bridgeObjectRelease();
            sub_1CA5B6EF4(v44, v45);
            break;
          case 2:
            uint64_t v38 = v34 + 16;
            uint64_t v36 = *(void *)(v34 + 16);
            uint64_t v37 = *(void *)(v38 + 8);
            unint64_t v7 = v37 - v36;
            if (!__OFSUB__(v37, v36)) {
              goto LABEL_59;
            }
            goto LABEL_196;
          case 3:
            goto LABEL_61;
          default:
            LOBYTE(v7) = BYTE6(*(void *)(v155 + 40));
            goto LABEL_61;
        }
        break;
      case 2uLL:
        uint64_t v33 = *(void *)(v179 + 16);
        uint64_t v32 = *(void *)(v179 + 24);
        unint64_t v3 = v32 - v33;
        if (!__OFSUB__(v32, v33)) {
          goto LABEL_52;
        }
        goto LABEL_193;
      case 3uLL:
        goto LABEL_54;
      default:
        unint64_t v3 = BYTE6(v180);
        goto LABEL_54;
    }
    goto LABEL_66;
  }
  unsigned int v30 = *(unsigned __int16 *)(*(void *)(v19 + 56) + 2 * v28);
  sub_1CA5B6EF4(v26, v27);
  uint64_t v31 = (void *)v155;
LABEL_66:
  unint64_t v47 = v31[10];
  if (!v47)
  {
    swift_release();
    char v137 = 0;
    LODWORD(v136) = v30;
    goto LABEL_36;
  }
  if (v47 != 1)
  {
    if (v47 == 2)
    {
      swift_release();
      char v138 = 0;
      HIDWORD(v136) = v30;
      goto LABEL_36;
    }
    uint64_t v143 = v19;
    unint64_t v51 = v31[12];
    swift_bridgeObjectRetain();
    sub_1CA5EAF08(v47);
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_1CA5EDCB8(v52, v139);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v168 = v47;
    swift_bridgeObjectRetain();
    sub_1CA5B1EF0(v53);
    uint64_t v54 = *(void *)(v168 + 16);
    unsigned int v146 = bswap32(v30);
    if (!v54)
    {
LABEL_97:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = v51;
      uint64_t v71 = *(void *)(v51 + 16);
      if (v71)
      {
        uint64_t v72 = 0;
        uint64_t v6 = HIWORD(v146);
        uint64_t v19 = v143;
        do
        {
          char v74 = *(unsigned char *)(v7 + v72++ + 32);
          unint64_t v3 = (unint64_t)&qword_1EBCB4238;
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
          *((void *)&v169 + 1) = v73;
          *(void *)&long long v170 = sub_1CA5B8634((unint64_t *)&qword_1EBCB41A0, &qword_1EBCB4238);
          LOBYTE(v168) = v74;
          LOBYTE(__dst) = *(unsigned char *)__swift_project_boxed_opaque_existential_1Tm(&v168, v73);
          sub_1CA5FD538();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
          LOWORD(__dst) = HIWORD(v146);
          *((void *)&v169 + 1) = v21;
          *(void *)&long long v170 = MEMORY[0x1E4F27EF0];
          *(void *)&long long v168 = &__dst;
          *((void *)&v168 + 1) = (char *)&__dst + 2;
          __swift_project_boxed_opaque_existential_1Tm(&v168, v21);
          sub_1CA5FD548();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
          unint64_t v7 = v51;
        }
        while (v71 != v72);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v19 = v143;
      }
      goto LABEL_36;
    }
    LODWORD(v55) = HIWORD(v146);
    uint64_t v56 = (unint64_t *)(v168 + 40);
    while (2)
    {
      uint64_t v58 = *(v56 - 1);
      unint64_t v59 = *v56;
      LOWORD(v164[0]) = v55;
      *((void *)&v169 + 1) = v21;
      *(void *)&long long v170 = MEMORY[0x1E4F27EF0];
      *(void *)&long long v168 = v164;
      *((void *)&v168 + 1) = (char *)v164 + 2;
      uint64_t v60 = (const void **)__swift_project_boxed_opaque_existential_1Tm(&v168, v21);
      uint64_t v61 = *v60;
      if (*v60)
      {
        uint64_t v62 = v60[1];
        int64_t v63 = v62 - v61;
        if (v62 == v61)
        {
          unint64_t v7 = v59;
          sub_1CA5B6FE8(v58, v59);
          uint64_t v6 = 0;
          unint64_t v64 = 0xC000000000000000;
          goto LABEL_86;
        }
        if (v63 <= 14)
        {
          *(void *)((char *)&__dst + 6) = 0;
          *(void *)&long long __dst = 0;
          BYTE14(__dst) = (_BYTE)v62 - (_BYTE)v61;
          memcpy(&__dst, v61, v63);
          uint64_t v6 = __dst;
          unint64_t v64 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
          unint64_t v7 = v59;
          sub_1CA5B6FE8(v58, v59);
        }
        else
        {
          sub_1CA5FD448();
          swift_allocObject();
          sub_1CA5B6FE8(v58, v59);
          uint64_t v65 = sub_1CA5FD3F8();
          uint64_t v66 = v65;
          if ((unint64_t)v63 >= 0x7FFFFFFF)
          {
            sub_1CA5FD518();
            uint64_t v6 = swift_allocObject();
            *(void *)(v6 + 16) = 0;
            *(void *)(v6 + 24) = v63;
            unint64_t v64 = v66 | 0x8000000000000000;
          }
          else
          {
            uint64_t v6 = v63 << 32;
            unint64_t v64 = v65 | 0x4000000000000000;
          }
LABEL_81:
          unint64_t v7 = v59;
        }
LABEL_86:
        v56 += 2;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
        uint64_t v162 = v58;
        *(void *)&long long __dst = v58;
        *((void *)&__dst + 1) = v7;
        *((void *)&v169 + 1) = MEMORY[0x1E4F277C0];
        *(void *)&long long v170 = MEMORY[0x1E4F277B0];
        *(void *)&long long v168 = v6;
        *((void *)&v168 + 1) = v64;
        uint64_t v67 = __swift_project_boxed_opaque_existential_1Tm(&v168, MEMORY[0x1E4F277C0]);
        uint64_t v55 = *v67;
        unint64_t v68 = v67[1];
        switch(v68 >> 62)
        {
          case 1uLL:
            unint64_t v3 = (v55 >> 32) - (int)v55;
            if (v55 >> 32 < (int)v55)
            {
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              swift_bridgeObjectRetain();
              uint64_t v4 = sub_1CA5FDC28();
              swift_release();
              goto LABEL_10;
            }
            unint64_t v70 = v7;
            LODWORD(v7) = v67[1];
            unint64_t v151 = v70;
            sub_1CA5B6FE8(v162, v70);
            sub_1CA5B6FE8(v6, v64);
            sub_1CA5B6FE8(v55, v68);
            if (sub_1CA5FD408() && __OFSUB__((int)v55, sub_1CA5FD428())) {
              goto LABEL_191;
            }
            sub_1CA5FD418();
            sub_1CA5FD548();
            sub_1CA5B6EF4(v55, v68);
            uint64_t v21 = MEMORY[0x1E4FBB2B8];
            LOWORD(v55) = HIWORD(v146);
            uint64_t v57 = v162;
            unint64_t v3 = v151;
LABEL_76:
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v168);
            sub_1CA5B6EF4(v6, v64);
            sub_1CA5E3CE0((uint64_t *)&v168, __dst, *((unint64_t *)&__dst + 1));
            sub_1CA5B6EF4(v57, v3);
            sub_1CA5B6EF4(v168, *((unint64_t *)&v168 + 1));
            if (!--v54) {
              goto LABEL_97;
            }
            break;
          case 2uLL:
            unint64_t v3 = *(void *)(v55 + 16);
            uint64_t v150 = *(void *)(v55 + 24);
            unint64_t v69 = v7;
            sub_1CA5B6FE8(v162, v7);
            sub_1CA5B6FE8(v6, v64);
            swift_retain();
            swift_retain();
            LODWORD(v7) = v68;
            if (sub_1CA5FD408())
            {
              LODWORD(v7) = v68;
              if (__OFSUB__(v3, sub_1CA5FD428())) {
                goto LABEL_190;
              }
            }
            BOOL v25 = __OFSUB__(v150, v3);
            unint64_t v3 = v150 - v3;
            if (v25) {
              goto LABEL_182;
            }
            sub_1CA5FD418();
            sub_1CA5FD548();
            swift_release();
            swift_release();
            LOWORD(v55) = HIWORD(v146);
            uint64_t v57 = v162;
            unint64_t v3 = v69;
            uint64_t v21 = MEMORY[0x1E4FBB2B8];
            goto LABEL_76;
          case 3uLL:
            memset(v164, 0, 14);
            uint64_t v57 = v162;
            sub_1CA5B6FE8(v162, v7);
            sub_1CA5B6FE8(v6, v64);
            unint64_t v3 = v7;
            goto LABEL_75;
          default:
            v164[0] = *v67;
            LOWORD(v164[1]) = v68;
            BYTE2(v164[1]) = BYTE2(v68);
            BYTE3(v164[1]) = BYTE3(v68);
            BYTE4(v164[1]) = BYTE4(v68);
            BYTE5(v164[1]) = BYTE5(v68);
            uint64_t v57 = v162;
            sub_1CA5B6FE8(v162, v7);
            sub_1CA5B6FE8(v6, v64);
            unint64_t v3 = v7;
LABEL_75:
            sub_1CA5FD548();
            LOWORD(v55) = HIWORD(v146);
            goto LABEL_76;
        }
        continue;
      }
      break;
    }
    sub_1CA5B6FE8(v58, v59);
    uint64_t v6 = 0;
    unint64_t v64 = 0xC000000000000000;
    goto LABEL_81;
  }
  unint64_t v48 = v31[14];
  unint64_t v158 = v31[15];
  unint64_t v49 = v158 >> 62;
  unint64_t v7 = MEMORY[0x1E4FBC860];
  switch(v158 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v48), v48)) {
        goto LABEL_202;
      }
      int64_t v50 = HIDWORD(v48) - (int)v48;
LABEL_106:
      if (!v50) {
        goto LABEL_135;
      }
      unint64_t v145 = HIDWORD(v48);
      unsigned int v142 = v30;
      *(void *)&long long __dst = MEMORY[0x1E4FBC860];
      int64_t v77 = v50 & ~(v50 >> 63);
      uint64_t v161 = v48;
      uint64_t v78 = sub_1CA5DE698(0, v77, 0);
      uint64_t v6 = v161;
      unint64_t v7 = __dst;
      uint64_t v144 = v19;
      if (v49)
      {
        if (v49 == 1) {
          uint64_t v79 = (int)v161;
        }
        else {
          uint64_t v79 = *(void *)(v161 + 16);
        }
        if (v50 < 0)
        {
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
          goto LABEL_203;
        }
      }
      else
      {
        if (v50 < 0) {
          goto LABEL_204;
        }
        uint64_t v79 = 0;
      }
      unint64_t v163 = v158 >> 62;
      break;
    case 2uLL:
      uint64_t v76 = *(void *)(v48 + 16);
      uint64_t v75 = *(void *)(v48 + 24);
      int64_t v50 = v75 - v76;
      if (!__OFSUB__(v75, v76)) {
        goto LABEL_106;
      }
      goto LABEL_201;
    case 3uLL:
      goto LABEL_135;
    default:
      int64_t v50 = BYTE6(v158);
      goto LABEL_106;
  }
  while (v77)
  {
    if (v49)
    {
      unint64_t v80 = v7;
      if (v49 == 1)
      {
        LODWORD(v7) = v158;
        if (v79 < (int)v161 || v79 >= v161 >> 32) {
          goto LABEL_185;
        }
        uint64_t v81 = sub_1CA5FD408();
        if (!v81) {
          goto LABEL_205;
        }
        uint64_t v82 = v81;
        uint64_t v83 = sub_1CA5FD428();
        uint64_t v84 = v79 - v83;
        if (__OFSUB__(v79, v83)) {
          goto LABEL_187;
        }
      }
      else
      {
        LODWORD(v7) = v158;
        if (v79 < *(void *)(v6 + 16)) {
          goto LABEL_184;
        }
        if (v79 >= *(void *)(v6 + 24)) {
          goto LABEL_186;
        }
        uint64_t v86 = sub_1CA5FD408();
        if (!v86) {
          goto LABEL_206;
        }
        uint64_t v82 = v86;
        uint64_t v87 = sub_1CA5FD428();
        uint64_t v84 = v79 - v87;
        if (__OFSUB__(v79, v87)) {
          goto LABEL_188;
        }
      }
      char v85 = *(unsigned char *)(v82 + v84);
      uint64_t v6 = v161;
      unint64_t v7 = v80;
    }
    else
    {
      if (v79 >= BYTE6(v158)) {
        goto LABEL_183;
      }
      LOWORD(v168) = v6;
      BYTE2(v168) = BYTE2(v6);
      BYTE3(v168) = BYTE3(v6);
      BYTE4(v168) = v145;
      BYTE5(v168) = BYTE5(v6);
      BYTE6(v168) = BYTE6(v6);
      BYTE7(v168) = HIBYTE(v6);
      DWORD2(v168) = v158;
      WORD6(v168) = WORD2(v158);
      char v85 = *((unsigned char *)&v168 + v79);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608738);
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_1CA6021C0;
    *(void *)(v88 + 56) = MEMORY[0x1E4FBC358];
    *(void *)(v88 + 64) = MEMORY[0x1E4FBC3B0];
    *(unsigned char *)(v88 + 32) = v85;
    uint64_t v78 = sub_1CA5FD8B8();
    unint64_t v49 = v78;
    uint64_t v90 = v89;
    *(void *)&long long __dst = v7;
    unint64_t v3 = *(void *)(v7 + 16);
    unint64_t v91 = *(void *)(v7 + 24);
    unint64_t v47 = v3 + 1;
    if (v3 >= v91 >> 1)
    {
      uint64_t v78 = sub_1CA5DE698(v91 > 1, v3 + 1, 1);
      uint64_t v6 = v161;
      unint64_t v7 = __dst;
    }
    *(void *)(v7 + 16) = v47;
    unint64_t v92 = v7 + 16 * v3;
    *(void *)(v92 + 32) = v49;
    *(void *)(v92 + 40) = v90;
    ++v79;
    --v77;
    --v50;
    uint64_t v21 = MEMORY[0x1E4FBB2B8];
    LODWORD(v49) = v158 >> 62;
    if (!v50)
    {
      unsigned int v30 = v142;
      uint64_t v19 = v144;
LABEL_135:
      *(void *)&long long v168 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4220);
      sub_1CA5B8634((unint64_t *)&qword_1EA608720, &qword_1EBCB4220);
      unint64_t v7 = sub_1CA5FD888();
      uint64_t v94 = v93;
      swift_bridgeObjectRelease();
      if (v7 == 0xD000000000000014 && v94 == 0x80000001CA60CA00)
      {
        swift_release();
        swift_bridgeObjectRelease();
        char v141 = 0;
        unsigned int v140 = v30;
      }
      else
      {
        LODWORD(v7) = sub_1CA5FDCB8();
        swift_release();
        swift_bridgeObjectRelease();
        unsigned int v95 = v140;
        if (v7) {
          unsigned int v95 = v30;
        }
        unsigned int v140 = v95;
        v141 &= v7 ^ 1;
        if (v7) {
          unsigned int v96 = v134;
        }
        else {
          unsigned int v96 = v30;
        }
        unsigned int v134 = v96;
        v135 &= v7;
      }
LABEL_36:
      unint64_t v20 = v147;
      if (v147 == v148)
      {
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_146;
      }
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_180:
  uint64_t v101 = v78;
  sub_1CA5B6EF4(v153, v155);
  sub_1CA5B6EF4(v3, v50);
  sub_1CA5B6EF4(v21, v7);
  sub_1CA5B6EF4(v47, v163);
  sub_1CA5F068C(&v168, (void (*)(void, void))sub_1CA5B6EF4, (void (*)(uint64_t, uint64_t))sub_1CA5B736C);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&__dst);
  swift_bridgeObjectRelease();
  uint64_t v102 = v179;
  unint64_t v103 = v180;
LABEL_178:
  sub_1CA5B6EF4(v102, v103);
  return v101;
}

uint64_t sub_1CA5EFA10()
{
  return sub_1CA5FD588();
}

uint64_t sub_1CA5EFA1C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unsigned char **sub_1CA5EFA2C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA5B23C8(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1CA5EFA34()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFA44()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1CA5EFA6C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1CA5DD9A8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1CA5EFA74()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFA84()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1CA5EFA8C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1CA5EFA9C()
{
  return **(unsigned __int8 **)(v0 + 16);
}

uint64_t sub_1CA5EFAA8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFAB8()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_1CA5B6EF4(*(void *)(v0 + 16), v1);
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1CA5EFB00()
{
  return sub_1CA5D51DC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1CA5EFB08()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFB18()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFB28()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1CA5EFB54()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1CA5EFB7C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1CA5EFBB0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFBC0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFBD0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFBE0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFBF0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1CA5EFC28(uint64_t *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = *a1 + 4;
  uint64_t result = sub_1CA5FDA68();
  *a1 = v3;
  return result;
}

uint64_t sub_1CA5EFC88()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFC98()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5EFCA8(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = a2;
  int64_t v6 = a1;
  int64_t v7 = 0;
  int64_t v8 = a1;
  while (1)
  {
    BOOL v9 = v8 <= a2;
    if (a3 > 0) {
      BOOL v9 = v8 >= a2;
    }
    if (v9) {
      break;
    }
    BOOL v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10) {
      int64_t v8 = (v8 >> 63) ^ 0x8000000000000000;
    }
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1CA5DE778(0, v7, 0);
  int64_t v31 = v5;
  if (v7)
  {
    uint64_t result = a4;
    uint64_t v29 = a4 + 32;
    int64_t v30 = *(void *)(a4 + 16);
    while (1)
    {
      BOOL v13 = v6 <= v5;
      if (a3 > 0) {
        BOOL v13 = v6 >= v5;
      }
      if (v13) {
        break;
      }
      if (__OFADD__(v6, a3)) {
        int64_t v14 = ((v6 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v14 = v6 + a3;
      }
      if (__OFADD__(v6, 15)) {
        goto LABEL_50;
      }
      if (v30 >= v6 + 15) {
        int64_t v15 = v6 + 15;
      }
      else {
        int64_t v15 = v30;
      }
      if (v15 < v6) {
        goto LABEL_51;
      }
      if (v6 < 0) {
        goto LABEL_52;
      }
      unint64_t v17 = *(void *)(v32 + 16);
      unint64_t v16 = *(void *)(v32 + 24);
      uint64_t v18 = result;
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1) {
        sub_1CA5DE778(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v32 + 16) = v17 + 1;
      uint64_t v19 = (void *)(v32 + 32 * v17);
      v19[4] = v18;
      v19[5] = v29;
      v19[6] = v6;
      v19[7] = (2 * v15) | 1;
      int64_t v6 = v14;
      --v7;
      uint64_t result = v18;
      int64_t v5 = v31;
      if (!v7) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
  }
  else
  {
    int64_t v14 = v6;
    uint64_t result = a4;
LABEL_29:
    BOOL v20 = v14 <= v5;
    if (a3 > 0) {
      BOOL v20 = v14 >= v5;
    }
    if (v20) {
      return v32;
    }
    uint64_t v21 = result + 32;
    while (1)
    {
      int64_t v22 = __OFADD__(v14, a3) ? ((v14 + a3) >> 63) ^ 0x8000000000000000 : v14 + a3;
      if (__OFADD__(v14, 15)) {
        break;
      }
      if (*(void *)(result + 16) >= v14 + 15) {
        int64_t v23 = v14 + 15;
      }
      else {
        int64_t v23 = *(void *)(result + 16);
      }
      if (v23 < v14) {
        goto LABEL_54;
      }
      if (v14 < 0) {
        goto LABEL_55;
      }
      unint64_t v25 = *(void *)(v32 + 16);
      unint64_t v24 = *(void *)(v32 + 24);
      uint64_t v26 = result;
      swift_bridgeObjectRetain();
      if (v25 >= v24 >> 1) {
        sub_1CA5DE778(v24 > 1, v25 + 1, 1);
      }
      *(void *)(v32 + 16) = v25 + 1;
      unint64_t v27 = (void *)(v32 + 32 * v25);
      v27[4] = v26;
      v27[5] = v21;
      v27[6] = v14;
      v27[7] = (2 * v23) | 1;
      BOOL v28 = v22 <= v31;
      if (a3 > 0) {
        BOOL v28 = v22 >= v31;
      }
      int64_t v14 = v22;
      uint64_t result = v26;
      if (v28) {
        return v32;
      }
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1CA5EFF30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = a2;
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 != a2)
  {
    int64_t v5 = (unint64_t *)(a1 + 16 * a2 + 8);
    while (2)
    {
      if (v3 >= v4)
      {
        __break(1u);
        JUMPOUT(0x1CA5F002CLL);
      }
      uint64_t v6 = *(v5 - 1);
      unint64_t v7 = *v5;
      switch(*v5 >> 62)
      {
        case 1uLL:
          if ((v6 ^ (unint64_t)(v6 << 32)) >> 32) {
            return v3;
          }
          goto LABEL_4;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            return v3;
          }
          goto LABEL_4;
        case 3uLL:
          sub_1CA5B6EF4(v6, *v5);
          goto LABEL_4;
        default:
          sub_1CA5B6EF4(v6, *v5);
          if ((v7 & 0xFF000000000000) != 0) {
            return v3;
          }
LABEL_4:
          ++v3;
          v5 += 2;
          if (v4 != v3) {
            continue;
          }
          uint64_t v3 = v4;
          break;
      }
      break;
    }
  }
  return v3;
}

uint64_t sub_1CA5F003C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  if (a4 != a1)
  {
    if (a4 >= a1)
    {
      char v13 = a6 & 1;
      uint64_t v14 = a4;
      uint64_t v15 = a1;
      uint64_t v16 = a2;
      if ((a3 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      char v13 = a3 & 1;
      uint64_t v14 = a1;
      uint64_t v15 = a4;
      uint64_t v16 = a5;
      a5 = a2;
      if ((a6 & 1) == 0)
      {
LABEL_7:
        if (v15 < a8) {
          goto LABEL_53;
        }
        int64_t v17 = a9 >> 1;
        if (v15 >= (uint64_t)(a9 >> 1)) {
          goto LABEL_53;
        }
        uint64_t v18 = (uint64_t *)(a7 + 16 * v15);
        uint64_t v19 = *v18;
        unint64_t v20 = v18[1];
        uint64_t v21 = 0;
        uint64_t v41 = a7;
        uint64_t v22 = a5;
        switch(v20 >> 62)
        {
          case 1uLL:
            uint64_t v21 = v19 >> 32;
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(v19 + 24);
            break;
          case 3uLL:
            break;
          default:
            uint64_t v21 = BYTE6(v20);
            break;
        }
        uint64_t v11 = sub_1CA5EA2D8(v16, v21, v19, v20);
        ++v15;
        a5 = v22;
        a7 = v41;
        if (v15 >= v14) {
          goto LABEL_38;
        }
        goto LABEL_24;
      }
    }
    if (v15 >= v14)
    {
      uint64_t v11 = 0;
      goto LABEL_38;
    }
    uint64_t v11 = 0;
    int64_t v17 = a9 >> 1;
LABEL_24:
    if (v14 <= v15 + 1) {
      uint64_t v27 = v15 + 1;
    }
    else {
      uint64_t v27 = v14;
    }
    BOOL v28 = (void *)(a7 + 16 * v15 + 8);
    uint64_t v29 = v15;
    while (2)
    {
      if (v15 < a8 || v29 >= v17)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v30 = *(v28 - 1);
      uint64_t v31 = 0;
      switch(*v28 >> 62)
      {
        case 1:
          LODWORD(v31) = HIDWORD(v30) - v30;
          if (__OFSUB__(HIDWORD(v30), v30)) {
            goto LABEL_50;
          }
          uint64_t v31 = (int)v31;
LABEL_35:
          BOOL v35 = __OFADD__(v11, v31);
          v11 += v31;
          if (v35) {
            goto LABEL_49;
          }
          ++v29;
          v28 += 2;
          if (v29 < v14) {
            continue;
          }
          uint64_t v15 = v27;
          break;
        case 2:
          uint64_t v34 = v30 + 16;
          uint64_t v33 = *(void *)(v30 + 16);
          uint64_t v32 = *(void *)(v34 + 8);
          BOOL v35 = __OFSUB__(v32, v33);
          uint64_t v31 = v32 - v33;
          if (!v35) {
            goto LABEL_35;
          }
          goto LABEL_51;
        case 3:
          goto LABEL_35;
        default:
          uint64_t v31 = BYTE6(*v28);
          goto LABEL_35;
      }
      break;
    }
LABEL_38:
    if ((v13 & 1) == 0)
    {
      if (v15 < a8 || v15 >= (uint64_t)(a9 >> 1)) {
        goto LABEL_55;
      }
      uint64_t v36 = (uint64_t *)(a7 + 16 * v15);
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
      uint64_t v39 = 0;
      switch(v38 >> 62)
      {
        case 1uLL:
          uint64_t v39 = (int)v37;
          break;
        case 2uLL:
          uint64_t v39 = *(void *)(v37 + 16);
          break;
        default:
          break;
      }
      uint64_t v40 = sub_1CA5EA2D8(v39, a5, v37, v38);
      BOOL v35 = __OFADD__(v11, v40);
      v11 += v40;
      if (v35) {
        goto LABEL_56;
      }
    }
    if (a4 >= a1) {
      return v11;
    }
    BOOL v35 = __OFSUB__(0, v11);
    uint64_t v11 = -v11;
    if (!v35) {
      return v11;
    }
    goto LABEL_57;
  }
  if (a6)
  {
    if (a3) {
      return 0;
    }
    goto LABEL_52;
  }
  if (a3)
  {
LABEL_58:
    __break(1u);
    JUMPOUT(0x1CA5F0304);
  }
  if (a4 < a8 || (uint64_t)(a9 >> 1) <= a4) {
    goto LABEL_54;
  }
  int64_t v23 = (uint64_t *)(a7 + 16 * a4);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];

  return sub_1CA5EA2D8(a2, a5, v24, v25);
}

uint64_t objectdestroyTm()
{
  sub_1CA5B6EF4(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1CA5F0370()
{
  return sub_1CA5C43A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1CA5F0378()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5F0388()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5F0398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1CA5E9B84(a1, a2, *(void *)(v3 + 16), **(void **)(v3 + 32), *(void *)(*(void *)(v3 + 32) + 8), *(void *)(*(void *)(v3 + 32) + 16), *(void *)(*(void *)(v3 + 32) + 24), a3);
}

uint64_t sub_1CA5F03C0()
{
  return sub_1CA5FD548();
}

uint64_t sub_1CA5F03EC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

unint64_t sub_1CA5F0424()
{
  unint64_t result = qword_1EBCB4198;
  if (!qword_1EBCB4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBCB4198);
  }
  return result;
}

uint64_t *sub_1CA5F0478(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  a2(*a1, a1[1]);
  a2(v4, v5);
  return a1;
}

uint64_t sub_1CA5F04CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1CA5F0528(uint64_t a1)
{
  return a1;
}

uint64_t sub_1CA5F057C()
{
  sub_1CA5B6EF4(v0[2], v0[3]);
  unint64_t v1 = v0[5];
  if (v1 >> 60 != 15) {
    sub_1CA5B6EF4(v0[4], v1);
  }
  unint64_t v2 = v0[7];
  if (v2 >> 60 != 15) {
    sub_1CA5B6EF4(v0[6], v2);
  }
  unint64_t v3 = v0[9];
  if (v3 >> 60 != 15) {
    sub_1CA5B6EF4(v0[8], v3);
  }
  unint64_t v4 = v0[11];
  if (v4 >> 60 != 15) {
    sub_1CA5B6EF4(v0[10], v4);
  }
  unint64_t v5 = v0[13];
  if (v5 >> 60 != 15) {
    sub_1CA5B6EF4(v0[12], v5);
  }
  unint64_t v6 = v0[15];
  if (v6 >> 60 != 15) {
    sub_1CA5B6EF4(v0[14], v6);
  }
  unint64_t v7 = v0[17];
  if (v7 >> 60 != 15) {
    sub_1CA5B6EF4(v0[16], v7);
  }
  unint64_t v8 = v0[19];
  if (v8 >> 60 != 15) {
    sub_1CA5B6EF4(v0[18], v8);
  }
  unint64_t v9 = v0[21];
  if (v9 >> 60 != 15) {
    sub_1CA5B6EF4(v0[20], v9);
  }

  return MEMORY[0x1F4186498](v0, 176, 7);
}

void *sub_1CA5F068C(void *a1, void (*a2)(void, void), void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  uint64_t v12 = a1[9];
  uint64_t v14 = a1[11];
  uint64_t v15 = a1[10];
  uint64_t v16 = a1[13];
  uint64_t v17 = a1[12];
  uint64_t v18 = a1[15];
  uint64_t v19 = a1[14];
  uint64_t v20 = a1[17];
  uint64_t v21 = a1[16];
  uint64_t v22 = a1[19];
  uint64_t v23 = a1[18];
  a2(*a1, a1[1]);
  a3(v5, v6);
  a3(v7, v8);
  a3(v9, v10);
  a3(v11, v12);
  a3(v15, v14);
  a3(v17, v16);
  a3(v19, v18);
  a3(v21, v20);
  a3(v23, v22);
  return a1;
}

uint64_t sub_1CA5F07B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA5F0818(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA5F0860(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExpressMode.PTAExpressModeManager.EndpointType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CA5F0938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressMode.PTAExpressModeManager.EndpointType()
{
  return &type metadata for ExpressMode.PTAExpressModeManager.EndpointType;
}

uint64_t destroy for ExpressMode.ECP2Info()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s24AppletTranslationLibrary11ExpressModeC8ECP2InfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExpressMode.ECP2Info(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExpressMode.ECP2Info(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpressMode.ECP2Info(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpressMode.ECP2Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpressMode.ECP2Info()
{
  return &type metadata for ExpressMode.ECP2Info;
}

unint64_t sub_1CA5F0B6C()
{
  unint64_t result = qword_1EA608AF8;
  if (!qword_1EA608AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608AF8);
  }
  return result;
}

unint64_t sub_1CA5F0C20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A70);
  uint64_t v2 = sub_1CA5FDC58();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CA5F40F4(v6, (uint64_t)&v15, &qword_1EA608B40);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1CA5F1A78(v15, v16, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1CA5B6F4C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F0D80(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A98);
  uint64_t v2 = (void *)sub_1CA5FDC58();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    unint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    sub_1CA5B6FE8(v5, v6);
    unint64_t result = sub_1CA5F1A78(v5, v6, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1C34);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F0EC0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A60);
  uint64_t v2 = (void *)sub_1CA5FDC58();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1CA5F1A78(v5, v6, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F1004(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608970);
  uint64_t v2 = sub_1CA5FDC58();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CA5F40F4(v6, (uint64_t)v15, &qword_1EA608B38);
    unint64_t result = sub_1CA5F1B0C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1CA5B6F4C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F1148(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B48);
  uint64_t v2 = (void *)sub_1CA5FDC58();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1CA5B6FE8(v7, v8);
    unint64_t result = sub_1CA5F1A78(v5, v6, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    uint64_t *v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F1298(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608A78);
  uint64_t v2 = (void *)sub_1CA5FDC58();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1CA5F1A78(v5, v6, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA5F13DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B20);
  uint64_t v2 = (void *)sub_1CA5FDC58();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1CA5F1A78(v5, v6, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CA5F1528()
{
  return 0;
}

uint64_t sub_1CA5F1530()
{
  uint64_t v14 = sub_1CA5FD798();
  uint64_t v0 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1CA5FD778();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1CA5FD788();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1CA5FD768();
  __swift_allocate_value_buffer(v11, qword_1EA608B00);
  __swift_project_value_buffer(v11, (uint64_t)qword_1EA608B00);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F250A8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F25090], v3);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4F250B8], v14);
  return sub_1CA5FD758();
}

uint64_t sub_1CA5F1788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1CA5BBBD8(a1, a2, a3);
}

id sub_1CA5F1950()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OpaqueDataService();
  return [super dealloc];
}

uint64_t type metadata accessor for OpaqueDataService()
{
  return self;
}

unsigned char *sub_1CA5F19A8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_1CA5F27D4(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_1CA5F2898((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_1CA5F2914((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1CA5F1A20(uint64_t a1, uint64_t a2)
{
  return sub_1CA5F1A78(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1B50);
}

uint64_t sub_1CA5F1A4C(uint64_t a1, uint64_t a2)
{
  return sub_1CA5F1A78(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA5F1C34);
}

uint64_t sub_1CA5F1A78(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1CA5FDD48();
  a3(v10, a1, a2);
  uint64_t v7 = sub_1CA5FDD78();

  return a4(a1, a2, v7);
}

unint64_t sub_1CA5F1B0C(uint64_t a1)
{
  uint64_t v2 = sub_1CA5FDAC8();

  return sub_1CA5F25D0(a1, v2);
}

unint64_t sub_1CA5F1B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CA5FDCB8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CA5FDCB8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CA5F1C34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v86 = HIDWORD(a1) - (int)a1;
    uint64_t v87 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v85 = v11;
    unint64_t v88 = a2 >> 62;
    uint64_t v83 = v3 + 64;
    uint64_t v84 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v79 = (a1 >> 32) - (int)a1;
    unint64_t v89 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_1CA5B6FE8(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v89)
      {
        case 1uLL:
          size_t v18 = v86;
          if (v85) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_1CA5B6EF4(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                uint64_t v26 = sub_1CA5FD408();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_1CA5FD428();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_127;
                  }
                  uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                sub_1CA5FD418();
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_1CA5B6EF4(v14, v13);
                  uint64_t v10 = v87;
                  if (!v46) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v47 = sub_1CA5FD408();
                  if (v47)
                  {
                    uint64_t v48 = sub_1CA5FD428();
                    if (__OFSUB__(v84, v48)) {
                      goto LABEL_143;
                    }
                    v47 += v84 - v48;
                  }
                  uint64_t v49 = sub_1CA5FD418();
                  size_t v50 = v79;
                  if (v49 < v79) {
                    size_t v50 = v49;
                  }
                  if (!v29) {
                    goto LABEL_148;
                  }
                  if (!v47) {
                    goto LABEL_149;
                  }
                  size_t v39 = v50;
                  uint64_t v40 = v29;
                  unint64_t v38 = (const void *)v47;
LABEL_71:
                  int v46 = memcmp(v40, v38, v39);
                  sub_1CA5B6EF4(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v69 = *(void *)(a1 + 16);
                uint64_t v78 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v70 = sub_1CA5FD408();
                if (v70)
                {
                  uint64_t v71 = v70;
                  uint64_t v72 = sub_1CA5FD428();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_142;
                  }
                  uint64_t v73 = (const void *)(v71 + v69 - v72);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                if (__OFSUB__(v78, v69)) {
                  goto LABEL_137;
                }
                uint64_t v74 = sub_1CA5FD418();
                if (v74 >= v78 - v69) {
                  size_t v75 = v78 - v69;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v29) {
                  goto LABEL_156;
                }
                uint64_t v4 = v83;
                if (!v73) {
                  goto LABEL_157;
                }
                int v62 = memcmp(v29, v73, v75);
LABEL_115:
                swift_release();
LABEL_116:
                swift_release();
                sub_1CA5B6EF4(v14, v13);
                unint64_t v8 = a2;
                uint64_t v10 = v87;
                if (!v62) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1CA5FD408();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1CA5FD428();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_126;
                  }
                  uint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v34 = 0;
                }
                sub_1CA5FD418();
                uint64_t v4 = v83;
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LODWORD(__s1[1]) = a2;
                  WORD2(__s1[1]) = WORD2(a2);
                  if (!v34) {
                    goto LABEL_152;
                  }
                  int v62 = memcmp(v34, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  unint64_t v42 = (char *)sub_1CA5FD408();
                  if (v42)
                  {
                    uint64_t v43 = sub_1CA5FD428();
                    if (__OFSUB__(v84, v43)) {
                      goto LABEL_141;
                    }
                    v42 += v84 - v43;
                  }
                  uint64_t v44 = sub_1CA5FD418();
                  size_t v45 = v79;
                  if (v44 < v79) {
                    size_t v45 = v44;
                  }
                  if (!v34) {
                    goto LABEL_146;
                  }
                  if (!v42) {
                    goto LABEL_147;
                  }
                  int v46 = memcmp(v34, v42, v45);
                  unint64_t v8 = a2;
                  sub_1CA5B6EF4(a1, a2);
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                uint64_t v63 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                unint64_t v64 = (char *)sub_1CA5FD408();
                if (v64)
                {
                  uint64_t v65 = sub_1CA5FD428();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_140;
                  }
                  v64 += v63 - v65;
                }
                BOOL v21 = __OFSUB__(v77, v63);
                int64_t v66 = v77 - v63;
                if (v21) {
                  goto LABEL_135;
                }
                uint64_t v67 = sub_1CA5FD418();
                if (v67 >= v66) {
                  size_t v68 = v66;
                }
                else {
                  size_t v68 = v67;
                }
                if (!v34) {
                  goto LABEL_153;
                }
                uint64_t v4 = v83;
                if (!v64) {
                  goto LABEL_154;
                }
                int v62 = memcmp(v34, v64, v68);
                swift_release();
                swift_release();
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v88) {
                  goto LABEL_45;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_129;
                  }
                  sub_1CA5B6FE8(a1, v8);
                  uint64_t v35 = sub_1CA5FD408();
                  if (!v35) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_1CA5FD428();
                  uint64_t v25 = v84 - v36;
                  if (__OFSUB__(v84, v36)) {
                    goto LABEL_134;
                  }
LABEL_41:
                  uint64_t v37 = sub_1CA5FD418();
                  unint64_t v38 = (const void *)(v23 + v25);
                  if (v37 >= v79) {
                    size_t v39 = v79;
                  }
                  else {
                    size_t v39 = v37;
                  }
                  uint64_t v40 = __s1;
                  goto LABEL_71;
                }
                uint64_t v57 = *(void *)(a1 + 16);
                uint64_t v58 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_1CA5FD408();
                if (v53)
                {
                  uint64_t v59 = sub_1CA5FD428();
                  if (__OFSUB__(v57, v59)) {
                    goto LABEL_139;
                  }
                  v53 += v57 - v59;
                }
                BOOL v21 = __OFSUB__(v58, v57);
                int64_t v55 = v58 - v57;
                if (v21) {
                  goto LABEL_132;
                }
                uint64_t v56 = sub_1CA5FD418();
                if (!v53) {
                  goto LABEL_151;
                }
LABEL_83:
                if (v56 >= v55) {
                  size_t v60 = v55;
                }
                else {
                  size_t v60 = v56;
                }
                int v61 = memcmp(__s1, v53, v60);
                swift_release();
                swift_release();
                sub_1CA5B6EF4(v14, v13);
                uint64_t v4 = v83;
                uint64_t v10 = v87;
                if (!v61) {
                  return v6;
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v88)
                {
LABEL_45:
                  __int16 __s2 = a1;
                  char v92 = BYTE2(a1);
                  char v93 = BYTE3(a1);
                  char v94 = v80;
                  char v95 = BYTE5(a1);
                  char v96 = BYTE6(a1);
                  char v97 = HIBYTE(a1);
                  __int16 v98 = v8;
                  char v99 = BYTE2(v8);
                  char v100 = BYTE3(v8);
                  char v101 = BYTE4(v8);
                  char v102 = BYTE5(v8);
                  int v41 = memcmp(__s1, &__s2, __n);
                  sub_1CA5B6EF4(v14, v13);
                  if (!v41) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_128;
                  }
                  sub_1CA5B6FE8(a1, v8);
                  uint64_t v22 = sub_1CA5FD408();
                  if (!v22)
                  {
                    sub_1CA5FD418();
                    __break(1u);
LABEL_145:
                    sub_1CA5FD418();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1CA5F25A0);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_1CA5FD428();
                  uint64_t v25 = v84 - v24;
                  if (__OFSUB__(v84, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_1CA5FD408();
                if (v53)
                {
                  uint64_t v54 = sub_1CA5FD428();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_138;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_131;
                }
                uint64_t v56 = sub_1CA5FD418();
                if (!v53) {
                  goto LABEL_150;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_1CA5B6EF4(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_1CA5F25D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1CA5F4098(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1CB7984E0](v9, a1);
      sub_1CA5F0528((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1CA5F2698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CA5F26F4(a1, a2, a3, a4, MEMORY[0x1E4F25170], &qword_1EA608828, MEMORY[0x1E4F25170]);
}

uint64_t sub_1CA5F26F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t result = sub_1CA5FD408();
  if (!result || (uint64_t result = sub_1CA5FD428(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1CA5FD418();
      a5(0);
      sub_1CA5F4050(a6, a7);
      return sub_1CA5FD6B8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5F27D4(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1CA5F2898(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1CA5FD448();
  swift_allocObject();
  uint64_t result = sub_1CA5FD3F8();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1CA5FD518();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1CA5F2914(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1CA5FD448();
  swift_allocObject();
  uint64_t result = sub_1CA5FD3F8();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

double sub_1CA5F2998@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v84 = a3;
  uint64_t v80 = a5;
  unint64_t v81 = a6;
  uint64_t v82 = a1;
  unint64_t v83 = a2;
  uint64_t v78 = a8;
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  uint64_t v68 = sub_1CA5FD828();
  uint64_t v63 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1CA5FD738();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  unint64_t v64 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1CA5FD818();
  uint64_t v69 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v73 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1CA5FD718();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v70 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1CA5FD808();
  uint64_t v75 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1CA5FD6F8();
  uint64_t v76 = *(void *)(v18 - 8);
  uint64_t v77 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1CA5FD778();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v62 - v26;
  uint64_t v79 = a7;
  sub_1CA5FD748();
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v27, v21);
  if (v28 == *MEMORY[0x1E4F25090])
  {
    sub_1CA5F4050(&qword_1EA608828, MEMORY[0x1E4F25170]);
    sub_1CA5FD6D8();
    unint64_t v29 = a4 >> 62;
    unint64_t v30 = a4;
    uint64_t v31 = v84;
    switch(v29)
    {
      case 1uLL:
        if (v84 >> 32 < (int)v84)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
        }
        sub_1CA5B6FE8(v84, v30);
        uint64_t v46 = v85;
        sub_1CA5F26F4((int)v31, v31 >> 32, v30 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v17, MEMORY[0x1E4F25170], &qword_1EA608828, MEMORY[0x1E4F25170]);
        uint64_t v85 = v46;
        break;
      case 2uLL:
        uint64_t v39 = *(void *)(v84 + 16);
        uint64_t v40 = *(void *)(v84 + 24);
        sub_1CA5B6FE8(v84, v30);
        swift_retain();
        swift_retain();
        uint64_t v41 = v85;
        sub_1CA5F26F4(v39, v40, v30 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v17, MEMORY[0x1E4F25170], &qword_1EA608828, MEMORY[0x1E4F25170]);
        uint64_t v85 = v41;
        if (v41)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_41:
          swift_release();
          swift_release();
          __break(1u);
LABEL_42:
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x1CA5F38B0);
        }
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v86 + 6) = 0;
        *(void *)&long long v86 = 0;
        goto LABEL_13;
      default:
        *(void *)&long long v86 = v84;
        WORD4(v86) = v30;
        BYTE10(v86) = BYTE2(v30);
        BYTE11(v86) = BYTE3(v30);
        BYTE12(v86) = BYTE4(v30);
        BYTE13(v86) = BYTE5(v30);
LABEL_13:
        sub_1CA5FD6B8();
        break;
    }
    sub_1CA5B6EF4(v31, v30);
    sub_1CA5FD6C8();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v17, v15);
    sub_1CA5FD6E8();
    sub_1CA5B6EF4(v31, v30);
    uint64_t v47 = sub_1CA5FD768();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v79, v47);
    uint64_t v49 = v76;
    uint64_t v48 = v77;
    goto LABEL_26;
  }
  unint64_t v32 = a4;
  if (v28 == *MEMORY[0x1E4F25098])
  {
    sub_1CA5F4050(&qword_1EA608B30, MEMORY[0x1E4F25180]);
    uint64_t v34 = (uint64_t)v73;
    uint64_t v33 = v74;
    sub_1CA5FD6D8();
    uint64_t v35 = v84;
    switch(v32 >> 62)
    {
      case 1uLL:
        if (v84 >> 32 < (int)v84) {
          goto LABEL_38;
        }
        sub_1CA5B6FE8(v84, v32);
        sub_1CA5F26F4((int)v35, v35 >> 32, v32 & 0x3FFFFFFFFFFFFFFFLL, v34, MEMORY[0x1E4F25180], &qword_1EA608B30, MEMORY[0x1E4F25180]);
        goto LABEL_24;
      case 2uLL:
        uint64_t v50 = *(void *)(v84 + 16);
        uint64_t v51 = *(void *)(v84 + 24);
        sub_1CA5B6FE8(v84, v32);
        swift_retain();
        swift_retain();
        uint64_t v52 = v85;
        sub_1CA5F26F4(v50, v51, v32 & 0x3FFFFFFFFFFFFFFFLL, v34, MEMORY[0x1E4F25180], &qword_1EA608B30, MEMORY[0x1E4F25180]);
        if (v52) {
          goto LABEL_41;
        }
        swift_release();
        swift_release();
LABEL_24:
        sub_1CA5B6EF4(v35, v32);
        break;
      case 3uLL:
        *(void *)((char *)&v86 + 6) = 0;
        *(void *)&long long v86 = 0;
        goto LABEL_21;
      default:
        *(void *)&long long v86 = v84;
        WORD4(v86) = v32;
        BYTE10(v86) = BYTE2(v32);
        BYTE11(v86) = BYTE3(v32);
        BYTE12(v86) = BYTE4(v32);
        BYTE13(v86) = BYTE5(v32);
LABEL_21:
        sub_1CA5FD6B8();
        sub_1CA5B6EF4(v35, v32);
        break;
    }
    uint64_t v20 = v70;
    sub_1CA5FD6C8();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v34, v33);
    sub_1CA5FD708();
    sub_1CA5B6EF4(v35, v32);
    uint64_t v53 = sub_1CA5FD768();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v79, v53);
    uint64_t v49 = v71;
    uint64_t v48 = v72;
LABEL_26:
    (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v48);
    goto LABEL_27;
  }
  if (v28 != *MEMORY[0x1E4F250A0])
  {
    sub_1CA5BC514();
    *(void *)&long long v86 = 0;
    *((void *)&v86 + 1) = 0xE000000000000000;
    sub_1CA5FD8F8();
    uint64_t v42 = v79;
    sub_1CA5FD748();
    sub_1CA5FDBE8();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v22 + 8);
    v43(v25, v21);
    sub_1CA5BBD9C(v86, *((uint64_t *)&v86 + 1), 8, 0);
    swift_willThrow();
    sub_1CA5B6EF4(v80, v81);
    sub_1CA5B6EF4(v84, v32);
    sub_1CA5B6EF4(v82, v83);
    uint64_t v44 = sub_1CA5FD768();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v42, v44);
    v43(v27, v21);
    return result;
  }
  sub_1CA5F4050(&qword_1EA608B28, MEMORY[0x1E4F25190]);
  uint64_t v36 = (uint64_t)v67;
  uint64_t v37 = v68;
  sub_1CA5FD6D8();
  uint64_t v38 = v84;
  switch(v32 >> 62)
  {
    case 1uLL:
      if (v84 >> 32 < (int)v84) {
        goto LABEL_39;
      }
      sub_1CA5B6FE8(v84, v32);
      sub_1CA5F26F4((int)v38, v38 >> 32, v32 & 0x3FFFFFFFFFFFFFFFLL, v36, MEMORY[0x1E4F25190], &qword_1EA608B28, MEMORY[0x1E4F25190]);
      goto LABEL_35;
    case 2uLL:
      uint64_t v57 = *(void *)(v84 + 16);
      uint64_t v58 = *(void *)(v84 + 24);
      sub_1CA5B6FE8(v84, v32);
      swift_retain();
      swift_retain();
      uint64_t v59 = v85;
      sub_1CA5F26F4(v57, v58, v32 & 0x3FFFFFFFFFFFFFFFLL, v36, MEMORY[0x1E4F25190], &qword_1EA608B28, MEMORY[0x1E4F25190]);
      if (v59) {
        goto LABEL_42;
      }
      swift_release();
      swift_release();
LABEL_35:
      sub_1CA5B6EF4(v38, v32);
      break;
    case 3uLL:
      *(void *)((char *)&v86 + 6) = 0;
      *(void *)&long long v86 = 0;
      goto LABEL_32;
    default:
      *(void *)&long long v86 = v84;
      WORD4(v86) = v32;
      BYTE10(v86) = BYTE2(v32);
      BYTE11(v86) = BYTE3(v32);
      BYTE12(v86) = BYTE4(v32);
      BYTE13(v86) = BYTE5(v32);
LABEL_32:
      sub_1CA5FD6B8();
      sub_1CA5B6EF4(v38, v32);
      break;
  }
  size_t v60 = v64;
  sub_1CA5FD6C8();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v36, v37);
  sub_1CA5FD728();
  sub_1CA5B6EF4(v38, v32);
  uint64_t v61 = sub_1CA5FD768();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v79, v61);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v60, v66);
LABEL_27:
  double result = *(double *)&v86;
  uint64_t v54 = v78;
  *uint64_t v78 = v86;
  unint64_t v55 = v81;
  v54[2] = v80;
  v54[3] = v55;
  unint64_t v56 = v83;
  v54[4] = v82;
  v54[5] = v56;
  return result;
}

void *sub_1CA5F38E0(void *a1, uint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1CA5FD768();
  unint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  unint64_t v58 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v47 - v10);
  uint64_t v12 = sub_1CA5FD7D8();
  uint64_t v56 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1CA5FD7F8();
  uint64_t v59 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v47 - v19;
  id v62 = a3;
  unint64_t v63 = a4;
  sub_1CA5B6FE8((uint64_t)a3, a4);
  uint64_t v21 = v60;
  sub_1CA5FD7E8();
  if (!v21)
  {
    uint64_t v49 = v12;
    uint64_t v50 = v11;
    uint64_t v48 = (uint64_t)a3;
    uint64_t v52 = 0;
    size_t v60 = v14;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v18, v20, v15);
    uint64_t v51 = v20;
    if (qword_1EA6086D8 != -1) {
      swift_once();
    }
    uint64_t v22 = v57;
    uint64_t v23 = __swift_project_value_buffer(v57, (uint64_t)qword_1EA608B00);
    unint64_t v24 = v58 + 16;
    uint64_t v25 = v22;
    a3 = *(void **)(v58 + 16);
    ((void (*)(void, uint64_t, uint64_t))a3)(v50, v23, v25);
    uint64_t v26 = v52;
    sub_1CA5FD7A8();
    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v15);
    }
    else
    {
      uint64_t v50 = (void (*)(uint64_t, uint64_t, uint64_t))a3;
      uint64_t v52 = v23;
      unint64_t v58 = v24;
      uint64_t v27 = sub_1CA5FD7B8();
      unint64_t v29 = v28;
      id v62 = v54;
      unint64_t v63 = v55;
      long long v61 = xmmword_1CA6021D0;
      sub_1CA5BBCEC();
      uint64_t v30 = sub_1CA5FD7C8();
      unint64_t v32 = v31;
      uint64_t v55 = v15;
      uint64_t v33 = v30;
      v50(v53, v52, v57);
      uint64_t v34 = v48;
      sub_1CA5B6FE8(v48, a4);
      sub_1CA5B6FE8(v33, v32);
      sub_1CA5B6FE8(v27, v29);
      sub_1CA5F2998(v33, v32, v34, a4, v27, v29, v53, &v64);
      uint64_t v53 = v33;
      uint64_t v54 = (void *)v32;
      uint64_t v57 = v27;
      unint64_t v58 = v29;
      uint64_t v36 = self;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B18);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1CA602670;
      *(void *)(inited + 32) = 0x6E6F6973726576;
      *(void *)(inited + 40) = 0xE700000000000000;
      *(void *)(inited + 48) = 1162563656;
      *(void *)(inited + 56) = 0xE400000000000000;
      strcpy((char *)(inited + 64), "publicKeyHash");
      *(_WORD *)(inited + 78) = -4864;
      *(void *)(inited + 80) = sub_1CA5FD588();
      *(void *)(inited + 88) = v38;
      *(void *)(inited + 96) = 0xD000000000000012;
      *(void *)(inited + 104) = 0x80000001CA60CC70;
      *(void *)(inited + 112) = sub_1CA5FD588();
      *(void *)(inited + 120) = v39;
      *(void *)(inited + 128) = 1635017060;
      *(void *)(inited + 136) = 0xE400000000000000;
      *(void *)(inited + 144) = sub_1CA5FD588();
      *(void *)(inited + 152) = v40;
      sub_1CA5F13DC(inited);
      uint64_t v41 = (void *)sub_1CA5FD838();
      swift_bridgeObjectRelease();
      id v62 = 0;
      id v42 = [v36 dataWithJSONObject:v41 options:2 error:&v62];

      id v43 = v62;
      uint64_t v44 = v59;
      uint64_t v45 = v49;
      uint64_t v46 = v51;
      if (v42)
      {
        a3 = (void *)sub_1CA5FD598();
        sub_1CA5F3FF0((uint64_t *)&v64);
      }
      else
      {
        a3 = v43;
        sub_1CA5FD4B8();

        swift_willThrow();
        sub_1CA5F3FF0((uint64_t *)&v64);
      }
      sub_1CA5B6EF4(v57, v58);
      sub_1CA5B6EF4(v53, (unint64_t)v54);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v45);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v55);
    }
  }
  return a3;
}

uint64_t *sub_1CA5F3FF0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  sub_1CA5B6EF4(*a1, a1[1]);
  sub_1CA5B6EF4(v2, v3);
  sub_1CA5B6EF4(v4, v5);
  return a1;
}

uint64_t sub_1CA5F4050(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA5F4098(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1CA5F40F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA5F4158(uint64_t a1, unint64_t a2)
{
  int v2 = 1;
  unsigned __int8 v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)a1;
      if ((int)a1 != a1 >> 32) {
        goto LABEL_15;
      }
      unsigned __int8 v3 = 0;
      return v3 | (v2 << 8);
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      if (v4 != v5)
      {
        if (a2 >> 62 == 2)
        {
          if (v4 >= v5) {
            goto LABEL_23;
          }
          uint64_t v6 = sub_1CA5FD408();
          if (!v6) {
            goto LABEL_25;
          }
          uint64_t v7 = v6;
          a1 = sub_1CA5FD428();
          uint64_t v8 = v4 - a1;
          if (!__OFSUB__(v4, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_15:
        if (v4 < (int)a1 || v4 >= a1 >> 32)
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
        }
        uint64_t v9 = sub_1CA5FD408();
        if (v9)
        {
          uint64_t v7 = v9;
          uint64_t v10 = sub_1CA5FD428();
          uint64_t v8 = v4 - v10;
          if (!__OFSUB__(v4, v10))
          {
LABEL_19:
            int v2 = 0;
            unsigned __int8 v3 = *(unsigned char *)(v7 + v8);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x1CA5F42A0);
      }
      unsigned __int8 v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      int v2 = (a2 & 0xFF000000000000) == 0;
      if ((a2 & 0xFF000000000000) != 0) {
        unsigned __int8 v3 = a1;
      }
      else {
        unsigned __int8 v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_1CA5F42B0@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_1CA5FDB38();
  swift_getObjectType();
  uint64_t result = sub_1CA5FDB38();
  if (v2 == result)
  {
    char v4 = sub_1CA5FDB48();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_1CA5FDBF8();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA5F43CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  swift_getDynamicType();
  (*(void (**)(uint64_t *__return_ptr))(a1[4] + 8))(&v10);
  uint64_t v3 = v12;
  uint64_t v4 = v13;
  unsigned __int8 v5 = v14;
  uint64_t v6 = sub_1CA5F8FF0((uint64_t)a1, v10, v11, v12, v13, v14);
  sub_1CA5F9CF8(v3, v4, v5);
  if (v1)
  {
    uint64_t v22 = v15;
    return sub_1CA5F9D1C((uint64_t)&v22);
  }
  else
  {
    uint64_t v21 = v15;
    sub_1CA5F9D1C((uint64_t)&v21);
    v9[0] = sub_1CA5C5194(v6);
    v9[1] = v7;
    __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
    swift_getDynamicType();
    (*(void (**)(void *__return_ptr))(a1[4] + 8))(v16);
    sub_1CA5F658C(a1, (uint64_t)v16, (uint64_t)v9);
    sub_1CA5F9D48(&v17, (uint64_t)v20);
    sub_1CA5F9D60((uint64_t)v20);
    uint64_t v19 = v18;
    sub_1CA5F9D1C((uint64_t)&v19);
    return v9[0];
  }
}

void *sub_1CA5F4564@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1CA5F4570(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1CA5F4578@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1CA5F458C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1CA5F45A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1CA5F45B4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1CA5F45E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1CA5F4610@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1CA5F4634(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1CA5F4648(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1CA5F465C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1CA5F4670@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1CA5F4684(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1CA5F4698(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1CA5F46AC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1CA5F46C0()
{
  return *v0 == 0;
}

uint64_t sub_1CA5F46D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1CA5F46E8(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1CA5F46FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1CA5FB640(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_1CA5F473C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = -64;
  *(void *)(a1 + 40) = MEMORY[0x1E4FBC860];
}

unint64_t sub_1CA5F4764(uint64_t a1, long long *a2)
{
  sub_1CA5F9D48(a2 + 1, (uint64_t)&v104);
  sub_1CA5F9D48(&v104, (uint64_t)&v121);
  if (v122 <= 0x3Fu)
  {
    uint64_t v5 = v121;
    sub_1CA5F9E34((uint64_t)&v104);
    uint64_t v6 = sub_1CA5F7BC4((uint64_t *)a1, 1);
    if (v2)
    {
      sub_1CA5F9D60((uint64_t)&v104);
    }
    else
    {
      uint64_t v97 = a1;
      uint64_t v25 = MEMORY[0x1E4FBC860];
      a1 = *(void *)(v5 + 16);
      if (a1)
      {
        uint64_t v26 = v5 + 48;
        uint64_t v98 = v6;
        while ((*(unsigned char *)(v26 + 8) & 1) == 0)
        {
          if (*(void *)v26 == v6)
          {
            uint64_t v30 = *(void *)(v26 - 8);
            uint64_t v99 = *(void *)(v26 - 16);
            char v100 = *(unsigned char *)(v26 + 9);
            uint64_t v31 = *(void *)(v26 + 16);
            uint64_t v32 = *(void *)(v26 + 24);
            unsigned __int8 v33 = *(unsigned char *)(v26 + 32);
            uint64_t v34 = *(void *)(v26 + 40);
            swift_bridgeObjectRetain();
            sub_1CA5F9DAC(v31, v32, v33);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1CA5DE718(0, *(void *)(v25 + 16) + 1, 1);
            }
            unint64_t v28 = *(void *)(v25 + 16);
            unint64_t v27 = *(void *)(v25 + 24);
            if (v28 >= v27 >> 1) {
              sub_1CA5DE718(v27 > 1, v28 + 1, 1);
            }
            *(void *)(v25 + 16) = v28 + 1;
            uint64_t v29 = v25 + (v28 << 6);
            uint64_t v6 = v98;
            *(void *)(v29 + 32) = v99;
            *(void *)(v29 + 40) = v30;
            *(void *)(v29 + 48) = v98;
            *(unsigned char *)(v29 + 56) = 0;
            *(unsigned char *)(v29 + 57) = v100;
            *(void *)(v29 + 64) = v31;
            *(void *)(v29 + 72) = v32;
            *(unsigned char *)(v29 + 80) = v33;
            *(void *)(v29 + 88) = v34;
          }
          v26 += 64;
          if (!--a1) {
            goto LABEL_27;
          }
        }
LABEL_62:
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v62 + 8) = 0;
        *(void *)(v62 + 16) = 0;
        *(void *)uint64_t v62 = 5;
        *(unsigned char *)(v62 + 24) = 3;
        swift_willThrow();
        sub_1CA5F9D60((uint64_t)&v104);
        swift_release();
      }
      else
      {
LABEL_27:
        sub_1CA5F9D60((uint64_t)&v104);
        if (*(void *)(v25 + 16))
        {
          uint64_t v35 = *(void *)(v25 + 40);
          uint64_t v101 = *(void *)(v25 + 32);
          uint64_t v36 = *(void *)(v25 + 48);
          char v37 = *(unsigned char *)(v25 + 56);
          char v38 = *(unsigned char *)(v25 + 57);
          uint64_t v39 = *(void *)(v25 + 64);
          uint64_t v40 = *(void *)(v25 + 72);
          uint64_t v41 = *(void *)(v25 + 88);
          unsigned __int8 v42 = *(unsigned char *)(v25 + 80);
          swift_bridgeObjectRetain();
          sub_1CA5F9DAC(v39, v40, v42);
          swift_bridgeObjectRetain();
          swift_release();
          uint64_t v105 = v36;
          char v106 = v37;
          char v107 = v38;
          uint64_t v108 = v39;
          uint64_t v109 = v40;
          unsigned __int8 v110 = v42;
          uint64_t v111 = v41;
          uint64_t v43 = swift_allocObject();
          swift_bridgeObjectRetain();
          sub_1CA5F9DAC(v39, v40, v42);
          swift_bridgeObjectRetain();
          sub_1CA5F9CF8(v39, v40, v42);
          swift_bridgeObjectRelease();
          *(void *)(v43 + 16) = v101;
          *(void *)(v43 + 24) = v35;
          uint64_t v44 = sub_1CA5F4764(v97, &v105);
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v39, v40, v42);
          swift_bridgeObjectRelease();
          *(void *)(v43 + 32) = v44;
          return v43 | 0xA000000000000000;
        }
        else
        {
          swift_release();
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)(v63 + 8) = 0;
          *(void *)(v63 + 16) = 0;
          *(void *)uint64_t v63 = 2;
          *(unsigned char *)(v63 + 24) = 3;
          swift_willThrow();
        }
      }
    }
    return a1;
  }
  sub_1CA5F9D48(&v104, (uint64_t)v119);
  if (v120 == 192 && !v119[1] && v119[0] == 3)
  {
    uint64_t v7 = sub_1CA5F8544((uint64_t *)a1, 1);
    if (v2) {
      return a1;
    }
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    if ((*((unsigned char *)a2 + 8) & 1) != 0 || (v12 = v7, uint64_t v13 = *(void *)a2, *(void *)a2 == v7))
    {
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = v10;
      *(void *)(v67 + 24) = v11;
      return v67 | 0x2000000000000000;
    }
    uint64_t v14 = *(void *)a1;
    unint64_t v15 = *(void *)(a1 + 8);
    a1 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        a1 = (int)v14;
        break;
      case 2uLL:
        a1 = *(void *)(v14 + 16);
        break;
      default:
        break;
    }
    sub_1CA5C92E0();
    swift_allocError();
    *(void *)uint64_t v86 = v12;
    *(void *)(v86 + 8) = v13;
    *(void *)(v86 + 16) = a1;
    *(unsigned char *)(v86 + 24) = 0;
    swift_willThrow();
    uint64_t v87 = v10;
    unint64_t v88 = v11;
LABEL_109:
    sub_1CA5B6EF4(v87, v88);
    return a1;
  }
  uint64_t v16 = sub_1CA5F8544((uint64_t *)a1, 0);
  if (v2) {
    return a1;
  }
  uint64_t v19 = v16;
  uint64_t v20 = v17;
  unint64_t v21 = v18;
  uint64_t v102 = v17;
  unint64_t v103 = v18;
  if ((*((unsigned char *)a2 + 8) & 1) == 0)
  {
    uint64_t v22 = *(void *)a2;
    if (*(void *)a2 != v16)
    {
      uint64_t v23 = *(void *)a1;
      uint64_t v24 = 0;
      switch(*(void *)(a1 + 8) >> 62)
      {
        case 1:
          uint64_t v24 = (int)v23;
          break;
        case 2:
          uint64_t v24 = *(void *)(v23 + 16);
          break;
        default:
          break;
      }
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)uint64_t v69 = v19;
      *(void *)(v69 + 8) = v22;
      *(void *)(v69 + 16) = v24;
      *(unsigned char *)(v69 + 24) = 0;
LABEL_107:
      swift_willThrow();
LABEL_108:
      uint64_t v87 = v102;
      unint64_t v88 = v103;
      goto LABEL_109;
    }
  }
  uint64_t v45 = *((void *)a2 + 5);
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    unint64_t v47 = (unint64_t)v18 >> 62;
    int v48 = HIDWORD(v17) - v17;
    BOOL v49 = __OFSUB__(HIDWORD(v17), v17);
    uint64_t v50 = (unsigned __int8 *)(v45 + 72);
    while (1)
    {
      uint64_t v51 = (uint64_t *)*((void *)v50 - 3);
      uint64_t v52 = *(v50 - 16);
      uint64_t v53 = *((void *)v50 - 1);
      uint64_t v54 = *v50;
      if ((*(v50 - 32) & 1) == 0)
      {
        uint64_t v18 = *((void *)v50 - 5);
        uint64_t v55 = BYTE6(v21);
        switch((int)v47)
        {
          case 1:
            uint64_t v55 = v48;
            if (v49) {
              goto LABEL_121;
            }
            goto LABEL_41;
          case 2:
            uint64_t v57 = *(void *)(v20 + 16);
            uint64_t v56 = *(void *)(v20 + 24);
            uint64_t v55 = v56 - v57;
            if (!__OFSUB__(v56, v57)) {
              goto LABEL_41;
            }
            goto LABEL_122;
          case 3:
            if (v18 <= 0) {
              break;
            }
LABEL_104:
            uint64_t v68 = 0;
            goto LABEL_105;
          default:
LABEL_41:
            if (v55 < v18) {
              goto LABEL_68;
            }
            break;
        }
      }
      if ((v52 & 1) == 0)
      {
        uint64_t v52 = BYTE6(v21);
        switch((int)v47)
        {
          case 1:
            uint64_t v52 = v48;
            if (v49) {
              goto LABEL_123;
            }
            goto LABEL_49;
          case 2:
            uint64_t v59 = *(void *)(v20 + 16);
            uint64_t v58 = *(void *)(v20 + 24);
            uint64_t v52 = v58 - v59;
            if (!__OFSUB__(v58, v59)) {
              goto LABEL_49;
            }
            goto LABEL_124;
          case 3:
            if (((unint64_t)v51 & 0x8000000000000000) == 0) {
              break;
            }
            goto LABEL_104;
          default:
LABEL_49:
            if ((uint64_t)v51 < v52) {
              goto LABEL_68;
            }
            break;
        }
      }
      if ((v54 & 1) == 0) {
        break;
      }
LABEL_35:
      v50 += 48;
      if (!--v46) {
        goto LABEL_64;
      }
    }
    uint64_t v54 = 0;
    switch((int)v47)
    {
      case 0:
        uint64_t v54 = BYTE6(v21);
        goto LABEL_58;
      case 1:
        uint64_t v54 = v48;
        if (v49) {
          goto LABEL_125;
        }
        goto LABEL_58;
      case 2:
        uint64_t v61 = *(void *)(v20 + 16);
        uint64_t v60 = *(void *)(v20 + 24);
        uint64_t v54 = v60 - v61;
        if (!__OFSUB__(v60, v61)) {
          goto LABEL_58;
        }
        goto LABEL_126;
      case 3:
LABEL_58:
        if (!v53)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
          JUMPOUT(0x1CA5F5380);
        }
        if (v54 == 0x8000000000000000 && v53 == -1)
        {
          __break(1u);
          goto LABEL_62;
        }
        if (!(v54 % v53)) {
          goto LABEL_35;
        }
LABEL_68:
        uint64_t v68 = 0;
        switch((int)v47)
        {
          case 1:
            uint64_t v68 = v48;
            if (!v49) {
              goto LABEL_105;
            }
            __break(1u);
            break;
          case 2:
            break;
          case 3:
            goto LABEL_105;
          default:
            uint64_t v68 = BYTE6(v21);
            goto LABEL_105;
        }
        uint64_t v90 = *(void *)(v20 + 16);
        uint64_t v89 = *(void *)(v20 + 24);
        uint64_t v68 = v89 - v90;
        if (!__OFSUB__(v89, v90))
        {
LABEL_105:
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)uint64_t v65 = v19;
          *(void *)(v65 + 8) = v68;
          *(void *)(v65 + 16) = 0;
          char v66 = 1;
LABEL_106:
          *(unsigned char *)(v65 + 24) = v66;
          goto LABEL_107;
        }
        __break(1u);
LABEL_98:
        unint64_t v72 = sub_1CA5F5410(v51, v52, v18);
LABEL_99:
        if (v54)
        {
          swift_deallocUninitializedObject();
          goto LABEL_108;
        }
        *(void *)(v20 + 16) = v72;
        a1 = v20 | 0x6000000000000000;
        sub_1CA5B6EF4(v102, v103);
        break;
      default:
        JUMPOUT(0);
    }
  }
  else
  {
LABEL_64:
    sub_1CA5F9D48(&v104, (uint64_t)&v115);
    unsigned __int8 v64 = v116;
    switch(v116 >> 6)
    {
      case 1:
        v116 &= 0x3Fu;
        long long v117 = v115;
        char v118 = v64 & 0x3F;
        sub_1CA5F9D94((uint64_t *)&v117 + 1, (uint64_t)v123);
        sub_1CA5F9D94(v123, (uint64_t)&v125);
        char v70 = v126;
        uint64_t v71 = v125;
        uint64_t v20 = swift_allocObject();
        uint64_t v52 = v117;
        uint64_t v51 = &v102;
        LOBYTE(v18) = v71;
        uint64_t v54 = 0;
        if ((v70 & 1) == 0) {
          goto LABEL_98;
        }
        unint64_t v72 = sub_1CA5F5A84(&v102, v117, v71);
        goto LABEL_99;
      case 2:
        v116 &= 0x3Fu;
        long long v73 = *(_OWORD *)(v115 + 32);
        long long v112 = *(_OWORD *)(v115 + 16);
        long long v113 = v73;
        long long v114 = *(_OWORD *)(v115 + 48);
        sub_1CA5F9D48(&v113, (uint64_t)v124);
        uint64_t v127 = *((void *)&v114 + 1);
        a1 = swift_allocObject();
        sub_1CA5F9E34((uint64_t)v124);
        sub_1CA5F9E68((uint64_t)&v127);
        uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          switch(v21 >> 62)
          {
            case 1uLL:
              LODWORD(v75) = HIDWORD(v20) - v20;
              if (__OFSUB__(HIDWORD(v20), v20)) {
                goto LABEL_127;
              }
              uint64_t v75 = (int)v75;
LABEL_80:
              if (!v75)
              {
LABEL_112:
                *(void *)(a1 + 16) = v74;
                sub_1CA5F9D60((uint64_t)v124);
                sub_1CA5F9D1C((uint64_t)&v127);
                sub_1CA5B6EF4(v20, v21);
                return a1 | 0x8000000000000000;
              }
              uint64_t v79 = sub_1CA5F7BC4(&v102, 1);
              if ((BYTE8(v112) & 1) != 0 || (uint64_t v80 = v79, v81 = v112, (void)v112 == v79))
              {
                uint64_t v82 = sub_1CA5F4764(&v102, &v112);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v74 = sub_1CA5C4C5C(0, v74[2] + 1, 1, v74);
                }
                unint64_t v84 = v74[2];
                unint64_t v83 = v74[3];
                if (v84 >= v83 >> 1) {
                  uint64_t v74 = sub_1CA5C4C5C((void *)(v83 > 1), v84 + 1, 1, v74);
                }
                v74[2] = v84 + 1;
                v74[v84 + 4] = v82;
                uint64_t v20 = v102;
                unint64_t v21 = v103;
                continue;
              }
              swift_bridgeObjectRelease();
              uint64_t v93 = 0;
              switch(v103 >> 62)
              {
                case 1uLL:
                  uint64_t v93 = (int)v102;
                  break;
                case 2uLL:
                  uint64_t v93 = *(void *)(v102 + 16);
                  break;
                default:
                  break;
              }
              sub_1CA5C92E0();
              swift_allocError();
              *(void *)uint64_t v95 = v80;
              *(void *)(v95 + 8) = v81;
              *(void *)(v95 + 16) = v93;
              *(unsigned char *)(v95 + 24) = 0;
              swift_willThrow();
              swift_deallocUninitializedObject();
              sub_1CA5F9D60((uint64_t)v124);
              sub_1CA5F9D1C((uint64_t)&v127);
              break;
            case 2uLL:
              uint64_t v77 = *(void *)(v20 + 16);
              uint64_t v76 = *(void *)(v20 + 24);
              BOOL v78 = __OFSUB__(v76, v77);
              uint64_t v75 = v76 - v77;
              if (!v78) {
                goto LABEL_80;
              }
              goto LABEL_128;
            case 3uLL:
              goto LABEL_112;
            default:
              uint64_t v75 = BYTE6(v21);
              goto LABEL_80;
          }
          goto LABEL_108;
        }
      case 3:
        if (v116 == 192 && v115 == 0)
        {
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = v20;
          *(void *)(v85 + 24) = v21;
          a1 = v85 | 0x2000000000000000;
        }
        else if (v116 == 192 && v115 == 1)
        {
          uint64_t v91 = swift_allocObject();
          *(void *)(v91 + 16) = v19;
          sub_1CA5B6FE8(v20, v21);
          unint64_t v94 = sub_1CA5F87F4(v20, v21);
          sub_1CA5B6EF4(v20, v21);
          *(void *)(v91 + 24) = v94;
          sub_1CA5B6EF4(v20, v21);
          a1 = v91 | 0x4000000000000000;
        }
        else
        {
          if (v116 != 192 || v115 != 2)
          {
LABEL_66:
            sub_1CA5C92E0();
            swift_allocError();
            *(void *)(v65 + 8) = 0;
            *(void *)(v65 + 16) = 0;
            *(void *)uint64_t v65 = 2;
            char v66 = 3;
            goto LABEL_106;
          }
          a1 = swift_allocObject();
          sub_1CA5B6FE8(v20, v21);
          char v96 = sub_1CA5F8AAC(v20, v21);
          sub_1CA5B6EF4(v20, v21);
          *(unsigned char *)(a1 + 16) = v96 & 1;
          sub_1CA5B6EF4(v20, v21);
        }
        break;
      default:
        v116 &= 0x3Fu;
        goto LABEL_66;
    }
  }
  return a1;
}

unint64_t sub_1CA5F5410(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v57 = sub_1CA5F1298(MEMORY[0x1E4FBC860]);
  unint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_45;
  }
  unint64_t v58 = 0;
  uint64_t v55 = a2 + 32;
  unint64_t v61 = v7;
  uint64_t v62 = a2;
  uint64_t v56 = a1;
  while (2)
  {
    if (v58 >= v7) {
      goto LABEL_47;
    }
    uint64_t v8 = v55 + (v58 << 6);
    uint64_t v9 = *(void *)v8;
    char v10 = *(unsigned char *)(v8 + 24);
    uint64_t v68 = *(void *)(v8 + 32);
    uint64_t v69 = *(void *)(v8 + 40);
    unsigned __int8 v66 = *(unsigned char *)(v8 + 48);
    unint64_t v11 = v58 + 1;
    uint64_t v12 = *a1;
    unint64_t v13 = a1[1];
    uint64_t v67 = *(void *)(v8 + 56);
    switch(v13 >> 62)
    {
      case 1uLL:
        BOOL v14 = __OFSUB__(HIDWORD(v12), v12);
        LODWORD(v12) = HIDWORD(v12) - v12;
        if (v14) {
          goto LABEL_48;
        }
        uint64_t v12 = (int)v12;
LABEL_9:
        if (!v12)
        {
LABEL_29:
          if (!*(unsigned char *)(v8 + 25))
          {
LABEL_38:
            swift_bridgeObjectRetain();
            sub_1CA5F9DAC(v68, v69, v66);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1CA5C92E0();
            swift_allocError();
            *(void *)(v44 + 8) = 0;
            *(void *)(v44 + 16) = 0;
            *(void *)uint64_t v44 = 1;
            *(unsigned char *)(v44 + 24) = 3;
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v45 = v68;
            uint64_t v46 = v69;
            unsigned __int8 v47 = v66;
LABEL_44:
            sub_1CA5F9CF8(v45, v46, v47);
            goto LABEL_45;
          }
          if (v11 == v7)
          {
LABEL_35:
            swift_bridgeObjectRetain();
            sub_1CA5F9DAC(v68, v69, v66);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1CA5F9CF8(v68, v69, v66);
            goto LABEL_45;
          }
          uint64_t v43 = (unsigned char *)(a2 + (v58 << 6) + 121);
          while (v11 < v7)
          {
            if (*v43 != 1) {
              goto LABEL_38;
            }
            ++v11;
            v43 += 64;
            if (v7 == v11) {
              goto LABEL_35;
            }
          }
LABEL_50:
          __break(1u);
          JUMPOUT(0x1CA5F5A64);
        }
        LODWORD(v18) = *(unsigned __int8 *)(v8 + 25);
        uint64_t v19 = *(void *)(v8 + 16);
        uint64_t v20 = *(void *)(v8 + 8);
        swift_bridgeObjectRetain();
        sub_1CA5F9DAC(v68, v69, v66);
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1CA5F7BC4(a1, 1);
        if (v4)
        {
          swift_bridgeObjectRelease();
LABEL_37:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v68, v69, v66);
          goto LABEL_45;
        }
        uint64_t v22 = v21;
        uint64_t v23 = v19;
        if (v19 == v21) {
          char v24 = 1;
        }
        else {
          char v24 = v10;
        }
        if (v24)
        {
          char v25 = v10;
          uint64_t v60 = v9;
          uint64_t v27 = v67;
          uint64_t v26 = v68;
          unsigned __int8 v28 = v66;
          uint64_t v29 = v69;
          ++v58;
          goto LABEL_25;
        }
        if (!v18)
        {
          unsigned __int8 v39 = v66;
          uint64_t v26 = v68;
          uint64_t v38 = v69;
LABEL_40:
          uint64_t v48 = v22;
          uint64_t v49 = v23;
          swift_bridgeObjectRelease();
          uint64_t v50 = *v56;
          uint64_t v51 = 0;
          switch((unint64_t)v56[1] >> 62)
          {
            case 1uLL:
              uint64_t v51 = (int)v50;
              break;
            case 2uLL:
              uint64_t v51 = *(void *)(v50 + 16);
              break;
            default:
              break;
          }
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)uint64_t v52 = v48;
          *(void *)(v52 + 8) = v49;
          *(void *)(v52 + 16) = v51;
          *(unsigned char *)(v52 + 24) = 0;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = v26;
          uint64_t v46 = v38;
          unsigned __int8 v47 = v39;
          goto LABEL_44;
        }
        unint64_t v30 = v58 + 1;
        uint64_t v31 = v58 << 6;
        uint64_t v59 = v21;
        while (1)
        {
          if (v61 == v30)
          {
            if ((a3 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              sub_1CA5C92E0();
              swift_allocError();
              *(void *)(v42 + 8) = 0;
              *(void *)(v42 + 16) = 0;
              *(void *)uint64_t v42 = 1;
              *(unsigned char *)(v42 + 24) = 3;
              swift_willThrow();
            }
            goto LABEL_37;
          }
          if (v30 >= v61)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          unint64_t v18 = v30;
          uint64_t v60 = *(void *)(v62 + v31 + 96);
          uint64_t v65 = *(void *)(v62 + v31 + 112);
          int v63 = *(unsigned __int8 *)(v62 + v31 + 121);
          char v64 = *(unsigned char *)(v62 + v31 + 120);
          uint64_t v32 = *(void *)(v62 + v31 + 128);
          uint64_t v33 = *(void *)(v62 + v31 + 136);
          unsigned __int8 v34 = *(unsigned char *)(v62 + v31 + 144);
          uint64_t v35 = *(void *)(v62 + v31 + 152);
          uint64_t v36 = *(void *)(v62 + v31 + 104);
          swift_bridgeObjectRetain();
          uint64_t v26 = v32;
          uint64_t v37 = v32;
          uint64_t v38 = v33;
          sub_1CA5F9DAC(v37, v33, v34);
          uint64_t v27 = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v68, v69, v66);
          swift_bridgeObjectRelease();
          char v25 = v64;
          uint64_t v22 = v59;
          uint64_t v23 = v65;
          if ((v64 & 1) != 0 || v65 == v59) {
            break;
          }
          v31 += 64;
          unint64_t v30 = v18 + 1;
          uint64_t v68 = v26;
          uint64_t v69 = v38;
          unsigned __int8 v39 = v34;
          unsigned __int8 v66 = v34;
          if (!v63) {
            goto LABEL_40;
          }
        }
        unint64_t v58 = v18 + 1;
        unsigned __int8 v28 = v34;
        uint64_t v29 = v38;
        uint64_t v20 = v36;
        LOBYTE(v18) = v63;
LABEL_25:
        uint64_t v70 = v23;
        char v71 = v25;
        char v72 = v18;
        uint64_t v73 = v26;
        uint64_t v74 = v29;
        unsigned __int8 v75 = v28;
        uint64_t v76 = v27;
        swift_bridgeObjectRetain();
        sub_1CA5F9DAC(v26, v29, v28);
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1CA5F4764(v56, &v70);
        sub_1CA5F9CF8(v26, v29, v28);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v77 = v57;
        sub_1CA5E2DD8(v40, v60, v20, isUniquelyReferenced_nonNull_native);
        unint64_t v57 = v77;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1CA5F9CF8(v26, v29, v28);
        swift_bridgeObjectRelease();
        unint64_t v7 = v61;
        a2 = v62;
        uint64_t v4 = 0;
        a1 = v56;
        if (v58 != v61) {
          continue;
        }
LABEL_45:
        swift_bridgeObjectRelease();
        return v57;
      case 2uLL:
        uint64_t v17 = v12 + 16;
        uint64_t v15 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v17 + 8);
        BOOL v14 = __OFSUB__(v16, v15);
        uint64_t v12 = v16 - v15;
        if (!v14) {
          goto LABEL_9;
        }
        goto LABEL_49;
      case 3uLL:
        goto LABEL_29;
      default:
        uint64_t v12 = BYTE6(v13);
        goto LABEL_9;
    }
  }
}

uint64_t sub_1CA5F5A84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v94 = a3;
  uint64_t v95 = a1;
  uint64_t v7 = a2;
  unint64_t v8 = *(void *)(a2 + 16);
  unint64_t v104 = v8;
  uint64_t v105 = a2;
  if (v8)
  {
    uint64_t v92 = v3;
    uint64_t v9 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v102 = 0;
    unint64_t v10 = 0;
    uint64_t v93 = (void *)(v7 + 32);
    while (1)
    {
      unint64_t v11 = &v9[8 * v10];
      uint64_t v12 = v11[1];
      unint64_t v103 = (unint64_t *)v11[2];
      uint64_t v5 = v11[4];
      uint64_t v4 = v11[5];
      LODWORD(v13) = *((unsigned __int8 *)v11 + 48);
      uint64_t v14 = v11[7];
      char v15 = *((unsigned char *)v11 + 24);
      swift_bridgeObjectRetain();
      sub_1CA5F9DAC(v5, v4, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA5F9DAC(v5, v4, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1CA5F9CF8(v5, v4, v13);
      uint64_t v101 = v14;
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_70;
      }
      unint64_t v16 = v10 + 1;
      if (v16 == v8) {
        break;
      }
      uint64_t v97 = v12;
      uint64_t v98 = v5;
      uint64_t v99 = v4;
      LODWORD(v100) = v13;
      swift_bridgeObjectRetain();
      unint64_t v17 = v16;
      uint64_t v18 = v102;
      unint64_t v96 = v16;
      do
      {
        if (v17 >= v8)
        {
          __break(1u);
LABEL_79:
          swift_bridgeObjectRelease_n();
          sub_1CA5F9CF8((uint64_t)v103, v100, v101);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v19 = v7 + v18;
        uint64_t v20 = *(unint64_t **)(v7 + v18 + 112);
        uint64_t v22 = *(void *)(v19 + 128);
        uint64_t v21 = *(void *)(v19 + 136);
        unsigned __int8 v23 = *(unsigned char *)(v19 + 144);
        char v24 = *(unsigned char *)(v19 + 120);
        swift_bridgeObjectRetain();
        sub_1CA5F9DAC(v22, v21, v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1CA5F9DAC(v22, v21, v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1CA5F9CF8(v22, v21, v23);
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0 || v103 == v20)
        {
          swift_bridgeObjectRelease();
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)(v25 + 8) = 0;
          *(void *)(v25 + 16) = 0;
          *(void *)uint64_t v25 = 2;
          *(unsigned char *)(v25 + 24) = 3;
          swift_willThrow();
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v22, v21, v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v98, v99, v100);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        ++v17;
        swift_bridgeObjectRelease();
        sub_1CA5F9CF8(v22, v21, v23);
        swift_bridgeObjectRelease();
        v18 += 64;
        unint64_t v8 = v104;
        uint64_t v7 = v105;
      }
      while (v104 != v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA5F9CF8(v98, v99, v100);
      swift_bridgeObjectRelease();
      v102 += 64;
      uint64_t v9 = v93;
      unint64_t v10 = v96;
    }
    swift_bridgeObjectRelease();
    sub_1CA5F9CF8(v5, v4, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v92;
    uint64_t v26 = v95;
    if (v8 > 0x40)
    {
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)(v88 + 8) = 0;
      *(void *)(v88 + 16) = 0;
      *(void *)uint64_t v88 = 2;
      char v89 = 3;
LABEL_75:
      *(unsigned char *)(v88 + 24) = v89;
      return swift_willThrow();
    }
  }
  else
  {
    uint64_t v26 = a1;
  }
  uint64_t v93 = (void *)sub_1CA5F1298(MEMORY[0x1E4FBC860]);
  unint64_t v91 = 0;
LABEL_14:
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  switch(v28 >> 62)
  {
    case 1uLL:
      BOOL v29 = __OFSUB__(HIDWORD(v27), v27);
      LODWORD(v27) = HIDWORD(v27) - v27;
      if (v29)
      {
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        sub_1CA5FDCE8();
        __break(1u);
        JUMPOUT(0x1CA5F6540);
      }
      uint64_t v27 = (int)v27;
LABEL_19:
      if (!v27)
      {
LABEL_59:
        if (v8)
        {
          swift_bridgeObjectRetain();
          unint64_t v77 = 0;
          BOOL v78 = (unsigned __int8 *)(v7 + 57);
          do
          {
            uint64_t v79 = *(void *)(v78 + 7);
            uint64_t v80 = *(void *)(v78 + 15);
            unsigned __int8 v81 = v78[23];
            int v82 = *v78;
            swift_bridgeObjectRetain();
            sub_1CA5F9DAC(v79, v80, v81);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1CA5F9DAC(v79, v80, v81);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1CA5F9CF8(v79, v80, v81);
            swift_bridgeObjectRelease();
            if (v82 != 1 && (v77 > 0x3F || ((v91 >> v77) & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1CA5C92E0();
              swift_allocError();
              *(void *)(v83 + 8) = 0;
              *(void *)(v83 + 16) = 0;
              *(void *)uint64_t v83 = 3;
              *(unsigned char *)(v83 + 24) = 3;
              swift_willThrow();
              swift_bridgeObjectRelease();
              sub_1CA5F9CF8(v79, v80, v81);
              return swift_bridgeObjectRelease();
            }
            ++v77;
            swift_bridgeObjectRelease();
            sub_1CA5F9CF8(v79, v80, v81);
            swift_bridgeObjectRelease();
            v78 += 64;
          }
          while (v104 != v77);
          swift_bridgeObjectRelease();
        }
        return (uint64_t)v93;
      }
      uint64_t v33 = sub_1CA5F7BC4(v26, 1);
      if (v6) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v34 = v33;
      uint64_t v35 = &v91;
      swift_bridgeObjectRetain();
      unint64_t v13 = 0;
      uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
      if (v13 <= v8) {
        unint64_t v37 = v8;
      }
      else {
        unint64_t v37 = v13;
      }
      unint64_t v38 = v13 << 6;
      break;
    case 2uLL:
      uint64_t v32 = v27 + 16;
      uint64_t v30 = *(void *)(v27 + 16);
      uint64_t v31 = *(void *)(v32 + 8);
      BOOL v29 = __OFSUB__(v31, v30);
      uint64_t v27 = v31 - v30;
      if (!v29) {
        goto LABEL_19;
      }
      goto LABEL_82;
    case 3uLL:
      goto LABEL_59;
    default:
      uint64_t v27 = BYTE6(v28);
      goto LABEL_19;
  }
  while (1)
  {
    if (v8 == v13)
    {
      swift_bridgeObjectRelease();
      if (v36[2] == 1)
      {
        uint64_t v92 = 0;
        unint64_t v53 = v36[4];
        uint64_t v102 = v36[5];
        uint64_t v54 = v36[7];
        char v55 = *((unsigned char *)v36 + 64);
        char v56 = *((unsigned char *)v36 + 65);
        uint64_t v57 = v36[9];
        uint64_t v58 = v36[10];
        int v59 = *((unsigned __int8 *)v36 + 88);
        uint64_t v60 = v36[12];
        uint64_t v5 = v36[6];
        swift_bridgeObjectRetain();
        unint64_t v103 = (unint64_t *)v57;
        sub_1CA5F9DAC(v57, v58, v59);
        swift_bridgeObjectRetain();
        swift_release();
        if (v53 - 65 < 0xFFFFFFFFFFFFFF7FLL) {
          goto LABEL_39;
        }
        if ((v53 & 0x8000000000000000) != 0)
        {
          if (v53 <= 0xFFFFFFFFFFFFFFC0)
          {
LABEL_39:
            unint64_t v61 = 0;
            uint64_t v62 = v95;
          }
          else
          {
            unint64_t v61 = 1uLL >> -(char)v53;
            uint64_t v62 = v95;
            if ((v61 & v91) != 0)
            {
LABEL_80:
              swift_bridgeObjectRelease();
              sub_1CA5C92E0();
              swift_allocError();
              *(void *)(v90 + 8) = 0;
              *(void *)(v90 + 16) = 0;
              *(void *)uint64_t v90 = 6;
              *(unsigned char *)(v90 + 24) = 3;
              swift_willThrow();
              swift_bridgeObjectRelease();
              sub_1CA5F9CF8((uint64_t)v103, v58, v59);
              return swift_bridgeObjectRelease();
            }
          }
        }
        else
        {
          uint64_t v62 = v95;
          if (v53 >= 0x40)
          {
            unint64_t v61 = 0;
          }
          else
          {
            unint64_t v61 = 1 << v53;
            if (((1 << v53) & v91) != 0) {
              goto LABEL_80;
            }
          }
        }
        uint64_t v99 = v61;
        uint64_t v106 = v54;
        char v107 = v55;
        char v108 = v56;
        uint64_t v63 = (uint64_t)v103;
        uint64_t v109 = (uint64_t)v103;
        uint64_t v110 = v58;
        char v111 = v59;
        uint64_t v112 = v60;
        swift_bridgeObjectRetain();
        sub_1CA5F9DAC(v63, v58, v59);
        swift_bridgeObjectRetain();
        uint64_t v100 = v58;
        LODWORD(v101) = v59;
        sub_1CA5F9CF8(v63, v58, v59);
        swift_bridgeObjectRelease();
        uint64_t v64 = v92;
        uint64_t v65 = sub_1CA5F4764(v62, &v106);
        unsigned __int8 v66 = v93;
        if (v64) {
          goto LABEL_79;
        }
        uint64_t v67 = v65;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v113 = v66;
        unint64_t v70 = sub_1CA5F1A20(v102, v5);
        uint64_t v71 = v66[2];
        BOOL v72 = (v69 & 1) == 0;
        uint64_t v73 = v71 + v72;
        if (__OFADD__(v71, v72)) {
          goto LABEL_83;
        }
        uint64_t v4 = v69;
        if (v66[3] >= v73)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1CA5E36B4();
          }
        }
        else
        {
          sub_1CA5E266C(v73, isUniquelyReferenced_nonNull_native);
          uint64_t v74 = sub_1CA5F1A20(v102, v5);
          if ((v4 & 1) != (v75 & 1)) {
            goto LABEL_84;
          }
          unint64_t v70 = v74;
        }
        uint64_t v93 = v113;
        if (v4)
        {
          uint64_t v76 = v113[7];
          swift_release();
          *(void *)(v76 + 8 * v70) = v67;
        }
        else
        {
          sub_1CA5E3120(v70, v102, v5, v67, v113);
          swift_bridgeObjectRetain();
        }
        uint64_t v7 = v105;
        uint64_t v26 = v95;
        v91 |= v99;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1CA5F9CF8((uint64_t)v103, v100, v101);
        swift_bridgeObjectRelease();
        uint64_t v6 = 0;
        unint64_t v8 = v104;
        goto LABEL_14;
      }
      swift_release();
      if ((v94 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = *v95;
        uint64_t v86 = 0;
        switch((unint64_t)v95[1] >> 62)
        {
          case 1uLL:
            uint64_t v86 = (int)v85;
            break;
          case 2uLL:
            uint64_t v86 = *(void *)(v85 + 16);
            break;
          default:
            break;
        }
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)uint64_t v88 = v34;
        *(void *)(v88 + 8) = v86;
        *(void *)(v88 + 16) = 0;
        char v89 = 2;
        goto LABEL_75;
      }
      uint64_t v26 = v95;
      sub_1CA5F8544(v95, 0);
      sub_1CA5B6EF4(v51, v52);
      goto LABEL_14;
    }
    if (v37 == v13) {
      break;
    }
    uint64_t v4 = *(void *)(v7 + v38 + 48);
    uint64_t v5 = *(unsigned __int8 *)(v7 + v38 + 56);
    ++v13;
    v38 += 64;
    if ((v5 & 1) != 0 || v4 == v34)
    {
      unint64_t v103 = v35;
      uint64_t v39 = v7 + v38;
      uint64_t v40 = *(void *)(v39 - 24);
      unint64_t v96 = *(void *)(v39 - 32);
      uint64_t v97 = v40;
      LODWORD(v98) = *(unsigned __int8 *)(v39 - 7);
      uint64_t v41 = *(void *)v39;
      uint64_t v42 = *(void *)(v39 + 8);
      int v43 = *(unsigned __int8 *)(v39 + 16);
      uint64_t v44 = *(void *)(v39 + 24);
      swift_bridgeObjectRetain();
      uint64_t v101 = v42;
      uint64_t v102 = v41;
      LODWORD(v100) = v43;
      sub_1CA5F9DAC(v41, v42, v43);
      uint64_t v99 = v44;
      swift_bridgeObjectRetain();
      char v45 = swift_isUniquelyReferenced_nonNull_native();
      long long v113 = v36;
      if ((v45 & 1) == 0)
      {
        sub_1CA5DE6F8(0, v36[2] + 1, 1);
        uint64_t v36 = v113;
      }
      unint64_t v47 = v36[2];
      unint64_t v46 = v36[3];
      if (v47 >= v46 >> 1)
      {
        sub_1CA5DE6F8(v46 > 1, v47 + 1, 1);
        uint64_t v36 = v113;
      }
      _OWORD v36[2] = v47 + 1;
      uint64_t v48 = &v36[9 * v47];
      unint64_t v49 = v96;
      v48[4] = v13 - 1;
      v48[5] = v49;
      v48[6] = v97;
      v48[7] = v4;
      *((unsigned char *)v48 + 64) = v5;
      *((unsigned char *)v48 + 65) = v98;
      uint64_t v50 = v101;
      v48[9] = v102;
      v48[10] = v50;
      *((unsigned char *)v48 + 88) = v100;
      v48[12] = v99;
      unint64_t v8 = v104;
      uint64_t v7 = v105;
      uint64_t v35 = v103;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_70:
  swift_bridgeObjectRelease();
  sub_1CA5C92E0();
  swift_allocError();
  *(void *)(v87 + 8) = 0;
  *(void *)(v87 + 16) = 0;
  *(void *)uint64_t v87 = 2;
  *(unsigned char *)(v87 + 24) = 3;
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1CA5F9CF8(v5, v4, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA5F6560(uint64_t a1, uint64_t a2)
{
  return sub_1CA5F8FF0(a1, *(void *)a2, *(unsigned __int8 *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), *(unsigned __int8 *)(a2 + 32));
}

uint64_t sub_1CA5F658C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1CA5FDDA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v122 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA5F9D94((uint64_t *)a2, (uint64_t)v131);
  sub_1CA5F9D94(v131, (uint64_t)&v144);
  char v11 = v145;
  if (v145)
  {
    sub_1CA5F9D48((long long *)(a2 + 16), (uint64_t)&v130);
    sub_1CA5F9D48(&v130, (uint64_t)v146);
    if (v146[16] >= 0x40u)
    {
      sub_1CA5C92E0();
      swift_allocError();
      uint64_t v25 = 2;
      goto LABEL_90;
    }
    uint64_t v108 = v8;
    uint64_t v109 = a3;
    uint64_t v107 = v9;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v108 = v8;
    uint64_t v109 = a3;
    uint64_t v107 = v9;
    uint64_t v12 = v144;
  }
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  LODWORD(v15) = *(unsigned __int8 *)(a2 + 32);
  switch(v15 >> 6)
  {
    case 1u:
      uint64_t v106 = v12;
      uint64_t v104 = v13;
      int v105 = v15;
      if (v11) {
        goto LABEL_119;
      }
      uint64_t v27 = a1[3];
      unint64_t v103 = a1;
      unint64_t v28 = __swift_project_boxed_opaque_existential_1Tm(a1, v27);
      v124[1] = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v123);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(boxed_opaque_existential_1, v28, v27);
      swift_bridgeObjectRetain();
      sub_1CA5FDD88();
      uint64_t v30 = *(void *)(v14 + 16);
      if (!v30)
      {
        uint64_t v80 = 0;
        LOBYTE(v15) = v105;
        uint64_t v13 = v104;
LABEL_78:
        (*(void (**)(char *, uint64_t))(v107 + 8))(v122, v108);
        uint64_t v86 = v109;
        sub_1CA5F9F18(v106);
        sub_1CA5F7A14(v80);
        sub_1CA5FA284(v103, v14, v13, v15 & 1, v86);
        return sub_1CA5F9CF8(v14, v13, v15);
      }
      char v111 = v124;
      swift_bridgeObjectRetain();
      uint64_t v113 = 0;
      uint64_t v31 = &qword_1EA608748;
      uint64_t v32 = v14 + 48;
      uint64_t v110 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v112 = v14;
      while (2)
      {
        uint64_t v34 = v31;
        uint64_t v35 = *(void *)(v32 - 8);
        uint64_t v116 = *(void *)v32;
        uint64_t v117 = v30;
        int v36 = *(unsigned __int8 *)(v32 + 8);
        int v114 = *(unsigned __int8 *)(v32 + 9);
        int v115 = v36;
        uint64_t v38 = *(void *)(v32 + 16);
        uint64_t v37 = *(void *)(v32 + 24);
        int v39 = *(unsigned __int8 *)(v32 + 32);
        uint64_t v40 = *(void *)(v32 + 40);
        uint64_t v41 = v4;
        uint64_t v42 = *(void *)(v32 - 16);
        swift_bridgeObjectRetain();
        uint64_t v119 = v38;
        uint64_t v120 = v37;
        int v121 = v39;
        sub_1CA5F9DAC(v38, v37, v39);
        uint64_t v118 = v40;
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1CA5FDD98();
        MEMORY[0x1F4188790](v43);
        *(&v102 - 2) = v42;
        *(&v102 - 1) = v35;
        uint64_t v44 = sub_1CA5FDBD8();
        uint64_t v4 = v41;
        swift_bridgeObjectRelease();
        swift_release();
        if (*(void *)(v44 + 16) != 1)
        {
          uint64_t v82 = v112;
          uint64_t v83 = v104;
          unsigned __int8 v84 = v105;
          sub_1CA5F9CF8(v112, v104, v105);
          swift_bridgeObjectRelease();
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)(v85 + 8) = 0;
          *(void *)(v85 + 16) = 0;
          *(void *)uint64_t v85 = 2;
          *(unsigned char *)(v85 + 24) = 3;
          swift_willThrow();
          sub_1CA5F9CF8(v119, v120, v121);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v107 + 8))(v122, v108);
          return sub_1CA5F9CF8(v82, v83, v84);
        }
        sub_1CA5F9EB0(v44 + 32, (uint64_t)v123);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v34;
        __swift_instantiateConcreteTypeFromMangledName(v34);
        swift_dynamicCast();
        uint64_t v14 = v112;
        if (*((void *)&v126 + 1))
        {
          sub_1CA5B6F4C(&v125, &v128);
          sub_1CA5B83E4((uint64_t)&v128, (uint64_t)&v125);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          swift_dynamicCast();
          uint64_t v46 = v119;
          uint64_t v45 = v120;
          unsigned __int8 v47 = v121;
          uint64_t v48 = sub_1CA5F8FF0((uint64_t)v123, v116, v115, v119, v120, v121);
          if (v4)
          {
            sub_1CA5F9CF8(v46, v45, v47);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v128);
            uint64_t v89 = v104;
            unsigned __int8 v90 = v105;
            sub_1CA5F9CF8(v14, v104, v105);
            (*(void (**)(char *, uint64_t))(v107 + 8))(v122, v108);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v123);
            return sub_1CA5F9CF8(v14, v89, v90);
          }
          BOOL v49 = __OFADD__(v113, v48);
          v113 += v48;
          if (v49)
          {
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
            JUMPOUT(0x1CA5F73CCLL);
          }
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v128);
          sub_1CA5F9CF8(v46, v45, v47);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v123);
LABEL_17:
          v32 += 64;
          uint64_t v30 = v117 - 1;
          if (v117 == 1)
          {
            uint64_t v13 = v104;
            LOBYTE(v15) = v105;
            sub_1CA5F9CF8(v14, v104, v105);
            uint64_t v80 = v113;
            goto LABEL_78;
          }
          continue;
        }
        break;
      }
      sub_1CA5BA6F0((uint64_t)&v125, v34);
      unsigned __int8 v33 = v121;
      if (v114)
      {
        sub_1CA5F9CF8(v119, v120, v121);
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v89 = v104;
      unsigned __int8 v90 = v105;
      sub_1CA5F9CF8(v14, v104, v105);
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)(v95 + 8) = 0;
      *(void *)(v95 + 16) = 0;
      *(void *)uint64_t v95 = 3;
      *(unsigned char *)(v95 + 24) = 3;
      swift_willThrow();
      sub_1CA5F9CF8(v119, v120, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v122, v108);
      return sub_1CA5F9CF8(v14, v89, v90);
    case 2u:
      long long v26 = *(_OWORD *)(v14 + 32);
      long long v132 = *(_OWORD *)(v14 + 16);
      long long v133 = v26;
      long long v134 = *(_OWORD *)(v14 + 48);
      sub_1CA5F9D48(&v133, (uint64_t)v147);
      uint64_t v148 = *((void *)&v134 + 1);
      sub_1CA5F9DD0((uint64_t)a1, (uint64_t)&v128);
      sub_1CA5F9DAC(v14, v13, v15);
      sub_1CA5F9E34((uint64_t)v147);
      sub_1CA5F9E68((uint64_t)&v148);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B58);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_59;
      }
      sub_1CA5BA6D8(&v125, (uint64_t)v123);
      if (v11) {
        goto LABEL_120;
      }
      sub_1CA5F742C(v123, v12, (uint64_t)&v132, v109);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v123);
      goto LABEL_60;
    case 3u:
      if (v13 | v14 || v15 != 192)
      {
        if (v14 == 1 && !v13 && v15 == 192)
        {
          sub_1CA5F9DD0((uint64_t)a1, (uint64_t)v123);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          if (swift_dynamicCast())
          {
            if (v11) {
              goto LABEL_122;
            }
            return sub_1CA5FA06C(v12, v128);
          }
        }
        else if (v14 == 2 && !v13 && v15 == 192)
        {
          sub_1CA5F9DD0((uint64_t)a1, (uint64_t)v123);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          if (swift_dynamicCast())
          {
            if (v11) {
              goto LABEL_123;
            }
            int v81 = v128;
            sub_1CA5F9F18(v12);
            sub_1CA5C47F0(1);
            return sub_1CA5C47F0(v81 << 31 >> 31);
          }
        }
        else
        {
          sub_1CA5F9DD0((uint64_t)a1, (uint64_t)v123);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          if (swift_dynamicCast())
          {
            unint64_t v15 = *((void *)&v128 + 1);
            uint64_t v91 = v128;
            sub_1CA5FD5C8();
            uint64_t v92 = v91;
            return sub_1CA5B6EF4(v92, v15);
          }
        }
      }
      else
      {
        uint64_t v106 = v12;
        sub_1CA5F9DD0((uint64_t)a1, (uint64_t)v123);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
        if (swift_dynamicCast())
        {
          unsigned __int8 v122 = v3;
          unint64_t v15 = *((void *)&v128 + 1);
          uint64_t v13 = v128;
          uint64_t v50 = *(void *)(a2 + 40);
          uint64_t v51 = *(void *)(v50 + 16);
          uint64_t v52 = *((void *)&v128 + 1) >> 62;
          if (v51)
          {
            int v53 = DWORD1(v128) - v128;
            BOOL v54 = __OFSUB__(DWORD1(v128), v128);
            uint64_t v14 = v53;
            char v55 = (unsigned char *)(v50 + 72);
            uint64_t v56 = v52;
            while (1)
            {
              uint64_t v57 = *((void *)v55 - 3);
              uint64_t v58 = *((void *)v55 - 1);
              if ((*(v55 - 32) & 1) == 0)
              {
                uint64_t v59 = *((void *)v55 - 5);
                uint64_t v60 = BYTE14(v128);
                switch((int)v52)
                {
                  case 1:
                    uint64_t v60 = v53;
                    if (v54) {
                      goto LABEL_110;
                    }
                    goto LABEL_38;
                  case 2:
                    uint64_t v62 = *(void *)(v128 + 16);
                    uint64_t v61 = *(void *)(v128 + 24);
                    uint64_t v60 = v61 - v62;
                    if (!__OFSUB__(v61, v62)) {
                      goto LABEL_38;
                    }
                    goto LABEL_111;
                  case 3:
                    if (v59 <= 0) {
                      break;
                    }
                    goto LABEL_91;
                  default:
LABEL_38:
                    if (v60 < v59) {
                      goto LABEL_91;
                    }
                    break;
                }
              }
              if ((*(v55 - 16) & 1) == 0)
              {
                uint64_t v63 = BYTE14(v128);
                switch((int)v52)
                {
                  case 1:
                    uint64_t v63 = v53;
                    if (v54) {
                      goto LABEL_112;
                    }
                    goto LABEL_46;
                  case 2:
                    uint64_t v65 = *(void *)(v128 + 16);
                    uint64_t v64 = *(void *)(v128 + 24);
                    BOOL v49 = __OFSUB__(v64, v65);
                    uint64_t v63 = v64 - v65;
                    if (!v49) {
                      goto LABEL_46;
                    }
                    goto LABEL_113;
                  case 3:
                    if ((v57 & 0x8000000000000000) == 0) {
                      break;
                    }
                    goto LABEL_91;
                  default:
LABEL_46:
                    if (v57 < v63) {
                      goto LABEL_91;
                    }
                    break;
                }
              }
              if ((*v55 & 1) == 0) {
                break;
              }
LABEL_32:
              v55 += 48;
              if (!--v51) {
                goto LABEL_80;
              }
            }
            uint64_t v66 = 0;
            switch((int)v52)
            {
              case 0:
                uint64_t v66 = BYTE14(v128);
                goto LABEL_55;
              case 1:
                uint64_t v66 = v53;
                if (v54) {
                  goto LABEL_114;
                }
                goto LABEL_55;
              case 2:
                uint64_t v68 = *(void *)(v128 + 16);
                uint64_t v67 = *(void *)(v128 + 24);
                BOOL v49 = __OFSUB__(v67, v68);
                uint64_t v66 = v67 - v68;
                if (!v49) {
                  goto LABEL_55;
                }
                goto LABEL_115;
              case 3:
LABEL_55:
                if (!v58) {
                  goto LABEL_109;
                }
                if (v66 == 0x8000000000000000 && v58 == -1)
                {
                  __break(1u);
LABEL_59:
                  uint64_t v127 = 0;
                  long long v125 = 0u;
                  long long v126 = 0u;
                  sub_1CA5BA6F0((uint64_t)&v125, &qword_1EA608B60);
                  sub_1CA5C92E0();
                  swift_allocError();
                  *(void *)(v69 + 8) = 0;
                  *(void *)(v69 + 16) = 0;
                  *(void *)uint64_t v69 = 2;
                  *(unsigned char *)(v69 + 24) = 3;
                  swift_willThrow();
LABEL_60:
                  sub_1CA5F9D60((uint64_t)v147);
                  sub_1CA5F9D1C((uint64_t)&v148);
                  return sub_1CA5F9CF8(v14, v13, v15);
                }
                if (!(v66 % v58)) {
                  goto LABEL_32;
                }
LABEL_91:
                sub_1CA5F9D94(v131, (uint64_t)&v142);
                if (v143)
                {
                  sub_1CA5C92E0();
                  swift_allocError();
                  *(void *)(v93 + 8) = 0;
                  *(void *)(v93 + 16) = 0;
                  *(void *)uint64_t v93 = 5;
                  char v94 = 3;
                }
                else
                {
                  uint64_t v96 = v142;
                  uint64_t v97 = 0;
                  switch(v56)
                  {
                    case 0:
                      uint64_t v97 = BYTE6(v15);
                      goto LABEL_104;
                    case 1:
                      uint64_t v97 = v14;
                      if (!v54) {
                        goto LABEL_104;
                      }
                      __break(1u);
LABEL_103:
                      uint64_t v101 = *(void *)(v13 + 16);
                      uint64_t v100 = *(void *)(v13 + 24);
                      uint64_t v97 = v100 - v101;
                      if (__OFSUB__(v100, v101)) {
                        goto LABEL_118;
                      }
LABEL_104:
                      sub_1CA5C92E0();
                      swift_allocError();
                      *(void *)uint64_t v93 = v96;
                      *(void *)(v93 + 8) = v97;
                      *(void *)(v93 + 16) = 0;
                      char v94 = 1;
                      break;
                    case 2:
                      goto LABEL_103;
                    case 3:
                      goto LABEL_104;
                    default:
                      goto LABEL_124;
                  }
                }
                *(unsigned char *)(v93 + 24) = v94;
                swift_willThrow();
                break;
              default:
LABEL_124:
                JUMPOUT(0);
            }
          }
          else
          {
LABEL_80:
            if (v11) {
              goto LABEL_121;
            }
            sub_1CA5F9F18(v106);
            uint64_t v87 = 0;
            switch(v52)
            {
              case 1:
                if (__OFSUB__(HIDWORD(v13), v13)) {
                  goto LABEL_116;
                }
                uint64_t v87 = HIDWORD(v13) - (int)v13;
LABEL_100:
                sub_1CA5F7A14(v87);
                sub_1CA5FD5C8();
                break;
              case 2:
                uint64_t v99 = *(void *)(v13 + 16);
                uint64_t v98 = *(void *)(v13 + 24);
                uint64_t v87 = v98 - v99;
                if (!__OFSUB__(v98, v99)) {
                  goto LABEL_100;
                }
                goto LABEL_117;
              case 3:
                goto LABEL_100;
              default:
                uint64_t v87 = BYTE6(v15);
                goto LABEL_100;
            }
          }
          uint64_t v92 = v13;
          return sub_1CA5B6EF4(v92, v15);
        }
      }
      sub_1CA5C92E0();
      swift_allocError();
      uint64_t v25 = 4;
      break;
    default:
      uint64_t v16 = *(void *)(a2 + 24);
      unsigned __int8 v17 = *(unsigned char *)(a2 + 32);
      uint64_t v18 = a1[3];
      uint64_t v19 = __swift_project_boxed_opaque_existential_1Tm(a1, v18);
      uint64_t v129 = v18;
      uint64_t v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v128);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v20, v19, v18);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1CA5F752C((uint64_t)v123, (uint64_t)&v128);
      if (v3)
      {
        sub_1CA5F9CF8(v14, v16, v15);
        unsigned __int8 v23 = (uint64_t *)&v128;
      }
      else
      {
        uint64_t v71 = v21;
        uint64_t v72 = v22;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v128);
        uint64_t v73 = sub_1CA5F8BD0(v14, v71, v72);
        swift_bridgeObjectRelease();
        sub_1CA5F9CF8(v14, v16, v17);
        if (*(void *)(v73 + 16))
        {
          uint64_t v74 = *(void *)(v73 + 48);
          unsigned __int8 v122 = 0;
          char v75 = *(unsigned char *)(v73 + 56);
          int v121 = *(unsigned __int8 *)(v73 + 57);
          uint64_t v76 = *(void *)(v73 + 64);
          uint64_t v77 = *(void *)(v73 + 72);
          uint64_t v78 = *(void *)(v73 + 88);
          unsigned __int8 v79 = *(unsigned char *)(v73 + 80);
          swift_bridgeObjectRetain();
          sub_1CA5F9DAC(v76, v77, v79);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v135 = v74;
          char v136 = v75;
          char v137 = v121;
          uint64_t v138 = v76;
          uint64_t v139 = v77;
          unsigned __int8 v140 = v79;
          uint64_t v141 = v78;
          sub_1CA5F658C(v123, &v135, v109);
          swift_bridgeObjectRelease();
          sub_1CA5F9CF8(v76, v77, v79);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)(v88 + 8) = 0;
          *(void *)(v88 + 16) = 0;
          *(void *)uint64_t v88 = 2;
          *(unsigned char *)(v88 + 24) = 3;
          swift_willThrow();
        }
        unsigned __int8 v23 = v123;
      }
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  }
LABEL_90:
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0;
  *(void *)uint64_t v24 = v25;
  *(unsigned char *)(v24 + 24) = 3;
  return swift_willThrow();
}

uint64_t sub_1CA5F742C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1CA5F7788(a1, a3);
  if (!v4)
  {
    uint64_t v10 = result;
    sub_1CA5F9F18(a2);
    sub_1CA5F7A14(v10);
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = v13 + 32;
      do
      {
        sub_1CA5F9DD0(v15, (uint64_t)v16);
        sub_1CA5F658C(v16, a3, a4);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
        v15 += 40;
        --v14;
      }
      while (v14);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA5F752C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1CA5FDDA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA5B83E4(a2, (uint64_t)&v17);
  sub_1CA5FDD88();
  sub_1CA5FDD98();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = &v17;
  sub_1CA5F42B0(&v17);
  swift_release();
  if (!v19)
  {
    uint64_t v11 = (uint64_t *)&unk_1EA608B70;
    uint64_t v12 = (long long *)&v17;
LABEL_7:
    sub_1CA5BA6F0((uint64_t)v12, v11);
    sub_1CA5C92E0();
    swift_allocError();
    *(void *)(v13 + 8) = 0;
    *(void *)(v13 + 16) = 0;
    *(void *)uint64_t v13 = 2;
    *(unsigned char *)(v13 + 24) = 3;
    swift_willThrow();
    return (uint64_t)v8;
  }
  unint64_t v9 = *((void *)&v17 + 1);
  uint64_t v8 = (unsigned long long *)v17;
  unsigned long long v20 = v17;
  sub_1CA5B6F4C(&v18, v21);
  unsigned long long v17 = __PAIR128__(v9, (unint64_t)v8);
  sub_1CA5B83E4((uint64_t)v21, (uint64_t)&v18);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    swift_bridgeObjectRelease();
    sub_1CA5BA6F0((uint64_t)&v20, &qword_1EA608B68);
    uint64_t v11 = (uint64_t *)&unk_1EA608B78;
    uint64_t v12 = v14;
    goto LABEL_7;
  }
  sub_1CA5BA6D8(v14, (uint64_t)v16);
  unsigned long long v17 = __PAIR128__(v9, (unint64_t)v8);
  uint64_t result = sub_1CA5B83E4((uint64_t)v21, (uint64_t)&v18);
  if (v9)
  {
    sub_1CA5BA6F0((uint64_t)&v20, &qword_1EA608B68);
    sub_1CA5BA6D8(v16, a1);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v18);
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5F7788(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1CA5DE738(0, v7, 0);
    uint64_t v8 = v6 + 32;
    do
    {
      sub_1CA5F9DD0(v8, (uint64_t)v18);
      uint64_t v9 = sub_1CA5F6560((uint64_t)v18, a2);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return a2;
      }
      uint64_t v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA5DE738(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v19;
      }
      unint64_t v12 = *(void *)(v10 + 16);
      unint64_t v11 = *(void *)(v10 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1CA5DE738(v11 > 1, v12 + 1, 1);
        uint64_t v10 = v19;
      }
      *(void *)(v10 + 16) = v12 + 1;
      *(void *)(v10 + 8 * v12 + 32) = v9;
      v8 += 40;
      --v7;
    }
    while (v7);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    if (!v13) {
      goto LABEL_17;
    }
LABEL_11:
    uint64_t v14 = 0;
    a2 = 0;
    while (1)
    {
      uint64_t v15 = *(void *)(v10 + 8 * v14 + 32);
      BOOL v16 = __OFADD__(a2, v15);
      a2 += v15;
      if (v16) {
        break;
      }
      if (v13 == ++v14)
      {
        swift_bridgeObjectRelease();
        return a2;
      }
    }
    __break(1u);
    return result;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v13) {
    goto LABEL_11;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return 0;
}

size_t sub_1CA5F7960(size_t result, unint64_t a2)
{
  if (!result) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return MEMORY[0x1E4FBC860];
  }
  if (v4 < 1)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4248);
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v5);
    uint64_t v5[2] = v4;
    long long v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1CA5F7A14(uint64_t a1)
{
  v7[5] = *MEMORY[0x1E4F143B8];
  if (a1 <= 127)
  {
    if (a1 < 0)
    {
      sub_1CA5FDC08();
      __break(1u);
      JUMPOUT(0x1CA5F7BB4);
    }
    return sub_1CA5C47F0(a1);
  }
  else
  {
    unint64_t v2 = (71 - __clz(a1)) >> 3;
    sub_1CA5C47F0(v2 | 0x80);
    unint64_t v3 = v2 + 1;
    char v4 = 8 * v2 - 8;
    do
    {
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB4238);
      v7[3] = v5;
      _OWORD v7[4] = sub_1CA5FA7B0();
      LOBYTE(v7[0]) = (unint64_t)a1 >> (v4 & 0x38);
      __swift_project_boxed_opaque_existential_1Tm(v7, v5);
      sub_1CA5FD538();
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
      --v3;
      v4 -= 8;
    }
    while (v3 > 1);
  }
  return result;
}

uint64_t sub_1CA5F7BC4(uint64_t *a1, char a2)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = v4 >> 62;
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(v3) - v3;
      if (__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_61;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (!v7) {
        goto LABEL_39;
      }
      unsigned __int8 v11 = sub_1CA5FD618();
      uint64_t v2 = v11;
      if ((~v11 & 0x1E) != 0)
      {
        if (a2) {
          return v2;
        }
        if (v5)
        {
          if (v5 == 1)
          {
            uint64_t v14 = (int)v3 + 1;
            uint64_t v15 = v3 >> 32;
          }
          else
          {
            uint64_t v26 = *(void *)(v3 + 16);
            uint64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1))
            {
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
            uint64_t v15 = *(void *)(v3 + 24);
            swift_retain();
          }
          swift_retain();
        }
        else
        {
          uint64_t v15 = BYTE6(v4);
          uint64_t v14 = 1;
        }
        if (v15 < v14) {
          goto LABEL_69;
        }
LABEL_52:
        uint64_t v27 = sub_1CA5FD558();
        uint64_t v29 = v28;
        sub_1CA5B6EF4(v3, v4);
        sub_1CA5B6EF4(v3, v4);
        *a1 = v27;
        a1[1] = v29;
        return v2;
      }
      if (v5)
      {
        if (v5 == 1)
        {
          uint64_t v12 = (int)v3 + 1;
          uint64_t v13 = v3 >> 32;
        }
        else
        {
          uint64_t v16 = *(void *)(v3 + 16);
          uint64_t v12 = v16 + 1;
          if (__OFADD__(v16, 1))
          {
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          uint64_t v13 = *(void *)(v3 + 24);
        }
      }
      else
      {
        uint64_t v13 = BYTE6(v4);
        uint64_t v12 = 1;
      }
      if (v13 < v12) {
        goto LABEL_68;
      }
      if (v12 == v13)
      {
LABEL_39:
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v24 + 8) = 0;
        *(void *)(v24 + 16) = 0;
        *(void *)uint64_t v24 = 0;
        *(unsigned char *)(v24 + 24) = 3;
        swift_willThrow();
        return v2;
      }
      uint64_t v31 = v3 >> 32;
      while (1)
      {
        if (v12 >= v13)
        {
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v5)
        {
          if (v5 == 1)
          {
            if (v12 < (int)v3 || v12 >= v31) {
              goto LABEL_57;
            }
            uint64_t v17 = sub_1CA5FD408();
            if (!v17)
            {
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
              JUMPOUT(0x1CA5F7FF0);
            }
            uint64_t v18 = v17;
            uint64_t v19 = sub_1CA5FD428();
            uint64_t v20 = v12 - v19;
            if (__OFSUB__(v12, v19)) {
              goto LABEL_59;
            }
          }
          else
          {
            if (v12 < *(void *)(v3 + 16)) {
              goto LABEL_56;
            }
            if (v12 >= *(void *)(v3 + 24)) {
              goto LABEL_58;
            }
            uint64_t v22 = sub_1CA5FD408();
            if (!v22) {
              goto LABEL_67;
            }
            uint64_t v18 = v22;
            uint64_t v23 = sub_1CA5FD428();
            uint64_t v20 = v12 - v23;
            if (__OFSUB__(v12, v23)) {
              goto LABEL_60;
            }
          }
          uint64_t v21 = *(unsigned __int8 *)(v18 + v20);
        }
        else
        {
          if (v12 >= BYTE6(v4)) {
            goto LABEL_55;
          }
          uint64_t v33 = v3;
          __int16 v34 = v4;
          char v35 = BYTE2(v4);
          char v36 = BYTE3(v4);
          char v37 = BYTE4(v4);
          char v38 = BYTE5(v4);
          uint64_t v21 = *((unsigned __int8 *)&v33 + v12);
        }
        uint64_t v2 = v21 | (v2 << 8);
        if ((v21 & 0x80) == 0) {
          break;
        }
        if (v13 == ++v12) {
          goto LABEL_39;
        }
      }
      if ((a2 & 1) == 0)
      {
        uint64_t v25 = BYTE6(v4);
        if (v5)
        {
          if (v5 != 1)
          {
            uint64_t v31 = *(void *)(v3 + 24);
            swift_retain();
          }
          swift_retain();
          uint64_t v25 = v31;
        }
        if (v25 > v12) {
          goto LABEL_52;
        }
LABEL_65:
        __break(1u);
      }
      return v2;
    case 2uLL:
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v8 = *(void *)(v3 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_62;
    case 3uLL:
      goto LABEL_39;
    default:
      uint64_t v7 = BYTE6(v4);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5F8000(uint64_t *a1)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = v4 >> 62;
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(v3) - v3;
      if (__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_85;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (!v7) {
        goto LABEL_28;
      }
      sub_1CA5B6FE8(*a1, v4);
      __int16 v11 = sub_1CA5F4158(v3, v4);
      sub_1CA5B6EF4(v3, v4);
      if ((v11 & 0x100) != 0)
      {
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      uint64_t v2 = v11;
      if (v11 <= 0x7Fu)
      {
        if (!v5)
        {
          uint64_t v13 = BYTE6(v4);
          uint64_t v12 = 1;
          goto LABEL_21;
        }
        if (v5 == 1)
        {
          uint64_t v12 = (int)v3 + 1;
          uint64_t v13 = v3 >> 32;
LABEL_20:
          swift_retain();
LABEL_21:
          if (v13 >= v12)
          {
LABEL_77:
            uint64_t v34 = sub_1CA5FD558();
            uint64_t v36 = v35;
            sub_1CA5B6EF4(v3, v4);
            sub_1CA5B6EF4(v3, v4);
            *a1 = v34;
            a1[1] = v36;
            return v2;
          }
LABEL_99:
          __break(1u);
          JUMPOUT(0x1CA5F8534);
        }
        uint64_t v15 = *(void *)(v3 + 16);
        uint64_t v12 = v15 + 1;
        if (!__OFADD__(v15, 1))
        {
          uint64_t v13 = *(void *)(v3 + 24);
          swift_retain();
          goto LABEL_20;
        }
        goto LABEL_89;
      }
      if (v5)
      {
        if (v5 == 1)
        {
          LODWORD(v14) = HIDWORD(v3) - v3;
          if (__OFSUB__(HIDWORD(v3), v3))
          {
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v14 = (int)v14;
        }
        else
        {
          uint64_t v17 = *(void *)(v3 + 16);
          uint64_t v16 = *(void *)(v3 + 24);
          BOOL v10 = __OFSUB__(v16, v17);
          uint64_t v14 = v16 - v17;
          if (v10)
          {
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
        }
      }
      else
      {
        uint64_t v14 = BYTE6(v4);
      }
      uint64_t v2 = v11 & 0x7F;
      if (v14 <= v2)
      {
LABEL_28:
        sub_1CA5C92E0();
        swift_allocError();
        v19[2] = 0;
        uint64_t v20 = v19 + 3;
        *uint64_t v19 = 0;
      }
      else
      {
        if (v5)
        {
          if (v5 == 1) {
            uint64_t v18 = (int)v3;
          }
          else {
            uint64_t v18 = *(void *)(v3 + 16);
          }
        }
        else
        {
          uint64_t v18 = 0;
        }
        if (__OFADD__(v18, 1))
        {
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
        if (sub_1CA5FD618())
        {
          if (v5)
          {
            if (v5 == 1)
            {
              uint64_t v21 = (int)v3;
              uint64_t v22 = (int)v3 + 1;
            }
            else
            {
              uint64_t v21 = *(void *)(v3 + 16);
              uint64_t v22 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_95;
              }
            }
          }
          else
          {
            uint64_t v22 = 1;
            uint64_t v21 = 0;
          }
          uint64_t v23 = v21 + 1;
          uint64_t v24 = v23 + v2;
          if (__OFADD__(v23, v2)) {
            goto LABEL_91;
          }
          if (v24 < v22)
          {
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
          if (v22 == v24)
          {
            uint64_t v2 = 0;
LABEL_44:
            uint64_t v1 = (v11 & 0x7F) + 1;
            if (v5)
            {
              if (v5 == 1)
              {
                uint64_t v25 = (int)v3;
              }
              else
              {
                uint64_t v25 = *(void *)(v3 + 16);
                swift_retain();
              }
              swift_retain();
            }
            else
            {
LABEL_67:
              uint64_t v25 = v5;
            }
            if (!__OFADD__(v25, v1))
            {
              if (v5)
              {
                if (v5 == 1) {
                  uint64_t v33 = v3 >> 32;
                }
                else {
                  uint64_t v33 = *(void *)(v3 + 24);
                }
              }
              else
              {
                uint64_t v33 = BYTE6(v4);
              }
              if (v33 >= v25 + v1) {
                goto LABEL_77;
              }
              goto LABEL_94;
            }
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
          }
          uint64_t v2 = 0;
          while (v22 < v24)
          {
            if (v5)
            {
              if (v5 == 1)
              {
                if (v22 < (int)v3 || v22 >= v3 >> 32) {
                  goto LABEL_82;
                }
                uint64_t v27 = sub_1CA5FD408();
                if (!v27) {
                  goto LABEL_97;
                }
                uint64_t v28 = v27;
                uint64_t v29 = sub_1CA5FD428();
                uint64_t v30 = v22 - v29;
                if (__OFSUB__(v22, v29)) {
                  goto LABEL_84;
                }
              }
              else
              {
                if (v22 < *(void *)(v3 + 16)) {
                  goto LABEL_81;
                }
                if (v22 >= *(void *)(v3 + 24)) {
                  goto LABEL_83;
                }
                uint64_t v31 = sub_1CA5FD408();
                if (!v31) {
                  goto LABEL_98;
                }
                uint64_t v28 = v31;
                uint64_t v32 = sub_1CA5FD428();
                uint64_t v30 = v22 - v32;
                if (__OFSUB__(v22, v32))
                {
                  __break(1u);
                  goto LABEL_67;
                }
              }
              uint64_t v26 = *(unsigned __int8 *)(v28 + v30);
            }
            else
            {
              if (v22 >= BYTE6(v4)) {
                goto LABEL_80;
              }
              uint64_t v38 = v3;
              __int16 v39 = v4;
              char v40 = BYTE2(v4);
              char v41 = BYTE3(v4);
              char v42 = BYTE4(v4);
              char v43 = BYTE5(v4);
              uint64_t v26 = *((unsigned __int8 *)&v38 + v22);
            }
            ++v22;
            uint64_t v2 = v26 | (v2 << 8);
            if (v24 == v22) {
              goto LABEL_44;
            }
          }
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
          goto LABEL_87;
        }
        sub_1CA5C92E0();
        swift_allocError();
        v19[2] = 0;
        uint64_t v20 = v19 + 3;
        *uint64_t v19 = 8;
      }
      v19[1] = 0;
      *uint64_t v20 = 3;
      swift_willThrow();
      return v2;
    case 2uLL:
      uint64_t v9 = *(void *)(v3 + 16);
      uint64_t v8 = *(void *)(v3 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_86;
    case 3uLL:
      goto LABEL_28;
    default:
      uint64_t v7 = BYTE6(v4);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5F8544(uint64_t *a1, char a2)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  sub_1CA5B6FE8(*a1, v7);
  uint64_t v8 = sub_1CA5F7BC4(a1, 0);
  if (!v2)
  {
    uint64_t v3 = v8;
    uint64_t v9 = sub_1CA5F8000(a1);
    uint64_t v10 = *a1;
    unint64_t v11 = a1[1];
    uint64_t v12 = v9;
    switch(v11 >> 62)
    {
      case 1uLL:
        uint64_t v12 = v9 + (int)v10;
        if (__OFADD__(v9, (int)v10)) {
          goto LABEL_33;
        }
        if (v10 >> 32 < v12) {
          goto LABEL_19;
        }
        goto LABEL_10;
      case 2uLL:
        uint64_t v13 = *(void *)(v10 + 16);
        uint64_t v12 = v13 + v9;
        if (__OFADD__(v13, v9)) {
          goto LABEL_34;
        }
        if (*(void *)(v10 + 24) >= v12)
        {
LABEL_10:
          unint64_t v23 = v11 >> 62;
          uint64_t v25 = *a1;
          BOOL v14 = (a2 & 1) == 0;
          if (a2) {
            uint64_t v15 = v6;
          }
          else {
            uint64_t v15 = *a1;
          }
          unint64_t v26 = a1[1];
          if (v14) {
            unint64_t v16 = a1[1];
          }
          else {
            unint64_t v16 = v7;
          }
          uint64_t v17 = 0;
          switch(v16 >> 62)
          {
            case 1uLL:
              uint64_t v17 = (int)v15;
              goto LABEL_23;
            case 2uLL:
              uint64_t v17 = *(void *)(v15 + 16);
LABEL_23:
              sub_1CA5B6FE8(v15, v16);
              break;
            default:
              break;
          }
          if (v12 < v17)
          {
            __break(1u);
          }
          else
          {
            sub_1CA5FD558();
            sub_1CA5B6EF4(v15, v16);
            uint64_t v20 = 0;
            switch((int)v23)
            {
              case 1:
                uint64_t v20 = v25 >> 32;
                break;
              case 2:
                uint64_t v20 = *(void *)(v25 + 24);
                break;
              case 3:
                break;
              default:
                uint64_t v20 = BYTE6(v26);
                break;
            }
            if (v20 >= v12)
            {
              uint64_t v24 = sub_1CA5FD558();
              uint64_t v22 = v21;
              sub_1CA5B6EF4(v25, v26);
              sub_1CA5B6EF4(v6, v7);
              *a1 = v24;
              a1[1] = v22;
              return v3;
            }
          }
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          JUMPOUT(0x1CA5F87C4);
        }
LABEL_19:
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v18 + 8) = 0;
        *(void *)(v18 + 16) = 0;
        *(void *)uint64_t v18 = 0;
        *(unsigned char *)(v18 + 24) = 3;
        swift_willThrow();
        break;
      case 3uLL:
        if (v9 > 0) {
          goto LABEL_19;
        }
        goto LABEL_10;
      default:
        if (BYTE6(v11) < v9) {
          goto LABEL_19;
        }
        goto LABEL_10;
    }
  }
  sub_1CA5B6EF4(v6, v7);
  return v3;
}

unint64_t sub_1CA5F87F4(uint64_t a1, unint64_t i)
{
  uint64_t v4 = sub_1CA5FD5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = i >> 62;
  switch(i >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 < 1) {
        goto LABEL_14;
      }
      if (v8)
      {
        if (v8 == 1)
        {
          LODWORD(v13) = HIDWORD(a1) - a1;
          if (__OFSUB__(HIDWORD(a1), a1))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
          uint64_t v13 = (int)v13;
        }
        else
        {
          uint64_t v15 = *(void *)(a1 + 16);
          uint64_t v14 = *(void *)(a1 + 24);
          BOOL v12 = __OFSUB__(v14, v15);
          uint64_t v13 = v14 - v15;
          if (v12)
          {
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
      }
      else
      {
        uint64_t v13 = BYTE6(i);
      }
      if (v13 > 8)
      {
LABEL_14:
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v16 + 8) = 0;
        *(void *)(v16 + 16) = 0;
        *(void *)uint64_t v16 = 0;
        *(unsigned char *)(v16 + 24) = 3;
        swift_willThrow();
        return i;
      }
      sub_1CA5B6FE8(a1, i);
      __int16 v17 = sub_1CA5F4158(a1, i);
      sub_1CA5B6EF4(a1, i);
      if ((v17 & 0x100) != 0) {
        goto LABEL_28;
      }
      if ((v17 & 0x80) != 0)
      {
LABEL_29:
        sub_1CA5FDC18();
        __break(1u);
        JUMPOUT(0x1CA5F8A9CLL);
      }
      if (v8) {
        sub_1CA5B6FE8(a1, i);
      }
      sub_1CA5FD608();
      __int16 v18 = sub_1CA5FD5E8();
      for (i = 0; (v18 & 0x100) == 0; __int16 v18 = sub_1CA5FD5E8())
        unint64_t i = v18 | (i << 8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((i & 0x8000000000000000) != 0)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      return i;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_14;
    default:
      uint64_t v9 = BYTE6(i);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5F8AAC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_14:
        __break(1u);
        JUMPOUT(0x1CA5F8BC0);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 != 1) {
        goto LABEL_11;
      }
      sub_1CA5B6FE8(a1, a2);
      __int16 v8 = sub_1CA5F4158(a1, a2);
      sub_1CA5B6EF4(a1, a2);
      if ((v8 & 0x100) != 0) {
        goto LABEL_11;
      }
      char v9 = v8;
      if ((_BYTE)v8)
      {
        if (v8 == 255)
        {
          char v9 = 1;
        }
        else
        {
LABEL_11:
          sub_1CA5C92E0();
          swift_allocError();
          *(void *)(v10 + 8) = 0;
          *(void *)(v10 + 16) = 0;
          *(void *)uint64_t v10 = 7;
          *(unsigned char *)(v10 + 24) = 3;
          swift_willThrow();
        }
      }
      return v9 & 1;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_14;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1CA5F8BD0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 88;
  uint64_t v22 = result + 88;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  unint64_t v29 = v4;
LABEL_2:
  if (v3 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v3;
  }
  unint64_t v30 = v6 + 1;
  BOOL v7 = (void *)(v5 + (v3 << 6));
  while (1)
  {
    if (v4 == v3) {
      return v23;
    }
    uint64_t v8 = v3++;
    if (v30 == v3) {
      break;
    }
    uint64_t v10 = *(v7 - 7);
    uint64_t v9 = *(v7 - 6);
    uint64_t v28 = *(v7 - 5);
    char v26 = *((unsigned char *)v7 - 31);
    char v27 = *((unsigned char *)v7 - 32);
    uint64_t v11 = *(v7 - 3);
    uint64_t v12 = *(v7 - 2);
    unsigned __int8 v13 = *((unsigned char *)v7 - 8);
    uint64_t v14 = *v7;
    if (v10 == a2 && v9 == a3)
    {
      uint64_t v10 = a2;
      uint64_t v9 = a3;
LABEL_15:
      swift_bridgeObjectRetain();
      sub_1CA5F9DAC(v11, v12, v13);
      swift_bridgeObjectRetain();
      uint64_t v16 = v23;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1CA5DE718(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v16 = v23;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      unint64_t v19 = v18 + 1;
      unint64_t v4 = v29;
      if (v18 >= v17 >> 1)
      {
        unint64_t v21 = v18 + 1;
        unint64_t v31 = *(void *)(v16 + 16);
        uint64_t result = sub_1CA5DE718(v17 > 1, v18 + 1, 1);
        unint64_t v19 = v21;
        unint64_t v4 = v29;
        unint64_t v18 = v31;
        uint64_t v16 = v23;
      }
      unint64_t v3 = v8 + 1;
      *(void *)(v16 + 16) = v19;
      uint64_t v23 = v16;
      uint64_t v20 = v16 + (v18 << 6);
      *(void *)(v20 + 32) = v10;
      *(void *)(v20 + 40) = v9;
      *(void *)(v20 + 48) = v28;
      *(unsigned char *)(v20 + 56) = v27;
      *(unsigned char *)(v20 + 57) = v26;
      *(void *)(v20 + 64) = v11;
      *(void *)(v20 + 72) = v12;
      *(unsigned char *)(v20 + 80) = v13;
      *(void *)(v20 + 88) = v14;
      uint64_t v5 = v22;
      goto LABEL_2;
    }
    v7 += 8;
    uint64_t result = sub_1CA5FDCB8();
    unint64_t v4 = v29;
    if (result) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA5F8DA4(unint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_22:
    sub_1CA5FDC18();
    __break(1u);
    JUMPOUT(0x1CA5F8FE0);
  }
  if (!a1) {
    return 1;
  }
  unint64_t __src = bswap64(a1);
  uint64_t v1 = sub_1CA5F27D4(&__src, &v23);
  uint64_t v3 = v2;
  unint64_t v4 = 0;
  unint64_t v5 = BYTE6(v2);
  if (v5)
  {
    while (1)
    {
      uint64_t v16 = v1;
      __int16 v17 = v3;
      char v18 = BYTE2(v3);
      char v19 = BYTE3(v3);
      char v20 = BYTE4(v3);
      char v21 = BYTE5(v3);
      if (*((unsigned char *)&v16 + v4)) {
        break;
      }
      if (v5 == ++v4) {
        goto LABEL_9;
      }
    }
    if (v5 < v4)
    {
      __break(1u);
      goto LABEL_18;
    }
  }
LABEL_9:
  unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = sub_1CA5FD558();
  unint64_t v10 = v9;
  sub_1CA5B6EF4(v1, v7);
  uint64_t v11 = 0;
  switch(v10 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v8), v8)) {
        goto LABEL_19;
      }
      uint64_t v11 = HIDWORD(v8) - (int)v8;
LABEL_14:
      sub_1CA5B6FE8(v8, v10);
      unsigned int v14 = sub_1CA5F4158(v8, v10);
      sub_1CA5B6EF4(v8, v10);
      if ((v14 & 0x100) != 0)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_1CA5B6EF4(v8, v10);
      uint64_t v15 = (v14 >> 7) & 1;
      uint64_t result = v11 + v15;
      if (__OFADD__(v11, v15))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v12 = *(void *)(v8 + 24);
      uint64_t v11 = v12 - v13;
      if (!__OFSUB__(v12, v13)) {
        goto LABEL_14;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_14;
    default:
      uint64_t v11 = BYTE6(v10);
      goto LABEL_14;
  }
}

uint64_t sub_1CA5F8FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_1CA5FDDA8();
  MEMORY[0x1F4188790](v14);
  uint64_t v87 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a6 >> 6)
  {
    case 1:
      uint64_t v80 = v15;
      uint64_t v81 = a5;
      uint64_t v31 = *(void *)(a1 + 24);
      a1 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm((void *)a1, v31);
      v96[1] = v31;
      uint64_t v32 = __swift_allocate_boxed_opaque_existential_1(&v95);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v32, a1, v31);
      swift_bridgeObjectRetain();
      sub_1CA5FDD88();
      uint64_t v33 = *(void *)(a4 + 16);
      if (!v33)
      {
        int64_t v85 = 0;
        uint64_t v56 = v81;
LABEL_35:
        (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v14);
        sub_1CA5F9CF8(a4, v56, a6);
        int64_t v30 = v85;
        goto LABEL_36;
      }
      uint64_t v78 = v14;
      HIDWORD(v76) = a3;
      uint64_t v77 = a2;
      int v79 = a6;
      uint64_t v104 = v7;
      uint64_t v83 = v96;
      swift_bridgeObjectRetain();
      int64_t v85 = 0;
      uint64_t v34 = &qword_1EA608748;
      uint64_t v35 = a4 + 48;
      uint64_t v82 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v84 = a4;
      while (1)
      {
        uint64_t v36 = v34;
        uint64_t v88 = v33;
        uint64_t v86 = *(void *)v35;
        uint64_t v37 = *(unsigned __int8 *)(v35 + 8);
        char v38 = *(unsigned char *)(v35 + 9);
        uint64_t v40 = *(void *)(v35 + 16);
        uint64_t v39 = *(void *)(v35 + 24);
        unsigned int v41 = *(unsigned __int8 *)(v35 + 32);
        uint64_t v42 = *(void *)(v35 + 40);
        swift_bridgeObjectRetain();
        uint64_t v90 = v40;
        uint64_t v91 = v39;
        unsigned int v92 = v41;
        sub_1CA5F9DAC(v40, v39, v41);
        uint64_t v89 = v42;
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1CA5FDD98();
        MEMORY[0x1F4188790](v43);
        uint64_t v44 = v104;
        a1 = sub_1CA5FDBD8();
        swift_bridgeObjectRelease();
        swift_release();
        if (*(void *)(a1 + 16) != 1) {
          break;
        }
        sub_1CA5F9EB0(a1 + 32, (uint64_t)&v95);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = v36;
        __swift_instantiateConcreteTypeFromMangledName(v36);
        swift_dynamicCast();
        if (v94)
        {
          sub_1CA5B6F4C(&v93, &v97);
          sub_1CA5B83E4((uint64_t)&v97, (uint64_t)&v93);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          swift_dynamicCast();
          uint64_t v45 = v90;
          a1 = v91;
          unsigned __int8 v46 = v92;
          uint64_t v47 = sub_1CA5F8FF0(&v95, v86, v37, v90, v91, v92);
          if (v44)
          {
            sub_1CA5F9CF8(v45, a1, v46);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v97);
            uint64_t v66 = v84;
            a1 = v81;
            unsigned __int8 v59 = v79;
            sub_1CA5F9CF8(v84, v81, v79);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v78);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v95);
            goto LABEL_59;
          }
          a4 = v84;
          if (__OFADD__(v85, v47))
          {
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            sub_1CA5FDC18();
            __break(1u);
            JUMPOUT(0x1CA5F9CC8);
          }
          v85 += v47;
          uint64_t v104 = 0;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v97);
          sub_1CA5F9CF8(v45, a1, v46);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v95);
        }
        else
        {
          sub_1CA5BA6F0((uint64_t)&v93, v36);
          if ((v38 & 1) == 0)
          {
            uint64_t v66 = v84;
            a1 = v81;
            unsigned __int8 v59 = v79;
            sub_1CA5F9CF8(v84, v81, v79);
            sub_1CA5C92E0();
            swift_allocError();
            *(void *)(v71 + 8) = 0;
            *(void *)(v71 + 16) = 0;
            *(void *)uint64_t v71 = 3;
            *(unsigned char *)(v71 + 24) = 3;
            swift_willThrow();
            sub_1CA5F9CF8(v90, v91, v92);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v78);
LABEL_59:
            uint64_t v26 = v66;
            uint64_t v27 = a1;
            goto LABEL_60;
          }
          uint64_t v104 = v44;
          sub_1CA5F9CF8(v90, v91, v92);
          swift_bridgeObjectRelease();
          a4 = v84;
        }
        v35 += 64;
        uint64_t v33 = v88 - 1;
        if (v88 == 1)
        {
          uint64_t v56 = v81;
          LOBYTE(a6) = v79;
          sub_1CA5F9CF8(a4, v81, v79);
          a2 = v77;
          LOBYTE(a3) = BYTE4(v76);
          uint64_t v14 = v78;
          goto LABEL_35;
        }
      }
      uint64_t v57 = v84;
      uint64_t v58 = v81;
      unsigned __int8 v59 = v79;
      sub_1CA5F9CF8(v84, v81, v79);
      swift_bridgeObjectRelease();
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)(v60 + 8) = 0;
      *(void *)(v60 + 16) = 0;
      *(void *)uint64_t v60 = 2;
      *(unsigned char *)(v60 + 24) = 3;
      swift_willThrow();
      sub_1CA5F9CF8(v90, v91, v92);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v78);
      uint64_t v26 = v57;
      uint64_t v27 = v58;
LABEL_60:
      unsigned __int8 v28 = v59;
LABEL_61:
      sub_1CA5F9CF8(v26, v27, v28);
      return a1;
    case 2:
      long long v23 = *(_OWORD *)(a4 + 32);
      long long v99 = *(_OWORD *)(a4 + 16);
      long long v24 = *(_OWORD *)(a4 + 48);
      long long v100 = v23;
      long long v101 = v24;
      sub_1CA5F9D48(&v100, (uint64_t)v102);
      uint64_t v103 = *((void *)&v101 + 1);
      sub_1CA5F9DD0(a1, (uint64_t)&v95);
      sub_1CA5F9DAC(a4, a5, a6);
      sub_1CA5F9E34((uint64_t)v102);
      sub_1CA5F9E68((uint64_t)&v103);
      a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B58);
      swift_dynamicCast();
      uint64_t v25 = sub_1CA5F7788(&v97, &v99);
      if (v6)
      {
        sub_1CA5F9D60((uint64_t)v102);
        sub_1CA5F9D1C((uint64_t)&v103);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v97);
        uint64_t v26 = a4;
        uint64_t v27 = a5;
        unsigned __int8 v28 = a6;
        goto LABEL_61;
      }
      int64_t v48 = v25;
      sub_1CA5F9D60((uint64_t)v102);
      sub_1CA5F9D1C((uint64_t)&v103);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v97);
      sub_1CA5F9CF8(a4, a5, a6);
      int64_t v30 = v48;
      goto LABEL_36;
    case 3:
      if (a5 | a4 || a6 != 192)
      {
        if (a4 == 1 && !a5 && a6 == 192)
        {
          sub_1CA5F9DD0(a1, (uint64_t)&v95);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
          swift_dynamicCast();
          int64_t v30 = sub_1CA5F8DA4(v97);
        }
        else
        {
          if (a4 != 2 || a5 || a6 != 192)
          {
            sub_1CA5F9DD0(a1, (uint64_t)&v95);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
            swift_dynamicCast();
            a1 = *((void *)&v97 + 1);
            uint64_t v67 = v97;
            switch(*((void *)&v97 + 1) >> 62)
            {
              case 1:
                unint64_t v75 = DWORD1(v97);
                sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
                if (__OFSUB__(v75, v67)) {
                  goto LABEL_71;
                }
                a1 = (int)v75 - (int)v67;
                break;
              case 2:
                uint64_t v74 = *(void *)(v97 + 16);
                uint64_t v73 = *(void *)(v97 + 24);
                sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
                a1 = v73 - v74;
                if (!__OFSUB__(v73, v74)) {
                  return a1;
                }
                __break(1u);
LABEL_66:
                sub_1CA5B6EF4(v67, a1);
                a1 = 0;
                break;
              case 3:
                goto LABEL_66;
              default:
                sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
                return BYTE6(a1);
            }
            return a1;
          }
          int64_t v30 = 1;
        }
      }
      else
      {
        sub_1CA5F9DD0(a1, (uint64_t)&v95);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
        swift_dynamicCast();
        a1 = *((void *)&v97 + 1);
        uint64_t v29 = v97;
        switch(*((void *)&v97 + 1) >> 62)
        {
          case 1:
            unint64_t v70 = DWORD1(v97);
            sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
            if (__OFSUB__(v70, v29)) {
              goto LABEL_70;
            }
            int64_t v30 = (int)v70 - (int)v29;
            break;
          case 2:
            uint64_t v69 = *(void *)(v97 + 16);
            uint64_t v68 = *(void *)(v97 + 24);
            sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
            int64_t v30 = v68 - v69;
            if (!__OFSUB__(v68, v69)) {
              break;
            }
            __break(1u);
LABEL_55:
            sub_1CA5B6EF4(v29, a1);
            int64_t v30 = 0;
            break;
          case 3:
            goto LABEL_55;
          default:
            sub_1CA5B6EF4(v97, *((unint64_t *)&v97 + 1));
            int64_t v30 = BYTE6(a1);
            break;
        }
      }
LABEL_36:
      if (a3)
      {
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v63 + 8) = 0;
        *(void *)(v63 + 16) = 0;
        *(void *)uint64_t v63 = 5;
        *(unsigned char *)(v63 + 24) = 3;
        swift_willThrow();
        return a1;
      }
      if (a2 < 255)
      {
        uint64_t v61 = 1;
        unint64_t v62 = 1;
        if (v30 <= 127) {
          goto LABEL_45;
        }
        goto LABEL_43;
      }
      if ((unint64_t)a2 >= 0xFFFF) {
        goto LABEL_72;
      }
      uint64_t v61 = 2;
      if (v30 > 127)
      {
LABEL_43:
        unint64_t v62 = ((71 - __clz(v30)) >> 3) + 1;
        goto LABEL_45;
      }
      unint64_t v62 = 1;
LABEL_45:
      unint64_t v64 = v61 + v62;
      a1 = v64 + v30;
      if (__OFADD__(v64, v30))
      {
        __break(1u);
LABEL_48:
        swift_bridgeObjectRelease();
        sub_1CA5C92E0();
        swift_allocError();
        *(void *)(v65 + 8) = 0;
        *(void *)(v65 + 16) = 0;
        *(void *)uint64_t v65 = 2;
        *(unsigned char *)(v65 + 24) = 3;
        swift_willThrow();
        uint64_t v22 = &v95;
LABEL_4:
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
      }
      return a1;
    default:
      uint64_t v17 = a5;
      uint64_t v18 = *(void *)(a1 + 24);
      a1 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm((void *)a1, v18);
      uint64_t v98 = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v97);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_1, a1, v18);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1CA5F752C((uint64_t)&v95, (uint64_t)&v97);
      if (v6)
      {
        sub_1CA5F9CF8(a4, v17, a6);
        uint64_t v22 = (uint64_t *)&v97;
        goto LABEL_4;
      }
      uint64_t v49 = v20;
      uint64_t v50 = v21;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v97);
      a1 = sub_1CA5F8BD0(a4, v49, v50);
      swift_bridgeObjectRelease();
      sub_1CA5F9CF8(a4, v17, a6);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_48;
      }
      uint64_t v51 = *(void *)(a1 + 48);
      uint64_t v52 = *(unsigned __int8 *)(a1 + 56);
      uint64_t v53 = *(void *)(a1 + 64);
      uint64_t v54 = *(void *)(a1 + 72);
      uint64_t v55 = *(unsigned __int8 *)(a1 + 80);
      swift_bridgeObjectRetain();
      sub_1CA5F9DAC(v53, v54, v55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1 = sub_1CA5F8FF0(&v95, v51, v52, v53, v54, v55);
      swift_bridgeObjectRelease();
      sub_1CA5F9CF8(v53, v54, v55);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v95);
      return a1;
  }
}

uint64_t sub_1CA5F9CF8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned int v3 = a3 >> 6;
  if (v3 == 2) {
    return swift_release();
  }
  if (v3 <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA5F9D1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1CA5F9D48(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1CA5F9D60(uint64_t a1)
{
  return a1;
}

uint64_t sub_1CA5F9D94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_1CA5F9DAC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned int v3 = a3 >> 6;
  if (v3 == 2) {
    return swift_retain();
  }
  if (v3 <= 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA5F9DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CA5F9E34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1CA5F9E68(uint64_t a1)
{
  return a1;
}

uint64_t sub_1CA5F9E94(void *a1)
{
  return sub_1CA5FA80C(a1) & 1;
}

uint64_t sub_1CA5F9EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA5F9F18(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  if (a1 <= 254)
  {
    if ((a1 & 0x8000000000000000) == 0) {
      return sub_1CA5FD548();
    }
    sub_1CA5FDC08();
    __break(1u);
    goto LABEL_10;
  }
  if ((unint64_t)a1 > 0xFFFE)
  {
LABEL_10:
    uint64_t result = sub_1CA5FDC18();
    __break(1u);
    return result;
  }
  __int16 v2 = bswap32(a1) >> 16;
  if (*(void *)(sub_1CA5F7960((size_t)&v2, (unint64_t)&v3) + 16)) {
    sub_1CA5FD548();
  }
  return swift_release();
}

uint64_t sub_1CA5FA06C(uint64_t a1, unint64_t a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  sub_1CA5F9F18(a1);
  uint64_t v3 = sub_1CA5F8DA4(a2);
  sub_1CA5F7A14(v3);
  if (!a2) {
    return sub_1CA5C47F0(0);
  }
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  unint64_t __src = bswap64(a2);
  uint64_t v4 = sub_1CA5F27D4(&__src, &v22);
  uint64_t v6 = v5;
  unint64_t v7 = 0;
  unint64_t v8 = BYTE6(v5);
  if (v8)
  {
    while (1)
    {
      uint64_t v15 = v4;
      __int16 v16 = v6;
      char v17 = BYTE2(v6);
      char v18 = BYTE3(v6);
      char v19 = BYTE4(v6);
      char v20 = BYTE5(v6);
      if (*((unsigned char *)&v15 + v7)) {
        break;
      }
      if (v8 == ++v7) {
        goto LABEL_9;
      }
    }
    if (v8 < v7) {
      __break(1u);
    }
  }
LABEL_9:
  unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v11 = sub_1CA5FD558();
  unint64_t v13 = v12;
  sub_1CA5B6EF4(v4, v10);
  sub_1CA5B6FE8(v11, v13);
  __int16 v14 = sub_1CA5F4158(v11, v13);
  sub_1CA5B6EF4(v11, v13);
  if ((v14 & 0x100) != 0)
  {
    __break(1u);
LABEL_15:
    uint64_t result = sub_1CA5FDC18();
    __break(1u);
    return result;
  }
  if ((v14 & 0x80) != 0) {
    sub_1CA5C47F0(0);
  }
  sub_1CA5FD5C8();
  return sub_1CA5B6EF4(v11, v13);
}

uint64_t sub_1CA5FA284(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v34 = a5;
  uint64_t v9 = sub_1CA5FDDA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  __int16 v14 = __swift_project_boxed_opaque_existential_1Tm(a1, v13);
  v45[1] = v13;
  uint64_t v15 = __swift_allocate_boxed_opaque_existential_1(&v44);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v15, v14, v13);
  uint64_t v37 = v12;
  sub_1CA5FDD88();
  uint64_t v16 = *(void *)(a2 + 16);
  if (!v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v37, v9);
  }
  uint64_t v32 = v10;
  uint64_t v33 = v9;
  uint64_t v36 = v45;
  swift_bridgeObjectRetain();
  uint64_t v31 = a2;
  char v17 = (uint64_t *)(a2 + 48);
  uint64_t v35 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    uint64_t v38 = v16;
    uint64_t v19 = *(v17 - 2);
    uint64_t v18 = *(v17 - 1);
    char v20 = *((unsigned char *)v17 + 8);
    char v21 = *((unsigned char *)v17 + 9);
    uint64_t v23 = v17[2];
    uint64_t v22 = v17[3];
    int v24 = *((unsigned __int8 *)v17 + 32);
    uint64_t v25 = v17[5];
    uint64_t v47 = *v17;
    char v48 = v20;
    char v49 = v21;
    uint64_t v50 = v23;
    uint64_t v51 = v22;
    char v52 = v24;
    uint64_t v53 = v25;
    swift_bridgeObjectRetain();
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    int v41 = v24;
    sub_1CA5F9DAC(v23, v22, v24);
    uint64_t v54 = v25;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1CA5FDD98();
    MEMORY[0x1F4188790](v26);
    *(&v31 - 2) = v19;
    *(&v31 - 1) = v18;
    uint64_t v27 = sub_1CA5FDBD8();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v27 + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA5C92E0();
      swift_allocError();
      *(void *)(v28 + 8) = 0;
      *(void *)(v28 + 16) = 0;
      *(void *)uint64_t v28 = 2;
      *(unsigned char *)(v28 + 24) = 3;
      goto LABEL_15;
    }
    sub_1CA5F9EB0(v27 + 32, (uint64_t)&v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608748);
    swift_dynamicCast();
    if (!v43) {
      break;
    }
    sub_1CA5B6F4C(&v42, v46);
    sub_1CA5B83E4((uint64_t)v46, (uint64_t)&v42);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608B50);
    swift_dynamicCast();
    sub_1CA5F658C(&v44, &v47, v34);
    if (v6)
    {
      sub_1CA5F9CF8(v39, v40, v41);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v33);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
    sub_1CA5F9CF8(v39, v40, v41);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v44);
LABEL_5:
    v17 += 8;
    uint64_t v16 = v38 - 1;
    if (v38 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v33;
      uint64_t v10 = v32;
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v37, v9);
    }
  }
  sub_1CA5BA6F0((uint64_t)&v42, &qword_1EA608748);
  if (v21)
  {
    sub_1CA5F9CF8(v39, v40, v41);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  sub_1CA5C92E0();
  swift_allocError();
  *(void *)(v30 + 8) = 0;
  *(void *)(v30 + 16) = 0;
  *(void *)uint64_t v30 = 3;
  *(unsigned char *)(v30 + 24) = 3;
LABEL_15:
  swift_willThrow();
  sub_1CA5F9CF8(v39, v40, v41);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v37, v33);
}

unint64_t sub_1CA5FA7B0()
{
  unint64_t result = qword_1EBCB41A0;
  if (!qword_1EBCB41A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB4238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBCB41A0);
  }
  return result;
}

uint64_t sub_1CA5FA80C(void *a1)
{
  uint64_t v2 = a1[1];
  if (!v2) {
    return 0;
  }
  if (*a1 == *(void *)(v1 + 16) && v2 == *(void *)(v1 + 24)) {
    return 1;
  }
  else {
    return sub_1CA5FDCB8() & 1;
  }
}

uint64_t sub_1CA5FA868()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1CA5FA8A0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1CA5FA8B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1CA5FA8C0()
{
  sub_1CA5B6EF4(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1CA5FA8F8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void *initializeBufferWithCopyOfBuffer for ASN1DecodedItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for ASN1DecodedItem()
{
  return swift_release();
}

void *assignWithCopy for ASN1DecodedItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for ASN1DecodedItem(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1DecodedItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASN1DecodedItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1CA5FAAB0(void *a1)
{
  return *a1 >> 61;
}

void *sub_1CA5FAABC(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1CA5FAACC(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for ASN1DecodedItem()
{
  return &type metadata for ASN1DecodedItem;
}

uint64_t getEnumTagSinglePayload for ASN1SequenceSpec.DecodeMode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1SequenceSpec.DecodeMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1CA5FAB7C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1CA5FAB84(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASN1SequenceSpec.DecodeMode()
{
  return &type metadata for ASN1SequenceSpec.DecodeMode;
}

uint64_t destroy for ASN1ItemSpec(uint64_t a1)
{
  sub_1CA5F9CF8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASN1ItemSpec(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 32);
  sub_1CA5F9DAC(v4, v5, v6);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASN1ItemSpec(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  unsigned __int8 v7 = *((unsigned char *)a2 + 32);
  sub_1CA5F9DAC(v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1CA5F9CF8(v8, v9, v10);
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ASN1ItemSpec(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1CA5F9CF8(v5, v6, v7);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1ItemSpec(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1ItemSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemSpec()
{
  return &type metadata for ASN1ItemSpec;
}

uint64_t getEnumTagSinglePayload for ASN1Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1CA5FAE90(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1CA5FAEA8(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)unint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ASN1Error()
{
  return &type metadata for ASN1Error;
}

uint64_t getEnumTagSinglePayload for ASN1ItemSpec.TagSpec(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASN1ItemSpec.TagSpec(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1CA5FAF24(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1CA5FAF40(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemSpec.TagSpec()
{
  return &type metadata for ASN1ItemSpec.TagSpec;
}

uint64_t destroy for ASN1ItemSpec.DecoderType(uint64_t a1)
{
  return sub_1CA5F9CF8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s24AppletTranslationLibrary12ASN1ItemSpecV11DecoderTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1CA5F9DAC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ASN1ItemSpec.DecoderType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1CA5F9DAC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1CA5F9CF8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ASN1ItemSpec.DecoderType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1CA5F9CF8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1ItemSpec.DecoderType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASN1ItemSpec.DecoderType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 125;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1CA5FB118(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1CA5FB134(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1CA5FB144(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemSpec.DecoderType()
{
  return &type metadata for ASN1ItemSpec.DecoderType;
}

ValueMetadata *type metadata accessor for ASN1SequenceSpec.UnorderedDecodeOptions()
{
  return &type metadata for ASN1SequenceSpec.UnorderedDecodeOptions;
}

ValueMetadata *type metadata accessor for ASN1SequenceSpec.OrderedDecodeOptions()
{
  return &type metadata for ASN1SequenceSpec.OrderedDecodeOptions;
}

uint64_t getEnumTagSinglePayload for ASN1ItemSpec.Constraint(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASN1ItemSpec.Constraint(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemSpec.Constraint()
{
  return &type metadata for ASN1ItemSpec.Constraint;
}

uint64_t initializeBufferWithCopyOfBuffer for ASN1SequenceSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ASN1SequenceSpec()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ASN1SequenceSpec(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for ASN1SequenceSpec(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1SequenceSpec(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1SequenceSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1SequenceSpec()
{
  return &type metadata for ASN1SequenceSpec;
}

unint64_t sub_1CA5FB384()
{
  unint64_t result = qword_1EA608B80;
  if (!qword_1EA608B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608B80);
  }
  return result;
}

unint64_t sub_1CA5FB3DC()
{
  unint64_t result = qword_1EA608B88;
  if (!qword_1EA608B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608B88);
  }
  return result;
}

unint64_t sub_1CA5FB434()
{
  unint64_t result = qword_1EA608B90;
  if (!qword_1EA608B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608B90);
  }
  return result;
}

unint64_t sub_1CA5FB48C()
{
  unint64_t result = qword_1EA608B98;
  if (!qword_1EA608B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608B98);
  }
  return result;
}

unint64_t sub_1CA5FB4E4()
{
  unint64_t result = qword_1EA608BA0;
  if (!qword_1EA608BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608BA0);
  }
  return result;
}

unint64_t sub_1CA5FB53C()
{
  unint64_t result = qword_1EA608BA8;
  if (!qword_1EA608BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608BA8);
  }
  return result;
}

unint64_t sub_1CA5FB594()
{
  unint64_t result = qword_1EA608BB0;
  if (!qword_1EA608BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608BB0);
  }
  return result;
}

unint64_t sub_1CA5FB5EC()
{
  unint64_t result = qword_1EA608BB8;
  if (!qword_1EA608BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA608BB8);
  }
  return result;
}

uint64_t sub_1CA5FB640(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t destroy for SEEMConfiguration(uint64_t *a1)
{
  uint64_t result = sub_1CA5B6EF4(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[2], v3);
  }
  unint64_t v4 = a1[5];
  if (v4 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[4], v4);
  }
  unint64_t v5 = a1[7];
  if (v5 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[6], v5);
  }
  unint64_t v6 = a1[9];
  if (v6 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[8], v6);
  }
  unint64_t v7 = a1[11];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[10], v7);
  }
  unint64_t v8 = a1[13];
  if (v8 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[12], v8);
  }
  unint64_t v9 = a1[15];
  if (v9 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[14], v9);
  }
  unint64_t v10 = a1[17];
  if (v10 >> 60 != 15) {
    uint64_t result = sub_1CA5B6EF4(a1[16], v10);
  }
  unint64_t v11 = a1[19];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = a1[18];
    return sub_1CA5B6EF4(v12, v11);
  }
  return result;
}

uint64_t initializeWithCopy for SEEMConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1CA5B6FE8(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1CA5B6FE8(*v6, a2[3]);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  unint64_t v9 = a2 + 4;
  unint64_t v10 = a2[5];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_1CA5B6FE8(*v9, a2[5]);
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v10;
  }
  uint64_t v12 = a2 + 6;
  unint64_t v13 = a2[7];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_1CA5B6FE8(*v12, a2[7]);
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v13;
  }
  uint64_t v15 = a2 + 8;
  unint64_t v16 = a2[9];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *v15;
    sub_1CA5B6FE8(*v15, a2[9]);
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v16;
  }
  uint64_t v18 = a2 + 10;
  unint64_t v19 = a2[11];
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_1CA5B6FE8(*v18, a2[11]);
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v19;
  }
  char v21 = a2 + 12;
  unint64_t v22 = a2[13];
  if (v22 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v21;
  }
  else
  {
    uint64_t v23 = *v21;
    sub_1CA5B6FE8(*v21, a2[13]);
    *(void *)(a1 + 96) = v23;
    *(void *)(a1 + 104) = v22;
  }
  int v24 = a2 + 14;
  unint64_t v25 = a2[15];
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v26 = *v24;
    sub_1CA5B6FE8(*v24, a2[15]);
    *(void *)(a1 + 112) = v26;
    *(void *)(a1 + 120) = v25;
  }
  uint64_t v27 = a2 + 16;
  unint64_t v28 = a2[17];
  if (v28 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v27;
  }
  else
  {
    uint64_t v29 = *v27;
    sub_1CA5B6FE8(*v27, a2[17]);
    *(void *)(a1 + 128) = v29;
    *(void *)(a1 + 136) = v28;
  }
  uint64_t v30 = a2 + 18;
  unint64_t v31 = a2[19];
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *v30;
    sub_1CA5B6FE8(*v30, v31);
    *(void *)(a1 + 144) = v32;
    *(void *)(a1 + 152) = v31;
  }
  return a1;
}

uint64_t *assignWithCopy for SEEMConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1CA5B6FE8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CA5B6EF4(v6, v7);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *v8;
      sub_1CA5B6FE8(*v8, a2[3]);
      a1[2] = v10;
      a1[3] = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 2));
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v11 = *v8;
  sub_1CA5B6FE8(*v8, a2[3]);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v11;
  a1[3] = v9;
  sub_1CA5B6EF4(v12, v13);
LABEL_8:
  uint64_t v14 = a2 + 4;
  unint64_t v15 = a2[5];
  if ((unint64_t)a1[5] >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      uint64_t v16 = *v14;
      sub_1CA5B6FE8(*v14, a2[5]);
      a1[4] = v16;
      a1[5] = v15;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v15 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 4));
LABEL_13:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v14;
    goto LABEL_15;
  }
  uint64_t v17 = *v14;
  sub_1CA5B6FE8(*v14, a2[5]);
  uint64_t v18 = a1[4];
  unint64_t v19 = a1[5];
  a1[4] = v17;
  a1[5] = v15;
  sub_1CA5B6EF4(v18, v19);
LABEL_15:
  uint64_t v20 = a2 + 6;
  unint64_t v21 = a2[7];
  if ((unint64_t)a1[7] >> 60 == 15)
  {
    if (v21 >> 60 != 15)
    {
      uint64_t v22 = *v20;
      sub_1CA5B6FE8(*v20, a2[7]);
      a1[6] = v22;
      a1[7] = v21;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v21 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 6));
LABEL_20:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v20;
    goto LABEL_22;
  }
  uint64_t v23 = *v20;
  sub_1CA5B6FE8(*v20, a2[7]);
  uint64_t v24 = a1[6];
  unint64_t v25 = a1[7];
  a1[6] = v23;
  a1[7] = v21;
  sub_1CA5B6EF4(v24, v25);
LABEL_22:
  uint64_t v26 = a2 + 8;
  unint64_t v27 = a2[9];
  if ((unint64_t)a1[9] >> 60 == 15)
  {
    if (v27 >> 60 != 15)
    {
      uint64_t v28 = *v26;
      sub_1CA5B6FE8(*v26, a2[9]);
      a1[8] = v28;
      a1[9] = v27;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v27 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 8));
LABEL_27:
    *((_OWORD *)a1 + 4) = *(_OWORD *)v26;
    goto LABEL_29;
  }
  uint64_t v29 = *v26;
  sub_1CA5B6FE8(*v26, a2[9]);
  uint64_t v30 = a1[8];
  unint64_t v31 = a1[9];
  a1[8] = v29;
  a1[9] = v27;
  sub_1CA5B6EF4(v30, v31);
LABEL_29:
  uint64_t v32 = a2 + 10;
  unint64_t v33 = a2[11];
  if ((unint64_t)a1[11] >> 60 == 15)
  {
    if (v33 >> 60 != 15)
    {
      uint64_t v34 = *v32;
      sub_1CA5B6FE8(*v32, a2[11]);
      a1[10] = v34;
      a1[11] = v33;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v33 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 10));
LABEL_34:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v32;
    goto LABEL_36;
  }
  uint64_t v35 = *v32;
  sub_1CA5B6FE8(*v32, a2[11]);
  uint64_t v36 = a1[10];
  unint64_t v37 = a1[11];
  a1[10] = v35;
  a1[11] = v33;
  sub_1CA5B6EF4(v36, v37);
LABEL_36:
  uint64_t v38 = a2 + 12;
  unint64_t v39 = a2[13];
  if ((unint64_t)a1[13] >> 60 == 15)
  {
    if (v39 >> 60 != 15)
    {
      uint64_t v40 = *v38;
      sub_1CA5B6FE8(*v38, a2[13]);
      a1[12] = v40;
      a1[13] = v39;
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v39 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 12));
LABEL_41:
    *((_OWORD *)a1 + 6) = *(_OWORD *)v38;
    goto LABEL_43;
  }
  uint64_t v41 = *v38;
  sub_1CA5B6FE8(*v38, a2[13]);
  uint64_t v42 = a1[12];
  unint64_t v43 = a1[13];
  a1[12] = v41;
  a1[13] = v39;
  sub_1CA5B6EF4(v42, v43);
LABEL_43:
  uint64_t v44 = a2 + 14;
  unint64_t v45 = a2[15];
  if ((unint64_t)a1[15] >> 60 == 15)
  {
    if (v45 >> 60 != 15)
    {
      uint64_t v46 = *v44;
      sub_1CA5B6FE8(*v44, a2[15]);
      a1[14] = v46;
      a1[15] = v45;
      goto LABEL_50;
    }
    goto LABEL_48;
  }
  if (v45 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 14));
LABEL_48:
    *((_OWORD *)a1 + 7) = *(_OWORD *)v44;
    goto LABEL_50;
  }
  uint64_t v47 = *v44;
  sub_1CA5B6FE8(*v44, a2[15]);
  uint64_t v48 = a1[14];
  unint64_t v49 = a1[15];
  a1[14] = v47;
  a1[15] = v45;
  sub_1CA5B6EF4(v48, v49);
LABEL_50:
  uint64_t v50 = a2 + 16;
  unint64_t v51 = a2[17];
  if ((unint64_t)a1[17] >> 60 == 15)
  {
    if (v51 >> 60 != 15)
    {
      uint64_t v52 = *v50;
      sub_1CA5B6FE8(*v50, a2[17]);
      a1[16] = v52;
      a1[17] = v51;
      goto LABEL_57;
    }
    goto LABEL_55;
  }
  if (v51 >> 60 == 15)
  {
    sub_1CA5FBED0((uint64_t)(a1 + 16));
LABEL_55:
    *((_OWORD *)a1 + 8) = *(_OWORD *)v50;
    goto LABEL_57;
  }
  uint64_t v53 = *v50;
  sub_1CA5B6FE8(*v50, a2[17]);
  uint64_t v54 = a1[16];
  unint64_t v55 = a1[17];
  a1[16] = v53;
  a1[17] = v51;
  sub_1CA5B6EF4(v54, v55);
LABEL_57:
  uint64_t v56 = a2 + 18;
  unint64_t v57 = a2[19];
  if ((unint64_t)a1[19] >> 60 != 15)
  {
    if (v57 >> 60 != 15)
    {
      uint64_t v59 = *v56;
      sub_1CA5B6FE8(*v56, v57);
      uint64_t v60 = a1[18];
      unint64_t v61 = a1[19];
      a1[18] = v59;
      a1[19] = v57;
      sub_1CA5B6EF4(v60, v61);
      return a1;
    }
    sub_1CA5FBED0((uint64_t)(a1 + 18));
    goto LABEL_62;
  }
  if (v57 >> 60 == 15)
  {
LABEL_62:
    *((_OWORD *)a1 + 9) = *(_OWORD *)v56;
    return a1;
  }
  uint64_t v58 = *v56;
  sub_1CA5B6FE8(*v56, v57);
  a1[18] = v58;
  a1[19] = v57;
  return a1;
}

uint64_t sub_1CA5FBED0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SEEMConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CA5B6EF4(v4, v5);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  if (v7 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v8 = *(void *)(a2 + 24);
  if (v8 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v6;
  *(void *)(a1 + 24) = v8;
  sub_1CA5B6EF4(v9, v7);
LABEL_6:
  uint64_t v10 = (_OWORD *)(a2 + 32);
  unint64_t v11 = *(void *)(a1 + 40);
  if (v11 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v10;
    goto LABEL_11;
  }
  unint64_t v12 = *(void *)(a2 + 40);
  if (v12 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v10;
  *(void *)(a1 + 40) = v12;
  sub_1CA5B6EF4(v13, v11);
LABEL_11:
  uint64_t v14 = (_OWORD *)(a2 + 48);
  unint64_t v15 = *(void *)(a1 + 56);
  if (v15 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 48) = *v14;
    goto LABEL_16;
  }
  unint64_t v16 = *(void *)(a2 + 56);
  if (v16 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 48);
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)v14;
  *(void *)(a1 + 56) = v16;
  sub_1CA5B6EF4(v17, v15);
LABEL_16:
  uint64_t v18 = (_OWORD *)(a2 + 64);
  unint64_t v19 = *(void *)(a1 + 72);
  if (v19 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 64) = *v18;
    goto LABEL_21;
  }
  unint64_t v20 = *(void *)(a2 + 72);
  if (v20 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 64);
    goto LABEL_19;
  }
  uint64_t v21 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)v18;
  *(void *)(a1 + 72) = v20;
  sub_1CA5B6EF4(v21, v19);
LABEL_21:
  uint64_t v22 = (_OWORD *)(a2 + 80);
  unint64_t v23 = *(void *)(a1 + 88);
  if (v23 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)(a1 + 80) = *v22;
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(a2 + 88);
  if (v24 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 80);
    goto LABEL_24;
  }
  uint64_t v25 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)v22;
  *(void *)(a1 + 88) = v24;
  sub_1CA5B6EF4(v25, v23);
LABEL_26:
  uint64_t v26 = (_OWORD *)(a2 + 96);
  unint64_t v27 = *(void *)(a1 + 104);
  if (v27 >> 60 == 15)
  {
LABEL_29:
    *(_OWORD *)(a1 + 96) = *v26;
    goto LABEL_31;
  }
  unint64_t v28 = *(void *)(a2 + 104);
  if (v28 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 96);
    goto LABEL_29;
  }
  uint64_t v29 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)v26;
  *(void *)(a1 + 104) = v28;
  sub_1CA5B6EF4(v29, v27);
LABEL_31:
  uint64_t v30 = (_OWORD *)(a2 + 112);
  unint64_t v31 = *(void *)(a1 + 120);
  if (v31 >> 60 == 15)
  {
LABEL_34:
    *(_OWORD *)(a1 + 112) = *v30;
    goto LABEL_36;
  }
  unint64_t v32 = *(void *)(a2 + 120);
  if (v32 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 112);
    goto LABEL_34;
  }
  uint64_t v33 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)v30;
  *(void *)(a1 + 120) = v32;
  sub_1CA5B6EF4(v33, v31);
LABEL_36:
  uint64_t v34 = (_OWORD *)(a2 + 128);
  unint64_t v35 = *(void *)(a1 + 136);
  if (v35 >> 60 == 15)
  {
LABEL_39:
    *(_OWORD *)(a1 + 128) = *v34;
    goto LABEL_41;
  }
  unint64_t v36 = *(void *)(a2 + 136);
  if (v36 >> 60 == 15)
  {
    sub_1CA5FBED0(a1 + 128);
    goto LABEL_39;
  }
  uint64_t v37 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)v34;
  *(void *)(a1 + 136) = v36;
  sub_1CA5B6EF4(v37, v35);
LABEL_41:
  uint64_t v38 = (void *)(a2 + 144);
  unint64_t v39 = *(void *)(a1 + 152);
  if (v39 >> 60 != 15)
  {
    unint64_t v40 = *(void *)(a2 + 152);
    if (v40 >> 60 != 15)
    {
      uint64_t v41 = *(void *)(a1 + 144);
      *(void *)(a1 + 144) = *v38;
      *(void *)(a1 + 152) = v40;
      sub_1CA5B6EF4(v41, v39);
      return a1;
    }
    sub_1CA5FBED0(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)v38;
  return a1;
}

uint64_t getEnumTagSinglePayload for SEEMConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SEEMConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SEEMConfiguration()
{
  return &type metadata for SEEMConfiguration;
}

double sub_1CA5FC2F0@<D0>(_OWORD *a1@<X8>)
{
  sub_1CA5FC330((uint64_t)v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  double result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

double sub_1CA5FC330@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA608978);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CA602650;
  *(void *)(v2 + 32) = 0x656C626154646961;
  *(void *)(v2 + 40) = 0xE800000000000000;
  *(void *)(v2 + 48) = 195;
  *(_WORD *)(v2 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(unsigned char *)(v2 + 80) = -64;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 88) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 96) = 0xD000000000000012;
  *(void *)(v2 + 104) = 0x80000001CA60CD00;
  *(void *)(v2 + 112) = 196;
  *(_WORD *)(v2 + 120) = 256;
  *(_OWORD *)(v2 + 128) = 0u;
  *(unsigned char *)(v2 + 144) = -64;
  *(void *)(v2 + 152) = &unk_1F24D3CF8;
  *(void *)(v2 + 160) = 0xD000000000000014;
  *(void *)(v2 + 168) = 0x80000001CA60CD20;
  *(void *)(v2 + 176) = 197;
  *(_WORD *)(v2 + 184) = 256;
  *(_OWORD *)(v2 + 192) = 0u;
  *(unsigned char *)(v2 + 208) = -64;
  *(void *)(v2 + 216) = &unk_1F24D3D48;
  *(void *)(v2 + 224) = 0xD000000000000016;
  *(void *)(v2 + 232) = 0x80000001CA60CD40;
  *(void *)(v2 + 240) = 198;
  *(_WORD *)(v2 + 248) = 256;
  *(_OWORD *)(v2 + 256) = 0u;
  *(unsigned char *)(v2 + 272) = -64;
  *(void *)(v2 + 280) = &unk_1F24D3D98;
  *(void *)(v2 + 288) = 0x646F43686374616DLL;
  *(void *)(v2 + 296) = 0xEA00000000007365;
  *(void *)(v2 + 304) = 199;
  *(_WORD *)(v2 + 312) = 256;
  *(_OWORD *)(v2 + 320) = 0u;
  *(unsigned char *)(v2 + 336) = -64;
  *(void *)(v2 + 344) = &unk_1F24D3DE8;
  *(void *)(v2 + 352) = 0x646F437466696873;
  *(void *)(v2 + 360) = 0xEA00000000007365;
  *(void *)(v2 + 368) = 200;
  *(_WORD *)(v2 + 376) = 256;
  *(_OWORD *)(v2 + 384) = 0u;
  *(unsigned char *)(v2 + 400) = -64;
  *(void *)(v2 + 408) = &unk_1F24D3E38;
  *(void *)(v2 + 416) = 0x7367616C66;
  *(void *)(v2 + 424) = 0xE500000000000000;
  *(void *)(v2 + 432) = 201;
  *(_WORD *)(v2 + 440) = 256;
  *(_OWORD *)(v2 + 448) = 0u;
  *(unsigned char *)(v2 + 464) = -64;
  *(void *)(v2 + 472) = &unk_1F24D3E88;
  *(void *)(v2 + 480) = 0xD000000000000013;
  *(void *)(v2 + 488) = 0x80000001CA60CD60;
  *(void *)(v2 + 496) = 202;
  *(_WORD *)(v2 + 504) = 256;
  *(_OWORD *)(v2 + 512) = 0u;
  *(unsigned char *)(v2 + 528) = -64;
  *(void *)(v2 + 536) = &unk_1F24D3ED8;
  *(void *)(v2 + 544) = 0x696669646F4D6672;
  *(void *)(v2 + 552) = 0xEB00000000737265;
  *(void *)(v2 + 560) = 203;
  *(_WORD *)(v2 + 568) = 256;
  *(_OWORD *)(v2 + 576) = 0u;
  *(unsigned char *)(v2 + 592) = -64;
  *(void *)(v2 + 600) = &unk_1F24D3F28;
  *(void *)(v2 + 608) = 0xD000000000000018;
  *(void *)(v2 + 616) = 0x80000001CA60CD80;
  *(void *)(v2 + 624) = 204;
  *(_WORD *)(v2 + 632) = 256;
  *(_OWORD *)(v2 + 640) = 0u;
  *(unsigned char *)(v2 + 656) = -64;
  *(void *)(v2 + 664) = &unk_1F24D3F78;
  *(void *)a1 = 226;
  *(_WORD *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 64;
  *(void *)(a1 + 40) = v4;
  return result;
}

void *DERLogSetBlock(const void *a1)
{
  _Block_release((const void *)logBlock);
  double result = _Block_copy(a1);
  logBlocuint64_t k = (uint64_t)result;
  return result;
}

void DERLog(const char *a1, int a2, char *a3, ...)
{
  va_start(va, a3);
  long long v5 = 0;
  uint64_t v6 = 0;
  if (logBlock)
  {
    if (vasprintf(&v6, a3, va) >= 1 && v6)
    {
      asprintf(&v5, "%s/%d : %s", a1, a2, v6);
      (*(void (**)(void))(logBlock + 16))();
    }
    else
    {
      (*(void (**)(uint64_t, const char *))(logBlock + 16))(logBlock, "<failed to format 1>");
    }
  }
  free(v6);
  free(v5);
}

uint64_t DERDecodeItem(unsigned __int8 **a1, unint64_t *a2)
{
  return DERDecodeItemPB(a1, a2, 0);
}

uint64_t DERDecodeItemPB(unsigned __int8 **a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v6 = *a1;
  unint64_t v5 = (unint64_t)a1[1];
  DERLog("DERDecodeItemPB", 179, "rem 0x%zx", v5);
  unint64_t v7 = v5 - 1;
  if (v5 <= 1)
  {
    DERLog("DERDecodeItemPB", 186, "Not enough data for a tag/length, len 0x%zx");
    return 3;
  }
  int v10 = *v6;
  unint64_t v8 = v6 + 1;
  unsigned __int8 v9 = v10;
  unint64_t v11 = v10 & 0x1F;
  DERLog("DERDecodeItemPB", 193, "TB 0x%x, TN 0x%llx, long? %d", v10, v11, v11 == 31);
  if (v11 != 31)
  {
LABEL_11:
    *a2 = v11 | ((unint64_t)(v9 & 0xE0) << 56);
    unint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    unint64_t v17 = v7 - 1;
    if ((char)*v8 < 0)
    {
      unint64_t v18 = v16 & 0x7F;
      BOOL v20 = (v16 & 0x7F) <= 8 && v18 != 0 && v17 >= v18;
      if (!v20 || !*v15)
      {
        DERLog("DERDecodeItemPB", 237, "Underflow at len1 0x%x derLen 0x%zx");
        return 3;
      }
      unint64_t v22 = 0;
      uint64_t v23 = (v18 - 1);
      uint64_t v24 = v23 + 2;
      unint64_t v25 = v7 - 2;
      int v26 = v18;
      do
      {
        unsigned int v27 = *v15++;
        unint64_t v22 = v27 | (v22 << 8);
        --v26;
      }
      while (v26);
      unint64_t v28 = v25 - v23;
      DERLog("DERDecodeItemPB", 246, "LL lol 0x%x len 0x%zx rem 0x%zx", v18, v22, v25 - v23);
      if (!a3 && v22 > v28)
      {
        DERLog("DERDecodeItemPB", 249, "Underflow!");
        return 3;
      }
      if (v22 >= v28) {
        unint64_t v29 = v28;
      }
      else {
        unint64_t v29 = v22;
      }
      a2[1] = (unint64_t)&v8[v24];
      a2[2] = v29;
      if (a3)
      {
        uint64_t result = 0;
        *a3 = v22;
        return result;
      }
    }
    else
    {
      DERLog("DERDecodeItemPB", 262, "SL 0x%hhx rem 0x%zx", *v8, v7 - 1);
      if (!a3 && v17 < v16)
      {
        DERLog("DERDecodeItemPB", 266, "Underflow!", v30, v31);
        return 3;
      }
      if (v17 >= v16) {
        unint64_t v21 = v16;
      }
      else {
        unint64_t v21 = v7 - 1;
      }
      a2[1] = (unint64_t)v15;
      a2[2] = v21;
      if (a3)
      {
        uint64_t result = 0;
        *a3 = v16;
        return result;
      }
    }
    return 0;
  }
  if (*v8 == 128)
  {
    DERLog("DERDecodeItemPB", 206, "Invalid next byte 0x%x");
    return 3;
  }
  unint64_t v11 = 0;
  while (1)
  {
    uint64_t result = 3;
    if (v7 < 2) {
      return result;
    }
    unint64_t v13 = v11;
    if (v11 >> 57) {
      return result;
    }
    int v14 = (char)*v8++;
    DERLog("DERDecodeItemPB", 216, "LT byte 0x%x rem 0x%zx", v14, --v7);
    unint64_t v11 = v14 & 0x7F | (v11 << 7);
    if ((v14 & 0x80000000) == 0)
    {
      if (v13 >> 54) {
        return 3;
      }
      goto LABEL_11;
    }
  }
}

uint64_t DERDecodeSeqNext(unsigned __int8 **a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unsigned int v3 = a1[1];
  if (*a1 >= v3) {
    return 1;
  }
  v7[0] = *a1;
  v7[1] = (unsigned __int8 *)(v3 - v2);
  uint64_t result = DERDecodeItemPB(v7, a2, 0);
  if (!result) {
    *a1 = (unsigned __int8 *)(a2[1] + a2[2]);
  }
  return result;
}

uint64_t DERParseSequenceC(unsigned __int8 **a1, unsigned int a2, uint64_t a3, char *a4, size_t a5)
{
  unint64_t v8 = *a1;
  if (a5)
  {
    bzero(a4, a5);
    unsigned __int8 v9 = *a1;
  }
  else
  {
    unsigned __int8 v9 = *a1;
  }
  int v10 = &a1[1][(void)v9];
  unint64_t v32 = v9;
  uint64_t v33 = v10;
  if (!a2)
  {
LABEL_20:
    if (v32 != v33)
    {
      DERLog("DERParseSequenceC", 594, "End of spec but 0x%tx bytes remain", v33 - v32);
      return 3;
    }
    return 0;
  }
  uint64_t v11 = 0;
  unint64_t v12 = "Item %d off 0x%tx rem 0x%tx";
  unint64_t v28 = v8;
  unint64_t v13 = "Got tag 0x%llx";
  while (1)
  {
    int v14 = v32;
    DERLog("DERParseSequenceC", 509, v12, v11, v32 - v8, v33 - v32);
    unint64_t v30 = 0;
    long long v31 = 0uLL;
    uint64_t result = DERDecodeSeqNext(&v32, &v30);
    if (result) {
      break;
    }
    unint64_t v16 = v12;
    unint64_t v17 = v30;
    unint64_t v18 = v13;
    DERLog("DERParseSequenceC", 534, v13, v30);
    while (1)
    {
      if (v11 >= a2)
      {
        DERLog("DERParseSequenceC", 585, "No spec item for tag!");
        return 2;
      }
      uint64_t v19 = a3 + 32 * v11;
      __int16 v20 = *(_WORD *)(v19 + 16);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 2) != 0) {
        break;
      }
      DERLog("DERParseSequenceC", 540, "  specItem %u tag 0x%llx match %d", v11, v21, v17 == v21);
      if (v17 == v21) {
        goto LABEL_14;
      }
      if ((v20 & 1) == 0)
      {
        DERLog("DERParseSequenceC", 547, "!Opt specitem not matched!");
        return 2;
      }
      LODWORD(v11) = v11 + 1;
    }
    DERLog("DERParseSequenceC", 540, "  specItem %u tag 0x%llx match %d", v11, v21, 1);
LABEL_14:
    unint64_t v22 = (void *)(a3 + 32 * v11);
    unint64_t v23 = v22[3];
    if (v23 && !DERCheckConstraints(v23, (uint64_t)&v30)) {
      return 8;
    }
    if ((v20 & 4) == 0)
    {
      uint64_t v24 = &a4[*v22];
      *(_OWORD *)uint64_t v24 = v31;
      if ((v20 & 8) != 0)
      {
        uint64_t v25 = v31 - (void)v14 + *((void *)v24 + 1);
        *(void *)uint64_t v24 = v14;
        *((void *)v24 + 1) = v25;
      }
    }
    uint64_t v11 = (v11 + 1);
    unint64_t v12 = v16;
    unint64_t v8 = v28;
    unint64_t v13 = v18;
    if (v11 >= a2) {
      goto LABEL_20;
    }
  }
  if (result != 1) {
    return result;
  }
  if (v11 >= a2) {
    return 0;
  }
  unsigned __int16 v26 = v11;
  for (unint64_t i = (_WORD *)(a3 + 32 * v11 + 16); (*i & 1) != 0; i += 16)
  {
    uint64_t result = 0;
    if (a2 == ++v26) {
      return result;
    }
  }
  DERLog("DERParseSequenceC", 521, "Missing !opt specitem %d, tag 0x%llx", v26, *((void *)i - 1));
  return 5;
}

uint64_t DERCheckConstraints(unint64_t a1, uint64_t a2)
{
  if ((a1 & 1) != 0 && *(void *)(a2 + 16) < (unint64_t)((unsigned __int16)a1 >> 1))
  {
    DERLog("DERCheckConstraints", 476, "  failed min len constr %zu < %d");
    return 0;
  }
  if ((a1 & 0x10000) != 0 && *(void *)(a2 + 16) > (unint64_t)(a1 >> 17))
  {
    DERLog("DERCheckConstraints", 480, "  failed max length constr %zu > %d");
    return 0;
  }
  if ((a1 & 0x100000000) != 0 && *(void *)(a2 + 16) % ((a1 >> 33) & 0x7F))
  {
    DERLog("DERCheckConstraints", 484, "  failed div length constr %zu %% %d != 0");
    return 0;
  }
  return 1;
}

uint64_t DERParseUnsortedSequenceC(unsigned __int8 **a1, unsigned int a2, uint64_t a3, char *a4, size_t a5, char a6)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    for (unsigned __int16 i = 0; i < a2; ++i)
    {
      unint64_t v13 = (void *)(a3 + 32 * i + 8);
      unsigned __int16 v14 = i;
      while (a2 > ++v14)
      {
        if (*v13 == *(void *)(a3 + 32 * v14 + 8))
        {
          DERLog("DERParseUnsortedSequenceC", 618, "Duplicate tag 0x%llx in the spec at indices %d and %d", *v13, i, v14);
          return 9;
        }
      }
      if ((*(_WORD *)(a3 + 32 * i + 16) & 2) != 0)
      {
        DERLog("DERParseUnsortedSequenceC", 625, "Forbidden option DER_DEC_ASN_ANY for tag 0x%llx in the spec at index %d", *v13, i);
        return 2;
      }
    }
    v33[1] = v33;
    MEMORY[0x1F4188790]();
    unint64_t v16 = (char *)v33 - v15;
    bzero((char *)v33 - v15, v17);
    unint64_t v18 = *a1;
    if (a5) {
      bzero(a4, a5);
    }
    uint64_t v19 = *a1;
    uint64_t v21 = &a1[1][(void)*a1];
    if (a2 <= 1) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = a2;
    }
    uint64_t v38 = *a1;
    unint64_t v39 = v21;
    uint64_t v34 = v37;
    unint64_t v35 = (__int16 *)(a3 + 16);
    while (2)
    {
      DERLog("DERParseUnsortedSequenceC", 643, "Decoding offset 0x%tx, remaining 0x%tx", v19 - v18, v21 - v19);
      unint64_t v36 = 0;
      v37[0] = 0;
      v37[1] = 0;
      uint64_t result = DERDecodeSeqNext(&v38, &v36);
      if (result)
      {
        if (result == 1)
        {
          for (uint64_t j = (_WORD *)(a3 + 16); (*j & 1) != 0 || *v16; j += 16)
          {
            ++v16;
            if (!--v22) {
              return 0;
            }
          }
          DERLog("DERParseUnsortedSequenceC", 706, "Missing mandatory tag %llx", *((void *)j - 1));
          return 5;
        }
      }
      else
      {
        unint64_t v23 = v18;
        unint64_t v24 = v36;
        DERLog("DERParseUnsortedSequenceC", 658, "Got tag 0x%llx", v36);
        uint64_t v25 = v22;
        unsigned __int16 v26 = v35;
        unsigned int v27 = v16;
        while (v24 != *((void *)v26 - 1))
        {
          ++v27;
          v26 += 16;
          if (!--v25)
          {
            DERLog("DERParseUnsortedSequenceC", 665, "No spec item for tag 0x%llx!", v24);
            if ((a6 & 1) == 0) {
              return 2;
            }
            goto LABEL_29;
          }
        }
        if (*v27)
        {
          DERLog("DERParseUnsortedSequenceC", 673, "Found duplicate item for tag %llx", v24);
          return 9;
        }
        else
        {
          *unsigned int v27 = 1;
          unint64_t v28 = *((void *)v26 + 1);
          if (!v28 || DERCheckConstraints(v28, (uint64_t)&v36))
          {
            __int16 v29 = *v26;
            if ((*v26 & 4) == 0)
            {
              unint64_t v30 = &a4[*((void *)v26 - 2)];
              *(_OWORD *)unint64_t v30 = *v34;
              if ((v29 & 8) != 0)
              {
                uint64_t v31 = v37[0] - (void)v19 + *((void *)v30 + 1);
                *(void *)unint64_t v30 = v19;
                *((void *)v30 + 1) = v31;
              }
            }
LABEL_29:
            uint64_t v19 = v38;
            uint64_t v21 = v39;
            unint64_t v18 = v23;
            continue;
          }
          return 8;
        }
      }
      break;
    }
  }
  else
  {
    DERLog("DERParseUnsortedSequenceC", 609, "Zero length unsorted sequence?");
    return 6;
  }
  return result;
}

__n128 DERFindItem(unsigned __int8 **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = &a1[1][(void)*a1];
  v9[0] = *a1;
  v9[1] = v5;
  unint64_t v7 = 0;
  __n128 v8 = 0uLL;
  if (!DERDecodeSeqNext(v9, &v7))
  {
    while (v7 != a2)
    {
      if ((v7 & 0x2000000000000000) == 0 || DERFindItem(&v8, a2, a3))
      {
        unint64_t v7 = 0;
        __n128 v8 = 0uLL;
        if (!DERDecodeSeqNext(v9, &v7)) {
          continue;
        }
      }
      return result;
    }
    *(void *)a3 = a2;
    __n128 result = v8;
    *(__n128 *)(a3 + 8) = v8;
  }
  return result;
}

uint64_t DERDecodeSequenceWithBlock(unsigned __int8 **a1, uint64_t a2)
{
  unsigned int v3 = &a1[1][(void)*a1];
  v7[0] = *a1;
  v7[1] = v3;
  char v6 = 0;
  while (1)
  {
    memset(v5, 0, sizeof(v5));
    LODWORD(result) = DERDecodeSeqNext(v7, v5);
    if (result) {
      break;
    }
    LODWORD(result) = (*(uint64_t (**)(uint64_t, unint64_t *, char *))(a2 + 16))(a2, v5, &v6);
    if (result) {
      break;
    }
    if (v6) {
      return 0;
    }
  }
  if (result == 1) {
    return 0;
  }
  else {
    return result;
  }
}

void OVM::InterpreterImpl::RunSubroutine(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *((void *)__cxa_begin_catch(a1) + 1);
  uint64_t v5 = *(void *)(v4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v4;
  *(void *)(a3 + 16) = v5;
  __cxa_end_catch();
}

void OVM::InterpreterImpl::Evaluate()
{
}

uint64_t OVM::DeserializeExprsesion()
{
  OUTLINED_FUNCTION_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t std::make_unique[abi:ne180100]<OVM::ObjCMessage,std::unique_ptr<OVM::Expression>,std::vector<std::unique_ptr<OVM::Expression>>,std::string,OVM::TypeInfo::Type>(void **a1, uint64_t *a2)
{
  uint64_t v5 = a1;
  std::vector<std::unique_ptr<OVM::Expression>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t result = *a2;
  *a2 = 0;
  if (result)
  {
    OUTLINED_FUNCTION_0();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  return result;
}

void CircularBufferInit_cold_1()
{
  __assert_rtn("CircularBufferInit", "CircularBuffer.c", 46, "cb->buff_start + memSize - CIRCULAR_BUFFER_OVERHEAD == cb->buff_end");
}

void CircularBufferAddScattered_cold_1()
{
}

void ReadCircular_cold_1()
{
  __assert_rtn("ReadCircular", "CircularBuffer.c", 147, "to_end >= 0");
}

void CircularWrite_cold_1()
{
  __assert_rtn("CircularWrite", "CircularBuffer.c", 177, "to_end >= 0");
}

uint64_t sub_1CA5FD3E8()
{
  return MEMORY[0x1F40E3450]();
}

uint64_t sub_1CA5FD3F8()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_1CA5FD408()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1CA5FD418()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1CA5FD428()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1CA5FD438()
{
  return MEMORY[0x1F40E3820]();
}

uint64_t sub_1CA5FD448()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_1CA5FD458()
{
  return MEMORY[0x1F40E3B70]();
}

uint64_t sub_1CA5FD4A8()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1CA5FD4B8()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1CA5FD4C8()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1CA5FD4D8()
{
  return MEMORY[0x1F40E4868]();
}

uint64_t sub_1CA5FD4E8()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_1CA5FD4F8()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_1CA5FD508()
{
  return MEMORY[0x1F40E4C30]();
}

uint64_t sub_1CA5FD518()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_1CA5FD528()
{
  return MEMORY[0x1F40E4CA0]();
}

uint64_t sub_1CA5FD538()
{
  return MEMORY[0x1F40E4CA8]();
}

uint64_t sub_1CA5FD548()
{
  return MEMORY[0x1F40E4CD8]();
}

uint64_t sub_1CA5FD558()
{
  return MEMORY[0x1F40E4CF8]();
}

uint64_t sub_1CA5FD568()
{
  return MEMORY[0x1F40E4D10]();
}

uint64_t sub_1CA5FD578()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1CA5FD588()
{
  return MEMORY[0x1F40E4D58]();
}

uint64_t sub_1CA5FD598()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1CA5FD5A8()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1CA5FD5B8()
{
  return MEMORY[0x1F40E4DF0]();
}

uint64_t sub_1CA5FD5C8()
{
  return MEMORY[0x1F40E4E30]();
}

uint64_t sub_1CA5FD5D8()
{
  return MEMORY[0x1F40E4E48]();
}

uint64_t sub_1CA5FD5E8()
{
  return MEMORY[0x1F40E4E50]();
}

uint64_t sub_1CA5FD5F8()
{
  return MEMORY[0x1F40E4E60]();
}

uint64_t sub_1CA5FD608()
{
  return MEMORY[0x1F40E4E70]();
}

uint64_t sub_1CA5FD618()
{
  return MEMORY[0x1F40E4EC8]();
}

uint64_t sub_1CA5FD628()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1CA5FD638()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1CA5FD648()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1CA5FD658()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t sub_1CA5FD668()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1CA5FD678()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1CA5FD688()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1CA5FD698()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1CA5FD6A8()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1CA5FD6B8()
{
  return MEMORY[0x1F40DFF38]();
}

uint64_t sub_1CA5FD6C8()
{
  return MEMORY[0x1F40DFF40]();
}

uint64_t sub_1CA5FD6D8()
{
  return MEMORY[0x1F40DFF58]();
}

uint64_t sub_1CA5FD6E8()
{
  return MEMORY[0x1F40DFF60]();
}

uint64_t sub_1CA5FD6F8()
{
  return MEMORY[0x1F40DFF70]();
}

uint64_t sub_1CA5FD708()
{
  return MEMORY[0x1F40DFF78]();
}

uint64_t sub_1CA5FD718()
{
  return MEMORY[0x1F40DFF80]();
}

uint64_t sub_1CA5FD728()
{
  return MEMORY[0x1F40DFF88]();
}

uint64_t sub_1CA5FD738()
{
  return MEMORY[0x1F40DFF90]();
}

uint64_t sub_1CA5FD748()
{
  return MEMORY[0x1F40E0128]();
}

uint64_t sub_1CA5FD758()
{
  return MEMORY[0x1F40E0130]();
}

uint64_t sub_1CA5FD768()
{
  return MEMORY[0x1F40E0138]();
}

uint64_t sub_1CA5FD778()
{
  return MEMORY[0x1F40E0140]();
}

uint64_t sub_1CA5FD788()
{
  return MEMORY[0x1F40E0148]();
}

uint64_t sub_1CA5FD798()
{
  return MEMORY[0x1F40E0150]();
}

uint64_t sub_1CA5FD7A8()
{
  return MEMORY[0x1F40E0160]();
}

uint64_t sub_1CA5FD7B8()
{
  return MEMORY[0x1F40E0168]();
}

uint64_t sub_1CA5FD7C8()
{
  return MEMORY[0x1F40E0170]();
}

uint64_t sub_1CA5FD7D8()
{
  return MEMORY[0x1F40E0178]();
}

uint64_t sub_1CA5FD7E8()
{
  return MEMORY[0x1F40E01B8]();
}

uint64_t sub_1CA5FD7F8()
{
  return MEMORY[0x1F40E01C0]();
}

uint64_t sub_1CA5FD808()
{
  return MEMORY[0x1F40E04A8]();
}

uint64_t sub_1CA5FD818()
{
  return MEMORY[0x1F40E04B0]();
}

uint64_t sub_1CA5FD828()
{
  return MEMORY[0x1F40E04D0]();
}

uint64_t sub_1CA5FD838()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1CA5FD848()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1CA5FD858()
{
  return MEMORY[0x1F4183338]();
}

uint64_t sub_1CA5FD868()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1CA5FD878()
{
  return MEMORY[0x1F4183648]();
}

uint64_t sub_1CA5FD888()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1CA5FD898()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1CA5FD8A8()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1CA5FD8B8()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1CA5FD8C8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1CA5FD8D8()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1CA5FD8E8()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1CA5FD8F8()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1CA5FD908()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1CA5FD918()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1CA5FD928()
{
  return MEMORY[0x1F4183B48]();
}

uint64_t sub_1CA5FD938()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1CA5FD948()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1CA5FD958()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1CA5FD968()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1CA5FD978()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1CA5FD988()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1CA5FD998()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1CA5FD9A8()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1CA5FD9B8()
{
  return MEMORY[0x1F40E6538]();
}

uint64_t sub_1CA5FD9C8()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1CA5FD9D8()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1CA5FD9E8()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1CA5FD9F8()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1CA5FDA08()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1CA5FDA18()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1CA5FDA28()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1CA5FDA38()
{
  return MEMORY[0x1F40E6840]();
}

uint64_t sub_1CA5FDA48()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1CA5FDA58()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1CA5FDA68()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1CA5FDA78()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1CA5FDA88()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1CA5FDA98()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1CA5FDAB8()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1CA5FDAC8()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1CA5FDAD8()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1CA5FDAE8()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1CA5FDAF8()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1CA5FDB08()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1CA5FDB18()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1CA5FDB28()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1CA5FDB38()
{
  return MEMORY[0x1F4184D48]();
}

uint64_t sub_1CA5FDB48()
{
  return MEMORY[0x1F4184D50]();
}

uint64_t sub_1CA5FDB58()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1CA5FDB68()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1CA5FDB78()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1CA5FDB88()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1CA5FDB98()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1CA5FDBA8()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1CA5FDBB8()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1CA5FDBC8()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1CA5FDBD8()
{
  return MEMORY[0x1F4185010]();
}

uint64_t sub_1CA5FDBE8()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1CA5FDBF8()
{
  return MEMORY[0x1F4185180]();
}

uint64_t sub_1CA5FDC08()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1CA5FDC18()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1CA5FDC28()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1CA5FDC38()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1CA5FDC48()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1CA5FDC58()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1CA5FDC68()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1CA5FDC78()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1CA5FDC88()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1CA5FDC98()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1CA5FDCA8()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1CA5FDCB8()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1CA5FDCC8()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1CA5FDCD8()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1CA5FDCE8()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1CA5FDCF8()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1CA5FDD08()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1CA5FDD18()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1CA5FDD28()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1CA5FDD38()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_1CA5FDD48()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1CA5FDD58()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1CA5FDD68()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1CA5FDD78()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1CA5FDD88()
{
  return MEMORY[0x1F4185F10]();
}

uint64_t sub_1CA5FDD98()
{
  return MEMORY[0x1F4185F40]();
}

uint64_t sub_1CA5FDDA8()
{
  return MEMORY[0x1F4185F48]();
}

uint64_t sub_1CA5FDDB8()
{
  return MEMORY[0x1F4186318]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9770](data, *(void *)&len, md);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1F412F958]();
}

void NSLog(NSString *format, ...)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

const char *__cdecl std::exception::what(const std::exception *this)
{
  return (const char *)MEMORY[0x1F417E430](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::runtime_error *__cdecl std::runtime_error::runtime_error(std::runtime_error *this, const char *a2)
{
  return (std::runtime_error *)MEMORY[0x1F417E4B8](this, a2);
}

std::runtime_error *__cdecl std::runtime_error::runtime_error(std::runtime_error *this, const std::string *a2)
{
  return (std::runtime_error *)MEMORY[0x1F417E4C0](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5C0](this, __s, __n);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x1F417E670](this, __str);
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x1F417EEA0]();
}

std::bad_cast *__cdecl std::bad_cast::bad_cast(std::bad_cast *this)
{
  return (std::bad_cast *)MEMORY[0x1F417EEA8](this);
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_rethrow(void)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1F40C9CD8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
}

int asprintf(char **a1, const char *a2, ...)
{
  return MEMORY[0x1F40CA440](a1, a2);
}

void bzero(void *a1, size_t a2)
{
}

size_t compression_decode_buffer(uint8_t *dst_buffer, size_t dst_size, const uint8_t *src_buffer, size_t src_size, void *scratch_buffer, compression_algorithm algorithm)
{
  return MEMORY[0x1F417F0A0](dst_buffer, dst_size, src_buffer, src_size, scratch_buffer, *(void *)&algorithm);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

long double exp2(long double __x)
{
  MEMORY[0x1F40CBFE8](__x);
  return result;
}

void free(void *a1)
{
}

long double ldexp(long double __x, int __e)
{
  MEMORY[0x1F40CC800](*(void *)&__e, __x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_state_add_handler()
{
  return MEMORY[0x1F40CD570]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1F40CD650]();
}

int printf(const char *a1, ...)
{
  return MEMORY[0x1F40CD838](a1);
}

SEL sel_getUid(const char *str)
{
  return (SEL)MEMORY[0x1F4181B30](str);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2E0](__str, __endptr, *(void *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1F41864A8]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

int vasprintf(char **a1, const char *a2, va_list a3)
{
  return MEMORY[0x1F40CE680](a1, a2, a3);
}